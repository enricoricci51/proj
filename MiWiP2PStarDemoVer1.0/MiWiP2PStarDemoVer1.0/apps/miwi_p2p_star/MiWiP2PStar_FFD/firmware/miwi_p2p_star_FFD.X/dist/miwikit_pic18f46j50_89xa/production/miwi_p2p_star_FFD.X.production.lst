

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Sun Feb 14 03:48:58 2016

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   104                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   115                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   116                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   117  0000                     
   118                           	psect	idataBANK0
   119  00422A                     __pidataBANK0:
   120                           	opt stack 0
   121                           
   122                           ;initializer for _AdditionalNodeID
   123  00422A  01                 	db	1
   124                           
   125                           ;initializer for _ConnMode
   126  00422B  03                 	db	3
   127                           
   128                           	psect	mediumconst
   129  00FC86                     __pmediumconst:
   130                           	opt stack 0
   131  00FC86  00                 	db	0
   132  00FC87                     _MiWi:
   133                           	opt stack 0
   134  00FC87  20                 	db	32
   135  00FC88  B2                 	db	178
   136  00FC89  20                 	db	32
   137  00FC8A  20                 	db	32
   138  00FC8B  20                 	db	32
   139  00FC8C  B2                 	db	178
   140  00FC8D  20                 	db	32
   141  00FC8E  20                 	db	32
   142  00FC8F  B2                 	db	178
   143  00FC90  20                 	db	32
   144  00FC91  B2                 	db	178
   145  00FC92  20                 	db	32
   146  00FC93  20                 	db	32
   147  00FC94  20                 	db	32
   148  00FC95  20                 	db	32
   149  00FC96  20                 	db	32
   150  00FC97  B2                 	db	178
   151  00FC98  20                 	db	32
   152  00FC99  B2                 	db	178
   153  00FC9A  0D                 	db	13
   154  00FC9B  0A                 	db	10
   155  00FC9C  B2                 	db	178
   156  00FC9D  20                 	db	32
   157  00FC9E  B2                 	db	178
   158  00FC9F  20                 	db	32
   159  00FCA0  B2                 	db	178
   160  00FCA1  20                 	db	32
   161  00FCA2  B2                 	db	178
   162  00FCA3  20                 	db	32
   163  00FCA4  20                 	db	32
   164  00FCA5  20                 	db	32
   165  00FCA6  B2                 	db	178
   166  00FCA7  20                 	db	32
   167  00FCA8  20                 	db	32
   168  00FCA9  B2                 	db	178
   169  00FCAA  20                 	db	32
   170  00FCAB  20                 	db	32
   171  00FCAC  B2                 	db	178
   172  00FCAD  20                 	db	32
   173  00FCAE  20                 	db	32
   174  00FCAF  0D                 	db	13
   175  00FCB0  0A                 	db	10
   176  00FCB1  B2                 	db	178
   177  00FCB2  20                 	db	32
   178  00FCB3  20                 	db	32
   179  00FCB4  B2                 	db	178
   180  00FCB5  20                 	db	32
   181  00FCB6  20                 	db	32
   182  00FCB7  B2                 	db	178
   183  00FCB8  20                 	db	32
   184  00FCB9  B2                 	db	178
   185  00FCBA  20                 	db	32
   186  00FCBB  B2                 	db	178
   187  00FCBC  20                 	db	32
   188  00FCBD  20                 	db	32
   189  00FCBE  B2                 	db	178
   190  00FCBF  20                 	db	32
   191  00FCC0  20                 	db	32
   192  00FCC1  B2                 	db	178
   193  00FCC2  20                 	db	32
   194  00FCC3  B2                 	db	178
   195  00FCC4  0D                 	db	13
   196  00FCC5  0A                 	db	10
   197  00FCC6  B2                 	db	178
   198  00FCC7  20                 	db	32
   199  00FCC8  20                 	db	32
   200  00FCC9  B2                 	db	178
   201  00FCCA  20                 	db	32
   202  00FCCB  20                 	db	32
   203  00FCCC  B2                 	db	178
   204  00FCCD  20                 	db	32
   205  00FCCE  B2                 	db	178
   206  00FCCF  20                 	db	32
   207  00FCD0  20                 	db	32
   208  00FCD1  B2                 	db	178
   209  00FCD2  20                 	db	32
   210  00FCD3  B2                 	db	178
   211  00FCD4  20                 	db	32
   212  00FCD5  B2                 	db	178
   213  00FCD6  20                 	db	32
   214  00FCD7  20                 	db	32
   215  00FCD8  B2                 	db	178
   216  00FCD9  0D                 	db	13
   217  00FCDA  0A                 	db	10
   218  00FCDB  B2                 	db	178
   219  00FCDC  20                 	db	32
   220  00FCDD  20                 	db	32
   221  00FCDE  B2                 	db	178
   222  00FCDF  20                 	db	32
   223  00FCE0  20                 	db	32
   224  00FCE1  B2                 	db	178
   225  00FCE2  20                 	db	32
   226  00FCE3  B2                 	db	178
   227  00FCE4  20                 	db	32
   228  00FCE5  20                 	db	32
   229  00FCE6  20                 	db	32
   230  00FCE7  B2                 	db	178
   231  00FCE8  20                 	db	32
   232  00FCE9  B2                 	db	178
   233  00FCEA  20                 	db	32
   234  00FCEB  20                 	db	32
   235  00FCEC  20                 	db	32
   236  00FCED  B2                 	db	178
   237  00FCEE  0D                 	db	13
   238  00FCEF  0A                 	db	10
   239  00FCF0  20                 	db	32
   240  00FCF1  20                 	db	32
   241  00FCF2  20                 	db	32
   242  00FCF3  20                 	db	32
   243  00FCF4  20                 	db	32
   244  00FCF5  20                 	db	32
   245  00FCF6  20                 	db	32
   246  00FCF7  20                 	db	32
   247  00FCF8  20                 	db	32
   248  00FCF9  20                 	db	32
   249  00FCFA  20                 	db	32
   250  00FCFB  20                 	db	32
   251  00FCFC  20                 	db	32
   252  00FCFD  20                 	db	32
   253  00FCFE  20                 	db	32
   254  00FCFF  20                 	db	32
   255  00FD00  20                 	db	32
   256  00FD01  20                 	db	32
   257  00FD02  20                 	db	32
   258  00FD03  0D                 	db	13
   259  00FD04  0A                 	db	10
   260  00FD05                     __end_of_MiWi:
   261                           	opt stack 0
   262  00FD05                     _InitConfigRegs:
   263                           	opt stack 0
   264  00FD05  0026               	dw	38
   265  00FD07  0284               	dw	644
   266  00FD09  0409               	dw	1033
   267  00FD0B  0609               	dw	1545
   268  00FD0D  080C               	dw	2060
   269  00FD0F  0AC1               	dw	2753
   270  00FD11  0C77               	dw	3191
   271  00FD13  0E63               	dw	3683
   272  00FD15  1019               	dw	4121
   273  00FD17  1200               	dw	4608
   274  00FD19  1400               	dw	5120
   275  00FD1B  1600               	dw	5632
   276  00FD1D  1838               	dw	6200
   277  00FD1F  1AC8               	dw	6856
   278  00FD21  1C0D               	dw	7181
   279  00FD23  1E00               	dw	7680
   280  00FD25  2072               	dw	8306
   281  00FD27  2238               	dw	8760
   282  00FD29  2438               	dw	9272
   283  00FD2B  2607               	dw	9735
   284  00FD2D  2800               	dw	10240
   285  00FD2F  2A00               	dw	10752
   286  00FD31  2C69               	dw	11369
   287  00FD33  2E81               	dw	11905
   288  00FD35  307E               	dw	12414
   289  00FD37  3296               	dw	12950
   290  00FD39  34F8               	dw	13560
   291  00FD3B  3688               	dw	13960
   292  00FD3D  3840               	dw	14400
   293  00FD3F  3A00               	dw	14848
   294  00FD41  3CE8               	dw	15592
   295  00FD43  3E00               	dw	15872
   296  00FD45                     __end_of_InitConfigRegs:
   297                           	opt stack 0
   298  00FD45                     _PVALUE:
   299                           	opt stack 0
   300  00FD45  53                 	db	83
   301  00FD46  53                 	db	83
   302  00FD47  53                 	db	83
   303  00FD48  53                 	db	83
   304  00FD49  53                 	db	83
   305  00FD4A  53                 	db	83
   306  00FD4B  53                 	db	83
   307  00FD4C  53                 	db	83
   308  00FD4D  53                 	db	83
   309  00FD4E  53                 	db	83
   310  00FD4F  53                 	db	83
   311  00FD50  53                 	db	83
   312  00FD51  53                 	db	83
   313  00FD52  53                 	db	83
   314  00FD53  53                 	db	83
   315  00FD54  53                 	db	83
   316  00FD55  53                 	db	83
   317  00FD56  53                 	db	83
   318  00FD57  53                 	db	83
   319  00FD58  53                 	db	83
   320  00FD59  54                 	db	84
   321  00FD5A  54                 	db	84
   322  00FD5B  54                 	db	84
   323  00FD5C  54                 	db	84
   324  00FD5D  54                 	db	84
   325  00FD5E  54                 	db	84
   326  00FD5F  54                 	db	84
   327  00FD60  54                 	db	84
   328  00FD61  54                 	db	84
   329  00FD62  54                 	db	84
   330  00FD63  54                 	db	84
   331  00FD64  54                 	db	84
   332  00FD65                     __end_of_PVALUE:
   333                           	opt stack 0
   334  00FD65                     _SVALUE:
   335                           	opt stack 0
   336  00FD65  1D                 	db	29
   337  00FD66  20                 	db	32
   338  00FD67  22                 	db	34
   339  00FD68  25                 	db	37
   340  00FD69  28                 	db	40
   341  00FD6A  2B                 	db	43
   342  00FD6B  2E                 	db	46
   343  00FD6C  30                 	db	48
   344  00FD6D  33                 	db	51
   345  00FD6E  36                 	db	54
   346  00FD6F  39                 	db	57
   347  00FD70  3C                 	db	60
   348  00FD71  3F                 	db	63
   349  00FD72  41                 	db	65
   350  00FD73  44                 	db	68
   351  00FD74  47                 	db	71
   352  00FD75  4A                 	db	74
   353  00FD76  4D                 	db	77
   354  00FD77  4F                 	db	79
   355  00FD78  52                 	db	82
   356  00FD79  0A                 	db	10
   357  00FD7A  0D                 	db	13
   358  00FD7B  10                 	db	16
   359  00FD7C  12                 	db	18
   360  00FD7D  15                 	db	21
   361  00FD7E  18                 	db	24
   362  00FD7F  1B                 	db	27
   363  00FD80  1E                 	db	30
   364  00FD81  20                 	db	32
   365  00FD82  23                 	db	35
   366  00FD83  26                 	db	38
   367  00FD84  29                 	db	41
   368  00FD85                     __end_of_SVALUE:
   369                           	opt stack 0
   370  00FD85                     _octpowers:
   371                           	opt stack 0
   372  00FD85  0001               	dw	1
   373  00FD87  0008               	dw	8
   374  00FD89  0040               	dw	64
   375  00FD8B  0200               	dw	512
   376  00FD8D  1000               	dw	4096
   377  00FD8F  8000               	dw	32768
   378  00FD91                     __end_of_octpowers:
   379                           	opt stack 0
   380  00FD91                     _dpowers:
   381                           	opt stack 0
   382  00FD91  0001               	dw	1
   383  00FD93  000A               	dw	10
   384  00FD95  0064               	dw	100
   385  00FD97  03E8               	dw	1000
   386  00FD99  2710               	dw	10000
   387  00FD9B                     __end_of_dpowers:
   388                           	opt stack 0
   389  00FD9B                     _hexpowers:
   390                           	opt stack 0
   391  00FD9B  0001               	dw	1
   392  00FD9D  0010               	dw	16
   393  00FD9F  0100               	dw	256
   394  00FDA1  1000               	dw	4096
   395  00FDA3                     __end_of_hexpowers:
   396                           	opt stack 0
   397  0000                     _PPSCONbits	set	3839
   398  0000                     _RPINR1	set	3815
   399  0000                     _RPINR21	set	3835
   400  0000                     _RPOR19	set	3801
   401  0000                     _RPOR21	set	3803
   402  0000                     _ANCON0	set	3912
   403  0000                     _ANCON1	set	3913
   404  0000                     _TMR1	set	4046
   405  0000                     _EECON2	set	4007
   406  0000                     _INTCON2bits	set	4081
   407  0000                     _INTCON3bits	set	4080
   408  0000                     _INTCONbits	set	4082
   409  0000                     _LATAbits	set	3977
   410  0000                     _LATCbits	set	3979
   411  0000                     _LATDbits	set	3980
   412  0000                     _LATEbits	set	3981
   413  0000                     _OSCCON	set	4051
   414  0000                     _OSCTUNEbits	set	3995
   415  0000                     _PIE1bits	set	3997
   416  0000                     _PIR1bits	set	3998
   417  0000                     _PIR3bits	set	4004
   418  0000                     _PORTBbits	set	3969
   419  0000                     _SSP1BUF	set	4041
   420  0000                     _SSP1CON1	set	4038
   421  0000                     _SSP1CON1bits	set	4038
   422  0000                     _SSP1STAT	set	4039
   423  0000                     _SSP1STATbits	set	4039
   424  0000                     _SSP2BUF	set	3957
   425  0000                     _SSP2CON1	set	3954
   426  0000                     _SSP2CON1bits	set	3954
   427  0000                     _SSP2STAT	set	3955
   428  0000                     _T1CON	set	4045
   429  0000                     _T1CONbits	set	4045
   430  0000                     _T1GCON	set	3994
   431  0000                     _TMR0L	set	4054
   432  0000                     _TMR1H	set	4047
   433  0000                     _TMR1L	set	4046
   434  0000                     _TRISAbits	set	3986
   435  0000                     _TRISBbits	set	3987
   436  0000                     _TRISCbits	set	3988
   437  0000                     _TRISDbits	set	3989
   438  0000                     _TRISEbits	set	3990
   439  0000                     _WDTCONbits	set	4032
   440  00FDA3                     STR_8:
   441  00FDA3  0D                 	db	13
   442  00FDA4  0A                 	db	10
   443  00FDA5  0D                 	db	13
   444  00FDA6  0A                 	db	10
   445  00FDA7  43                 	db	67	;'C'
   446  00FDA8  6F                 	db	111	;'o'
   447  00FDA9  6E                 	db	110	;'n'
   448  00FDAA  6E                 	db	110	;'n'
   449  00FDAB  65                 	db	101	;'e'
   450  00FDAC  63                 	db	99	;'c'
   451  00FDAD  74                 	db	116	;'t'
   452  00FDAE  69                 	db	105	;'i'
   453  00FDAF  6F                 	db	111	;'o'
   454  00FDB0  6E                 	db	110	;'n'
   455  00FDB1  20                 	db	32
   456  00FDB2  20                 	db	32
   457  00FDB3  20                 	db	32
   458  00FDB4  20                 	db	32
   459  00FDB5  20                 	db	32
   460  00FDB6  50                 	db	80	;'P'
   461  00FDB7  65                 	db	101	;'e'
   462  00FDB8  65                 	db	101	;'e'
   463  00FDB9  72                 	db	114	;'r'
   464  00FDBA  4C                 	db	76	;'L'
   465  00FDBB  6F                 	db	111	;'o'
   466  00FDBC  6E                 	db	110	;'n'
   467  00FDBD  67                 	db	103	;'g'
   468  00FDBE  41                 	db	65	;'A'
   469  00FDBF  64                 	db	100	;'d'
   470  00FDC0  64                 	db	100	;'d'
   471  00FDC1  72                 	db	114	;'r'
   472  00FDC2  65                 	db	101	;'e'
   473  00FDC3  73                 	db	115	;'s'
   474  00FDC4  73                 	db	115	;'s'
   475  00FDC5  20                 	db	32
   476  00FDC6  20                 	db	32
   477  00FDC7  20                 	db	32
   478  00FDC8  20                 	db	32
   479  00FDC9  20                 	db	32
   480  00FDCA  50                 	db	80	;'P'
   481  00FDCB  65                 	db	101	;'e'
   482  00FDCC  65                 	db	101	;'e'
   483  00FDCD  72                 	db	114	;'r'
   484  00FDCE  49                 	db	73	;'I'
   485  00FDCF  6E                 	db	110	;'n'
   486  00FDD0  66                 	db	102	;'f'
   487  00FDD1  6F                 	db	111	;'o'
   488  00FDD2  0D                 	db	13
   489  00FDD3  0A                 	db	10
   490  00FDD4  00                 	db	0
   491  00FDD5                     STR_16:
   492  00FDD5  43                 	db	67	;'C'
   493  00FDD6  6F                 	db	111	;'o'
   494  00FDD7  6E                 	db	110	;'n'
   495  00FDD8  6E                 	db	110	;'n'
   496  00FDD9  65                 	db	101	;'e'
   497  00FDDA  63                 	db	99	;'c'
   498  00FDDB  74                 	db	116	;'t'
   499  00FDDC  69                 	db	105	;'i'
   500  00FDDD  6E                 	db	110	;'n'
   501  00FDDE  67                 	db	103	;'g'
   502  00FDDF  20                 	db	32
   503  00FDE0  50                 	db	80	;'P'
   504  00FDE1  65                 	db	101	;'e'
   505  00FDE2  65                 	db	101	;'e'
   506  00FDE3  72                 	db	114	;'r'
   507  00FDE4  20                 	db	32
   508  00FDE5  20                 	db	32
   509  00FDE6  6F                 	db	111	;'o'
   510  00FDE7  6E                 	db	110	;'n'
   511  00FDE8  20                 	db	32
   512  00FDE9  43                 	db	67	;'C'
   513  00FDEA  68                 	db	104	;'h'
   514  00FDEB  61                 	db	97	;'a'
   515  00FDEC  6E                 	db	110	;'n'
   516  00FDED  6E                 	db	110	;'n'
   517  00FDEE  65                 	db	101	;'e'
   518  00FDEF  6C                 	db	108	;'l'
   519  00FDF0  20                 	db	32
   520  00FDF1  25                 	db	37
   521  00FDF2  64                 	db	100	;'d'
   522  00FDF3  20                 	db	32
   523  00FDF4  00                 	db	0
   524  00FDF5                     STR_26:
   525  00FDF5  53                 	db	83	;'S'
   526  00FDF6  57                 	db	87	;'W'
   527  00FDF7  31                 	db	49	;'1'
   528  00FDF8  20                 	db	32
   529  00FDF9  3A                 	db	58	;':'
   530  00FDFA  20                 	db	32
   531  00FDFB  55                 	db	85	;'U'
   532  00FDFC  6E                 	db	110	;'n'
   533  00FDFD  69                 	db	105	;'i'
   534  00FDFE  63                 	db	99	;'c'
   535  00FDFF  61                 	db	97	;'a'
   536  00FE00  73                 	db	115	;'s'
   537  00FE01  74                 	db	116	;'t'
   538  00FE02  20                 	db	32
   539  00FE03  20                 	db	32
   540  00FE04  20                 	db	32
   541  00FE05  53                 	db	83	;'S'
   542  00FE06  57                 	db	87	;'W'
   543  00FE07  32                 	db	50	;'2'
   544  00FE08  20                 	db	32
   545  00FE09  3A                 	db	58	;':'
   546  00FE0A  20                 	db	32
   547  00FE0B  4E                 	db	78	;'N'
   548  00FE0C  65                 	db	101	;'e'
   549  00FE0D  78                 	db	120	;'x'
   550  00FE0E  74                 	db	116	;'t'
   551  00FE0F  20                 	db	32
   552  00FE10  4E                 	db	78	;'N'
   553  00FE11  6F                 	db	111	;'o'
   554  00FE12  64                 	db	100	;'d'
   555  00FE13  65                 	db	101	;'e'
   556  00FE14  00                 	db	0
   557  00FE15                     STR_17:
   558  00FE15  20                 	db	32
   559  00FE16  43                 	db	67	;'C'
   560  00FE17  6F                 	db	111	;'o'
   561  00FE18  6E                 	db	110	;'n'
   562  00FE19  6E                 	db	110	;'n'
   563  00FE1A  65                 	db	101	;'e'
   564  00FE1B  63                 	db	99	;'c'
   565  00FE1C  74                 	db	116	;'t'
   566  00FE1D  65                 	db	101	;'e'
   567  00FE1E  64                 	db	100	;'d'
   568  00FE1F  20                 	db	32
   569  00FE20  50                 	db	80	;'P'
   570  00FE21  65                 	db	101	;'e'
   571  00FE22  65                 	db	101	;'e'
   572  00FE23  72                 	db	114	;'r'
   573  00FE24  20                 	db	32
   574  00FE25  20                 	db	32
   575  00FE26  6F                 	db	111	;'o'
   576  00FE27  6E                 	db	110	;'n'
   577  00FE28  20                 	db	32
   578  00FE29  43                 	db	67	;'C'
   579  00FE2A  68                 	db	104	;'h'
   580  00FE2B  61                 	db	97	;'a'
   581  00FE2C  6E                 	db	110	;'n'
   582  00FE2D  6E                 	db	110	;'n'
   583  00FE2E  65                 	db	101	;'e'
   584  00FE2F  6C                 	db	108	;'l'
   585  00FE30  20                 	db	32
   586  00FE31  25                 	db	37
   587  00FE32  64                 	db	100	;'d'
   588  00FE33  00                 	db	0
   589  00FE34                     STR_15:
   590  00FE34  53                 	db	83	;'S'
   591  00FE35  69                 	db	105	;'i'
   592  00FE36  6D                 	db	109	;'m'
   593  00FE37  70                 	db	112	;'p'
   594  00FE38  6C                 	db	108	;'l'
   595  00FE39  65                 	db	101	;'e'
   596  00FE3A  20                 	db	32
   597  00FE3B  53                 	db	83	;'S'
   598  00FE3C  54                 	db	84	;'T'
   599  00FE3D  41                 	db	65	;'A'
   600  00FE3E  52                 	db	82	;'R'
   601  00FE3F  20                 	db	32
   602  00FE40  20                 	db	32
   603  00FE41  20                 	db	32
   604  00FE42  20                 	db	32
   605  00FE43  20                 	db	32
   606  00FE44  4D                 	db	77	;'M'
   607  00FE45  52                 	db	82	;'R'
   608  00FE46  46                 	db	70	;'F'
   609  00FE47  38                 	db	56	;'8'
   610  00FE48  39                 	db	57	;'9'
   611  00FE49  58                 	db	88	;'X'
   612  00FE4A  41                 	db	65	;'A'
   613  00FE4B  20                 	db	32
   614  00FE4C  4E                 	db	78	;'N'
   615  00FE4D  6F                 	db	111	;'o'
   616  00FE4E  64                 	db	100	;'d'
   617  00FE4F  65                 	db	101	;'e'
   618  00FE50  00                 	db	0
   619  00FE51                     STR_25:
   620  00FE51  50                 	db	80	;'P'
   621  00FE52  43                 	db	67	;'C'
   622  00FE53  20                 	db	32
   623  00FE54  3A                 	db	58	;':'
   624  00FE55  53                 	db	83	;'S'
   625  00FE56  57                 	db	87	;'W'
   626  00FE57  31                 	db	49	;'1'
   627  00FE58  20                 	db	32
   628  00FE59  6F                 	db	111	;'o'
   629  00FE5A  72                 	db	114	;'r'
   630  00FE5B  20                 	db	32
   631  00FE5C  53                 	db	83	;'S'
   632  00FE5D  57                 	db	87	;'W'
   633  00FE5E  32                 	db	50	;'2'
   634  00FE5F  20                 	db	32
   635  00FE60  20                 	db	32
   636  00FE61  74                 	db	116	;'t'
   637  00FE62  6F                 	db	111	;'o'
   638  00FE63  20                 	db	32
   639  00FE64  42                 	db	66	;'B'
   640  00FE65  72                 	db	114	;'r'
   641  00FE66  6F                 	db	111	;'o'
   642  00FE67  61                 	db	97	;'a'
   643  00FE68  64                 	db	100	;'d'
   644  00FE69  43                 	db	67	;'C'
   645  00FE6A  61                 	db	97	;'a'
   646  00FE6B  73                 	db	115	;'s'
   647  00FE6C  74                 	db	116	;'t'
   648  00FE6D  00                 	db	0
   649  00FE6E  53                 	db	83	;'S'
   650  00FE6F  57                 	db	87	;'W'
   651  00FE70  31                 	db	49	;'1'
   652  00FE71  3A                 	db	58	;':'
   653  00FE72  20                 	db	32
   654  00FE73  42                 	db	66	;'B'
   655  00FE74  72                 	db	114	;'r'
   656  00FE75  6F                 	db	111	;'o'
   657  00FE76  61                 	db	97	;'a'
   658  00FE77  64                 	db	100	;'d'
   659  00FE78  63                 	db	99	;'c'
   660  00FE79  61                 	db	97	;'a'
   661  00FE7A  73                 	db	115	;'s'
   662  00FE7B  74                 	db	116	;'t'
   663  00FE7C  20                 	db	32
   664  00FE7D  20                 	db	32
   665  00FE7E  53                 	db	83	;'S'
   666  00FE7F  57                 	db	87	;'W'
   667  00FE80  32                 	db	50	;'2'
   668  00FE81  3A                 	db	58	;':'
   669  00FE82  20                 	db	32
   670  00FE83  55                 	db	85	;'U'
   671  00FE84  6E                 	db	110	;'n'
   672  00FE85  69                 	db	105	;'i'
   673  00FE86  63                 	db	99	;'c'
   674  00FE87  61                 	db	97	;'a'
   675  00FE88  73                 	db	115	;'s'
   676  00FE89  74                 	db	116	;'t'
   677  00FE8A  00                 	db	0
   678  00FE8B                     STR_29:
   679  00FE8B  53                 	db	83	;'S'
   680  00FE8C  57                 	db	87	;'W'
   681  00FE8D  31                 	db	49	;'1'
   682  00FE8E  3A                 	db	58	;':'
   683  00FE8F  4E                 	db	78	;'N'
   684  00FE90  65                 	db	101	;'e'
   685  00FE91  77                 	db	119	;'w'
   686  00FE92  20                 	db	32
   687  00FE93  4E                 	db	78	;'N'
   688  00FE94  65                 	db	101	;'e'
   689  00FE95  74                 	db	116	;'t'
   690  00FE96  77                 	db	119	;'w'
   691  00FE97  6F                 	db	111	;'o'
   692  00FE98  72                 	db	114	;'r'
   693  00FE99  6B                 	db	107	;'k'
   694  00FE9A  20                 	db	32
   695  00FE9B  53                 	db	83	;'S'
   696  00FE9C  57                 	db	87	;'W'
   697  00FE9D  32                 	db	50	;'2'
   698  00FE9E  3A                 	db	58	;':'
   699  00FE9F  46                 	db	70	;'F'
   700  00FEA0  72                 	db	114	;'r'
   701  00FEA1  65                 	db	101	;'e'
   702  00FEA2  65                 	db	101	;'e'
   703  00FEA3  7A                 	db	122	;'z'
   704  00FEA4  65                 	db	101	;'e'
   705  00FEA5  72                 	db	114	;'r'
   706  00FEA6  00                 	db	0
   707  00FEA7  42                 	db	66	;'B'
   708  00FEA8  72                 	db	114	;'r'
   709  00FEA9  6F                 	db	111	;'o'
   710  00FEAA  61                 	db	97	;'a'
   711  00FEAB  64                 	db	100	;'d'
   712  00FEAC  63                 	db	99	;'c'
   713  00FEAD  61                 	db	97	;'a'
   714  00FEAE  73                 	db	115	;'s'
   715  00FEAF  74                 	db	116	;'t'
   716  00FEB0  20                 	db	32
   717  00FEB1  50                 	db	80	;'P'
   718  00FEB2  61                 	db	97	;'a'
   719  00FEB3  63                 	db	99	;'c'
   720  00FEB4  6B                 	db	107	;'k'
   721  00FEB5  65                 	db	101	;'e'
   722  00FEB6  74                 	db	116	;'t'
   723  00FEB7  20                 	db	32
   724  00FEB8  77                 	db	119	;'w'
   725  00FEB9  69                 	db	105	;'i'
   726  00FEBA  74                 	db	116	;'t'
   727  00FEBB  68                 	db	104	;'h'
   728  00FEBC  20                 	db	32
   729  00FEBD  52                 	db	82	;'R'
   730  00FEBE  53                 	db	83	;'S'
   731  00FEBF  53                 	db	83	;'S'
   732  00FEC0  49                 	db	73	;'I'
   733  00FEC1  20                 	db	32
   734  00FEC2  00                 	db	0
   735  00FEC3  55                 	db	85	;'U'
   736  00FEC4  6E                 	db	110	;'n'
   737  00FEC5  69                 	db	105	;'i'
   738  00FEC6  63                 	db	99	;'c'
   739  00FEC7  61                 	db	97	;'a'
   740  00FEC8  73                 	db	115	;'s'
   741  00FEC9  74                 	db	116	;'t'
   742  00FECA  20                 	db	32
   743  00FECB  50                 	db	80	;'P'
   744  00FECC  61                 	db	97	;'a'
   745  00FECD  63                 	db	99	;'c'
   746  00FECE  6B                 	db	107	;'k'
   747  00FECF  65                 	db	101	;'e'
   748  00FED0  74                 	db	116	;'t'
   749  00FED1  20                 	db	32
   750  00FED2  77                 	db	119	;'w'
   751  00FED3  69                 	db	105	;'i'
   752  00FED4  74                 	db	116	;'t'
   753  00FED5  68                 	db	104	;'h'
   754  00FED6  20                 	db	32
   755  00FED7  52                 	db	82	;'R'
   756  00FED8  53                 	db	83	;'S'
   757  00FED9  53                 	db	83	;'S'
   758  00FEDA  49                 	db	73	;'I'
   759  00FEDB  20                 	db	32
   760  00FEDC  00                 	db	0
   761  00FEDD                     STR_30:
   762  00FEDD  52                 	db	82	;'R'
   763  00FEDE  42                 	db	66	;'B'
   764  00FEDF  30                 	db	48	;'0'
   765  00FEE0  3A                 	db	58	;':'
   766  00FEE1  25                 	db	37
   767  00FEE2  30                 	db	48	;'0'
   768  00FEE3  32                 	db	50	;'2'
   769  00FEE4  64                 	db	100	;'d'
   770  00FEE5  2D                 	db	45
   771  00FEE6  25                 	db	37
   772  00FEE7  30                 	db	48	;'0'
   773  00FEE8  32                 	db	50	;'2'
   774  00FEE9  78                 	db	120	;'x'
   775  00FEEA  25                 	db	37
   776  00FEEB  30                 	db	48	;'0'
   777  00FEEC  32                 	db	50	;'2'
   778  00FEED  78                 	db	120	;'x'
   779  00FEEE  25                 	db	37
   780  00FEEF  30                 	db	48	;'0'
   781  00FEF0  32                 	db	50	;'2'
   782  00FEF1  78                 	db	120	;'x'
   783  00FEF2  2D                 	db	45
   784  00FEF3  6D                 	db	109	;'m'
   785  00FEF4  65                 	db	101	;'e'
   786  00FEF5  00                 	db	0
   787  00FEF6                     STR_31:
   788  00FEF6  52                 	db	82	;'R'
   789  00FEF7  42                 	db	66	;'B'
   790  00FEF8  30                 	db	48	;'0'
   791  00FEF9  3A                 	db	58	;':'
   792  00FEFA  25                 	db	37
   793  00FEFB  30                 	db	48	;'0'
   794  00FEFC  32                 	db	50	;'2'
   795  00FEFD  64                 	db	100	;'d'
   796  00FEFE  2D                 	db	45
   797  00FEFF  25                 	db	37
   798  00FF00  30                 	db	48	;'0'
   799  00FF01  32                 	db	50	;'2'
   800  00FF02  78                 	db	120	;'x'
   801  00FF03  25                 	db	37
   802  00FF04  30                 	db	48	;'0'
   803  00FF05  32                 	db	50	;'2'
   804  00FF06  78                 	db	120	;'x'
   805  00FF07  25                 	db	37
   806  00FF08  30                 	db	48	;'0'
   807  00FF09  32                 	db	50	;'2'
   808  00FF0A  78                 	db	120	;'x'
   809  00FF0B  00                 	db	0
   810  00FF0C                     STR_28:
   811  00FF0C  20                 	db	32
   812  00FF0D  41                 	db	65	;'A'
   813  00FF0E  64                 	db	100	;'d'
   814  00FF0F  64                 	db	100	;'d'
   815  00FF10  72                 	db	114	;'r'
   816  00FF11  65                 	db	101	;'e'
   817  00FF12  73                 	db	115	;'s'
   818  00FF13  73                 	db	115	;'s'
   819  00FF14  3A                 	db	58	;':'
   820  00FF15  25                 	db	37
   821  00FF16  30                 	db	48	;'0'
   822  00FF17  32                 	db	50	;'2'
   823  00FF18  78                 	db	120	;'x'
   824  00FF19  25                 	db	37
   825  00FF1A  30                 	db	48	;'0'
   826  00FF1B  32                 	db	50	;'2'
   827  00FF1C  78                 	db	120	;'x'
   828  00FF1D  25                 	db	37
   829  00FF1E  30                 	db	48	;'0'
   830  00FF1F  32                 	db	50	;'2'
   831  00FF20  78                 	db	120	;'x'
   832  00FF21  00                 	db	0
   833  00FF22                     STR_34:
   834  00FF22  44                 	db	68	;'D'
   835  00FF23  61                 	db	97	;'a'
   836  00FF24  74                 	db	116	;'t'
   837  00FF25  61                 	db	97	;'a'
   838  00FF26  5F                 	db	95	;'_'
   839  00FF27  53                 	db	83	;'S'
   840  00FF28  65                 	db	101	;'e'
   841  00FF29  6E                 	db	110	;'n'
   842  00FF2A  64                 	db	100	;'d'
   843  00FF2B  69                 	db	105	;'i'
   844  00FF2C  6E                 	db	110	;'n'
   845  00FF2D  67                 	db	103	;'g'
   846  00FF2E  5F                 	db	95	;'_'
   847  00FF2F  46                 	db	70	;'F'
   848  00FF30  61                 	db	97	;'a'
   849  00FF31  69                 	db	105	;'i'
   850  00FF32  6C                 	db	108	;'l'
   851  00FF33  21                 	db	33
   852  00FF34  21                 	db	33
   853  00FF35  00                 	db	0
   854  00FF36  0D                 	db	13
   855  00FF37  0A                 	db	10
   856  00FF38  0D                 	db	13
   857  00FF39  0A                 	db	10
   858  00FF3A  4D                 	db	77	;'M'
   859  00FF3B  79                 	db	121	;'y'
   860  00FF3C  20                 	db	32
   861  00FF3D  41                 	db	65	;'A'
   862  00FF3E  64                 	db	100	;'d'
   863  00FF3F  64                 	db	100	;'d'
   864  00FF40  72                 	db	114	;'r'
   865  00FF41  65                 	db	101	;'e'
   866  00FF42  73                 	db	115	;'s'
   867  00FF43  73                 	db	115	;'s'
   868  00FF44  3A                 	db	58	;':'
   869  00FF45  20                 	db	32
   870  00FF46  30                 	db	48	;'0'
   871  00FF47  78                 	db	120	;'x'
   872  00FF48  00                 	db	0
   873  00FF49                     STR_35:
   874  00FF49  45                 	db	69	;'E'
   875  00FF4A  4E                 	db	78	;'N'
   876  00FF4B  44                 	db	68	;'D'
   877  00FF4C  5F                 	db	95	;'_'
   878  00FF4D  44                 	db	68	;'D'
   879  00FF4E  45                 	db	69	;'E'
   880  00FF4F  56                 	db	86	;'V'
   881  00FF50  49                 	db	73	;'I'
   882  00FF51  43                 	db	67	;'C'
   883  00FF52  45                 	db	69	;'E'
   884  00FF53  53                 	db	83	;'S'
   885  00FF54  20                 	db	32
   886  00FF55  3A                 	db	58	;':'
   887  00FF56  25                 	db	37
   888  00FF57  30                 	db	48	;'0'
   889  00FF58  32                 	db	50	;'2'
   890  00FF59  64                 	db	100	;'d'
   891  00FF5A  00                 	db	0
   892  00FF5B                     STR_36:
   893  00FF5B  30                 	db	48	;'0'
   894  00FF5C  31                 	db	49	;'1'
   895  00FF5D  32                 	db	50	;'2'
   896  00FF5E  33                 	db	51	;'3'
   897  00FF5F  34                 	db	52	;'4'
   898  00FF60  35                 	db	53	;'5'
   899  00FF61  36                 	db	54	;'6'
   900  00FF62  37                 	db	55	;'7'
   901  00FF63  38                 	db	56	;'8'
   902  00FF64  39                 	db	57	;'9'
   903  00FF65  41                 	db	65	;'A'
   904  00FF66  42                 	db	66	;'B'
   905  00FF67  43                 	db	67	;'C'
   906  00FF68  44                 	db	68	;'D'
   907  00FF69  45                 	db	69	;'E'
   908  00FF6A  46                 	db	70	;'F'
   909  00FF6B  00                 	db	0
   910  00FF6C                     STR_37:
   911  00FF6C  30                 	db	48	;'0'
   912  00FF6D  31                 	db	49	;'1'
   913  00FF6E  32                 	db	50	;'2'
   914  00FF6F  33                 	db	51	;'3'
   915  00FF70  34                 	db	52	;'4'
   916  00FF71  35                 	db	53	;'5'
   917  00FF72  36                 	db	54	;'6'
   918  00FF73  37                 	db	55	;'7'
   919  00FF74  38                 	db	56	;'8'
   920  00FF75  39                 	db	57	;'9'
   921  00FF76  61                 	db	97	;'a'
   922  00FF77  62                 	db	98	;'b'
   923  00FF78  63                 	db	99	;'c'
   924  00FF79  64                 	db	100	;'d'
   925  00FF7A  65                 	db	101	;'e'
   926  00FF7B  66                 	db	102	;'f'
   927  00FF7C  00                 	db	0
   928  00FF7D                     STR_33:
   929  00FF7D  52                 	db	82	;'R'
   930  00FF7E  42                 	db	66	;'B'
   931  00FF7F  32                 	db	50	;'2'
   932  00FF80  3A                 	db	58	;':'
   933  00FF81  20                 	db	32
   934  00FF82  43                 	db	67	;'C'
   935  00FF83  68                 	db	104	;'h'
   936  00FF84  61                 	db	97	;'a'
   937  00FF85  6E                 	db	110	;'n'
   938  00FF86  67                 	db	103	;'g'
   939  00FF87  65                 	db	101	;'e'
   940  00FF88  20                 	db	32
   941  00FF89  6E                 	db	110	;'n'
   942  00FF8A  6F                 	db	111	;'o'
   943  00FF8B  64                 	db	100	;'d'
   944  00FF8C  65                 	db	101	;'e'
   945  00FF8D  00                 	db	0
   946  00FF8E                     STR_27:
   947  00FF8E  44                 	db	68	;'D'
   948  00FF8F  61                 	db	97	;'a'
   949  00FF90  74                 	db	116	;'t'
   950  00FF91  61                 	db	97	;'a'
   951  00FF92  20                 	db	32
   952  00FF93  50                 	db	80	;'P'
   953  00FF94  61                 	db	97	;'a'
   954  00FF95  63                 	db	99	;'c'
   955  00FF96  6B                 	db	107	;'k'
   956  00FF97  65                 	db	101	;'e'
   957  00FF98  74                 	db	116	;'t'
   958  00FF99  20                 	db	32
   959  00FF9A  66                 	db	102	;'f'
   960  00FF9B  72                 	db	114	;'r'
   961  00FF9C  6F                 	db	111	;'o'
   962  00FF9D  6D                 	db	109	;'m'
   963  00FF9E  00                 	db	0
   964  00FF9F                     STR_24:
   965  00FF9F  20                 	db	32
   966  00FFA0  55                 	db	85	;'U'
   967  00FFA1  6E                 	db	110	;'n'
   968  00FFA2  69                 	db	105	;'i'
   969  00FFA3  63                 	db	99	;'c'
   970  00FFA4  61                 	db	97	;'a'
   971  00FFA5  73                 	db	115	;'s'
   972  00FFA6  74                 	db	116	;'t'
   973  00FFA7  20                 	db	32
   974  00FFA8  46                 	db	70	;'F'
   975  00FFA9  61                 	db	97	;'a'
   976  00FFAA  69                 	db	105	;'i'
   977  00FFAB  6C                 	db	108	;'l'
   978  00FFAC  65                 	db	101	;'e'
   979  00FFAD  64                 	db	100	;'d'
   980  00FFAE  00                 	db	0
   981  00FFAF                     STR_13:
   982  00FFAF  54                 	db	84	;'T'
   983  00FFB0  58                 	db	88	;'X'
   984  00FFB1  3A                 	db	58	;':'
   985  00FFB2  25                 	db	37
   986  00FFB3  33                 	db	51	;'3'
   987  00FFB4  64                 	db	100	;'d'
   988  00FFB5  20                 	db	32
   989  00FFB6  2C                 	db	44
   990  00FFB7  20                 	db	32
   991  00FFB8  52                 	db	82	;'R'
   992  00FFB9  58                 	db	88	;'X'
   993  00FFBA  3A                 	db	58	;':'
   994  00FFBB  25                 	db	37
   995  00FFBC  33                 	db	51	;'3'
   996  00FFBD  64                 	db	100	;'d'
   997  00FFBE  00                 	db	0
   998  00FFBF                     STR_14:
   999  00FFBF  4D                 	db	77	;'M'
  1000  00FFC0  65                 	db	101	;'e'
  1001  00FFC1  73                 	db	115	;'s'
  1002  00FFC2  73                 	db	115	;'s'
  1003  00FFC3  61                 	db	97	;'a'
  1004  00FFC4  67                 	db	103	;'g'
  1005  00FFC5  65                 	db	101	;'e'
  1006  00FFC6  20                 	db	32
  1007  00FFC7  43                 	db	67	;'C'
  1008  00FFC8  6F                 	db	111	;'o'
  1009  00FFC9  75                 	db	117	;'u'
  1010  00FFCA  6E                 	db	110	;'n'
  1011  00FFCB  74                 	db	116	;'t'
  1012  00FFCC  00                 	db	0
  1013  00FFCD                     STR_4:
  1014  00FFCD  20                 	db	32
  1015  00FFCE  20                 	db	32
  1016  00FFCF  20                 	db	32
  1017  00FFD0  20                 	db	32
  1018  00FFD1  20                 	db	32
  1019  00FFD2  20                 	db	32
  1020  00FFD3  20                 	db	32
  1021  00FFD4  20                 	db	32
  1022  00FFD5  20                 	db	32
  1023  00FFD6  20                 	db	32
  1024  00FFD7  20                 	db	32
  1025  00FFD8  20                 	db	32
  1026  00FFD9  20                 	db	32
  1027  00FFDA  00                 	db	0
  1028  00FFDB                     STR_2:
  1029  00FFDB  20                 	db	32
  1030  00FFDC  20                 	db	32
  1031  00FFDD  43                 	db	67	;'C'
  1032  00FFDE  68                 	db	104	;'h'
  1033  00FFDF  61                 	db	97	;'a'
  1034  00FFE0  6E                 	db	110	;'n'
  1035  00FFE1  6E                 	db	110	;'n'
  1036  00FFE2  65                 	db	101	;'e'
  1037  00FFE3  6C                 	db	108	;'l'
  1038  00FFE4  3A                 	db	58	;':'
  1039  00FFE5  20                 	db	32
  1040  00FFE6  00                 	db	0
  1041  00FFE7  53                 	db	83	;'S'
  1042  00FFE8  65                 	db	101	;'e'
  1043  00FFE9  63                 	db	99	;'c'
  1044  00FFEA  75                 	db	117	;'u'
  1045  00FFEB  72                 	db	114	;'r'
  1046  00FFEC  65                 	db	101	;'e'
  1047  00FFED  64                 	db	100	;'d'
  1048  00FFEE  20                 	db	32
  1049  00FFEF  00                 	db	0
  1050  00FFF0  20                 	db	32
  1051  00FFF1  66                 	db	102	;'f'
  1052  00FFF2  72                 	db	114	;'r'
  1053  00FFF3  6F                 	db	111	;'o'
  1054  00FFF4  6D                 	db	109	;'m'
  1055  00FFF5  20                 	db	32
  1056  00FFF6  00                 	db	0
  1057  0000                     
  1058                           ; #config settings
  1059  00FFF7  00                 	db	0	; dummy byte at the end
  1060  0000                     
  1061                           	psect	cinit
  1062  003922                     __pcinit:
  1063                           	opt stack 0
  1064  003922                     start_initialization:
  1065                           	opt stack 0
  1066  003922                     __initialization:
  1067                           	opt stack 0
  1068                           
  1069                           ; Clear objects allocated to BANK3 (216 bytes)
  1070  003922  EE03  F000         	lfsr	0,__pbssBANK3
  1071  003926  0ED8               	movlw	216
  1072  003928                     clear_0:
  1073  003928  6AEE               	clrf	postinc0,c
  1074  00392A  06E8               	decf	wreg,f,c
  1075  00392C  E1FD               	bnz	clear_0
  1076                           
  1077                           ; Clear objects allocated to BANK2 (170 bytes)
  1078  00392E  EE02  F000         	lfsr	0,__pbssBANK2
  1079  003932  0EAA               	movlw	170
  1080  003934                     clear_1:
  1081  003934  6AEE               	clrf	postinc0,c
  1082  003936  06E8               	decf	wreg,f,c
  1083  003938  E1FD               	bnz	clear_1
  1084                           
  1085                           ; Clear objects allocated to BANK1 (231 bytes)
  1086  00393A  EE01  F000         	lfsr	0,__pbssBANK1
  1087  00393E  0EE7               	movlw	231
  1088  003940                     clear_2:
  1089  003940  6AEE               	clrf	postinc0,c
  1090  003942  06E8               	decf	wreg,f,c
  1091  003944  E1FD               	bnz	clear_2
  1092                           
  1093                           ; Clear objects allocated to BANK0 (15 bytes)
  1094  003946  EE00  F0D9         	lfsr	0,__pbssBANK0
  1095  00394A  0E0F               	movlw	15
  1096  00394C                     clear_3:
  1097  00394C  6AEE               	clrf	postinc0,c
  1098  00394E  06E8               	decf	wreg,f,c
  1099  003950  E1FD               	bnz	clear_3
  1100                           
  1101                           ; Clear objects allocated to COMRAM (39 bytes)
  1102  003952  EE00  F02F         	lfsr	0,__pbssCOMRAM
  1103  003956  0E27               	movlw	39
  1104  003958                     clear_4:
  1105  003958  6AEE               	clrf	postinc0,c
  1106  00395A  06E8               	decf	wreg,f,c
  1107  00395C  E1FD               	bnz	clear_4
  1108                           
  1109                           ; Initialize objects allocated to BANK0 (2 bytes)
  1110                           ; load TBLPTR registers with __pidataBANK0
  1111  00395E  0E2A               	movlw	low __pidataBANK0
  1112  003960  6EF6               	movwf	tblptrl,c
  1113  003962  0E42               	movlw	high __pidataBANK0
  1114  003964  6EF7               	movwf	tblptrh,c
  1115  003966  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1116  003968  6EF8               	movwf	tblptru,c
  1117  00396A  0009               	tblrd		*+	;fetch initializer
  1118  00396C  CFF5 F0E8          	movff	tablat,__pdataBANK0
  1119  003970  0009               	tblrd		*+	;fetch initializer
  1120  003972  CFF5 F0E9          	movff	tablat,__pdataBANK0+1
  1121  003976                     end_of_initialization:
  1122                           	opt stack 0
  1123  003976                     __end_of__initialization:
  1124                           	opt stack 0
  1125  003976  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1126  003978  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1127  00397A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1128  00397C  6EF8               	movwf	tblptru,c
  1129  00397E  0100               	movlb	0
  1130  003980  EF7F  F020         	goto	_main	;jump to C main() function
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           postinc0	equ	0xFEE
  1136                           wreg	equ	0xFE8
  1137                           
  1138                           	psect	bssCOMRAM
  1139  00002F                     __pbssCOMRAM:
  1140                           	opt stack 0
  1141  00002F                     _rxMessage:
  1142                           	opt stack 0
  1143  00002F                     	ds	10
  1144  000039                     _MACInitParams:
  1145                           	opt stack 0
  1146  000039                     	ds	3
  1147  00003C                     _nextEEPosition:
  1148                           	opt stack 0
  1149  00003C                     	ds	2
  1150  00003E                     _MACSeq:
  1151                           	opt stack 0
  1152  00003E                     	ds	1
  1153  00003F                     _MyindexinPC:
  1154                           	opt stack 0
  1155  00003F                     	ds	1
  1156  000040                     _PUSH_BUTTON_pressed:
  1157                           	opt stack 0
  1158  000040                     	ds	1
  1159  000041                     _RSSILock:
  1160                           	opt stack 0
  1161  000041                     	ds	1
  1162  000042                     _RSSIVal:
  1163                           	opt stack 0
  1164  000042                     	ds	1
  1165  000043                     _RxNum:
  1166                           	opt stack 0
  1167  000043                     	ds	1
  1168  000044                     _TxMACSeq:
  1169                           	opt stack 0
  1170  000044                     	ds	1
  1171  000045                     _TxNum:
  1172                           	opt stack 0
  1173  000045                     	ds	1
  1174  000046                     _TxSynCount:
  1175                           	opt stack 0
  1176  000046                     	ds	1
  1177  000047                     _chk_sel_status:
  1178                           	opt stack 0
  1179  000047                     	ds	1
  1180  000048                     _display_connections:
  1181                           	opt stack 0
  1182  000048                     	ds	1
  1183  000049                     _end_nodes:
  1184                           	opt stack 0
  1185  000049                     	ds	1
  1186  00004A                     _lost_connection:
  1187                           	opt stack 0
  1188  00004A                     	ds	1
  1189  00004B                     _timerExtension1:
  1190                           	opt stack 0
  1191  00004B                     	ds	1
  1192  00004C                     _nvmConnMode:
  1193                           	opt stack 0
  1194  00004C                     	ds	2
  1195  00004E                     _nvmConnectionTable:
  1196                           	opt stack 0
  1197  00004E                     	ds	2
  1198  000050                     _nvmCurrentChannel:
  1199                           	opt stack 0
  1200  000050                     	ds	2
  1201  000052                     _nvmMyPANID:
  1202                           	opt stack 0
  1203  000052                     	ds	2
  1204  000054                     _nvmOutFrameCounter:
  1205                           	opt stack 0
  1206  000054                     	ds	2
  1207                           tblptru	equ	0xFF8
  1208                           tblptrh	equ	0xFF7
  1209                           tblptrl	equ	0xFF6
  1210                           tablat	equ	0xFF5
  1211                           postinc0	equ	0xFEE
  1212                           wreg	equ	0xFE8
  1213                           
  1214                           	psect	bssBANK0
  1215  0000D9                     __pbssBANK0:
  1216                           	opt stack 0
  1217  0000D9                     _IRQ1_Received:
  1218                           	opt stack 0
  1219  0000D9                     	ds	1
  1220  0000DA                     _LatestConnection:
  1221                           	opt stack 0
  1222  0000DA                     	ds	1
  1223  0000DB                     _P2PCapacityInfo:
  1224                           	opt stack 0
  1225  0000DB                     	ds	1
  1226  0000DC                     _P2PStatus:
  1227                           	opt stack 0
  1228  0000DC                     	ds	1
  1229  0000DD                     _RF_Mode:
  1230                           	opt stack 0
  1231  0000DD                     	ds	1
  1232  0000DE                     _ReceivedBankIndex:
  1233                           	opt stack 0
  1234  0000DE                     	ds	1
  1235  0000DF                     _TxData:
  1236                           	opt stack 0
  1237  0000DF                     	ds	1
  1238  0000E0                     _hasAck:
  1239                           	opt stack 0
  1240  0000E0                     	ds	1
  1241  0000E1                     _i:
  1242                           	opt stack 0
  1243  0000E1                     	ds	1
  1244  0000E2                     _rec_ack:
  1245                           	opt stack 0
  1246  0000E2                     	ds	1
  1247  0000E3                     _timerExtension2:
  1248                           	opt stack 0
  1249  0000E3                     	ds	1
  1250  0000E4                     _conn_size:
  1251                           	opt stack 0
  1252  0000E4                     	ds	1
  1253  0000E5                     _currentChannel:
  1254                           	opt stack 0
  1255  0000E5                     	ds	1
  1256  0000E6                     _myConnectionIndex_in_PanCo:
  1257                           	opt stack 0
  1258  0000E6                     	ds	1
  1259  0000E7                     _role:
  1260                           	opt stack 0
  1261  0000E7                     	ds	1
  1262                           tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           postinc0	equ	0xFEE
  1267                           wreg	equ	0xFE8
  1268                           
  1269                           	psect	dataBANK0
  1270  0000E8                     __pdataBANK0:
  1271                           	opt stack 0
  1272  0000E8                     _AdditionalNodeID:
  1273                           	opt stack 0
  1274  0000E8                     	ds	1
  1275  0000E9                     _ConnMode:
  1276                           	opt stack 0
  1277  0000E9                     	ds	1
  1278                           tblptru	equ	0xFF8
  1279                           tblptrh	equ	0xFF7
  1280                           tblptrl	equ	0xFF6
  1281                           tablat	equ	0xFF5
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           
  1285                           	psect	bssBANK1
  1286  000100                     __pbssBANK1:
  1287                           	opt stack 0
  1288  000100                     _MACTxBuffer:
  1289                           	opt stack 0
  1290  000100                     	ds	55
  1291  000137                     _END_DEVICES_Short_Address:
  1292                           	opt stack 0
  1293  000137                     	ds	40
  1294  00015F                     _link_stat:
  1295                           	opt stack 0
  1296  00015F                     	ds	10
  1297  000169                     _permanent_connections:
  1298                           	opt stack 0
  1299  000169                     	ds	10
  1300  000173                     _MACRxPacket:
  1301                           	opt stack 0
  1302  000173                     	ds	8
  1303  00017B                     _PUSH_BUTTON_press_time:
  1304                           	opt stack 0
  1305  00017B                     	ds	4
  1306  00017F                     _nvmDelayTick:
  1307                           	opt stack 0
  1308  00017F                     	ds	4
  1309  000183                     _t1:
  1310                           	opt stack 0
  1311  000183                     	ds	4
  1312  000187                     _t2:
  1313                           	opt stack 0
  1314  000187                     	ds	4
  1315  00018B                     _tick1:
  1316                           	opt stack 0
  1317  00018B                     	ds	4
  1318  00018F                     _tick4:
  1319                           	opt stack 0
  1320  00018F                     	ds	4
  1321  000193                     _timer1ReloadVal:
  1322                           	opt stack 0
  1323  000193                     	ds	2
  1324  000195                     _TxBuffer:
  1325                           	opt stack 0
  1326  000195                     	ds	35
  1327  0001B8                     _LCDText:
  1328                           	opt stack 0
  1329  0001B8                     	ds	33
  1330  0001D9                     _myLongAddress:
  1331                           	opt stack 0
  1332  0001D9                     	ds	8
  1333  0001E1                     _nvmEdc:
  1334                           	opt stack 0
  1335  0001E1                     	ds	2
  1336  0001E3                     _nvmRole:
  1337                           	opt stack 0
  1338  0001E3                     	ds	2
  1339  0001E5                     _nvmmyIndex:
  1340                           	opt stack 0
  1341  0001E5                     	ds	2
  1342                           tblptru	equ	0xFF8
  1343                           tblptrh	equ	0xFF7
  1344                           tblptrl	equ	0xFF6
  1345                           tablat	equ	0xFF5
  1346                           postinc0	equ	0xFEE
  1347                           wreg	equ	0xFE8
  1348                           
  1349                           	psect	bssBANK2
  1350  000200                     __pbssBANK2:
  1351                           	opt stack 0
  1352  000200                     _AckInfo:
  1353                           	opt stack 0
  1354  000200                     	ds	30
  1355  00021E                     _ConnectionTable:
  1356                           	opt stack 0
  1357  00021E                     	ds	140
  1358                           tblptru	equ	0xFF8
  1359                           tblptrh	equ	0xFF7
  1360                           tblptrl	equ	0xFF6
  1361                           tablat	equ	0xFF5
  1362                           postinc0	equ	0xFEE
  1363                           wreg	equ	0xFE8
  1364                           
  1365                           	psect	bssBANK3
  1366  000300                     __pbssBANK3:
  1367                           	opt stack 0
  1368  000300                     _RxPacket:
  1369                           	opt stack 0
  1370  000300                     	ds	114
  1371  000372                     _indirectMessages:
  1372                           	opt stack 0
  1373  000372                     	ds	102
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           postinc0	equ	0xFEE
  1379                           wreg	equ	0xFE8
  1380                           
  1381                           	psect	cstackBANK2
  1382  0002AA                     __pcstackBANK2:
  1383                           	opt stack 0
  1384  0002AA                     MiApp_EstablishConnection@tmpConnectionMode:
  1385                           	opt stack 0
  1386  0002AA                     MiApp_UnicastStar@t1:
  1387                           	opt stack 0
  1388                           
  1389                           ; 4 bytes @ 0x0
  1390  0002AA                     	ds	1
  1391  0002AB                     MiApp_EstablishConnection@retry:
  1392                           	opt stack 0
  1393                           
  1394                           ; 1 bytes @ 0x1
  1395  0002AB                     	ds	1
  1396  0002AC                     MiApp_EstablishConnection@t1:
  1397                           	opt stack 0
  1398                           
  1399                           ; 4 bytes @ 0x2
  1400  0002AC                     	ds	2
  1401  0002AE                     MiApp_UnicastStar@t2:
  1402                           	opt stack 0
  1403                           
  1404                           ; 4 bytes @ 0x4
  1405  0002AE                     	ds	2
  1406  0002B0                     MiApp_EstablishConnection@connectionInterval:
  1407                           	opt stack 0
  1408                           
  1409                           ; 1 bytes @ 0x6
  1410  0002B0                     	ds	1
  1411  0002B1                     MiApp_EstablishConnection@t2:
  1412                           	opt stack 0
  1413                           
  1414                           ; 4 bytes @ 0x7
  1415  0002B1                     	ds	1
  1416  0002B2                     MiApp_UnicastStar@SecEn:
  1417                           	opt stack 0
  1418                           
  1419                           ; 1 bytes @ 0x8
  1420  0002B2                     	ds	3
  1421  0002B5                     MiApp_EstablishConnection@i:
  1422                           	opt stack 0
  1423                           
  1424                           ; 1 bytes @ 0xB
  1425  0002B5                     	ds	1
  1426  0002B6                     ??_run_star_demo:
  1427                           
  1428                           ; 0 bytes @ 0xC
  1429  0002B6                     	ds	7
  1430                           tblptru	equ	0xFF8
  1431                           tblptrh	equ	0xFF7
  1432                           tblptrl	equ	0xFF6
  1433                           tablat	equ	0xFF5
  1434                           postinc0	equ	0xFEE
  1435                           wreg	equ	0xFE8
  1436                           
  1437                           	psect	cstackBANK1
  1438  0001E7                     __pcstackBANK1:
  1439                           	opt stack 0
  1440  0001E7                     P2PTasks@FW_Stat:
  1441                           	opt stack 0
  1442                           
  1443                           ; 1 bytes @ 0x0
  1444  0001E7                     	ds	1
  1445  0001E8                     P2PTasks@tick2:
  1446                           	opt stack 0
  1447                           
  1448                           ; 4 bytes @ 0x1
  1449  0001E8                     	ds	4
  1450  0001EC                     P2PTasks@tmpTick:
  1451                           	opt stack 0
  1452                           
  1453                           ; 4 bytes @ 0x5
  1454  0001EC                     	ds	4
  1455  0001F0                     P2PTasks@final_index:
  1456                           	opt stack 0
  1457                           
  1458                           ; 1 bytes @ 0x9
  1459  0001F0                     	ds	1
  1460  0001F1                     P2PTasks@isCommand:
  1461                           	opt stack 0
  1462                           
  1463                           ; 1 bytes @ 0xA
  1464  0001F1                     	ds	1
  1465  0001F2                     P2PTasks@tick3:
  1466                           	opt stack 0
  1467                           
  1468                           ; 4 bytes @ 0xB
  1469  0001F2                     	ds	4
  1470  0001F6                     P2PTasks@p:
  1471                           	opt stack 0
  1472                           
  1473                           ; 1 bytes @ 0xF
  1474  0001F6                     	ds	1
  1475  0001F7                     P2PTasks@p_1412:
  1476                           	opt stack 0
  1477                           
  1478                           ; 1 bytes @ 0x10
  1479  0001F7                     	ds	1
  1480  0001F8                     P2PTasks@status:
  1481                           	opt stack 0
  1482                           
  1483                           ; 1 bytes @ 0x11
  1484  0001F8                     	ds	1
  1485  0001F9                     P2PTasks@j:
  1486                           	opt stack 0
  1487                           
  1488                           ; 1 bytes @ 0x12
  1489  0001F9                     	ds	1
  1490  0001FA                     P2PTasks@i:
  1491                           	opt stack 0
  1492                           
  1493                           ; 1 bytes @ 0x13
  1494  0001FA                     	ds	1
  1495                           tblptru	equ	0xFF8
  1496                           tblptrh	equ	0xFF7
  1497                           tblptrl	equ	0xFF6
  1498                           tablat	equ	0xFF5
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           
  1502                           	psect	cstackBANK0
  1503  000060                     __pcstackBANK0:
  1504                           	opt stack 0
  1505  000060                     high_isr@counter:
  1506                           	opt stack 0
  1507                           
  1508                           ; 2 bytes @ 0x0
  1509  000060                     	ds	2
  1510  000062                     high_isr@fifo_stat:
  1511                           	opt stack 0
  1512                           
  1513                           ; 1 bytes @ 0x2
  1514  000062                     	ds	1
  1515  000063                     high_isr@ackPacket:
  1516                           	opt stack 0
  1517                           
  1518                           ; 4 bytes @ 0x3
  1519  000063                     	ds	4
  1520  000067                     high_isr@bAck:
  1521                           	opt stack 0
  1522                           
  1523                           ; 1 bytes @ 0x7
  1524  000067                     	ds	1
  1525  000068                     high_isr@RxPacketPtr:
  1526                           	opt stack 0
  1527                           
  1528                           ; 1 bytes @ 0x8
  1529  000068                     	ds	1
  1530  000069                     high_isr@ackInfoIndex:
  1531                           	opt stack 0
  1532                           
  1533                           ; 1 bytes @ 0x9
  1534  000069                     	ds	1
  1535  00006A                     high_isr@PacketLen:
  1536                           	opt stack 0
  1537                           
  1538                           ; 1 bytes @ 0xA
  1539  00006A                     	ds	1
  1540  00006B                     high_isr@BankIndex:
  1541                           	opt stack 0
  1542                           
  1543                           ; 1 bytes @ 0xB
  1544  00006B                     	ds	1
  1545  00006C                     high_isr@i:
  1546                           	opt stack 0
  1547                           
  1548                           ; 1 bytes @ 0xC
  1549  00006C                     	ds	1
  1550  00006D                     i1SPI1_Exchange8bit@data:
  1551                           	opt stack 0
  1552                           
  1553                           ; 1 bytes @ 0xD
  1554  00006D                     	ds	1
  1555  00006E                     i1RegisterRead@address:
  1556                           	opt stack 0
  1557                           
  1558                           ; 1 bytes @ 0xE
  1559  00006E                     	ds	1
  1560  00006F                     i1RegisterRead@value:
  1561                           	opt stack 0
  1562                           
  1563                           ; 1 bytes @ 0xF
  1564  00006F                     	ds	1
  1565  000070                     i1RegisterRead@IRQ1select:
  1566                           	opt stack 0
  1567                           
  1568                           ; 1 bytes @ 0x10
  1569  000070                     	ds	1
  1570  000071                     i1RegisterRead@IRQ0select:
  1571                           	opt stack 0
  1572                           
  1573                           ; 1 bytes @ 0x11
  1574  000071                     	ds	1
  1575  000072                     ??_low_isr:
  1576                           
  1577                           ; 0 bytes @ 0x12
  1578  000072                     	ds	4
  1579  000076                     ??_isdigit:
  1580  000076                     ??_handle_lost_connection:
  1581  000076                     ?___wmul:
  1582                           	opt stack 0
  1583  000076                     ?___awdiv:
  1584                           	opt stack 0
  1585  000076                     ?___awmod:
  1586                           	opt stack 0
  1587  000076                     ?___lwdiv:
  1588                           	opt stack 0
  1589  000076                     ?_MiWi_TickGet:
  1590                           	opt stack 0
  1591  000076                     Total_Connections@count:
  1592                           	opt stack 0
  1593  000076                     SPI1_Exchange8bit@data:
  1594                           	opt stack 0
  1595  000076                     SPIPut2@v:
  1596                           	opt stack 0
  1597  000076                     ___lbmod@divisor:
  1598                           	opt stack 0
  1599  000076                     NVMalloc@size:
  1600                           	opt stack 0
  1601  000076                     Find_Index@DestAddr:
  1602                           	opt stack 0
  1603  000076                     isSameAddress@Address1:
  1604                           	opt stack 0
  1605  000076                     DELAY_ms@ms:
  1606                           	opt stack 0
  1607  000076                     ___wmul@multiplier:
  1608                           	opt stack 0
  1609  000076                     ___awdiv@dividend:
  1610                           	opt stack 0
  1611  000076                     ___awmod@dividend:
  1612                           	opt stack 0
  1613  000076                     ___lwdiv@dividend:
  1614                           	opt stack 0
  1615  000076                     memset@p1:
  1616                           	opt stack 0
  1617  000076                     DELAY_10us@tenMicroSecondCounter:
  1618                           	opt stack 0
  1619                           
  1620                           ; 4 bytes @ 0x16
  1621  000076                     	ds	1
  1622  000077                     RegisterRead@address:
  1623                           	opt stack 0
  1624  000077                     WriteFIFO@Data:
  1625                           	opt stack 0
  1626  000077                     Total_Connections@i:
  1627                           	opt stack 0
  1628  000077                     LCD_WriteCmd@data:
  1629                           	opt stack 0
  1630  000077                     LCD_WriteData@data:
  1631                           	opt stack 0
  1632  000077                     _isdigit$4096:
  1633                           	opt stack 0
  1634  000077                     ___lbmod@dividend:
  1635                           	opt stack 0
  1636  000077                     RegisterSet@setting:
  1637                           	opt stack 0
  1638  000077                     EEPROM_Read@dest:
  1639                           	opt stack 0
  1640  000077                     EEPROM_Write@dest:
  1641                           	opt stack 0
  1642                           
  1643                           ; 2 bytes @ 0x17
  1644  000077                     	ds	1
  1645  000078                     ??_DELAY_ms:
  1646  000078                     RegisterRead@value:
  1647                           	opt stack 0
  1648  000078                     WriteFIFO@IRQ1select:
  1649                           	opt stack 0
  1650  000078                     LCD_Update@i:
  1651                           	opt stack 0
  1652  000078                     isdigit@c:
  1653                           	opt stack 0
  1654  000078                     ___lbmod@counter:
  1655                           	opt stack 0
  1656  000078                     NVMalloc@location:
  1657                           	opt stack 0
  1658  000078                     isSameAddress@Address2:
  1659                           	opt stack 0
  1660  000078                     ___wmul@multiplicand:
  1661                           	opt stack 0
  1662  000078                     ___awdiv@divisor:
  1663                           	opt stack 0
  1664  000078                     ___awmod@divisor:
  1665                           	opt stack 0
  1666  000078                     ___lwdiv@divisor:
  1667                           	opt stack 0
  1668  000078                     memset@c:
  1669                           	opt stack 0
  1670                           
  1671                           ; 2 bytes @ 0x18
  1672  000078                     	ds	1
  1673  000079                     RegisterSet@IRQ1select:
  1674                           	opt stack 0
  1675  000079                     RegisterRead@IRQ1select:
  1676                           	opt stack 0
  1677  000079                     WriteFIFO@IRQ0select:
  1678                           	opt stack 0
  1679  000079                     EEPROM_Read@addr:
  1680                           	opt stack 0
  1681  000079                     EEPROM_Write@addr:
  1682                           	opt stack 0
  1683  000079                     ___lbmod@rem:
  1684                           	opt stack 0
  1685                           
  1686                           ; 1 bytes @ 0x19
  1687  000079                     	ds	1
  1688  00007A                     ??_DELAY_10us:
  1689  00007A                     ??_MiWi_TickGet:
  1690  00007A                     ??_NVMalloc:
  1691  00007A                     RegisterSet@IRQ0select:
  1692                           	opt stack 0
  1693  00007A                     RegisterRead@IRQ0select:
  1694                           	opt stack 0
  1695  00007A                     Find_Index@i:
  1696                           	opt stack 0
  1697  00007A                     EEPROM_Read@count:
  1698                           	opt stack 0
  1699  00007A                     EEPROM_Write@count:
  1700                           	opt stack 0
  1701  00007A                     ___awdiv@counter:
  1702                           	opt stack 0
  1703  00007A                     ___awmod@counter:
  1704                           	opt stack 0
  1705  00007A                     ___lwdiv@counter:
  1706                           	opt stack 0
  1707  00007A                     ___wmul@product:
  1708                           	opt stack 0
  1709  00007A                     memset@n:
  1710                           	opt stack 0
  1711                           
  1712                           ; 2 bytes @ 0x1A
  1713  00007A                     	ds	1
  1714  00007B                     ??_EEPROM_Write:
  1715  00007B                     SetRFMode@mode:
  1716                           	opt stack 0
  1717  00007B                     handle_lost_connection@stat:
  1718                           	opt stack 0
  1719  00007B                     MiWi_TickGet@failureCounter:
  1720                           	opt stack 0
  1721  00007B                     ___awdiv@sign:
  1722                           	opt stack 0
  1723  00007B                     ___awmod@sign:
  1724                           	opt stack 0
  1725  00007B                     Read_MAC_Address@myAddress:
  1726                           	opt stack 0
  1727  00007B                     ___lwdiv@quotient:
  1728                           	opt stack 0
  1729                           
  1730                           ; 2 bytes @ 0x1B
  1731  00007B                     	ds	1
  1732  00007C                     MiMAC_SetChannel@offsetFreq:
  1733                           	opt stack 0
  1734  00007C                     NVMInit@result:
  1735                           	opt stack 0
  1736  00007C                     handle_lost_connection@i:
  1737                           	opt stack 0
  1738  00007C                     isSameAddress@i:
  1739                           	opt stack 0
  1740  00007C                     EEPROM_Write@oldRFIE:
  1741                           	opt stack 0
  1742  00007C                     ___awdiv@quotient:
  1743                           	opt stack 0
  1744  00007C                     memset@p:
  1745                           	opt stack 0
  1746  00007C                     MiWi_TickGet@currentTime:
  1747                           	opt stack 0
  1748                           
  1749                           ; 4 bytes @ 0x1C
  1750  00007C                     	ds	1
  1751  00007D                     ??_MiMAC_SetChannel:
  1752  00007D                     ??_Read_MAC_Address:
  1753  00007D                     ?___lwmod:
  1754                           	opt stack 0
  1755  00007D                     EEPROM_Write@PageCounter:
  1756                           	opt stack 0
  1757  00007D                     store_connection_tb@payload:
  1758                           	opt stack 0
  1759  00007D                     ___lwmod@dividend:
  1760                           	opt stack 0
  1761                           
  1762                           ; 2 bytes @ 0x1D
  1763  00007D                     	ds	1
  1764  00007E                     ??_AddConnection:
  1765  00007E                     ??_MiApp_ConnectionMode:
  1766  00007E                     MiMAC_SetChannel@channel:
  1767                           	opt stack 0
  1768                           
  1769                           ; 1 bytes @ 0x1E
  1770  00007E                     	ds	1
  1771  00007F                     ??_store_connection_tb:
  1772  00007F                     MiApp_SetChannel@channel:
  1773                           	opt stack 0
  1774  00007F                     MiApp_ConnectionMode@Mode:
  1775                           	opt stack 0
  1776  00007F                     Read_MAC_Address@i:
  1777                           	opt stack 0
  1778  00007F                     ___lwmod@divisor:
  1779                           	opt stack 0
  1780                           
  1781                           ; 2 bytes @ 0x1F
  1782  00007F                     	ds	1
  1783  000080                     ??_MiMAC_ReceivedPacket:
  1784  000080                     MiApp_StartConnection@ScanDuration:
  1785                           	opt stack 0
  1786  000080                     IndirectPacket@DestinationAddress:
  1787                           	opt stack 0
  1788  000080                     DELAY_ms@cyclesRequiredForEntireDelay:
  1789                           	opt stack 0
  1790  000080                     ButtonPressed@tickDifference:
  1791                           	opt stack 0
  1792                           
  1793                           ; 4 bytes @ 0x20
  1794  000080                     	ds	1
  1795  000081                     store_connection_tb@j:
  1796                           	opt stack 0
  1797  000081                     ___lwmod@counter:
  1798                           	opt stack 0
  1799  000081                     MiApp_StartConnection@ChannelMap:
  1800                           	opt stack 0
  1801                           
  1802                           ; 4 bytes @ 0x21
  1803  000081                     	ds	1
  1804  000082                     ?_sprintf:
  1805                           	opt stack 0
  1806  000082                     store_connection_tb@i:
  1807                           	opt stack 0
  1808  000082                     IndirectPacket@isCommand:
  1809                           	opt stack 0
  1810  000082                     AddConnection@status:
  1811                           	opt stack 0
  1812  000082                     sprintf@sp:
  1813                           	opt stack 0
  1814  000082                     DELAY_10us@cyclesRequiredForEntireDelay:
  1815                           	opt stack 0
  1816                           
  1817                           ; 4 bytes @ 0x22
  1818  000082                     	ds	1
  1819  000083                     IndirectPacket@SecurityEnabled:
  1820                           	opt stack 0
  1821  000083                     AddConnection@connectionSlot:
  1822                           	opt stack 0
  1823                           
  1824                           ; 1 bytes @ 0x23
  1825  000083                     	ds	1
  1826  000084                     ??_IndirectPacket:
  1827  000084                     AddConnection@i:
  1828                           	opt stack 0
  1829  000084                     sprintf@f:
  1830                           	opt stack 0
  1831  000084                     MiMAC_Init@initValue:
  1832                           	opt stack 0
  1833  000084                     ButtonPressed@t:
  1834                           	opt stack 0
  1835                           
  1836                           ; 4 bytes @ 0x24
  1837  000084                     	ds	1
  1838  000085                     MiApp_StartConnection@Mode:
  1839                           	opt stack 0
  1840                           
  1841                           ; 1 bytes @ 0x25
  1842  000085                     	ds	1
  1843  000086                     TxPacket@CCA:
  1844                           	opt stack 0
  1845  000086                     IndirectPacket@Broadcast:
  1846                           	opt stack 0
  1847                           
  1848                           ; 1 bytes @ 0x26
  1849  000086                     	ds	1
  1850  000087                     ??_TxPacket:
  1851  000087                     MiMAC_Init@i:
  1852                           	opt stack 0
  1853  000087                     IndirectPacket@k:
  1854                           	opt stack 0
  1855                           
  1856                           ; 1 bytes @ 0x27
  1857  000087                     	ds	1
  1858  000088                     MiApp_ProtocolInit@bNetworkFreezer:
  1859                           	opt stack 0
  1860  000088                     IndirectPacket@i:
  1861                           	opt stack 0
  1862  000088                     MiMAC_ReceivedPacket@currentTick:
  1863                           	opt stack 0
  1864                           
  1865                           ; 4 bytes @ 0x28
  1866  000088                     	ds	1
  1867  000089                     IndirectPacket@j:
  1868                           	opt stack 0
  1869  000089                     MiApp_ProtocolInit@initValue:
  1870                           	opt stack 0
  1871                           
  1872                           ; 3 bytes @ 0x29
  1873  000089                     	ds	2
  1874  00008B                     TxPacket@t1:
  1875                           	opt stack 0
  1876                           
  1877                           ; 4 bytes @ 0x2B
  1878  00008B                     	ds	1
  1879  00008C                     MiMAC_ReceivedPacket@PayloadIndex:
  1880                           	opt stack 0
  1881  00008C                     MiApp_ProtocolInit@i:
  1882                           	opt stack 0
  1883                           
  1884                           ; 1 bytes @ 0x2C
  1885  00008C                     	ds	1
  1886  00008D                     MiMAC_ReceivedPacket@i:
  1887                           	opt stack 0
  1888                           
  1889                           ; 1 bytes @ 0x2D
  1890  00008D                     	ds	1
  1891  00008E                     ??_sprintf:
  1892                           
  1893                           ; 0 bytes @ 0x2E
  1894  00008E                     	ds	1
  1895  00008F                     TxPacket@t2:
  1896                           	opt stack 0
  1897                           
  1898                           ; 4 bytes @ 0x2F
  1899  00008F                     	ds	3
  1900  000092                     sprintf@idx:
  1901                           	opt stack 0
  1902                           
  1903                           ; 1 bytes @ 0x32
  1904  000092                     	ds	1
  1905  000093                     TxPacket@CCARetries:
  1906                           	opt stack 0
  1907  000093                     _sprintf$3865:
  1908                           	opt stack 0
  1909                           
  1910                           ; 2 bytes @ 0x33
  1911  000093                     	ds	1
  1912  000094                     TxPacket@reTry:
  1913                           	opt stack 0
  1914                           
  1915                           ; 1 bytes @ 0x34
  1916  000094                     	ds	1
  1917  000095                     TxPacket@allowedTxFailure:
  1918                           	opt stack 0
  1919  000095                     _sprintf$3866:
  1920                           	opt stack 0
  1921                           
  1922                           ; 2 bytes @ 0x35
  1923  000095                     	ds	1
  1924  000096                     TxPacket@rssival:
  1925                           	opt stack 0
  1926                           
  1927                           ; 1 bytes @ 0x36
  1928  000096                     	ds	1
  1929  000097                     TxPacket@status:
  1930                           	opt stack 0
  1931  000097                     _sprintf$3872:
  1932                           	opt stack 0
  1933                           
  1934                           ; 2 bytes @ 0x37
  1935  000097                     	ds	1
  1936  000098                     TxPacket@TxPacketLen:
  1937                           	opt stack 0
  1938                           
  1939                           ; 1 bytes @ 0x38
  1940  000098                     	ds	1
  1941  000099                     TxPacket@i:
  1942                           	opt stack 0
  1943  000099                     sprintf@cp:
  1944                           	opt stack 0
  1945                           
  1946                           ; 1 bytes @ 0x39
  1947  000099                     	ds	1
  1948  00009A                     sprintf@len:
  1949                           	opt stack 0
  1950  00009A                     MiMAC_SendPacket@transParam:
  1951                           	opt stack 0
  1952                           
  1953                           ; 3 bytes @ 0x3A
  1954  00009A                     	ds	2
  1955  00009C                     sprintf@ap:
  1956                           	opt stack 0
  1957                           
  1958                           ; 1 bytes @ 0x3C
  1959  00009C                     	ds	1
  1960  00009D                     MiMAC_SendPacket@MACPayload:
  1961                           	opt stack 0
  1962  00009D                     sprintf@val:
  1963                           	opt stack 0
  1964                           
  1965                           ; 2 bytes @ 0x3D
  1966  00009D                     	ds	2
  1967  00009F                     MiMAC_SendPacket@MACPayloadLen:
  1968                           	opt stack 0
  1969  00009F                     sprintf@prec:
  1970                           	opt stack 0
  1971                           
  1972                           ; 1 bytes @ 0x3F
  1973  00009F                     	ds	1
  1974  0000A0                     ??_MiMAC_SendPacket:
  1975  0000A0                     sprintf@width:
  1976                           	opt stack 0
  1977                           
  1978                           ; 2 bytes @ 0x40
  1979  0000A0                     	ds	1
  1980  0000A1                     MiMAC_SendPacket@TxIndex:
  1981                           	opt stack 0
  1982                           
  1983                           ; 1 bytes @ 0x41
  1984  0000A1                     	ds	1
  1985  0000A2                     MiMAC_SendPacket@i:
  1986                           	opt stack 0
  1987  0000A2                     sprintf@c:
  1988                           	opt stack 0
  1989                           
  1990                           ; 1 bytes @ 0x42
  1991  0000A2                     	ds	1
  1992  0000A3                     SendPacket@DestinationAddress:
  1993                           	opt stack 0
  1994  0000A3                     sprintf@flag:
  1995                           	opt stack 0
  1996                           
  1997                           ; 2 bytes @ 0x43
  1998  0000A3                     	ds	2
  1999  0000A5                     SendPacket@isCommand:
  2000                           	opt stack 0
  2001  0000A5                     LCDTRXCount@rxCount:
  2002                           	opt stack 0
  2003  0000A5                     LCDDisplay@text:
  2004                           	opt stack 0
  2005  0000A5                     Source_END_DEVICE_INFO@SrAddr:
  2006                           	opt stack 0
  2007                           
  2008                           ; 2 bytes @ 0x45
  2009  0000A5                     	ds	1
  2010  0000A6                     SendPacket@SecurityEnabled:
  2011                           	opt stack 0
  2012  0000A6                     LCDTRXCount@txCount:
  2013                           	opt stack 0
  2014                           
  2015                           ; 1 bytes @ 0x46
  2016  0000A6                     	ds	1
  2017  0000A7                     ??_SendPacket:
  2018  0000A7                     LCDDisplay@value:
  2019                           	opt stack 0
  2020  0000A7                     DemoOutput_UpdateTxRx@RxNum:
  2021                           	opt stack 0
  2022                           
  2023                           ; 1 bytes @ 0x47
  2024  0000A7                     	ds	1
  2025  0000A8                     SendPacket@status:
  2026                           	opt stack 0
  2027  0000A8                     LCDDisplay@delay:
  2028                           	opt stack 0
  2029  0000A8                     DemoOutput_UpdateTxRx@TxNum:
  2030                           	opt stack 0
  2031                           
  2032                           ; 1 bytes @ 0x48
  2033  0000A8                     	ds	1
  2034  0000A9                     SendPacket@Broadcast:
  2035                           	opt stack 0
  2036  0000A9                     LCDDisplay@i:
  2037                           	opt stack 0
  2038                           
  2039                           ; 1 bytes @ 0x49
  2040  0000A9                     	ds	1
  2041  0000AA                     DemoOutput_Channel@Step:
  2042                           	opt stack 0
  2043  0000AA                     STAR_DEMO_OPTIONS_MESSAGE@NetworkRole:
  2044                           	opt stack 0
  2045  0000AA                     freezer_feature@PressedButton1:
  2046                           	opt stack 0
  2047  0000AA                     SendPacket@tParam:
  2048                           	opt stack 0
  2049                           
  2050                           ; 3 bytes @ 0x4A
  2051  0000AA                     	ds	1
  2052  0000AB                     DemoOutput_Channel@channel:
  2053                           	opt stack 0
  2054                           
  2055                           ; 1 bytes @ 0x4B
  2056  0000AB                     	ds	2
  2057  0000AD                     ??_MiApp_BroadcastConnectionTable:
  2058  0000AD                     ??_StartChannelHopping:
  2059  0000AD                     MiApp_BroadcastPacket@SecEn:
  2060                           	opt stack 0
  2061  0000AD                     send_link_status@send_status:
  2062                           	opt stack 0
  2063  0000AD                     MiApp_UnicastAddress@DestinationAddress:
  2064                           	opt stack 0
  2065  0000AD                     SW_Ack_SrED@Dest_Addr:
  2066                           	opt stack 0
  2067  0000AD                     MiApp_RemoveConnection@j:
  2068                           	opt stack 0
  2069                           
  2070                           ; 2 bytes @ 0x4D
  2071  0000AD                     	ds	1
  2072  0000AE                     MiApp_BroadcastPacket@i:
  2073                           	opt stack 0
  2074                           
  2075                           ; 1 bytes @ 0x4E
  2076  0000AE                     	ds	1
  2077  0000AF                     MiApp_UnicastAddress@PermanentAddr:
  2078                           	opt stack 0
  2079  0000AF                     MiApp_RemoveConnection@j_1610:
  2080                           	opt stack 0
  2081                           
  2082                           ; 2 bytes @ 0x4F
  2083  0000AF                     	ds	1
  2084  0000B0                     MiApp_UnicastAddress@SecEn:
  2085                           	opt stack 0
  2086                           
  2087                           ; 1 bytes @ 0x50
  2088  0000B0                     	ds	1
  2089  0000B1                     MiApp_UnicastAddress@i:
  2090                           	opt stack 0
  2091  0000B1                     MiApp_RemoveConnection@ConnectionIndex:
  2092                           	opt stack 0
  2093  0000B1                     StartChannelHopping@t1:
  2094                           	opt stack 0
  2095                           
  2096                           ; 4 bytes @ 0x51
  2097  0000B1                     	ds	1
  2098  0000B2                     MiApp_UnicastConnection@SecEn:
  2099                           	opt stack 0
  2100  0000B2                     MiApp_RemoveConnection@i:
  2101                           	opt stack 0
  2102                           
  2103                           ; 1 bytes @ 0x52
  2104  0000B2                     	ds	1
  2105  0000B3                     ??_MiApp_UnicastConnection:
  2106  0000B3                     
  2107                           ; 0 bytes @ 0x53
  2108  0000B3                     	ds	1
  2109  0000B4                     MiApp_BroadcastConnectionTable@count:
  2110                           	opt stack 0
  2111  0000B4                     Find_InActiveDevices@i:
  2112                           	opt stack 0
  2113                           
  2114                           ; 1 bytes @ 0x54
  2115  0000B4                     	ds	1
  2116  0000B5                     MiApp_BroadcastConnectionTable@broadcast_count:
  2117                           	opt stack 0
  2118  0000B5                     StartChannelHopping@t2:
  2119                           	opt stack 0
  2120  0000B5                     MiApp_UnicastConnection@address:
  2121                           	opt stack 0
  2122                           
  2123                           ; 8 bytes @ 0x55
  2124  0000B5                     	ds	1
  2125  0000B6                     MiApp_BroadcastConnectionTable@k:
  2126                           	opt stack 0
  2127                           
  2128                           ; 1 bytes @ 0x56
  2129  0000B6                     	ds	1
  2130  0000B7                     MiApp_BroadcastConnectionTable@i:
  2131                           	opt stack 0
  2132                           
  2133                           ; 1 bytes @ 0x57
  2134  0000B7                     	ds	1
  2135  0000B8                     MiApp_BroadcastConnectionTable@j:
  2136                           	opt stack 0
  2137                           
  2138                           ; 1 bytes @ 0x58
  2139  0000B8                     	ds	1
  2140  0000B9                     StartChannelHopping@OptimalChannel:
  2141                           	opt stack 0
  2142                           
  2143                           ; 1 bytes @ 0x59
  2144  0000B9                     	ds	1
  2145  0000BA                     StartChannelHopping@i:
  2146                           	opt stack 0
  2147                           
  2148                           ; 1 bytes @ 0x5A
  2149  0000BA                     	ds	3
  2150  0000BD                     MiApp_UnicastConnection@ConnectionIndex:
  2151                           	opt stack 0
  2152                           
  2153                           ; 1 bytes @ 0x5D
  2154  0000BD                     	ds	1
  2155  0000BE                     MiApp_UnicastConnection@i:
  2156                           	opt stack 0
  2157                           
  2158                           ; 1 bytes @ 0x5E
  2159  0000BE                     	ds	1
  2160  0000BF                     Forward_Packet_PANCr_to_EDy@fw_payload:
  2161                           	opt stack 0
  2162                           
  2163                           ; 2 bytes @ 0x5F
  2164  0000BF                     	ds	2
  2165  0000C1                     Forward_Packet_PANCr_to_EDy@index:
  2166                           	opt stack 0
  2167                           
  2168                           ; 1 bytes @ 0x61
  2169  0000C1                     	ds	1
  2170  0000C2                     Forward_Packet_PANCr_to_EDy@EDxAddress:
  2171                           	opt stack 0
  2172                           
  2173                           ; 2 bytes @ 0x62
  2174  0000C2                     	ds	2
  2175  0000C4                     Forward_Packet_PANCr_to_EDy@status:
  2176                           	opt stack 0
  2177                           
  2178                           ; 1 bytes @ 0x64
  2179  0000C4                     	ds	1
  2180  0000C5                     Forward_Packet_PANCr_to_EDy@i:
  2181                           	opt stack 0
  2182                           
  2183                           ; 1 bytes @ 0x65
  2184  0000C5                     	ds	1
  2185  0000C6                     ??_P2PTasks:
  2186                           
  2187                           ; 0 bytes @ 0x66
  2188  0000C6                     	ds	8
  2189  0000CE                     ??_MiApp_UnicastStar:
  2190  0000CE                     MiApp_EstablishConnection@Mode:
  2191                           	opt stack 0
  2192  0000CE                     Process_RxMessage@User_data_status:
  2193                           	opt stack 0
  2194                           
  2195                           ; 1 bytes @ 0x6E
  2196  0000CE                     	ds	1
  2197  0000CF                     ??_MiApp_EstablishConnection:
  2198                           
  2199                           ; 0 bytes @ 0x6F
  2200  0000CF                     	ds	4
  2201  0000D3                     Initialize_Demo@freezer_enable:
  2202                           	opt stack 0
  2203  0000D3                     run_star_demo@sw_layer_ack_status:
  2204                           	opt stack 0
  2205                           
  2206                           ; 1 bytes @ 0x73
  2207  0000D3                     	ds	1
  2208  0000D4                     run_star_demo@update_ed:
  2209                           	opt stack 0
  2210                           
  2211                           ; 1 bytes @ 0x74
  2212  0000D4                     	ds	1
  2213  0000D5                     run_star_demo@PressedButton:
  2214                           	opt stack 0
  2215                           
  2216                           ; 1 bytes @ 0x75
  2217  0000D5                     	ds	1
  2218  0000D6                     run_star_demo@switch_val:
  2219                           	opt stack 0
  2220                           
  2221                           ; 1 bytes @ 0x76
  2222  0000D6                     	ds	1
  2223  0000D7                     run_star_demo@select_ed:
  2224                           	opt stack 0
  2225                           
  2226                           ; 1 bytes @ 0x77
  2227  0000D7                     	ds	1
  2228  0000D8                     main@freezer_enable:
  2229                           	opt stack 0
  2230                           
  2231                           ; 1 bytes @ 0x78
  2232  0000D8                     	ds	1
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           
  2240                           	psect	cstackCOMRAM
  2241  000001                     __pcstackCOMRAM:
  2242                           	opt stack 0
  2243  000001                     ?i2_MiWi_TickGet:
  2244                           	opt stack 0
  2245  000001                     i2SPI1_Exchange8bit@data:
  2246                           	opt stack 0
  2247  000001                     i2DELAY_10us@tenMicroSecondCounter:
  2248                           	opt stack 0
  2249                           
  2250                           ; 4 bytes @ 0x0
  2251  000001                     	ds	1
  2252  000002                     i2RegisterRead@address:
  2253                           	opt stack 0
  2254  000002                     i2WriteFIFO@Data:
  2255                           	opt stack 0
  2256  000002                     i2RegisterSet@setting:
  2257                           	opt stack 0
  2258                           
  2259                           ; 2 bytes @ 0x1
  2260  000002                     	ds	1
  2261  000003                     i2RegisterRead@value:
  2262                           	opt stack 0
  2263  000003                     i2WriteFIFO@IRQ1select:
  2264                           	opt stack 0
  2265                           
  2266                           ; 1 bytes @ 0x2
  2267  000003                     	ds	1
  2268  000004                     i2RegisterSet@IRQ1select:
  2269                           	opt stack 0
  2270  000004                     i2RegisterRead@IRQ1select:
  2271                           	opt stack 0
  2272  000004                     i2WriteFIFO@IRQ0select:
  2273                           	opt stack 0
  2274                           
  2275                           ; 1 bytes @ 0x3
  2276  000004                     	ds	1
  2277  000005                     ??i2_DELAY_10us:
  2278  000005                     ??i2_MiWi_TickGet:
  2279  000005                     i2RegisterSet@IRQ0select:
  2280                           	opt stack 0
  2281  000005                     i2RegisterRead@IRQ0select:
  2282                           	opt stack 0
  2283                           
  2284                           ; 1 bytes @ 0x4
  2285  000005                     	ds	1
  2286  000006                     i2SetRFMode@mode:
  2287                           	opt stack 0
  2288  000006                     i2MiWi_TickGet@failureCounter:
  2289                           	opt stack 0
  2290                           
  2291                           ; 1 bytes @ 0x5
  2292  000006                     	ds	1
  2293  000007                     i2MiWi_TickGet@currentTime:
  2294                           	opt stack 0
  2295                           
  2296                           ; 4 bytes @ 0x6
  2297  000007                     	ds	6
  2298  00000D                     i2DELAY_10us@cyclesRequiredForEntireDelay:
  2299                           	opt stack 0
  2300                           
  2301                           ; 4 bytes @ 0xC
  2302  00000D                     	ds	4
  2303  000011                     i2TxPacket@CCA:
  2304                           	opt stack 0
  2305                           
  2306                           ; 1 bytes @ 0x10
  2307  000011                     	ds	1
  2308  000012                     ??i2_TxPacket:
  2309                           
  2310                           ; 0 bytes @ 0x11
  2311  000012                     	ds	4
  2312  000016                     i2TxPacket@TxPacketLen:
  2313                           	opt stack 0
  2314                           
  2315                           ; 1 bytes @ 0x15
  2316  000016                     	ds	1
  2317  000017                     i2TxPacket@status:
  2318                           	opt stack 0
  2319                           
  2320                           ; 1 bytes @ 0x16
  2321  000017                     	ds	1
  2322  000018                     i2TxPacket@t1:
  2323                           	opt stack 0
  2324                           
  2325                           ; 4 bytes @ 0x17
  2326  000018                     	ds	4
  2327  00001C                     i2TxPacket@t2:
  2328                           	opt stack 0
  2329                           
  2330                           ; 4 bytes @ 0x1B
  2331  00001C                     	ds	4
  2332  000020                     i2TxPacket@CCARetries:
  2333                           	opt stack 0
  2334                           
  2335                           ; 1 bytes @ 0x1F
  2336  000020                     	ds	1
  2337  000021                     i2TxPacket@reTry:
  2338                           	opt stack 0
  2339                           
  2340                           ; 1 bytes @ 0x20
  2341  000021                     	ds	1
  2342  000022                     i2TxPacket@allowedTxFailure:
  2343                           	opt stack 0
  2344                           
  2345                           ; 1 bytes @ 0x21
  2346  000022                     	ds	1
  2347  000023                     i2TxPacket@rssival:
  2348                           	opt stack 0
  2349                           
  2350                           ; 1 bytes @ 0x22
  2351  000023                     	ds	1
  2352  000024                     i2TxPacket@i:
  2353                           	opt stack 0
  2354                           
  2355                           ; 1 bytes @ 0x23
  2356  000024                     	ds	1
  2357  000025                     ??_high_isr:
  2358                           
  2359                           ; 0 bytes @ 0x24
  2360  000025                     	ds	10
  2361                           tblptru	equ	0xFF8
  2362                           tblptrh	equ	0xFF7
  2363                           tblptrl	equ	0xFF6
  2364                           tablat	equ	0xFF5
  2365                           postinc0	equ	0xFEE
  2366                           wreg	equ	0xFE8
  2367                           
  2368 ;;
  2369 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2370 ;;
  2371 ;; *************** function _main *****************
  2372 ;; Defined at:
  2373 ;;		line 56 in file "../src/main.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  freezer_enab    1  120[BANK0 ] unsigned char 
  2378 ;; Return value:  Size  Location     Type
  2379 ;;		None               void
  2380 ;; Registers used:
  2381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : D/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2390 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2391 ;;Total ram usage:        1 bytes
  2392 ;; Hardware stack levels required when called:   22
  2393 ;; This function calls:
  2394 ;;		_DemoOutput_Greeting
  2395 ;;		_Initialize_Demo
  2396 ;;		_Run_Demo
  2397 ;;		_SYSTEM_Initialize
  2398 ;;		_TMR1_Initialize
  2399 ;;		_freezer_feature
  2400 ;; This function is called by:
  2401 ;;		Startup code after reset
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           	psect	text0
  2406  0040FE                     __ptext0:
  2407                           	opt stack 0
  2408  0040FE                     _main:
  2409                           	opt stack 9
  2410                           
  2411                           ;main.c: 60: SYSTEM_Initialize();
  2412                           
  2413                           ;incstack = 0
  2414  0040FE  ECED  F016         	call	_SYSTEM_Initialize	;wreg free
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;main.c: 62: TMR1_Initialize();
  2418  004102  ECAC  F020         	call	_TMR1_Initialize	;wreg free
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;main.c: 64: DemoOutput_Greeting();
  2422  004106  EC8E  F020         	call	_DemoOutput_Greeting	;wreg free
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;main.c: 68: freezer_enable = freezer_feature();
  2426  00410A  EC39  F020         	call	_freezer_feature	;wreg free
  2427  00410E  6FD8               	movwf	main@freezer_enable& (0+255),b
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;main.c: 72: Initialize_Demo(freezer_enable);
  2431  004110  51D8               	movf	main@freezer_enable& (0+255),w,b
  2432  004112  EC17  F019         	call	_Initialize_Demo
  2433  004116                     l11828:
  2434                           
  2435                           ;main.c: 74: {
  2436                           ;main.c: 76: Run_Demo();
  2437  004116  EC11  F021         	call	_Run_Demo	;wreg free
  2438  00411A  D7FD               	goto	l11828
  2439  00411C                     __end_of_main:
  2440                           	opt stack 0
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           postinc0	equ	0xFEE
  2446                           wreg	equ	0xFE8
  2447                           
  2448 ;; *************** function _freezer_feature *****************
  2449 ;; Defined at:
  2450 ;;		line 69 in file "../src/task.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  PressedButto    1   74[BANK0 ] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      unsigned char 
  2457 ;; Registers used:
  2458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : F/0
  2461 ;;		On exit  : F/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2465 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2467 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2468 ;;Total ram usage:        1 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:   12
  2471 ;; This function calls:
  2472 ;;		_ButtonPressed
  2473 ;;		_LCDDisplay
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text1
  2480  004072                     __ptext1:
  2481                           	opt stack 0
  2482  004072                     _freezer_feature:
  2483                           	opt stack 18
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;task.c: 74: LCDDisplay((char *)"SW1:New Network SW2:Freezer", 0, 0);
  2487                           
  2488                           ;incstack = 0
  2489  004072  0E8B               	movlw	low STR_29
  2490  004074  6FA5               	movwf	LCDDisplay@text& (0+255),b
  2491  004076  0EFE               	movlw	high STR_29
  2492  004078  6FA6               	movwf	(LCDDisplay@text+1)& (0+255),b
  2493  00407A  6BA7               	clrf	LCDDisplay@value& (0+255),b
  2494  00407C  6BA8               	clrf	LCDDisplay@delay& (0+255),b
  2495  00407E  ECA4  F01E         	call	_LCDDisplay	;wreg free
  2496  004082                     l11492:
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;task.c: 77: {
  2500                           ;task.c: 78: uint8_t PressedButton1 = ButtonPressed();
  2501  004082  ECA9  F019         	call	_ButtonPressed	;wreg free
  2502  004086  0100               	movlb	0	; () banked
  2503  004088  6FAA               	movwf	freezer_feature@PressedButton1& (0+255),b
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;task.c: 79: if (PressedButton1 == 1)
  2507  00408A  05AA               	decf	freezer_feature@PressedButton1& (0+255),w,b
  2508  00408C  E101               	bnz	l11504
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;task.c: 80: {
  2512                           ;task.c: 81: return 0;
  2513  00408E  0C00               	retlw	0
  2514  004090                     l11504:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;task.c: 84: else if (PressedButton1 == 2)
  2518  004090  0E02               	movlw	2
  2519  004092  19AA               	xorwf	freezer_feature@PressedButton1& (0+255),w,b
  2520  004094  E1F6               	bnz	l11492
  2521                           
  2522                           ; BSR set to: 0
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;task.c: 85: {
  2526                           ;task.c: 86: return 1;
  2527  004096  0C01               	retlw	1	;funcret
  2528  004098                     __end_of_freezer_feature:
  2529                           	opt stack 0
  2530                           tblptru	equ	0xFF8
  2531                           tblptrh	equ	0xFF7
  2532                           tblptrl	equ	0xFF6
  2533                           tablat	equ	0xFF5
  2534                           postinc0	equ	0xFEE
  2535                           wreg	equ	0xFE8
  2536                           
  2537 ;; *************** function _TMR1_Initialize *****************
  2538 ;; Defined at:
  2539 ;;		line 175 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;		None               void
  2546 ;; Registers used:
  2547 ;;		wreg, status,2, cstack
  2548 ;; Tracked objects:
  2549 ;;		On entry : F/0
  2550 ;;		On exit  : F/0
  2551 ;;		Unchanged: F/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    9
  2560 ;; This function calls:
  2561 ;;		_TMR1_StartTimer
  2562 ;; This function is called by:
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text2
  2568  004158                     __ptext2:
  2569                           	opt stack 0
  2570  004158                     _TMR1_Initialize:
  2571                           	opt stack 21
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;symbol.c: 179: T1CON = 0x38;
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;incstack = 0
  2578  004158  0E38               	movlw	56
  2579  00415A  6ECD               	movwf	4045,c	;volatile
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;symbol.c: 182: T1GCON = 0x00;
  2583  00415C  6A9A               	clrf	3994,c	;volatile
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;symbol.c: 185: TMR1H = 0x00;
  2587  00415E  6ACF               	clrf	4047,c	;volatile
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;symbol.c: 188: TMR1L = 0x00;
  2591  004160  6ACE               	clrf	4046,c	;volatile
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;symbol.c: 191: timer1ReloadVal = TMR1;
  2595  004162  CFCE F193          	movff	4046,_timer1ReloadVal	;volatile
  2596  004166  CFCF F194          	movff	4047,_timer1ReloadVal+1	;volatile
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;symbol.c: 194: PIR1bits.TMR1IF = 0;
  2600  00416A  909E               	bcf	3998,0,c	;volatile
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;symbol.c: 197: PIE1bits.TMR1IE = 1;
  2604  00416C  809D               	bsf	3997,0,c	;volatile
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;symbol.c: 200: TMR1_StartTimer();
  2608  00416E  EF0F  F021         	goto	_TMR1_StartTimer	;wreg free
  2609  004172                     __end_of_TMR1_Initialize:
  2610                           	opt stack 0
  2611                           tblptru	equ	0xFF8
  2612                           tblptrh	equ	0xFF7
  2613                           tblptrl	equ	0xFF6
  2614                           tablat	equ	0xFF5
  2615                           postinc0	equ	0xFEE
  2616                           wreg	equ	0xFE8
  2617                           
  2618 ;; *************** function _TMR1_StartTimer *****************
  2619 ;; Defined at:
  2620 ;;		line 203 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;		None               void
  2627 ;; Registers used:
  2628 ;;		None
  2629 ;; Tracked objects:
  2630 ;;		On entry : F/0
  2631 ;;		On exit  : F/0
  2632 ;;		Unchanged: F/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2638 ;;Total ram usage:        0 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    8
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_TMR1_Initialize
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text3
  2649  00421E                     __ptext3:
  2650                           	opt stack 0
  2651  00421E                     _TMR1_StartTimer:
  2652                           	opt stack 21
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;symbol.c: 205: T1CONbits.TMR1ON = 1;
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;incstack = 0
  2659  00421E  80CD               	bsf	4045,0,c	;volatile
  2660                           
  2661                           ; BSR set to: 0
  2662  004220  0012               	return		;funcret
  2663  004222                     __end_of_TMR1_StartTimer:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           postinc0	equ	0xFEE
  2670                           wreg	equ	0xFE8
  2671                           
  2672 ;; *************** function _SYSTEM_Initialize *****************
  2673 ;; Defined at:
  2674 ;;		line 46 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;		None               void
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : F/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:   11
  2695 ;; This function calls:
  2696 ;;		_LCD_Initialize
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text4
  2703  002DDA                     __ptext4:
  2704                           	opt stack 0
  2705  002DDA                     _SYSTEM_Initialize:
  2706                           	opt stack 19
  2707                           
  2708                           ;system.c: 51: OSCCON = 0x78;
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;incstack = 0
  2712  002DDA  0E78               	movlw	120
  2713  002DDC  6ED3               	movwf	4051,c	;volatile
  2714                           
  2715                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
  2716  002DDE  8C9B               	bsf	3995,6,c	;volatile
  2717                           
  2718                           ;system.c: 53: WDTCONbits.SWDTEN = 0;
  2719  002DE0  90C0               	bcf	4032,0,c	;volatile
  2720                           
  2721                           ;system.c: 59: EECON2 = 0x55;
  2722  002DE2  0E55               	movlw	85
  2723  002DE4  6EA7               	movwf	4007,c	;volatile
  2724                           
  2725                           ;system.c: 60: EECON2 = 0xAA;
  2726  002DE6  0EAA               	movlw	170
  2727  002DE8  6EA7               	movwf	4007,c	;volatile
  2728                           
  2729                           ;system.c: 61: PPSCONbits.IOLOCK = 0;
  2730  002DEA  010E               	movlb	14	; () banked
  2731  002DEC  91FF               	bcf	255,0,b	;volatile
  2732                           
  2733                           ;system.c: 63: RPINR1 = 17;
  2734  002DEE  0E11               	movlw	17
  2735  002DF0  6FE7               	movwf	231,b	;volatile
  2736                           
  2737                           ;system.c: 64: RPINR21 = 23;
  2738  002DF2  0E17               	movlw	23
  2739  002DF4  6FFB               	movwf	251,b	;volatile
  2740                           
  2741                           ;system.c: 65: RPOR21 = 10;
  2742  002DF6  0E0A               	movlw	10
  2743  002DF8  6FDB               	movwf	219,b	;volatile
  2744                           
  2745                           ;system.c: 66: RPOR19 = 9;
  2746  002DFA  0E09               	movlw	9
  2747  002DFC  6FD9               	movwf	217,b	;volatile
  2748                           
  2749                           ;system.c: 69: EECON2 = 0x55;
  2750  002DFE  0E55               	movlw	85
  2751  002E00  6EA7               	movwf	4007,c	;volatile
  2752                           
  2753                           ;system.c: 70: EECON2 = 0xAA;
  2754  002E02  0EAA               	movlw	170
  2755  002E04  6EA7               	movwf	4007,c	;volatile
  2756                           
  2757                           ; BSR set to: 14
  2758                           ;system.c: 71: PPSCONbits.IOLOCK = 1;
  2759  002E06  81FF               	bsf	255,0,b	;volatile
  2760                           
  2761                           ;system.c: 76: ANCON0 = 0xFC;
  2762  002E08  0EFC               	movlw	252
  2763  002E0A  010F               	movlb	15	; () banked
  2764  002E0C  6F48               	movwf	72,b	;volatile
  2765                           
  2766                           ;system.c: 77: ANCON1 = 0x1F;
  2767  002E0E  0E1F               	movlw	31
  2768  002E10  6F49               	movwf	73,b	;volatile
  2769                           
  2770                           ; BSR set to: 15
  2771                           ;system.c: 82: LATCbits.LATC2 = 0;
  2772  002E12  948B               	bcf	3979,2,c	;volatile
  2773                           
  2774                           ; BSR set to: 15
  2775                           ;system.c: 83: LATAbits.LATA6 = 0;
  2776  002E14  9C89               	bcf	3977,6,c	;volatile
  2777                           
  2778                           ; BSR set to: 15
  2779                           ;system.c: 84: LATAbits.LATA7 = 0;
  2780  002E16  9E89               	bcf	3977,7,c	;volatile
  2781                           
  2782                           ; BSR set to: 15
  2783                           ;system.c: 85: TRISCbits.TRISC2 = 0;
  2784  002E18  9494               	bcf	3988,2,c	;volatile
  2785                           
  2786                           ; BSR set to: 15
  2787                           ;system.c: 86: TRISAbits.TRISA6 = 0;
  2788  002E1A  9C92               	bcf	3986,6,c	;volatile
  2789                           
  2790                           ; BSR set to: 15
  2791                           ;system.c: 87: TRISAbits.TRISA7 = 0;
  2792  002E1C  9E92               	bcf	3986,7,c	;volatile
  2793                           
  2794                           ; BSR set to: 15
  2795                           ;system.c: 89: TRISBbits.TRISB1 = 1;
  2796  002E1E  8293               	bsf	3987,1,c	;volatile
  2797                           
  2798                           ; BSR set to: 15
  2799                           ;system.c: 90: TRISBbits.TRISB2 = 1;
  2800  002E20  8493               	bsf	3987,2,c	;volatile
  2801                           
  2802                           ; BSR set to: 15
  2803                           ;system.c: 92: INTCON2bits.RBPU = 0;
  2804  002E22  9EF1               	bcf	intcon2,7,c	;volatile
  2805                           
  2806                           ; BSR set to: 15
  2807                           ;system.c: 97: TRISAbits.TRISA1 = 1;
  2808  002E24  8292               	bsf	3986,1,c	;volatile
  2809                           
  2810                           ; BSR set to: 15
  2811                           ;system.c: 98: TRISAbits.TRISA0 = 1;
  2812  002E26  8092               	bsf	3986,0,c	;volatile
  2813                           
  2814                           ; BSR set to: 15
  2815                           ;system.c: 107: LATAbits.LATA5 = 1;
  2816  002E28  8A89               	bsf	3977,5,c	;volatile
  2817                           
  2818                           ; BSR set to: 15
  2819                           ;system.c: 108: LATDbits.LATD1 = 1;
  2820  002E2A  828C               	bsf	3980,1,c	;volatile
  2821                           
  2822                           ; BSR set to: 15
  2823                           ;system.c: 110: TRISAbits.TRISA5 = 0;
  2824  002E2C  9A92               	bcf	3986,5,c	;volatile
  2825                           
  2826                           ; BSR set to: 15
  2827                           ;system.c: 111: TRISDbits.TRISD1 = 0;
  2828  002E2E  9295               	bcf	3989,1,c	;volatile
  2829                           
  2830                           ; BSR set to: 15
  2831                           ;system.c: 113: TRISBbits.TRISB0 = 1;
  2832  002E30  8093               	bsf	3987,0,c	;volatile
  2833                           
  2834                           ; BSR set to: 15
  2835                           ;system.c: 114: TRISCbits.TRISC6 = 1;
  2836  002E32  8C94               	bsf	3988,6,c	;volatile
  2837                           
  2838                           ; BSR set to: 15
  2839                           ;system.c: 117: INTCON2bits.INTEDG1 = 1;
  2840  002E34  8AF1               	bsf	intcon2,5,c	;volatile
  2841                           
  2842                           ; BSR set to: 15
  2843                           ;system.c: 120: INTCON2bits.INTEDG0 = 1;
  2844  002E36  8CF1               	bsf	intcon2,6,c	;volatile
  2845                           
  2846                           ; BSR set to: 15
  2847                           ;system.c: 122: INTCONbits.INT0IF = 0;
  2848  002E38  92F2               	bcf	intcon,1,c	;volatile
  2849                           
  2850                           ; BSR set to: 15
  2851                           ;system.c: 123: INTCONbits.INT0IE = 1;
  2852  002E3A  88F2               	bsf	intcon,4,c	;volatile
  2853                           
  2854                           ; BSR set to: 15
  2855                           ;system.c: 124: INTCON3bits.INT1IF = 0;
  2856  002E3C  90F0               	bcf	intcon3,0,c	;volatile
  2857                           
  2858                           ; BSR set to: 15
  2859                           ;system.c: 125: INTCON3bits.INT1IE = 1;
  2860  002E3E  86F0               	bsf	intcon3,3,c	;volatile
  2861                           
  2862                           ; BSR set to: 15
  2863                           ;system.c: 129: TRISBbits.TRISB5 = 1;
  2864  002E40  8A93               	bsf	3987,5,c	;volatile
  2865                           
  2866                           ; BSR set to: 15
  2867                           ;system.c: 130: TRISCbits.TRISC7 = 0;
  2868  002E42  9E94               	bcf	3988,7,c	;volatile
  2869                           
  2870                           ; BSR set to: 15
  2871                           ;system.c: 131: TRISBbits.TRISB4 = 0;
  2872  002E44  9893               	bcf	3987,4,c	;volatile
  2873                           
  2874                           ;system.c: 133: SSP1STAT = 0xC0;
  2875  002E46  0EC0               	movlw	192
  2876  002E48  6EC7               	movwf	4039,c	;volatile
  2877                           
  2878                           ;system.c: 134: SSP1CON1 = 0x21;
  2879  002E4A  0E21               	movlw	33
  2880  002E4C  6EC6               	movwf	4038,c	;volatile
  2881                           
  2882                           ; BSR set to: 15
  2883                           ;system.c: 136: LATDbits.LATD0 = 0;
  2884  002E4E  908C               	bcf	3980,0,c	;volatile
  2885                           
  2886                           ; BSR set to: 15
  2887                           ;system.c: 137: TRISDbits.TRISD0 = 1;
  2888  002E50  8095               	bsf	3989,0,c	;volatile
  2889                           
  2890                           ; BSR set to: 15
  2891                           ;system.c: 143: LATDbits.LATD5 = 1;
  2892  002E52  8A8C               	bsf	3980,5,c	;volatile
  2893                           
  2894                           ; BSR set to: 15
  2895                           ;system.c: 144: TRISDbits.TRISD5 = 0;
  2896  002E54  9A95               	bcf	3989,5,c	;volatile
  2897                           
  2898                           ; BSR set to: 15
  2899                           ;system.c: 145: LATEbits.LATE2 = 1;
  2900  002E56  848D               	bsf	3981,2,c	;volatile
  2901                           
  2902                           ; BSR set to: 15
  2903                           ;system.c: 146: TRISEbits.TRISE2 = 0;
  2904  002E58  9496               	bcf	3990,2,c	;volatile
  2905                           
  2906                           ; BSR set to: 15
  2907                           ;system.c: 152: LATEbits.LATE1 = 0;
  2908  002E5A  928D               	bcf	3981,1,c	;volatile
  2909                           
  2910                           ; BSR set to: 15
  2911                           ;system.c: 153: LATDbits.LATD7 = 1;
  2912  002E5C  8E8C               	bsf	3980,7,c	;volatile
  2913                           
  2914                           ; BSR set to: 15
  2915                           ;system.c: 154: LATDbits.LATD3 = 0;
  2916  002E5E  968C               	bcf	3980,3,c	;volatile
  2917                           
  2918                           ; BSR set to: 15
  2919                           ;system.c: 155: LATEbits.LATE0 = 0;
  2920  002E60  908D               	bcf	3981,0,c	;volatile
  2921                           
  2922                           ; BSR set to: 15
  2923                           ;system.c: 156: TRISEbits.TRISE1 = 0;
  2924  002E62  9296               	bcf	3990,1,c	;volatile
  2925                           
  2926                           ; BSR set to: 15
  2927                           ;system.c: 157: TRISDbits.TRISD7 = 0;
  2928  002E64  9E95               	bcf	3989,7,c	;volatile
  2929                           
  2930                           ; BSR set to: 15
  2931                           ;system.c: 158: TRISDbits.TRISD3 = 0;
  2932  002E66  9695               	bcf	3989,3,c	;volatile
  2933                           
  2934                           ; BSR set to: 15
  2935                           ;system.c: 159: TRISEbits.TRISE0 = 0;
  2936  002E68  9096               	bcf	3990,0,c	;volatile
  2937                           
  2938                           ; BSR set to: 15
  2939                           ;system.c: 164: TRISDbits.TRISD6 = 1;
  2940  002E6A  8C95               	bsf	3989,6,c	;volatile
  2941                           
  2942                           ; BSR set to: 15
  2943                           ;system.c: 165: TRISDbits.TRISD2 = 0;
  2944  002E6C  9495               	bcf	3989,2,c	;volatile
  2945                           
  2946                           ; BSR set to: 15
  2947                           ;system.c: 166: TRISDbits.TRISD4 = 0;
  2948  002E6E  9895               	bcf	3989,4,c	;volatile
  2949                           
  2950                           ; BSR set to: 15
  2951                           ;system.c: 168: SSP2STAT = 0x00;
  2952  002E70  6A73               	clrf	3955,c	;volatile
  2953                           
  2954                           ;system.c: 169: SSP2CON1 = 0x31;
  2955  002E72  0E31               	movlw	49
  2956  002E74  6E72               	movwf	3954,c	;volatile
  2957                           
  2958                           ; BSR set to: 15
  2959                           ;system.c: 171: PIR3bits.SSP2IF = 0;
  2960  002E76  9EA4               	bcf	4004,7,c	;volatile
  2961                           
  2962                           ; BSR set to: 15
  2963                           ;system.c: 173: LCD_Initialize();
  2964  002E78  EC7F  F014         	call	_LCD_Initialize	;wreg free
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;system.c: 178: INTCONbits.GIEH = 1;
  2968  002E7C  8EF2               	bsf	intcon,7,c	;volatile
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;system.c: 179: INTCONbits.GIEL = 1;
  2972  002E7E  8CF2               	bsf	intcon,6,c	;volatile
  2973                           
  2974                           ; BSR set to: 0
  2975  002E80  0012               	return		;funcret
  2976  002E82                     __end_of_SYSTEM_Initialize:
  2977                           	opt stack 0
  2978                           tblptru	equ	0xFF8
  2979                           tblptrh	equ	0xFF7
  2980                           tblptrl	equ	0xFF6
  2981                           tablat	equ	0xFF5
  2982                           intcon	equ	0xFF2
  2983                           intcon2	equ	0xFF1
  2984                           intcon3	equ	0xFF0
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           
  2988 ;; *************** function _LCD_Initialize *****************
  2989 ;; Defined at:
  2990 ;;		line 54 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;		None               void
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : F/F
  3001 ;;		On exit  : F/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;Total ram usage:        0 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:   10
  3011 ;; This function calls:
  3012 ;;		_DELAY_ms
  3013 ;;		_LCD_WriteCmd
  3014 ;; This function is called by:
  3015 ;;		_SYSTEM_Initialize
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text5
  3020  0028FE                     __ptext5:
  3021                           	opt stack 0
  3022  0028FE                     _LCD_Initialize:
  3023                           	opt stack 19
  3024                           
  3025                           ; BSR set to: 15
  3026                           ;lcd.c: 56: LATDbits.LATD7 = 1;
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;incstack = 0
  3030  0028FE  8E8C               	bsf	3980,7,c	;volatile
  3031                           
  3032                           ;lcd.c: 57: LATEbits.LATE0 = 0;
  3033  002900  908D               	bcf	3981,0,c	;volatile
  3034                           
  3035                           ; BSR set to: 15
  3036                           ;lcd.c: 58: DELAY_ms(8);
  3037  002902  0100               	movlb	0	; () banked
  3038  002904  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3039  002906  0E08               	movlw	8
  3040  002908  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3041  00290A  ECC7  F015         	call	_DELAY_ms	;wreg free
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;lcd.c: 59: LATEbits.LATE0 = 1;
  3045  00290E  808D               	bsf	3981,0,c	;volatile
  3046                           
  3047                           ;lcd.c: 60: DELAY_ms(80);
  3048  002910  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3049  002912  0E50               	movlw	80
  3050  002914  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3051  002916  ECC7  F015         	call	_DELAY_ms	;wreg free
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;lcd.c: 61: LCD_WriteCmd(0x30);
  3055  00291A  0E30               	movlw	48
  3056  00291C  ECE0  F020         	call	_LCD_WriteCmd
  3057                           
  3058                           ;lcd.c: 62: DELAY_ms(8);
  3059  002920  0100               	movlb	0	; () banked
  3060  002922  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3061  002924  0E08               	movlw	8
  3062  002926  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3063  002928  ECC7  F015         	call	_DELAY_ms	;wreg free
  3064                           
  3065                           ;lcd.c: 63: LCD_WriteCmd(0x30);
  3066  00292C  0E30               	movlw	48
  3067  00292E  ECE0  F020         	call	_LCD_WriteCmd
  3068                           
  3069                           ;lcd.c: 64: DELAY_ms(1);
  3070  002932  0100               	movlb	0	; () banked
  3071  002934  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3072  002936  0E01               	movlw	1
  3073  002938  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3074  00293A  ECC7  F015         	call	_DELAY_ms	;wreg free
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;lcd.c: 65: LCD_WriteCmd(0x30);
  3078  00293E  0E30               	movlw	48
  3079  002940  ECE0  F020         	call	_LCD_WriteCmd
  3080                           
  3081                           ;lcd.c: 66: DELAY_ms(1);
  3082  002944  0100               	movlb	0	; () banked
  3083  002946  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3084  002948  0E01               	movlw	1
  3085  00294A  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3086  00294C  ECC7  F015         	call	_DELAY_ms	;wreg free
  3087                           
  3088                           ; BSR set to: 0
  3089                           ;lcd.c: 67: LCD_WriteCmd(0x39);
  3090  002950  0E39               	movlw	57
  3091  002952  ECE0  F020         	call	_LCD_WriteCmd
  3092                           
  3093                           ;lcd.c: 68: DELAY_ms(1);
  3094  002956  0100               	movlb	0	; () banked
  3095  002958  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3096  00295A  0E01               	movlw	1
  3097  00295C  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3098  00295E  ECC7  F015         	call	_DELAY_ms	;wreg free
  3099                           
  3100                           ;lcd.c: 69: LCD_WriteCmd(0x14);
  3101  002962  0E14               	movlw	20
  3102  002964  ECE0  F020         	call	_LCD_WriteCmd
  3103                           
  3104                           ;lcd.c: 70: DELAY_ms(1);
  3105  002968  0100               	movlb	0	; () banked
  3106  00296A  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3107  00296C  0E01               	movlw	1
  3108  00296E  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3109  002970  ECC7  F015         	call	_DELAY_ms	;wreg free
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;lcd.c: 71: LCD_WriteCmd(0x56);
  3113  002974  0E56               	movlw	86
  3114  002976  ECE0  F020         	call	_LCD_WriteCmd
  3115                           
  3116                           ;lcd.c: 72: DELAY_ms(1);
  3117  00297A  0100               	movlb	0	; () banked
  3118  00297C  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3119  00297E  0E01               	movlw	1
  3120  002980  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3121  002982  ECC7  F015         	call	_DELAY_ms	;wreg free
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;lcd.c: 73: LCD_WriteCmd(0x6D);
  3125  002986  0E6D               	movlw	109
  3126  002988  ECE0  F020         	call	_LCD_WriteCmd
  3127                           
  3128                           ;lcd.c: 74: DELAY_ms(1);
  3129  00298C  0100               	movlb	0	; () banked
  3130  00298E  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3131  002990  0E01               	movlw	1
  3132  002992  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3133  002994  ECC7  F015         	call	_DELAY_ms	;wreg free
  3134                           
  3135                           ;lcd.c: 75: LCD_WriteCmd(0x70);
  3136  002998  0E70               	movlw	112
  3137  00299A  ECE0  F020         	call	_LCD_WriteCmd
  3138                           
  3139                           ;lcd.c: 76: DELAY_ms(1);
  3140  00299E  0100               	movlb	0	; () banked
  3141  0029A0  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3142  0029A2  0E01               	movlw	1
  3143  0029A4  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3144  0029A6  ECC7  F015         	call	_DELAY_ms	;wreg free
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;lcd.c: 77: LCD_WriteCmd(0x0E);
  3148  0029AA  0E0E               	movlw	14
  3149  0029AC  ECE0  F020         	call	_LCD_WriteCmd
  3150                           
  3151                           ;lcd.c: 78: DELAY_ms(1);
  3152  0029B0  0100               	movlb	0	; () banked
  3153  0029B2  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3154  0029B4  0E01               	movlw	1
  3155  0029B6  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3156  0029B8  ECC7  F015         	call	_DELAY_ms	;wreg free
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;lcd.c: 79: LCD_WriteCmd(0x06);
  3160  0029BC  0E06               	movlw	6
  3161  0029BE  ECE0  F020         	call	_LCD_WriteCmd
  3162                           
  3163                           ;lcd.c: 80: DELAY_ms(1);
  3164  0029C2  0100               	movlb	0	; () banked
  3165  0029C4  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3166  0029C6  0E01               	movlw	1
  3167  0029C8  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3168  0029CA  ECC7  F015         	call	_DELAY_ms	;wreg free
  3169                           
  3170                           ;lcd.c: 81: LCD_WriteCmd(0x01);
  3171  0029CE  0E01               	movlw	1
  3172  0029D0  ECE0  F020         	call	_LCD_WriteCmd
  3173                           
  3174                           ;lcd.c: 82: DELAY_ms(40);
  3175  0029D4  0100               	movlb	0	; () banked
  3176  0029D6  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3177  0029D8  0E28               	movlw	40
  3178  0029DA  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3179  0029DC  EFC7  F015         	goto	_DELAY_ms	;wreg free
  3180  0029E0                     __end_of_LCD_Initialize:
  3181                           	opt stack 0
  3182                           tblptru	equ	0xFF8
  3183                           tblptrh	equ	0xFF7
  3184                           tblptrl	equ	0xFF6
  3185                           tablat	equ	0xFF5
  3186                           intcon	equ	0xFF2
  3187                           intcon2	equ	0xFF1
  3188                           intcon3	equ	0xFF0
  3189                           postinc0	equ	0xFEE
  3190                           wreg	equ	0xFE8
  3191                           
  3192 ;; *************** function _Run_Demo *****************
  3193 ;; Defined at:
  3194 ;;		line 282 in file "../src/task.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;		None
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;		None
  3199 ;; Return value:  Size  Location     Type
  3200 ;;		None               void
  3201 ;; Registers used:
  3202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3203 ;; Tracked objects:
  3204 ;;		On entry : 0/0
  3205 ;;		On exit  : D/0
  3206 ;;		Unchanged: 0/0
  3207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3212 ;;Total ram usage:        0 bytes
  3213 ;; Hardware stack levels used:    1
  3214 ;; Hardware stack levels required when called:   21
  3215 ;; This function calls:
  3216 ;;		_run_star_demo
  3217 ;; This function is called by:
  3218 ;;		_main
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text6
  3223  004222                     __ptext6:
  3224                           	opt stack 0
  3225  004222                     _Run_Demo:
  3226                           	opt stack 9
  3227                           
  3228                           ;task.c: 288: run_star_demo();
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;incstack = 0
  3232  004222  EF1B  F009         	goto	_run_star_demo	;wreg free
  3233  004226                     __end_of_Run_Demo:
  3234                           	opt stack 0
  3235                           tblptru	equ	0xFF8
  3236                           tblptrh	equ	0xFF7
  3237                           tblptrl	equ	0xFF6
  3238                           tablat	equ	0xFF5
  3239                           intcon	equ	0xFF2
  3240                           intcon2	equ	0xFF1
  3241                           intcon3	equ	0xFF0
  3242                           postinc0	equ	0xFEE
  3243                           wreg	equ	0xFE8
  3244                           
  3245 ;; *************** function _run_star_demo *****************
  3246 ;; Defined at:
  3247 ;;		line 112 in file "../src/star_demo.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  switch_val      1  118[BANK0 ] unsigned char 
  3252 ;;  sw_layer_ack    1  115[BANK0 ] unsigned char 
  3253 ;;  mac_ack_stat    1    0        unsigned char 
  3254 ;;  select_ed       1  119[BANK0 ] unsigned char 
  3255 ;;  update_ed       1  116[BANK0 ] unsigned char 
  3256 ;;  PressedButto    1  117[BANK0 ] unsigned char 
  3257 ;; Return value:  Size  Location     Type
  3258 ;;		None               void
  3259 ;; Registers used:
  3260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3261 ;; Tracked objects:
  3262 ;;		On entry : 0/0
  3263 ;;		On exit  : D/0
  3264 ;;		Unchanged: 0/0
  3265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3267 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3268 ;;      Temps:          0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3269 ;;      Totals:         0       5       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3270 ;;Total ram usage:       12 bytes
  3271 ;; Hardware stack levels used:    1
  3272 ;; Hardware stack levels required when called:   20
  3273 ;; This function calls:
  3274 ;;		_ButtonPressed
  3275 ;;		_DELAY_ms
  3276 ;;		_DemoOutput_UpdateTxRx
  3277 ;;		_LCDDisplay
  3278 ;;		_LCD_Erase
  3279 ;;		_LCD_Update
  3280 ;;		_MiApp_BroadcastPacket
  3281 ;;		_MiApp_EstablishConnection
  3282 ;;		_MiApp_UnicastConnection
  3283 ;;		_MiApp_UnicastStar
  3284 ;;		_MiWi_TickGet
  3285 ;;		_Process_RxMessage
  3286 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  3287 ;;		___lbmod
  3288 ;;		_sprintf
  3289 ;; This function is called by:
  3290 ;;		_Run_Demo
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text7
  3295  001236                     __ptext7:
  3296                           	opt stack 0
  3297  001236                     _run_star_demo:
  3298                           	opt stack 9
  3299                           
  3300                           ;star_demo.c: 114: t1 = MiWi_TickGet ();
  3301                           
  3302                           ;incstack = 0
  3303  001236  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  3304  00123A  C076  F183         	movff	?_MiWi_TickGet,_t1
  3305  00123E  C077  F184         	movff	?_MiWi_TickGet+1,_t1+1
  3306  001242  C078  F185         	movff	?_MiWi_TickGet+2,_t1+2
  3307  001246  C079  F186         	movff	?_MiWi_TickGet+3,_t1+3
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;star_demo.c: 115: display_connections = 1;
  3311  00124A  0E01               	movlw	1
  3312  00124C  6E48               	movwf	_display_connections,c
  3313                           
  3314                           ;star_demo.c: 116: while(display_connections)
  3315  00124E  D245               	goto	l11288
  3316  001250                     l11132:
  3317                           
  3318                           ;star_demo.c: 117: {
  3319                           ;star_demo.c: 119: if (Process_RxMessage ())
  3320  001250  EC01  F01E         	call	_Process_RxMessage	;wreg free
  3321  001254  0900               	iorlw	0
  3322  001256  E001 D1F3          	bnz	l11262
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;star_demo.c: 123: else
  3326                           ;star_demo.c: 124: {
  3327                           ;star_demo.c: 132: uint8_t PressedButton = ButtonPressed();
  3328  00125A  ECA9  F019         	call	_ButtonPressed	;wreg free
  3329  00125E  0100               	movlb	0	; () banked
  3330  001260  6FD5               	movwf	run_star_demo@PressedButton& (0+255),b
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;star_demo.c: 133: if ( PressedButton == 1 || PressedButton == 2)
  3334  001262  05D5               	decf	run_star_demo@PressedButton& (0+255),w,b
  3335  001264  E004               	bz	l11142
  3336                           
  3337                           ; BSR set to: 0
  3338  001266  0E02               	movlw	2
  3339  001268  19D5               	xorwf	run_star_demo@PressedButton& (0+255),w,b
  3340  00126A  E001 D1E9          	bnz	l11262
  3341  00126E                     l11142:
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;star_demo.c: 134: {
  3345                           ;star_demo.c: 136: if (role)
  3346  00126E  51E7               	movf	_role& (0+255),w,b
  3347  001270  E037               	bz	l1372
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;star_demo.c: 137: {
  3351                           ;star_demo.c: 145: {TxData = 0;};
  3352  001272  6BDF               	clrf	_TxData& (0+255),b
  3353                           
  3354                           ;star_demo.c: 146: for(i = 0; i < 21; i++)
  3355  001274  6BE1               	clrf	_i& (0+255),b
  3356  001276                     l11146:
  3357                           
  3358                           ; BSR set to: 0
  3359  001276  0E14               	movlw	20
  3360  001278  65E1               	cpfsgt	_i& (0+255),b
  3361  00127A  D001               	goto	l11150
  3362  00127C  D026               	goto	l11158
  3363  00127E                     l11150:
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;star_demo.c: 147: {
  3367                           ;star_demo.c: 148: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  3368  00127E  0E06               	movlw	6
  3369  001280  6F76               	movwf	___lbmod@divisor& (0+255),b
  3370  001282  5046               	movf	_TxSynCount,w,c
  3371  001284  EC11  F020         	call	___lbmod
  3372  001288  0D15               	mullw	21
  3373  00128A  0E87               	movlw	low _MiWi
  3374  00128C  0102               	movlb	2	; () banked
  3375  00128E  6FB6               	movwf	??_run_star_demo& (0+255),b
  3376  001290  0EFC               	movlw	high _MiWi
  3377  001292  6FB7               	movwf	(??_run_star_demo+1)& (0+255),b
  3378  001294  50F3               	movf	prodl,w,c
  3379  001296  27B6               	addwf	??_run_star_demo& (0+255),f,b
  3380  001298  50F4               	movf	prodh,w,c
  3381  00129A  23B7               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3382  00129C  0100               	movlb	0	; () banked
  3383  00129E  51E1               	movf	_i& (0+255),w,b
  3384  0012A0  0102               	movlb	2	; () banked
  3385  0012A2  27B6               	addwf	??_run_star_demo& (0+255),f,b
  3386  0012A4  0E00               	movlw	0
  3387  0012A6  23B7               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3388  0012A8  C2B6  FFF6         	movff	??_run_star_demo,tblptrl
  3389  0012AC  C2B7  FFF7         	movff	??_run_star_demo+1,tblptrh
  3390  0012B0                     	if	0	;tblptru may be non-zero
  3391  0012B0                     	endif
  3392  0012B0                     	if	0	;tblptru may be non-zero
  3393  0012B0                     	endif
  3394  0012B0  0E95               	movlw	low _TxBuffer
  3395  0012B2  0100               	movlb	0	; () banked
  3396  0012B4  25DF               	addwf	_TxData& (0+255),w,b
  3397  0012B6  6ED9               	movwf	fsr2l,c
  3398  0012B8  6ADA               	clrf	fsr2h,c
  3399  0012BA  0E01               	movlw	high _TxBuffer
  3400  0012BC  22DA               	addwfc	fsr2h,f,c
  3401  0012BE  0008               	tblrd		*
  3402  0012C0  CFF5 FFDF          	movff	tablat,indf2
  3403                           
  3404                           ; BSR set to: 0
  3405  0012C4  2BDF               	incf	_TxData& (0+255),f,b
  3406                           
  3407                           ; BSR set to: 0
  3408  0012C6  2BE1               	incf	_i& (0+255),f,b
  3409  0012C8  D7D6               	goto	l11146
  3410  0012CA                     l11158:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;star_demo.c: 149: }
  3414                           ;star_demo.c: 150: TxSynCount++;
  3415  0012CA  2A46               	incf	_TxSynCount,f,c
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;star_demo.c: 161: MiApp_BroadcastPacket (0);
  3419  0012CC  0E00               	movlw	0
  3420  0012CE  ECC2  F01C         	call	_MiApp_BroadcastPacket
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;star_demo.c: 164: DemoOutput_UpdateTxRx(++TxNum, RxNum);
  3424  0012D2  C043  F0A7         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3425  0012D6  2A45               	incf	_TxNum,f,c
  3426  0012D8  5045               	movf	_TxNum,w,c
  3427  0012DA  ECFA  F020         	call	_DemoOutput_UpdateTxRx
  3428                           
  3429                           ;star_demo.c: 166: }
  3430  0012DE  D1B0               	goto	l11262
  3431  0012E0                     l1372:
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;star_demo.c: 167: else
  3435                           ;star_demo.c: 168: {
  3436                           ;star_demo.c: 170: uint8_t select_ed = 0;
  3437  0012E0  6BD7               	clrf	run_star_demo@select_ed& (0+255),b
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;star_demo.c: 171: chk_sel_status = 1;
  3441  0012E2  0E01               	movlw	1
  3442  0012E4  6E47               	movwf	_chk_sel_status,c
  3443                           
  3444                           ;star_demo.c: 172: bool update_ed = 1;
  3445  0012E6  6FD4               	movwf	run_star_demo@update_ed& (0+255),b
  3446                           
  3447                           ;star_demo.c: 173: while(update_ed == 1)
  3448  0012E8  D1A8               	goto	l11260
  3449  0012EA                     l11166:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;star_demo.c: 174: {
  3453                           ;star_demo.c: 176: LCD_Erase();
  3454  0012EA  EC25  F020         	call	_LCD_Erase	;wreg free
  3455                           
  3456                           ; BSR set to: 0
  3457                           ;star_demo.c: 177: if (myConnectionIndex_in_PanCo == select_ed)
  3458  0012EE  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3459  0012F0  19E6               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3460  0012F2  E137               	bnz	l11172
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;star_demo.c: 178: {
  3464                           ;star_demo.c: 179: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x-me",END_DEVICE
      +                          S_Short_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[
      +                          0],
  3465                           ;star_demo.c: 180: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3466  0012F4  0EB8               	movlw	low _LCDText
  3467  0012F6  6F82               	movwf	sprintf@sp& (0+255),b
  3468  0012F8  0E01               	movlw	high _LCDText
  3469  0012FA  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  3470  0012FC  0EDD               	movlw	low STR_30
  3471  0012FE  6F84               	movwf	sprintf@f& (0+255),b
  3472  001300  0EFE               	movlw	high STR_30
  3473  001302  6F85               	movwf	(sprintf@f+1)& (0+255),b
  3474  001304  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3475  001306  0D04               	mullw	4
  3476  001308  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  3477  00130A  24F3               	addwf	prodl,w,c
  3478  00130C  6ED9               	movwf	fsr2l,c
  3479  00130E  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  3480  001310  20F4               	addwfc	prodh,w,c
  3481  001312  6EDA               	movwf	fsr2h,c
  3482  001314  50DF               	movf	indf2,w,c
  3483  001316  6F86               	movwf	(?_sprintf+4)& (0+255),b
  3484  001318  6B87               	clrf	(?_sprintf+5)& (0+255),b
  3485  00131A  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3486  00131C  0D04               	mullw	4
  3487  00131E  0E37               	movlw	low _END_DEVICES_Short_Address
  3488  001320  24F3               	addwf	prodl,w,c
  3489  001322  6ED9               	movwf	fsr2l,c
  3490  001324  0E01               	movlw	high _END_DEVICES_Short_Address
  3491  001326  20F4               	addwfc	prodh,w,c
  3492  001328  6EDA               	movwf	fsr2h,c
  3493  00132A  50DF               	movf	indf2,w,c
  3494  00132C  6F88               	movwf	(?_sprintf+6)& (0+255),b
  3495  00132E  6B89               	clrf	(?_sprintf+7)& (0+255),b
  3496  001330  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3497  001332  0D04               	mullw	4
  3498  001334  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3499  001336  24F3               	addwf	prodl,w,c
  3500  001338  6ED9               	movwf	fsr2l,c
  3501  00133A  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3502  00133C  20F4               	addwfc	prodh,w,c
  3503  00133E  6EDA               	movwf	fsr2h,c
  3504  001340  50DF               	movf	indf2,w,c
  3505  001342  6F8A               	movwf	(?_sprintf+8)& (0+255),b
  3506  001344  6B8B               	clrf	(?_sprintf+9)& (0+255),b
  3507  001346  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3508  001348  0D04               	mullw	4
  3509  00134A  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3510  00134C  24F3               	addwf	prodl,w,c
  3511  00134E  6ED9               	movwf	fsr2l,c
  3512  001350  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3513  001352  20F4               	addwfc	prodh,w,c
  3514  001354  6EDA               	movwf	fsr2h,c
  3515  001356  50DF               	movf	indf2,w,c
  3516  001358  6F8C               	movwf	(?_sprintf+10)& (0+255),b
  3517  00135A  6B8D               	clrf	(?_sprintf+11)& (0+255),b
  3518  00135C  EC8E  F005         	call	_sprintf	;wreg free
  3519                           
  3520                           ;star_demo.c: 181: }
  3521  001360  D036               	goto	l1379
  3522  001362                     l11172:
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;star_demo.c: 182: else
  3526                           ;star_demo.c: 183: {
  3527                           ;star_demo.c: 184: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3528                           ;star_demo.c: 185: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3529  001362  0EB8               	movlw	low _LCDText
  3530  001364  6F82               	movwf	sprintf@sp& (0+255),b
  3531  001366  0E01               	movlw	high _LCDText
  3532  001368  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  3533  00136A  0EF6               	movlw	low STR_31
  3534  00136C  6F84               	movwf	sprintf@f& (0+255),b
  3535  00136E  0EFE               	movlw	high STR_31
  3536  001370  6F85               	movwf	(sprintf@f+1)& (0+255),b
  3537  001372  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3538  001374  0D04               	mullw	4
  3539  001376  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  3540  001378  24F3               	addwf	prodl,w,c
  3541  00137A  6ED9               	movwf	fsr2l,c
  3542  00137C  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  3543  00137E  20F4               	addwfc	prodh,w,c
  3544  001380  6EDA               	movwf	fsr2h,c
  3545  001382  50DF               	movf	indf2,w,c
  3546  001384  6F86               	movwf	(?_sprintf+4)& (0+255),b
  3547  001386  6B87               	clrf	(?_sprintf+5)& (0+255),b
  3548  001388  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3549  00138A  0D04               	mullw	4
  3550  00138C  0E37               	movlw	low _END_DEVICES_Short_Address
  3551  00138E  24F3               	addwf	prodl,w,c
  3552  001390  6ED9               	movwf	fsr2l,c
  3553  001392  0E01               	movlw	high _END_DEVICES_Short_Address
  3554  001394  20F4               	addwfc	prodh,w,c
  3555  001396  6EDA               	movwf	fsr2h,c
  3556  001398  50DF               	movf	indf2,w,c
  3557  00139A  6F88               	movwf	(?_sprintf+6)& (0+255),b
  3558  00139C  6B89               	clrf	(?_sprintf+7)& (0+255),b
  3559  00139E  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3560  0013A0  0D04               	mullw	4
  3561  0013A2  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3562  0013A4  24F3               	addwf	prodl,w,c
  3563  0013A6  6ED9               	movwf	fsr2l,c
  3564  0013A8  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3565  0013AA  20F4               	addwfc	prodh,w,c
  3566  0013AC  6EDA               	movwf	fsr2h,c
  3567  0013AE  50DF               	movf	indf2,w,c
  3568  0013B0  6F8A               	movwf	(?_sprintf+8)& (0+255),b
  3569  0013B2  6B8B               	clrf	(?_sprintf+9)& (0+255),b
  3570  0013B4  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3571  0013B6  0D04               	mullw	4
  3572  0013B8  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3573  0013BA  24F3               	addwf	prodl,w,c
  3574  0013BC  6ED9               	movwf	fsr2l,c
  3575  0013BE  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3576  0013C0  20F4               	addwfc	prodh,w,c
  3577  0013C2  6EDA               	movwf	fsr2h,c
  3578  0013C4  50DF               	movf	indf2,w,c
  3579  0013C6  6F8C               	movwf	(?_sprintf+10)& (0+255),b
  3580  0013C8  6B8D               	clrf	(?_sprintf+11)& (0+255),b
  3581  0013CA  EC8E  F005         	call	_sprintf	;wreg free
  3582  0013CE                     l1379:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;star_demo.c: 186: }
  3586                           ;star_demo.c: 187: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3587                           ;star_demo.c: 188: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3588  0013CE  0EB8               	movlw	low _LCDText
  3589  0013D0  6F82               	movwf	sprintf@sp& (0+255),b
  3590  0013D2  0E01               	movlw	high _LCDText
  3591  0013D4  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  3592  0013D6  0EF6               	movlw	low STR_31
  3593  0013D8  6F84               	movwf	sprintf@f& (0+255),b
  3594  0013DA  0EFE               	movlw	high STR_31
  3595  0013DC  6F85               	movwf	(sprintf@f+1)& (0+255),b
  3596  0013DE  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3597  0013E0  0D04               	mullw	4
  3598  0013E2  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  3599  0013E4  24F3               	addwf	prodl,w,c
  3600  0013E6  6ED9               	movwf	fsr2l,c
  3601  0013E8  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  3602  0013EA  20F4               	addwfc	prodh,w,c
  3603  0013EC  6EDA               	movwf	fsr2h,c
  3604  0013EE  50DF               	movf	indf2,w,c
  3605  0013F0  6F86               	movwf	(?_sprintf+4)& (0+255),b
  3606  0013F2  6B87               	clrf	(?_sprintf+5)& (0+255),b
  3607  0013F4  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3608  0013F6  0D04               	mullw	4
  3609  0013F8  0E37               	movlw	low _END_DEVICES_Short_Address
  3610  0013FA  24F3               	addwf	prodl,w,c
  3611  0013FC  6ED9               	movwf	fsr2l,c
  3612  0013FE  0E01               	movlw	high _END_DEVICES_Short_Address
  3613  001400  20F4               	addwfc	prodh,w,c
  3614  001402  6EDA               	movwf	fsr2h,c
  3615  001404  50DF               	movf	indf2,w,c
  3616  001406  6F88               	movwf	(?_sprintf+6)& (0+255),b
  3617  001408  6B89               	clrf	(?_sprintf+7)& (0+255),b
  3618  00140A  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3619  00140C  0D04               	mullw	4
  3620  00140E  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3621  001410  24F3               	addwf	prodl,w,c
  3622  001412  6ED9               	movwf	fsr2l,c
  3623  001414  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3624  001416  20F4               	addwfc	prodh,w,c
  3625  001418  6EDA               	movwf	fsr2h,c
  3626  00141A  50DF               	movf	indf2,w,c
  3627  00141C  6F8A               	movwf	(?_sprintf+8)& (0+255),b
  3628  00141E  6B8B               	clrf	(?_sprintf+9)& (0+255),b
  3629  001420  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3630  001422  0D04               	mullw	4
  3631  001424  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3632  001426  24F3               	addwf	prodl,w,c
  3633  001428  6ED9               	movwf	fsr2l,c
  3634  00142A  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3635  00142C  20F4               	addwfc	prodh,w,c
  3636  00142E  6EDA               	movwf	fsr2h,c
  3637  001430  50DF               	movf	indf2,w,c
  3638  001432  6F8C               	movwf	(?_sprintf+10)& (0+255),b
  3639  001434  6B8D               	clrf	(?_sprintf+11)& (0+255),b
  3640  001436  EC8E  F005         	call	_sprintf	;wreg free
  3641                           
  3642                           ;star_demo.c: 189: sprintf((char *)&(LCDText[16]), (char*)"RB2: Change node");
  3643  00143A  0EC8               	movlw	low (_LCDText+16)
  3644  00143C  6F82               	movwf	sprintf@sp& (0+255),b
  3645  00143E  0E01               	movlw	high (_LCDText+16)
  3646  001440  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  3647  001442  0E7D               	movlw	low STR_33
  3648  001444  6F84               	movwf	sprintf@f& (0+255),b
  3649  001446  0EFF               	movlw	high STR_33
  3650  001448  6F85               	movwf	(sprintf@f+1)& (0+255),b
  3651  00144A  EC8E  F005         	call	_sprintf	;wreg free
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;star_demo.c: 190: LCD_Update();
  3655  00144E  ECBB  F01A         	call	_LCD_Update	;wreg free
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;star_demo.c: 191: chk_sel_status = 1;
  3659  001452  0E01               	movlw	1
  3660  001454  6E47               	movwf	_chk_sel_status,c
  3661                           
  3662                           ;star_demo.c: 193: while(chk_sel_status)
  3663  001456  D0EE               	goto	l11258
  3664  001458                     l11178:
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;star_demo.c: 194: {
  3668                           ;star_demo.c: 196: uint8_t switch_val = ButtonPressed();
  3669  001458  ECA9  F019         	call	_ButtonPressed	;wreg free
  3670  00145C  0100               	movlb	0	; () banked
  3671  00145E  6FD6               	movwf	run_star_demo@switch_val& (0+255),b
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;star_demo.c: 198: Process_RxMessage ();
  3675  001460  EC01  F01E         	call	_Process_RxMessage	;wreg free
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;star_demo.c: 199: bool sw_layer_ack_status , mac_ack_status;
  3679                           ;star_demo.c: 200: if(switch_val == 1)
  3680  001464  05D6               	decf	run_star_demo@switch_val& (0+255),w,b
  3681  001466  E001 D0C6          	bnz	l11248
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;star_demo.c: 201: {
  3685                           ;star_demo.c: 202: update_ed = 0;
  3686  00146A  6BD4               	clrf	run_star_demo@update_ed& (0+255),b
  3687                           
  3688                           ;star_demo.c: 204: TxSynCount2++;
  3689  00146C  6A47               	clrf	_chk_sel_status,c
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;star_demo.c: 205: if (myConnectionIndex_in_PanCo == select_ed)
  3693  00146E  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3694  001470  19E6               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3695  001472  E132               	bnz	l1383
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;star_demo.c: 206: {
  3699                           ;star_demo.c: 207: {TxData = 0;};
  3700  001474  6BDF               	clrf	_TxData& (0+255),b
  3701                           
  3702                           ;star_demo.c: 208: for (i = 0 ; i < 21 ; i++)
  3703  001476  6BE1               	clrf	_i& (0+255),b
  3704  001478                     l11190:
  3705                           
  3706                           ; BSR set to: 0
  3707  001478  0E14               	movlw	20
  3708  00147A  65E1               	cpfsgt	_i& (0+255),b
  3709  00147C  D001               	goto	l11194
  3710  00147E  D026               	goto	l11202
  3711  001480                     l11194:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;star_demo.c: 209: {
  3715                           ;star_demo.c: 210: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  3716  001480  0E06               	movlw	6
  3717  001482  6F76               	movwf	___lbmod@divisor& (0+255),b
  3718  001484  5046               	movf	_TxSynCount,w,c
  3719  001486  EC11  F020         	call	___lbmod
  3720  00148A  0D15               	mullw	21
  3721  00148C  0E87               	movlw	low _MiWi
  3722  00148E  0102               	movlb	2	; () banked
  3723  001490  6FB6               	movwf	??_run_star_demo& (0+255),b
  3724  001492  0EFC               	movlw	high _MiWi
  3725  001494  6FB7               	movwf	(??_run_star_demo+1)& (0+255),b
  3726  001496  50F3               	movf	prodl,w,c
  3727  001498  27B6               	addwf	??_run_star_demo& (0+255),f,b
  3728  00149A  50F4               	movf	prodh,w,c
  3729  00149C  23B7               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3730  00149E  0100               	movlb	0	; () banked
  3731  0014A0  51E1               	movf	_i& (0+255),w,b
  3732  0014A2  0102               	movlb	2	; () banked
  3733  0014A4  27B6               	addwf	??_run_star_demo& (0+255),f,b
  3734  0014A6  0E00               	movlw	0
  3735  0014A8  23B7               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3736  0014AA  C2B6  FFF6         	movff	??_run_star_demo,tblptrl
  3737  0014AE  C2B7  FFF7         	movff	??_run_star_demo+1,tblptrh
  3738  0014B2                     	if	0	;tblptru may be non-zero
  3739  0014B2                     	endif
  3740  0014B2                     	if	0	;tblptru may be non-zero
  3741  0014B2                     	endif
  3742  0014B2  0E95               	movlw	low _TxBuffer
  3743  0014B4  0100               	movlb	0	; () banked
  3744  0014B6  25DF               	addwf	_TxData& (0+255),w,b
  3745  0014B8  6ED9               	movwf	fsr2l,c
  3746  0014BA  6ADA               	clrf	fsr2h,c
  3747  0014BC  0E01               	movlw	high _TxBuffer
  3748  0014BE  22DA               	addwfc	fsr2h,f,c
  3749  0014C0  0008               	tblrd		*
  3750  0014C2  CFF5 FFDF          	movff	tablat,indf2
  3751                           
  3752                           ; BSR set to: 0
  3753  0014C6  2BDF               	incf	_TxData& (0+255),f,b
  3754                           
  3755                           ; BSR set to: 0
  3756  0014C8  2BE1               	incf	_i& (0+255),f,b
  3757  0014CA  D7D6               	goto	l11190
  3758  0014CC                     l11202:
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;star_demo.c: 211: }
  3762                           ;star_demo.c: 218: mac_ack_status = MiApp_UnicastConnection (0, 0);
  3763  0014CC  0E00               	movlw	0
  3764  0014CE  6BB2               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  3765  0014D0  EC92  F017         	call	_MiApp_UnicastConnection
  3766  0014D4                     l11204:
  3767                           
  3768                           ;star_demo.c: 220: TxNum++;
  3769  0014D4  2A45               	incf	_TxNum,f,c
  3770                           
  3771                           ;star_demo.c: 221: }
  3772  0014D6  D080               	goto	l1386
  3773  0014D8                     l1383:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;star_demo.c: 223: else
  3777                           ;star_demo.c: 224: {
  3778                           ;star_demo.c: 229: {TxData = 0;};
  3779  0014D8  6BDF               	clrf	_TxData& (0+255),b
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;star_demo.c: 230: TxBuffer[TxData++] = 0xCC;
  3783  0014DA  0E95               	movlw	low _TxBuffer
  3784  0014DC  25DF               	addwf	_TxData& (0+255),w,b
  3785  0014DE  6ED9               	movwf	fsr2l,c
  3786  0014E0  6ADA               	clrf	fsr2h,c
  3787  0014E2  0E01               	movlw	high _TxBuffer
  3788  0014E4  22DA               	addwfc	fsr2h,f,c
  3789  0014E6  0ECC               	movlw	204
  3790  0014E8  6EDF               	movwf	indf2,c
  3791                           
  3792                           ; BSR set to: 0
  3793  0014EA  2BDF               	incf	_TxData& (0+255),f,b
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;star_demo.c: 231: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[0];
  3797  0014EC  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3798  0014EE  0D04               	mullw	4
  3799  0014F0  0E37               	movlw	low _END_DEVICES_Short_Address
  3800  0014F2  24F3               	addwf	prodl,w,c
  3801  0014F4  6ED9               	movwf	fsr2l,c
  3802  0014F6  0E01               	movlw	high _END_DEVICES_Short_Address
  3803  0014F8  20F4               	addwfc	prodh,w,c
  3804  0014FA  6EDA               	movwf	fsr2h,c
  3805  0014FC  0E95               	movlw	low _TxBuffer
  3806  0014FE  25DF               	addwf	_TxData& (0+255),w,b
  3807  001500  6EE1               	movwf	fsr1l,c
  3808  001502  6AE2               	clrf	fsr1h,c
  3809  001504  0E01               	movlw	high _TxBuffer
  3810  001506  22E2               	addwfc	fsr1h,f,c
  3811  001508  CFDF FFE7          	movff	indf2,indf1
  3812                           
  3813                           ; BSR set to: 0
  3814  00150C  2BDF               	incf	_TxData& (0+255),f,b
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;star_demo.c: 232: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[1];
  3818  00150E  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3819  001510  0D04               	mullw	4
  3820  001512  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3821  001514  24F3               	addwf	prodl,w,c
  3822  001516  6ED9               	movwf	fsr2l,c
  3823  001518  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3824  00151A  20F4               	addwfc	prodh,w,c
  3825  00151C  6EDA               	movwf	fsr2h,c
  3826  00151E  0E95               	movlw	low _TxBuffer
  3827  001520  25DF               	addwf	_TxData& (0+255),w,b
  3828  001522  6EE1               	movwf	fsr1l,c
  3829  001524  6AE2               	clrf	fsr1h,c
  3830  001526  0E01               	movlw	high _TxBuffer
  3831  001528  22E2               	addwfc	fsr1h,f,c
  3832  00152A  CFDF FFE7          	movff	indf2,indf1
  3833                           
  3834                           ; BSR set to: 0
  3835  00152E  2BDF               	incf	_TxData& (0+255),f,b
  3836                           
  3837                           ; BSR set to: 0
  3838                           ;star_demo.c: 233: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[2];
  3839  001530  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3840  001532  0D04               	mullw	4
  3841  001534  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3842  001536  24F3               	addwf	prodl,w,c
  3843  001538  6ED9               	movwf	fsr2l,c
  3844  00153A  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3845  00153C  20F4               	addwfc	prodh,w,c
  3846  00153E  6EDA               	movwf	fsr2h,c
  3847  001540  0E95               	movlw	low _TxBuffer
  3848  001542  25DF               	addwf	_TxData& (0+255),w,b
  3849  001544  6EE1               	movwf	fsr1l,c
  3850  001546  6AE2               	clrf	fsr1h,c
  3851  001548  0E01               	movlw	high _TxBuffer
  3852  00154A  22E2               	addwfc	fsr1h,f,c
  3853  00154C  CFDF FFE7          	movff	indf2,indf1
  3854                           
  3855                           ; BSR set to: 0
  3856  001550  2BDF               	incf	_TxData& (0+255),f,b
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;star_demo.c: 234: for (i = 4 ; i < 25 ; i++)
  3860  001552  0E04               	movlw	4
  3861  001554  6FE1               	movwf	_i& (0+255),b
  3862  001556                     l11224:
  3863                           
  3864                           ; BSR set to: 0
  3865  001556  0E18               	movlw	24
  3866  001558  65E1               	cpfsgt	_i& (0+255),b
  3867  00155A  D001               	goto	l11228
  3868  00155C  D02F               	goto	l11236
  3869  00155E                     l11228:
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;star_demo.c: 235: {
  3873                           ;star_demo.c: 236: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i-4];
  3874  00155E  0EFC               	movlw	252
  3875  001560  0102               	movlb	2	; () banked
  3876  001562  6FB6               	movwf	??_run_star_demo& (0+255),b
  3877  001564  69B7               	setf	(??_run_star_demo+1)& (0+255),b
  3878  001566  0E06               	movlw	6
  3879  001568  0100               	movlb	0	; () banked
  3880  00156A  6F76               	movwf	___lbmod@divisor& (0+255),b
  3881  00156C  5046               	movf	_TxSynCount,w,c
  3882  00156E  EC11  F020         	call	___lbmod
  3883  001572  0D15               	mullw	21
  3884  001574  0E87               	movlw	low _MiWi
  3885  001576  0102               	movlb	2	; () banked
  3886  001578  6FB8               	movwf	(??_run_star_demo+2)& (0+255),b
  3887  00157A  0EFC               	movlw	high _MiWi
  3888  00157C  6FB9               	movwf	(??_run_star_demo+3)& (0+255),b
  3889  00157E  50F3               	movf	prodl,w,c
  3890  001580  27B8               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3891  001582  50F4               	movf	prodh,w,c
  3892  001584  23B9               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3893  001586  0100               	movlb	0	; () banked
  3894  001588  51E1               	movf	_i& (0+255),w,b
  3895  00158A  0102               	movlb	2	; () banked
  3896  00158C  27B8               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3897  00158E  0E00               	movlw	0
  3898  001590  23B9               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3899  001592  51B6               	movf	??_run_star_demo& (0+255),w,b
  3900  001594  27B8               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3901  001596  51B7               	movf	(??_run_star_demo+1)& (0+255),w,b
  3902  001598  23B9               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3903  00159A  C2B8  FFF6         	movff	??_run_star_demo+2,tblptrl
  3904  00159E  C2B9  FFF7         	movff	??_run_star_demo+3,tblptrh
  3905  0015A2                     	if	0	;tblptru may be non-zero
  3906  0015A2                     	endif
  3907  0015A2                     	if	0	;tblptru may be non-zero
  3908  0015A2                     	endif
  3909  0015A2  0E95               	movlw	low _TxBuffer
  3910  0015A4  0100               	movlb	0	; () banked
  3911  0015A6  25DF               	addwf	_TxData& (0+255),w,b
  3912  0015A8  6ED9               	movwf	fsr2l,c
  3913  0015AA  6ADA               	clrf	fsr2h,c
  3914  0015AC  0E01               	movlw	high _TxBuffer
  3915  0015AE  22DA               	addwfc	fsr2h,f,c
  3916  0015B0  0008               	tblrd		*
  3917  0015B2  CFF5 FFDF          	movff	tablat,indf2
  3918                           
  3919                           ; BSR set to: 0
  3920  0015B6  2BDF               	incf	_TxData& (0+255),f,b
  3921                           
  3922                           ; BSR set to: 0
  3923  0015B8  2BE1               	incf	_i& (0+255),f,b
  3924  0015BA  D7CD               	goto	l11224
  3925  0015BC                     l11236:
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;star_demo.c: 237: }
  3929                           ;star_demo.c: 241: sw_layer_ack_status = MiApp_UnicastStar (0);
  3930  0015BC  0E00               	movlw	0
  3931  0015BE  EC61  F019         	call	_MiApp_UnicastStar
  3932  0015C2  6FD3               	movwf	run_star_demo@sw_layer_ack_status& (0+255),b
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;star_demo.c: 246: if (sw_layer_ack_status)
  3936  0015C4  51D3               	movf	run_star_demo@sw_layer_ack_status& (0+255),w,b
  3937  0015C6  E186               	bnz	l11204
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;star_demo.c: 250: else
  3941                           ;star_demo.c: 251: {
  3942                           ;star_demo.c: 252: LCDDisplay((char *)"Data_Sending_Fail!!", 0, 0);
  3943  0015C8  0E22               	movlw	low STR_34
  3944  0015CA  6FA5               	movwf	LCDDisplay@text& (0+255),b
  3945  0015CC  0EFF               	movlw	high STR_34
  3946  0015CE  6FA6               	movwf	(LCDDisplay@text+1)& (0+255),b
  3947  0015D0  6BA7               	clrf	LCDDisplay@value& (0+255),b
  3948  0015D2  6BA8               	clrf	LCDDisplay@delay& (0+255),b
  3949  0015D4  ECA4  F01E         	call	_LCDDisplay	;wreg free
  3950  0015D8                     l1386:
  3951                           
  3952                           ;star_demo.c: 253: }
  3953                           ;star_demo.c: 258: }
  3954                           ;star_demo.c: 259: DemoOutput_UpdateTxRx(TxNum, RxNum);
  3955  0015D8  C043  F0A7         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3956  0015DC  5045               	movf	_TxNum,w,c
  3957  0015DE  ECFA  F020         	call	_DemoOutput_UpdateTxRx
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;star_demo.c: 260: DELAY_ms(1500);
  3961  0015E2  0E05               	movlw	5
  3962  0015E4  6F77               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3963  0015E6  0EDC               	movlw	220
  3964  0015E8  6F76               	movwf	DELAY_ms@ms& (0+255),b
  3965  0015EA  ECC7  F015         	call	_DELAY_ms	;wreg free
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;star_demo.c: 261: STAR_DEMO_OPTIONS_MESSAGE (role);
  3969  0015EE  51E7               	movf	_role& (0+255),w,b
  3970  0015F0  EC5F  F020         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3971                           
  3972                           ;star_demo.c: 262: }
  3973  0015F4  D01F               	goto	l11258
  3974  0015F6                     l11248:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;star_demo.c: 263: else if(switch_val == 2)
  3978  0015F6  0E02               	movlw	2
  3979  0015F8  19D6               	xorwf	run_star_demo@switch_val& (0+255),w,b
  3980  0015FA  E11C               	bnz	l11258
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;star_demo.c: 264: {
  3984                           ;star_demo.c: 265: if (select_ed > end_nodes-1)
  3985  0015FC  51D7               	movf	run_star_demo@select_ed& (0+255),w,b
  3986  0015FE  0102               	movlb	2	; () banked
  3987  001600  6FB6               	movwf	??_run_star_demo& (0+255),b
  3988  001602  6BB7               	clrf	(??_run_star_demo+1)& (0+255),b
  3989  001604  69B8               	setf	(??_run_star_demo+2)& (0+255),b
  3990  001606  69B9               	setf	(??_run_star_demo+3)& (0+255),b
  3991  001608  5049               	movf	_end_nodes,w,c
  3992  00160A  6FBA               	movwf	(??_run_star_demo+4)& (0+255),b
  3993  00160C  6BBB               	clrf	(??_run_star_demo+5)& (0+255),b
  3994  00160E  51B8               	movf	(??_run_star_demo+2)& (0+255),w,b
  3995  001610  27BA               	addwf	(??_run_star_demo+4)& (0+255),f,b
  3996  001612  51B9               	movf	(??_run_star_demo+3)& (0+255),w,b
  3997  001614  23BB               	addwfc	(??_run_star_demo+5)& (0+255),f,b
  3998  001616  51B6               	movf	??_run_star_demo& (0+255),w,b
  3999  001618  5DBA               	subwf	(??_run_star_demo+4)& (0+255),w,b
  4000  00161A  51BB               	movf	(??_run_star_demo+5)& (0+255),w,b
  4001  00161C  0A80               	xorlw	128
  4002  00161E  6FBC               	movwf	(??_run_star_demo+6)& (0+255),b
  4003  001620  51B7               	movf	(??_run_star_demo+1)& (0+255),w,b
  4004  001622  0A80               	xorlw	128
  4005  001624  59BC               	subwfb	(??_run_star_demo+6)& (0+255),w,b
  4006  001626  E203               	bc	l11254
  4007                           
  4008                           ; BSR set to: 2
  4009                           ;star_demo.c: 266: {
  4010                           ;star_demo.c: 268: select_ed = 0;
  4011  001628  0100               	movlb	0	; () banked
  4012  00162A  6BD7               	clrf	run_star_demo@select_ed& (0+255),b
  4013                           
  4014                           ;star_demo.c: 269: }
  4015  00162C  D002               	goto	l11256
  4016  00162E                     l11254:
  4017                           
  4018                           ; BSR set to: 2
  4019                           ;star_demo.c: 270: else
  4020                           ;star_demo.c: 271: {
  4021                           ;star_demo.c: 273: select_ed = select_ed+1;
  4022  00162E  0100               	movlb	0	; () banked
  4023  001630  2BD7               	incf	run_star_demo@select_ed& (0+255),f,b
  4024  001632                     l11256:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;star_demo.c: 274: }
  4028                           ;star_demo.c: 275: chk_sel_status = 0;
  4029  001632  6A47               	clrf	_chk_sel_status,c
  4030  001634                     l11258:
  4031                           
  4032                           ; BSR set to: 0
  4033  001634  5047               	movf	_chk_sel_status,w,c
  4034  001636  E001 D70F          	bnz	l11178
  4035  00163A                     l11260:
  4036                           
  4037                           ; BSR set to: 0
  4038  00163A  05D4               	decf	run_star_demo@update_ed& (0+255),w,b
  4039  00163C  E101 D655          	bz	l11166
  4040  001640                     l11262:
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;star_demo.c: 277: }
  4044                           ;star_demo.c: 278: }
  4045                           ;star_demo.c: 280: }
  4046                           ;star_demo.c: 282: }
  4047                           ;star_demo.c: 283: }
  4048                           ;star_demo.c: 284: }
  4049                           ;star_demo.c: 288: if (lost_connection && !role)
  4050  001640  504A               	movf	_lost_connection,w,c
  4051  001642  E006               	bz	l11270
  4052                           
  4053                           ; BSR set to: 0
  4054  001644  51E7               	movf	_role& (0+255),w,b
  4055  001646  E104               	bnz	l11270
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;star_demo.c: 289: {
  4059                           ;star_demo.c: 290: MiApp_EstablishConnection(0xFF, 0x00);
  4060  001648  6BCE               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  4061  00164A  ECA7  F011         	call	_MiApp_EstablishConnection
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;star_demo.c: 291: lost_connection = 0;
  4065  00164E  6A4A               	clrf	_lost_connection,c
  4066  001650                     l11270:
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;star_demo.c: 293: }
  4070                           ;star_demo.c: 295: t2 = MiWi_TickGet ();
  4071  001650  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  4072  001654  C076  F187         	movff	?_MiWi_TickGet,_t2
  4073  001658  C077  F188         	movff	?_MiWi_TickGet+1,_t2+1
  4074  00165C  C078  F189         	movff	?_MiWi_TickGet+2,_t2+2
  4075  001660  C079  F18A         	movff	?_MiWi_TickGet+3,_t2+3
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;star_demo.c: 297: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)*15) && role)
  4079  001664  0101               	movlb	1	; () banked
  4080  001666  5183               	movf	_t1& (0+255),w,b
  4081  001668  5D87               	subwf	_t2& (0+255),w,b
  4082  00166A  0102               	movlb	2	; () banked
  4083  00166C  6FB6               	movwf	??_run_star_demo& (0+255),b
  4084  00166E  0101               	movlb	1	; () banked
  4085  001670  5184               	movf	(_t1+1)& (0+255),w,b
  4086  001672  5988               	subwfb	(_t2+1)& (0+255),w,b
  4087  001674  0102               	movlb	2	; () banked
  4088  001676  6FB7               	movwf	(??_run_star_demo+1)& (0+255),b
  4089  001678  0101               	movlb	1	; () banked
  4090  00167A  5185               	movf	(_t1+2)& (0+255),w,b
  4091  00167C  5989               	subwfb	(_t2+2)& (0+255),w,b
  4092  00167E  0102               	movlb	2	; () banked
  4093  001680  6FB8               	movwf	(??_run_star_demo+2)& (0+255),b
  4094  001682  0101               	movlb	1	; () banked
  4095  001684  5186               	movf	(_t1+3)& (0+255),w,b
  4096  001686  598A               	subwfb	(_t2+3)& (0+255),w,b
  4097  001688  0102               	movlb	2	; () banked
  4098  00168A  6FB9               	movwf	(??_run_star_demo+3)& (0+255),b
  4099  00168C  51B9               	movf	(??_run_star_demo+3)& (0+255),w,b
  4100  00168E  E107               	bnz	u11690
  4101  001690  0EE1               	movlw	225
  4102  001692  5DB6               	subwf	??_run_star_demo& (0+255),w,b
  4103  001694  0E70               	movlw	112
  4104  001696  59B7               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  4105  001698  0E72               	movlw	114
  4106  00169A  59B8               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  4107  00169C  E31E               	bnc	l11288
  4108  00169E                     u11690:
  4109                           
  4110                           ; BSR set to: 2
  4111  00169E  0100               	movlb	0	; () banked
  4112  0016A0  51E7               	movf	_role& (0+255),w,b
  4113  0016A2  E01B               	bz	l11288
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;star_demo.c: 298: {
  4117                           ;star_demo.c: 299: LCD_Erase();
  4118  0016A4  EC25  F020         	call	_LCD_Erase	;wreg free
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;star_demo.c: 300: sprintf((char *)&(LCDText), (char*)"END_DEVICES :%02d",conn_size);
  4122  0016A8  0EB8               	movlw	low _LCDText
  4123  0016AA  6F82               	movwf	sprintf@sp& (0+255),b
  4124  0016AC  0E01               	movlw	high _LCDText
  4125  0016AE  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  4126  0016B0  0E49               	movlw	low STR_35
  4127  0016B2  6F84               	movwf	sprintf@f& (0+255),b
  4128  0016B4  0EFF               	movlw	high STR_35
  4129  0016B6  6F85               	movwf	(sprintf@f+1)& (0+255),b
  4130  0016B8  C0E4  F086         	movff	_conn_size,?_sprintf+4
  4131  0016BC  6B87               	clrf	(?_sprintf+5)& (0+255),b
  4132  0016BE  EC8E  F005         	call	_sprintf	;wreg free
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;star_demo.c: 301: LCD_Update();
  4136  0016C2  ECBB  F01A         	call	_LCD_Update	;wreg free
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;star_demo.c: 302: DELAY_ms(2000);
  4140  0016C6  0E07               	movlw	7
  4141  0016C8  6F77               	movwf	(DELAY_ms@ms+1)& (0+255),b
  4142  0016CA  0ED0               	movlw	208
  4143  0016CC  6F76               	movwf	DELAY_ms@ms& (0+255),b
  4144  0016CE  ECC7  F015         	call	_DELAY_ms	;wreg free
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;star_demo.c: 303: display_connections = 0;
  4148  0016D2  6A48               	clrf	_display_connections,c
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;star_demo.c: 304: STAR_DEMO_OPTIONS_MESSAGE (1);
  4152  0016D4  0E01               	movlw	1
  4153  0016D6  EC5F  F020         	call	_STAR_DEMO_OPTIONS_MESSAGE
  4154  0016DA                     l11288:
  4155  0016DA  5048               	movf	_display_connections,w,c
  4156  0016DC  E001 D5B8          	bnz	l11132
  4157  0016E0  0012               	return		;funcret
  4158  0016E2                     __end_of_run_star_demo:
  4159                           	opt stack 0
  4160                           tblptru	equ	0xFF8
  4161                           tblptrh	equ	0xFF7
  4162                           tblptrl	equ	0xFF6
  4163                           tablat	equ	0xFF5
  4164                           prodh	equ	0xFF4
  4165                           prodl	equ	0xFF3
  4166                           intcon	equ	0xFF2
  4167                           intcon2	equ	0xFF1
  4168                           intcon3	equ	0xFF0
  4169                           postinc0	equ	0xFEE
  4170                           wreg	equ	0xFE8
  4171                           indf1	equ	0xFE7
  4172                           fsr1h	equ	0xFE2
  4173                           fsr1l	equ	0xFE1
  4174                           indf2	equ	0xFDF
  4175                           fsr2h	equ	0xFDA
  4176                           fsr2l	equ	0xFD9
  4177                           
  4178 ;; *************** function ___lbmod *****************
  4179 ;; Defined at:
  4180 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbmod.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  dividend        1    wreg     unsigned char 
  4183 ;;  divisor         1   22[BANK0 ] unsigned char 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  dividend        1   23[BANK0 ] unsigned char 
  4186 ;;  rem             1   25[BANK0 ] unsigned char 
  4187 ;;  counter         1   24[BANK0 ] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      unsigned char 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, status,0
  4192 ;; Tracked objects:
  4193 ;;		On entry : F/0
  4194 ;;		On exit  : F/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4197 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4198 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4200 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4201 ;;Total ram usage:        4 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    8
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_run_star_demo
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           	psect	text8
  4212  004022                     __ptext8:
  4213                           	opt stack 0
  4214  004022                     ___lbmod:
  4215                           	opt stack 20
  4216                           
  4217                           ;incstack = 0
  4218                           ;___lbmod@dividend stored from wreg
  4219  004022  6F77               	movwf	___lbmod@dividend& (0+255),b
  4220  004024  0E08               	movlw	8
  4221  004026  0100               	movlb	0	; () banked
  4222  004028  6F78               	movwf	___lbmod@counter& (0+255),b
  4223                           
  4224                           ; BSR set to: 0
  4225  00402A  6B79               	clrf	___lbmod@rem& (0+255),b
  4226  00402C                     l7724:
  4227                           
  4228                           ; BSR set to: 0
  4229  00402C  90D8               	bcf	status,0,c
  4230  00402E  3577               	rlcf	___lbmod@dividend& (0+255),w,b
  4231  004030  3579               	rlcf	___lbmod@rem& (0+255),w,b
  4232  004032  6F79               	movwf	___lbmod@rem& (0+255),b
  4233                           
  4234                           ; BSR set to: 0
  4235  004034  90D8               	bcf	status,0,c
  4236  004036  3777               	rlcf	___lbmod@dividend& (0+255),f,b
  4237                           
  4238                           ; BSR set to: 0
  4239  004038  5176               	movf	___lbmod@divisor& (0+255),w,b
  4240  00403A  5D79               	subwf	___lbmod@rem& (0+255),w,b
  4241  00403C  E302               	bnc	l7732
  4242                           
  4243                           ; BSR set to: 0
  4244  00403E  5176               	movf	___lbmod@divisor& (0+255),w,b
  4245  004040  5F79               	subwf	___lbmod@rem& (0+255),f,b
  4246  004042                     l7732:
  4247                           
  4248                           ; BSR set to: 0
  4249  004042  2F78               	decfsz	___lbmod@counter& (0+255),f,b
  4250  004044  D7F3               	goto	l7724
  4251                           
  4252                           ; BSR set to: 0
  4253  004046  5179               	movf	___lbmod@rem& (0+255),w,b
  4254                           
  4255                           ; BSR set to: 0
  4256  004048  0012               	return		;funcret
  4257  00404A                     __end_of___lbmod:
  4258                           	opt stack 0
  4259                           tblptru	equ	0xFF8
  4260                           tblptrh	equ	0xFF7
  4261                           tblptrl	equ	0xFF6
  4262                           tablat	equ	0xFF5
  4263                           prodh	equ	0xFF4
  4264                           prodl	equ	0xFF3
  4265                           intcon	equ	0xFF2
  4266                           intcon2	equ	0xFF1
  4267                           intcon3	equ	0xFF0
  4268                           postinc0	equ	0xFEE
  4269                           wreg	equ	0xFE8
  4270                           indf1	equ	0xFE7
  4271                           fsr1h	equ	0xFE2
  4272                           fsr1l	equ	0xFE1
  4273                           indf2	equ	0xFDF
  4274                           fsr2h	equ	0xFDA
  4275                           fsr2l	equ	0xFD9
  4276                           status	equ	0xFD8
  4277                           
  4278 ;; *************** function _Process_RxMessage *****************
  4279 ;; Defined at:
  4280 ;;		line 66 in file "../src/star_demo.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  User_data_st    1  110[BANK0 ] unsigned char 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1    wreg      unsigned char 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : D/0
  4291 ;;		On exit  : F/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4295 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4297 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4298 ;;Total ram usage:        1 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:   19
  4301 ;; This function calls:
  4302 ;;		_DELAY_ms
  4303 ;;		_DemoOutput_UpdateTxRx
  4304 ;;		_MiApp_DiscardMessage
  4305 ;;		_MiApp_MessageAvailable
  4306 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  4307 ;;		_Source_END_DEVICE_INFO
  4308 ;; This function is called by:
  4309 ;;		_run_star_demo
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text9
  4314  003C02                     __ptext9:
  4315                           	opt stack 0
  4316  003C02                     _Process_RxMessage:
  4317                           	opt stack 9
  4318                           
  4319                           ;star_demo.c: 75: User_data_status = MiApp_MessageAvailable();
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;incstack = 0
  4323  003C02  EC01  F021         	call	_MiApp_MessageAvailable	;wreg free
  4324  003C06  6FCE               	movwf	Process_RxMessage@User_data_status& (0+255),b
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;star_demo.c: 76: if(User_data_status)
  4328  003C08  51CE               	movf	Process_RxMessage@User_data_status& (0+255),w,b
  4329  003C0A  E01D               	bz	l10932
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;star_demo.c: 77: {
  4333                           ;star_demo.c: 87: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  4334  003C0C  2A43               	incf	_RxNum,f,c
  4335  003C0E  C043  F0A7         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  4336  003C12  5045               	movf	_TxNum,w,c
  4337  003C14  ECFA  F020         	call	_DemoOutput_UpdateTxRx
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;star_demo.c: 88: DELAY_ms(2000);
  4341  003C18  0E07               	movlw	7
  4342  003C1A  6F77               	movwf	(DELAY_ms@ms+1)& (0+255),b
  4343  003C1C  0ED0               	movlw	208
  4344  003C1E  6F76               	movwf	DELAY_ms@ms& (0+255),b
  4345  003C20  ECC7  F015         	call	_DELAY_ms	;wreg free
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;star_demo.c: 90: LATAbits.LATA7 ^= 1;
  4349  003C24  7E89               	btg	3977,7,c	;volatile
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;star_demo.c: 94: if (!role && !rxMessage.flags.bits.broadcast)
  4353  003C26  51E7               	movf	_role& (0+255),w,b
  4354  003C28  E109               	bnz	l10928
  4355                           
  4356                           ; BSR set to: 0
  4357  003C2A  502F               	movf	_rxMessage,w,c
  4358  003C2C  0B03               	andlw	3
  4359  003C2E  E106               	bnz	l10928
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;star_demo.c: 95: {
  4363                           ;star_demo.c: 96: Source_END_DEVICE_INFO(rxMessage.Payload);
  4364  003C30  C034  F0A5         	movff	_rxMessage+5,Source_END_DEVICE_INFO@SrAddr
  4365  003C34  C035  F0A6         	movff	_rxMessage+6,Source_END_DEVICE_INFO@SrAddr+1
  4366  003C38  EC26  F01C         	call	_Source_END_DEVICE_INFO	;wreg free
  4367  003C3C                     l10928:
  4368                           
  4369                           ; BSR set to: 0
  4370                           ;star_demo.c: 97: }
  4371                           ;star_demo.c: 105: MiApp_DiscardMessage();
  4372  003C3C  EC0C  F021         	call	_MiApp_DiscardMessage	;wreg free
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;star_demo.c: 106: STAR_DEMO_OPTIONS_MESSAGE (role);
  4376  003C40  51E7               	movf	_role& (0+255),w,b
  4377  003C42  EC5F  F020         	call	_STAR_DEMO_OPTIONS_MESSAGE
  4378  003C46                     l10932:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;star_demo.c: 108: }
  4382                           ;star_demo.c: 109: return User_data_status;
  4383  003C46  51CE               	movf	Process_RxMessage@User_data_status& (0+255),w,b
  4384                           
  4385                           ; BSR set to: 0
  4386  003C48  0012               	return		;funcret
  4387  003C4A                     __end_of_Process_RxMessage:
  4388                           	opt stack 0
  4389                           tblptru	equ	0xFF8
  4390                           tblptrh	equ	0xFF7
  4391                           tblptrl	equ	0xFF6
  4392                           tablat	equ	0xFF5
  4393                           prodh	equ	0xFF4
  4394                           prodl	equ	0xFF3
  4395                           intcon	equ	0xFF2
  4396                           intcon2	equ	0xFF1
  4397                           intcon3	equ	0xFF0
  4398                           postinc0	equ	0xFEE
  4399                           wreg	equ	0xFE8
  4400                           indf1	equ	0xFE7
  4401                           fsr1h	equ	0xFE2
  4402                           fsr1l	equ	0xFE1
  4403                           indf2	equ	0xFDF
  4404                           fsr2h	equ	0xFDA
  4405                           fsr2l	equ	0xFD9
  4406                           status	equ	0xFD8
  4407                           
  4408 ;; *************** function _Source_END_DEVICE_INFO *****************
  4409 ;; Defined at:
  4410 ;;		line 234 in file "../src/demo_ouput.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  SrAddr          2   69[BANK0 ] PTR unsigned char 
  4413 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;		None               void
  4418 ;; Registers used:
  4419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : F/0
  4422 ;;		On exit  : F/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4428 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4429 ;;Total ram usage:        2 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:   11
  4432 ;; This function calls:
  4433 ;;		_DELAY_ms
  4434 ;;		_LCD_Erase
  4435 ;;		_LCD_Update
  4436 ;;		_sprintf
  4437 ;; This function is called by:
  4438 ;;		_Process_RxMessage
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text10
  4443  00384C                     __ptext10:
  4444                           	opt stack 0
  4445  00384C                     _Source_END_DEVICE_INFO:
  4446                           	opt stack 16
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;demo_ouput.c: 236: LCD_Erase();
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;incstack = 0
  4453  00384C  EC25  F020         	call	_LCD_Erase	;wreg free
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;demo_ouput.c: 237: sprintf((char *)&(LCDText), (char*)"Data Packet from");
  4457  003850  0EB8               	movlw	low _LCDText
  4458  003852  6F82               	movwf	sprintf@sp& (0+255),b
  4459  003854  0E01               	movlw	high _LCDText
  4460  003856  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  4461  003858  0E8E               	movlw	low STR_27
  4462  00385A  6F84               	movwf	sprintf@f& (0+255),b
  4463  00385C  0EFF               	movlw	high STR_27
  4464  00385E  6F85               	movwf	(sprintf@f+1)& (0+255),b
  4465  003860  EC8E  F005         	call	_sprintf	;wreg free
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;demo_ouput.c: 238: sprintf((char *)&(LCDText[16]), (char*)" Address:%02x%02x%02x",SrAdd
      +                          r[0],SrAddr[1],SrAddr[2]);
  4469  003864  0EC8               	movlw	low (_LCDText+16)
  4470  003866  6F82               	movwf	sprintf@sp& (0+255),b
  4471  003868  0E01               	movlw	high (_LCDText+16)
  4472  00386A  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  4473  00386C  0E0C               	movlw	low STR_28
  4474  00386E  6F84               	movwf	sprintf@f& (0+255),b
  4475  003870  0EFF               	movlw	high STR_28
  4476  003872  6F85               	movwf	(sprintf@f+1)& (0+255),b
  4477  003874  C0A5  FFD9         	movff	Source_END_DEVICE_INFO@SrAddr,fsr2l
  4478  003878  C0A6  FFDA         	movff	Source_END_DEVICE_INFO@SrAddr+1,fsr2h
  4479  00387C  50DF               	movf	indf2,w,c
  4480  00387E  6F86               	movwf	(?_sprintf+4)& (0+255),b
  4481  003880  6B87               	clrf	(?_sprintf+5)& (0+255),b
  4482  003882  EE20 F001          	lfsr	2,1
  4483  003886  51A5               	movf	Source_END_DEVICE_INFO@SrAddr& (0+255),w,b
  4484  003888  26D9               	addwf	fsr2l,f,c
  4485  00388A  51A6               	movf	(Source_END_DEVICE_INFO@SrAddr+1)& (0+255),w,b
  4486  00388C  22DA               	addwfc	fsr2h,f,c
  4487  00388E  50DF               	movf	indf2,w,c
  4488  003890  6F88               	movwf	(?_sprintf+6)& (0+255),b
  4489  003892  6B89               	clrf	(?_sprintf+7)& (0+255),b
  4490  003894  EE20 F002          	lfsr	2,2
  4491  003898  51A5               	movf	Source_END_DEVICE_INFO@SrAddr& (0+255),w,b
  4492  00389A  26D9               	addwf	fsr2l,f,c
  4493  00389C  51A6               	movf	(Source_END_DEVICE_INFO@SrAddr+1)& (0+255),w,b
  4494  00389E  22DA               	addwfc	fsr2h,f,c
  4495  0038A0  50DF               	movf	indf2,w,c
  4496  0038A2  6F8A               	movwf	(?_sprintf+8)& (0+255),b
  4497  0038A4  6B8B               	clrf	(?_sprintf+9)& (0+255),b
  4498  0038A6  EC8E  F005         	call	_sprintf	;wreg free
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;demo_ouput.c: 239: LCD_Update();
  4502  0038AA  ECBB  F01A         	call	_LCD_Update	;wreg free
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;demo_ouput.c: 240: DELAY_ms(1200);
  4506  0038AE  0E04               	movlw	4
  4507  0038B0  6F77               	movwf	(DELAY_ms@ms+1)& (0+255),b
  4508  0038B2  0EB0               	movlw	176
  4509  0038B4  6F76               	movwf	DELAY_ms@ms& (0+255),b
  4510  0038B6  EFC7  F015         	goto	_DELAY_ms	;wreg free
  4511  0038BA                     __end_of_Source_END_DEVICE_INFO:
  4512                           	opt stack 0
  4513                           tblptru	equ	0xFF8
  4514                           tblptrh	equ	0xFF7
  4515                           tblptrl	equ	0xFF6
  4516                           tablat	equ	0xFF5
  4517                           prodh	equ	0xFF4
  4518                           prodl	equ	0xFF3
  4519                           intcon	equ	0xFF2
  4520                           intcon2	equ	0xFF1
  4521                           intcon3	equ	0xFF0
  4522                           postinc0	equ	0xFEE
  4523                           wreg	equ	0xFE8
  4524                           indf1	equ	0xFE7
  4525                           fsr1h	equ	0xFE2
  4526                           fsr1l	equ	0xFE1
  4527                           indf2	equ	0xFDF
  4528                           fsr2h	equ	0xFDA
  4529                           fsr2l	equ	0xFD9
  4530                           status	equ	0xFD8
  4531                           
  4532 ;; *************** function _DemoOutput_UpdateTxRx *****************
  4533 ;; Defined at:
  4534 ;;		line 188 in file "../src/demo_ouput.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  TxNum           1    wreg     unsigned char 
  4537 ;;  RxNum           1   71[BANK0 ] unsigned char 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  TxNum           1   72[BANK0 ] unsigned char 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;		None               void
  4542 ;; Registers used:
  4543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : D/0
  4546 ;;		On exit  : F/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4549 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4550 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4552 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4553 ;;Total ram usage:        2 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:   12
  4556 ;; This function calls:
  4557 ;;		_LCDTRXCount
  4558 ;; This function is called by:
  4559 ;;		_Process_RxMessage
  4560 ;;		_run_star_demo
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text11
  4565  0041F4                     __ptext11:
  4566                           	opt stack 0
  4567  0041F4                     _DemoOutput_UpdateTxRx:
  4568                           	opt stack 15
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;incstack = 0
  4572                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  4573  0041F4  0100               	movlb	0	; () banked
  4574  0041F6  6FA8               	movwf	DemoOutput_UpdateTxRx@TxNum& (0+255),b
  4575                           
  4576                           ;demo_ouput.c: 190: LCDTRXCount(TxNum, RxNum);
  4577  0041F8  C0A7  F0A5         	movff	DemoOutput_UpdateTxRx@RxNum,LCDTRXCount@rxCount
  4578  0041FC  51A8               	movf	DemoOutput_UpdateTxRx@TxNum& (0+255),w,b
  4579  0041FE  EF66  F01E         	goto	_LCDTRXCount
  4580  004202                     __end_of_DemoOutput_UpdateTxRx:
  4581                           	opt stack 0
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           prodh	equ	0xFF4
  4587                           prodl	equ	0xFF3
  4588                           intcon	equ	0xFF2
  4589                           intcon2	equ	0xFF1
  4590                           intcon3	equ	0xFF0
  4591                           postinc0	equ	0xFEE
  4592                           wreg	equ	0xFE8
  4593                           indf1	equ	0xFE7
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           indf2	equ	0xFDF
  4597                           fsr2h	equ	0xFDA
  4598                           fsr2l	equ	0xFD9
  4599                           status	equ	0xFD8
  4600                           
  4601 ;; *************** function _LCDTRXCount *****************
  4602 ;; Defined at:
  4603 ;;		line 120 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  txCount         1    wreg     unsigned char 
  4606 ;;  rxCount         1   69[BANK0 ] unsigned char 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  txCount         1   70[BANK0 ] unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;		None               void
  4611 ;; Registers used:
  4612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : F/0
  4615 ;;		On exit  : F/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4618 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4621 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4622 ;;Total ram usage:        2 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:   11
  4625 ;; This function calls:
  4626 ;;		_LCD_Erase
  4627 ;;		_LCD_Update
  4628 ;;		_sprintf
  4629 ;; This function is called by:
  4630 ;;		_DemoOutput_UpdateTxRx
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text12
  4635  003CCC                     __ptext12:
  4636                           	opt stack 0
  4637  003CCC                     _LCDTRXCount:
  4638                           	opt stack 15
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;incstack = 0
  4642                           ;LCDTRXCount@txCount stored from wreg
  4643  003CCC  6FA6               	movwf	LCDTRXCount@txCount& (0+255),b
  4644                           
  4645                           ;lcd.c: 123: LCD_Erase();
  4646  003CCE  EC25  F020         	call	_LCD_Erase	;wreg free
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;lcd.c: 124: sprintf((char *)LCDText, (char*)"TX:%3d , RX:%3d", txCount , rxCount);
  4650  003CD2  0EB8               	movlw	low _LCDText
  4651  003CD4  6F82               	movwf	sprintf@sp& (0+255),b
  4652  003CD6  0E01               	movlw	high _LCDText
  4653  003CD8  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  4654  003CDA  0EAF               	movlw	low STR_13
  4655  003CDC  6F84               	movwf	sprintf@f& (0+255),b
  4656  003CDE  0EFF               	movlw	high STR_13
  4657  003CE0  6F85               	movwf	(sprintf@f+1)& (0+255),b
  4658  003CE2  C0A6  F086         	movff	LCDTRXCount@txCount,?_sprintf+4
  4659  003CE6  6B87               	clrf	(?_sprintf+5)& (0+255),b
  4660  003CE8  C0A5  F088         	movff	LCDTRXCount@rxCount,?_sprintf+6
  4661  003CEC  6B89               	clrf	(?_sprintf+7)& (0+255),b
  4662  003CEE  EC8E  F005         	call	_sprintf	;wreg free
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;lcd.c: 125: sprintf((char *)&(LCDText[16]), (char*)"Message Count");
  4666  003CF2  0EC8               	movlw	low (_LCDText+16)
  4667  003CF4  6F82               	movwf	sprintf@sp& (0+255),b
  4668  003CF6  0E01               	movlw	high (_LCDText+16)
  4669  003CF8  6F83               	movwf	(sprintf@sp+1)& (0+255),b
  4670  003CFA  0EBF               	movlw	low STR_14
  4671  003CFC  6F84               	movwf	sprintf@f& (0+255),b
  4672  003CFE  0EFF               	movlw	high STR_14
  4673  003D00  6F85               	movwf	(sprintf@f+1)& (0+255),b
  4674  003D02  EC8E  F005         	call	_sprintf	;wreg free
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;lcd.c: 126: LCD_Update();
  4678  003D06  EFBB  F01A         	goto	_LCD_Update	;wreg free
  4679  003D0A                     __end_of_LCDTRXCount:
  4680                           	opt stack 0
  4681                           tblptru	equ	0xFF8
  4682                           tblptrh	equ	0xFF7
  4683                           tblptrl	equ	0xFF6
  4684                           tablat	equ	0xFF5
  4685                           prodh	equ	0xFF4
  4686                           prodl	equ	0xFF3
  4687                           intcon	equ	0xFF2
  4688                           intcon2	equ	0xFF1
  4689                           intcon3	equ	0xFF0
  4690                           postinc0	equ	0xFEE
  4691                           wreg	equ	0xFE8
  4692                           indf1	equ	0xFE7
  4693                           fsr1h	equ	0xFE2
  4694                           fsr1l	equ	0xFE1
  4695                           indf2	equ	0xFDF
  4696                           fsr2h	equ	0xFDA
  4697                           fsr2l	equ	0xFD9
  4698                           status	equ	0xFD8
  4699                           
  4700 ;; *************** function _MiApp_UnicastStar *****************
  4701 ;; Defined at:
  4702 ;;		line 1974 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  SecEn           1    wreg     unsigned char 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  SecEn           1    8[BANK2 ] unsigned char 
  4707 ;;  t2              4    4[BANK2 ] struct _MIWI_TICK
  4708 ;;  t1              4    0[BANK2 ] struct _MIWI_TICK
  4709 ;;  status          1    0        unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      unsigned char 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : F/0
  4716 ;;		On exit  : F/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4720 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4721 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4722 ;;      Totals:         0       4       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4723 ;;Total ram usage:       13 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:   19
  4726 ;; This function calls:
  4727 ;;		_MiApp_MessageAvailable
  4728 ;;		_MiWi_TickGet
  4729 ;;		_SendPacket
  4730 ;; This function is called by:
  4731 ;;		_run_star_demo
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text13
  4736  0032C2                     __ptext13:
  4737                           	opt stack 0
  4738  0032C2                     _MiApp_UnicastStar:
  4739                           	opt stack 9
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;incstack = 0
  4743                           ;MiApp_UnicastStar@SecEn stored from wreg
  4744  0032C2  0102               	movlb	2	; () banked
  4745  0032C4  6FB2               	movwf	MiApp_UnicastStar@SecEn& (0+255),b
  4746                           
  4747                           ;miwi_p2p.c: 1976: rec_ack = 0;
  4748  0032C6  0100               	movlb	0	; () banked
  4749  0032C8  6BE2               	clrf	_rec_ack& (0+255),b
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;miwi_p2p.c: 1977: bool status;
  4753                           ;miwi_p2p.c: 1980: status = SendPacket(0, ConnectionTable[0].Address, 1, SecEn);
  4754  0032CA  0E22               	movlw	low (_ConnectionTable+4)
  4755  0032CC  6FA3               	movwf	SendPacket@DestinationAddress& (0+255),b
  4756  0032CE  0E02               	movlw	high (_ConnectionTable+4)
  4757  0032D0  6FA4               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  4758  0032D2  0E01               	movlw	1
  4759  0032D4  6FA5               	movwf	SendPacket@isCommand& (0+255),b
  4760  0032D6  C2B2  F0A6         	movff	MiApp_UnicastStar@SecEn,SendPacket@SecurityEnabled
  4761  0032DA  0E00               	movlw	0
  4762  0032DC  ECE1  F017         	call	_SendPacket
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;miwi_p2p.c: 1987: MIWI_TICK t1, t2;
  4766                           ;miwi_p2p.c: 1989: t1 = MiWi_TickGet();
  4767  0032E0  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  4768  0032E4  C076  F2AA         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t1
  4769  0032E8  C077  F2AB         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t1+1
  4770  0032EC  C078  F2AC         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t1+2
  4771  0032F0  C079  F2AD         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t1+3
  4772                           
  4773                           ;miwi_p2p.c: 1990: while (!rec_ack)
  4774  0032F4  D02A               	goto	l10792
  4775  0032F6                     l10782:
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;miwi_p2p.c: 1991: {
  4779                           ;miwi_p2p.c: 1992: t2 = MiWi_TickGet();
  4780  0032F6  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  4781  0032FA  C076  F2AE         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t2
  4782  0032FE  C077  F2AF         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t2+1
  4783  003302  C078  F2B0         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t2+2
  4784  003306  C079  F2B1         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t2+3
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;miwi_p2p.c: 1993: MiApp_MessageAvailable();
  4788  00330A  EC01  F021         	call	_MiApp_MessageAvailable	;wreg free
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;miwi_p2p.c: 1996: if((t2.Val - t1.Val) > ((((uint32_t)(16000000)/32)/10)))
  4792  00330E  0102               	movlb	2	; () banked
  4793  003310  51AA               	movf	MiApp_UnicastStar@t1& (0+255),w,b
  4794  003312  5DAE               	subwf	MiApp_UnicastStar@t2& (0+255),w,b
  4795  003314  0100               	movlb	0	; () banked
  4796  003316  6FCE               	movwf	??_MiApp_UnicastStar& (0+255),b
  4797  003318  0102               	movlb	2	; () banked
  4798  00331A  51AB               	movf	(MiApp_UnicastStar@t1+1)& (0+255),w,b
  4799  00331C  59AF               	subwfb	(MiApp_UnicastStar@t2+1)& (0+255),w,b
  4800  00331E  0100               	movlb	0	; () banked
  4801  003320  6FCF               	movwf	(??_MiApp_UnicastStar+1)& (0+255),b
  4802  003322  0102               	movlb	2	; () banked
  4803  003324  51AC               	movf	(MiApp_UnicastStar@t1+2)& (0+255),w,b
  4804  003326  59B0               	subwfb	(MiApp_UnicastStar@t2+2)& (0+255),w,b
  4805  003328  0100               	movlb	0	; () banked
  4806  00332A  6FD0               	movwf	(??_MiApp_UnicastStar+2)& (0+255),b
  4807  00332C  0102               	movlb	2	; () banked
  4808  00332E  51AD               	movf	(MiApp_UnicastStar@t1+3)& (0+255),w,b
  4809  003330  59B1               	subwfb	(MiApp_UnicastStar@t2+3)& (0+255),w,b
  4810  003332  0100               	movlb	0	; () banked
  4811  003334  6FD1               	movwf	(??_MiApp_UnicastStar+3)& (0+255),b
  4812  003336  51D1               	movf	(??_MiApp_UnicastStar+3)& (0+255),w,b
  4813  003338  11D0               	iorwf	(??_MiApp_UnicastStar+2)& (0+255),w,b
  4814  00333A  E105               	bnz	u11210
  4815  00333C  0E51               	movlw	81
  4816  00333E  5DCE               	subwf	??_MiApp_UnicastStar& (0+255),w,b
  4817  003340  0EC3               	movlw	195
  4818  003342  59CF               	subwfb	(??_MiApp_UnicastStar+1)& (0+255),w,b
  4819  003344  E302               	bnc	l10792
  4820  003346                     u11210:
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;miwi_p2p.c: 1997: {
  4824                           ;miwi_p2p.c: 1998: if (rec_ack != 1)
  4825  003346  05E2               	decf	_rec_ack& (0+255),w,b
  4826  003348  E102               	bnz	l10794
  4827  00334A                     l10792:
  4828                           
  4829                           ; BSR set to: 0
  4830  00334A  51E2               	movf	_rec_ack& (0+255),w,b
  4831  00334C  E0D4               	bz	l10782
  4832  00334E                     l10794:
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;miwi_p2p.c: 2001: }
  4836                           ;miwi_p2p.c: 2002: }
  4837                           ;miwi_p2p.c: 2003: }
  4838                           ;miwi_p2p.c: 2006: return rec_ack;
  4839  00334E  51E2               	movf	_rec_ack& (0+255),w,b
  4840                           
  4841                           ; BSR set to: 0
  4842  003350  0012               	return		;funcret
  4843  003352                     __end_of_MiApp_UnicastStar:
  4844                           	opt stack 0
  4845                           tblptru	equ	0xFF8
  4846                           tblptrh	equ	0xFF7
  4847                           tblptrl	equ	0xFF6
  4848                           tablat	equ	0xFF5
  4849                           prodh	equ	0xFF4
  4850                           prodl	equ	0xFF3
  4851                           intcon	equ	0xFF2
  4852                           intcon2	equ	0xFF1
  4853                           intcon3	equ	0xFF0
  4854                           postinc0	equ	0xFEE
  4855                           wreg	equ	0xFE8
  4856                           indf1	equ	0xFE7
  4857                           fsr1h	equ	0xFE2
  4858                           fsr1l	equ	0xFE1
  4859                           indf2	equ	0xFDF
  4860                           fsr2h	equ	0xFDA
  4861                           fsr2l	equ	0xFD9
  4862                           status	equ	0xFD8
  4863                           
  4864 ;; *************** function _MiApp_BroadcastPacket *****************
  4865 ;; Defined at:
  4866 ;;		line 1693 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  SecEn           1    wreg     unsigned char 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  SecEn           1   77[BANK0 ] unsigned char 
  4871 ;;  i               1   78[BANK0 ] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;                  1    wreg      unsigned char 
  4874 ;; Registers used:
  4875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4876 ;; Tracked objects:
  4877 ;;		On entry : F/0
  4878 ;;		On exit  : F/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4884 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;Total ram usage:        2 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:   14
  4888 ;; This function calls:
  4889 ;;		_IndirectPacket
  4890 ;;		_SendPacket
  4891 ;; This function is called by:
  4892 ;;		_run_star_demo
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text14
  4897  003984                     __ptext14:
  4898                           	opt stack 0
  4899  003984                     _MiApp_BroadcastPacket:
  4900                           	opt stack 14
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;incstack = 0
  4904                           ;MiApp_BroadcastPacket@SecEn stored from wreg
  4905  003984  6FAD               	movwf	MiApp_BroadcastPacket@SecEn& (0+255),b
  4906                           
  4907                           ;miwi_p2p.c: 1696: uint8_t i;
  4908                           ;miwi_p2p.c: 1698: for(i = 0; i < 10; i++)
  4909  003986  0100               	movlb	0	; () banked
  4910  003988  6BAE               	clrf	MiApp_BroadcastPacket@i& (0+255),b
  4911  00398A                     l10762:
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;miwi_p2p.c: 1699: {
  4915                           ;miwi_p2p.c: 1700: if( ConnectionTable[i].status.bits.isValid && ConnectionTable[i].stat
      +                          us.bits.RXOnWhenIdle == 0 )
  4916  00398A  51AE               	movf	MiApp_BroadcastPacket@i& (0+255),w,b
  4917  00398C  0D0E               	mullw	14
  4918  00398E  0E2A               	movlw	low (_ConnectionTable+12)
  4919  003990  24F3               	addwf	prodl,w,c
  4920  003992  6ED9               	movwf	fsr2l,c
  4921  003994  0E02               	movlw	high (_ConnectionTable+12)
  4922  003996  20F4               	addwfc	prodh,w,c
  4923  003998  6EDA               	movwf	fsr2h,c
  4924  00399A  AEDF               	btfss	indf2,7,c
  4925  00399C  D014               	goto	l10768
  4926                           
  4927                           ; BSR set to: 2
  4928  00399E  0100               	movlb	0	; () banked
  4929  0039A0  51AE               	movf	MiApp_BroadcastPacket@i& (0+255),w,b
  4930  0039A2  0D0E               	mullw	14
  4931  0039A4  0E2A               	movlw	low (_ConnectionTable+12)
  4932  0039A6  24F3               	addwf	prodl,w,c
  4933  0039A8  6ED9               	movwf	fsr2l,c
  4934  0039AA  0E02               	movlw	high (_ConnectionTable+12)
  4935  0039AC  20F4               	addwfc	prodh,w,c
  4936  0039AE  6EDA               	movwf	fsr2h,c
  4937  0039B0  B0DF               	btfsc	indf2,0,c
  4938  0039B2  D009               	goto	l10768
  4939                           
  4940                           ; BSR set to: 2
  4941                           ;miwi_p2p.c: 1701: {
  4942                           ;miwi_p2p.c: 1705: IndirectPacket(1, (0), 0, SecEn);
  4943  0039B4  6B80               	clrf	IndirectPacket@DestinationAddress& (0+255),b
  4944  0039B6  6B81               	clrf	(IndirectPacket@DestinationAddress+1)& (0+255),b
  4945  0039B8  6B82               	clrf	IndirectPacket@isCommand& (0+255),b
  4946  0039BA  C0AD  F083         	movff	MiApp_BroadcastPacket@SecEn,IndirectPacket@SecurityEnabled
  4947  0039BE  0E01               	movlw	1
  4948  0039C0  EC5B  F00E         	call	_IndirectPacket
  4949                           
  4950                           ;miwi_p2p.c: 1707: break;
  4951  0039C4  D005               	goto	l10772
  4952  0039C6                     l10768:
  4953                           
  4954                           ; BSR set to: 2
  4955  0039C6  0100               	movlb	0	; () banked
  4956  0039C8  2BAE               	incf	MiApp_BroadcastPacket@i& (0+255),f,b
  4957                           
  4958                           ; BSR set to: 0
  4959  0039CA  0E09               	movlw	9
  4960  0039CC  65AE               	cpfsgt	MiApp_BroadcastPacket@i& (0+255),b
  4961  0039CE  D7DD               	goto	l10762
  4962  0039D0                     l10772:
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;miwi_p2p.c: 1708: }
  4966                           ;miwi_p2p.c: 1709: }
  4967                           ;miwi_p2p.c: 1723: return SendPacket(1, (0), 0, SecEn);
  4968                           ;	Return value of _MiApp_BroadcastPacket is never used
  4969  0039D0  6BA3               	clrf	SendPacket@DestinationAddress& (0+255),b
  4970  0039D2  6BA4               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  4971  0039D4  6BA5               	clrf	SendPacket@isCommand& (0+255),b
  4972  0039D6  C0AD  F0A6         	movff	MiApp_BroadcastPacket@SecEn,SendPacket@SecurityEnabled
  4973  0039DA  0E01               	movlw	1
  4974  0039DC  EFE1  F017         	goto	_SendPacket
  4975  0039E0                     __end_of_MiApp_BroadcastPacket:
  4976                           	opt stack 0
  4977                           tblptru	equ	0xFF8
  4978                           tblptrh	equ	0xFF7
  4979                           tblptrl	equ	0xFF6
  4980                           tablat	equ	0xFF5
  4981                           prodh	equ	0xFF4
  4982                           prodl	equ	0xFF3
  4983                           intcon	equ	0xFF2
  4984                           intcon2	equ	0xFF1
  4985                           intcon3	equ	0xFF0
  4986                           postinc0	equ	0xFEE
  4987                           wreg	equ	0xFE8
  4988                           indf1	equ	0xFE7
  4989                           fsr1h	equ	0xFE2
  4990                           fsr1l	equ	0xFE1
  4991                           indf2	equ	0xFDF
  4992                           fsr2h	equ	0xFDA
  4993                           fsr2l	equ	0xFD9
  4994                           status	equ	0xFD8
  4995                           
  4996 ;; *************** function _ButtonPressed *****************
  4997 ;; Defined at:
  4998 ;;		line 260 in file "../src/demo_ouput.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  t               4   36[BANK0 ] struct _MIWI_TICK
  5003 ;;  tickDifferen    4   32[BANK0 ] struct _MIWI_TICK
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      unsigned char 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : D/0
  5010 ;;		On exit  : D/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5014 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5016 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5017 ;;Total ram usage:        8 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    9
  5020 ;; This function calls:
  5021 ;;		_MiWi_TickGet
  5022 ;; This function is called by:
  5023 ;;		_freezer_feature
  5024 ;;		_run_star_demo
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text15
  5029  003352                     __ptext15:
  5030                           	opt stack 0
  5031  003352                     _ButtonPressed:
  5032                           	opt stack 20
  5033                           
  5034                           ;demo_ouput.c: 262: MIWI_TICK tickDifference;
  5035                           ;demo_ouput.c: 264: if(PORTBbits.RB1 == 0)
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;incstack = 0
  5039  003352  B281               	btfsc	3969,1,c	;volatile
  5040  003354  D00F               	goto	l1180
  5041                           
  5042                           ;demo_ouput.c: 265: {
  5043                           ;demo_ouput.c: 267: if(PUSH_BUTTON_pressed == 0)
  5044  003356  5040               	movf	_PUSH_BUTTON_pressed,w,c
  5045  003358  E143               	bnz	l10906
  5046                           
  5047                           ;demo_ouput.c: 268: {
  5048                           ;demo_ouput.c: 269: PUSH_BUTTON_pressed = 1;
  5049  00335A  0E01               	movlw	1
  5050  00335C  6E40               	movwf	_PUSH_BUTTON_pressed,c
  5051                           
  5052                           ;demo_ouput.c: 270: PUSH_BUTTON_press_time = MiWi_TickGet();
  5053  00335E  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  5054  003362  C076  F17B         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  5055  003366  C077  F17C         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  5056  00336A  C078  F17D         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  5057  00336E  C079  F17E         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;demo_ouput.c: 271: return 1;
  5061  003372  0C01               	retlw	1
  5062  003374                     l1180:
  5063                           
  5064                           ;demo_ouput.c: 274: else if(PORTBbits.RB2 == 0)
  5065  003374  B481               	btfsc	3969,2,c	;volatile
  5066  003376  D00F               	goto	l10898
  5067                           
  5068                           ;demo_ouput.c: 275: {
  5069                           ;demo_ouput.c: 277: if(PUSH_BUTTON_pressed == 0)
  5070  003378  5040               	movf	_PUSH_BUTTON_pressed,w,c
  5071  00337A  E132               	bnz	l10906
  5072                           
  5073                           ;demo_ouput.c: 278: {
  5074                           ;demo_ouput.c: 279: PUSH_BUTTON_pressed = 1;
  5075  00337C  0E01               	movlw	1
  5076  00337E  6E40               	movwf	_PUSH_BUTTON_pressed,c
  5077                           
  5078                           ;demo_ouput.c: 280: PUSH_BUTTON_press_time = MiWi_TickGet();
  5079  003380  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  5080  003384  C076  F17B         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  5081  003388  C077  F17C         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  5082  00338C  C078  F17D         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  5083  003390  C079  F17E         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  5084                           
  5085                           ; BSR set to: 0
  5086                           ;demo_ouput.c: 281: return 2;
  5087  003394  0C02               	retlw	2
  5088  003396                     l10898:
  5089                           
  5090                           ;demo_ouput.c: 284: else
  5091                           ;demo_ouput.c: 285: {
  5092                           ;demo_ouput.c: 287: MIWI_TICK t = MiWi_TickGet();
  5093  003396  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  5094  00339A  C076  F084         	movff	?_MiWi_TickGet,ButtonPressed@t
  5095  00339E  C077  F085         	movff	?_MiWi_TickGet+1,ButtonPressed@t+1
  5096  0033A2  C078  F086         	movff	?_MiWi_TickGet+2,ButtonPressed@t+2
  5097  0033A6  C079  F087         	movff	?_MiWi_TickGet+3,ButtonPressed@t+3
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;demo_ouput.c: 290: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  5101  0033AA  0101               	movlb	1	; () banked
  5102  0033AC  517B               	movf	_PUSH_BUTTON_press_time& (0+255),w,b
  5103  0033AE  0100               	movlb	0	; () banked
  5104  0033B0  5D84               	subwf	ButtonPressed@t& (0+255),w,b
  5105  0033B2  6F80               	movwf	ButtonPressed@tickDifference& (0+255),b
  5106  0033B4  0101               	movlb	1	; () banked
  5107  0033B6  517C               	movf	(_PUSH_BUTTON_press_time+1)& (0+255),w,b
  5108  0033B8  0100               	movlb	0	; () banked
  5109  0033BA  5985               	subwfb	(ButtonPressed@t+1)& (0+255),w,b
  5110  0033BC  6F81               	movwf	(ButtonPressed@tickDifference+1)& (0+255),b
  5111  0033BE  0101               	movlb	1	; () banked
  5112  0033C0  517D               	movf	(_PUSH_BUTTON_press_time+2)& (0+255),w,b
  5113  0033C2  0100               	movlb	0	; () banked
  5114  0033C4  5986               	subwfb	(ButtonPressed@t+2)& (0+255),w,b
  5115  0033C6  6F82               	movwf	(ButtonPressed@tickDifference+2)& (0+255),b
  5116  0033C8  0101               	movlb	1	; () banked
  5117  0033CA  517E               	movf	(_PUSH_BUTTON_press_time+3)& (0+255),w,b
  5118  0033CC  0100               	movlb	0	; () banked
  5119  0033CE  5987               	subwfb	(ButtonPressed@t+3)& (0+255),w,b
  5120  0033D0  6F83               	movwf	(ButtonPressed@tickDifference+3)& (0+255),b
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;demo_ouput.c: 293: if(tickDifference.Val > 0x00003FFF)
  5124  0033D2  5183               	movf	(ButtonPressed@tickDifference+3)& (0+255),w,b
  5125  0033D4  1182               	iorwf	(ButtonPressed@tickDifference+2)& (0+255),w,b
  5126  0033D6  E103               	bnz	u11350
  5127  0033D8  0E40               	movlw	64
  5128  0033DA  5D81               	subwf	(ButtonPressed@tickDifference+1)& (0+255),w,b
  5129  0033DC  E301               	bnc	l10906
  5130  0033DE                     u11350:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;demo_ouput.c: 294: {
  5134                           ;demo_ouput.c: 295: PUSH_BUTTON_pressed = 0;
  5135  0033DE  6A40               	clrf	_PUSH_BUTTON_pressed,c
  5136  0033E0                     l10906:
  5137                           
  5138                           ;demo_ouput.c: 296: }
  5139                           ;demo_ouput.c: 297: }
  5140                           ;demo_ouput.c: 299: return 0;
  5141  0033E0  0C00               	retlw	0	;funcret
  5142  0033E2                     __end_of_ButtonPressed:
  5143                           	opt stack 0
  5144                           tblptru	equ	0xFF8
  5145                           tblptrh	equ	0xFF7
  5146                           tblptrl	equ	0xFF6
  5147                           tablat	equ	0xFF5
  5148                           prodh	equ	0xFF4
  5149                           prodl	equ	0xFF3
  5150                           intcon	equ	0xFF2
  5151                           intcon2	equ	0xFF1
  5152                           intcon3	equ	0xFF0
  5153                           postinc0	equ	0xFEE
  5154                           wreg	equ	0xFE8
  5155                           indf1	equ	0xFE7
  5156                           fsr1h	equ	0xFE2
  5157                           fsr1l	equ	0xFE1
  5158                           indf2	equ	0xFDF
  5159                           fsr2h	equ	0xFDA
  5160                           fsr2l	equ	0xFD9
  5161                           status	equ	0xFD8
  5162                           
  5163 ;; *************** function _Initialize_Demo *****************
  5164 ;; Defined at:
  5165 ;;		line 134 in file "../src/task.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  freezer_enab    1    wreg     unsigned char 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  freezer_enab    1  115[BANK0 ] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      unsigned char 
  5172 ;; Registers used:
  5173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : F/0
  5176 ;;		On exit  : F/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5180 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5182 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5183 ;;Total ram usage:        1 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:   20
  5186 ;; This function calls:
  5187 ;;		_DemoOutput_Channel
  5188 ;;		_DemoOutput_ChannelError
  5189 ;;		_EEPROM_Write
  5190 ;;		_MiApp_ConnectionMode
  5191 ;;		_MiApp_EstablishConnection
  5192 ;;		_MiApp_ProtocolInit
  5193 ;;		_MiApp_SetChannel
  5194 ;;		_MiApp_StartConnection
  5195 ;;		_Read_MAC_Address
  5196 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  5197 ;; This function is called by:
  5198 ;;		_main
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text16
  5203  00322E                     __ptext16:
  5204                           	opt stack 0
  5205  00322E                     _Initialize_Demo:
  5206                           	opt stack 10
  5207                           
  5208                           ;incstack = 0
  5209                           ;Initialize_Demo@freezer_enable stored from wreg
  5210  00322E  6FD3               	movwf	Initialize_Demo@freezer_enable& (0+255),b
  5211                           
  5212                           ;task.c: 138: Read_MAC_Address(&myLongAddress);
  5213  003230  0ED9               	movlw	low _myLongAddress
  5214  003232  0100               	movlb	0	; () banked
  5215  003234  6F7B               	movwf	Read_MAC_Address@myAddress& (0+255),b
  5216  003236  0E01               	movlw	high _myLongAddress
  5217  003238  6F7C               	movwf	(Read_MAC_Address@myAddress+1)& (0+255),b
  5218  00323A  EC7B  F01A         	call	_Read_MAC_Address	;wreg free
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;task.c: 141: if (freezer_enable)
  5222  00323E  51D3               	movf	Initialize_Demo@freezer_enable& (0+255),w,b
  5223  003240  E004               	bz	l1267
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;task.c: 142: {
  5227                           ;task.c: 153: MiApp_ProtocolInit(1);
  5228  003242  0E01               	movlw	1
  5229  003244  EC27  F010         	call	_MiApp_ProtocolInit
  5230  003248  D039               	goto	L9
  5231  00324A                     l1267:
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;task.c: 161: else
  5235                           ;task.c: 162: {
  5236                           ;task.c: 163: LATAbits.LATA6 = 0;
  5237  00324A  9C89               	bcf	3977,6,c	;volatile
  5238                           
  5239                           ;task.c: 164: LATAbits.LATA7 = 0;
  5240  00324C  9E89               	bcf	3977,7,c	;volatile
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;task.c: 176: MiApp_ProtocolInit(0);
  5244  00324E  0E00               	movlw	0
  5245  003250  EC27  F010         	call	_MiApp_ProtocolInit
  5246                           
  5247                           ; BSR set to: 0
  5248  003254  0E19               	movlw	25
  5249  003256  ECD2  F01F         	call	_MiApp_SetChannel
  5250  00325A  0900               	iorlw	0
  5251  00325C  E103               	bnz	l11526
  5252  00325E  0E19               	movlw	25
  5253  003260  EC16  F021         	call	_DemoOutput_ChannelError
  5254  003264                     l11526:
  5255                           
  5256                           ;task.c: 182: }
  5257                           ;task.c: 193: MiApp_ConnectionMode(0x00);
  5258  003264  0E00               	movlw	0
  5259  003266  EC71  F01F         	call	_MiApp_ConnectionMode
  5260  00326A  0E00               	movlw	0
  5261  00326C  0100               	movlb	0	; () banked
  5262  00326E  6FAA               	movwf	DemoOutput_Channel@Step& (0+255),b
  5263  003270  0E19               	movlw	25
  5264  003272  EC85  F01E         	call	_DemoOutput_Channel
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;task.c: 208: i = MiApp_EstablishConnection(0xFF, 0x00);
  5268  003276  6BCE               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  5269  003278  ECA7  F011         	call	_MiApp_EstablishConnection
  5270  00327C  6FE1               	movwf	_i& (0+255),b
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;task.c: 213: if( i != 0xFF )
  5274  00327E  29E1               	incf	_i& (0+255),w,b
  5275  003280  E007               	bz	l11538
  5276                           
  5277                           ; BSR set to: 0
  5278  003282  0E01               	movlw	1
  5279  003284  6FAA               	movwf	DemoOutput_Channel@Step& (0+255),b
  5280  003286  0E19               	movlw	25
  5281  003288  EC85  F01E         	call	_DemoOutput_Channel
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;task.c: 216: role = 0;
  5285  00328C  6BE7               	clrf	_role& (0+255),b
  5286                           
  5287                           ;task.c: 217: }
  5288  00328E  D00B               	goto	l11542
  5289  003290                     l11538:
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;task.c: 218: else
  5293                           ;task.c: 219: {
  5294                           ;task.c: 250: MiApp_StartConnection(0x00, 10, 0);
  5295  003290  0E0A               	movlw	10
  5296  003292  6F80               	movwf	MiApp_StartConnection@ScanDuration& (0+255),b
  5297  003294  0E00               	movlw	0
  5298  003296  6B81               	clrf	MiApp_StartConnection@ChannelMap& (0+255),b
  5299  003298  6B82               	clrf	(MiApp_StartConnection@ChannelMap+1)& (0+255),b
  5300  00329A  6B83               	clrf	(MiApp_StartConnection@ChannelMap+2)& (0+255),b
  5301  00329C  6B84               	clrf	(MiApp_StartConnection@ChannelMap+3)& (0+255),b
  5302  00329E  ECE2  F01E         	call	_MiApp_StartConnection
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;task.c: 251: role = 1;
  5306  0032A2  0E01               	movlw	1
  5307  0032A4  6FE7               	movwf	_role& (0+255),b
  5308  0032A6                     l11542:
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;task.c: 252: }
  5312                           ;task.c: 254: EEPROM_Write((uint8_t *)&role, 0xB8, 1);
  5313  0032A6  0EE7               	movlw	low _role
  5314  0032A8  6F77               	movwf	EEPROM_Write@dest& (0+255),b
  5315  0032AA  6B78               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  5316  0032AC  0EB8               	movlw	184
  5317  0032AE  6F79               	movwf	EEPROM_Write@addr& (0+255),b
  5318  0032B0  0E01               	movlw	1
  5319  0032B2  6F7A               	movwf	EEPROM_Write@count& (0+255),b
  5320  0032B4  EC37  F01A         	call	_EEPROM_Write	;wreg free
  5321                           
  5322                           ;task.c: 271: LATAbits.LATA6 = 1;
  5323  0032B8  8C89               	bsf	3977,6,c	;volatile
  5324                           
  5325                           ;task.c: 275: STAR_DEMO_OPTIONS_MESSAGE (role);
  5326  0032BA  0100               	movlb	0	; () banked
  5327  0032BC                     L9:
  5328  0032BC  51E7               	movf	_role& (0+255),w,b
  5329  0032BE  EF5F  F020         	goto	_STAR_DEMO_OPTIONS_MESSAGE
  5330  0032C2                     __end_of_Initialize_Demo:
  5331                           	opt stack 0
  5332                           tblptru	equ	0xFF8
  5333                           tblptrh	equ	0xFF7
  5334                           tblptrl	equ	0xFF6
  5335                           tablat	equ	0xFF5
  5336                           prodh	equ	0xFF4
  5337                           prodl	equ	0xFF3
  5338                           intcon	equ	0xFF2
  5339                           intcon2	equ	0xFF1
  5340                           intcon3	equ	0xFF0
  5341                           postinc0	equ	0xFEE
  5342                           wreg	equ	0xFE8
  5343                           indf1	equ	0xFE7
  5344                           fsr1h	equ	0xFE2
  5345                           fsr1l	equ	0xFE1
  5346                           indf2	equ	0xFDF
  5347                           fsr2h	equ	0xFDA
  5348                           fsr2l	equ	0xFD9
  5349                           status	equ	0xFD8
  5350                           
  5351 ;; *************** function _STAR_DEMO_OPTIONS_MESSAGE *****************
  5352 ;; Defined at:
  5353 ;;		line 212 in file "../src/demo_ouput.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  NetworkRole     1    wreg     unsigned char 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;  NetworkRole     1   74[BANK0 ] unsigned char 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;		None               void
  5360 ;; Registers used:
  5361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : F/0
  5364 ;;		On exit  : F/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5370 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5371 ;;Total ram usage:        1 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:   12
  5374 ;; This function calls:
  5375 ;;		_LCDDisplay
  5376 ;; This function is called by:
  5377 ;;		_Initialize_Demo
  5378 ;;		_Process_RxMessage
  5379 ;;		_run_star_demo
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           	psect	text17
  5384  0040BE                     __ptext17:
  5385                           	opt stack 0
  5386  0040BE                     _STAR_DEMO_OPTIONS_MESSAGE:
  5387                           	opt stack 16
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;incstack = 0
  5391                           ;STAR_DEMO_OPTIONS_MESSAGE@NetworkRole stored from wreg
  5392  0040BE  6FAA               	movwf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),b
  5393                           
  5394                           ;demo_ouput.c: 214: if (NetworkRole)
  5395  0040C0  0100               	movlb	0	; () banked
  5396  0040C2  51AA               	movf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),w,b
  5397  0040C4  E004               	bz	l10674
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;demo_ouput.c: 215: {
  5401                           ;demo_ouput.c: 219: LCDDisplay((char *)"PC :SW1 or SW2  to BroadCast", 0, 0);
  5402  0040C6  0E51               	movlw	low STR_25
  5403  0040C8  6FA5               	movwf	LCDDisplay@text& (0+255),b
  5404  0040CA  0EFE               	movlw	high STR_25
  5405  0040CC  D003               	goto	L10
  5406  0040CE                     l10674:
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;demo_ouput.c: 222: else
  5410                           ;demo_ouput.c: 223: {
  5411                           ;demo_ouput.c: 227: LCDDisplay((char *)"SW1 : Unicast   SW2 : Next Node", 0, 0);
  5412  0040CE  0EF5               	movlw	low STR_26
  5413  0040D0  6FA5               	movwf	LCDDisplay@text& (0+255),b
  5414  0040D2  0EFD               	movlw	high STR_26
  5415  0040D4                     L10:
  5416  0040D4  6FA6               	movwf	(LCDDisplay@text+1)& (0+255),b
  5417  0040D6  6BA7               	clrf	LCDDisplay@value& (0+255),b
  5418  0040D8  6BA8               	clrf	LCDDisplay@delay& (0+255),b
  5419  0040DA  EFA4  F01E         	goto	_LCDDisplay	;wreg free
  5420  0040DE                     __end_of_STAR_DEMO_OPTIONS_MESSAGE:
  5421                           	opt stack 0
  5422                           tblptru	equ	0xFF8
  5423                           tblptrh	equ	0xFF7
  5424                           tblptrl	equ	0xFF6
  5425                           tablat	equ	0xFF5
  5426                           prodh	equ	0xFF4
  5427                           prodl	equ	0xFF3
  5428                           intcon	equ	0xFF2
  5429                           intcon2	equ	0xFF1
  5430                           intcon3	equ	0xFF0
  5431                           postinc0	equ	0xFEE
  5432                           wreg	equ	0xFE8
  5433                           indf1	equ	0xFE7
  5434                           fsr1h	equ	0xFE2
  5435                           fsr1l	equ	0xFE1
  5436                           indf2	equ	0xFDF
  5437                           fsr2h	equ	0xFDA
  5438                           fsr2l	equ	0xFD9
  5439                           status	equ	0xFD8
  5440                           
  5441 ;; *************** function _Read_MAC_Address *****************
  5442 ;; Defined at:
  5443 ;;		line 84 in file "../src/system_config/miwikit_pic18f46j50_89xa/eeprom.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  myAddress       2   27[BANK0 ] PTR unsigned char 
  5446 ;;		 -> myLongAddress(8), 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  i               1   31[BANK0 ] unsigned char 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;		None               void
  5451 ;; Registers used:
  5452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : F/0
  5455 ;;		On exit  : F/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5458 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5461 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5462 ;;Total ram usage:        5 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:   11
  5465 ;; This function calls:
  5466 ;;		_EEPROM_Read
  5467 ;; This function is called by:
  5468 ;;		_Initialize_Demo
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           	psect	text18
  5473  0034F6                     __ptext18:
  5474                           	opt stack 0
  5475  0034F6                     _Read_MAC_Address:
  5476                           	opt stack 18
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;eeprom.c: 89: {
  5480                           ;eeprom.c: 90: for(i = 0; i < 3; i++)
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;incstack = 0
  5484  0034F6  6B7F               	clrf	Read_MAC_Address@i& (0+255),b
  5485  0034F8                     l11054:
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;eeprom.c: 91: {
  5489                           ;eeprom.c: 92: EEPROM_Read(&(myAddress[8-1-i]), 0xFA+i, 1);
  5490  0034F8  517F               	movf	Read_MAC_Address@i& (0+255),w,b
  5491  0034FA  5D7B               	subwf	Read_MAC_Address@myAddress& (0+255),w,b
  5492  0034FC  6F7D               	movwf	??_Read_MAC_Address& (0+255),b
  5493  0034FE  0E00               	movlw	0
  5494  003500  597C               	subwfb	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  5495  003502  6F7E               	movwf	(??_Read_MAC_Address+1)& (0+255),b
  5496  003504  0E07               	movlw	7
  5497  003506  257D               	addwf	??_Read_MAC_Address& (0+255),w,b
  5498  003508  6F77               	movwf	EEPROM_Read@dest& (0+255),b
  5499  00350A  0E00               	movlw	0
  5500  00350C  217E               	addwfc	(??_Read_MAC_Address+1)& (0+255),w,b
  5501  00350E  6F78               	movwf	(EEPROM_Read@dest+1)& (0+255),b
  5502  003510  517F               	movf	Read_MAC_Address@i& (0+255),w,b
  5503  003512  0FFA               	addlw	250
  5504  003514  6F79               	movwf	EEPROM_Read@addr& (0+255),b
  5505  003516  0E01               	movlw	1
  5506  003518  6F7A               	movwf	EEPROM_Read@count& (0+255),b
  5507  00351A  EC8B  F01F         	call	_EEPROM_Read	;wreg free
  5508                           
  5509                           ; BSR set to: 0
  5510  00351E  2B7F               	incf	Read_MAC_Address@i& (0+255),f,b
  5511                           
  5512                           ; BSR set to: 0
  5513  003520  0E02               	movlw	2
  5514  003522  657F               	cpfsgt	Read_MAC_Address@i& (0+255),b
  5515  003524  D7E9               	goto	l11054
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;eeprom.c: 96: {
  5519                           ;eeprom.c: 97: myAddress[4] = 0xFF;
  5520  003526  EE20 F004          	lfsr	2,4
  5521  00352A  517B               	movf	Read_MAC_Address@myAddress& (0+255),w,b
  5522  00352C  26D9               	addwf	fsr2l,f,c
  5523  00352E  517C               	movf	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  5524  003530  22DA               	addwfc	fsr2h,f,c
  5525  003532  68DF               	setf	indf2,c
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;eeprom.c: 99: }
  5529                           ;eeprom.c: 100: myAddress[3] = 0xFE;
  5530  003534  EE20 F003          	lfsr	2,3
  5531  003538  517B               	movf	Read_MAC_Address@myAddress& (0+255),w,b
  5532  00353A  26D9               	addwf	fsr2l,f,c
  5533  00353C  517C               	movf	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  5534  00353E  22DA               	addwfc	fsr2h,f,c
  5535  003540  0EFE               	movlw	254
  5536  003542  6EDF               	movwf	indf2,c
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;eeprom.c: 102: for(i = 0; i < 3; i++)
  5540  003544  6B7F               	clrf	Read_MAC_Address@i& (0+255),b
  5541  003546                     l11068:
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;eeprom.c: 103: {
  5545                           ;eeprom.c: 104: EEPROM_Read(&(myAddress[2-i]), 0xFA+3+i, 1);
  5546  003546  517F               	movf	Read_MAC_Address@i& (0+255),w,b
  5547  003548  5D7B               	subwf	Read_MAC_Address@myAddress& (0+255),w,b
  5548  00354A  6F7D               	movwf	??_Read_MAC_Address& (0+255),b
  5549  00354C  0E00               	movlw	0
  5550  00354E  597C               	subwfb	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  5551  003550  6F7E               	movwf	(??_Read_MAC_Address+1)& (0+255),b
  5552  003552  0E02               	movlw	2
  5553  003554  257D               	addwf	??_Read_MAC_Address& (0+255),w,b
  5554  003556  6F77               	movwf	EEPROM_Read@dest& (0+255),b
  5555  003558  0E00               	movlw	0
  5556  00355A  217E               	addwfc	(??_Read_MAC_Address+1)& (0+255),w,b
  5557  00355C  6F78               	movwf	(EEPROM_Read@dest+1)& (0+255),b
  5558  00355E  517F               	movf	Read_MAC_Address@i& (0+255),w,b
  5559  003560  0FFD               	addlw	253
  5560  003562  6F79               	movwf	EEPROM_Read@addr& (0+255),b
  5561  003564  0E01               	movlw	1
  5562  003566  6F7A               	movwf	EEPROM_Read@count& (0+255),b
  5563  003568  EC8B  F01F         	call	_EEPROM_Read	;wreg free
  5564                           
  5565                           ; BSR set to: 0
  5566  00356C  2B7F               	incf	Read_MAC_Address@i& (0+255),f,b
  5567                           
  5568                           ; BSR set to: 0
  5569  00356E  0E02               	movlw	2
  5570  003570  657F               	cpfsgt	Read_MAC_Address@i& (0+255),b
  5571  003572  D7E9               	goto	l11068
  5572  003574  0C02               	retlw	2
  5573  003576                     __end_of_Read_MAC_Address:
  5574                           	opt stack 0
  5575                           tblptru	equ	0xFF8
  5576                           tblptrh	equ	0xFF7
  5577                           tblptrl	equ	0xFF6
  5578                           tablat	equ	0xFF5
  5579                           prodh	equ	0xFF4
  5580                           prodl	equ	0xFF3
  5581                           intcon	equ	0xFF2
  5582                           intcon2	equ	0xFF1
  5583                           intcon3	equ	0xFF0
  5584                           postinc0	equ	0xFEE
  5585                           wreg	equ	0xFE8
  5586                           indf1	equ	0xFE7
  5587                           fsr1h	equ	0xFE2
  5588                           fsr1l	equ	0xFE1
  5589                           indf2	equ	0xFDF
  5590                           fsr2h	equ	0xFDA
  5591                           fsr2l	equ	0xFD9
  5592                           status	equ	0xFD8
  5593                           
  5594 ;; *************** function _MiApp_StartConnection *****************
  5595 ;; Defined at:
  5596 ;;		line 2142 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  Mode            1    wreg     unsigned char 
  5599 ;;  ScanDuration    1   32[BANK0 ] unsigned char 
  5600 ;;  ChannelMap      4   33[BANK0 ] unsigned long 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;  Mode            1   37[BANK0 ] unsigned char 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  1    wreg      unsigned char 
  5605 ;; Registers used:
  5606 ;;		wreg, status,2, status,0, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : F/0
  5609 ;;		On exit  : F/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5612 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5613 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5615 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5616 ;;Total ram usage:        6 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    9
  5619 ;; This function calls:
  5620 ;;		_MiWi_TickGet
  5621 ;; This function is called by:
  5622 ;;		_Initialize_Demo
  5623 ;; This function uses a non-reentrant model
  5624 ;;
  5625                           
  5626                           	psect	text19
  5627  003DC4                     __ptext19:
  5628                           	opt stack 0
  5629  003DC4                     _MiApp_StartConnection:
  5630                           	opt stack 20
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;incstack = 0
  5634                           ;MiApp_StartConnection@Mode stored from wreg
  5635  003DC4  6F85               	movwf	MiApp_StartConnection@Mode& (0+255),b
  5636                           
  5637                           ;miwi_p2p.c: 2144: switch(Mode)
  5638  003DC6  D015               	goto	l11038
  5639  003DC8                     l11032:
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;miwi_p2p.c: 2162: tick1 = MiWi_TickGet();
  5643  003DC8  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  5644  003DCC  C076  F18B         	movff	?_MiWi_TickGet,_tick1
  5645  003DD0  C077  F18C         	movff	?_MiWi_TickGet+1,_tick1+1
  5646  003DD4  C078  F18D         	movff	?_MiWi_TickGet+2,_tick1+2
  5647  003DD8  C079  F18E         	movff	?_MiWi_TickGet+3,_tick1+3
  5648                           
  5649                           ;miwi_p2p.c: 2163: tick4 = MiWi_TickGet();
  5650  003DDC  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  5651  003DE0  C076  F18F         	movff	?_MiWi_TickGet,_tick4
  5652  003DE4  C077  F190         	movff	?_MiWi_TickGet+1,_tick4+1
  5653  003DE8  C078  F191         	movff	?_MiWi_TickGet+2,_tick4+2
  5654  003DEC  C079  F192         	movff	?_MiWi_TickGet+3,_tick4+3
  5655  003DF0  0012               	return	
  5656  003DF2                     l11038:
  5657  003DF2  0100               	movlb	0	; () banked
  5658  003DF4  5185               	movf	MiApp_StartConnection@Mode& (0+255),w,b
  5659                           
  5660                           ; Switch size 1, requested type "speed"
  5661                           ; Number of cases is 3, Range of values is 0 to 2
  5662                           ; switch strategies available:
  5663                           ; Name         Instructions Cycles
  5664                           ; simple_byte           10     6 (average)
  5665                           ;	Chosen strategy is simple_byte
  5666  003DF6  E0E8               	bz	l11032
  5667  003DF8  0A01               	xorlw	1	; case 1
  5668  003DFA  A4D8               	btfss	status,2,c
  5669  003DFC  0A03               	xorlw	3	; case 2
  5670  003DFE  0012               	return	
  5671  003E00                     __end_of_MiApp_StartConnection:
  5672                           	opt stack 0
  5673                           tblptru	equ	0xFF8
  5674                           tblptrh	equ	0xFF7
  5675                           tblptrl	equ	0xFF6
  5676                           tablat	equ	0xFF5
  5677                           prodh	equ	0xFF4
  5678                           prodl	equ	0xFF3
  5679                           intcon	equ	0xFF2
  5680                           intcon2	equ	0xFF1
  5681                           intcon3	equ	0xFF0
  5682                           postinc0	equ	0xFEE
  5683                           wreg	equ	0xFE8
  5684                           indf1	equ	0xFE7
  5685                           fsr1h	equ	0xFE2
  5686                           fsr1l	equ	0xFE1
  5687                           indf2	equ	0xFDF
  5688                           fsr2h	equ	0xFDA
  5689                           fsr2l	equ	0xFD9
  5690                           status	equ	0xFD8
  5691                           
  5692 ;; *************** function _MiApp_ProtocolInit *****************
  5693 ;; Defined at:
  5694 ;;		line 1130 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;  bNetworkFree    1    wreg     unsigned char 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  bNetworkFree    1   40[BANK0 ] unsigned char 
  5699 ;;  initValue       3   41[BANK0 ] struct .
  5700 ;;  i               1   44[BANK0 ] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      unsigned char 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : F/0
  5707 ;;		On exit  : F/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5711 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5713 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5714 ;;Total ram usage:        5 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:   13
  5717 ;; This function calls:
  5718 ;;		_EEPROM_Read
  5719 ;;		_EEPROM_Write
  5720 ;;		_MiApp_SetChannel
  5721 ;;		_MiMAC_Init
  5722 ;;		_NVMInit
  5723 ;; This function is called by:
  5724 ;;		_Initialize_Demo
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text20
  5729  00204E                     __ptext20:
  5730                           	opt stack 0
  5731  00204E                     _MiApp_ProtocolInit:
  5732                           	opt stack 16
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;incstack = 0
  5736                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  5737  00204E  6F88               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
  5738                           
  5739                           ;miwi_p2p.c: 1132: uint8_t i;
  5740                           ;miwi_p2p.c: 1134: MACINIT_PARAM initValue;
  5741                           ;miwi_p2p.c: 1137: NVMInit();
  5742  002050  EC41  F017         	call	_NVMInit	;wreg free
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;miwi_p2p.c: 1141: P2PStatus.Val = 0;
  5746  002054  6BDC               	clrf	_P2PStatus& (0+255),b	;volatile
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;miwi_p2p.c: 1142: if (!bNetworkFreezer)
  5750  002056  5188               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5751  002058  E137               	bnz	l562
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;miwi_p2p.c: 1143: {
  5755                           ;miwi_p2p.c: 1144: for(i = 0; i < 10; i++)
  5756  00205A  6B8C               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5757  00205C                     l10966:
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;miwi_p2p.c: 1145: {
  5761                           ;miwi_p2p.c: 1146: ConnectionTable[i].status.Val = 0;
  5762  00205C  518C               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5763  00205E  0D0E               	mullw	14
  5764  002060  0E2A               	movlw	low (_ConnectionTable+12)
  5765  002062  24F3               	addwf	prodl,w,c
  5766  002064  6ED9               	movwf	fsr2l,c
  5767  002066  0E02               	movlw	high (_ConnectionTable+12)
  5768  002068  20F4               	addwfc	prodh,w,c
  5769  00206A  6EDA               	movwf	fsr2h,c
  5770  00206C  6ADF               	clrf	indf2,c
  5771                           
  5772                           ;miwi_p2p.c: 1147: ConnectionTable[i].Address[0] = 0x00;
  5773  00206E  518C               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5774  002070  0D0E               	mullw	14
  5775  002072  0E22               	movlw	low (_ConnectionTable+4)
  5776  002074  24F3               	addwf	prodl,w,c
  5777  002076  6ED9               	movwf	fsr2l,c
  5778  002078  0E02               	movlw	high (_ConnectionTable+4)
  5779  00207A  20F4               	addwfc	prodh,w,c
  5780  00207C  6EDA               	movwf	fsr2h,c
  5781  00207E  6ADF               	clrf	indf2,c
  5782                           
  5783                           ;miwi_p2p.c: 1148: ConnectionTable[i].Address[1] = 0x00;
  5784  002080  518C               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5785  002082  0D0E               	mullw	14
  5786  002084  0E23               	movlw	low (_ConnectionTable+5)
  5787  002086  24F3               	addwf	prodl,w,c
  5788  002088  6ED9               	movwf	fsr2l,c
  5789  00208A  0E02               	movlw	high (_ConnectionTable+5)
  5790  00208C  20F4               	addwfc	prodh,w,c
  5791  00208E  6EDA               	movwf	fsr2h,c
  5792  002090  6ADF               	clrf	indf2,c
  5793                           
  5794                           ;miwi_p2p.c: 1149: ConnectionTable[i].Address[2] = 0x00;
  5795  002092  518C               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5796  002094  0D0E               	mullw	14
  5797  002096  0E24               	movlw	low (_ConnectionTable+6)
  5798  002098  24F3               	addwf	prodl,w,c
  5799  00209A  6ED9               	movwf	fsr2l,c
  5800  00209C  0E02               	movlw	high (_ConnectionTable+6)
  5801  00209E  20F4               	addwfc	prodh,w,c
  5802  0020A0  6EDA               	movwf	fsr2h,c
  5803  0020A2  6ADF               	clrf	indf2,c
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;miwi_p2p.c: 1151: link_stat[i] = 0x00;
  5807  0020A4  0E5F               	movlw	low _link_stat
  5808  0020A6  258C               	addwf	MiApp_ProtocolInit@i& (0+255),w,b
  5809  0020A8  6ED9               	movwf	fsr2l,c
  5810  0020AA  6ADA               	clrf	fsr2h,c
  5811  0020AC  0E01               	movlw	high _link_stat
  5812  0020AE  22DA               	addwfc	fsr2h,f,c
  5813  0020B0  6ADF               	clrf	indf2,c
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;miwi_p2p.c: 1152: permanent_connections[i] = 0x00;
  5817  0020B2  0E69               	movlw	low _permanent_connections
  5818  0020B4  258C               	addwf	MiApp_ProtocolInit@i& (0+255),w,b
  5819  0020B6  6ED9               	movwf	fsr2l,c
  5820  0020B8  6ADA               	clrf	fsr2h,c
  5821  0020BA  0E01               	movlw	high _permanent_connections
  5822  0020BC  22DA               	addwfc	fsr2h,f,c
  5823  0020BE  6ADF               	clrf	indf2,c
  5824                           
  5825                           ; BSR set to: 0
  5826  0020C0  2B8C               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5827                           
  5828                           ; BSR set to: 0
  5829  0020C2  0E09               	movlw	9
  5830  0020C4  658C               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5831  0020C6  D7CA               	goto	l10966
  5832  0020C8                     l562:
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;miwi_p2p.c: 1154: }
  5836                           ;miwi_p2p.c: 1155: }
  5837                           ;miwi_p2p.c: 1157: TxData = 0;
  5838  0020C8  6BDF               	clrf	_TxData& (0+255),b
  5839                           
  5840                           ;miwi_p2p.c: 1160: for(i = 0; i < 2; i++)
  5841  0020CA  6B8C               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5842  0020CC                     l10980:
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;miwi_p2p.c: 1161: {
  5846                           ;miwi_p2p.c: 1162: indirectMessages[i].flags.Val = 0;
  5847  0020CC  518C               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5848  0020CE  0D33               	mullw	51
  5849  0020D0  0E80               	movlw	low (_indirectMessages+14)
  5850  0020D2  24F3               	addwf	prodl,w,c
  5851  0020D4  6ED9               	movwf	fsr2l,c
  5852  0020D6  0E03               	movlw	high (_indirectMessages+14)
  5853  0020D8  20F4               	addwfc	prodh,w,c
  5854  0020DA  6EDA               	movwf	fsr2h,c
  5855  0020DC  6ADF               	clrf	indf2,c
  5856                           
  5857                           ; BSR set to: 0
  5858  0020DE  2B8C               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5859                           
  5860                           ; BSR set to: 0
  5861  0020E0  0E01               	movlw	1
  5862  0020E2  658C               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5863  0020E4  D7F3               	goto	l10980
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;miwi_p2p.c: 1163: }
  5867                           ;miwi_p2p.c: 1166: for (i=0;i<10;i++)
  5868  0020E6  6B8C               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5869  0020E8                     l10990:
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;miwi_p2p.c: 1167: {
  5873  0020E8  2B8C               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5874                           
  5875                           ; BSR set to: 0
  5876  0020EA  0E09               	movlw	9
  5877  0020EC  658C               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5878  0020EE  D7FC               	goto	l10990
  5879                           
  5880                           ; BSR set to: 0
  5881                           ;miwi_p2p.c: 1170: }
  5882                           ;miwi_p2p.c: 1180: if( bNetworkFreezer )
  5883  0020F0  5188               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5884  0020F2  E03C               	bz	l11004
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;miwi_p2p.c: 1181: {
  5888                           ;miwi_p2p.c: 1182: EEPROM_Read( (uint8_t *)&currentChannel, 0x02, 1);
  5889  0020F4  0EE5               	movlw	low _currentChannel
  5890  0020F6  6F77               	movwf	EEPROM_Read@dest& (0+255),b
  5891  0020F8  6B78               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  5892  0020FA  0E02               	movlw	2
  5893  0020FC  6F79               	movwf	EEPROM_Read@addr& (0+255),b
  5894  0020FE  0E01               	movlw	1
  5895  002100  6F7A               	movwf	EEPROM_Read@count& (0+255),b
  5896  002102  EC8B  F01F         	call	_EEPROM_Read	;wreg free
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;miwi_p2p.c: 1183: if( currentChannel >= 32 )
  5900  002106  0E1F               	movlw	31
  5901  002108  65E5               	cpfsgt	_currentChannel& (0+255),b
  5902  00210A  D001               	goto	l11002
  5903  00210C  0C1F               	retlw	31
  5904  00210E                     l11002:
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;miwi_p2p.c: 1186: }
  5908                           ;miwi_p2p.c: 1191: EEPROM_Read( (uint8_t *)&ConnMode,0x03, 1);
  5909  00210E  0EE9               	movlw	low _ConnMode
  5910  002110  6F77               	movwf	EEPROM_Read@dest& (0+255),b
  5911  002112  6B78               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  5912  002114  0E03               	movlw	3
  5913  002116  6F79               	movwf	EEPROM_Read@addr& (0+255),b
  5914  002118  0E01               	movlw	1
  5915  00211A  6F7A               	movwf	EEPROM_Read@count& (0+255),b
  5916  00211C  EC8B  F01F         	call	_EEPROM_Read	;wreg free
  5917                           
  5918                           ;miwi_p2p.c: 1192: EEPROM_Read( (uint8_t *)ConnectionTable, 0x04, (uint16_t)10 * sizeof(
      +                          CONNECTION_ENTRY));
  5919  002120  0E1E               	movlw	low _ConnectionTable
  5920  002122  6F77               	movwf	EEPROM_Read@dest& (0+255),b
  5921  002124  0E02               	movlw	high _ConnectionTable
  5922  002126  6F78               	movwf	(EEPROM_Read@dest+1)& (0+255),b
  5923  002128  0E04               	movlw	4
  5924  00212A  6F79               	movwf	EEPROM_Read@addr& (0+255),b
  5925  00212C  0E8C               	movlw	140
  5926  00212E  6F7A               	movwf	EEPROM_Read@count& (0+255),b
  5927  002130  EC8B  F01F         	call	_EEPROM_Read	;wreg free
  5928                           
  5929                           ;miwi_p2p.c: 1195: EEPROM_Read( (uint8_t *)&role, 0xB8, 1);
  5930  002134  0EE7               	movlw	low _role
  5931  002136  6F77               	movwf	EEPROM_Read@dest& (0+255),b
  5932  002138  6B78               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  5933  00213A  0EB8               	movlw	184
  5934  00213C  6F79               	movwf	EEPROM_Read@addr& (0+255),b
  5935  00213E  0E01               	movlw	1
  5936  002140  6F7A               	movwf	EEPROM_Read@count& (0+255),b
  5937  002142  EC8B  F01F         	call	_EEPROM_Read	;wreg free
  5938                           
  5939                           ;miwi_p2p.c: 1196: EEPROM_Read( (uint8_t *)&myConnectionIndex_in_PanCo, 0xBB, 1);
  5940  002146  0EE6               	movlw	low _myConnectionIndex_in_PanCo
  5941  002148  6F77               	movwf	EEPROM_Read@dest& (0+255),b
  5942  00214A  6B78               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  5943  00214C  0EBB               	movlw	187
  5944  00214E  6F79               	movwf	EEPROM_Read@addr& (0+255),b
  5945  002150  0E01               	movlw	1
  5946  002152  6F7A               	movwf	EEPROM_Read@count& (0+255),b
  5947  002154  EC8B  F01F         	call	_EEPROM_Read	;wreg free
  5948                           
  5949                           ;miwi_p2p.c: 1198: EEPROM_Read( (uint8_t *)&conn_size, 0xBA, 1);
  5950  002158  0EE4               	movlw	low _conn_size
  5951  00215A  6F77               	movwf	EEPROM_Read@dest& (0+255),b
  5952  00215C  6B78               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  5953  00215E  0EBA               	movlw	186
  5954  002160  6F79               	movwf	EEPROM_Read@addr& (0+255),b
  5955  002162  0E01               	movlw	1
  5956  002164  6F7A               	movwf	EEPROM_Read@count& (0+255),b
  5957  002166  EC8B  F01F         	call	_EEPROM_Read	;wreg free
  5958                           
  5959                           ;miwi_p2p.c: 1210: }
  5960  00216A  D01E               	goto	l11006
  5961  00216C                     l11004:
  5962                           
  5963                           ; BSR set to: 0
  5964                           ;miwi_p2p.c: 1211: else
  5965                           ;miwi_p2p.c: 1212: {
  5966                           ;miwi_p2p.c: 1217: EEPROM_Write((uint8_t *)&currentChannel, 0x02, 1);
  5967  00216C  0EE5               	movlw	low _currentChannel
  5968  00216E  6F77               	movwf	EEPROM_Write@dest& (0+255),b
  5969  002170  6B78               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  5970  002172  0E02               	movlw	2
  5971  002174  6F79               	movwf	EEPROM_Write@addr& (0+255),b
  5972  002176  0E01               	movlw	1
  5973  002178  6F7A               	movwf	EEPROM_Write@count& (0+255),b
  5974  00217A  EC37  F01A         	call	_EEPROM_Write	;wreg free
  5975                           
  5976                           ;miwi_p2p.c: 1218: EEPROM_Write((uint8_t *)&ConnMode, 0x03, 1);
  5977  00217E  0EE9               	movlw	low _ConnMode
  5978  002180  0100               	movlb	0	; () banked
  5979  002182  6F77               	movwf	EEPROM_Write@dest& (0+255),b
  5980  002184  6B78               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  5981  002186  0E03               	movlw	3
  5982  002188  6F79               	movwf	EEPROM_Write@addr& (0+255),b
  5983  00218A  0E01               	movlw	1
  5984  00218C  6F7A               	movwf	EEPROM_Write@count& (0+255),b
  5985  00218E  EC37  F01A         	call	_EEPROM_Write	;wreg free
  5986                           
  5987                           ;miwi_p2p.c: 1219: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)10 * sizeof(C
      +                          ONNECTION_ENTRY));
  5988  002192  0E1E               	movlw	low _ConnectionTable
  5989  002194  0100               	movlb	0	; () banked
  5990  002196  6F77               	movwf	EEPROM_Write@dest& (0+255),b
  5991  002198  0E02               	movlw	high _ConnectionTable
  5992  00219A  6F78               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  5993  00219C  0E04               	movlw	4
  5994  00219E  6F79               	movwf	EEPROM_Write@addr& (0+255),b
  5995  0021A0  0E8C               	movlw	140
  5996  0021A2  6F7A               	movwf	EEPROM_Write@count& (0+255),b
  5997  0021A4  EC37  F01A         	call	_EEPROM_Write	;wreg free
  5998  0021A8                     l11006:
  5999                           
  6000                           ;miwi_p2p.c: 1221: }
  6001                           ;miwi_p2p.c: 1228: initValue.PAddress = myLongAddress;
  6002  0021A8  0ED9               	movlw	low _myLongAddress
  6003  0021AA  0100               	movlb	0	; () banked
  6004  0021AC  6F8A               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
  6005  0021AE  0E01               	movlw	high _myLongAddress
  6006  0021B0  6F8B               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;miwi_p2p.c: 1229: initValue.actionFlags.bits.CCAEnable = 1;
  6010  0021B2  8389               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;miwi_p2p.c: 1230: initValue.actionFlags.bits.PAddrLength = 8;
  6014  0021B4  5189               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
  6015  0021B6  0B87               	andlw	-121
  6016  0021B8  0940               	iorlw	64
  6017  0021BA  6F89               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;miwi_p2p.c: 1231: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
  6021  0021BC  B188               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
  6022  0021BE  D002               	bra	u11475
  6023  0021C0  9589               	bcf	MiApp_ProtocolInit@initValue& (0+255),2,b
  6024  0021C2  D002               	bra	u11476
  6025  0021C4                     u11475:
  6026  0021C4  0100               	movlb	0	; () banked
  6027  0021C6  8589               	bsf	MiApp_ProtocolInit@initValue& (0+255),2,b
  6028  0021C8                     u11476:
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;miwi_p2p.c: 1232: initValue.actionFlags.bits.RepeaterMode = 0;
  6032  0021C8  9189               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;miwi_p2p.c: 1234: MiMAC_Init(initValue);
  6036  0021CA  C089  F084         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
  6037  0021CE  C08A  F085         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
  6038  0021D2  C08B  F086         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
  6039  0021D6  EC7E  F018         	call	_MiMAC_Init	;wreg free
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;miwi_p2p.c: 1243: MiApp_SetChannel(currentChannel);
  6043  0021DA  51E5               	movf	_currentChannel& (0+255),w,b
  6044  0021DC  ECD2  F01F         	call	_MiApp_SetChannel
  6045                           
  6046                           ;miwi_p2p.c: 1254: P2PCapacityInfo = 0;
  6047  0021E0  0100               	movlb	0	; () banked
  6048  0021E2  6BDB               	clrf	_P2PCapacityInfo& (0+255),b
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;miwi_p2p.c: 1256: P2PCapacityInfo |= 0x01;
  6052  0021E4  81DB               	bsf	_P2PCapacityInfo& (0+255),0,b
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;miwi_p2p.c: 1261: P2PCapacityInfo |= (ConnMode << 4);
  6056  0021E6  39E9               	swapf	_ConnMode& (0+255),w,b
  6057  0021E8  0BF0               	andlw	240
  6058  0021EA  13DB               	iorwf	_P2PCapacityInfo& (0+255),f,b
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;miwi_p2p.c: 1263: INTCON3bits.INT1IE = 1;
  6062  0021EC  86F0               	bsf	intcon3,3,c	;volatile
  6063                           
  6064                           ; BSR set to: 0
  6065  0021EE  0012               	return		;funcret
  6066  0021F0                     __end_of_MiApp_ProtocolInit:
  6067                           	opt stack 0
  6068                           tblptru	equ	0xFF8
  6069                           tblptrh	equ	0xFF7
  6070                           tblptrl	equ	0xFF6
  6071                           tablat	equ	0xFF5
  6072                           prodh	equ	0xFF4
  6073                           prodl	equ	0xFF3
  6074                           intcon	equ	0xFF2
  6075                           intcon2	equ	0xFF1
  6076                           intcon3	equ	0xFF0
  6077                           postinc0	equ	0xFEE
  6078                           wreg	equ	0xFE8
  6079                           indf1	equ	0xFE7
  6080                           fsr1h	equ	0xFE2
  6081                           fsr1l	equ	0xFE1
  6082                           indf2	equ	0xFDF
  6083                           fsr2h	equ	0xFDA
  6084                           fsr2l	equ	0xFD9
  6085                           status	equ	0xFD8
  6086                           
  6087 ;; *************** function _NVMInit *****************
  6088 ;; Defined at:
  6089 ;;		line 631 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;		None
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  result          1   28[BANK0 ] unsigned char 
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      unsigned char 
  6096 ;; Registers used:
  6097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : F/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6104 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6106 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6107 ;;Total ram usage:        1 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    9
  6110 ;; This function calls:
  6111 ;;		_NVMalloc
  6112 ;; This function is called by:
  6113 ;;		_MiApp_ProtocolInit
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text21
  6118  002E82                     __ptext21:
  6119                           	opt stack 0
  6120  002E82                     _NVMInit:
  6121                           	opt stack 19
  6122                           
  6123                           ;miwi_nvm.c: 633: bool result = 1;
  6124                           
  6125                           ; BSR set to: 0
  6126                           ;incstack = 0
  6127  002E82  0E01               	movlw	1
  6128  002E84  0100               	movlb	0	; () banked
  6129  002E86  6F7C               	movwf	NVMInit@result& (0+255),b
  6130                           
  6131                           ; BSR set to: 0
  6132                           ;miwi_nvm.c: 635: nextEEPosition = 0;
  6133  002E88  6A3C               	clrf	_nextEEPosition,c
  6134  002E8A  6A3D               	clrf	_nextEEPosition+1,c
  6135                           
  6136                           ; BSR set to: 0
  6137                           ;miwi_nvm.c: 637: result &= NVMalloc(2, &nvmMyPANID);
  6138  002E8C  6B77               	clrf	(NVMalloc@size+1)& (0+255),b
  6139  002E8E  0E02               	movlw	2
  6140  002E90  6F76               	movwf	NVMalloc@size& (0+255),b
  6141  002E92  0E52               	movlw	low _nvmMyPANID
  6142  002E94  6F78               	movwf	NVMalloc@location& (0+255),b
  6143  002E96  6B79               	clrf	(NVMalloc@location+1)& (0+255),b
  6144  002E98  ECA4  F01F         	call	_NVMalloc	;wreg free
  6145  002E9C  177C               	andwf	NVMInit@result& (0+255),f,b
  6146                           
  6147                           ; BSR set to: 0
  6148                           ;miwi_nvm.c: 638: result &= NVMalloc(1, &nvmCurrentChannel);
  6149  002E9E  6B77               	clrf	(NVMalloc@size+1)& (0+255),b
  6150  002EA0  0E01               	movlw	1
  6151  002EA2  6F76               	movwf	NVMalloc@size& (0+255),b
  6152  002EA4  0E50               	movlw	low _nvmCurrentChannel
  6153  002EA6  6F78               	movwf	NVMalloc@location& (0+255),b
  6154  002EA8  6B79               	clrf	(NVMalloc@location+1)& (0+255),b
  6155  002EAA  ECA4  F01F         	call	_NVMalloc	;wreg free
  6156  002EAE  177C               	andwf	NVMInit@result& (0+255),f,b
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;miwi_nvm.c: 639: result &= NVMalloc(1, &nvmConnMode);
  6160  002EB0  6B77               	clrf	(NVMalloc@size+1)& (0+255),b
  6161  002EB2  0E01               	movlw	1
  6162  002EB4  6F76               	movwf	NVMalloc@size& (0+255),b
  6163  002EB6  0E4C               	movlw	low _nvmConnMode
  6164  002EB8  6F78               	movwf	NVMalloc@location& (0+255),b
  6165  002EBA  6B79               	clrf	(NVMalloc@location+1)& (0+255),b
  6166  002EBC  ECA4  F01F         	call	_NVMalloc	;wreg free
  6167  002EC0  177C               	andwf	NVMInit@result& (0+255),f,b
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;miwi_nvm.c: 640: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 10, &nvmConnectionTable)
      +                          ;
  6171  002EC2  6B77               	clrf	(NVMalloc@size+1)& (0+255),b
  6172  002EC4  0E8C               	movlw	140
  6173  002EC6  6F76               	movwf	NVMalloc@size& (0+255),b
  6174  002EC8  0E4E               	movlw	low _nvmConnectionTable
  6175  002ECA  6F78               	movwf	NVMalloc@location& (0+255),b
  6176  002ECC  6B79               	clrf	(NVMalloc@location+1)& (0+255),b
  6177  002ECE  ECA4  F01F         	call	_NVMalloc	;wreg free
  6178  002ED2  177C               	andwf	NVMInit@result& (0+255),f,b
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;miwi_nvm.c: 641: result &= NVMalloc(4, &nvmOutFrameCounter);
  6182  002ED4  6B77               	clrf	(NVMalloc@size+1)& (0+255),b
  6183  002ED6  0E04               	movlw	4
  6184  002ED8  6F76               	movwf	NVMalloc@size& (0+255),b
  6185  002EDA  0E54               	movlw	low _nvmOutFrameCounter
  6186  002EDC  6F78               	movwf	NVMalloc@location& (0+255),b
  6187  002EDE  6B79               	clrf	(NVMalloc@location+1)& (0+255),b
  6188  002EE0  ECA4  F01F         	call	_NVMalloc	;wreg free
  6189  002EE4  177C               	andwf	NVMInit@result& (0+255),f,b
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;miwi_nvm.c: 642: result &= NVMalloc(1,&nvmEdc);
  6193  002EE6  6B77               	clrf	(NVMalloc@size+1)& (0+255),b
  6194  002EE8  0E01               	movlw	1
  6195  002EEA  6F76               	movwf	NVMalloc@size& (0+255),b
  6196  002EEC  0EE1               	movlw	low _nvmEdc
  6197  002EEE  6F78               	movwf	NVMalloc@location& (0+255),b
  6198  002EF0  0E01               	movlw	high _nvmEdc
  6199  002EF2  6F79               	movwf	(NVMalloc@location+1)& (0+255),b
  6200  002EF4  ECA4  F01F         	call	_NVMalloc	;wreg free
  6201  002EF8  177C               	andwf	NVMInit@result& (0+255),f,b
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;miwi_nvm.c: 645: result &= NVMalloc(1,&nvmRole);
  6205  002EFA  6B77               	clrf	(NVMalloc@size+1)& (0+255),b
  6206  002EFC  0E01               	movlw	1
  6207  002EFE  6F76               	movwf	NVMalloc@size& (0+255),b
  6208  002F00  0EE3               	movlw	low _nvmRole
  6209  002F02  6F78               	movwf	NVMalloc@location& (0+255),b
  6210  002F04  0E01               	movlw	high _nvmRole
  6211  002F06  6F79               	movwf	(NVMalloc@location+1)& (0+255),b
  6212  002F08  ECA4  F01F         	call	_NVMalloc	;wreg free
  6213  002F0C  177C               	andwf	NVMInit@result& (0+255),f,b
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;miwi_nvm.c: 646: result &= NVMalloc(1,&nvmmyIndex);
  6217  002F0E  6B77               	clrf	(NVMalloc@size+1)& (0+255),b
  6218  002F10  0E01               	movlw	1
  6219  002F12  6F76               	movwf	NVMalloc@size& (0+255),b
  6220  002F14  0EE5               	movlw	low _nvmmyIndex
  6221  002F16  6F78               	movwf	NVMalloc@location& (0+255),b
  6222  002F18  0E01               	movlw	high _nvmmyIndex
  6223  002F1A  6F79               	movwf	(NVMalloc@location+1)& (0+255),b
  6224  002F1C  ECA4  F01F         	call	_NVMalloc	;wreg free
  6225  002F20  177C               	andwf	NVMInit@result& (0+255),f,b
  6226                           
  6227                           ; BSR set to: 0
  6228  002F22  0012               	return		;funcret
  6229  002F24                     __end_of_NVMInit:
  6230                           	opt stack 0
  6231                           tblptru	equ	0xFF8
  6232                           tblptrh	equ	0xFF7
  6233                           tblptrl	equ	0xFF6
  6234                           tablat	equ	0xFF5
  6235                           prodh	equ	0xFF4
  6236                           prodl	equ	0xFF3
  6237                           intcon	equ	0xFF2
  6238                           intcon2	equ	0xFF1
  6239                           intcon3	equ	0xFF0
  6240                           postinc0	equ	0xFEE
  6241                           wreg	equ	0xFE8
  6242                           indf1	equ	0xFE7
  6243                           fsr1h	equ	0xFE2
  6244                           fsr1l	equ	0xFE1
  6245                           indf2	equ	0xFDF
  6246                           fsr2h	equ	0xFDA
  6247                           fsr2l	equ	0xFD9
  6248                           status	equ	0xFD8
  6249                           
  6250 ;; *************** function _NVMalloc *****************
  6251 ;; Defined at:
  6252 ;;		line 616 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  size            2   22[BANK0 ] unsigned int 
  6255 ;;  location        2   24[BANK0 ] PTR unsigned int 
  6256 ;;		 -> nvmmyIndex(2), nvmRole(2), nvmEdc(2), nvmOutFrameCounter(2), 
  6257 ;;		 -> nvmConnectionTable(2), nvmConnMode(2), nvmCurrentChannel(2), nvmMyPANID(2), 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      unsigned char 
  6262 ;; Registers used:
  6263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6264 ;; Tracked objects:
  6265 ;;		On entry : F/0
  6266 ;;		On exit  : F/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6271 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6272 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;Total ram usage:        6 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:    8
  6276 ;; This function calls:
  6277 ;;		Nothing
  6278 ;; This function is called by:
  6279 ;;		_NVMInit
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	text22
  6284  003F48                     __ptext22:
  6285                           	opt stack 0
  6286  003F48                     _NVMalloc:
  6287                           	opt stack 19
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;miwi_nvm.c: 620: if ((nextEEPosition + size) > 32768)
  6291                           
  6292                           ; BSR set to: 0
  6293                           ;incstack = 0
  6294  003F48  5176               	movf	NVMalloc@size& (0+255),w,b
  6295  003F4A  243C               	addwf	_nextEEPosition,w,c
  6296  003F4C  6F7A               	movwf	??_NVMalloc& (0+255),b
  6297  003F4E  5177               	movf	(NVMalloc@size+1)& (0+255),w,b
  6298  003F50  203D               	addwfc	_nextEEPosition+1,w,c
  6299  003F52  6F7B               	movwf	(??_NVMalloc+1)& (0+255),b
  6300  003F54  057A               	decf	??_NVMalloc& (0+255),w,b
  6301  003F56  0E80               	movlw	128
  6302  003F58  597B               	subwfb	(??_NVMalloc+1)& (0+255),w,b
  6303  003F5A  E301               	bnc	l7412
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;miwi_nvm.c: 621: {
  6307                           ;miwi_nvm.c: 622: return 0;
  6308  003F5C  0C00               	retlw	0
  6309  003F5E                     l7412:
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;miwi_nvm.c: 623: }
  6313                           ;miwi_nvm.c: 625: *location = nextEEPosition;
  6314  003F5E  C078  FFD9         	movff	NVMalloc@location,fsr2l
  6315  003F62  C079  FFDA         	movff	NVMalloc@location+1,fsr2h
  6316  003F66  C03C  FFDE         	movff	_nextEEPosition,postinc2
  6317  003F6A  C03D  FFDD         	movff	_nextEEPosition+1,postdec2
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;miwi_nvm.c: 626: nextEEPosition += size;
  6321  003F6E  5176               	movf	NVMalloc@size& (0+255),w,b
  6322  003F70  263C               	addwf	_nextEEPosition,f,c
  6323  003F72  5177               	movf	(NVMalloc@size+1)& (0+255),w,b
  6324  003F74  223D               	addwfc	_nextEEPosition+1,f,c
  6325                           
  6326                           ; BSR set to: 0
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;miwi_nvm.c: 627: return 1;
  6330  003F76  0C01               	retlw	1	;funcret
  6331  003F78                     __end_of_NVMalloc:
  6332                           	opt stack 0
  6333                           tblptru	equ	0xFF8
  6334                           tblptrh	equ	0xFF7
  6335                           tblptrl	equ	0xFF6
  6336                           tablat	equ	0xFF5
  6337                           prodh	equ	0xFF4
  6338                           prodl	equ	0xFF3
  6339                           intcon	equ	0xFF2
  6340                           intcon2	equ	0xFF1
  6341                           intcon3	equ	0xFF0
  6342                           postinc0	equ	0xFEE
  6343                           wreg	equ	0xFE8
  6344                           indf1	equ	0xFE7
  6345                           fsr1h	equ	0xFE2
  6346                           fsr1l	equ	0xFE1
  6347                           indf2	equ	0xFDF
  6348                           postinc2	equ	0xFDE
  6349                           postdec2	equ	0xFDD
  6350                           fsr2h	equ	0xFDA
  6351                           fsr2l	equ	0xFD9
  6352                           status	equ	0xFD8
  6353                           
  6354 ;; *************** function _MiMAC_Init *****************
  6355 ;; Defined at:
  6356 ;;		line 579 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  initValue       3   36[BANK0 ] struct .
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;  i               1   39[BANK0 ] unsigned char 
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  1    wreg      unsigned char 
  6363 ;; Registers used:
  6364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6365 ;; Tracked objects:
  6366 ;;		On entry : F/0
  6367 ;;		On exit  : F/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6370 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6373 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6374 ;;Total ram usage:        4 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:   11
  6377 ;; This function calls:
  6378 ;;		_DELAY_ms
  6379 ;;		_RegisterSet
  6380 ;;		_SetRFMode
  6381 ;; This function is called by:
  6382 ;;		_MiApp_ProtocolInit
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text23
  6387  0030FC                     __ptext23:
  6388                           	opt stack 0
  6389  0030FC                     _MiMAC_Init:
  6390                           	opt stack 17
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;drv_mrf_miwi_89xa.c: 581: uint8_t i;
  6394                           ;drv_mrf_miwi_89xa.c: 583: MACInitParams = initValue;
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;incstack = 0
  6398  0030FC  C084  F039         	movff	MiMAC_Init@initValue,_MACInitParams
  6399  003100  C085  F03A         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
  6400  003104  C086  F03B         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;drv_mrf_miwi_89xa.c: 585: DELAY_ms(20);
  6404  003108  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
  6405  00310A  0E14               	movlw	20
  6406  00310C  6F76               	movwf	DELAY_ms@ms& (0+255),b
  6407  00310E  ECC7  F015         	call	_DELAY_ms	;wreg free
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;drv_mrf_miwi_89xa.c: 586: LATDbits.LATD1 = 1;
  6411  003112  828C               	bsf	3980,1,c	;volatile
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;drv_mrf_miwi_89xa.c: 587: LATAbits.LATA5 = 1;
  6415  003114  8A89               	bsf	3977,5,c	;volatile
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;drv_mrf_miwi_89xa.c: 590: MACSeq = TMR0L;
  6419  003116  CFD6 F03E          	movff	4054,_MACSeq	;volatile
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;drv_mrf_miwi_89xa.c: 591: ReceivedBankIndex = 0xFF;
  6423  00311A  69DE               	setf	_ReceivedBankIndex& (0+255),b
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;drv_mrf_miwi_89xa.c: 593: for(i = 0; i < 2; i++)
  6427  00311C  6B87               	clrf	MiMAC_Init@i& (0+255),b
  6428  00311E                     l10708:
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;drv_mrf_miwi_89xa.c: 594: {
  6432                           ;drv_mrf_miwi_89xa.c: 595: RxPacket[i].flags.Val = 0;
  6433  00311E  5187               	movf	MiMAC_Init@i& (0+255),w,b
  6434  003120  0D39               	mullw	57
  6435  003122  0E00               	movlw	low _RxPacket
  6436  003124  24F3               	addwf	prodl,w,c
  6437  003126  6ED9               	movwf	fsr2l,c
  6438  003128  0E03               	movlw	high _RxPacket
  6439  00312A  20F4               	addwfc	prodh,w,c
  6440  00312C  6EDA               	movwf	fsr2h,c
  6441  00312E  6ADF               	clrf	indf2,c
  6442                           
  6443                           ; BSR set to: 0
  6444  003130  2B87               	incf	MiMAC_Init@i& (0+255),f,b
  6445                           
  6446                           ; BSR set to: 0
  6447  003132  0E01               	movlw	1
  6448  003134  6587               	cpfsgt	MiMAC_Init@i& (0+255),b
  6449  003136  D7F3               	goto	l10708
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;drv_mrf_miwi_89xa.c: 596: }
  6453                           ;drv_mrf_miwi_89xa.c: 630: for (i = 0 ; i <= 31; i++)
  6454  003138  6B87               	clrf	MiMAC_Init@i& (0+255),b
  6455  00313A                     l10718:
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;drv_mrf_miwi_89xa.c: 631: {
  6459                           ;drv_mrf_miwi_89xa.c: 632: RegisterSet(InitConfigRegs[i]);
  6460  00313A  5187               	movf	MiMAC_Init@i& (0+255),w,b
  6461  00313C  0D02               	mullw	2
  6462  00313E  0E05               	movlw	low _InitConfigRegs
  6463  003140  24F3               	addwf	prodl,w,c
  6464  003142  6EF6               	movwf	tblptrl,c
  6465  003144  0EFD               	movlw	high _InitConfigRegs
  6466  003146  20F4               	addwfc	prodh,w,c
  6467  003148  6EF7               	movwf	tblptrh,c
  6468  00314A                     	if	0	;There are less than 3 active tblptr bytes
  6469  00314A                     	endif
  6470  00314A  0009               	tblrd		*+
  6471  00314C  CFF5 F077          	movff	tablat,RegisterSet@setting
  6472  003150  000A               	tblrd		*-
  6473  003152  CFF5 F078          	movff	tablat,RegisterSet@setting+1
  6474  003156  EC46  F01E         	call	_RegisterSet	;wreg free
  6475  00315A  0100               	movlb	0	; () banked
  6476  00315C  2B87               	incf	MiMAC_Init@i& (0+255),f,b
  6477                           
  6478                           ; BSR set to: 0
  6479  00315E  0E1F               	movlw	31
  6480  003160  6587               	cpfsgt	MiMAC_Init@i& (0+255),b
  6481  003162  D7EB               	goto	l10718
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;drv_mrf_miwi_89xa.c: 633: }
  6485                           ;drv_mrf_miwi_89xa.c: 634: SetRFMode(0x20);
  6486  003164  0E20               	movlw	32
  6487  003166  ECB2  F01B         	call	_SetRFMode
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;drv_mrf_miwi_89xa.c: 635: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
  6491  00316A  6B78               	clrf	(RegisterSet@setting+1)& (0+255),b
  6492  00316C  0E46               	movlw	70
  6493  00316E  6F77               	movwf	RegisterSet@setting& (0+255),b
  6494  003170  EC46  F01E         	call	_RegisterSet	;wreg free
  6495                           
  6496                           ;drv_mrf_miwi_89xa.c: 636: SetRFMode(0x40);
  6497  003174  0E40               	movlw	64
  6498  003176  ECB2  F01B         	call	_SetRFMode
  6499                           
  6500                           ;drv_mrf_miwi_89xa.c: 640: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  6501  00317A  0E1C               	movlw	28
  6502  00317C  6F78               	movwf	(RegisterSet@setting+1)& (0+255),b
  6503  00317E  0E0F               	movlw	15
  6504  003180  6F77               	movwf	RegisterSet@setting& (0+255),b
  6505  003182  EC46  F01E         	call	_RegisterSet	;wreg free
  6506                           
  6507                           ;drv_mrf_miwi_89xa.c: 642: SetRFMode(0x60);
  6508  003186  0E60               	movlw	96
  6509  003188  ECB2  F01B         	call	_SetRFMode
  6510                           
  6511                           ; BSR set to: 0
  6512                           ;drv_mrf_miwi_89xa.c: 644: INTCONbits.INT0IF = 0;
  6513  00318C  92F2               	bcf	intcon,1,c	;volatile
  6514                           
  6515                           ; BSR set to: 0
  6516                           ;drv_mrf_miwi_89xa.c: 645: INTCONbits.INT0IE = 1;
  6517  00318E  88F2               	bsf	intcon,4,c	;volatile
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;drv_mrf_miwi_89xa.c: 647: INTCON3bits.INT1IF = 0;
  6521  003190  90F0               	bcf	intcon3,0,c	;volatile
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;drv_mrf_miwi_89xa.c: 648: INTCON3bits.INT1IE = 1;
  6525  003192  86F0               	bsf	intcon3,3,c	;volatile
  6526                           
  6527                           ; BSR set to: 0
  6528  003194  0012               	return		;funcret
  6529  003196                     __end_of_MiMAC_Init:
  6530                           	opt stack 0
  6531                           tblptru	equ	0xFF8
  6532                           tblptrh	equ	0xFF7
  6533                           tblptrl	equ	0xFF6
  6534                           tablat	equ	0xFF5
  6535                           prodh	equ	0xFF4
  6536                           prodl	equ	0xFF3
  6537                           intcon	equ	0xFF2
  6538                           intcon2	equ	0xFF1
  6539                           intcon3	equ	0xFF0
  6540                           postinc0	equ	0xFEE
  6541                           wreg	equ	0xFE8
  6542                           indf1	equ	0xFE7
  6543                           fsr1h	equ	0xFE2
  6544                           fsr1l	equ	0xFE1
  6545                           indf2	equ	0xFDF
  6546                           postinc2	equ	0xFDE
  6547                           postdec2	equ	0xFDD
  6548                           fsr2h	equ	0xFDA
  6549                           fsr2l	equ	0xFD9
  6550                           status	equ	0xFD8
  6551                           
  6552 ;; *************** function _EEPROM_Read *****************
  6553 ;; Defined at:
  6554 ;;		line 56 in file "../src/system_config/miwikit_pic18f46j50_89xa/eeprom.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  dest            2   23[BANK0 ] PTR unsigned char 
  6557 ;;		 -> myConnectionIndex_in_PanCo(1), ConnMode(1), currentChannel(1), myLongAddress(8), 
  6558 ;;		 -> role(1), conn_size(1), ConnectionTable(140), 
  6559 ;;  addr            1   25[BANK0 ] unsigned char 
  6560 ;;  count           1   26[BANK0 ] unsigned char 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;		None
  6563 ;; Return value:  Size  Location     Type
  6564 ;;		None               void
  6565 ;; Registers used:
  6566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : F/0
  6569 ;;		On exit  : F/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6572 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6575 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6576 ;;Total ram usage:        4 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:   10
  6579 ;; This function calls:
  6580 ;;		_SPIGet2
  6581 ;;		_SPIPut2
  6582 ;; This function is called by:
  6583 ;;		_MiApp_ProtocolInit
  6584 ;;		_Read_MAC_Address
  6585 ;; This function uses a non-reentrant model
  6586 ;;
  6587                           
  6588                           	psect	text24
  6589  003F16                     __ptext24:
  6590                           	opt stack 0
  6591  003F16                     _EEPROM_Read:
  6592                           	opt stack 18
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;eeprom.c: 58: LATDbits.LATD5 = 0;
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;incstack = 0
  6599  003F16  9A8C               	bcf	3980,5,c	;volatile
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;eeprom.c: 59: SPIPut2(0x03);
  6603  003F18  0E03               	movlw	3
  6604  003F1A  ECB9  F020         	call	_SPIPut2
  6605                           
  6606                           ;eeprom.c: 60: SPIPut2(addr);
  6607  003F1E  0100               	movlb	0	; () banked
  6608  003F20  5179               	movf	EEPROM_Read@addr& (0+255),w,b
  6609  003F22  ECB9  F020         	call	_SPIPut2
  6610                           
  6611                           ;eeprom.c: 61: while( count )
  6612  003F26  D00B               	goto	l10754
  6613  003F28                     l10748:
  6614                           
  6615                           ; BSR set to: 0
  6616                           ;eeprom.c: 62: {
  6617                           ;eeprom.c: 63: *dest++ = SPIGet2();
  6618  003F28  EC07  F021         	call	_SPIGet2	;wreg free
  6619  003F2C  C077  FFD9         	movff	EEPROM_Read@dest,fsr2l
  6620  003F30  C078  FFDA         	movff	EEPROM_Read@dest+1,fsr2h
  6621  003F34  6EDF               	movwf	indf2,c
  6622  003F36  0100               	movlb	0	; () banked
  6623  003F38  4B77               	infsnz	EEPROM_Read@dest& (0+255),f,b
  6624  003F3A  2B78               	incf	(EEPROM_Read@dest+1)& (0+255),f,b
  6625                           
  6626                           ; BSR set to: 0
  6627                           ;eeprom.c: 64: count--;
  6628  003F3C  077A               	decf	EEPROM_Read@count& (0+255),f,b
  6629  003F3E                     l10754:
  6630  003F3E  0100               	movlb	0	; () banked
  6631  003F40  517A               	movf	EEPROM_Read@count& (0+255),w,b
  6632  003F42  E1F2               	bnz	l10748
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;eeprom.c: 65: }
  6636                           ;eeprom.c: 66: LATDbits.LATD5 = 1;
  6637  003F44  8A8C               	bsf	3980,5,c	;volatile
  6638                           
  6639                           ; BSR set to: 0
  6640  003F46  0012               	return		;funcret
  6641  003F48                     __end_of_EEPROM_Read:
  6642                           	opt stack 0
  6643                           tblptru	equ	0xFF8
  6644                           tblptrh	equ	0xFF7
  6645                           tblptrl	equ	0xFF6
  6646                           tablat	equ	0xFF5
  6647                           prodh	equ	0xFF4
  6648                           prodl	equ	0xFF3
  6649                           intcon	equ	0xFF2
  6650                           intcon2	equ	0xFF1
  6651                           intcon3	equ	0xFF0
  6652                           postinc0	equ	0xFEE
  6653                           wreg	equ	0xFE8
  6654                           indf1	equ	0xFE7
  6655                           fsr1h	equ	0xFE2
  6656                           fsr1l	equ	0xFE1
  6657                           indf2	equ	0xFDF
  6658                           postinc2	equ	0xFDE
  6659                           postdec2	equ	0xFDD
  6660                           fsr2h	equ	0xFDA
  6661                           fsr2l	equ	0xFD9
  6662                           status	equ	0xFD8
  6663                           
  6664 ;; *************** function _MiApp_EstablishConnection *****************
  6665 ;; Defined at:
  6666 ;;		line 2260 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  ActiveScanIn    1    wreg     unsigned char 
  6669 ;;  Mode            1  110[BANK0 ] unsigned char 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;  ActiveScanIn    1    0[COMRAM] unsigned char 
  6672 ;;  i               1   11[BANK2 ] unsigned char 
  6673 ;;  t2              4    7[BANK2 ] struct _MIWI_TICK
  6674 ;;  t1              4    2[BANK2 ] struct _MIWI_TICK
  6675 ;;  connectionIn    1    6[BANK2 ] unsigned char 
  6676 ;;  retry           1    1[BANK2 ] unsigned char 
  6677 ;;  tmpConnectio    1    0[BANK2 ] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  1    wreg      unsigned char 
  6680 ;; Registers used:
  6681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6682 ;; Tracked objects:
  6683 ;;		On entry : F/0
  6684 ;;		On exit  : F/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6687 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6688 ;;      Locals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6689 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6690 ;;      Totals:         0       5       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6691 ;;Total ram usage:       17 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:   19
  6694 ;; This function calls:
  6695 ;;		_MiApp_DiscardMessage
  6696 ;;		_MiApp_MessageAvailable
  6697 ;;		_MiWi_TickGet
  6698 ;;		_SendPacket
  6699 ;; This function is called by:
  6700 ;;		_Initialize_Demo
  6701 ;;		_run_star_demo
  6702 ;; This function uses a non-reentrant model
  6703 ;;
  6704                           
  6705                           	psect	text25
  6706  00234E                     __ptext25:
  6707                           	opt stack 0
  6708  00234E                     _MiApp_EstablishConnection:
  6709                           	opt stack 9
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;miwi_p2p.c: 2262: uint8_t tmpConnectionMode = ConnMode;
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;incstack = 0
  6716  00234E  C0E9  F2AA         	movff	_ConnMode,MiApp_EstablishConnection@tmpConnectionMode
  6717                           
  6718                           ; BSR set to: 0
  6719                           ;miwi_p2p.c: 2263: uint8_t retry = 10;
  6720  002352  0E0A               	movlw	10
  6721  002354  0102               	movlb	2	; () banked
  6722  002356  6FAB               	movwf	MiApp_EstablishConnection@retry& (0+255),b
  6723                           
  6724                           ; BSR set to: 2
  6725                           ;miwi_p2p.c: 2264: uint8_t connectionInterval = 0;
  6726  002358  6BB0               	clrf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6727                           
  6728                           ; BSR set to: 2
  6729                           ;miwi_p2p.c: 2265: MIWI_TICK t1, t2;
  6730                           ;miwi_p2p.c: 2266: tick1 = MiWi_TickGet();
  6731  00235A  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  6732  00235E  C076  F18B         	movff	?_MiWi_TickGet,_tick1
  6733  002362  C077  F18C         	movff	?_MiWi_TickGet+1,_tick1+1
  6734  002366  C078  F18D         	movff	?_MiWi_TickGet+2,_tick1+2
  6735  00236A  C079  F18E         	movff	?_MiWi_TickGet+3,_tick1+3
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;miwi_p2p.c: 2267: if( Mode == 0x01 )
  6739  00236E  05CE               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
  6740  002370  E101               	bnz	l10812
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;miwi_p2p.c: 2268: {
  6744                           ;miwi_p2p.c: 2269: return 0xFF;
  6745  002372  0CFF               	retlw	255
  6746  002374                     l10812:
  6747                           
  6748                           ; BSR set to: 0
  6749                           ;miwi_p2p.c: 2270: }
  6750                           ;miwi_p2p.c: 2272: t1 = MiWi_TickGet();
  6751  002374  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  6752  002378  C076  F2AC         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
  6753  00237C  C077  F2AD         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
  6754  002380  C078  F2AE         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
  6755  002384  C079  F2AF         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;miwi_p2p.c: 2274: t1.Val -= (((uint32_t)(16000000)/32));
  6759  002388  0E20               	movlw	32
  6760  00238A  0102               	movlb	2	; () banked
  6761  00238C  5FAC               	subwf	MiApp_EstablishConnection@t1& (0+255),f,b
  6762  00238E  0EA1               	movlw	161
  6763  002390  5BAD               	subwfb	(MiApp_EstablishConnection@t1+1)& (0+255),f,b
  6764  002392  0E07               	movlw	7
  6765  002394  5BAE               	subwfb	(MiApp_EstablishConnection@t1+2)& (0+255),f,b
  6766  002396  0E00               	movlw	0
  6767  002398  5BAF               	subwfb	(MiApp_EstablishConnection@t1+3)& (0+255),f,b
  6768                           
  6769                           ; BSR set to: 2
  6770                           ;miwi_p2p.c: 2275: ConnMode = 0x00;
  6771  00239A  0100               	movlb	0	; () banked
  6772  00239C  6BE9               	clrf	_ConnMode& (0+255),b
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;miwi_p2p.c: 2276: P2PStatus.bits.SearchConnection = 1;
  6776  00239E  89DC               	bsf	_P2PStatus& (0+255),4,b	;volatile
  6777                           
  6778                           ;miwi_p2p.c: 2277: while( P2PStatus.bits.SearchConnection )
  6779  0023A0  D07A               	goto	l10870
  6780  0023A2                     l10820:
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;miwi_p2p.c: 2278: {
  6784                           ;miwi_p2p.c: 2279: t2 = MiWi_TickGet();
  6785  0023A2  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  6786  0023A6  C076  F2B1         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
  6787  0023AA  C077  F2B2         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
  6788  0023AE  C078  F2B3         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
  6789  0023B2  C079  F2B4         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;miwi_p2p.c: 2280: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
  6793  0023B6  0102               	movlb	2	; () banked
  6794  0023B8  51AC               	movf	MiApp_EstablishConnection@t1& (0+255),w,b
  6795  0023BA  5DB1               	subwf	MiApp_EstablishConnection@t2& (0+255),w,b
  6796  0023BC  0100               	movlb	0	; () banked
  6797  0023BE  6FCF               	movwf	??_MiApp_EstablishConnection& (0+255),b
  6798  0023C0  0102               	movlb	2	; () banked
  6799  0023C2  51AD               	movf	(MiApp_EstablishConnection@t1+1)& (0+255),w,b
  6800  0023C4  59B2               	subwfb	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
  6801  0023C6  0100               	movlb	0	; () banked
  6802  0023C8  6FD0               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
  6803  0023CA  0102               	movlb	2	; () banked
  6804  0023CC  51AE               	movf	(MiApp_EstablishConnection@t1+2)& (0+255),w,b
  6805  0023CE  59B3               	subwfb	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
  6806  0023D0  0100               	movlb	0	; () banked
  6807  0023D2  6FD1               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
  6808  0023D4  0102               	movlb	2	; () banked
  6809  0023D6  51AF               	movf	(MiApp_EstablishConnection@t1+3)& (0+255),w,b
  6810  0023D8  59B4               	subwfb	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
  6811  0023DA  0100               	movlb	0	; () banked
  6812  0023DC  6FD2               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
  6813  0023DE  51D2               	movf	(??_MiApp_EstablishConnection+3)& (0+255),w,b
  6814  0023E0  E107               	bnz	u11250
  6815  0023E2  0E21               	movlw	33
  6816  0023E4  5DCF               	subwf	??_MiApp_EstablishConnection& (0+255),w,b
  6817  0023E6  0EA1               	movlw	161
  6818  0023E8  59D0               	subwfb	(??_MiApp_EstablishConnection+1)& (0+255),w,b
  6819  0023EA  0E07               	movlw	7
  6820  0023EC  59D1               	subwfb	(??_MiApp_EstablishConnection+2)& (0+255),w,b
  6821  0023EE  E34D               	bnc	l10866
  6822  0023F0                     u11250:
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;miwi_p2p.c: 2281: {
  6826                           ;miwi_p2p.c: 2282: t1.Val = t2.Val;
  6827  0023F0  C2B1  F2AC         	movff	MiApp_EstablishConnection@t2,MiApp_EstablishConnection@t1
  6828  0023F4  C2B2  F2AD         	movff	MiApp_EstablishConnection@t2+1,MiApp_EstablishConnection@t1+1
  6829  0023F8  C2B3  F2AE         	movff	MiApp_EstablishConnection@t2+2,MiApp_EstablishConnection@t1+2
  6830  0023FC  C2B4  F2AF         	movff	MiApp_EstablishConnection@t2+3,MiApp_EstablishConnection@t1+3
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;miwi_p2p.c: 2284: if( connectionInterval-- > 0 )
  6834  002400  0102               	movlb	2	; () banked
  6835  002402  07B0               	decf	MiApp_EstablishConnection@connectionInterval& (0+255),f,b
  6836  002404  29B0               	incf	MiApp_EstablishConnection@connectionInterval& (0+255),w,b
  6837  002406  E147               	bnz	l10870
  6838                           
  6839                           ; BSR set to: 2
  6840                           ;miwi_p2p.c: 2287: }
  6841                           ;miwi_p2p.c: 2288: connectionInterval = 2-1;
  6842  002408  0E01               	movlw	1
  6843  00240A  6FB0               	movwf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6844                           
  6845                           ; BSR set to: 2
  6846                           ;miwi_p2p.c: 2289: if( retry-- == 0 )
  6847  00240C  07AB               	decf	MiApp_EstablishConnection@retry& (0+255),f,b
  6848  00240E  29AB               	incf	MiApp_EstablishConnection@retry& (0+255),w,b
  6849  002410  E103               	bnz	l679
  6850                           
  6851                           ; BSR set to: 2
  6852                           ;miwi_p2p.c: 2290: {
  6853                           ;miwi_p2p.c: 2292: P2PStatus.bits.SearchConnection = 0;
  6854  002412  0100               	movlb	0	; () banked
  6855  002414  99DC               	bcf	_P2PStatus& (0+255),4,b	;volatile
  6856  002416  0CFF               	retlw	255
  6857  002418                     l679:
  6858                           
  6859                           ; BSR set to: 2
  6860                           ;miwi_p2p.c: 2294: }
  6861                           ;miwi_p2p.c: 2295: {TxData = 0;};
  6862  002418  0100               	movlb	0	; () banked
  6863  00241A  6BDF               	clrf	_TxData& (0+255),b
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;miwi_p2p.c: 2296: TxBuffer[TxData++] = 0x81;
  6867  00241C  0E95               	movlw	low _TxBuffer
  6868  00241E  25DF               	addwf	_TxData& (0+255),w,b
  6869  002420  6ED9               	movwf	fsr2l,c
  6870  002422  6ADA               	clrf	fsr2h,c
  6871  002424  0E01               	movlw	high _TxBuffer
  6872  002426  22DA               	addwfc	fsr2h,f,c
  6873  002428  0E81               	movlw	129
  6874  00242A  6EDF               	movwf	indf2,c
  6875                           
  6876                           ; BSR set to: 0
  6877  00242C  2BDF               	incf	_TxData& (0+255),f,b
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;miwi_p2p.c: 2297: TxBuffer[TxData++] = currentChannel;
  6881  00242E  0E95               	movlw	low _TxBuffer
  6882  002430  25DF               	addwf	_TxData& (0+255),w,b
  6883  002432  6ED9               	movwf	fsr2l,c
  6884  002434  6ADA               	clrf	fsr2h,c
  6885  002436  0E01               	movlw	high _TxBuffer
  6886  002438  22DA               	addwfc	fsr2h,f,c
  6887  00243A  C0E5  FFDF         	movff	_currentChannel,indf2
  6888  00243E  2BDF               	incf	_TxData& (0+255),f,b
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;miwi_p2p.c: 2298: TxBuffer[TxData++] = P2PCapacityInfo;
  6892  002440  0E95               	movlw	low _TxBuffer
  6893  002442  25DF               	addwf	_TxData& (0+255),w,b
  6894  002444  6ED9               	movwf	fsr2l,c
  6895  002446  6ADA               	clrf	fsr2h,c
  6896  002448  0E01               	movlw	high _TxBuffer
  6897  00244A  22DA               	addwfc	fsr2h,f,c
  6898  00244C  C0DB  FFDF         	movff	_P2PCapacityInfo,indf2
  6899                           
  6900                           ; BSR set to: 0
  6901  002450  2BDF               	incf	_TxData& (0+255),f,b
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;miwi_p2p.c: 2305: {
  6905                           ;miwi_p2p.c: 2306: uint8_t i;
  6906                           ;miwi_p2p.c: 2308: for(i = 0; i < 1; i++)
  6907  002452  0102               	movlb	2	; () banked
  6908  002454  6BB5               	clrf	MiApp_EstablishConnection@i& (0+255),b
  6909  002456                     l10856:
  6910                           
  6911                           ; BSR set to: 2
  6912                           ;miwi_p2p.c: 2309: {
  6913                           ;miwi_p2p.c: 2310: TxBuffer[TxData++] = AdditionalNodeID[i];
  6914  002456  51B5               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6915  002458  0FE8               	addlw	low _AdditionalNodeID
  6916  00245A  6ED9               	movwf	fsr2l,c
  6917  00245C  6ADA               	clrf	fsr2h,c
  6918  00245E  0E95               	movlw	low _TxBuffer
  6919  002460  0100               	movlb	0	; () banked
  6920  002462  25DF               	addwf	_TxData& (0+255),w,b
  6921  002464  6EE1               	movwf	fsr1l,c
  6922  002466  6AE2               	clrf	fsr1h,c
  6923  002468  0E01               	movlw	high _TxBuffer
  6924  00246A  22E2               	addwfc	fsr1h,f,c
  6925  00246C  CFDF FFE7          	movff	indf2,indf1
  6926                           
  6927                           ; BSR set to: 0
  6928  002470  2BDF               	incf	_TxData& (0+255),f,b
  6929                           
  6930                           ; BSR set to: 0
  6931  002472  0102               	movlb	2	; () banked
  6932  002474  2BB5               	incf	MiApp_EstablishConnection@i& (0+255),f,b
  6933                           
  6934                           ; BSR set to: 2
  6935  002476  51B5               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6936  002478  E0EE               	bz	l10856
  6937                           
  6938                           ; BSR set to: 2
  6939                           ;miwi_p2p.c: 2311: }
  6940                           ;miwi_p2p.c: 2312: }
  6941                           ;miwi_p2p.c: 2341: SendPacket(1, (0), 1, 0);
  6942  00247A  0100               	movlb	0	; () banked
  6943  00247C  6BA3               	clrf	SendPacket@DestinationAddress& (0+255),b
  6944  00247E  6BA4               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  6945  002480  0E01               	movlw	1
  6946  002482  6FA5               	movwf	SendPacket@isCommand& (0+255),b
  6947  002484  6BA6               	clrf	SendPacket@SecurityEnabled& (0+255),b
  6948  002486  ECE1  F017         	call	_SendPacket
  6949  00248A                     l10866:
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;miwi_p2p.c: 2344: }
  6953                           ;miwi_p2p.c: 2346: if( MiApp_MessageAvailable())
  6954  00248A  EC01  F021         	call	_MiApp_MessageAvailable	;wreg free
  6955  00248E  0900               	iorlw	0
  6956  002490  E002               	bz	l10870
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;miwi_p2p.c: 2347: {
  6960                           ;miwi_p2p.c: 2348: MiApp_DiscardMessage();
  6961  002492  EC0C  F021         	call	_MiApp_DiscardMessage	;wreg free
  6962  002496                     l10870:
  6963  002496  0100               	movlb	0	; () banked
  6964  002498  B9DC               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  6965  00249A  D783               	goto	l10820
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;miwi_p2p.c: 2349: }
  6969                           ;miwi_p2p.c: 2351: }
  6970                           ;miwi_p2p.c: 2353: ConnMode = tmpConnectionMode;
  6971  00249C  C2AA  F0E9         	movff	MiApp_EstablishConnection@tmpConnectionMode,_ConnMode
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;miwi_p2p.c: 2360: return LatestConnection;
  6975  0024A0  51DA               	movf	_LatestConnection& (0+255),w,b
  6976                           
  6977                           ; BSR set to: 0
  6978  0024A2  0012               	return		;funcret
  6979  0024A4                     __end_of_MiApp_EstablishConnection:
  6980                           	opt stack 0
  6981                           tblptru	equ	0xFF8
  6982                           tblptrh	equ	0xFF7
  6983                           tblptrl	equ	0xFF6
  6984                           tablat	equ	0xFF5
  6985                           prodh	equ	0xFF4
  6986                           prodl	equ	0xFF3
  6987                           intcon	equ	0xFF2
  6988                           intcon2	equ	0xFF1
  6989                           intcon3	equ	0xFF0
  6990                           postinc0	equ	0xFEE
  6991                           wreg	equ	0xFE8
  6992                           indf1	equ	0xFE7
  6993                           fsr1h	equ	0xFE2
  6994                           fsr1l	equ	0xFE1
  6995                           indf2	equ	0xFDF
  6996                           postinc2	equ	0xFDE
  6997                           postdec2	equ	0xFDD
  6998                           fsr2h	equ	0xFDA
  6999                           fsr2l	equ	0xFD9
  7000                           status	equ	0xFD8
  7001                           
  7002 ;; *************** function _MiApp_MessageAvailable *****************
  7003 ;; Defined at:
  7004 ;;		line 2392 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;		None
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;		None
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  1    wreg      unsigned char 
  7011 ;; Registers used:
  7012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : D/0
  7015 ;;		On exit  : F/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7022 ;;Total ram usage:        0 bytes
  7023 ;; Hardware stack levels used:    1
  7024 ;; Hardware stack levels required when called:   18
  7025 ;; This function calls:
  7026 ;;		_P2PTasks
  7027 ;; This function is called by:
  7028 ;;		_MiApp_UnicastStar
  7029 ;;		_MiApp_EstablishConnection
  7030 ;;		_Process_RxMessage
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text26
  7035  004202                     __ptext26:
  7036                           	opt stack 0
  7037  004202                     _MiApp_MessageAvailable:
  7038                           	opt stack 9
  7039                           
  7040                           ;miwi_p2p.c: 2394: P2PTasks();
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;incstack = 0
  7044  004202  EC2C  F000         	call	_P2PTasks	;wreg free
  7045                           
  7046                           ;miwi_p2p.c: 2396: return P2PStatus.bits.RxHasUserData;
  7047  004206  0100               	movlb	0	; () banked
  7048  004208  B7DC               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  7049  00420A  0C01               	retlw	1
  7050                           
  7051                           ; BSR set to: 0
  7052  00420C  0C00               	retlw	0	;funcret
  7053  00420E                     __end_of_MiApp_MessageAvailable:
  7054                           	opt stack 0
  7055                           tblptru	equ	0xFF8
  7056                           tblptrh	equ	0xFF7
  7057                           tblptrl	equ	0xFF6
  7058                           tablat	equ	0xFF5
  7059                           prodh	equ	0xFF4
  7060                           prodl	equ	0xFF3
  7061                           intcon	equ	0xFF2
  7062                           intcon2	equ	0xFF1
  7063                           intcon3	equ	0xFF0
  7064                           postinc0	equ	0xFEE
  7065                           wreg	equ	0xFE8
  7066                           indf1	equ	0xFE7
  7067                           fsr1h	equ	0xFE2
  7068                           fsr1l	equ	0xFE1
  7069                           indf2	equ	0xFDF
  7070                           postinc2	equ	0xFDE
  7071                           postdec2	equ	0xFDD
  7072                           fsr2h	equ	0xFDA
  7073                           fsr2l	equ	0xFD9
  7074                           status	equ	0xFD8
  7075                           
  7076 ;; *************** function _P2PTasks *****************
  7077 ;; Defined at:
  7078 ;;		line 344 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;		None
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  j               1   18[BANK1 ] unsigned char 
  7083 ;;  p               1   16[BANK1 ] unsigned char 
  7084 ;;  final_index     1    9[BANK1 ] unsigned char 
  7085 ;;  status          1   17[BANK1 ] unsigned char 
  7086 ;;  p               1   15[BANK1 ] unsigned char 
  7087 ;;  tmpW            4    0        struct _MIWI_TICK
  7088 ;;  isCommand       1   10[BANK1 ] unsigned char 
  7089 ;;  FW_Stat         1    0[BANK1 ] unsigned char 
  7090 ;;  tick3           4   11[BANK1 ] struct _MIWI_TICK
  7091 ;;  tmpTick         4    5[BANK1 ] struct _MIWI_TICK
  7092 ;;  tick2           4    1[BANK1 ] struct _MIWI_TICK
  7093 ;;  i               1   19[BANK1 ] unsigned char 
  7094 ;;  broadcast_st    1    0        unsigned char 
  7095 ;; Return value:  Size  Location     Type
  7096 ;;		None               void
  7097 ;; Registers used:
  7098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7099 ;; Tracked objects:
  7100 ;;		On entry : D/0
  7101 ;;		On exit  : E/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7105 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7106 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7107 ;;      Totals:         0       8      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7108 ;;Total ram usage:       28 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; Hardware stack levels required when called:   17
  7111 ;; This function calls:
  7112 ;;		_AddConnection
  7113 ;;		_EEPROM_Write
  7114 ;;		_Find_InActiveDevices
  7115 ;;		_Find_Index
  7116 ;;		_Forward_Packet_PANCr_to_EDy
  7117 ;;		_MiApp_BroadcastConnectionTable
  7118 ;;		_MiMAC_DiscardPacket
  7119 ;;		_MiMAC_ReceivedPacket
  7120 ;;		_MiWi_TickGet
  7121 ;;		_SW_Ack_SrED
  7122 ;;		_SendPacket
  7123 ;;		_StartChannelHopping
  7124 ;;		_isSameAddress
  7125 ;;		_send_link_status
  7126 ;;		_store_connection_tb
  7127 ;; This function is called by:
  7128 ;;		_MiApp_MessageAvailable
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           	psect	text27
  7133  000058                     __ptext27:
  7134                           	opt stack 0
  7135  000058                     _P2PTasks:
  7136                           	opt stack 9
  7137                           
  7138                           ;miwi_p2p.c: 346: uint8_t i;
  7139                           ;miwi_p2p.c: 347: MIWI_TICK tmpTick ,tick2 , tick3 ;
  7140                           ;miwi_p2p.c: 348: bool broadcast_status;
  7141                           ;miwi_p2p.c: 351: tick2 = MiWi_TickGet();
  7142                           
  7143                           ; BSR set to: 0
  7144                           ;incstack = 0
  7145  000058  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  7146  00005C  C076  F1E8         	movff	?_MiWi_TickGet,P2PTasks@tick2
  7147  000060  C077  F1E9         	movff	?_MiWi_TickGet+1,P2PTasks@tick2+1
  7148  000064  C078  F1EA         	movff	?_MiWi_TickGet+2,P2PTasks@tick2+2
  7149  000068  C079  F1EB         	movff	?_MiWi_TickGet+3,P2PTasks@tick2+3
  7150                           
  7151                           ;miwi_p2p.c: 352: tick3 = MiWi_TickGet();
  7152  00006C  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  7153  000070  C076  F1F2         	movff	?_MiWi_TickGet,P2PTasks@tick3
  7154  000074  C077  F1F3         	movff	?_MiWi_TickGet+1,P2PTasks@tick3+1
  7155  000078  C078  F1F4         	movff	?_MiWi_TickGet+2,P2PTasks@tick3+2
  7156  00007C  C079  F1F5         	movff	?_MiWi_TickGet+3,P2PTasks@tick3+3
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;miwi_p2p.c: 354: if (role)
  7160  000080  51E7               	movf	_role& (0+255),w,b
  7161  000082  E028               	bz	l10242
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;miwi_p2p.c: 355: {
  7165                           ;miwi_p2p.c: 356: if( (tick3.Val - tick4.Val) > ((((uint32_t)(16000000)/32)*60)))
  7166  000084  0101               	movlb	1	; () banked
  7167  000086  518F               	movf	_tick4& (0+255),w,b
  7168  000088  5DF2               	subwf	P2PTasks@tick3& (0+255),w,b
  7169  00008A  0100               	movlb	0	; () banked
  7170  00008C  6FC6               	movwf	??_P2PTasks& (0+255),b
  7171  00008E  0101               	movlb	1	; () banked
  7172  000090  5190               	movf	(_tick4+1)& (0+255),w,b
  7173  000092  59F3               	subwfb	(P2PTasks@tick3+1)& (0+255),w,b
  7174  000094  0100               	movlb	0	; () banked
  7175  000096  6FC7               	movwf	(??_P2PTasks+1)& (0+255),b
  7176  000098  0101               	movlb	1	; () banked
  7177  00009A  5191               	movf	(_tick4+2)& (0+255),w,b
  7178  00009C  59F4               	subwfb	(P2PTasks@tick3+2)& (0+255),w,b
  7179  00009E  0100               	movlb	0	; () banked
  7180  0000A0  6FC8               	movwf	(??_P2PTasks+2)& (0+255),b
  7181  0000A2  0101               	movlb	1	; () banked
  7182  0000A4  5192               	movf	(_tick4+3)& (0+255),w,b
  7183  0000A6  59F5               	subwfb	(P2PTasks@tick3+3)& (0+255),w,b
  7184  0000A8  0100               	movlb	0	; () banked
  7185  0000AA  6FC9               	movwf	(??_P2PTasks+3)& (0+255),b
  7186  0000AC  0E81               	movlw	129
  7187  0000AE  5DC6               	subwf	??_P2PTasks& (0+255),w,b
  7188  0000B0  0EC3               	movlw	195
  7189  0000B2  59C7               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7190  0000B4  0EC9               	movlw	201
  7191  0000B6  59C8               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7192  0000B8  0E01               	movlw	1
  7193  0000BA  59C9               	subwfb	(??_P2PTasks+3)& (0+255),w,b
  7194  0000BC  E332               	bnc	l10248
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;miwi_p2p.c: 357: {
  7198                           ;miwi_p2p.c: 358: Find_InActiveDevices ();
  7199  0000BE  ECF0  F01C         	call	_Find_InActiveDevices	;wreg free
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;miwi_p2p.c: 359: tick4 = tick3;
  7203  0000C2  C1F2  F18F         	movff	P2PTasks@tick3,_tick4
  7204  0000C6  C1F3  F190         	movff	P2PTasks@tick3+1,_tick4+1
  7205  0000CA  C1F4  F191         	movff	P2PTasks@tick3+2,_tick4+2
  7206  0000CE  C1F5  F192         	movff	P2PTasks@tick3+3,_tick4+3
  7207  0000D2  D027               	goto	l10248
  7208  0000D4                     l10242:
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;miwi_p2p.c: 363: else
  7212                           ;miwi_p2p.c: 364: {
  7213                           ;miwi_p2p.c: 365: if( (tick3.Val - tick1.Val) > (((uint32_t)(16000000)/32)*15) )
  7214  0000D4  0101               	movlb	1	; () banked
  7215  0000D6  518B               	movf	_tick1& (0+255),w,b
  7216  0000D8  5DF2               	subwf	P2PTasks@tick3& (0+255),w,b
  7217  0000DA  0100               	movlb	0	; () banked
  7218  0000DC  6FC6               	movwf	??_P2PTasks& (0+255),b
  7219  0000DE  0101               	movlb	1	; () banked
  7220  0000E0  518C               	movf	(_tick1+1)& (0+255),w,b
  7221  0000E2  59F3               	subwfb	(P2PTasks@tick3+1)& (0+255),w,b
  7222  0000E4  0100               	movlb	0	; () banked
  7223  0000E6  6FC7               	movwf	(??_P2PTasks+1)& (0+255),b
  7224  0000E8  0101               	movlb	1	; () banked
  7225  0000EA  518D               	movf	(_tick1+2)& (0+255),w,b
  7226  0000EC  59F4               	subwfb	(P2PTasks@tick3+2)& (0+255),w,b
  7227  0000EE  0100               	movlb	0	; () banked
  7228  0000F0  6FC8               	movwf	(??_P2PTasks+2)& (0+255),b
  7229  0000F2  0101               	movlb	1	; () banked
  7230  0000F4  518E               	movf	(_tick1+3)& (0+255),w,b
  7231  0000F6  59F5               	subwfb	(P2PTasks@tick3+3)& (0+255),w,b
  7232  0000F8  0100               	movlb	0	; () banked
  7233  0000FA  6FC9               	movwf	(??_P2PTasks+3)& (0+255),b
  7234  0000FC  51C9               	movf	(??_P2PTasks+3)& (0+255),w,b
  7235  0000FE  E107               	bnz	u10460
  7236  000100  0EE1               	movlw	225
  7237  000102  5DC6               	subwf	??_P2PTasks& (0+255),w,b
  7238  000104  0E70               	movlw	112
  7239  000106  59C7               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7240  000108  0E72               	movlw	114
  7241  00010A  59C8               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7242  00010C  E30A               	bnc	l10248
  7243  00010E                     u10460:
  7244                           
  7245                           ; BSR set to: 0
  7246                           ;miwi_p2p.c: 366: {
  7247                           ;miwi_p2p.c: 367: send_link_status ();
  7248  00010E  EC3B  F01F         	call	_send_link_status	;wreg free
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;miwi_p2p.c: 368: tick1 = tick3;
  7252  000112  C1F2  F18B         	movff	P2PTasks@tick3,_tick1
  7253  000116  C1F3  F18C         	movff	P2PTasks@tick3+1,_tick1+1
  7254  00011A  C1F4  F18D         	movff	P2PTasks@tick3+2,_tick1+2
  7255  00011E  C1F5  F18E         	movff	P2PTasks@tick3+3,_tick1+3
  7256  000122                     l10248:
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;miwi_p2p.c: 369: }
  7260                           ;miwi_p2p.c: 370: }
  7261                           ;miwi_p2p.c: 374: if( (tick2.Val - tick1.Val) > (((uint32_t)(16000000)/32)*15) && role)
  7262  000122  0101               	movlb	1	; () banked
  7263  000124  518B               	movf	_tick1& (0+255),w,b
  7264  000126  5DE8               	subwf	P2PTasks@tick2& (0+255),w,b
  7265  000128  0100               	movlb	0	; () banked
  7266  00012A  6FC6               	movwf	??_P2PTasks& (0+255),b
  7267  00012C  0101               	movlb	1	; () banked
  7268  00012E  518C               	movf	(_tick1+1)& (0+255),w,b
  7269  000130  59E9               	subwfb	(P2PTasks@tick2+1)& (0+255),w,b
  7270  000132  0100               	movlb	0	; () banked
  7271  000134  6FC7               	movwf	(??_P2PTasks+1)& (0+255),b
  7272  000136  0101               	movlb	1	; () banked
  7273  000138  518D               	movf	(_tick1+2)& (0+255),w,b
  7274  00013A  59EA               	subwfb	(P2PTasks@tick2+2)& (0+255),w,b
  7275  00013C  0100               	movlb	0	; () banked
  7276  00013E  6FC8               	movwf	(??_P2PTasks+2)& (0+255),b
  7277  000140  0101               	movlb	1	; () banked
  7278  000142  518E               	movf	(_tick1+3)& (0+255),w,b
  7279  000144  59EB               	subwfb	(P2PTasks@tick2+3)& (0+255),w,b
  7280  000146  0100               	movlb	0	; () banked
  7281  000148  6FC9               	movwf	(??_P2PTasks+3)& (0+255),b
  7282  00014A  51C9               	movf	(??_P2PTasks+3)& (0+255),w,b
  7283  00014C  E107               	bnz	u10470
  7284  00014E  0EE1               	movlw	225
  7285  000150  5DC6               	subwf	??_P2PTasks& (0+255),w,b
  7286  000152  0E70               	movlw	112
  7287  000154  59C7               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7288  000156  0E72               	movlw	114
  7289  000158  59C8               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7290  00015A  E30C               	bnc	l10256
  7291  00015C                     u10470:
  7292                           
  7293                           ; BSR set to: 0
  7294  00015C  51E7               	movf	_role& (0+255),w,b
  7295  00015E  E00A               	bz	l10256
  7296                           
  7297                           ; BSR set to: 0
  7298                           ;miwi_p2p.c: 375: {
  7299                           ;miwi_p2p.c: 376: MiApp_BroadcastConnectionTable ();
  7300  000160  EC51  F00D         	call	_MiApp_BroadcastConnectionTable	;wreg free
  7301                           
  7302                           ; BSR set to: 0
  7303                           ;miwi_p2p.c: 377: tick1 = tick2;
  7304  000164  C1E8  F18B         	movff	P2PTasks@tick2,_tick1
  7305  000168  C1E9  F18C         	movff	P2PTasks@tick2+1,_tick1+1
  7306  00016C  C1EA  F18D         	movff	P2PTasks@tick2+2,_tick1+2
  7307  000170  C1EB  F18E         	movff	P2PTasks@tick2+3,_tick1+3
  7308  000174                     l10256:
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;miwi_p2p.c: 378: }
  7312                           ;miwi_p2p.c: 390: for(i = 0; i < 2; i++)
  7313  000174  0101               	movlb	1	; () banked
  7314  000176  6BFA               	clrf	P2PTasks@i& (0+255),b
  7315  000178                     l10262:
  7316                           
  7317                           ; BSR set to: 1
  7318                           ;miwi_p2p.c: 391: {
  7319                           ;miwi_p2p.c: 392: if( indirectMessages[i].flags.bits.isValid )
  7320  000178  51FA               	movf	P2PTasks@i& (0+255),w,b
  7321  00017A  0D33               	mullw	51
  7322  00017C  0E80               	movlw	low (_indirectMessages+14)
  7323  00017E  24F3               	addwf	prodl,w,c
  7324  000180  6ED9               	movwf	fsr2l,c
  7325  000182  0E03               	movlw	high (_indirectMessages+14)
  7326  000184  20F4               	addwfc	prodh,w,c
  7327  000186  6EDA               	movwf	fsr2h,c
  7328  000188  0103               	movlb	3	; () banked
  7329  00018A  A0DF               	btfss	indf2,0,c
  7330  00018C  D042               	goto	l10270
  7331                           
  7332                           ; BSR set to: 3
  7333                           ;miwi_p2p.c: 393: {
  7334                           ;miwi_p2p.c: 394: tmpTick = MiWi_TickGet();
  7335  00018E  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  7336  000192  C076  F1EC         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  7337  000196  C077  F1ED         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  7338  00019A  C078  F1EE         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  7339  00019E  C079  F1EF         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;miwi_p2p.c: 395: if( (tmpTick.Val - indirectMessages[i].TickStart.Val) > (((uint32_t)(1
      +                          6000000)/32) * 8 * 2) )
  7343  0001A2  0101               	movlb	1	; () banked
  7344  0001A4  51FA               	movf	P2PTasks@i& (0+255),w,b
  7345  0001A6  0D33               	mullw	51
  7346  0001A8  0E72               	movlw	low _indirectMessages
  7347  0001AA  24F3               	addwf	prodl,w,c
  7348  0001AC  6ED9               	movwf	fsr2l,c
  7349  0001AE  0E03               	movlw	high _indirectMessages
  7350  0001B0  20F4               	addwfc	prodh,w,c
  7351  0001B2  6EDA               	movwf	fsr2h,c
  7352  0001B4  CFDE F0C6          	movff	postinc2,??_P2PTasks
  7353  0001B8  CFDE F0C7          	movff	postinc2,??_P2PTasks+1
  7354  0001BC  CFDE F0C8          	movff	postinc2,??_P2PTasks+2
  7355  0001C0  CFDE F0C9          	movff	postinc2,??_P2PTasks+3
  7356  0001C4  0100               	movlb	0	; () banked
  7357  0001C6  51C6               	movf	??_P2PTasks& (0+255),w,b
  7358  0001C8  0101               	movlb	1	; () banked
  7359  0001CA  5DEC               	subwf	P2PTasks@tmpTick& (0+255),w,b
  7360  0001CC  0100               	movlb	0	; () banked
  7361  0001CE  6FCA               	movwf	(??_P2PTasks+4)& (0+255),b
  7362  0001D0  51C7               	movf	(??_P2PTasks+1)& (0+255),w,b
  7363  0001D2  0101               	movlb	1	; () banked
  7364  0001D4  59ED               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  7365  0001D6  0100               	movlb	0	; () banked
  7366  0001D8  6FCB               	movwf	(??_P2PTasks+5)& (0+255),b
  7367  0001DA  51C8               	movf	(??_P2PTasks+2)& (0+255),w,b
  7368  0001DC  0101               	movlb	1	; () banked
  7369  0001DE  59EE               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  7370  0001E0  0100               	movlb	0	; () banked
  7371  0001E2  6FCC               	movwf	(??_P2PTasks+6)& (0+255),b
  7372  0001E4  51C9               	movf	(??_P2PTasks+3)& (0+255),w,b
  7373  0001E6  0101               	movlb	1	; () banked
  7374  0001E8  59EF               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  7375  0001EA  0100               	movlb	0	; () banked
  7376  0001EC  6FCD               	movwf	(??_P2PTasks+7)& (0+255),b
  7377  0001EE  51CD               	movf	(??_P2PTasks+7)& (0+255),w,b
  7378  0001F0  E106               	bnz	u10500
  7379  0001F2  05CA               	decf	(??_P2PTasks+4)& (0+255),w,b
  7380  0001F4  0E12               	movlw	18
  7381  0001F6  59CB               	subwfb	(??_P2PTasks+5)& (0+255),w,b
  7382  0001F8  0E7A               	movlw	122
  7383  0001FA  59CC               	subwfb	(??_P2PTasks+6)& (0+255),w,b
  7384  0001FC  E30A               	bnc	l10270
  7385  0001FE                     u10500:
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;miwi_p2p.c: 396: {
  7389                           ;miwi_p2p.c: 397: indirectMessages[i].flags.Val = 0x00;
  7390  0001FE  0101               	movlb	1	; () banked
  7391  000200  51FA               	movf	P2PTasks@i& (0+255),w,b
  7392  000202  0D33               	mullw	51
  7393  000204  0E80               	movlw	low (_indirectMessages+14)
  7394  000206  24F3               	addwf	prodl,w,c
  7395  000208  6ED9               	movwf	fsr2l,c
  7396  00020A  0E03               	movlw	high (_indirectMessages+14)
  7397  00020C  20F4               	addwfc	prodh,w,c
  7398  00020E  6EDA               	movwf	fsr2h,c
  7399  000210  6ADF               	clrf	indf2,c
  7400  000212                     l10270:
  7401  000212  0101               	movlb	1	; () banked
  7402  000214  2BFA               	incf	P2PTasks@i& (0+255),f,b
  7403                           
  7404                           ; BSR set to: 1
  7405  000216  0E01               	movlw	1
  7406  000218  65FA               	cpfsgt	P2PTasks@i& (0+255),b
  7407  00021A  D7AE               	goto	l10262
  7408                           
  7409                           ; BSR set to: 1
  7410                           ;miwi_p2p.c: 401: }
  7411                           ;miwi_p2p.c: 402: }
  7412                           ;miwi_p2p.c: 403: }
  7413                           ;miwi_p2p.c: 429: if( P2PStatus.bits.SaveConnection )
  7414  00021C  0100               	movlb	0	; () banked
  7415  00021E  A3DC               	btfss	_P2PStatus& (0+255),1,b	;volatile
  7416  000220  D032               	goto	l10282
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;miwi_p2p.c: 430: {
  7420                           ;miwi_p2p.c: 431: tmpTick = MiWi_TickGet();
  7421  000222  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  7422  000226  C076  F1EC         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  7423  00022A  C077  F1ED         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  7424  00022E  C078  F1EE         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  7425  000232  C079  F1EF         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;miwi_p2p.c: 433: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(16000000)/32)) )
  7429  000236  0101               	movlb	1	; () banked
  7430  000238  517F               	movf	_nvmDelayTick& (0+255),w,b
  7431  00023A  5DEC               	subwf	P2PTasks@tmpTick& (0+255),w,b
  7432  00023C  0100               	movlb	0	; () banked
  7433  00023E  6FC6               	movwf	??_P2PTasks& (0+255),b
  7434  000240  0101               	movlb	1	; () banked
  7435  000242  5180               	movf	(_nvmDelayTick+1)& (0+255),w,b
  7436  000244  59ED               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  7437  000246  0100               	movlb	0	; () banked
  7438  000248  6FC7               	movwf	(??_P2PTasks+1)& (0+255),b
  7439  00024A  0101               	movlb	1	; () banked
  7440  00024C  5181               	movf	(_nvmDelayTick+2)& (0+255),w,b
  7441  00024E  59EE               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  7442  000250  0100               	movlb	0	; () banked
  7443  000252  6FC8               	movwf	(??_P2PTasks+2)& (0+255),b
  7444  000254  0101               	movlb	1	; () banked
  7445  000256  5182               	movf	(_nvmDelayTick+3)& (0+255),w,b
  7446  000258  59EF               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  7447  00025A  0100               	movlb	0	; () banked
  7448  00025C  6FC9               	movwf	(??_P2PTasks+3)& (0+255),b
  7449  00025E  51C9               	movf	(??_P2PTasks+3)& (0+255),w,b
  7450  000260  E107               	bnz	u10530
  7451  000262  0E21               	movlw	33
  7452  000264  5DC6               	subwf	??_P2PTasks& (0+255),w,b
  7453  000266  0EA1               	movlw	161
  7454  000268  59C7               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7455  00026A  0E07               	movlw	7
  7456  00026C  59C8               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7457  00026E  E30B               	bnc	l10282
  7458  000270                     u10530:
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;miwi_p2p.c: 434: {
  7462                           ;miwi_p2p.c: 435: P2PStatus.bits.SaveConnection = 0;
  7463  000270  93DC               	bcf	_P2PStatus& (0+255),1,b	;volatile
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;miwi_p2p.c: 436: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)10 * sizeof(CO
      +                          NNECTION_ENTRY));
  7467  000272  0E1E               	movlw	low _ConnectionTable
  7468  000274  6F77               	movwf	EEPROM_Write@dest& (0+255),b
  7469  000276  0E02               	movlw	high _ConnectionTable
  7470  000278  6F78               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  7471  00027A  0E04               	movlw	4
  7472  00027C  6F79               	movwf	EEPROM_Write@addr& (0+255),b
  7473  00027E  0E8C               	movlw	140
  7474  000280  6F7A               	movwf	EEPROM_Write@count& (0+255),b
  7475  000282  EC37  F01A         	call	_EEPROM_Write	;wreg free
  7476  000286                     l10282:
  7477                           
  7478                           ;miwi_p2p.c: 438: }
  7479                           ;miwi_p2p.c: 439: }
  7480                           ;miwi_p2p.c: 457: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
  7481  000286  0100               	movlb	0	; () banked
  7482  000288  B7DC               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  7483  00028A  0012               	return	
  7484                           
  7485                           ; BSR set to: 0
  7486  00028C  EC54  F00F         	call	_MiMAC_ReceivedPacket	;wreg free
  7487  000290  0900               	iorlw	0
  7488  000292  B4D8               	btfsc	status,2,c
  7489  000294  0012               	return	
  7490                           
  7491                           ;miwi_p2p.c: 458: {
  7492                           ;miwi_p2p.c: 459: bool FW_Stat = 0;
  7493  000296  0101               	movlb	1	; () banked
  7494  000298  6BE7               	clrf	P2PTasks@FW_Stat& (0+255),b
  7495                           
  7496                           ;miwi_p2p.c: 460: rxMessage.flags.Val = 0;
  7497  00029A  6A2F               	clrf	_rxMessage,c
  7498                           
  7499                           ; BSR set to: 1
  7500                           ;miwi_p2p.c: 461: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
  7501  00029C  A573               	btfss	_MACRxPacket& (0+255),2,b
  7502  00029E  D004               	goto	u10560
  7503  0002A0  0100               	movlb	0	; () banked
  7504  0002A2  6BC6               	clrf	??_P2PTasks& (0+255),b
  7505  0002A4  2BC6               	incf	??_P2PTasks& (0+255),f,b
  7506  0002A6  D002               	goto	u10568
  7507  0002A8                     u10560:
  7508  0002A8  0100               	movlb	0	; () banked
  7509  0002AA  6BC6               	clrf	??_P2PTasks& (0+255),b
  7510  0002AC                     u10568:
  7511  0002AC  502F               	movf	_rxMessage,w,c
  7512  0002AE  19C6               	xorwf	??_P2PTasks& (0+255),w,b
  7513  0002B0  0BFC               	andlw	-4
  7514  0002B2  19C6               	xorwf	??_P2PTasks& (0+255),w,b
  7515  0002B4  6E2F               	movwf	_rxMessage,c
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;miwi_p2p.c: 462: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
  7519  0002B6  0101               	movlb	1	; () banked
  7520  0002B8  A773               	btfss	_MACRxPacket& (0+255),3,b
  7521  0002BA  D002               	bra	u10575
  7522  0002BC  862F               	bsf	_rxMessage,3,c
  7523  0002BE  D001               	bra	u10577
  7524  0002C0                     u10575:
  7525  0002C0  962F               	bcf	_rxMessage,3,c
  7526  0002C2                     u10577:
  7527                           
  7528                           ;miwi_p2p.c: 463: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
  7529  0002C2  0101               	movlb	1	; () banked
  7530  0002C4  5173               	movf	_MACRxPacket& (0+255),w,b
  7531  0002C6  0B03               	andlw	3
  7532  0002C8  06E8               	decf	wreg,f,c
  7533  0002CA  E104               	bnz	u10580
  7534  0002CC  0100               	movlb	0	; () banked
  7535  0002CE  6BC6               	clrf	??_P2PTasks& (0+255),b
  7536  0002D0  2BC6               	incf	??_P2PTasks& (0+255),f,b
  7537  0002D2  D002               	goto	u10598
  7538  0002D4                     u10580:
  7539  0002D4  0100               	movlb	0	; () banked
  7540  0002D6  6BC6               	clrf	??_P2PTasks& (0+255),b
  7541  0002D8                     u10598:
  7542  0002D8  3BC6               	swapf	??_P2PTasks& (0+255),f,b
  7543  0002DA  47C6               	rlncf	??_P2PTasks& (0+255),f,b
  7544  0002DC  502F               	movf	_rxMessage,w,c
  7545  0002DE  19C6               	xorwf	??_P2PTasks& (0+255),w,b
  7546  0002E0  0BDF               	andlw	-33
  7547  0002E2  19C6               	xorwf	??_P2PTasks& (0+255),w,b
  7548  0002E4  6E2F               	movwf	_rxMessage,c
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;miwi_p2p.c: 464: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
  7552  0002E6  0101               	movlb	1	; () banked
  7553  0002E8  AF73               	btfss	_MACRxPacket& (0+255),7,b
  7554  0002EA  D002               	bra	u10605
  7555  0002EC  8C2F               	bsf	_rxMessage,6,c
  7556  0002EE  D001               	bra	u10607
  7557  0002F0                     u10605:
  7558  0002F0  9C2F               	bcf	_rxMessage,6,c
  7559  0002F2                     u10607:
  7560                           
  7561                           ;miwi_p2p.c: 465: if( MACRxPacket.flags.bits.sourcePrsnt )
  7562  0002F2  0101               	movlb	1	; () banked
  7563  0002F4  AF73               	btfss	_MACRxPacket& (0+255),7,b
  7564  0002F6  D004               	goto	l10298
  7565                           
  7566                           ; BSR set to: 1
  7567                           ;miwi_p2p.c: 466: {
  7568                           ;miwi_p2p.c: 467: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
  7569  0002F8  C174  F032         	movff	_MACRxPacket+1,_rxMessage+3
  7570  0002FC  C175  F033         	movff	_MACRxPacket+2,_rxMessage+4
  7571  000300                     l10298:
  7572                           
  7573                           ; BSR set to: 1
  7574                           ;miwi_p2p.c: 468: }
  7575                           ;miwi_p2p.c: 473: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
  7576  000300  C178  F036         	movff	_MACRxPacket+5,_rxMessage+7
  7577                           
  7578                           ;miwi_p2p.c: 474: rxMessage.Payload = MACRxPacket.Payload;
  7579  000304  C176  F034         	movff	_MACRxPacket+3,_rxMessage+5
  7580  000308  C177  F035         	movff	_MACRxPacket+4,_rxMessage+6
  7581                           
  7582                           ; BSR set to: 1
  7583                           ;miwi_p2p.c: 483: rxMessage.PacketLQI = MACRxPacket.LQIValue;
  7584  00030C  C17A  F038         	movff	_MACRxPacket+7,_rxMessage+9
  7585                           
  7586                           ; BSR set to: 1
  7587                           ;miwi_p2p.c: 484: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
  7588  000310  C179  F037         	movff	_MACRxPacket+6,_rxMessage+8
  7589                           
  7590                           ; BSR set to: 1
  7591                           ;miwi_p2p.c: 487: if( rxMessage.flags.bits.command )
  7592  000314  AA2F               	btfss	_rxMessage,5,c
  7593  000316  D3F5               	goto	l469
  7594  000318  D3C9               	goto	l10640
  7595  00031A                     l10308:
  7596                           
  7597                           ; BSR set to: 1
  7598                           ;miwi_p2p.c: 495: {
  7599                           ;miwi_p2p.c: 497: if(role)
  7600  00031A  0100               	movlb	0	; () banked
  7601  00031C  51E7               	movf	_role& (0+255),w,b
  7602  00031E  E00C               	bz	l10314
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;miwi_p2p.c: 498: {
  7606                           ;miwi_p2p.c: 509: uint8_t status = 0x00;
  7607  000320  0101               	movlb	1	; () banked
  7608  000322  6BF8               	clrf	P2PTasks@status& (0+255),b
  7609                           
  7610                           ; BSR set to: 1
  7611                           ;miwi_p2p.c: 513: if( currentChannel != rxMessage.Payload[1] )
  7612  000324  EE20 F001          	lfsr	2,1
  7613  000328  5034               	movf	_rxMessage+5,w,c
  7614  00032A  26D9               	addwf	fsr2l,f,c
  7615  00032C  5035               	movf	_rxMessage+6,w,c
  7616  00032E  22DA               	addwfc	fsr2h,f,c
  7617  000330  0100               	movlb	0	; () banked
  7618  000332  51E5               	movf	_currentChannel& (0+255),w,b
  7619  000334  18DE               	xorwf	postinc2,w,c
  7620  000336  E003               	bz	l10316
  7621  000338                     l10314:
  7622                           
  7623                           ;miwi_p2p.c: 514: {
  7624                           ;miwi_p2p.c: 515: MiMAC_DiscardPacket();
  7625  000338  EC6F  F020         	call	_MiMAC_DiscardPacket	;wreg free
  7626                           
  7627                           ;miwi_p2p.c: 516: break;
  7628  00033C  D3E4               	goto	l10642
  7629  00033E                     l10316:
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;miwi_p2p.c: 517: }
  7633                           ;miwi_p2p.c: 521: if( ConnMode == 0x03 )
  7634  00033E  0E03               	movlw	3
  7635  000340  19E9               	xorwf	_ConnMode& (0+255),w,b
  7636  000342  E0FA               	bz	l10314
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;miwi_p2p.c: 525: }
  7640                           ;miwi_p2p.c: 537: {
  7641                           ;miwi_p2p.c: 540: status = AddConnection();
  7642  000344  ECF8  F010         	call	_AddConnection	;wreg free
  7643  000348  0101               	movlb	1	; () banked
  7644  00034A  6FF8               	movwf	P2PTasks@status& (0+255),b
  7645                           
  7646                           ; BSR set to: 1
  7647                           ;miwi_p2p.c: 541: }
  7648                           ;miwi_p2p.c: 543: uint8_t p;
  7649                           ;miwi_p2p.c: 544: if (rxMessage.Payload[3] == 0xAA)
  7650  00034C  EE20 F003          	lfsr	2,3
  7651  000350  5034               	movf	_rxMessage+5,w,c
  7652  000352  26D9               	addwf	fsr2l,f,c
  7653  000354  5035               	movf	_rxMessage+6,w,c
  7654  000356  22DA               	addwfc	fsr2h,f,c
  7655  000358  0EAA               	movlw	170
  7656  00035A  18DE               	xorwf	postinc2,w,c
  7657  00035C  E121               	bnz	l10338
  7658                           
  7659                           ; BSR set to: 1
  7660                           ;miwi_p2p.c: 545: {
  7661                           ;miwi_p2p.c: 547: for (p = 0 ;p <10;p++)
  7662  00035E  6BF6               	clrf	P2PTasks@p& (0+255),b
  7663  000360                     l10326:
  7664                           
  7665                           ; BSR set to: 1
  7666  000360  0E09               	movlw	9
  7667  000362  65F6               	cpfsgt	P2PTasks@p& (0+255),b
  7668  000364  D001               	goto	l10330
  7669  000366  D01C               	goto	l10338
  7670  000368                     l10330:
  7671                           
  7672                           ; BSR set to: 1
  7673                           ;miwi_p2p.c: 548: {
  7674                           ;miwi_p2p.c: 549: if (isSameAddress(rxMessage.SourceAddress, ConnectionTable[p].Address)
      +                           )
  7675  000368  C032  F076         	movff	_rxMessage+3,isSameAddress@Address1
  7676  00036C  C033  F077         	movff	_rxMessage+4,isSameAddress@Address1+1
  7677  000370  51F6               	movf	P2PTasks@p& (0+255),w,b
  7678  000372  0D0E               	mullw	14
  7679  000374  0E22               	movlw	low (_ConnectionTable+4)
  7680  000376  24F3               	addwf	prodl,w,c
  7681  000378  0100               	movlb	0	; () banked
  7682  00037A  6F78               	movwf	isSameAddress@Address2& (0+255),b
  7683  00037C  0E02               	movlw	high (_ConnectionTable+4)
  7684  00037E  20F4               	addwfc	prodh,w,c
  7685  000380  6F79               	movwf	(isSameAddress@Address2+1)& (0+255),b
  7686  000382  ECBC  F01F         	call	_isSameAddress	;wreg free
  7687  000386  0900               	iorlw	0
  7688  000388  E008               	bz	l10334
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;miwi_p2p.c: 550: {
  7692                           ;miwi_p2p.c: 551: permanent_connections[p] = 0xFF;
  7693  00038A  0E69               	movlw	low _permanent_connections
  7694  00038C  0101               	movlb	1	; () banked
  7695  00038E  25F6               	addwf	P2PTasks@p& (0+255),w,b
  7696  000390  6ED9               	movwf	fsr2l,c
  7697  000392  6ADA               	clrf	fsr2h,c
  7698  000394  0E01               	movlw	high _permanent_connections
  7699  000396  22DA               	addwfc	fsr2h,f,c
  7700  000398  68DF               	setf	indf2,c
  7701  00039A                     l10334:
  7702  00039A  0101               	movlb	1	; () banked
  7703  00039C  2BF6               	incf	P2PTasks@p& (0+255),f,b
  7704  00039E  D7E0               	goto	l10326
  7705  0003A0                     l10338:
  7706                           
  7707                           ; BSR set to: 1
  7708                           ;miwi_p2p.c: 553: }
  7709                           ;miwi_p2p.c: 555: }
  7710                           ;miwi_p2p.c: 556: }
  7711                           ;miwi_p2p.c: 558: if( (ConnMode == 0x01) && (status != 0x01 && status != 0x02) )
  7712  0003A0  0100               	movlb	0	; () banked
  7713  0003A2  05E9               	decf	_ConnMode& (0+255),w,b
  7714  0003A4  E108               	bnz	l10352
  7715                           
  7716                           ; BSR set to: 0
  7717  0003A6  0101               	movlb	1	; () banked
  7718  0003A8  05F8               	decf	P2PTasks@status& (0+255),w,b
  7719  0003AA  E005               	bz	l10352
  7720                           
  7721                           ; BSR set to: 1
  7722  0003AC  0E02               	movlw	2
  7723  0003AE  19F8               	xorwf	P2PTasks@status& (0+255),w,b
  7724  0003B0  E002               	bz	l10352
  7725                           
  7726                           ; BSR set to: 1
  7727                           ;miwi_p2p.c: 559: {
  7728                           ;miwi_p2p.c: 560: status = 0xF3;
  7729  0003B2  0EF3               	movlw	243
  7730  0003B4  6FF8               	movwf	P2PTasks@status& (0+255),b
  7731  0003B6                     l10352:
  7732                           
  7733                           ;miwi_p2p.c: 568: }
  7734                           ;miwi_p2p.c: 572: {TxData = 0;};
  7735  0003B6  0100               	movlb	0	; () banked
  7736  0003B8  6BDF               	clrf	_TxData& (0+255),b
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;miwi_p2p.c: 573: TxBuffer[TxData++] = 0x91;
  7740  0003BA  0E95               	movlw	low _TxBuffer
  7741  0003BC  25DF               	addwf	_TxData& (0+255),w,b
  7742  0003BE  6ED9               	movwf	fsr2l,c
  7743  0003C0  6ADA               	clrf	fsr2h,c
  7744  0003C2  0E01               	movlw	high _TxBuffer
  7745  0003C4  22DA               	addwfc	fsr2h,f,c
  7746  0003C6  0E91               	movlw	145
  7747  0003C8  6EDF               	movwf	indf2,c
  7748                           
  7749                           ; BSR set to: 0
  7750  0003CA  2BDF               	incf	_TxData& (0+255),f,b
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;miwi_p2p.c: 574: TxBuffer[TxData++] = status;
  7754  0003CC  0E95               	movlw	low _TxBuffer
  7755  0003CE  25DF               	addwf	_TxData& (0+255),w,b
  7756  0003D0  6ED9               	movwf	fsr2l,c
  7757  0003D2  6ADA               	clrf	fsr2h,c
  7758  0003D4  0E01               	movlw	high _TxBuffer
  7759  0003D6  22DA               	addwfc	fsr2h,f,c
  7760  0003D8  C1F8  FFDF         	movff	P2PTasks@status,indf2
  7761                           
  7762                           ; BSR set to: 0
  7763  0003DC  2BDF               	incf	_TxData& (0+255),f,b
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;miwi_p2p.c: 575: TxBuffer[TxData++] = MyindexinPC;
  7767  0003DE  0E95               	movlw	low _TxBuffer
  7768  0003E0  25DF               	addwf	_TxData& (0+255),w,b
  7769  0003E2  6ED9               	movwf	fsr2l,c
  7770  0003E4  6ADA               	clrf	fsr2h,c
  7771  0003E6  0E01               	movlw	high _TxBuffer
  7772  0003E8  22DA               	addwfc	fsr2h,f,c
  7773  0003EA  C03F  FFDF         	movff	_MyindexinPC,indf2
  7774                           
  7775                           ; BSR set to: 0
  7776  0003EE  2BDF               	incf	_TxData& (0+255),f,b
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;miwi_p2p.c: 576: if( status == 0x00 ||
  7780                           ;miwi_p2p.c: 577: status == 0x01 )
  7781  0003F0  0101               	movlb	1	; () banked
  7782  0003F2  51F8               	movf	P2PTasks@status& (0+255),w,b
  7783  0003F4  E002               	bz	l10370
  7784                           
  7785                           ; BSR set to: 1
  7786  0003F6  05F8               	decf	P2PTasks@status& (0+255),w,b
  7787  0003F8  E11E               	bnz	l10388
  7788  0003FA                     l10370:
  7789                           
  7790                           ; BSR set to: 1
  7791                           ;miwi_p2p.c: 578: {
  7792                           ;miwi_p2p.c: 579: TxBuffer[TxData++] = P2PCapacityInfo;
  7793  0003FA  0E95               	movlw	low _TxBuffer
  7794  0003FC  0100               	movlb	0	; () banked
  7795  0003FE  25DF               	addwf	_TxData& (0+255),w,b
  7796  000400  6ED9               	movwf	fsr2l,c
  7797  000402  6ADA               	clrf	fsr2h,c
  7798  000404  0E01               	movlw	high _TxBuffer
  7799  000406  22DA               	addwfc	fsr2h,f,c
  7800  000408  C0DB  FFDF         	movff	_P2PCapacityInfo,indf2
  7801                           
  7802                           ; BSR set to: 0
  7803  00040C  2BDF               	incf	_TxData& (0+255),f,b
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;miwi_p2p.c: 581: for(i = 0; i < 1; i++)
  7807  00040E  0101               	movlb	1	; () banked
  7808  000410  6BFA               	clrf	P2PTasks@i& (0+255),b
  7809  000412                     l10380:
  7810                           
  7811                           ; BSR set to: 1
  7812                           ;miwi_p2p.c: 582: {
  7813                           ;miwi_p2p.c: 583: TxBuffer[TxData++] = AdditionalNodeID[i];
  7814  000412  51FA               	movf	P2PTasks@i& (0+255),w,b
  7815  000414  0FE8               	addlw	low _AdditionalNodeID
  7816  000416  6ED9               	movwf	fsr2l,c
  7817  000418  6ADA               	clrf	fsr2h,c
  7818  00041A  0E95               	movlw	low _TxBuffer
  7819  00041C  0100               	movlb	0	; () banked
  7820  00041E  25DF               	addwf	_TxData& (0+255),w,b
  7821  000420  6EE1               	movwf	fsr1l,c
  7822  000422  6AE2               	clrf	fsr1h,c
  7823  000424  0E01               	movlw	high _TxBuffer
  7824  000426  22E2               	addwfc	fsr1h,f,c
  7825  000428  CFDF FFE7          	movff	indf2,indf1
  7826                           
  7827                           ; BSR set to: 0
  7828  00042C  2BDF               	incf	_TxData& (0+255),f,b
  7829                           
  7830                           ; BSR set to: 0
  7831  00042E  0101               	movlb	1	; () banked
  7832  000430  2BFA               	incf	P2PTasks@i& (0+255),f,b
  7833                           
  7834                           ; BSR set to: 1
  7835  000432  51FA               	movf	P2PTasks@i& (0+255),w,b
  7836  000434  E0EE               	bz	l10380
  7837  000436                     l10388:
  7838                           
  7839                           ; BSR set to: 1
  7840                           ;miwi_p2p.c: 584: }
  7841                           ;miwi_p2p.c: 586: }
  7842                           ;miwi_p2p.c: 588: MiMAC_DiscardPacket();
  7843  000436  EC6F  F020         	call	_MiMAC_DiscardPacket	;wreg free
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;miwi_p2p.c: 602: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  7847  00043A  C032  F0A3         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7848  00043E  C033  F0A4         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7849  000442  0E01               	movlw	1
  7850  000444  6FA5               	movwf	SendPacket@isCommand& (0+255),b
  7851  000446  0E00               	movlw	0
  7852  000448  B62F               	btfsc	_rxMessage,3,c
  7853  00044A  0E01               	movlw	1
  7854  00044C  6FA6               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7855  00044E  0E00               	movlw	0
  7856  000450  ECE1  F017         	call	_SendPacket
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;miwi_p2p.c: 607: MiApp_BroadcastConnectionTable ();
  7860  000454  EC51  F00D         	call	_MiApp_BroadcastConnectionTable	;wreg free
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;miwi_p2p.c: 610: if( status == 0x00 )
  7864  000458  0101               	movlb	1	; () banked
  7865  00045A  51F8               	movf	P2PTasks@status& (0+255),w,b
  7866  00045C  E001 D353          	bnz	l10642
  7867                           
  7868                           ; BSR set to: 1
  7869                           ;miwi_p2p.c: 611: {
  7870                           ;miwi_p2p.c: 612: EEPROM_Write((uint8_t *)&(ConnectionTable[LatestConnection]), 0x04+((u
      +                          int16_t)LatestConnection * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7871  000460  0100               	movlb	0	; () banked
  7872  000462  51DA               	movf	_LatestConnection& (0+255),w,b
  7873  000464  0D0E               	mullw	14
  7874  000466  0E1E               	movlw	low _ConnectionTable
  7875  000468  24F3               	addwf	prodl,w,c
  7876  00046A  6F77               	movwf	EEPROM_Write@dest& (0+255),b
  7877  00046C  0E02               	movlw	high _ConnectionTable
  7878  00046E  20F4               	addwfc	prodh,w,c
  7879  000470  6F78               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  7880  000472  51DA               	movf	_LatestConnection& (0+255),w,b
  7881  000474  0D0E               	mullw	14
  7882  000476  50F3               	movf	prodl,w,c
  7883  000478  0F04               	addlw	4
  7884  00047A  6F79               	movwf	EEPROM_Write@addr& (0+255),b
  7885  00047C  0E0E               	movlw	14
  7886  00047E  6F7A               	movwf	EEPROM_Write@count& (0+255),b
  7887  000480  EC37  F01A         	call	_EEPROM_Write	;wreg free
  7888  000484  D340               	goto	l10642
  7889  000486                     l10400:
  7890                           
  7891                           ; BSR set to: 1
  7892                           ;miwi_p2p.c: 631: {
  7893                           ;miwi_p2p.c: 632: if(ConnMode > 0x02)
  7894  000486  0E02               	movlw	2
  7895  000488  0100               	movlb	0	; () banked
  7896  00048A  65E9               	cpfsgt	_ConnMode& (0+255),b
  7897  00048C  D001               	goto	l10404
  7898  00048E  D754               	goto	l10314
  7899  000490                     l10404:
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;miwi_p2p.c: 636: }
  7903                           ;miwi_p2p.c: 637: if( currentChannel != rxMessage.Payload[1] )
  7904  000490  EE20 F001          	lfsr	2,1
  7905  000494  5034               	movf	_rxMessage+5,w,c
  7906  000496  26D9               	addwf	fsr2l,f,c
  7907  000498  5035               	movf	_rxMessage+6,w,c
  7908  00049A  22DA               	addwfc	fsr2h,f,c
  7909  00049C  51E5               	movf	_currentChannel& (0+255),w,b
  7910  00049E  18DE               	xorwf	postinc2,w,c
  7911  0004A0  E001 D74A          	bnz	l10314
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;miwi_p2p.c: 641: }
  7915                           ;miwi_p2p.c: 643: {TxData = 0;};
  7916  0004A4  6BDF               	clrf	_TxData& (0+255),b
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;miwi_p2p.c: 644: TxBuffer[TxData++] = 0x97;
  7920  0004A6  0E95               	movlw	low _TxBuffer
  7921  0004A8  25DF               	addwf	_TxData& (0+255),w,b
  7922  0004AA  6ED9               	movwf	fsr2l,c
  7923  0004AC  6ADA               	clrf	fsr2h,c
  7924  0004AE  0E01               	movlw	high _TxBuffer
  7925  0004B0  22DA               	addwfc	fsr2h,f,c
  7926  0004B2  0E97               	movlw	151
  7927  0004B4  6EDF               	movwf	indf2,c
  7928                           
  7929                           ; BSR set to: 0
  7930  0004B6  2BDF               	incf	_TxData& (0+255),f,b
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = P2PCapacityInfo;
  7934  0004B8  0E95               	movlw	low _TxBuffer
  7935  0004BA  25DF               	addwf	_TxData& (0+255),w,b
  7936  0004BC  6ED9               	movwf	fsr2l,c
  7937  0004BE  6ADA               	clrf	fsr2h,c
  7938  0004C0  0E01               	movlw	high _TxBuffer
  7939  0004C2  22DA               	addwfc	fsr2h,f,c
  7940  0004C4  C0DB  FFDF         	movff	_P2PCapacityInfo,indf2
  7941  0004C8  2BDF               	incf	_TxData& (0+255),f,b
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;miwi_p2p.c: 647: for(i = 0; i < 1; i++)
  7945  0004CA  0101               	movlb	1	; () banked
  7946  0004CC  6BFA               	clrf	P2PTasks@i& (0+255),b
  7947  0004CE                     l10420:
  7948                           
  7949                           ; BSR set to: 1
  7950                           ;miwi_p2p.c: 648: {
  7951                           ;miwi_p2p.c: 649: TxBuffer[TxData++] = AdditionalNodeID[i];
  7952  0004CE  51FA               	movf	P2PTasks@i& (0+255),w,b
  7953  0004D0  0FE8               	addlw	low _AdditionalNodeID
  7954  0004D2  6ED9               	movwf	fsr2l,c
  7955  0004D4  6ADA               	clrf	fsr2h,c
  7956  0004D6  0E95               	movlw	low _TxBuffer
  7957  0004D8  0100               	movlb	0	; () banked
  7958  0004DA  25DF               	addwf	_TxData& (0+255),w,b
  7959  0004DC  6EE1               	movwf	fsr1l,c
  7960  0004DE  6AE2               	clrf	fsr1h,c
  7961  0004E0  0E01               	movlw	high _TxBuffer
  7962  0004E2  22E2               	addwfc	fsr1h,f,c
  7963  0004E4  CFDF FFE7          	movff	indf2,indf1
  7964                           
  7965                           ; BSR set to: 0
  7966  0004E8  2BDF               	incf	_TxData& (0+255),f,b
  7967                           
  7968                           ; BSR set to: 0
  7969  0004EA  0101               	movlb	1	; () banked
  7970  0004EC  2BFA               	incf	P2PTasks@i& (0+255),f,b
  7971                           
  7972                           ; BSR set to: 1
  7973  0004EE  51FA               	movf	P2PTasks@i& (0+255),w,b
  7974  0004F0  E0EE               	bz	l10420
  7975                           
  7976                           ; BSR set to: 1
  7977                           ;miwi_p2p.c: 650: }
  7978                           ;miwi_p2p.c: 652: MiMAC_DiscardPacket();
  7979  0004F2  EC6F  F020         	call	_MiMAC_DiscardPacket	;wreg free
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;miwi_p2p.c: 665: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  7983  0004F6  C032  F0A3         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7984  0004FA  C033  F0A4         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7985  0004FE  0E01               	movlw	1
  7986  000500  6FA5               	movwf	SendPacket@isCommand& (0+255),b
  7987  000502  0E00               	movlw	0
  7988  000504  B62F               	btfsc	_rxMessage,3,c
  7989  000506  0E01               	movlw	1
  7990  000508  6FA6               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7991  00050A  0E00               	movlw	0
  7992  00050C  ECE1  F017         	call	_SendPacket
  7993                           
  7994                           ;miwi_p2p.c: 668: }
  7995                           ;miwi_p2p.c: 669: break;
  7996  000510  D2FA               	goto	l10642
  7997  000512                     l496:
  7998                           
  7999                           ; BSR set to: 1
  8000                           ;miwi_p2p.c: 677: {
  8001                           ;miwi_p2p.c: 678: {TxData = 0;};
  8002  000512  0100               	movlb	0	; () banked
  8003  000514  6BDF               	clrf	_TxData& (0+255),b
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;miwi_p2p.c: 679: TxBuffer[TxData++] = 0x92;
  8007  000516  0E95               	movlw	low _TxBuffer
  8008  000518  25DF               	addwf	_TxData& (0+255),w,b
  8009  00051A  6ED9               	movwf	fsr2l,c
  8010  00051C  6ADA               	clrf	fsr2h,c
  8011  00051E  0E01               	movlw	high _TxBuffer
  8012  000520  22DA               	addwfc	fsr2h,f,c
  8013  000522  0E92               	movlw	146
  8014  000524  6EDF               	movwf	indf2,c
  8015                           
  8016                           ; BSR set to: 0
  8017  000526  2BDF               	incf	_TxData& (0+255),f,b
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;miwi_p2p.c: 681: for(i = 0; i < 10; i++)
  8021  000528  0101               	movlb	1	; () banked
  8022  00052A  6BFA               	clrf	P2PTasks@i& (0+255),b
  8023  00052C                     l10442:
  8024                           
  8025                           ; BSR set to: 1
  8026                           ;miwi_p2p.c: 682: {
  8027                           ;miwi_p2p.c: 684: if( ConnectionTable[i].status.bits.isValid )
  8028  00052C  51FA               	movf	P2PTasks@i& (0+255),w,b
  8029  00052E  0D0E               	mullw	14
  8030  000530  0E2A               	movlw	low (_ConnectionTable+12)
  8031  000532  24F3               	addwf	prodl,w,c
  8032  000534  6ED9               	movwf	fsr2l,c
  8033  000536  0E02               	movlw	high (_ConnectionTable+12)
  8034  000538  20F4               	addwfc	prodh,w,c
  8035  00053A  6EDA               	movwf	fsr2h,c
  8036  00053C  AEDF               	btfss	indf2,7,c
  8037  00053E  D03A               	goto	l10454
  8038                           
  8039                           ; BSR set to: 2
  8040                           ;miwi_p2p.c: 685: {
  8041                           ;miwi_p2p.c: 687: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  8042  000540  C032  F076         	movff	_rxMessage+3,isSameAddress@Address1
  8043  000544  C033  F077         	movff	_rxMessage+4,isSameAddress@Address1+1
  8044  000548  0101               	movlb	1	; () banked
  8045  00054A  51FA               	movf	P2PTasks@i& (0+255),w,b
  8046  00054C  0D0E               	mullw	14
  8047  00054E  0E22               	movlw	low (_ConnectionTable+4)
  8048  000550  24F3               	addwf	prodl,w,c
  8049  000552  0100               	movlb	0	; () banked
  8050  000554  6F78               	movwf	isSameAddress@Address2& (0+255),b
  8051  000556  0E02               	movlw	high (_ConnectionTable+4)
  8052  000558  20F4               	addwfc	prodh,w,c
  8053  00055A  6F79               	movwf	(isSameAddress@Address2+1)& (0+255),b
  8054  00055C  ECBC  F01F         	call	_isSameAddress	;wreg free
  8055  000560  0900               	iorlw	0
  8056  000562  E028               	bz	l10454
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;miwi_p2p.c: 688: {
  8060                           ;miwi_p2p.c: 691: ConnectionTable[i].status.Val = 0;
  8061  000564  0101               	movlb	1	; () banked
  8062  000566  51FA               	movf	P2PTasks@i& (0+255),w,b
  8063  000568  0D0E               	mullw	14
  8064  00056A  0E2A               	movlw	low (_ConnectionTable+12)
  8065  00056C  24F3               	addwf	prodl,w,c
  8066  00056E  6ED9               	movwf	fsr2l,c
  8067  000570  0E02               	movlw	high (_ConnectionTable+12)
  8068  000572  20F4               	addwfc	prodh,w,c
  8069  000574  6EDA               	movwf	fsr2h,c
  8070  000576  6ADF               	clrf	indf2,c
  8071                           
  8072                           ; BSR set to: 1
  8073                           ;miwi_p2p.c: 693: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * siz
      +                          eof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  8074  000578  51FA               	movf	P2PTasks@i& (0+255),w,b
  8075  00057A  0D0E               	mullw	14
  8076  00057C  0E1E               	movlw	low _ConnectionTable
  8077  00057E  24F3               	addwf	prodl,w,c
  8078  000580  0100               	movlb	0	; () banked
  8079  000582  6F77               	movwf	EEPROM_Write@dest& (0+255),b
  8080  000584  0E02               	movlw	high _ConnectionTable
  8081  000586  20F4               	addwfc	prodh,w,c
  8082  000588  6F78               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  8083  00058A  0101               	movlb	1	; () banked
  8084  00058C  51FA               	movf	P2PTasks@i& (0+255),w,b
  8085  00058E  0D0E               	mullw	14
  8086  000590  50F3               	movf	prodl,w,c
  8087  000592  0F04               	addlw	4
  8088  000594  0100               	movlb	0	; () banked
  8089  000596  6F79               	movwf	EEPROM_Write@addr& (0+255),b
  8090  000598  0E0E               	movlw	14
  8091  00059A  6F7A               	movwf	EEPROM_Write@count& (0+255),b
  8092  00059C  EC37  F01A         	call	_EEPROM_Write	;wreg free
  8093                           
  8094                           ;miwi_p2p.c: 695: TxBuffer[TxData++] = 0x00;
  8095  0005A0  0E95               	movlw	low _TxBuffer
  8096  0005A2  0100               	movlb	0	; () banked
  8097  0005A4  25DF               	addwf	_TxData& (0+255),w,b
  8098  0005A6  6ED9               	movwf	fsr2l,c
  8099  0005A8  6ADA               	clrf	fsr2h,c
  8100  0005AA  0E01               	movlw	high _TxBuffer
  8101  0005AC  22DA               	addwfc	fsr2h,f,c
  8102  0005AE  6ADF               	clrf	indf2,c
  8103                           
  8104                           ; BSR set to: 0
  8105  0005B0  2BDF               	incf	_TxData& (0+255),f,b
  8106                           
  8107                           ;miwi_p2p.c: 697: break;
  8108  0005B2  D005               	goto	l10458
  8109  0005B4                     l10454:
  8110  0005B4  0101               	movlb	1	; () banked
  8111  0005B6  2BFA               	incf	P2PTasks@i& (0+255),f,b
  8112                           
  8113                           ; BSR set to: 1
  8114  0005B8  0E09               	movlw	9
  8115  0005BA  65FA               	cpfsgt	P2PTasks@i& (0+255),b
  8116  0005BC  D7B7               	goto	l10442
  8117  0005BE                     l10458:
  8118                           
  8119                           ;miwi_p2p.c: 698: }
  8120                           ;miwi_p2p.c: 699: }
  8121                           ;miwi_p2p.c: 700: }
  8122                           ;miwi_p2p.c: 702: MiMAC_DiscardPacket();
  8123  0005BE  EC6F  F020         	call	_MiMAC_DiscardPacket	;wreg free
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;miwi_p2p.c: 704: if( i == 10 )
  8127  0005C2  0E0A               	movlw	10
  8128  0005C4  0101               	movlb	1	; () banked
  8129  0005C6  19FA               	xorwf	P2PTasks@i& (0+255),w,b
  8130  0005C8  E10A               	bnz	l10466
  8131                           
  8132                           ; BSR set to: 1
  8133                           ;miwi_p2p.c: 705: {
  8134                           ;miwi_p2p.c: 707: TxBuffer[TxData++] = 0xF0;
  8135  0005CA  0E95               	movlw	low _TxBuffer
  8136  0005CC  0100               	movlb	0	; () banked
  8137  0005CE  25DF               	addwf	_TxData& (0+255),w,b
  8138  0005D0  6ED9               	movwf	fsr2l,c
  8139  0005D2  6ADA               	clrf	fsr2h,c
  8140  0005D4  0E01               	movlw	high _TxBuffer
  8141  0005D6  22DA               	addwfc	fsr2h,f,c
  8142  0005D8  0EF0               	movlw	240
  8143  0005DA  6EDF               	movwf	indf2,c
  8144                           
  8145                           ; BSR set to: 0
  8146  0005DC  2BDF               	incf	_TxData& (0+255),f,b
  8147  0005DE                     l10466:
  8148                           
  8149                           ;miwi_p2p.c: 708: }
  8150                           ;miwi_p2p.c: 719: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  8151  0005DE  C032  F0A3         	movff	_rxMessage+3,SendPacket@DestinationAddress
  8152  0005E2  C033  F0A4         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  8153  0005E6  0E01               	movlw	1
  8154  0005E8  0100               	movlb	0	; () banked
  8155  0005EA  6FA5               	movwf	SendPacket@isCommand& (0+255),b
  8156  0005EC  0E00               	movlw	0
  8157  0005EE  B62F               	btfsc	_rxMessage,3,c
  8158  0005F0  0E01               	movlw	1
  8159  0005F2  6FA6               	movwf	SendPacket@SecurityEnabled& (0+255),b
  8160  0005F4  0E00               	movlw	0
  8161  0005F6  ECE1  F017         	call	_SendPacket
  8162                           
  8163                           ;miwi_p2p.c: 723: }
  8164                           ;miwi_p2p.c: 724: break;
  8165  0005FA  D285               	goto	l10642
  8166  0005FC                     l10468:
  8167                           
  8168                           ; BSR set to: 1
  8169                           ;miwi_p2p.c: 732: case 0x01:
  8170                           ;miwi_p2p.c: 746: AddConnection();
  8171  0005FC  ECF8  F010         	call	_AddConnection	;wreg free
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;miwi_p2p.c: 748: myConnectionIndex_in_PanCo = rxMessage.Payload[2];
  8175  000600  EE20 F002          	lfsr	2,2
  8176  000604  5034               	movf	_rxMessage+5,w,c
  8177  000606  26D9               	addwf	fsr2l,f,c
  8178  000608  5035               	movf	_rxMessage+6,w,c
  8179  00060A  22DA               	addwfc	fsr2h,f,c
  8180  00060C  50DF               	movf	indf2,w,c
  8181  00060E  6FE6               	movwf	_myConnectionIndex_in_PanCo& (0+255),b
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;miwi_p2p.c: 749: EEPROM_Write( (uint8_t *)&myConnectionIndex_in_PanCo, 0xBB, 1);
  8185  000610  0EE6               	movlw	low _myConnectionIndex_in_PanCo
  8186  000612  6F77               	movwf	EEPROM_Write@dest& (0+255),b
  8187  000614  6B78               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  8188  000616  0EBB               	movlw	187
  8189  000618  6F79               	movwf	EEPROM_Write@addr& (0+255),b
  8190  00061A  0E01               	movlw	1
  8191  00061C  6F7A               	movwf	EEPROM_Write@count& (0+255),b
  8192  00061E  EC37  F01A         	call	_EEPROM_Write	;wreg free
  8193                           
  8194                           ;miwi_p2p.c: 753: P2PStatus.bits.SaveConnection = 1;
  8195  000622  0100               	movlb	0	; () banked
  8196  000624  83DC               	bsf	_P2PStatus& (0+255),1,b	;volatile
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;miwi_p2p.c: 754: nvmDelayTick = MiWi_TickGet();
  8200  000626  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  8201  00062A  C076  F17F         	movff	?_MiWi_TickGet,_nvmDelayTick
  8202  00062E  C077  F180         	movff	?_MiWi_TickGet+1,_nvmDelayTick+1
  8203  000632  C078  F181         	movff	?_MiWi_TickGet+2,_nvmDelayTick+2
  8204  000636  C079  F182         	movff	?_MiWi_TickGet+3,_nvmDelayTick+3
  8205                           
  8206                           ;miwi_p2p.c: 756: break;
  8207  00063A  D67E               	goto	l10314
  8208  00063C                     l10480:
  8209                           
  8210                           ; BSR set to: 1
  8211  00063C  EE20 F001          	lfsr	2,1
  8212  000640  5034               	movf	_rxMessage+5,w,c
  8213  000642  26D9               	addwf	fsr2l,f,c
  8214  000644  5035               	movf	_rxMessage+6,w,c
  8215  000646  22DA               	addwfc	fsr2h,f,c
  8216  000648  50DF               	movf	indf2,w,c
  8217                           
  8218                           ; Switch size 1, requested type "speed"
  8219                           ; Number of cases is 2, Range of values is 0 to 1
  8220                           ; switch strategies available:
  8221                           ; Name         Instructions Cycles
  8222                           ; simple_byte            7     4 (average)
  8223                           ;	Chosen strategy is simple_byte
  8224  00064A  E0D8               	bz	l10468
  8225  00064C  0A01               	xorlw	1	; case 1
  8226  00064E  E0D6               	bz	l10468
  8227  000650  D673               	goto	l10314
  8228  000652                     l508:
  8229                           
  8230                           ; BSR set to: 1
  8231                           ;miwi_p2p.c: 766: {
  8232                           ;miwi_p2p.c: 767: if( P2PStatus.bits.Resync )
  8233  000652  0100               	movlb	0	; () banked
  8234  000654  BBDC               	btfsc	_P2PStatus& (0+255),5,b	;volatile
  8235                           
  8236                           ; BSR set to: 0
  8237                           ;miwi_p2p.c: 768: {
  8238                           ;miwi_p2p.c: 769: P2PStatus.bits.Resync = 0;
  8239  000656  9BDC               	bcf	_P2PStatus& (0+255),5,b	;volatile
  8240  000658  D66F               	goto	l10314
  8241  00065A                     l10488:
  8242                           
  8243                           ; BSR set to: 1
  8244                           ;miwi_p2p.c: 817: {
  8245                           ;miwi_p2p.c: 818: if( rxMessage.Payload[1] == 0x00 )
  8246  00065A  EE20 F001          	lfsr	2,1
  8247  00065E  5034               	movf	_rxMessage+5,w,c
  8248  000660  26D9               	addwf	fsr2l,f,c
  8249  000662  5035               	movf	_rxMessage+6,w,c
  8250  000664  22DA               	addwfc	fsr2h,f,c
  8251  000666  50DF               	movf	indf2,w,c
  8252  000668  E001 D666          	bnz	l10314
  8253                           
  8254                           ; BSR set to: 1
  8255                           ;miwi_p2p.c: 819: {
  8256                           ;miwi_p2p.c: 820: for(i = 0; i < 10; i++)
  8257  00066C  6BFA               	clrf	P2PTasks@i& (0+255),b
  8258  00066E                     l10496:
  8259                           
  8260                           ; BSR set to: 1
  8261                           ;miwi_p2p.c: 821: {
  8262                           ;miwi_p2p.c: 823: if( ConnectionTable[i].status.bits.isValid )
  8263  00066E  51FA               	movf	P2PTasks@i& (0+255),w,b
  8264  000670  0D0E               	mullw	14
  8265  000672  0E2A               	movlw	low (_ConnectionTable+12)
  8266  000674  24F3               	addwf	prodl,w,c
  8267  000676  6ED9               	movwf	fsr2l,c
  8268  000678  0E02               	movlw	high (_ConnectionTable+12)
  8269  00067A  20F4               	addwfc	prodh,w,c
  8270  00067C  6EDA               	movwf	fsr2h,c
  8271  00067E  AEDF               	btfss	indf2,7,c
  8272  000680  D031               	goto	l10504
  8273                           
  8274                           ; BSR set to: 2
  8275                           ;miwi_p2p.c: 824: {
  8276                           ;miwi_p2p.c: 826: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  8277  000682  C032  F076         	movff	_rxMessage+3,isSameAddress@Address1
  8278  000686  C033  F077         	movff	_rxMessage+4,isSameAddress@Address1+1
  8279  00068A  0101               	movlb	1	; () banked
  8280  00068C  51FA               	movf	P2PTasks@i& (0+255),w,b
  8281  00068E  0D0E               	mullw	14
  8282  000690  0E22               	movlw	low (_ConnectionTable+4)
  8283  000692  24F3               	addwf	prodl,w,c
  8284  000694  0100               	movlb	0	; () banked
  8285  000696  6F78               	movwf	isSameAddress@Address2& (0+255),b
  8286  000698  0E02               	movlw	high (_ConnectionTable+4)
  8287  00069A  20F4               	addwfc	prodh,w,c
  8288  00069C  6F79               	movwf	(isSameAddress@Address2+1)& (0+255),b
  8289  00069E  ECBC  F01F         	call	_isSameAddress	;wreg free
  8290  0006A2  0900               	iorlw	0
  8291  0006A4  E01F               	bz	l10504
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;miwi_p2p.c: 827: {
  8295                           ;miwi_p2p.c: 829: ConnectionTable[i].status.Val = 0;
  8296  0006A6  0101               	movlb	1	; () banked
  8297  0006A8  51FA               	movf	P2PTasks@i& (0+255),w,b
  8298  0006AA  0D0E               	mullw	14
  8299  0006AC  0E2A               	movlw	low (_ConnectionTable+12)
  8300  0006AE  24F3               	addwf	prodl,w,c
  8301  0006B0  6ED9               	movwf	fsr2l,c
  8302  0006B2  0E02               	movlw	high (_ConnectionTable+12)
  8303  0006B4  20F4               	addwfc	prodh,w,c
  8304  0006B6  6EDA               	movwf	fsr2h,c
  8305  0006B8  6ADF               	clrf	indf2,c
  8306                           
  8307                           ; BSR set to: 1
  8308                           ;miwi_p2p.c: 831: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * siz
      +                          eof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  8309  0006BA  51FA               	movf	P2PTasks@i& (0+255),w,b
  8310  0006BC  0D0E               	mullw	14
  8311  0006BE  0E1E               	movlw	low _ConnectionTable
  8312  0006C0  24F3               	addwf	prodl,w,c
  8313  0006C2  0100               	movlb	0	; () banked
  8314  0006C4  6F77               	movwf	EEPROM_Write@dest& (0+255),b
  8315  0006C6  0E02               	movlw	high _ConnectionTable
  8316  0006C8  20F4               	addwfc	prodh,w,c
  8317  0006CA  6F78               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  8318  0006CC  0101               	movlb	1	; () banked
  8319  0006CE  51FA               	movf	P2PTasks@i& (0+255),w,b
  8320  0006D0  0D0E               	mullw	14
  8321  0006D2  50F3               	movf	prodl,w,c
  8322  0006D4  0F04               	addlw	4
  8323  0006D6  0100               	movlb	0	; () banked
  8324  0006D8  6F79               	movwf	EEPROM_Write@addr& (0+255),b
  8325  0006DA  0E0E               	movlw	14
  8326  0006DC  6F7A               	movwf	EEPROM_Write@count& (0+255),b
  8327  0006DE  EC37  F01A         	call	_EEPROM_Write	;wreg free
  8328                           
  8329                           ;miwi_p2p.c: 833: break;
  8330  0006E2  D62A               	goto	l10314
  8331  0006E4                     l10504:
  8332  0006E4  0101               	movlb	1	; () banked
  8333  0006E6  2BFA               	incf	P2PTasks@i& (0+255),f,b
  8334                           
  8335                           ; BSR set to: 1
  8336  0006E8  0E09               	movlw	9
  8337  0006EA  65FA               	cpfsgt	P2PTasks@i& (0+255),b
  8338  0006EC  D7C0               	goto	l10496
  8339  0006EE  D624               	goto	l10314
  8340  0006F0                     l517:
  8341                           
  8342                           ; BSR set to: 1
  8343                           ;miwi_p2p.c: 846: case 0x04:
  8344                           ;miwi_p2p.c: 847: {
  8345                           ;miwi_p2p.c: 848: bool isCommand = 0;
  8346  0006F0  6BF1               	clrf	P2PTasks@isCommand& (0+255),b
  8347                           
  8348                           ;miwi_p2p.c: 849: MIWI_TICK tmpW;
  8349                           ;miwi_p2p.c: 851: {TxData = 0;};
  8350  0006F2  0100               	movlb	0	; () banked
  8351  0006F4  6BDF               	clrf	_TxData& (0+255),b
  8352                           
  8353                           ;miwi_p2p.c: 874: for(i = 0; i < 2; i++)
  8354  0006F6  0101               	movlb	1	; () banked
  8355  0006F8  6BFA               	clrf	P2PTasks@i& (0+255),b
  8356  0006FA                     l10514:
  8357                           
  8358                           ; BSR set to: 1
  8359                           ;miwi_p2p.c: 875: {
  8360                           ;miwi_p2p.c: 876: if( indirectMessages[i].flags.bits.isValid )
  8361  0006FA  51FA               	movf	P2PTasks@i& (0+255),w,b
  8362  0006FC  0D33               	mullw	51
  8363  0006FE  0E80               	movlw	low (_indirectMessages+14)
  8364  000700  24F3               	addwf	prodl,w,c
  8365  000702  6ED9               	movwf	fsr2l,c
  8366  000704  0E03               	movlw	high (_indirectMessages+14)
  8367  000706  20F4               	addwfc	prodh,w,c
  8368  000708  6EDA               	movwf	fsr2h,c
  8369  00070A  A0DF               	btfss	indf2,0,c
  8370  00070C  D11E               	goto	l10562
  8371                           
  8372                           ; BSR set to: 3
  8373                           ;miwi_p2p.c: 877: {
  8374                           ;miwi_p2p.c: 878: uint8_t j;
  8375                           ;miwi_p2p.c: 881: if( indirectMessages[i].flags.bits.isBroadcast )
  8376  00070E  0101               	movlb	1	; () banked
  8377  000710  51FA               	movf	P2PTasks@i& (0+255),w,b
  8378  000712  0D33               	mullw	51
  8379  000714  0E80               	movlw	low (_indirectMessages+14)
  8380  000716  24F3               	addwf	prodl,w,c
  8381  000718  6ED9               	movwf	fsr2l,c
  8382  00071A  0E03               	movlw	high (_indirectMessages+14)
  8383  00071C  20F4               	addwfc	prodh,w,c
  8384  00071E  6EDA               	movwf	fsr2h,c
  8385  000720  A2DF               	btfss	indf2,1,c
  8386  000722  D0AA               	goto	l10546
  8387                           
  8388                           ; BSR set to: 3
  8389                           ;miwi_p2p.c: 882: {
  8390                           ;miwi_p2p.c: 883: for(j = 0; j < 10; j++)
  8391  000724  6BF9               	clrf	P2PTasks@j& (0+255),b
  8392  000726                     l10520:
  8393                           
  8394                           ; BSR set to: 1
  8395  000726  0E09               	movlw	9
  8396  000728  65F9               	cpfsgt	P2PTasks@j& (0+255),b
  8397  00072A  D001               	goto	l10524
  8398  00072C  D10E               	goto	l10562
  8399  00072E                     l10524:
  8400                           
  8401                           ; BSR set to: 1
  8402                           ;miwi_p2p.c: 884: {
  8403                           ;miwi_p2p.c: 885: if( indirectMessages[i].DestAddress.DestIndex[j] != 0xFF &&
  8404                           ;miwi_p2p.c: 886: isSameAddress(ConnectionTable[indirectMessages[i].DestAddress.DestInde
      +                          x[j]].Address, rxMessage.SourceAddress) )
  8405  00072E  51FA               	movf	P2PTasks@i& (0+255),w,b
  8406  000730  0D33               	mullw	51
  8407  000732  0E72               	movlw	low _indirectMessages
  8408  000734  0100               	movlb	0	; () banked
  8409  000736  6FC6               	movwf	??_P2PTasks& (0+255),b
  8410  000738  0E03               	movlw	high _indirectMessages
  8411  00073A  6FC7               	movwf	(??_P2PTasks+1)& (0+255),b
  8412  00073C  0E04               	movlw	4
  8413  00073E  27C6               	addwf	??_P2PTasks& (0+255),f,b
  8414  000740  0E00               	movlw	0
  8415  000742  23C7               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  8416  000744  50F3               	movf	prodl,w,c
  8417  000746  27C6               	addwf	??_P2PTasks& (0+255),f,b
  8418  000748  50F4               	movf	prodh,w,c
  8419  00074A  23C7               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  8420  00074C  0101               	movlb	1	; () banked
  8421  00074E  51F9               	movf	P2PTasks@j& (0+255),w,b
  8422  000750  0100               	movlb	0	; () banked
  8423  000752  25C6               	addwf	??_P2PTasks& (0+255),w,b
  8424  000754  6ED9               	movwf	fsr2l,c
  8425  000756  0E00               	movlw	0
  8426  000758  21C7               	addwfc	(??_P2PTasks+1)& (0+255),w,b
  8427  00075A  6EDA               	movwf	fsr2h,c
  8428  00075C  28DE               	incf	postinc2,w,c
  8429  00075E  E101 D088          	bz	l10542
  8430                           
  8431                           ; BSR set to: 0
  8432  000762  0101               	movlb	1	; () banked
  8433  000764  51FA               	movf	P2PTasks@i& (0+255),w,b
  8434  000766  0D33               	mullw	51
  8435  000768  0E72               	movlw	low _indirectMessages
  8436  00076A  0100               	movlb	0	; () banked
  8437  00076C  6FC6               	movwf	??_P2PTasks& (0+255),b
  8438  00076E  0E03               	movlw	high _indirectMessages
  8439  000770  6FC7               	movwf	(??_P2PTasks+1)& (0+255),b
  8440  000772  0E04               	movlw	4
  8441  000774  27C6               	addwf	??_P2PTasks& (0+255),f,b
  8442  000776  0E00               	movlw	0
  8443  000778  23C7               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  8444  00077A  50F3               	movf	prodl,w,c
  8445  00077C  27C6               	addwf	??_P2PTasks& (0+255),f,b
  8446  00077E  50F4               	movf	prodh,w,c
  8447  000780  23C7               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  8448  000782  0101               	movlb	1	; () banked
  8449  000784  51F9               	movf	P2PTasks@j& (0+255),w,b
  8450  000786  0100               	movlb	0	; () banked
  8451  000788  25C6               	addwf	??_P2PTasks& (0+255),w,b
  8452  00078A  6ED9               	movwf	fsr2l,c
  8453  00078C  0E00               	movlw	0
  8454  00078E  21C7               	addwfc	(??_P2PTasks+1)& (0+255),w,b
  8455  000790  6EDA               	movwf	fsr2h,c
  8456  000792  50DF               	movf	indf2,w,c
  8457  000794  0D0E               	mullw	14
  8458  000796  0E22               	movlw	low (_ConnectionTable+4)
  8459  000798  24F3               	addwf	prodl,w,c
  8460  00079A  6F76               	movwf	isSameAddress@Address1& (0+255),b
  8461  00079C  0E02               	movlw	high (_ConnectionTable+4)
  8462  00079E  20F4               	addwfc	prodh,w,c
  8463  0007A0  6F77               	movwf	(isSameAddress@Address1+1)& (0+255),b
  8464  0007A2  C032  F078         	movff	_rxMessage+3,isSameAddress@Address2
  8465  0007A6  C033  F079         	movff	_rxMessage+4,isSameAddress@Address2+1
  8466  0007AA  ECBC  F01F         	call	_isSameAddress	;wreg free
  8467  0007AE  0900               	iorlw	0
  8468  0007B0  E060               	bz	l10542
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;miwi_p2p.c: 887: {
  8472                           ;miwi_p2p.c: 888: indirectMessages[i].DestAddress.DestIndex[j] = 0xFF;
  8473  0007B2  0101               	movlb	1	; () banked
  8474  0007B4  51FA               	movf	P2PTasks@i& (0+255),w,b
  8475  0007B6  0D33               	mullw	51
  8476  0007B8  0E72               	movlw	low _indirectMessages
  8477  0007BA  0100               	movlb	0	; () banked
  8478  0007BC  6FC6               	movwf	??_P2PTasks& (0+255),b
  8479  0007BE  0E03               	movlw	high _indirectMessages
  8480  0007C0  6FC7               	movwf	(??_P2PTasks+1)& (0+255),b
  8481  0007C2  0E04               	movlw	4
  8482  0007C4  27C6               	addwf	??_P2PTasks& (0+255),f,b
  8483  0007C6  0E00               	movlw	0
  8484  0007C8  23C7               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  8485  0007CA  50F3               	movf	prodl,w,c
  8486  0007CC  27C6               	addwf	??_P2PTasks& (0+255),f,b
  8487  0007CE  50F4               	movf	prodh,w,c
  8488  0007D0  23C7               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  8489  0007D2  0101               	movlb	1	; () banked
  8490  0007D4  51F9               	movf	P2PTasks@j& (0+255),w,b
  8491  0007D6  0100               	movlb	0	; () banked
  8492  0007D8  25C6               	addwf	??_P2PTasks& (0+255),w,b
  8493  0007DA  6ED9               	movwf	fsr2l,c
  8494  0007DC  0E00               	movlw	0
  8495  0007DE  21C7               	addwfc	(??_P2PTasks+1)& (0+255),w,b
  8496  0007E0  6EDA               	movwf	fsr2h,c
  8497  0007E2  68DF               	setf	indf2,c
  8498                           
  8499                           ; BSR set to: 0
  8500                           ;miwi_p2p.c: 889: for(j = 0; j < indirectMessages[i].PayLoadSize; j++)
  8501  0007E4  0101               	movlb	1	; () banked
  8502  0007E6  6BF9               	clrf	P2PTasks@j& (0+255),b
  8503  0007E8  D022               	goto	l10538
  8504  0007EA                     l10532:
  8505                           
  8506                           ; BSR set to: 1
  8507                           ;miwi_p2p.c: 890: {
  8508                           ;miwi_p2p.c: 891: TxBuffer[TxData++] = indirectMessages[i].PayLoad[j];
  8509  0007EA  51FA               	movf	P2PTasks@i& (0+255),w,b
  8510  0007EC  0D33               	mullw	51
  8511  0007EE  0E72               	movlw	low _indirectMessages
  8512  0007F0  0100               	movlb	0	; () banked
  8513  0007F2  6FC6               	movwf	??_P2PTasks& (0+255),b
  8514  0007F4  0E03               	movlw	high _indirectMessages
  8515  0007F6  6FC7               	movwf	(??_P2PTasks+1)& (0+255),b
  8516  0007F8  0E10               	movlw	16
  8517  0007FA  27C6               	addwf	??_P2PTasks& (0+255),f,b
  8518  0007FC  0E00               	movlw	0
  8519  0007FE  23C7               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  8520  000800  50F3               	movf	prodl,w,c
  8521  000802  27C6               	addwf	??_P2PTasks& (0+255),f,b
  8522  000804  50F4               	movf	prodh,w,c
  8523  000806  23C7               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  8524  000808  0101               	movlb	1	; () banked
  8525  00080A  51F9               	movf	P2PTasks@j& (0+255),w,b
  8526  00080C  0100               	movlb	0	; () banked
  8527  00080E  25C6               	addwf	??_P2PTasks& (0+255),w,b
  8528  000810  6ED9               	movwf	fsr2l,c
  8529  000812  0E00               	movlw	0
  8530  000814  21C7               	addwfc	(??_P2PTasks+1)& (0+255),w,b
  8531  000816  6EDA               	movwf	fsr2h,c
  8532  000818  0E95               	movlw	low _TxBuffer
  8533  00081A  25DF               	addwf	_TxData& (0+255),w,b
  8534  00081C  6EE1               	movwf	fsr1l,c
  8535  00081E  6AE2               	clrf	fsr1h,c
  8536  000820  0E01               	movlw	high _TxBuffer
  8537  000822  22E2               	addwfc	fsr1h,f,c
  8538  000824  CFDF FFE7          	movff	indf2,indf1
  8539                           
  8540                           ; BSR set to: 0
  8541  000828  2BDF               	incf	_TxData& (0+255),f,b
  8542                           
  8543                           ; BSR set to: 0
  8544  00082A  0101               	movlb	1	; () banked
  8545  00082C  2BF9               	incf	P2PTasks@j& (0+255),f,b
  8546  00082E                     l10538:
  8547                           
  8548                           ; BSR set to: 1
  8549  00082E  51FA               	movf	P2PTasks@i& (0+255),w,b
  8550  000830  0D33               	mullw	51
  8551  000832  0E81               	movlw	low (_indirectMessages+15)
  8552  000834  24F3               	addwf	prodl,w,c
  8553  000836  6ED9               	movwf	fsr2l,c
  8554  000838  0E03               	movlw	high (_indirectMessages+15)
  8555  00083A  20F4               	addwfc	prodh,w,c
  8556  00083C  6EDA               	movwf	fsr2h,c
  8557  00083E  50DE               	movf	postinc2,w,c
  8558  000840  5DF9               	subwf	P2PTasks@j& (0+255),w,b
  8559  000842  E3D3               	bnc	l10532
  8560                           
  8561                           ; BSR set to: 1
  8562                           ;miwi_p2p.c: 892: }
  8563                           ;miwi_p2p.c: 902: SendPacket(0, rxMessage.SourceAddress, isCommand, indirectMessages[i].
      +                          flags.bits.isSecured);
  8564  000844  C032  F0A3         	movff	_rxMessage+3,SendPacket@DestinationAddress
  8565  000848  C033  F0A4         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  8566  00084C  C1F1  F0A5         	movff	P2PTasks@isCommand,SendPacket@isCommand
  8567  000850  51FA               	movf	P2PTasks@i& (0+255),w,b
  8568  000852  0D33               	mullw	51
  8569  000854  0E80               	movlw	low (_indirectMessages+14)
  8570  000856  24F3               	addwf	prodl,w,c
  8571  000858  6ED9               	movwf	fsr2l,c
  8572  00085A  0E03               	movlw	high (_indirectMessages+14)
  8573  00085C  20F4               	addwfc	prodh,w,c
  8574  00085E  6EDA               	movwf	fsr2h,c
  8575  000860  0E00               	movlw	0
  8576  000862  B6DF               	btfsc	indf2,3,c
  8577  000864  0E01               	movlw	1
  8578  000866  0100               	movlb	0	; () banked
  8579  000868  6FA6               	movwf	SendPacket@SecurityEnabled& (0+255),b
  8580  00086A  0E00               	movlw	0
  8581  00086C  ECE1  F017         	call	_SendPacket
  8582                           
  8583                           ;miwi_p2p.c: 905: goto END_OF_SENDING_INDIRECT_MESSAGE;
  8584  000870  D563               	goto	l10314
  8585  000872                     l10542:
  8586                           
  8587                           ; BSR set to: 0
  8588  000872  0101               	movlb	1	; () banked
  8589  000874  2BF9               	incf	P2PTasks@j& (0+255),f,b
  8590  000876  D757               	goto	l10520
  8591  000878                     l10546:
  8592                           
  8593                           ; BSR set to: 3
  8594                           ;miwi_p2p.c: 909: else
  8595                           ;miwi_p2p.c: 911: if( isSameAddress(indirectMessages[i].DestAddress.DestLongAddress, rxM
      +                          essage.SourceAddress) )
  8596  000878  0101               	movlb	1	; () banked
  8597  00087A  51FA               	movf	P2PTasks@i& (0+255),w,b
  8598  00087C  0D33               	mullw	51
  8599  00087E  0E76               	movlw	low (_indirectMessages+4)
  8600  000880  24F3               	addwf	prodl,w,c
  8601  000882  0100               	movlb	0	; () banked
  8602  000884  6F76               	movwf	isSameAddress@Address1& (0+255),b
  8603  000886  0E03               	movlw	high (_indirectMessages+4)
  8604  000888  20F4               	addwfc	prodh,w,c
  8605  00088A  6F77               	movwf	(isSameAddress@Address1+1)& (0+255),b
  8606  00088C  C032  F078         	movff	_rxMessage+3,isSameAddress@Address2
  8607  000890  C033  F079         	movff	_rxMessage+4,isSameAddress@Address2+1
  8608  000894  ECBC  F01F         	call	_isSameAddress	;wreg free
  8609  000898  0900               	iorlw	0
  8610  00089A  E057               	bz	l10562
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;miwi_p2p.c: 912: {
  8614                           ;miwi_p2p.c: 913: for(j = 0; j < indirectMessages[i].PayLoadSize; j++)
  8615  00089C  0101               	movlb	1	; () banked
  8616  00089E  6BF9               	clrf	P2PTasks@j& (0+255),b
  8617  0008A0  D022               	goto	l10556
  8618  0008A2                     l10550:
  8619                           
  8620                           ; BSR set to: 1
  8621                           ;miwi_p2p.c: 914: {
  8622                           ;miwi_p2p.c: 915: TxBuffer[TxData++] = indirectMessages[i].PayLoad[j];
  8623  0008A2  51FA               	movf	P2PTasks@i& (0+255),w,b
  8624  0008A4  0D33               	mullw	51
  8625  0008A6  0E72               	movlw	low _indirectMessages
  8626  0008A8  0100               	movlb	0	; () banked
  8627  0008AA  6FC6               	movwf	??_P2PTasks& (0+255),b
  8628  0008AC  0E03               	movlw	high _indirectMessages
  8629  0008AE  6FC7               	movwf	(??_P2PTasks+1)& (0+255),b
  8630  0008B0  0E10               	movlw	16
  8631  0008B2  27C6               	addwf	??_P2PTasks& (0+255),f,b
  8632  0008B4  0E00               	movlw	0
  8633  0008B6  23C7               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  8634  0008B8  50F3               	movf	prodl,w,c
  8635  0008BA  27C6               	addwf	??_P2PTasks& (0+255),f,b
  8636  0008BC  50F4               	movf	prodh,w,c
  8637  0008BE  23C7               	addwfc	(??_P2PTasks+1)& (0+255),f,b
  8638  0008C0  0101               	movlb	1	; () banked
  8639  0008C2  51F9               	movf	P2PTasks@j& (0+255),w,b
  8640  0008C4  0100               	movlb	0	; () banked
  8641  0008C6  25C6               	addwf	??_P2PTasks& (0+255),w,b
  8642  0008C8  6ED9               	movwf	fsr2l,c
  8643  0008CA  0E00               	movlw	0
  8644  0008CC  21C7               	addwfc	(??_P2PTasks+1)& (0+255),w,b
  8645  0008CE  6EDA               	movwf	fsr2h,c
  8646  0008D0  0E95               	movlw	low _TxBuffer
  8647  0008D2  25DF               	addwf	_TxData& (0+255),w,b
  8648  0008D4  6EE1               	movwf	fsr1l,c
  8649  0008D6  6AE2               	clrf	fsr1h,c
  8650  0008D8  0E01               	movlw	high _TxBuffer
  8651  0008DA  22E2               	addwfc	fsr1h,f,c
  8652  0008DC  CFDF FFE7          	movff	indf2,indf1
  8653                           
  8654                           ; BSR set to: 0
  8655  0008E0  2BDF               	incf	_TxData& (0+255),f,b
  8656                           
  8657                           ; BSR set to: 0
  8658  0008E2  0101               	movlb	1	; () banked
  8659  0008E4  2BF9               	incf	P2PTasks@j& (0+255),f,b
  8660  0008E6                     l10556:
  8661                           
  8662                           ; BSR set to: 1
  8663  0008E6  51FA               	movf	P2PTasks@i& (0+255),w,b
  8664  0008E8  0D33               	mullw	51
  8665  0008EA  0E81               	movlw	low (_indirectMessages+15)
  8666  0008EC  24F3               	addwf	prodl,w,c
  8667  0008EE  6ED9               	movwf	fsr2l,c
  8668  0008F0  0E03               	movlw	high (_indirectMessages+15)
  8669  0008F2  20F4               	addwfc	prodh,w,c
  8670  0008F4  6EDA               	movwf	fsr2h,c
  8671  0008F6  50DE               	movf	postinc2,w,c
  8672  0008F8  5DF9               	subwf	P2PTasks@j& (0+255),w,b
  8673  0008FA  E3D3               	bnc	l10550
  8674                           
  8675                           ; BSR set to: 1
  8676                           ;miwi_p2p.c: 916: }
  8677                           ;miwi_p2p.c: 926: SendPacket(0, indirectMessages[i].DestAddress.DestLongAddress, isComma
      +                          nd, (bool)indirectMessages[i].flags.bits.isSecured);
  8678  0008FC  51FA               	movf	P2PTasks@i& (0+255),w,b
  8679  0008FE  0D33               	mullw	51
  8680  000900  0E76               	movlw	low (_indirectMessages+4)
  8681  000902  24F3               	addwf	prodl,w,c
  8682  000904  0100               	movlb	0	; () banked
  8683  000906  6FA3               	movwf	SendPacket@DestinationAddress& (0+255),b
  8684  000908  0E03               	movlw	high (_indirectMessages+4)
  8685  00090A  20F4               	addwfc	prodh,w,c
  8686  00090C  6FA4               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  8687  00090E  C1F1  F0A5         	movff	P2PTasks@isCommand,SendPacket@isCommand
  8688  000912  0101               	movlb	1	; () banked
  8689  000914  51FA               	movf	P2PTasks@i& (0+255),w,b
  8690  000916  0D33               	mullw	51
  8691  000918  0E80               	movlw	low (_indirectMessages+14)
  8692  00091A  24F3               	addwf	prodl,w,c
  8693  00091C  6ED9               	movwf	fsr2l,c
  8694  00091E  0E03               	movlw	high (_indirectMessages+14)
  8695  000920  20F4               	addwfc	prodh,w,c
  8696  000922  6EDA               	movwf	fsr2h,c
  8697  000924  0E00               	movlw	0
  8698  000926  B6DF               	btfsc	indf2,3,c
  8699  000928  0E01               	movlw	1
  8700  00092A  0100               	movlb	0	; () banked
  8701  00092C  6FA6               	movwf	SendPacket@SecurityEnabled& (0+255),b
  8702  00092E  0E00               	movlw	0
  8703  000930  ECE1  F017         	call	_SendPacket
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;miwi_p2p.c: 928: indirectMessages[i].flags.Val = 0;
  8707  000934  0101               	movlb	1	; () banked
  8708  000936  51FA               	movf	P2PTasks@i& (0+255),w,b
  8709  000938  0D33               	mullw	51
  8710  00093A  0E80               	movlw	low (_indirectMessages+14)
  8711  00093C  24F3               	addwf	prodl,w,c
  8712  00093E  6ED9               	movwf	fsr2l,c
  8713  000940  0E03               	movlw	high (_indirectMessages+14)
  8714  000942  20F4               	addwfc	prodh,w,c
  8715  000944  6EDA               	movwf	fsr2h,c
  8716  000946  6ADF               	clrf	indf2,c
  8717                           
  8718                           ;miwi_p2p.c: 929: goto END_OF_SENDING_INDIRECT_MESSAGE;
  8719  000948  D4F7               	goto	l10314
  8720  00094A                     l10562:
  8721  00094A  0101               	movlb	1	; () banked
  8722  00094C  2BFA               	incf	P2PTasks@i& (0+255),f,b
  8723                           
  8724                           ; BSR set to: 1
  8725  00094E  0E01               	movlw	1
  8726  000950  65FA               	cpfsgt	P2PTasks@i& (0+255),b
  8727  000952  D6D3               	goto	l10514
  8728                           
  8729                           ; BSR set to: 1
  8730                           ;miwi_p2p.c: 930: }
  8731                           ;miwi_p2p.c: 931: }
  8732                           ;miwi_p2p.c: 932: }
  8733                           ;miwi_p2p.c: 934: if( i == 2 )
  8734  000954  0E02               	movlw	2
  8735  000956  19FA               	xorwf	P2PTasks@i& (0+255),w,b
  8736  000958  E001 D4EE          	bnz	l10314
  8737                           
  8738                           ; BSR set to: 1
  8739                           ;miwi_p2p.c: 935: {
  8740                           ;miwi_p2p.c: 946: SendPacket(0, rxMessage.SourceAddress, isCommand, 0);
  8741  00095C  C032  F0A3         	movff	_rxMessage+3,SendPacket@DestinationAddress
  8742  000960  C033  F0A4         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  8743  000964  C1F1  F0A5         	movff	P2PTasks@isCommand,SendPacket@isCommand
  8744  000968  0E00               	movlw	0
  8745  00096A  0100               	movlb	0	; () banked
  8746  00096C  6BA6               	clrf	SendPacket@SecurityEnabled& (0+255),b
  8747  00096E  ECE1  F017         	call	_SendPacket
  8748  000972  D4E2               	goto	l10314
  8749  000974                     l10572:
  8750                           
  8751                           ; BSR set to: 1
  8752                           ;miwi_p2p.c: 999: if( rxMessage.Payload[1] != currentChannel )
  8753  000974  EE20 F001          	lfsr	2,1
  8754  000978  5034               	movf	_rxMessage+5,w,c
  8755  00097A  26D9               	addwf	fsr2l,f,c
  8756  00097C  5035               	movf	_rxMessage+6,w,c
  8757  00097E  22DA               	addwfc	fsr2h,f,c
  8758  000980  0100               	movlb	0	; () banked
  8759  000982  51E5               	movf	_currentChannel& (0+255),w,b
  8760  000984  18DE               	xorwf	postinc2,w,c
  8761  000986  E001 D4D7          	bnz	l10314
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;miwi_p2p.c: 1003: }
  8765                           ;miwi_p2p.c: 1004: StartChannelHopping(rxMessage.Payload[2]);
  8766  00098A  EE20 F002          	lfsr	2,2
  8767  00098E  5034               	movf	_rxMessage+5,w,c
  8768  000990  26D9               	addwf	fsr2l,f,c
  8769  000992  5035               	movf	_rxMessage+6,w,c
  8770  000994  22DA               	addwfc	fsr2h,f,c
  8771  000996  50DF               	movf	indf2,w,c
  8772  000998  EC97  F016         	call	_StartChannelHopping
  8773  00099C  D4CD               	goto	l10314
  8774  00099E                     l10580:
  8775                           
  8776                           ; BSR set to: 1
  8777                           ;miwi_p2p.c: 1016: {
  8778                           ;miwi_p2p.c: 1017: if (!role)
  8779  00099E  0100               	movlb	0	; () banked
  8780  0009A0  51E7               	movf	_role& (0+255),w,b
  8781  0009A2  E001 D4C9          	bnz	l10314
  8782                           
  8783                           ; BSR set to: 0
  8784                           ;miwi_p2p.c: 1018: {
  8785                           ;miwi_p2p.c: 1019: rec_ack = 1;
  8786  0009A6  0E01               	movlw	1
  8787  0009A8  6FE2               	movwf	_rec_ack& (0+255),b
  8788  0009AA  D4C6               	goto	l10314
  8789  0009AC                     l10588:
  8790                           
  8791                           ; BSR set to: 1
  8792                           ;miwi_p2p.c: 1029: {
  8793                           ;miwi_p2p.c: 1030: if (!role)
  8794  0009AC  0100               	movlb	0	; () banked
  8795  0009AE  51E7               	movf	_role& (0+255),w,b
  8796  0009B0  E001 D4C2          	bnz	l10314
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;miwi_p2p.c: 1031: {
  8800                           ;miwi_p2p.c: 1033: end_nodes = rxMessage.Payload[1]-1;
  8801  0009B4  EE20 F001          	lfsr	2,1
  8802  0009B8  5034               	movf	_rxMessage+5,w,c
  8803  0009BA  26D9               	addwf	fsr2l,f,c
  8804  0009BC  5035               	movf	_rxMessage+6,w,c
  8805  0009BE  22DA               	addwfc	fsr2h,f,c
  8806  0009C0  50DF               	movf	indf2,w,c
  8807  0009C2  6FC6               	movwf	??_P2PTasks& (0+255),b
  8808  0009C4  05C6               	decf	??_P2PTasks& (0+255),w,b
  8809  0009C6  6E49               	movwf	_end_nodes,c
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;miwi_p2p.c: 1034: store_connection_tb(rxMessage.Payload);
  8813  0009C8  C034  F07D         	movff	_rxMessage+5,store_connection_tb@payload
  8814  0009CC  C035  F07E         	movff	_rxMessage+6,store_connection_tb@payload+1
  8815  0009D0  ECF0  F014         	call	_store_connection_tb	;wreg free
  8816  0009D4  D4B1               	goto	l10314
  8817  0009D6                     l10598:
  8818                           
  8819                           ; BSR set to: 1
  8820                           ;miwi_p2p.c: 1043: {
  8821                           ;miwi_p2p.c: 1044: if (role)
  8822  0009D6  0100               	movlb	0	; () banked
  8823  0009D8  51E7               	movf	_role& (0+255),w,b
  8824  0009DA  E101 D4AD          	bz	l10314
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;miwi_p2p.c: 1045: {
  8828                           ;miwi_p2p.c: 1047: uint8_t final_index;
  8829                           ;miwi_p2p.c: 1048: final_index = Find_Index(rxMessage.Payload);
  8830  0009DE  C034  F076         	movff	_rxMessage+5,Find_Index@DestAddr
  8831  0009E2  C035  F077         	movff	_rxMessage+6,Find_Index@DestAddr+1
  8832  0009E6  ECCB  F018         	call	_Find_Index	;wreg free
  8833  0009EA  0101               	movlb	1	; () banked
  8834  0009EC  6FF0               	movwf	P2PTasks@final_index& (0+255),b
  8835                           
  8836                           ; BSR set to: 1
  8837                           ;miwi_p2p.c: 1049: if (final_index != 0xFF)
  8838  0009EE  29F0               	incf	P2PTasks@final_index& (0+255),w,b
  8839  0009F0  E00E               	bz	l10606
  8840                           
  8841                           ; BSR set to: 1
  8842                           ;miwi_p2p.c: 1050: {
  8843                           ;miwi_p2p.c: 1051: FW_Stat = Forward_Packet_PANCr_to_EDy (rxMessage.Payload , final_inde
      +                          x , rxMessage.SourceAddress);
  8844  0009F2  C034  F0BF         	movff	_rxMessage+5,Forward_Packet_PANCr_to_EDy@fw_payload
  8845  0009F6  C035  F0C0         	movff	_rxMessage+6,Forward_Packet_PANCr_to_EDy@fw_payload+1
  8846  0009FA  C1F0  F0C1         	movff	P2PTasks@final_index,Forward_Packet_PANCr_to_EDy@index
  8847  0009FE  C032  F0C2         	movff	_rxMessage+3,Forward_Packet_PANCr_to_EDy@EDxAddress
  8848  000A02  C033  F0C3         	movff	_rxMessage+4,Forward_Packet_PANCr_to_EDy@EDxAddress+1
  8849  000A06  EC30  F018         	call	_Forward_Packet_PANCr_to_EDy	;wreg free
  8850  000A0A  0101               	movlb	1	; () banked
  8851  000A0C  6FE7               	movwf	P2PTasks@FW_Stat& (0+255),b
  8852  000A0E                     l10606:
  8853                           
  8854                           ; BSR set to: 1
  8855                           ;miwi_p2p.c: 1052: }
  8856                           ;miwi_p2p.c: 1054: if (FW_Stat)
  8857  000A0E  51E7               	movf	P2PTasks@FW_Stat& (0+255),w,b
  8858  000A10  E101 D492          	bz	l10314
  8859                           
  8860                           ; BSR set to: 1
  8861                           ;miwi_p2p.c: 1055: {
  8862                           ;miwi_p2p.c: 1056: SW_Ack_SrED (rxMessage.SourceAddress);
  8863  000A14  C032  F0AD         	movff	_rxMessage+3,SW_Ack_SrED@Dest_Addr
  8864  000A18  C033  F0AE         	movff	_rxMessage+4,SW_Ack_SrED@Dest_Addr+1
  8865  000A1C  ECE7  F01F         	call	_SW_Ack_SrED	;wreg free
  8866  000A20  D48B               	goto	l10314
  8867  000A22                     l10614:
  8868                           
  8869                           ; BSR set to: 1
  8870                           ;miwi_p2p.c: 1068: {
  8871                           ;miwi_p2p.c: 1069: if (role)
  8872  000A22  0100               	movlb	0	; () banked
  8873  000A24  51E7               	movf	_role& (0+255),w,b
  8874  000A26  E101 D487          	bz	l10314
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;miwi_p2p.c: 1070: {
  8878                           ;miwi_p2p.c: 1072: uint8_t p;
  8879                           ;miwi_p2p.c: 1073: for (p=0 ; p < 10 ; p++)
  8880  000A2A  0101               	movlb	1	; () banked
  8881  000A2C  6BF7               	clrf	P2PTasks@p_1412& (0+255),b
  8882  000A2E                     l10618:
  8883                           
  8884                           ; BSR set to: 1
  8885  000A2E  0E09               	movlw	9
  8886  000A30  65F7               	cpfsgt	P2PTasks@p_1412& (0+255),b
  8887  000A32  D001               	goto	l10622
  8888  000A34  D481               	goto	l10314
  8889  000A36                     l10622:
  8890                           
  8891                           ; BSR set to: 1
  8892                           ;miwi_p2p.c: 1074: {
  8893                           ;miwi_p2p.c: 1075: if (ConnectionTable[p].Address[0] == rxMessage.SourceAddress[0] && Co
      +                          nnectionTable[p].Address[1] == rxMessage.SourceAddress[1]
  8894                           ;miwi_p2p.c: 1076: && ConnectionTable[p].Address[2] == rxMessage.SourceAddress[2])
  8895  000A36  C032  FFD9         	movff	_rxMessage+3,fsr2l
  8896  000A3A  C033  FFDA         	movff	_rxMessage+4,fsr2h
  8897  000A3E  51F7               	movf	P2PTasks@p_1412& (0+255),w,b
  8898  000A40  0D0E               	mullw	14
  8899  000A42  0E22               	movlw	low (_ConnectionTable+4)
  8900  000A44  24F3               	addwf	prodl,w,c
  8901  000A46  6EE1               	movwf	fsr1l,c
  8902  000A48  0E02               	movlw	high (_ConnectionTable+4)
  8903  000A4A  20F4               	addwfc	prodh,w,c
  8904  000A4C  6EE2               	movwf	fsr1h,c
  8905  000A4E  50DE               	movf	postinc2,w,c
  8906  000A50  18E6               	xorwf	postinc1,w,c
  8907  000A52  E12A               	bnz	l10630
  8908                           
  8909                           ; BSR set to: 1
  8910  000A54  EE20 F001          	lfsr	2,1
  8911  000A58  5032               	movf	_rxMessage+3,w,c
  8912  000A5A  26D9               	addwf	fsr2l,f,c
  8913  000A5C  5033               	movf	_rxMessage+4,w,c
  8914  000A5E  22DA               	addwfc	fsr2h,f,c
  8915  000A60  51F7               	movf	P2PTasks@p_1412& (0+255),w,b
  8916  000A62  0D0E               	mullw	14
  8917  000A64  0E23               	movlw	low (_ConnectionTable+5)
  8918  000A66  24F3               	addwf	prodl,w,c
  8919  000A68  6EE1               	movwf	fsr1l,c
  8920  000A6A  0E02               	movlw	high (_ConnectionTable+5)
  8921  000A6C  20F4               	addwfc	prodh,w,c
  8922  000A6E  6EE2               	movwf	fsr1h,c
  8923  000A70  50DE               	movf	postinc2,w,c
  8924  000A72  18E6               	xorwf	postinc1,w,c
  8925  000A74  E119               	bnz	l10630
  8926                           
  8927                           ; BSR set to: 1
  8928  000A76  EE20 F002          	lfsr	2,2
  8929  000A7A  5032               	movf	_rxMessage+3,w,c
  8930  000A7C  26D9               	addwf	fsr2l,f,c
  8931  000A7E  5033               	movf	_rxMessage+4,w,c
  8932  000A80  22DA               	addwfc	fsr2h,f,c
  8933  000A82  51F7               	movf	P2PTasks@p_1412& (0+255),w,b
  8934  000A84  0D0E               	mullw	14
  8935  000A86  0E24               	movlw	low (_ConnectionTable+6)
  8936  000A88  24F3               	addwf	prodl,w,c
  8937  000A8A  6EE1               	movwf	fsr1l,c
  8938  000A8C  0E02               	movlw	high (_ConnectionTable+6)
  8939  000A8E  20F4               	addwfc	prodh,w,c
  8940  000A90  6EE2               	movwf	fsr1h,c
  8941  000A92  50DE               	movf	postinc2,w,c
  8942  000A94  18E6               	xorwf	postinc1,w,c
  8943  000A96  E108               	bnz	l10630
  8944                           
  8945                           ; BSR set to: 1
  8946                           ;miwi_p2p.c: 1077: {
  8947                           ;miwi_p2p.c: 1078: link_stat[p]++;
  8948  000A98  0E5F               	movlw	low _link_stat
  8949  000A9A  25F7               	addwf	P2PTasks@p_1412& (0+255),w,b
  8950  000A9C  6ED9               	movwf	fsr2l,c
  8951  000A9E  6ADA               	clrf	fsr2h,c
  8952  000AA0  0E01               	movlw	high _link_stat
  8953  000AA2  22DA               	addwfc	fsr2h,f,c
  8954  000AA4  2ADF               	incf	indf2,f,c
  8955                           
  8956                           ;miwi_p2p.c: 1079: break;
  8957  000AA6  D448               	goto	l10314
  8958  000AA8                     l10630:
  8959                           
  8960                           ; BSR set to: 1
  8961  000AA8  2BF7               	incf	P2PTasks@p_1412& (0+255),f,b
  8962  000AAA  D7C1               	goto	l10618
  8963  000AAC                     l10640:
  8964                           
  8965                           ; BSR set to: 1
  8966  000AAC  C034  FFD9         	movff	_rxMessage+5,fsr2l
  8967  000AB0  C035  FFDA         	movff	_rxMessage+6,fsr2h
  8968  000AB4  50DF               	movf	indf2,w,c
  8969                           
  8970                           ; Switch size 1, requested type "speed"
  8971                           ; Number of cases is 13, Range of values is 4 to 218
  8972                           ; switch strategies available:
  8973                           ; Name         Instructions Cycles
  8974                           ; simple_byte           40    21 (average)
  8975                           ;	Chosen strategy is simple_byte
  8976  000AB6  0A04               	xorlw	4	; case 4
  8977  000AB8  E101 D61A          	bz	l517
  8978  000ABC  0A73               	xorlw	115	; case 119
  8979  000ABE  E101 D775          	bz	l10588
  8980  000AC2  0A0D               	xorlw	13	; case 122
  8981  000AC4  E0AE               	bz	l10614
  8982  000AC6  0AFB               	xorlw	251	; case 129
  8983  000AC8  E101 D427          	bz	l10308
  8984  000ACC  0A03               	xorlw	3	; case 130
  8985  000ACE  E101 D520          	bz	l496
  8986  000AD2  0A01               	xorlw	1	; case 131
  8987  000AD4  E101 D60C          	bz	l517
  8988  000AD8  0A07               	xorlw	7	; case 132
  8989  000ADA  E101 D74B          	bz	l10572
  8990  000ADE  0A03               	xorlw	3	; case 135
  8991  000AE0  E101 D4D1          	bz	l10400
  8992  000AE4  0A16               	xorlw	22	; case 145
  8993  000AE6  E101 D5A9          	bz	l10480
  8994  000AEA  0A03               	xorlw	3	; case 146
  8995  000AEC  E101 D5B5          	bz	l10488
  8996  000AF0  0A05               	xorlw	5	; case 151
  8997  000AF2  E101 D5AE          	bz	l508
  8998  000AF6  0A5B               	xorlw	91	; case 204
  8999  000AF8  E101 D76D          	bz	l10598
  9000  000AFC  0A16               	xorlw	22	; case 218
  9001  000AFE  E101 D74E          	bz	l10580
  9002  000B02                     l469:
  9003                           
  9004                           ; BSR set to: 1
  9005                           ;miwi_p2p.c: 1101: else
  9006                           ;miwi_p2p.c: 1102: {
  9007                           ;miwi_p2p.c: 1103: P2PStatus.bits.RxHasUserData = 1;
  9008  000B02  0100               	movlb	0	; () banked
  9009  000B04  87DC               	bsf	_P2PStatus& (0+255),3,b	;volatile
  9010  000B06                     l10642:
  9011                           
  9012                           ;miwi_p2p.c: 1104: }
  9013                           ;miwi_p2p.c: 1113: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
  9014  000B06  5036               	movf	_rxMessage+7,w,c
  9015  000B08  E005               	bz	l558
  9016  000B0A  0100               	movlb	0	; () banked
  9017  000B0C  B9DC               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  9018  000B0E  D002               	goto	l558
  9019                           
  9020                           ; BSR set to: 0
  9021  000B10  ABDC               	btfss	_P2PStatus& (0+255),5,b	;volatile
  9022  000B12  0012               	return	
  9023  000B14                     l558:
  9024                           
  9025                           ;miwi_p2p.c: 1114: {
  9026                           ;miwi_p2p.c: 1115: P2PStatus.bits.RxHasUserData = 0;
  9027  000B14  0100               	movlb	0	; () banked
  9028  000B16  97DC               	bcf	_P2PStatus& (0+255),3,b	;volatile
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;miwi_p2p.c: 1116: MiMAC_DiscardPacket();
  9032  000B18  EF6F  F020         	goto	_MiMAC_DiscardPacket	;wreg free
  9033  000B1C                     __end_of_P2PTasks:
  9034                           	opt stack 0
  9035                           tblptru	equ	0xFF8
  9036                           tblptrh	equ	0xFF7
  9037                           tblptrl	equ	0xFF6
  9038                           tablat	equ	0xFF5
  9039                           prodh	equ	0xFF4
  9040                           prodl	equ	0xFF3
  9041                           intcon	equ	0xFF2
  9042                           intcon2	equ	0xFF1
  9043                           intcon3	equ	0xFF0
  9044                           postinc0	equ	0xFEE
  9045                           wreg	equ	0xFE8
  9046                           indf1	equ	0xFE7
  9047                           postinc1	equ	0xFE6
  9048                           fsr1h	equ	0xFE2
  9049                           fsr1l	equ	0xFE1
  9050                           indf2	equ	0xFDF
  9051                           postinc2	equ	0xFDE
  9052                           postdec2	equ	0xFDD
  9053                           fsr2h	equ	0xFDA
  9054                           fsr2l	equ	0xFD9
  9055                           status	equ	0xFD8
  9056                           
  9057 ;; *************** function _store_connection_tb *****************
  9058 ;; Defined at:
  9059 ;;		line 150 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9060 ;; Parameters:    Size  Location     Type
  9061 ;;  payload         2   29[BANK0 ] PTR unsigned char 
  9062 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
  9063 ;; Auto vars:     Size  Location     Type
  9064 ;;  i               1   34[BANK0 ] unsigned char 
  9065 ;;  j               1   33[BANK0 ] unsigned char 
  9066 ;;  connections_    1    0        unsigned char 
  9067 ;;  k               1    0        unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;		None               void
  9070 ;; Registers used:
  9071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9072 ;; Tracked objects:
  9073 ;;		On entry : F/0
  9074 ;;		On exit  : F/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9077 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9078 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9079 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9080 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9081 ;;Total ram usage:        6 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:    9
  9084 ;; This function calls:
  9085 ;;		_handle_lost_connection
  9086 ;; This function is called by:
  9087 ;;		_P2PTasks
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           	psect	text28
  9092  0029E0                     __ptext28:
  9093                           	opt stack 0
  9094  0029E0                     _store_connection_tb:
  9095                           	opt stack 16
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;miwi_p2p.c: 154: for (i=4; i < 35; i++)
  9099                           
  9100                           ;incstack = 0
  9101  0029E0  0E04               	movlw	4
  9102  0029E2  6F82               	movwf	store_connection_tb@i& (0+255),b
  9103  0029E4                     l9952:
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;miwi_p2p.c: 155: {
  9107                           ;miwi_p2p.c: 156: if (i % 4 == 0 && (i+3) < 35)
  9108  0029E4  C082  F07F         	movff	store_connection_tb@i,??_store_connection_tb
  9109  0029E8  0E03               	movlw	3
  9110  0029EA  177F               	andwf	??_store_connection_tb& (0+255),f,b
  9111  0029EC  E161               	bnz	l9966
  9112                           
  9113                           ; BSR set to: 0
  9114  0029EE  5182               	movf	store_connection_tb@i& (0+255),w,b
  9115  0029F0  6F7F               	movwf	??_store_connection_tb& (0+255),b
  9116  0029F2  6B80               	clrf	(??_store_connection_tb+1)& (0+255),b
  9117  0029F4  0E03               	movlw	3
  9118  0029F6  277F               	addwf	??_store_connection_tb& (0+255),f,b
  9119  0029F8  0E00               	movlw	0
  9120  0029FA  2380               	addwfc	(??_store_connection_tb+1)& (0+255),f,b
  9121  0029FC  BF80               	btfsc	(??_store_connection_tb+1)& (0+255),7,b
  9122  0029FE  D005               	goto	l9956
  9123  002A00  5180               	movf	(??_store_connection_tb+1)& (0+255),w,b
  9124  002A02  E156               	bnz	l9966
  9125  002A04  0E23               	movlw	35
  9126  002A06  5D7F               	subwf	??_store_connection_tb& (0+255),w,b
  9127  002A08  E253               	bc	l9966
  9128  002A0A                     l9956:
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;miwi_p2p.c: 157: {
  9132                           ;miwi_p2p.c: 158: j = payload[i+3];
  9133  002A0A  5182               	movf	store_connection_tb@i& (0+255),w,b
  9134  002A0C  257D               	addwf	store_connection_tb@payload& (0+255),w,b
  9135  002A0E  6F7F               	movwf	??_store_connection_tb& (0+255),b
  9136  002A10  0E00               	movlw	0
  9137  002A12  217E               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  9138  002A14  6F80               	movwf	(??_store_connection_tb+1)& (0+255),b
  9139  002A16  0E03               	movlw	3
  9140  002A18  257F               	addwf	??_store_connection_tb& (0+255),w,b
  9141  002A1A  6ED9               	movwf	fsr2l,c
  9142  002A1C  0E00               	movlw	0
  9143  002A1E  2180               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  9144  002A20  6EDA               	movwf	fsr2h,c
  9145  002A22  50DF               	movf	indf2,w,c
  9146  002A24  6F81               	movwf	store_connection_tb@j& (0+255),b
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;miwi_p2p.c: 159: END_DEVICES_Short_Address[j].connection_slot = j;
  9150  002A26  5181               	movf	store_connection_tb@j& (0+255),w,b
  9151  002A28  0D04               	mullw	4
  9152  002A2A  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  9153  002A2C  24F3               	addwf	prodl,w,c
  9154  002A2E  6ED9               	movwf	fsr2l,c
  9155  002A30  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  9156  002A32  20F4               	addwfc	prodh,w,c
  9157  002A34  6EDA               	movwf	fsr2h,c
  9158  002A36  C081  FFDF         	movff	store_connection_tb@j,indf2
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;miwi_p2p.c: 160: END_DEVICES_Short_Address[j].Address[0] = payload[i];
  9162  002A3A  5182               	movf	store_connection_tb@i& (0+255),w,b
  9163  002A3C  257D               	addwf	store_connection_tb@payload& (0+255),w,b
  9164  002A3E  6ED9               	movwf	fsr2l,c
  9165  002A40  0E00               	movlw	0
  9166  002A42  217E               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  9167  002A44  6EDA               	movwf	fsr2h,c
  9168  002A46  5181               	movf	store_connection_tb@j& (0+255),w,b
  9169  002A48  0D04               	mullw	4
  9170  002A4A  0E37               	movlw	low _END_DEVICES_Short_Address
  9171  002A4C  24F3               	addwf	prodl,w,c
  9172  002A4E  6EE1               	movwf	fsr1l,c
  9173  002A50  0E01               	movlw	high _END_DEVICES_Short_Address
  9174  002A52  20F4               	addwfc	prodh,w,c
  9175  002A54  6EE2               	movwf	fsr1h,c
  9176  002A56  CFDF FFE7          	movff	indf2,indf1
  9177                           
  9178                           ; BSR set to: 0
  9179                           ;miwi_p2p.c: 161: END_DEVICES_Short_Address[j].Address[1] = payload[i+1];
  9180  002A5A  5182               	movf	store_connection_tb@i& (0+255),w,b
  9181  002A5C  257D               	addwf	store_connection_tb@payload& (0+255),w,b
  9182  002A5E  6F7F               	movwf	??_store_connection_tb& (0+255),b
  9183  002A60  0E00               	movlw	0
  9184  002A62  217E               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  9185  002A64  6F80               	movwf	(??_store_connection_tb+1)& (0+255),b
  9186  002A66  297F               	incf	??_store_connection_tb& (0+255),w,b
  9187  002A68  6ED9               	movwf	fsr2l,c
  9188  002A6A  0E00               	movlw	0
  9189  002A6C  2180               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  9190  002A6E  6EDA               	movwf	fsr2h,c
  9191  002A70  5181               	movf	store_connection_tb@j& (0+255),w,b
  9192  002A72  0D04               	mullw	4
  9193  002A74  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  9194  002A76  24F3               	addwf	prodl,w,c
  9195  002A78  6EE1               	movwf	fsr1l,c
  9196  002A7A  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  9197  002A7C  20F4               	addwfc	prodh,w,c
  9198  002A7E  6EE2               	movwf	fsr1h,c
  9199  002A80  CFDF FFE7          	movff	indf2,indf1
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;miwi_p2p.c: 162: END_DEVICES_Short_Address[j].Address[2] = payload[i+2];
  9203  002A84  5182               	movf	store_connection_tb@i& (0+255),w,b
  9204  002A86  257D               	addwf	store_connection_tb@payload& (0+255),w,b
  9205  002A88  6F7F               	movwf	??_store_connection_tb& (0+255),b
  9206  002A8A  0E00               	movlw	0
  9207  002A8C  217E               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  9208  002A8E  6F80               	movwf	(??_store_connection_tb+1)& (0+255),b
  9209  002A90  0E02               	movlw	2
  9210  002A92  257F               	addwf	??_store_connection_tb& (0+255),w,b
  9211  002A94  6ED9               	movwf	fsr2l,c
  9212  002A96  0E00               	movlw	0
  9213  002A98  2180               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  9214  002A9A  6EDA               	movwf	fsr2h,c
  9215  002A9C  5181               	movf	store_connection_tb@j& (0+255),w,b
  9216  002A9E  0D04               	mullw	4
  9217  002AA0  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  9218  002AA2  24F3               	addwf	prodl,w,c
  9219  002AA4  6EE1               	movwf	fsr1l,c
  9220  002AA6  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  9221  002AA8  20F4               	addwfc	prodh,w,c
  9222  002AAA  6EE2               	movwf	fsr1h,c
  9223  002AAC  CFDF FFE7          	movff	indf2,indf1
  9224  002AB0                     l9966:
  9225                           
  9226                           ; BSR set to: 0
  9227  002AB0  2B82               	incf	store_connection_tb@i& (0+255),f,b
  9228                           
  9229                           ; BSR set to: 0
  9230  002AB2  0E22               	movlw	34
  9231  002AB4  6582               	cpfsgt	store_connection_tb@i& (0+255),b
  9232  002AB6  D796               	goto	l9952
  9233  002AB8  EF3A  F01B         	goto	_handle_lost_connection
  9234  002ABC                     __end_of_store_connection_tb:
  9235                           	opt stack 0
  9236                           tblptru	equ	0xFF8
  9237                           tblptrh	equ	0xFF7
  9238                           tblptrl	equ	0xFF6
  9239                           tablat	equ	0xFF5
  9240                           prodh	equ	0xFF4
  9241                           prodl	equ	0xFF3
  9242                           intcon	equ	0xFF2
  9243                           intcon2	equ	0xFF1
  9244                           intcon3	equ	0xFF0
  9245                           postinc0	equ	0xFEE
  9246                           wreg	equ	0xFE8
  9247                           indf1	equ	0xFE7
  9248                           postinc1	equ	0xFE6
  9249                           fsr1h	equ	0xFE2
  9250                           fsr1l	equ	0xFE1
  9251                           indf2	equ	0xFDF
  9252                           postinc2	equ	0xFDE
  9253                           postdec2	equ	0xFDD
  9254                           fsr2h	equ	0xFDA
  9255                           fsr2l	equ	0xFD9
  9256                           status	equ	0xFD8
  9257                           
  9258 ;; *************** function _handle_lost_connection *****************
  9259 ;; Defined at:
  9260 ;;		line 127 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;		None
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  i               1   28[BANK0 ] unsigned char 
  9265 ;;  stat            1   27[BANK0 ] unsigned char 
  9266 ;; Return value:  Size  Location     Type
  9267 ;;		None               void
  9268 ;; Registers used:
  9269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9270 ;; Tracked objects:
  9271 ;;		On entry : F/0
  9272 ;;		On exit  : F/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9276 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9277 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9278 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9279 ;;Total ram usage:        7 bytes
  9280 ;; Hardware stack levels used:    1
  9281 ;; Hardware stack levels required when called:    8
  9282 ;; This function calls:
  9283 ;;		Nothing
  9284 ;; This function is called by:
  9285 ;;		_store_connection_tb
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           	psect	text29
  9290  003674                     __ptext29:
  9291                           	opt stack 0
  9292  003674                     _handle_lost_connection:
  9293                           	opt stack 16
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;miwi_p2p.c: 129: uint8_t i ;
  9297                           ;miwi_p2p.c: 130: bool stat = 0;
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;incstack = 0
  9301  003674  6B7B               	clrf	handle_lost_connection@stat& (0+255),b
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;miwi_p2p.c: 131: if (!role)
  9305  003676  51E7               	movf	_role& (0+255),w,b
  9306  003678  A4D8               	btfss	status,2,c
  9307  00367A  0012               	return	
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;miwi_p2p.c: 132: {
  9311                           ;miwi_p2p.c: 133: for (i=0;i<end_nodes+1;i++)
  9312  00367C  6B7C               	clrf	handle_lost_connection@i& (0+255),b
  9313  00367E  D01E               	goto	l9658
  9314  003680                     l9650:
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;miwi_p2p.c: 134: {
  9318                           ;miwi_p2p.c: 135: if (myLongAddress[0] == END_DEVICES_Short_Address[i].Address[0] && myL
      +                          ongAddress[1] == END_DEVICES_Short_Address[i].Address[1])
  9319  003680  517C               	movf	handle_lost_connection@i& (0+255),w,b
  9320  003682  0D04               	mullw	4
  9321  003684  0E37               	movlw	low _END_DEVICES_Short_Address
  9322  003686  24F3               	addwf	prodl,w,c
  9323  003688  6ED9               	movwf	fsr2l,c
  9324  00368A  0E01               	movlw	high _END_DEVICES_Short_Address
  9325  00368C  20F4               	addwfc	prodh,w,c
  9326  00368E  6EDA               	movwf	fsr2h,c
  9327  003690  0101               	movlb	1	; () banked
  9328  003692  51D9               	movf	_myLongAddress& (0+255),w,b
  9329  003694  18DE               	xorwf	postinc2,w,c
  9330  003696  E110               	bnz	l9656
  9331                           
  9332                           ; BSR set to: 1
  9333  003698  0100               	movlb	0	; () banked
  9334  00369A  517C               	movf	handle_lost_connection@i& (0+255),w,b
  9335  00369C  0D04               	mullw	4
  9336  00369E  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  9337  0036A0  24F3               	addwf	prodl,w,c
  9338  0036A2  6ED9               	movwf	fsr2l,c
  9339  0036A4  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  9340  0036A6  20F4               	addwfc	prodh,w,c
  9341  0036A8  6EDA               	movwf	fsr2h,c
  9342  0036AA  50DE               	movf	postinc2,w,c
  9343  0036AC  0101               	movlb	1	; () banked
  9344  0036AE  19DA               	xorwf	(_myLongAddress+1)& (0+255),w,b
  9345  0036B0  E103               	bnz	l9656
  9346                           
  9347                           ; BSR set to: 1
  9348                           ;miwi_p2p.c: 136: {
  9349                           ;miwi_p2p.c: 137: stat = 1;
  9350  0036B2  0E01               	movlw	1
  9351  0036B4  0100               	movlb	0	; () banked
  9352  0036B6  6F7B               	movwf	handle_lost_connection@stat& (0+255),b
  9353  0036B8                     l9656:
  9354  0036B8  0100               	movlb	0	; () banked
  9355  0036BA  2B7C               	incf	handle_lost_connection@i& (0+255),f,b
  9356  0036BC                     l9658:
  9357                           
  9358                           ; BSR set to: 0
  9359  0036BC  5049               	movf	_end_nodes,w,c
  9360  0036BE  6F76               	movwf	??_handle_lost_connection& (0+255),b
  9361  0036C0  6B77               	clrf	(??_handle_lost_connection+1)& (0+255),b
  9362  0036C2  2B76               	incf	??_handle_lost_connection& (0+255),f,b
  9363  0036C4  0E00               	movlw	0
  9364  0036C6  2377               	addwfc	(??_handle_lost_connection+1)& (0+255),f,b
  9365  0036C8  517C               	movf	handle_lost_connection@i& (0+255),w,b
  9366  0036CA  6F78               	movwf	(??_handle_lost_connection+2)& (0+255),b
  9367  0036CC  6B79               	clrf	(??_handle_lost_connection+3)& (0+255),b
  9368  0036CE  5176               	movf	??_handle_lost_connection& (0+255),w,b
  9369  0036D0  5D78               	subwf	(??_handle_lost_connection+2)& (0+255),w,b
  9370  0036D2  5179               	movf	(??_handle_lost_connection+3)& (0+255),w,b
  9371  0036D4  0A80               	xorlw	128
  9372  0036D6  6F7A               	movwf	(??_handle_lost_connection+4)& (0+255),b
  9373  0036D8  5177               	movf	(??_handle_lost_connection+1)& (0+255),w,b
  9374  0036DA  0A80               	xorlw	128
  9375  0036DC  597A               	subwfb	(??_handle_lost_connection+4)& (0+255),w,b
  9376  0036DE  E3D0               	bnc	l9650
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;miwi_p2p.c: 138: }
  9380                           ;miwi_p2p.c: 139: }
  9381                           ;miwi_p2p.c: 140: if (!stat)
  9382  0036E0  517B               	movf	handle_lost_connection@stat& (0+255),w,b
  9383  0036E2  A4D8               	btfss	status,2,c
  9384  0036E4  0012               	return	
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;miwi_p2p.c: 141: {
  9388                           ;miwi_p2p.c: 142: lost_connection = 1;
  9389  0036E6  0E01               	movlw	1
  9390  0036E8  6E4A               	movwf	_lost_connection,c
  9391                           
  9392                           ; BSR set to: 0
  9393  0036EA  0C01               	retlw	1	;funcret
  9394  0036EC                     __end_of_handle_lost_connection:
  9395                           	opt stack 0
  9396                           tblptru	equ	0xFF8
  9397                           tblptrh	equ	0xFF7
  9398                           tblptrl	equ	0xFF6
  9399                           tablat	equ	0xFF5
  9400                           prodh	equ	0xFF4
  9401                           prodl	equ	0xFF3
  9402                           intcon	equ	0xFF2
  9403                           intcon2	equ	0xFF1
  9404                           intcon3	equ	0xFF0
  9405                           postinc0	equ	0xFEE
  9406                           wreg	equ	0xFE8
  9407                           indf1	equ	0xFE7
  9408                           postinc1	equ	0xFE6
  9409                           fsr1h	equ	0xFE2
  9410                           fsr1l	equ	0xFE1
  9411                           indf2	equ	0xFDF
  9412                           postinc2	equ	0xFDE
  9413                           postdec2	equ	0xFDD
  9414                           fsr2h	equ	0xFDA
  9415                           fsr2l	equ	0xFD9
  9416                           status	equ	0xFD8
  9417                           
  9418 ;; *************** function _send_link_status *****************
  9419 ;; Defined at:
  9420 ;;		line 2027 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  send_status     1   77[BANK0 ] unsigned char 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;		None               void
  9427 ;; Registers used:
  9428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : F/0
  9431 ;;		On exit  : F/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9438 ;;Total ram usage:        1 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:   14
  9441 ;; This function calls:
  9442 ;;		_SendPacket
  9443 ;; This function is called by:
  9444 ;;		_P2PTasks
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text30
  9449  003E76                     __ptext30:
  9450                           	opt stack 0
  9451  003E76                     _send_link_status:
  9452                           	opt stack 11
  9453                           
  9454                           ; BSR set to: 0
  9455                           ;miwi_p2p.c: 2029: bool send_status;
  9456                           ;miwi_p2p.c: 2030: {TxData = 0;};
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;incstack = 0
  9460  003E76  6BDF               	clrf	_TxData& (0+255),b
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;miwi_p2p.c: 2031: TxBuffer[TxData++] = 0x7A;
  9464  003E78  0E95               	movlw	low _TxBuffer
  9465  003E7A  25DF               	addwf	_TxData& (0+255),w,b
  9466  003E7C  6ED9               	movwf	fsr2l,c
  9467  003E7E  6ADA               	clrf	fsr2h,c
  9468  003E80  0E01               	movlw	high _TxBuffer
  9469  003E82  22DA               	addwfc	fsr2h,f,c
  9470  003E84  0E7A               	movlw	122
  9471  003E86  6EDF               	movwf	indf2,c
  9472                           
  9473                           ; BSR set to: 0
  9474  003E88  2BDF               	incf	_TxData& (0+255),f,b
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;miwi_p2p.c: 2037: send_status = SendPacket(0, ConnectionTable[0].Address, 1, 0);
  9478  003E8A  0E22               	movlw	low (_ConnectionTable+4)
  9479  003E8C  6FA3               	movwf	SendPacket@DestinationAddress& (0+255),b
  9480  003E8E  0E02               	movlw	high (_ConnectionTable+4)
  9481  003E90  6FA4               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  9482  003E92  0E01               	movlw	1
  9483  003E94  6FA5               	movwf	SendPacket@isCommand& (0+255),b
  9484  003E96  0E00               	movlw	0
  9485  003E98  6BA6               	clrf	SendPacket@SecurityEnabled& (0+255),b
  9486  003E9A  ECE1  F017         	call	_SendPacket
  9487  003E9E  6FAD               	movwf	send_link_status@send_status& (0+255),b
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;miwi_p2p.c: 2039: if(!send_status)
  9491  003EA0  51AD               	movf	send_link_status@send_status& (0+255),w,b
  9492  003EA2  A4D8               	btfss	status,2,c
  9493  003EA4  0012               	return	
  9494                           
  9495                           ; BSR set to: 0
  9496                           ;miwi_p2p.c: 2040: {
  9497                           ;miwi_p2p.c: 2041: lost_connection = 1;
  9498  003EA6  0E01               	movlw	1
  9499  003EA8  6E4A               	movwf	_lost_connection,c
  9500                           
  9501                           ; BSR set to: 0
  9502  003EAA  0C01               	retlw	1	;funcret
  9503  003EAC                     __end_of_send_link_status:
  9504                           	opt stack 0
  9505                           tblptru	equ	0xFF8
  9506                           tblptrh	equ	0xFF7
  9507                           tblptrl	equ	0xFF6
  9508                           tablat	equ	0xFF5
  9509                           prodh	equ	0xFF4
  9510                           prodl	equ	0xFF3
  9511                           intcon	equ	0xFF2
  9512                           intcon2	equ	0xFF1
  9513                           intcon3	equ	0xFF0
  9514                           postinc0	equ	0xFEE
  9515                           wreg	equ	0xFE8
  9516                           indf1	equ	0xFE7
  9517                           postinc1	equ	0xFE6
  9518                           fsr1h	equ	0xFE2
  9519                           fsr1l	equ	0xFE1
  9520                           indf2	equ	0xFDF
  9521                           postinc2	equ	0xFDE
  9522                           postdec2	equ	0xFDD
  9523                           fsr2h	equ	0xFDA
  9524                           fsr2l	equ	0xFD9
  9525                           status	equ	0xFD8
  9526                           
  9527 ;; *************** function _StartChannelHopping *****************
  9528 ;; Defined at:
  9529 ;;		line 2744 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;  OptimalChann    1    wreg     unsigned char 
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;  OptimalChann    1   89[BANK0 ] unsigned char 
  9534 ;;  t2              4   85[BANK0 ] struct _MIWI_TICK
  9535 ;;  t1              4   81[BANK0 ] struct _MIWI_TICK
  9536 ;;  i               1   90[BANK0 ] unsigned char 
  9537 ;; Return value:  Size  Location     Type
  9538 ;;		None               void
  9539 ;; Registers used:
  9540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9541 ;; Tracked objects:
  9542 ;;		On entry : F/0
  9543 ;;		On exit  : 0/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9547 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9549 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9550 ;;Total ram usage:       14 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:   14
  9553 ;; This function calls:
  9554 ;;		_MiApp_SetChannel
  9555 ;;		_MiWi_TickGet
  9556 ;;		_SendPacket
  9557 ;; This function is called by:
  9558 ;;		_P2PTasks
  9559 ;; This function uses a non-reentrant model
  9560 ;;
  9561                           
  9562                           	psect	text31
  9563  002D2E                     __ptext31:
  9564                           	opt stack 0
  9565  002D2E                     _StartChannelHopping:
  9566                           	opt stack 11
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;incstack = 0
  9570                           ;StartChannelHopping@OptimalChannel stored from wreg
  9571  002D2E  6FB9               	movwf	StartChannelHopping@OptimalChannel& (0+255),b
  9572                           
  9573                           ;miwi_p2p.c: 2746: uint8_t i;
  9574                           ;miwi_p2p.c: 2747: MIWI_TICK t1, t2;
  9575                           ;miwi_p2p.c: 2749: for( i = 0; i < 0x03; i++)
  9576  002D30  0100               	movlb	0	; () banked
  9577  002D32  6BBA               	clrf	StartChannelHopping@i& (0+255),b
  9578  002D34                     l10198:
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;miwi_p2p.c: 2750: {
  9582                           ;miwi_p2p.c: 2751: t1 = MiWi_TickGet();
  9583  002D34  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  9584  002D38  C076  F0B1         	movff	?_MiWi_TickGet,StartChannelHopping@t1
  9585  002D3C  C077  F0B2         	movff	?_MiWi_TickGet+1,StartChannelHopping@t1+1
  9586  002D40  C078  F0B3         	movff	?_MiWi_TickGet+2,StartChannelHopping@t1+2
  9587  002D44  C079  F0B4         	movff	?_MiWi_TickGet+3,StartChannelHopping@t1+3
  9588  002D48                     l738:
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;miwi_p2p.c: 2753: {
  9592                           ;miwi_p2p.c: 2754: t2 = MiWi_TickGet();
  9593  002D48  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
  9594  002D4C  C076  F0B5         	movff	?_MiWi_TickGet,StartChannelHopping@t2
  9595  002D50  C077  F0B6         	movff	?_MiWi_TickGet+1,StartChannelHopping@t2+1
  9596  002D54  C078  F0B7         	movff	?_MiWi_TickGet+2,StartChannelHopping@t2+2
  9597  002D58  C079  F0B8         	movff	?_MiWi_TickGet+3,StartChannelHopping@t2+3
  9598                           
  9599                           ; BSR set to: 0
  9600                           ;miwi_p2p.c: 2755: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/1000*(30780))/(uint32_t
      +                          )2000 )
  9601  002D5C  51B1               	movf	StartChannelHopping@t1& (0+255),w,b
  9602  002D5E  5DB5               	subwf	StartChannelHopping@t2& (0+255),w,b
  9603  002D60  6FAD               	movwf	??_StartChannelHopping& (0+255),b
  9604  002D62  51B2               	movf	(StartChannelHopping@t1+1)& (0+255),w,b
  9605  002D64  59B6               	subwfb	(StartChannelHopping@t2+1)& (0+255),w,b
  9606  002D66  6FAE               	movwf	(??_StartChannelHopping+1)& (0+255),b
  9607  002D68  51B3               	movf	(StartChannelHopping@t1+2)& (0+255),w,b
  9608  002D6A  59B7               	subwfb	(StartChannelHopping@t2+2)& (0+255),w,b
  9609  002D6C  6FAF               	movwf	(??_StartChannelHopping+2)& (0+255),b
  9610  002D6E  51B4               	movf	(StartChannelHopping@t1+3)& (0+255),w,b
  9611  002D70  59B8               	subwfb	(StartChannelHopping@t2+3)& (0+255),w,b
  9612  002D72  6FB0               	movwf	(??_StartChannelHopping+3)& (0+255),b
  9613  002D74  51B0               	movf	(??_StartChannelHopping+3)& (0+255),w,b
  9614  002D76  E107               	bnz	u10420
  9615  002D78  0EE1               	movlw	225
  9616  002D7A  5DAD               	subwf	??_StartChannelHopping& (0+255),w,b
  9617  002D7C  0EC1               	movlw	193
  9618  002D7E  59AE               	subwfb	(??_StartChannelHopping+1)& (0+255),w,b
  9619  002D80  0E03               	movlw	3
  9620  002D82  59AF               	subwfb	(??_StartChannelHopping+2)& (0+255),w,b
  9621  002D84  E3E1               	bnc	l738
  9622  002D86                     u10420:
  9623                           
  9624                           ; BSR set to: 0
  9625                           ;miwi_p2p.c: 2756: {
  9626                           ;miwi_p2p.c: 2757: {TxData = 0;};
  9627  002D86  6BDF               	clrf	_TxData& (0+255),b
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;miwi_p2p.c: 2758: TxBuffer[TxData++] = 0x84;
  9631  002D88  0E95               	movlw	low _TxBuffer
  9632  002D8A  25DF               	addwf	_TxData& (0+255),w,b
  9633  002D8C  6ED9               	movwf	fsr2l,c
  9634  002D8E  6ADA               	clrf	fsr2h,c
  9635  002D90  0E01               	movlw	high _TxBuffer
  9636  002D92  22DA               	addwfc	fsr2h,f,c
  9637  002D94  0E84               	movlw	132
  9638  002D96  6EDF               	movwf	indf2,c
  9639                           
  9640                           ; BSR set to: 0
  9641  002D98  2BDF               	incf	_TxData& (0+255),f,b
  9642                           
  9643                           ; BSR set to: 0
  9644                           ;miwi_p2p.c: 2759: TxBuffer[TxData++] = currentChannel;
  9645  002D9A  0E95               	movlw	low _TxBuffer
  9646  002D9C  25DF               	addwf	_TxData& (0+255),w,b
  9647  002D9E  6ED9               	movwf	fsr2l,c
  9648  002DA0  6ADA               	clrf	fsr2h,c
  9649  002DA2  0E01               	movlw	high _TxBuffer
  9650  002DA4  22DA               	addwfc	fsr2h,f,c
  9651  002DA6  C0E5  FFDF         	movff	_currentChannel,indf2
  9652  002DAA  2BDF               	incf	_TxData& (0+255),f,b
  9653                           
  9654                           ; BSR set to: 0
  9655                           ;miwi_p2p.c: 2760: TxBuffer[TxData++] = OptimalChannel;
  9656  002DAC  0E95               	movlw	low _TxBuffer
  9657  002DAE  25DF               	addwf	_TxData& (0+255),w,b
  9658  002DB0  6ED9               	movwf	fsr2l,c
  9659  002DB2  6ADA               	clrf	fsr2h,c
  9660  002DB4  0E01               	movlw	high _TxBuffer
  9661  002DB6  22DA               	addwfc	fsr2h,f,c
  9662  002DB8  C0B9  FFDF         	movff	StartChannelHopping@OptimalChannel,indf2
  9663                           
  9664                           ; BSR set to: 0
  9665  002DBC  2BDF               	incf	_TxData& (0+255),f,b
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;miwi_p2p.c: 2764: SendPacket(1, (0), 1, 0);
  9669  002DBE  6BA3               	clrf	SendPacket@DestinationAddress& (0+255),b
  9670  002DC0  6BA4               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  9671  002DC2  0E01               	movlw	1
  9672  002DC4  6FA5               	movwf	SendPacket@isCommand& (0+255),b
  9673  002DC6  6BA6               	clrf	SendPacket@SecurityEnabled& (0+255),b
  9674  002DC8  ECE1  F017         	call	_SendPacket
  9675                           
  9676                           ; BSR set to: 0
  9677                           
  9678                           ;miwi_p2p.c: 2766: break;
  9679  002DCC  2BBA               	incf	StartChannelHopping@i& (0+255),f,b
  9680                           
  9681                           ; BSR set to: 0
  9682  002DCE  0E02               	movlw	2
  9683  002DD0  65BA               	cpfsgt	StartChannelHopping@i& (0+255),b
  9684  002DD2  D7B0               	goto	l10198
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;miwi_p2p.c: 2767: }
  9688                           ;miwi_p2p.c: 2768: }
  9689                           ;miwi_p2p.c: 2769: }
  9690                           ;miwi_p2p.c: 2770: MiApp_SetChannel(OptimalChannel);
  9691  002DD4  51B9               	movf	StartChannelHopping@OptimalChannel& (0+255),w,b
  9692  002DD6  EFD2  F01F         	goto	_MiApp_SetChannel
  9693  002DDA                     __end_of_StartChannelHopping:
  9694                           	opt stack 0
  9695                           tblptru	equ	0xFF8
  9696                           tblptrh	equ	0xFF7
  9697                           tblptrl	equ	0xFF6
  9698                           tablat	equ	0xFF5
  9699                           prodh	equ	0xFF4
  9700                           prodl	equ	0xFF3
  9701                           intcon	equ	0xFF2
  9702                           intcon2	equ	0xFF1
  9703                           intcon3	equ	0xFF0
  9704                           postinc0	equ	0xFEE
  9705                           wreg	equ	0xFE8
  9706                           indf1	equ	0xFE7
  9707                           postinc1	equ	0xFE6
  9708                           fsr1h	equ	0xFE2
  9709                           fsr1l	equ	0xFE1
  9710                           indf2	equ	0xFDF
  9711                           postinc2	equ	0xFDE
  9712                           postdec2	equ	0xFDD
  9713                           fsr2h	equ	0xFDA
  9714                           fsr2l	equ	0xFD9
  9715                           status	equ	0xFD8
  9716                           
  9717 ;; *************** function _MiApp_SetChannel *****************
  9718 ;; Defined at:
  9719 ;;		line 2378 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  channel         1    wreg     unsigned char 
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;  channel         1   31[BANK0 ] unsigned char 
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  1    wreg      unsigned char 
  9726 ;; Registers used:
  9727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9728 ;; Tracked objects:
  9729 ;;		On entry : F/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9734 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9736 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9737 ;;Total ram usage:        1 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; Hardware stack levels required when called:   12
  9740 ;; This function calls:
  9741 ;;		_EEPROM_Write
  9742 ;;		_MiMAC_SetChannel
  9743 ;; This function is called by:
  9744 ;;		_MiApp_ProtocolInit
  9745 ;;		_StartChannelHopping
  9746 ;;		_Initialize_Demo
  9747 ;; This function uses a non-reentrant model
  9748 ;;
  9749                           
  9750                           	psect	text32
  9751  003FA4                     __ptext32:
  9752                           	opt stack 0
  9753  003FA4                     _MiApp_SetChannel:
  9754                           	opt stack 12
  9755                           
  9756                           ;incstack = 0
  9757                           ;MiApp_SetChannel@channel stored from wreg
  9758  003FA4  6F7F               	movwf	MiApp_SetChannel@channel& (0+255),b
  9759                           
  9760                           ;miwi_p2p.c: 2380: if( MiMAC_SetChannel(channel, 0) )
  9761  003FA6  0100               	movlb	0	; () banked
  9762  003FA8  6B7C               	clrf	MiMAC_SetChannel@offsetFreq& (0+255),b
  9763  003FAA  517F               	movf	MiApp_SetChannel@channel& (0+255),w,b
  9764  003FAC  ECF1  F019         	call	_MiMAC_SetChannel
  9765  003FB0  0900               	iorlw	0
  9766  003FB2  E00C               	bz	l9704
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;miwi_p2p.c: 2381: {
  9770                           ;miwi_p2p.c: 2382: currentChannel = channel;
  9771  003FB4  C07F  F0E5         	movff	MiApp_SetChannel@channel,_currentChannel
  9772                           
  9773                           ; BSR set to: 0
  9774                           ;miwi_p2p.c: 2384: EEPROM_Write((uint8_t *)&currentChannel, 0x02, 1);
  9775  003FB8  0EE5               	movlw	low _currentChannel
  9776  003FBA  6F77               	movwf	EEPROM_Write@dest& (0+255),b
  9777  003FBC  6B78               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  9778  003FBE  0E02               	movlw	2
  9779  003FC0  6F79               	movwf	EEPROM_Write@addr& (0+255),b
  9780  003FC2  0E01               	movlw	1
  9781  003FC4  6F7A               	movwf	EEPROM_Write@count& (0+255),b
  9782  003FC6  EC37  F01A         	call	_EEPROM_Write	;wreg free
  9783                           
  9784                           ;miwi_p2p.c: 2386: return 1;
  9785  003FCA  0C01               	retlw	1
  9786  003FCC                     l9704:
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;miwi_p2p.c: 2387: }
  9790                           ;miwi_p2p.c: 2388: return 0;
  9791  003FCC  0C00               	retlw	0	;funcret
  9792  003FCE                     __end_of_MiApp_SetChannel:
  9793                           	opt stack 0
  9794                           tblptru	equ	0xFF8
  9795                           tblptrh	equ	0xFF7
  9796                           tblptrl	equ	0xFF6
  9797                           tablat	equ	0xFF5
  9798                           prodh	equ	0xFF4
  9799                           prodl	equ	0xFF3
  9800                           intcon	equ	0xFF2
  9801                           intcon2	equ	0xFF1
  9802                           intcon3	equ	0xFF0
  9803                           postinc0	equ	0xFEE
  9804                           wreg	equ	0xFE8
  9805                           indf1	equ	0xFE7
  9806                           postinc1	equ	0xFE6
  9807                           fsr1h	equ	0xFE2
  9808                           fsr1l	equ	0xFE1
  9809                           indf2	equ	0xFDF
  9810                           postinc2	equ	0xFDE
  9811                           postdec2	equ	0xFDD
  9812                           fsr2h	equ	0xFDA
  9813                           fsr2l	equ	0xFD9
  9814                           status	equ	0xFD8
  9815                           
  9816 ;; *************** function _MiMAC_SetChannel *****************
  9817 ;; Defined at:
  9818 ;;		line 484 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  channel         1    wreg     unsigned char 
  9821 ;;  offsetFreq      1   28[BANK0 ] unsigned char 
  9822 ;; Auto vars:     Size  Location     Type
  9823 ;;  channel         1   30[BANK0 ] unsigned char 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      unsigned char 
  9826 ;; Registers used:
  9827 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : F/0
  9830 ;;		On exit  : F/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9833 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9835 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9836 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9837 ;;Total ram usage:        3 bytes
  9838 ;; Hardware stack levels used:    1
  9839 ;; Hardware stack levels required when called:   11
  9840 ;; This function calls:
  9841 ;;		_RegisterSet
  9842 ;;		_SetRFMode
  9843 ;; This function is called by:
  9844 ;;		_MiApp_SetChannel
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text33
  9849  0033E2                     __ptext33:
  9850                           	opt stack 0
  9851  0033E2                     _MiMAC_SetChannel:
  9852                           	opt stack 12
  9853                           
  9854                           ;incstack = 0
  9855                           ;MiMAC_SetChannel@channel stored from wreg
  9856  0033E2  6F7E               	movwf	MiMAC_SetChannel@channel& (0+255),b
  9857                           
  9858                           ;drv_mrf_miwi_89xa.c: 486: if( channel >= 32 )
  9859  0033E4  0E1F               	movlw	31
  9860  0033E6  0100               	movlb	0	; () banked
  9861  0033E8  657E               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
  9862  0033EA  D001               	goto	l9512
  9863  0033EC  0C00               	retlw	0
  9864  0033EE                     l9512:
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;drv_mrf_miwi_89xa.c: 489: }
  9868                           ;drv_mrf_miwi_89xa.c: 492: RegisterSet(0x0C00 | 100);
  9869  0033EE  0E0C               	movlw	12
  9870  0033F0  6F78               	movwf	(RegisterSet@setting+1)& (0+255),b
  9871  0033F2  0E64               	movlw	100
  9872  0033F4  6F77               	movwf	RegisterSet@setting& (0+255),b
  9873  0033F6  EC46  F01E         	call	_RegisterSet	;wreg free
  9874                           
  9875                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x0E00 | PVALUE[channel]);
  9876  0033FA  0E45               	movlw	low _PVALUE
  9877  0033FC  0100               	movlb	0	; () banked
  9878  0033FE  257E               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  9879  003400  6EF6               	movwf	tblptrl,c
  9880  003402  6AF7               	clrf	tblptrh,c
  9881  003404  0EFD               	movlw	high _PVALUE
  9882  003406  22F7               	addwfc	tblptrh,f,c
  9883  003408                     	if	0	;There are less than 3 active tblptr bytes
  9884  003408                     	endif
  9885  003408  0008               	tblrd		*
  9886  00340A  CFF5 F07D          	movff	tablat,??_MiMAC_SetChannel
  9887  00340E  0E00               	movlw	0
  9888  003410  117D               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  9889  003412  6F77               	movwf	RegisterSet@setting& (0+255),b
  9890  003414  0E0E               	movlw	14
  9891  003416  6F78               	movwf	(RegisterSet@setting+1)& (0+255),b
  9892  003418  EC46  F01E         	call	_RegisterSet	;wreg free
  9893                           
  9894                           ;drv_mrf_miwi_89xa.c: 494: RegisterSet(0x1000 | SVALUE[channel]);
  9895  00341C  0E65               	movlw	low _SVALUE
  9896  00341E  0100               	movlb	0	; () banked
  9897  003420  257E               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  9898  003422  6EF6               	movwf	tblptrl,c
  9899  003424  6AF7               	clrf	tblptrh,c
  9900  003426  0EFD               	movlw	high _SVALUE
  9901  003428  22F7               	addwfc	tblptrh,f,c
  9902  00342A                     	if	0	;There are less than 3 active tblptr bytes
  9903  00342A                     	endif
  9904  00342A  0008               	tblrd		*
  9905  00342C  CFF5 F07D          	movff	tablat,??_MiMAC_SetChannel
  9906  003430  0E00               	movlw	0
  9907  003432  117D               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  9908  003434  6F77               	movwf	RegisterSet@setting& (0+255),b
  9909  003436  0E10               	movlw	16
  9910  003438  6F78               	movwf	(RegisterSet@setting+1)& (0+255),b
  9911  00343A  EC46  F01E         	call	_RegisterSet	;wreg free
  9912                           
  9913                           ;drv_mrf_miwi_89xa.c: 495: SetRFMode(0x20);
  9914  00343E  0E20               	movlw	32
  9915  003440  ECB2  F01B         	call	_SetRFMode
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;drv_mrf_miwi_89xa.c: 496: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
  9919  003444  6B78               	clrf	(RegisterSet@setting+1)& (0+255),b
  9920  003446  0E46               	movlw	70
  9921  003448  6F77               	movwf	RegisterSet@setting& (0+255),b
  9922  00344A  EC46  F01E         	call	_RegisterSet	;wreg free
  9923                           
  9924                           ;drv_mrf_miwi_89xa.c: 497: SetRFMode(0x40);
  9925  00344E  0E40               	movlw	64
  9926  003450  ECB2  F01B         	call	_SetRFMode
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;drv_mrf_miwi_89xa.c: 498: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  9930  003454  0E1C               	movlw	28
  9931  003456  6F78               	movwf	(RegisterSet@setting+1)& (0+255),b
  9932  003458  0E0F               	movlw	15
  9933  00345A  6F77               	movwf	RegisterSet@setting& (0+255),b
  9934  00345C  EC46  F01E         	call	_RegisterSet	;wreg free
  9935                           
  9936                           ;drv_mrf_miwi_89xa.c: 499: SetRFMode(0x20);
  9937  003460  0E20               	movlw	32
  9938  003462  ECB2  F01B         	call	_SetRFMode
  9939                           
  9940                           ; BSR set to: 0
  9941                           ;drv_mrf_miwi_89xa.c: 500: SetRFMode(0x60);
  9942  003466  0E60               	movlw	96
  9943  003468  ECB2  F01B         	call	_SetRFMode
  9944                           
  9945                           ; BSR set to: 0
  9946                           
  9947                           ; BSR set to: 0
  9948                           ;drv_mrf_miwi_89xa.c: 502: return 1;
  9949  00346C  0C01               	retlw	1	;funcret
  9950  00346E                     __end_of_MiMAC_SetChannel:
  9951                           	opt stack 0
  9952                           tblptru	equ	0xFF8
  9953                           tblptrh	equ	0xFF7
  9954                           tblptrl	equ	0xFF6
  9955                           tablat	equ	0xFF5
  9956                           prodh	equ	0xFF4
  9957                           prodl	equ	0xFF3
  9958                           intcon	equ	0xFF2
  9959                           intcon2	equ	0xFF1
  9960                           intcon3	equ	0xFF0
  9961                           postinc0	equ	0xFEE
  9962                           wreg	equ	0xFE8
  9963                           indf1	equ	0xFE7
  9964                           postinc1	equ	0xFE6
  9965                           fsr1h	equ	0xFE2
  9966                           fsr1l	equ	0xFE1
  9967                           indf2	equ	0xFDF
  9968                           postinc2	equ	0xFDE
  9969                           postdec2	equ	0xFDD
  9970                           fsr2h	equ	0xFDA
  9971                           fsr2l	equ	0xFD9
  9972                           status	equ	0xFD8
  9973                           
  9974 ;; *************** function _SW_Ack_SrED *****************
  9975 ;; Defined at:
  9976 ;;		line 2092 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;  Dest_Addr       2   77[BANK0 ] PTR unsigned char 
  9979 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1    wreg      unsigned char 
  9984 ;; Registers used:
  9985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9986 ;; Tracked objects:
  9987 ;;		On entry : F/1
  9988 ;;		On exit  : F/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9991 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9995 ;;Total ram usage:        2 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; Hardware stack levels required when called:   14
  9998 ;; This function calls:
  9999 ;;		_SendPacket
 10000 ;; This function is called by:
 10001 ;;		_P2PTasks
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           	psect	text34
 10006  003FCE                     __ptext34:
 10007                           	opt stack 0
 10008  003FCE                     _SW_Ack_SrED:
 10009                           	opt stack 11
 10010                           
 10011                           ; BSR set to: 1
 10012                           ;miwi_p2p.c: 2094: {TxData = 0;};
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;incstack = 0
 10016  003FCE  0100               	movlb	0	; () banked
 10017  003FD0  6BDF               	clrf	_TxData& (0+255),b
 10018                           
 10019                           ; BSR set to: 0
 10020                           ;miwi_p2p.c: 2095: TxBuffer[TxData++] = 0xDA;
 10021  003FD2  0E95               	movlw	low _TxBuffer
 10022  003FD4  25DF               	addwf	_TxData& (0+255),w,b
 10023  003FD6  6ED9               	movwf	fsr2l,c
 10024  003FD8  6ADA               	clrf	fsr2h,c
 10025  003FDA  0E01               	movlw	high _TxBuffer
 10026  003FDC  22DA               	addwfc	fsr2h,f,c
 10027  003FDE  0EDA               	movlw	218
 10028  003FE0  6EDF               	movwf	indf2,c
 10029                           
 10030                           ; BSR set to: 0
 10031  003FE2  2BDF               	incf	_TxData& (0+255),f,b
 10032                           
 10033                           ; BSR set to: 0
 10034                           ;miwi_p2p.c: 2097: return SendPacket(0, Dest_Addr, 1, 0);
 10035                           ;	Return value of _SW_Ack_SrED is never used
 10036  003FE4  C0AD  F0A3         	movff	SW_Ack_SrED@Dest_Addr,SendPacket@DestinationAddress
 10037  003FE8  C0AE  F0A4         	movff	SW_Ack_SrED@Dest_Addr+1,SendPacket@DestinationAddress+1
 10038  003FEC  0E01               	movlw	1
 10039  003FEE  6FA5               	movwf	SendPacket@isCommand& (0+255),b
 10040  003FF0  0E00               	movlw	0
 10041  003FF2  6BA6               	clrf	SendPacket@SecurityEnabled& (0+255),b
 10042  003FF4  EFE1  F017         	goto	_SendPacket
 10043  003FF8                     __end_of_SW_Ack_SrED:
 10044                           	opt stack 0
 10045                           tblptru	equ	0xFF8
 10046                           tblptrh	equ	0xFF7
 10047                           tblptrl	equ	0xFF6
 10048                           tablat	equ	0xFF5
 10049                           prodh	equ	0xFF4
 10050                           prodl	equ	0xFF3
 10051                           intcon	equ	0xFF2
 10052                           intcon2	equ	0xFF1
 10053                           intcon3	equ	0xFF0
 10054                           postinc0	equ	0xFEE
 10055                           wreg	equ	0xFE8
 10056                           indf1	equ	0xFE7
 10057                           postinc1	equ	0xFE6
 10058                           fsr1h	equ	0xFE2
 10059                           fsr1l	equ	0xFE1
 10060                           indf2	equ	0xFDF
 10061                           postinc2	equ	0xFDE
 10062                           postdec2	equ	0xFDD
 10063                           fsr2h	equ	0xFDA
 10064                           fsr2l	equ	0xFD9
 10065                           status	equ	0xFD8
 10066                           
 10067 ;; *************** function _MiMAC_ReceivedPacket *****************
 10068 ;; Defined at:
 10069 ;;		line 851 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;		None
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;  PayloadIndex    1   44[BANK0 ] unsigned char 
 10074 ;;  j               1    0        unsigned char 
 10075 ;;  currentTick     4   40[BANK0 ] struct _MIWI_TICK
 10076 ;;  i               1   45[BANK0 ] unsigned char 
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1    wreg      unsigned char 
 10079 ;; Registers used:
 10080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10081 ;; Tracked objects:
 10082 ;;		On entry : F/0
 10083 ;;		On exit  : E/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10087 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10088 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10089 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10090 ;;Total ram usage:       14 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:    9
 10093 ;; This function calls:
 10094 ;;		_MiWi_TickGet
 10095 ;; This function is called by:
 10096 ;;		_P2PTasks
 10097 ;; This function uses a non-reentrant model
 10098 ;;
 10099                           
 10100                           	psect	text35
 10101  001EA8                     __ptext35:
 10102                           	opt stack 0
 10103  001EA8                     _MiMAC_ReceivedPacket:
 10104                           	opt stack 16
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;drv_mrf_miwi_89xa.c: 853: uint8_t i;
 10108                           ;drv_mrf_miwi_89xa.c: 854: MIWI_TICK currentTick;
 10109                           ;drv_mrf_miwi_89xa.c: 858: for(i = 0; i < 5; i++)
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;incstack = 0
 10113  001EA8  6B8D               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
 10114  001EAA                     l9854:
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;drv_mrf_miwi_89xa.c: 859: {
 10118                           ;drv_mrf_miwi_89xa.c: 860: currentTick = MiWi_TickGet();
 10119  001EAA  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
 10120  001EAE  C076  F088         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
 10121  001EB2  C077  F089         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
 10122  001EB6  C078  F08A         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
 10123  001EBA  C079  F08B         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
 10124                           
 10125                           ; BSR set to: 0
 10126                           ;drv_mrf_miwi_89xa.c: 861: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
 10127                           ;drv_mrf_miwi_89xa.c: 862: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          6000000)/32)) )
 10128  001EBE  518D               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 10129  001EC0  0D06               	mullw	6
 10130  001EC2  0E00               	movlw	low _AckInfo
 10131  001EC4  24F3               	addwf	prodl,w,c
 10132  001EC6  6ED9               	movwf	fsr2l,c
 10133  001EC8  0E02               	movlw	high _AckInfo
 10134  001ECA  20F4               	addwfc	prodh,w,c
 10135  001ECC  6EDA               	movwf	fsr2h,c
 10136  001ECE  50DF               	movf	indf2,w,c
 10137  001ED0  E03F               	bz	l9864
 10138                           
 10139                           ; BSR set to: 0
 10140  001ED2  518D               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 10141  001ED4  0D06               	mullw	6
 10142  001ED6  0E02               	movlw	low (_AckInfo+2)
 10143  001ED8  24F3               	addwf	prodl,w,c
 10144  001EDA  6ED9               	movwf	fsr2l,c
 10145  001EDC  0E02               	movlw	high (_AckInfo+2)
 10146  001EDE  20F4               	addwfc	prodh,w,c
 10147  001EE0  6EDA               	movwf	fsr2h,c
 10148  001EE2  5188               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 10149  001EE4  5CDE               	subwf	postinc2,w,c
 10150  001EE6  5189               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 10151  001EE8  58DE               	subwfb	postinc2,w,c
 10152  001EEA  518A               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 10153  001EEC  58DE               	subwfb	postinc2,w,c
 10154  001EEE  518B               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 10155  001EF0  58DE               	subwfb	postinc2,w,c
 10156  001EF2  E22E               	bc	l9864
 10157                           
 10158                           ; BSR set to: 0
 10159  001EF4  518D               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 10160  001EF6  0D06               	mullw	6
 10161  001EF8  0E02               	movlw	low (_AckInfo+2)
 10162  001EFA  24F3               	addwf	prodl,w,c
 10163  001EFC  6ED9               	movwf	fsr2l,c
 10164  001EFE  0E02               	movlw	high (_AckInfo+2)
 10165  001F00  20F4               	addwfc	prodh,w,c
 10166  001F02  6EDA               	movwf	fsr2h,c
 10167  001F04  CFDE F080          	movff	postinc2,??_MiMAC_ReceivedPacket
 10168  001F08  CFDE F081          	movff	postinc2,??_MiMAC_ReceivedPacket+1
 10169  001F0C  CFDE F082          	movff	postinc2,??_MiMAC_ReceivedPacket+2
 10170  001F10  CFDE F083          	movff	postinc2,??_MiMAC_ReceivedPacket+3
 10171  001F14  5180               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
 10172  001F16  5D88               	subwf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
 10173  001F18  6F84               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
 10174  001F1A  5181               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 10175  001F1C  5989               	subwfb	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
 10176  001F1E  6F85               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
 10177  001F20  5182               	movf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
 10178  001F22  598A               	subwfb	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
 10179  001F24  6F86               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
 10180  001F26  5183               	movf	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
 10181  001F28  598B               	subwfb	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
 10182  001F2A  6F87               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
 10183  001F2C  5187               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
 10184  001F2E  E107               	bnz	u10030
 10185  001F30  0E21               	movlw	33
 10186  001F32  5D84               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
 10187  001F34  0EA1               	movlw	161
 10188  001F36  5985               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
 10189  001F38  0E07               	movlw	7
 10190  001F3A  5986               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
 10191  001F3C  E309               	bnc	l9864
 10192  001F3E                     u10030:
 10193                           
 10194                           ; BSR set to: 0
 10195                           ;drv_mrf_miwi_89xa.c: 863: {
 10196                           ;drv_mrf_miwi_89xa.c: 864: AckInfo[i].Valid = 0;
 10197  001F3E  518D               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 10198  001F40  0D06               	mullw	6
 10199  001F42  0E00               	movlw	low _AckInfo
 10200  001F44  24F3               	addwf	prodl,w,c
 10201  001F46  6ED9               	movwf	fsr2l,c
 10202  001F48  0E02               	movlw	high _AckInfo
 10203  001F4A  20F4               	addwfc	prodh,w,c
 10204  001F4C  6EDA               	movwf	fsr2h,c
 10205  001F4E  6ADF               	clrf	indf2,c
 10206  001F50                     l9864:
 10207                           
 10208                           ; BSR set to: 0
 10209  001F50  2B8D               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 10210                           
 10211                           ; BSR set to: 0
 10212  001F52  0E04               	movlw	4
 10213  001F54  658D               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 10214  001F56  D7A9               	goto	l9854
 10215                           
 10216                           ; BSR set to: 0
 10217                           ;drv_mrf_miwi_89xa.c: 865: }
 10218                           ;drv_mrf_miwi_89xa.c: 866: }
 10219                           ;drv_mrf_miwi_89xa.c: 869: if( ReceivedBankIndex != 0xFF )
 10220  001F58  29DE               	incf	_ReceivedBankIndex& (0+255),w,b
 10221  001F5A  E001               	bz	l163
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;drv_mrf_miwi_89xa.c: 870: {
 10225                           ;drv_mrf_miwi_89xa.c: 871: return 0;
 10226  001F5C  0C00               	retlw	0
 10227  001F5E                     l163:
 10228                           
 10229                           ; BSR set to: 0
 10230                           ;drv_mrf_miwi_89xa.c: 872: }
 10231                           ;drv_mrf_miwi_89xa.c: 874: for(i = 0; i < 2; i++)
 10232  001F5E  6B8D               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
 10233  001F60                     l9878:
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;drv_mrf_miwi_89xa.c: 875: {
 10237                           ;drv_mrf_miwi_89xa.c: 876: if( RxPacket[i].flags.bits.Valid )
 10238  001F60  518D               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 10239  001F62  0D39               	mullw	57
 10240  001F64  0E00               	movlw	low _RxPacket
 10241  001F66  24F3               	addwf	prodl,w,c
 10242  001F68  6ED9               	movwf	fsr2l,c
 10243  001F6A  0E03               	movlw	high _RxPacket
 10244  001F6C  20F4               	addwfc	prodh,w,c
 10245  001F6E  6EDA               	movwf	fsr2h,c
 10246  001F70  A0DF               	btfss	indf2,0,c
 10247  001F72  D067               	goto	l9906
 10248                           
 10249                           ; BSR set to: 3
 10250                           ;drv_mrf_miwi_89xa.c: 877: {
 10251                           ;drv_mrf_miwi_89xa.c: 878: uint8_t PayloadIndex;
 10252                           ;drv_mrf_miwi_89xa.c: 879: uint8_t j;
 10253                           ;drv_mrf_miwi_89xa.c: 881: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
 10254  001F74  0100               	movlb	0	; () banked
 10255  001F76  518D               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 10256  001F78  0D39               	mullw	57
 10257  001F7A  0E01               	movlw	low (_RxPacket+1)
 10258  001F7C  24F3               	addwf	prodl,w,c
 10259  001F7E  6ED9               	movwf	fsr2l,c
 10260  001F80  0E03               	movlw	high (_RxPacket+1)
 10261  001F82  20F4               	addwfc	prodh,w,c
 10262  001F84  6EDA               	movwf	fsr2h,c
 10263  001F86  50DF               	movf	indf2,w,c
 10264  001F88  0101               	movlb	1	; () banked
 10265  001F8A  6F73               	movwf	_MACRxPacket& (0+255),b
 10266                           
 10267                           ;drv_mrf_miwi_89xa.c: 882: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
 10268  001F8C  0100               	movlb	0	; () banked
 10269  001F8E  518D               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 10270  001F90  0D39               	mullw	57
 10271  001F92  0E38               	movlw	low (_RxPacket+56)
 10272  001F94  24F3               	addwf	prodl,w,c
 10273  001F96  6ED9               	movwf	fsr2l,c
 10274  001F98  0E03               	movlw	high (_RxPacket+56)
 10275  001F9A  20F4               	addwfc	prodh,w,c
 10276  001F9C  6EDA               	movwf	fsr2h,c
 10277  001F9E  50DF               	movf	indf2,w,c
 10278  001FA0  0101               	movlb	1	; () banked
 10279  001FA2  6F78               	movwf	(_MACRxPacket+5)& (0+255),b
 10280                           
 10281                           ; BSR set to: 1
 10282                           ;drv_mrf_miwi_89xa.c: 883: PayloadIndex = 2;
 10283  001FA4  0E02               	movlw	2
 10284  001FA6  0100               	movlb	0	; () banked
 10285  001FA8  6F8C               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
 10286                           
 10287                           ; BSR set to: 0
 10288                           ;drv_mrf_miwi_89xa.c: 885: if( MACRxPacket.flags.bits.destPrsnt )
 10289  001FAA  0101               	movlb	1	; () banked
 10290  001FAC  AD73               	btfss	_MACRxPacket& (0+255),6,b
 10291  001FAE  D006               	goto	l9888
 10292                           
 10293                           ; BSR set to: 1
 10294                           ;drv_mrf_miwi_89xa.c: 886: {
 10295                           ;drv_mrf_miwi_89xa.c: 887: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 10296  001FB0  3039               	rrcf	_MACInitParams,w,c
 10297  001FB2  32E8               	rrcf	wreg,f,c
 10298  001FB4  32E8               	rrcf	wreg,f,c
 10299  001FB6  0B0F               	andlw	15
 10300  001FB8  0100               	movlb	0	; () banked
 10301  001FBA  278C               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 10302  001FBC                     l9888:
 10303                           
 10304                           ;drv_mrf_miwi_89xa.c: 888: }
 10305                           ;drv_mrf_miwi_89xa.c: 890: if( MACRxPacket.flags.bits.sourcePrsnt )
 10306  001FBC  0101               	movlb	1	; () banked
 10307  001FBE  AF73               	btfss	_MACRxPacket& (0+255),7,b
 10308  001FC0  D01E               	goto	l169
 10309                           
 10310                           ; BSR set to: 1
 10311                           ;drv_mrf_miwi_89xa.c: 891: {
 10312                           ;drv_mrf_miwi_89xa.c: 892: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
 10313  001FC2  0100               	movlb	0	; () banked
 10314  001FC4  518D               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 10315  001FC6  0D39               	mullw	57
 10316  001FC8  0E00               	movlw	low _RxPacket
 10317  001FCA  6F80               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 10318  001FCC  0E03               	movlw	high _RxPacket
 10319  001FCE  6F81               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 10320  001FD0  2B80               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 10321  001FD2  0E00               	movlw	0
 10322  001FD4  2381               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 10323  001FD6  50F3               	movf	prodl,w,c
 10324  001FD8  2780               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 10325  001FDA  50F4               	movf	prodh,w,c
 10326  001FDC  2381               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 10327  001FDE  518C               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 10328  001FE0  2580               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 10329  001FE2  0101               	movlb	1	; () banked
 10330  001FE4  6F74               	movwf	(_MACRxPacket+1)& (0+255),b
 10331  001FE6  0100               	movlb	0	; () banked
 10332  001FE8  0E00               	movlw	0
 10333  001FEA  2181               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 10334  001FEC  0101               	movlb	1	; () banked
 10335  001FEE  6F75               	movwf	(_MACRxPacket+2)& (0+255),b
 10336                           
 10337                           ; BSR set to: 1
 10338                           ;drv_mrf_miwi_89xa.c: 893: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
 10339  001FF0  3039               	rrcf	_MACInitParams,w,c
 10340  001FF2  32E8               	rrcf	wreg,f,c
 10341  001FF4  32E8               	rrcf	wreg,f,c
 10342  001FF6  0B0F               	andlw	15
 10343  001FF8  0100               	movlb	0	; () banked
 10344  001FFA  278C               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
 10345                           
 10346                           ;drv_mrf_miwi_89xa.c: 894: }
 10347  001FFC  D002               	goto	l9894
 10348  001FFE                     l169:
 10349                           
 10350                           ; BSR set to: 1
 10351                           ;drv_mrf_miwi_89xa.c: 895: else
 10352                           ;drv_mrf_miwi_89xa.c: 896: {
 10353                           ;drv_mrf_miwi_89xa.c: 897: MACRxPacket.SourceAddress = (0);
 10354  001FFE  6B74               	clrf	(_MACRxPacket+1)& (0+255),b
 10355  002000  6B75               	clrf	(_MACRxPacket+2)& (0+255),b
 10356  002002                     l9894:
 10357                           
 10358                           ;drv_mrf_miwi_89xa.c: 898: }
 10359                           ;drv_mrf_miwi_89xa.c: 998: MACRxPacket.PayloadLen -= PayloadIndex;
 10360  002002  0100               	movlb	0	; () banked
 10361  002004  518C               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 10362  002006  0101               	movlb	1	; () banked
 10363  002008  5F78               	subwf	(_MACRxPacket+5)& (0+255),f,b
 10364                           
 10365                           ; BSR set to: 1
 10366                           ;drv_mrf_miwi_89xa.c: 1002: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
 10367  00200A  0100               	movlb	0	; () banked
 10368  00200C  518D               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
 10369  00200E  0D39               	mullw	57
 10370  002010  0E00               	movlw	low _RxPacket
 10371  002012  6F80               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
 10372  002014  0E03               	movlw	high _RxPacket
 10373  002016  6F81               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
 10374  002018  2B80               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
 10375  00201A  0E00               	movlw	0
 10376  00201C  2381               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 10377  00201E  50F3               	movf	prodl,w,c
 10378  002020  2780               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
 10379  002022  50F4               	movf	prodh,w,c
 10380  002024  2381               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
 10381  002026  518C               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
 10382  002028  2580               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
 10383  00202A  0101               	movlb	1	; () banked
 10384  00202C  6F76               	movwf	(_MACRxPacket+3)& (0+255),b
 10385  00202E  0100               	movlb	0	; () banked
 10386  002030  0E00               	movlw	0
 10387  002032  2181               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
 10388  002034  0101               	movlb	1	; () banked
 10389  002036  6F77               	movwf	(_MACRxPacket+4)& (0+255),b
 10390                           
 10391                           ; BSR set to: 1
 10392                           ;drv_mrf_miwi_89xa.c: 1004: MACRxPacket.RSSIValue = RSSILock;
 10393  002038  C041  F179         	movff	_RSSILock,_MACRxPacket+6
 10394                           
 10395                           ; BSR set to: 1
 10396                           ;drv_mrf_miwi_89xa.c: 1007: ReceivedBankIndex = i;
 10397  00203C  C08D  F0DE         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
 10398                           
 10399                           ; BSR set to: 1
 10400                           ;drv_mrf_miwi_89xa.c: 1008: return 1;
 10401  002040  0C01               	retlw	1
 10402  002042                     l9906:
 10403                           
 10404                           ; BSR set to: 3
 10405  002042  0100               	movlb	0	; () banked
 10406  002044  2B8D               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
 10407                           
 10408                           ; BSR set to: 0
 10409  002046  0E01               	movlw	1
 10410  002048  658D               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
 10411  00204A  D78A               	goto	l9878
 10412  00204C  0C00               	retlw	0
 10413  00204E                     __end_of_MiMAC_ReceivedPacket:
 10414                           	opt stack 0
 10415                           tblptru	equ	0xFF8
 10416                           tblptrh	equ	0xFF7
 10417                           tblptrl	equ	0xFF6
 10418                           tablat	equ	0xFF5
 10419                           prodh	equ	0xFF4
 10420                           prodl	equ	0xFF3
 10421                           intcon	equ	0xFF2
 10422                           intcon2	equ	0xFF1
 10423                           intcon3	equ	0xFF0
 10424                           postinc0	equ	0xFEE
 10425                           wreg	equ	0xFE8
 10426                           indf1	equ	0xFE7
 10427                           postinc1	equ	0xFE6
 10428                           fsr1h	equ	0xFE2
 10429                           fsr1l	equ	0xFE1
 10430                           indf2	equ	0xFDF
 10431                           postinc2	equ	0xFDE
 10432                           postdec2	equ	0xFDD
 10433                           fsr2h	equ	0xFDA
 10434                           fsr2l	equ	0xFD9
 10435                           status	equ	0xFD8
 10436                           
 10437 ;; *************** function _MiApp_BroadcastConnectionTable *****************
 10438 ;; Defined at:
 10439 ;;		line 1902 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 10440 ;; Parameters:    Size  Location     Type
 10441 ;;		None
 10442 ;; Auto vars:     Size  Location     Type
 10443 ;;  j               1   88[BANK0 ] unsigned char 
 10444 ;;  i               1   87[BANK0 ] unsigned char 
 10445 ;;  k               1   86[BANK0 ] unsigned char 
 10446 ;;  broadcast_co    1   85[BANK0 ] unsigned char 
 10447 ;;  count           1   84[BANK0 ] unsigned char 
 10448 ;; Return value:  Size  Location     Type
 10449 ;;		None               void
 10450 ;; Registers used:
 10451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10452 ;; Tracked objects:
 10453 ;;		On entry : F/0
 10454 ;;		On exit  : F/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10458 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10459 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10460 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10461 ;;Total ram usage:       12 bytes
 10462 ;; Hardware stack levels used:    1
 10463 ;; Hardware stack levels required when called:   14
 10464 ;; This function calls:
 10465 ;;		_SendPacket
 10466 ;;		___awdiv
 10467 ;;		___awmod
 10468 ;; This function is called by:
 10469 ;;		_P2PTasks
 10470 ;; This function uses a non-reentrant model
 10471 ;;
 10472                           
 10473                           	psect	text36
 10474  001AA2                     __ptext36:
 10475                           	opt stack 0
 10476  001AA2                     _MiApp_BroadcastConnectionTable:
 10477                           	opt stack 11
 10478                           
 10479                           ; BSR set to: 0
 10480                           ;miwi_p2p.c: 1909: if ((conn_size * 4 ) + 4 < 35)
 10481                           
 10482                           ; BSR set to: 0
 10483                           
 10484                           ;incstack = 0
 10485  001AA2  51E4               	movf	_conn_size& (0+255),w,b
 10486  001AA4  0D04               	mullw	4
 10487  001AA6  0E04               	movlw	4
 10488  001AA8  26F3               	addwf	prodl,f,c
 10489  001AAA  0E00               	movlw	0
 10490  001AAC  22F4               	addwfc	prodh,f,c
 10491  001AAE  BEF4               	btfsc	prodh,7,c
 10492  001AB0  D005               	goto	l10044
 10493  001AB2  50F4               	movf	prodh,w,c
 10494  001AB4  E106               	bnz	l10046
 10495  001AB6  0E23               	movlw	35
 10496  001AB8  5CF3               	subwf	prodl,w,c
 10497  001ABA  E203               	bc	l10046
 10498  001ABC                     l10044:
 10499                           
 10500                           ; BSR set to: 0
 10501                           ;miwi_p2p.c: 1910: {
 10502                           ;miwi_p2p.c: 1911: broadcast_count = 1;
 10503  001ABC  0E01               	movlw	1
 10504  001ABE  6FB5               	movwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),b
 10505                           
 10506                           ;miwi_p2p.c: 1912: }
 10507  001AC0  D027               	goto	l10052
 10508  001AC2                     l10046:
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;miwi_p2p.c: 1913: else
 10512                           ;miwi_p2p.c: 1914: {
 10513                           ;miwi_p2p.c: 1915: broadcast_count = ((conn_size * 4) + 4 )/ 35;
 10514  001AC2  51E4               	movf	_conn_size& (0+255),w,b
 10515  001AC4  0D04               	mullw	4
 10516  001AC6  0E04               	movlw	4
 10517  001AC8  24F3               	addwf	prodl,w,c
 10518  001ACA  6F76               	movwf	___awdiv@dividend& (0+255),b
 10519  001ACC  0E00               	movlw	0
 10520  001ACE  20F4               	addwfc	prodh,w,c
 10521  001AD0  6F77               	movwf	(___awdiv@dividend+1)& (0+255),b
 10522  001AD2  6B79               	clrf	(___awdiv@divisor+1)& (0+255),b
 10523  001AD4  0E23               	movlw	35
 10524  001AD6  6F78               	movwf	___awdiv@divisor& (0+255),b
 10525  001AD8  EC76  F01B         	call	___awdiv	;wreg free
 10526  001ADC  5176               	movf	?___awdiv& (0+255),w,b
 10527  001ADE  6FB5               	movwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),b
 10528                           
 10529                           ; BSR set to: 0
 10530                           ;miwi_p2p.c: 1916: if ((conn_size *4) + 4 % 35 != 0)
 10531  001AE0  51E4               	movf	_conn_size& (0+255),w,b
 10532  001AE2  0D04               	mullw	4
 10533  001AE4  0E04               	movlw	4
 10534  001AE6  26F3               	addwf	prodl,f,c
 10535  001AE8  0E00               	movlw	0
 10536  001AEA  22F4               	addwfc	prodh,f,c
 10537  001AEC  50F3               	movf	prodl,w,c
 10538  001AEE  10F4               	iorwf	prodh,w,c
 10539  001AF0  E00F               	bz	l10052
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;miwi_p2p.c: 1917: {
 10543                           ;miwi_p2p.c: 1918: broadcast_count = broadcast_count + ((conn_size *4) + 4 )% 35;
 10544  001AF2  51E4               	movf	_conn_size& (0+255),w,b
 10545  001AF4  0D04               	mullw	4
 10546  001AF6  0E04               	movlw	4
 10547  001AF8  24F3               	addwf	prodl,w,c
 10548  001AFA  6F76               	movwf	___awmod@dividend& (0+255),b
 10549  001AFC  0E00               	movlw	0
 10550  001AFE  20F4               	addwfc	prodh,w,c
 10551  001B00  6F77               	movwf	(___awmod@dividend+1)& (0+255),b
 10552  001B02  6B79               	clrf	(___awmod@divisor+1)& (0+255),b
 10553  001B04  0E23               	movlw	35
 10554  001B06  6F78               	movwf	___awmod@divisor& (0+255),b
 10555  001B08  EC5D  F01C         	call	___awmod	;wreg free
 10556  001B0C  5176               	movf	?___awmod& (0+255),w,b
 10557  001B0E  27B5               	addwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),f,b
 10558  001B10                     l10052:
 10559                           
 10560                           ; BSR set to: 0
 10561                           ;miwi_p2p.c: 1919: }
 10562                           ;miwi_p2p.c: 1921: }
 10563                           ;miwi_p2p.c: 1923: for (i = 0 ; i < broadcast_count ; i++)
 10564  001B10  6BB7               	clrf	MiApp_BroadcastConnectionTable@i& (0+255),b
 10565  001B12  D0CC               	goto	l10122
 10566  001B14                     l619:
 10567                           
 10568                           ; BSR set to: 0
 10569                           ;miwi_p2p.c: 1924: {
 10570                           ;miwi_p2p.c: 1925: {TxData = 0;};
 10571  001B14  6BDF               	clrf	_TxData& (0+255),b
 10572                           
 10573                           ; BSR set to: 0
 10574                           ;miwi_p2p.c: 1926: TxBuffer[TxData++] = 0x77;
 10575  001B16  0E95               	movlw	low _TxBuffer
 10576  001B18  25DF               	addwf	_TxData& (0+255),w,b
 10577  001B1A  6ED9               	movwf	fsr2l,c
 10578  001B1C  6ADA               	clrf	fsr2h,c
 10579  001B1E  0E01               	movlw	high _TxBuffer
 10580  001B20  22DA               	addwfc	fsr2h,f,c
 10581  001B22  0E77               	movlw	119
 10582  001B24  6EDF               	movwf	indf2,c
 10583                           
 10584                           ; BSR set to: 0
 10585  001B26  2BDF               	incf	_TxData& (0+255),f,b
 10586                           
 10587                           ; BSR set to: 0
 10588                           ;miwi_p2p.c: 1927: TxBuffer[TxData++] = conn_size;
 10589  001B28  0E95               	movlw	low _TxBuffer
 10590  001B2A  25DF               	addwf	_TxData& (0+255),w,b
 10591  001B2C  6ED9               	movwf	fsr2l,c
 10592  001B2E  6ADA               	clrf	fsr2h,c
 10593  001B30  0E01               	movlw	high _TxBuffer
 10594  001B32  22DA               	addwfc	fsr2h,f,c
 10595  001B34  C0E4  FFDF         	movff	_conn_size,indf2
 10596  001B38  2BDF               	incf	_TxData& (0+255),f,b
 10597                           
 10598                           ; BSR set to: 0
 10599                           ;miwi_p2p.c: 1928: TxBuffer[TxData++] = ((35-4)/4)*i;
 10600  001B3A  51B7               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10601  001B3C  0D07               	mullw	7
 10602  001B3E  0E95               	movlw	low _TxBuffer
 10603  001B40  25DF               	addwf	_TxData& (0+255),w,b
 10604  001B42  6ED9               	movwf	fsr2l,c
 10605  001B44  6ADA               	clrf	fsr2h,c
 10606  001B46  0E01               	movlw	high _TxBuffer
 10607  001B48  22DA               	addwfc	fsr2h,f,c
 10608  001B4A  CFF3 FFDF          	movff	prodl,indf2
 10609                           
 10610                           ; BSR set to: 0
 10611  001B4E  2BDF               	incf	_TxData& (0+255),f,b
 10612                           
 10613                           ;miwi_p2p.c: 1929: TxBuffer[TxData++] = ((35-4)/4)*(i+1);
 10614  001B50  29B7               	incf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10615  001B52  0D07               	mullw	7
 10616  001B54  0E95               	movlw	low _TxBuffer
 10617  001B56  25DF               	addwf	_TxData& (0+255),w,b
 10618  001B58  6ED9               	movwf	fsr2l,c
 10619  001B5A  6ADA               	clrf	fsr2h,c
 10620  001B5C  0E01               	movlw	high _TxBuffer
 10621  001B5E  22DA               	addwfc	fsr2h,f,c
 10622  001B60  CFF3 FFDF          	movff	prodl,indf2
 10623                           
 10624                           ; BSR set to: 0
 10625  001B64  2BDF               	incf	_TxData& (0+255),f,b
 10626                           
 10627                           ; BSR set to: 0
 10628                           ;miwi_p2p.c: 1930: count = 4;
 10629  001B66  0E04               	movlw	4
 10630  001B68  6FB4               	movwf	MiApp_BroadcastConnectionTable@count& (0+255),b
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;miwi_p2p.c: 1931: for (j= ((35-4)/4)*i ;j<((35-4)/4)*(i+1);j++)
 10634  001B6A  51B7               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10635  001B6C  0D07               	mullw	7
 10636  001B6E  CFF3 F0B8          	movff	prodl,MiApp_BroadcastConnectionTable@j
 10637  001B72  D067               	goto	l10104
 10638  001B74                     l10070:
 10639                           
 10640                           ; BSR set to: 0
 10641                           ;miwi_p2p.c: 1932: {
 10642                           ;miwi_p2p.c: 1933: if (j < conn_size)
 10643  001B74  51E4               	movf	_conn_size& (0+255),w,b
 10644  001B76  5DB8               	subwf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10645  001B78  E263               	bc	l10102
 10646                           
 10647                           ; BSR set to: 0
 10648                           ;miwi_p2p.c: 1934: {
 10649                           ;miwi_p2p.c: 1935: if (ConnectionTable[j].status.bits.isValid)
 10650  001B7A  51B8               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10651  001B7C  0D0E               	mullw	14
 10652  001B7E  0E2A               	movlw	low (_ConnectionTable+12)
 10653  001B80  24F3               	addwf	prodl,w,c
 10654  001B82  6ED9               	movwf	fsr2l,c
 10655  001B84  0E02               	movlw	high (_ConnectionTable+12)
 10656  001B86  20F4               	addwfc	prodh,w,c
 10657  001B88  6EDA               	movwf	fsr2h,c
 10658  001B8A  AEDF               	btfss	indf2,7,c
 10659  001B8C  D03E               	goto	l10088
 10660                           
 10661                           ; BSR set to: 2
 10662                           ;miwi_p2p.c: 1936: {
 10663                           ;miwi_p2p.c: 1938: TxBuffer[TxData++] = ConnectionTable[j].Address[0];
 10664  001B8E  0100               	movlb	0	; () banked
 10665  001B90  51B8               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10666  001B92  0D0E               	mullw	14
 10667  001B94  0E22               	movlw	low (_ConnectionTable+4)
 10668  001B96  24F3               	addwf	prodl,w,c
 10669  001B98  6ED9               	movwf	fsr2l,c
 10670  001B9A  0E02               	movlw	high (_ConnectionTable+4)
 10671  001B9C  20F4               	addwfc	prodh,w,c
 10672  001B9E  6EDA               	movwf	fsr2h,c
 10673  001BA0  0E95               	movlw	low _TxBuffer
 10674  001BA2  25DF               	addwf	_TxData& (0+255),w,b
 10675  001BA4  6EE1               	movwf	fsr1l,c
 10676  001BA6  6AE2               	clrf	fsr1h,c
 10677  001BA8  0E01               	movlw	high _TxBuffer
 10678  001BAA  22E2               	addwfc	fsr1h,f,c
 10679  001BAC  CFDF FFE7          	movff	indf2,indf1
 10680                           
 10681                           ; BSR set to: 0
 10682  001BB0  2BDF               	incf	_TxData& (0+255),f,b
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;miwi_p2p.c: 1939: TxBuffer[TxData++] = ConnectionTable[j].Address[1];
 10686  001BB2  51B8               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10687  001BB4  0D0E               	mullw	14
 10688  001BB6  0E23               	movlw	low (_ConnectionTable+5)
 10689  001BB8  24F3               	addwf	prodl,w,c
 10690  001BBA  6ED9               	movwf	fsr2l,c
 10691  001BBC  0E02               	movlw	high (_ConnectionTable+5)
 10692  001BBE  20F4               	addwfc	prodh,w,c
 10693  001BC0  6EDA               	movwf	fsr2h,c
 10694  001BC2  0E95               	movlw	low _TxBuffer
 10695  001BC4  25DF               	addwf	_TxData& (0+255),w,b
 10696  001BC6  6EE1               	movwf	fsr1l,c
 10697  001BC8  6AE2               	clrf	fsr1h,c
 10698  001BCA  0E01               	movlw	high _TxBuffer
 10699  001BCC  22E2               	addwfc	fsr1h,f,c
 10700  001BCE  CFDF FFE7          	movff	indf2,indf1
 10701  001BD2  2BDF               	incf	_TxData& (0+255),f,b
 10702                           
 10703                           ; BSR set to: 0
 10704                           ;miwi_p2p.c: 1940: TxBuffer[TxData++] = ConnectionTable[j].Address[2];
 10705  001BD4  51B8               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10706  001BD6  0D0E               	mullw	14
 10707  001BD8  0E24               	movlw	low (_ConnectionTable+6)
 10708  001BDA  24F3               	addwf	prodl,w,c
 10709  001BDC  6ED9               	movwf	fsr2l,c
 10710  001BDE  0E02               	movlw	high (_ConnectionTable+6)
 10711  001BE0  20F4               	addwfc	prodh,w,c
 10712  001BE2  6EDA               	movwf	fsr2h,c
 10713  001BE4  0E95               	movlw	low _TxBuffer
 10714  001BE6  25DF               	addwf	_TxData& (0+255),w,b
 10715  001BE8  6EE1               	movwf	fsr1l,c
 10716  001BEA  6AE2               	clrf	fsr1h,c
 10717  001BEC  0E01               	movlw	high _TxBuffer
 10718  001BEE  22E2               	addwfc	fsr1h,f,c
 10719  001BF0  CFDF FFE7          	movff	indf2,indf1
 10720  001BF4                     l10082:
 10721                           
 10722                           ; BSR set to: 0
 10723  001BF4  2BDF               	incf	_TxData& (0+255),f,b
 10724                           
 10725                           ; BSR set to: 0
 10726                           ;miwi_p2p.c: 1941: TxBuffer[TxData++] = j;
 10727  001BF6  0E95               	movlw	low _TxBuffer
 10728  001BF8  25DF               	addwf	_TxData& (0+255),w,b
 10729  001BFA  6ED9               	movwf	fsr2l,c
 10730  001BFC  6ADA               	clrf	fsr2h,c
 10731  001BFE  0E01               	movlw	high _TxBuffer
 10732  001C00  22DA               	addwfc	fsr2h,f,c
 10733  001C02  C0B8  FFDF         	movff	MiApp_BroadcastConnectionTable@j,indf2
 10734                           
 10735                           ; BSR set to: 0
 10736  001C06  2BDF               	incf	_TxData& (0+255),f,b
 10737                           
 10738                           ;miwi_p2p.c: 1943: }
 10739  001C08  D019               	goto	l10100
 10740  001C0A                     l10088:
 10741                           
 10742                           ; BSR set to: 2
 10743                           ;miwi_p2p.c: 1945: else
 10744                           ;miwi_p2p.c: 1946: {
 10745                           ;miwi_p2p.c: 1948: TxBuffer[TxData++] = 0xff;
 10746  001C0A  0E95               	movlw	low _TxBuffer
 10747  001C0C  0100               	movlb	0	; () banked
 10748  001C0E  25DF               	addwf	_TxData& (0+255),w,b
 10749  001C10  6ED9               	movwf	fsr2l,c
 10750  001C12  6ADA               	clrf	fsr2h,c
 10751  001C14  0E01               	movlw	high _TxBuffer
 10752  001C16  22DA               	addwfc	fsr2h,f,c
 10753  001C18  68DF               	setf	indf2,c
 10754                           
 10755                           ; BSR set to: 0
 10756  001C1A  2BDF               	incf	_TxData& (0+255),f,b
 10757                           
 10758                           ; BSR set to: 0
 10759                           ;miwi_p2p.c: 1949: TxBuffer[TxData++] = 0xff;
 10760  001C1C  0E95               	movlw	low _TxBuffer
 10761  001C1E  25DF               	addwf	_TxData& (0+255),w,b
 10762  001C20  6ED9               	movwf	fsr2l,c
 10763  001C22  6ADA               	clrf	fsr2h,c
 10764  001C24  0E01               	movlw	high _TxBuffer
 10765  001C26  22DA               	addwfc	fsr2h,f,c
 10766  001C28  68DF               	setf	indf2,c
 10767  001C2A  2BDF               	incf	_TxData& (0+255),f,b
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;miwi_p2p.c: 1950: TxBuffer[TxData++] = 0xff;
 10771  001C2C  0E95               	movlw	low _TxBuffer
 10772  001C2E  25DF               	addwf	_TxData& (0+255),w,b
 10773  001C30  6ED9               	movwf	fsr2l,c
 10774  001C32  6ADA               	clrf	fsr2h,c
 10775  001C34  0E01               	movlw	high _TxBuffer
 10776  001C36  22DA               	addwfc	fsr2h,f,c
 10777  001C38  68DF               	setf	indf2,c
 10778  001C3A  D7DC               	goto	l10082
 10779  001C3C                     l10100:
 10780                           
 10781                           ; BSR set to: 0
 10782                           ;miwi_p2p.c: 1952: }
 10783                           ;miwi_p2p.c: 1953: count = count + 4;
 10784  001C3C  0E04               	movlw	4
 10785  001C3E  27B4               	addwf	MiApp_BroadcastConnectionTable@count& (0+255),f,b
 10786  001C40                     l10102:
 10787                           
 10788                           ; BSR set to: 0
 10789  001C40  2BB8               	incf	MiApp_BroadcastConnectionTable@j& (0+255),f,b
 10790  001C42                     l10104:
 10791                           
 10792                           ; BSR set to: 0
 10793  001C42  51B7               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10794  001C44  6FAD               	movwf	??_MiApp_BroadcastConnectionTable& (0+255),b
 10795  001C46  6BAE               	clrf	(??_MiApp_BroadcastConnectionTable+1)& (0+255),b
 10796  001C48  2BAD               	incf	??_MiApp_BroadcastConnectionTable& (0+255),f,b
 10797  001C4A  0E00               	movlw	0
 10798  001C4C  23AE               	addwfc	(??_MiApp_BroadcastConnectionTable+1)& (0+255),f,b
 10799  001C4E  0E07               	movlw	7
 10800  001C50  03AD               	mulwf	??_MiApp_BroadcastConnectionTable& (0+255),b
 10801  001C52  CFF3 F0AF          	movff	prodl,??_MiApp_BroadcastConnectionTable+2
 10802  001C56  CFF4 F0B0          	movff	prodh,??_MiApp_BroadcastConnectionTable+3
 10803  001C5A  03AE               	mulwf	(??_MiApp_BroadcastConnectionTable+1)& (0+255),b
 10804  001C5C  50F3               	movf	prodl,w,c
 10805  001C5E  27B0               	addwf	(??_MiApp_BroadcastConnectionTable+3)& (0+255),f,b
 10806  001C60  51B8               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10807  001C62  6FB1               	movwf	(??_MiApp_BroadcastConnectionTable+4)& (0+255),b
 10808  001C64  6BB2               	clrf	(??_MiApp_BroadcastConnectionTable+5)& (0+255),b
 10809  001C66  51AF               	movf	(??_MiApp_BroadcastConnectionTable+2)& (0+255),w,b
 10810  001C68  5DB1               	subwf	(??_MiApp_BroadcastConnectionTable+4)& (0+255),w,b
 10811  001C6A  51B2               	movf	(??_MiApp_BroadcastConnectionTable+5)& (0+255),w,b
 10812  001C6C  0A80               	xorlw	128
 10813  001C6E  6FB3               	movwf	(??_MiApp_BroadcastConnectionTable+6)& (0+255),b
 10814  001C70  51B0               	movf	(??_MiApp_BroadcastConnectionTable+3)& (0+255),w,b
 10815  001C72  0A80               	xorlw	128
 10816  001C74  59B3               	subwfb	(??_MiApp_BroadcastConnectionTable+6)& (0+255),w,b
 10817  001C76  E201 D77D          	bnc	l10070
 10818                           
 10819                           ; BSR set to: 0
 10820                           ;miwi_p2p.c: 1954: }
 10821                           ;miwi_p2p.c: 1955: }
 10822                           ;miwi_p2p.c: 1957: for (k=count;k<35;k++)
 10823  001C7A  C0B4  F0B6         	movff	MiApp_BroadcastConnectionTable@count,MiApp_BroadcastConnectionTable@k
 10824  001C7E                     l10106:
 10825                           
 10826                           ; BSR set to: 0
 10827  001C7E  0E22               	movlw	34
 10828  001C80  65B6               	cpfsgt	MiApp_BroadcastConnectionTable@k& (0+255),b
 10829  001C82  D001               	goto	l10110
 10830  001C84  D00B               	goto	l10118
 10831  001C86                     l10110:
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;miwi_p2p.c: 1958: {
 10835                           ;miwi_p2p.c: 1959: TxBuffer[TxData++] = 0x11;
 10836  001C86  0E95               	movlw	low _TxBuffer
 10837  001C88  25DF               	addwf	_TxData& (0+255),w,b
 10838  001C8A  6ED9               	movwf	fsr2l,c
 10839  001C8C  6ADA               	clrf	fsr2h,c
 10840  001C8E  0E01               	movlw	high _TxBuffer
 10841  001C90  22DA               	addwfc	fsr2h,f,c
 10842  001C92  0E11               	movlw	17
 10843  001C94  6EDF               	movwf	indf2,c
 10844                           
 10845                           ; BSR set to: 0
 10846  001C96  2BDF               	incf	_TxData& (0+255),f,b
 10847                           
 10848                           ; BSR set to: 0
 10849  001C98  2BB6               	incf	MiApp_BroadcastConnectionTable@k& (0+255),f,b
 10850  001C9A  D7F1               	goto	l10106
 10851  001C9C                     l10118:
 10852                           
 10853                           ; BSR set to: 0
 10854                           ;miwi_p2p.c: 1960: }
 10855                           ;miwi_p2p.c: 1965: SendPacket(1, (0), 1, 0);
 10856  001C9C  6BA3               	clrf	SendPacket@DestinationAddress& (0+255),b
 10857  001C9E  6BA4               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
 10858  001CA0  0E01               	movlw	1
 10859  001CA2  6FA5               	movwf	SendPacket@isCommand& (0+255),b
 10860  001CA4  6BA6               	clrf	SendPacket@SecurityEnabled& (0+255),b
 10861  001CA6  ECE1  F017         	call	_SendPacket
 10862                           
 10863                           ; BSR set to: 0
 10864  001CAA  2BB7               	incf	MiApp_BroadcastConnectionTable@i& (0+255),f,b
 10865  001CAC                     l10122:
 10866                           
 10867                           ; BSR set to: 0
 10868  001CAC  51B5               	movf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),w,b
 10869  001CAE  5DB7               	subwf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10870  001CB0  E201 D730          	bnc	l619
 10871                           
 10872                           ; BSR set to: 0
 10873  001CB4  0012               	return		;funcret
 10874  001CB6                     __end_of_MiApp_BroadcastConnectionTable:
 10875                           	opt stack 0
 10876                           tblptru	equ	0xFF8
 10877                           tblptrh	equ	0xFF7
 10878                           tblptrl	equ	0xFF6
 10879                           tablat	equ	0xFF5
 10880                           prodh	equ	0xFF4
 10881                           prodl	equ	0xFF3
 10882                           intcon	equ	0xFF2
 10883                           intcon2	equ	0xFF1
 10884                           intcon3	equ	0xFF0
 10885                           postinc0	equ	0xFEE
 10886                           wreg	equ	0xFE8
 10887                           indf1	equ	0xFE7
 10888                           postinc1	equ	0xFE6
 10889                           fsr1h	equ	0xFE2
 10890                           fsr1l	equ	0xFE1
 10891                           indf2	equ	0xFDF
 10892                           postinc2	equ	0xFDE
 10893                           postdec2	equ	0xFDD
 10894                           fsr2h	equ	0xFDA
 10895                           fsr2l	equ	0xFD9
 10896                           status	equ	0xFD8
 10897                           
 10898 ;; *************** function ___awmod *****************
 10899 ;; Defined at:
 10900 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10901 ;; Parameters:    Size  Location     Type
 10902 ;;  dividend        2   22[BANK0 ] int 
 10903 ;;  divisor         2   24[BANK0 ] int 
 10904 ;; Auto vars:     Size  Location     Type
 10905 ;;  sign            1   27[BANK0 ] unsigned char 
 10906 ;;  counter         1   26[BANK0 ] unsigned char 
 10907 ;; Return value:  Size  Location     Type
 10908 ;;                  2   22[BANK0 ] int 
 10909 ;; Registers used:
 10910 ;;		wreg, status,2, status,0
 10911 ;; Tracked objects:
 10912 ;;		On entry : F/0
 10913 ;;		On exit  : F/0
 10914 ;;		Unchanged: 0/0
 10915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10916 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10917 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10919 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10920 ;;Total ram usage:        6 bytes
 10921 ;; Hardware stack levels used:    1
 10922 ;; Hardware stack levels required when called:    8
 10923 ;; This function calls:
 10924 ;;		Nothing
 10925 ;; This function is called by:
 10926 ;;		_MiApp_BroadcastConnectionTable
 10927 ;; This function uses a non-reentrant model
 10928 ;;
 10929                           
 10930                           	psect	text37
 10931  0038BA                     __ptext37:
 10932                           	opt stack 0
 10933  0038BA                     ___awmod:
 10934                           	opt stack 16
 10935                           
 10936                           ; BSR set to: 0
 10937                           
 10938                           ; BSR set to: 0
 10939                           ;incstack = 0
 10940  0038BA  6B7B               	clrf	___awmod@sign& (0+255),b
 10941                           
 10942                           ; BSR set to: 0
 10943  0038BC  AF77               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10944  0038BE  D006               	goto	l9820
 10945                           
 10946                           ; BSR set to: 0
 10947  0038C0  6D76               	negf	___awmod@dividend& (0+255),b
 10948  0038C2  1F77               	comf	(___awmod@dividend+1)& (0+255),f,b
 10949  0038C4  B0D8               	btfsc	status,0,c
 10950  0038C6  2B77               	incf	(___awmod@dividend+1)& (0+255),f,b
 10951                           
 10952                           ; BSR set to: 0
 10953  0038C8  0E01               	movlw	1
 10954  0038CA  6F7B               	movwf	___awmod@sign& (0+255),b
 10955  0038CC                     l9820:
 10956                           
 10957                           ; BSR set to: 0
 10958  0038CC  AF79               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10959  0038CE  D004               	goto	l9824
 10960                           
 10961                           ; BSR set to: 0
 10962  0038D0  6D78               	negf	___awmod@divisor& (0+255),b
 10963  0038D2  1F79               	comf	(___awmod@divisor+1)& (0+255),f,b
 10964  0038D4  B0D8               	btfsc	status,0,c
 10965  0038D6  2B79               	incf	(___awmod@divisor+1)& (0+255),f,b
 10966  0038D8                     l9824:
 10967                           
 10968                           ; BSR set to: 0
 10969  0038D8  5178               	movf	___awmod@divisor& (0+255),w,b
 10970  0038DA  1179               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10971  0038DC  E017               	bz	l9840
 10972                           
 10973                           ; BSR set to: 0
 10974  0038DE  0E01               	movlw	1
 10975  0038E0  6F7A               	movwf	___awmod@counter& (0+255),b
 10976  0038E2  D004               	goto	l9830
 10977  0038E4                     l9828:
 10978                           
 10979                           ; BSR set to: 0
 10980  0038E4  90D8               	bcf	status,0,c
 10981  0038E6  3778               	rlcf	___awmod@divisor& (0+255),f,b
 10982  0038E8  3779               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10983  0038EA  2B7A               	incf	___awmod@counter& (0+255),f,b
 10984  0038EC                     l9830:
 10985                           
 10986                           ; BSR set to: 0
 10987  0038EC  AF79               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10988  0038EE  D7FA               	goto	l9828
 10989  0038F0                     l9832:
 10990                           
 10991                           ; BSR set to: 0
 10992  0038F0  5178               	movf	___awmod@divisor& (0+255),w,b
 10993  0038F2  5D76               	subwf	___awmod@dividend& (0+255),w,b
 10994  0038F4  5179               	movf	(___awmod@divisor+1)& (0+255),w,b
 10995  0038F6  5977               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10996  0038F8  E304               	bnc	l9836
 10997                           
 10998                           ; BSR set to: 0
 10999  0038FA  5178               	movf	___awmod@divisor& (0+255),w,b
 11000  0038FC  5F76               	subwf	___awmod@dividend& (0+255),f,b
 11001  0038FE  5179               	movf	(___awmod@divisor+1)& (0+255),w,b
 11002  003900  5B77               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11003  003902                     l9836:
 11004                           
 11005                           ; BSR set to: 0
 11006  003902  90D8               	bcf	status,0,c
 11007  003904  3379               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11008  003906  3378               	rrcf	___awmod@divisor& (0+255),f,b
 11009                           
 11010                           ; BSR set to: 0
 11011  003908  2F7A               	decfsz	___awmod@counter& (0+255),f,b
 11012  00390A  D7F2               	goto	l9832
 11013  00390C                     l9840:
 11014                           
 11015                           ; BSR set to: 0
 11016  00390C  517B               	movf	___awmod@sign& (0+255),w,b
 11017  00390E  E004               	bz	l9844
 11018                           
 11019                           ; BSR set to: 0
 11020  003910  6D76               	negf	___awmod@dividend& (0+255),b
 11021  003912  1F77               	comf	(___awmod@dividend+1)& (0+255),f,b
 11022  003914  B0D8               	btfsc	status,0,c
 11023  003916  2B77               	incf	(___awmod@dividend+1)& (0+255),f,b
 11024  003918                     l9844:
 11025                           
 11026                           ; BSR set to: 0
 11027  003918  C076  F076         	movff	___awmod@dividend,?___awmod
 11028  00391C  C077  F077         	movff	___awmod@dividend+1,?___awmod+1
 11029                           
 11030                           ; BSR set to: 0
 11031  003920  0012               	return		;funcret
 11032  003922                     __end_of___awmod:
 11033                           	opt stack 0
 11034                           tblptru	equ	0xFF8
 11035                           tblptrh	equ	0xFF7
 11036                           tblptrl	equ	0xFF6
 11037                           tablat	equ	0xFF5
 11038                           prodh	equ	0xFF4
 11039                           prodl	equ	0xFF3
 11040                           intcon	equ	0xFF2
 11041                           intcon2	equ	0xFF1
 11042                           intcon3	equ	0xFF0
 11043                           postinc0	equ	0xFEE
 11044                           wreg	equ	0xFE8
 11045                           indf1	equ	0xFE7
 11046                           postinc1	equ	0xFE6
 11047                           fsr1h	equ	0xFE2
 11048                           fsr1l	equ	0xFE1
 11049                           indf2	equ	0xFDF
 11050                           postinc2	equ	0xFDE
 11051                           postdec2	equ	0xFDD
 11052                           fsr2h	equ	0xFDA
 11053                           fsr2l	equ	0xFD9
 11054                           status	equ	0xFD8
 11055                           
 11056 ;; *************** function ___awdiv *****************
 11057 ;; Defined at:
 11058 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;  dividend        2   22[BANK0 ] int 
 11061 ;;  divisor         2   24[BANK0 ] int 
 11062 ;; Auto vars:     Size  Location     Type
 11063 ;;  quotient        2   28[BANK0 ] int 
 11064 ;;  sign            1   27[BANK0 ] unsigned char 
 11065 ;;  counter         1   26[BANK0 ] unsigned char 
 11066 ;; Return value:  Size  Location     Type
 11067 ;;                  2   22[BANK0 ] int 
 11068 ;; Registers used:
 11069 ;;		wreg, status,2, status,0
 11070 ;; Tracked objects:
 11071 ;;		On entry : F/0
 11072 ;;		On exit  : F/0
 11073 ;;		Unchanged: 0/0
 11074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11076 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11078 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11079 ;;Total ram usage:        8 bytes
 11080 ;; Hardware stack levels used:    1
 11081 ;; Hardware stack levels required when called:    8
 11082 ;; This function calls:
 11083 ;;		Nothing
 11084 ;; This function is called by:
 11085 ;;		_MiApp_BroadcastConnectionTable
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           	psect	text38
 11090  0036EC                     __ptext38:
 11091                           	opt stack 0
 11092  0036EC                     ___awdiv:
 11093                           	opt stack 16
 11094                           
 11095                           ; BSR set to: 0
 11096                           
 11097                           ; BSR set to: 0
 11098                           ;incstack = 0
 11099  0036EC  6B7B               	clrf	___awdiv@sign& (0+255),b
 11100                           
 11101                           ; BSR set to: 0
 11102  0036EE  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11103  0036F0  D006               	goto	l9776
 11104                           
 11105                           ; BSR set to: 0
 11106  0036F2  6D78               	negf	___awdiv@divisor& (0+255),b
 11107  0036F4  1F79               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11108  0036F6  B0D8               	btfsc	status,0,c
 11109  0036F8  2B79               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11110                           
 11111                           ; BSR set to: 0
 11112  0036FA  0E01               	movlw	1
 11113  0036FC  6F7B               	movwf	___awdiv@sign& (0+255),b
 11114  0036FE                     l9776:
 11115                           
 11116                           ; BSR set to: 0
 11117  0036FE  AF77               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11118  003700  D006               	goto	l9782
 11119                           
 11120                           ; BSR set to: 0
 11121  003702  6D76               	negf	___awdiv@dividend& (0+255),b
 11122  003704  1F77               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11123  003706  B0D8               	btfsc	status,0,c
 11124  003708  2B77               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11125                           
 11126                           ; BSR set to: 0
 11127  00370A  0E01               	movlw	1
 11128  00370C  1B7B               	xorwf	___awdiv@sign& (0+255),f,b
 11129  00370E                     l9782:
 11130                           
 11131                           ; BSR set to: 0
 11132  00370E  6B7C               	clrf	___awdiv@quotient& (0+255),b
 11133  003710  6B7D               	clrf	(___awdiv@quotient+1)& (0+255),b
 11134                           
 11135                           ; BSR set to: 0
 11136  003712  5178               	movf	___awdiv@divisor& (0+255),w,b
 11137  003714  1179               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11138  003716  E01B               	bz	l9804
 11139                           
 11140                           ; BSR set to: 0
 11141  003718  0E01               	movlw	1
 11142  00371A  6F7A               	movwf	___awdiv@counter& (0+255),b
 11143  00371C  D004               	goto	l9790
 11144  00371E                     l9788:
 11145                           
 11146                           ; BSR set to: 0
 11147  00371E  90D8               	bcf	status,0,c
 11148  003720  3778               	rlcf	___awdiv@divisor& (0+255),f,b
 11149  003722  3779               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11150  003724  2B7A               	incf	___awdiv@counter& (0+255),f,b
 11151  003726                     l9790:
 11152                           
 11153                           ; BSR set to: 0
 11154  003726  AF79               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11155  003728  D7FA               	goto	l9788
 11156  00372A                     l9792:
 11157                           
 11158                           ; BSR set to: 0
 11159  00372A  90D8               	bcf	status,0,c
 11160  00372C  377C               	rlcf	___awdiv@quotient& (0+255),f,b
 11161  00372E  377D               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11162                           
 11163                           ; BSR set to: 0
 11164  003730  5178               	movf	___awdiv@divisor& (0+255),w,b
 11165  003732  5D76               	subwf	___awdiv@dividend& (0+255),w,b
 11166  003734  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11167  003736  5977               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11168  003738  E305               	bnc	l9800
 11169                           
 11170                           ; BSR set to: 0
 11171  00373A  5178               	movf	___awdiv@divisor& (0+255),w,b
 11172  00373C  5F76               	subwf	___awdiv@dividend& (0+255),f,b
 11173  00373E  5179               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11174  003740  5B77               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11175                           
 11176                           ; BSR set to: 0
 11177  003742  817C               	bsf	___awdiv@quotient& (0+255),0,b
 11178  003744                     l9800:
 11179                           
 11180                           ; BSR set to: 0
 11181  003744  90D8               	bcf	status,0,c
 11182  003746  3379               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11183  003748  3378               	rrcf	___awdiv@divisor& (0+255),f,b
 11184                           
 11185                           ; BSR set to: 0
 11186  00374A  2F7A               	decfsz	___awdiv@counter& (0+255),f,b
 11187  00374C  D7EE               	goto	l9792
 11188  00374E                     l9804:
 11189                           
 11190                           ; BSR set to: 0
 11191  00374E  517B               	movf	___awdiv@sign& (0+255),w,b
 11192  003750  E004               	bz	l9808
 11193                           
 11194                           ; BSR set to: 0
 11195  003752  6D7C               	negf	___awdiv@quotient& (0+255),b
 11196  003754  1F7D               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11197  003756  B0D8               	btfsc	status,0,c
 11198  003758  2B7D               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11199  00375A                     l9808:
 11200                           
 11201                           ; BSR set to: 0
 11202  00375A  C07C  F076         	movff	___awdiv@quotient,?___awdiv
 11203  00375E  C07D  F077         	movff	___awdiv@quotient+1,?___awdiv+1
 11204                           
 11205                           ; BSR set to: 0
 11206  003762  0012               	return		;funcret
 11207  003764                     __end_of___awdiv:
 11208                           	opt stack 0
 11209                           tblptru	equ	0xFF8
 11210                           tblptrh	equ	0xFF7
 11211                           tblptrl	equ	0xFF6
 11212                           tablat	equ	0xFF5
 11213                           prodh	equ	0xFF4
 11214                           prodl	equ	0xFF3
 11215                           intcon	equ	0xFF2
 11216                           intcon2	equ	0xFF1
 11217                           intcon3	equ	0xFF0
 11218                           postinc0	equ	0xFEE
 11219                           wreg	equ	0xFE8
 11220                           indf1	equ	0xFE7
 11221                           postinc1	equ	0xFE6
 11222                           fsr1h	equ	0xFE2
 11223                           fsr1l	equ	0xFE1
 11224                           indf2	equ	0xFDF
 11225                           postinc2	equ	0xFDE
 11226                           postdec2	equ	0xFDD
 11227                           fsr2h	equ	0xFDA
 11228                           fsr2l	equ	0xFD9
 11229                           status	equ	0xFD8
 11230                           
 11231 ;; *************** function _Forward_Packet_PANCr_to_EDy *****************
 11232 ;; Defined at:
 11233 ;;		line 178 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11234 ;; Parameters:    Size  Location     Type
 11235 ;;  fw_payload      2   95[BANK0 ] PTR unsigned char 
 11236 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
 11237 ;;  index           1   97[BANK0 ] unsigned char 
 11238 ;;  EDxAddress      2   98[BANK0 ] PTR unsigned char 
 11239 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;  i               1  101[BANK0 ] unsigned char 
 11242 ;;  status          1  100[BANK0 ] unsigned char 
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  1    wreg      unsigned char 
 11245 ;; Registers used:
 11246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11247 ;; Tracked objects:
 11248 ;;		On entry : F/1
 11249 ;;		On exit  : F/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11252 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11253 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11255 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11256 ;;Total ram usage:        7 bytes
 11257 ;; Hardware stack levels used:    1
 11258 ;; Hardware stack levels required when called:   16
 11259 ;; This function calls:
 11260 ;;		_DemoOutput_UnicastFail
 11261 ;;		_MiApp_UnicastConnection
 11262 ;; This function is called by:
 11263 ;;		_P2PTasks
 11264 ;; This function uses a non-reentrant model
 11265 ;;
 11266                           
 11267                           	psect	text39
 11268  003060                     __ptext39:
 11269                           	opt stack 0
 11270  003060                     _Forward_Packet_PANCr_to_EDy:
 11271                           	opt stack 9
 11272                           
 11273                           ; BSR set to: 1
 11274                           ;miwi_p2p.c: 180: uint8_t i;
 11275                           ;miwi_p2p.c: 181: bool status;
 11276                           ;miwi_p2p.c: 182: {TxData = 0;};
 11277                           
 11278                           ; BSR set to: 0
 11279                           ;incstack = 0
 11280  003060  0100               	movlb	0	; () banked
 11281  003062  6BDF               	clrf	_TxData& (0+255),b
 11282                           
 11283                           ; BSR set to: 0
 11284                           ;miwi_p2p.c: 183: TxBuffer[TxData++] = EDxAddress[0];
 11285  003064  C0C2  FFD9         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress,fsr2l
 11286  003068  C0C3  FFDA         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress+1,fsr2h
 11287  00306C  0E95               	movlw	low _TxBuffer
 11288  00306E  25DF               	addwf	_TxData& (0+255),w,b
 11289  003070  6EE1               	movwf	fsr1l,c
 11290  003072  6AE2               	clrf	fsr1h,c
 11291  003074  0E01               	movlw	high _TxBuffer
 11292  003076  22E2               	addwfc	fsr1h,f,c
 11293  003078  CFDF FFE7          	movff	indf2,indf1
 11294                           
 11295                           ; BSR set to: 0
 11296  00307C  2BDF               	incf	_TxData& (0+255),f,b
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;miwi_p2p.c: 184: TxBuffer[TxData++] = EDxAddress[1];
 11300  00307E  EE20 F001          	lfsr	2,1
 11301  003082  51C2               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
 11302  003084  26D9               	addwf	fsr2l,f,c
 11303  003086  51C3               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
 11304  003088  22DA               	addwfc	fsr2h,f,c
 11305  00308A  0E95               	movlw	low _TxBuffer
 11306  00308C  25DF               	addwf	_TxData& (0+255),w,b
 11307  00308E  6EE1               	movwf	fsr1l,c
 11308  003090  6AE2               	clrf	fsr1h,c
 11309  003092  0E01               	movlw	high _TxBuffer
 11310  003094  22E2               	addwfc	fsr1h,f,c
 11311  003096  CFDF FFE7          	movff	indf2,indf1
 11312  00309A  2BDF               	incf	_TxData& (0+255),f,b
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;miwi_p2p.c: 185: TxBuffer[TxData++] = EDxAddress[2];
 11316  00309C  EE20 F002          	lfsr	2,2
 11317  0030A0  51C2               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
 11318  0030A2  26D9               	addwf	fsr2l,f,c
 11319  0030A4  51C3               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
 11320  0030A6  22DA               	addwfc	fsr2h,f,c
 11321  0030A8  0E95               	movlw	low _TxBuffer
 11322  0030AA  25DF               	addwf	_TxData& (0+255),w,b
 11323  0030AC  6EE1               	movwf	fsr1l,c
 11324  0030AE  6AE2               	clrf	fsr1h,c
 11325  0030B0  0E01               	movlw	high _TxBuffer
 11326  0030B2  22E2               	addwfc	fsr1h,f,c
 11327  0030B4  CFDF FFE7          	movff	indf2,indf1
 11328                           
 11329                           ; BSR set to: 0
 11330  0030B8  2BDF               	incf	_TxData& (0+255),f,b
 11331                           
 11332                           ; BSR set to: 0
 11333                           ;miwi_p2p.c: 186: for(i = 3; i < 35; i++)
 11334  0030BA  0E03               	movlw	3
 11335  0030BC  6FC5               	movwf	Forward_Packet_PANCr_to_EDy@i& (0+255),b
 11336  0030BE                     l9990:
 11337                           
 11338                           ; BSR set to: 0
 11339                           ;miwi_p2p.c: 187: {
 11340                           ;miwi_p2p.c: 188: TxBuffer[TxData++] = fw_payload[i];
 11341  0030BE  51C5               	movf	Forward_Packet_PANCr_to_EDy@i& (0+255),w,b
 11342  0030C0  25BF               	addwf	Forward_Packet_PANCr_to_EDy@fw_payload& (0+255),w,b
 11343  0030C2  6ED9               	movwf	fsr2l,c
 11344  0030C4  0E00               	movlw	0
 11345  0030C6  21C0               	addwfc	(Forward_Packet_PANCr_to_EDy@fw_payload+1)& (0+255),w,b
 11346  0030C8  6EDA               	movwf	fsr2h,c
 11347  0030CA  0E95               	movlw	low _TxBuffer
 11348  0030CC  25DF               	addwf	_TxData& (0+255),w,b
 11349  0030CE  6EE1               	movwf	fsr1l,c
 11350  0030D0  6AE2               	clrf	fsr1h,c
 11351  0030D2  0E01               	movlw	high _TxBuffer
 11352  0030D4  22E2               	addwfc	fsr1h,f,c
 11353  0030D6  CFDF FFE7          	movff	indf2,indf1
 11354                           
 11355                           ; BSR set to: 0
 11356  0030DA  2BDF               	incf	_TxData& (0+255),f,b
 11357                           
 11358                           ; BSR set to: 0
 11359  0030DC  2BC5               	incf	Forward_Packet_PANCr_to_EDy@i& (0+255),f,b
 11360                           
 11361                           ; BSR set to: 0
 11362  0030DE  0E22               	movlw	34
 11363  0030E0  65C5               	cpfsgt	Forward_Packet_PANCr_to_EDy@i& (0+255),b
 11364  0030E2  D7ED               	goto	l9990
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;miwi_p2p.c: 189: }
 11368                           ;miwi_p2p.c: 193: status = MiApp_UnicastConnection (index,0) ;
 11369  0030E4  6BB2               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
 11370  0030E6  51C1               	movf	Forward_Packet_PANCr_to_EDy@index& (0+255),w,b
 11371  0030E8  EC92  F017         	call	_MiApp_UnicastConnection
 11372  0030EC  0100               	movlb	0	; () banked
 11373  0030EE  6FC4               	movwf	Forward_Packet_PANCr_to_EDy@status& (0+255),b
 11374                           
 11375                           ; BSR set to: 0
 11376                           ;miwi_p2p.c: 196: if(!status)
 11377  0030F0  51C4               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
 11378  0030F2  E102               	bnz	l10004
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;miwi_p2p.c: 197: {
 11382                           ;miwi_p2p.c: 198: DemoOutput_UnicastFail();
 11383  0030F4  ECC5  F020         	call	_DemoOutput_UnicastFail	;wreg free
 11384  0030F8                     l10004:
 11385                           
 11386                           ; BSR set to: 0
 11387                           ;miwi_p2p.c: 199: }
 11388                           ;miwi_p2p.c: 200: return status;
 11389  0030F8  51C4               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
 11390                           
 11391                           ; BSR set to: 0
 11392  0030FA  0012               	return		;funcret
 11393  0030FC                     __end_of_Forward_Packet_PANCr_to_EDy:
 11394                           	opt stack 0
 11395                           tblptru	equ	0xFF8
 11396                           tblptrh	equ	0xFF7
 11397                           tblptrl	equ	0xFF6
 11398                           tablat	equ	0xFF5
 11399                           prodh	equ	0xFF4
 11400                           prodl	equ	0xFF3
 11401                           intcon	equ	0xFF2
 11402                           intcon2	equ	0xFF1
 11403                           intcon3	equ	0xFF0
 11404                           postinc0	equ	0xFEE
 11405                           wreg	equ	0xFE8
 11406                           indf1	equ	0xFE7
 11407                           postinc1	equ	0xFE6
 11408                           fsr1h	equ	0xFE2
 11409                           fsr1l	equ	0xFE1
 11410                           indf2	equ	0xFDF
 11411                           postinc2	equ	0xFDE
 11412                           postdec2	equ	0xFDD
 11413                           fsr2h	equ	0xFDA
 11414                           fsr2l	equ	0xFD9
 11415                           status	equ	0xFD8
 11416                           
 11417 ;; *************** function _MiApp_UnicastConnection *****************
 11418 ;; Defined at:
 11419 ;;		line 1764 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11420 ;; Parameters:    Size  Location     Type
 11421 ;;  ConnectionIn    1    wreg     unsigned char 
 11422 ;;  SecEn           1   82[BANK0 ] unsigned char 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;  ConnectionIn    1   93[BANK0 ] unsigned char 
 11425 ;;  address         8   85[BANK0 ] unsigned char [8]
 11426 ;;  i               1   94[BANK0 ] unsigned char 
 11427 ;; Return value:  Size  Location     Type
 11428 ;;                  1    wreg      unsigned char 
 11429 ;; Registers used:
 11430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11431 ;; Tracked objects:
 11432 ;;		On entry : F/0
 11433 ;;		On exit  : D/0
 11434 ;;		Unchanged: 0/0
 11435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11436 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11437 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11438 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11439 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11440 ;;Total ram usage:       13 bytes
 11441 ;; Hardware stack levels used:    1
 11442 ;; Hardware stack levels required when called:   15
 11443 ;; This function calls:
 11444 ;;		_IndirectPacket
 11445 ;;		_MiApp_UnicastAddress
 11446 ;; This function is called by:
 11447 ;;		_Forward_Packet_PANCr_to_EDy
 11448 ;;		_run_star_demo
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           	psect	text40
 11453  002F24                     __ptext40:
 11454                           	opt stack 0
 11455  002F24                     _MiApp_UnicastConnection:
 11456                           	opt stack 9
 11457                           
 11458                           ; BSR set to: 0
 11459                           ;incstack = 0
 11460                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
 11461  002F24  6FBD               	movwf	MiApp_UnicastConnection@ConnectionIndex& (0+255),b
 11462                           
 11463                           ;miwi_p2p.c: 1767: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 11464  002F26  0100               	movlb	0	; () banked
 11465  002F28  51BD               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
 11466  002F2A  0D0E               	mullw	14
 11467  002F2C  0E2A               	movlw	low (_ConnectionTable+12)
 11468  002F2E  24F3               	addwf	prodl,w,c
 11469  002F30  6ED9               	movwf	fsr2l,c
 11470  002F32  0E02               	movlw	high (_ConnectionTable+12)
 11471  002F34  20F4               	addwfc	prodh,w,c
 11472  002F36  6EDA               	movwf	fsr2h,c
 11473  002F38  0102               	movlb	2	; () banked
 11474  002F3A  AEDF               	btfss	indf2,7,c
 11475  002F3C  0C00               	retlw	0
 11476                           
 11477                           ; BSR set to: 2
 11478                           ;miwi_p2p.c: 1768: {
 11479                           ;miwi_p2p.c: 1772: if( ConnectionTable[ConnectionIndex].status.bits.RXOnWhenIdle == 0 )
 11480  002F3E  0100               	movlb	0	; () banked
 11481  002F40  51BD               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
 11482  002F42  0D0E               	mullw	14
 11483  002F44  0E2A               	movlw	low (_ConnectionTable+12)
 11484  002F46  24F3               	addwf	prodl,w,c
 11485  002F48  6ED9               	movwf	fsr2l,c
 11486  002F4A  0E02               	movlw	high (_ConnectionTable+12)
 11487  002F4C  20F4               	addwfc	prodh,w,c
 11488  002F4E  6EDA               	movwf	fsr2h,c
 11489  002F50  B0DF               	btfsc	indf2,0,c
 11490  002F52  D028               	goto	l9684
 11491                           
 11492                           ; BSR set to: 2
 11493                           ;miwi_p2p.c: 1773: {
 11494                           ;miwi_p2p.c: 1779: uint8_t address[8];
 11495                           ;miwi_p2p.c: 1780: uint8_t i;
 11496                           ;miwi_p2p.c: 1782: for(i = 0; i < 8; i++)
 11497  002F54  6BBE               	clrf	MiApp_UnicastConnection@i& (0+255),b
 11498  002F56                     l9674:
 11499                           
 11500                           ; BSR set to: 0
 11501                           ;miwi_p2p.c: 1783: {
 11502                           ;miwi_p2p.c: 1784: address[i] = ConnectionTable[ConnectionIndex].Address[i];
 11503  002F56  51BD               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
 11504  002F58  0D0E               	mullw	14
 11505  002F5A  0E1E               	movlw	low _ConnectionTable
 11506  002F5C  6FB3               	movwf	??_MiApp_UnicastConnection& (0+255),b
 11507  002F5E  0E02               	movlw	high _ConnectionTable
 11508  002F60  6FB4               	movwf	(??_MiApp_UnicastConnection+1)& (0+255),b
 11509  002F62  0E04               	movlw	4
 11510  002F64  27B3               	addwf	??_MiApp_UnicastConnection& (0+255),f,b
 11511  002F66  0E00               	movlw	0
 11512  002F68  23B4               	addwfc	(??_MiApp_UnicastConnection+1)& (0+255),f,b
 11513  002F6A  50F3               	movf	prodl,w,c
 11514  002F6C  27B3               	addwf	??_MiApp_UnicastConnection& (0+255),f,b
 11515  002F6E  50F4               	movf	prodh,w,c
 11516  002F70  23B4               	addwfc	(??_MiApp_UnicastConnection+1)& (0+255),f,b
 11517  002F72  51BE               	movf	MiApp_UnicastConnection@i& (0+255),w,b
 11518  002F74  25B3               	addwf	??_MiApp_UnicastConnection& (0+255),w,b
 11519  002F76  6ED9               	movwf	fsr2l,c
 11520  002F78  0E00               	movlw	0
 11521  002F7A  21B4               	addwfc	(??_MiApp_UnicastConnection+1)& (0+255),w,b
 11522  002F7C  6EDA               	movwf	fsr2h,c
 11523  002F7E  51BE               	movf	MiApp_UnicastConnection@i& (0+255),w,b
 11524  002F80  0FB5               	addlw	low MiApp_UnicastConnection@address
 11525  002F82  6EE1               	movwf	fsr1l,c
 11526  002F84  6AE2               	clrf	fsr1h,c
 11527  002F86  CFDF FFE7          	movff	indf2,indf1
 11528                           
 11529                           ; BSR set to: 0
 11530  002F8A  2BBE               	incf	MiApp_UnicastConnection@i& (0+255),f,b
 11531                           
 11532                           ; BSR set to: 0
 11533  002F8C  0E07               	movlw	7
 11534  002F8E  65BE               	cpfsgt	MiApp_UnicastConnection@i& (0+255),b
 11535  002F90  D7E2               	goto	l9674
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;miwi_p2p.c: 1785: }
 11539                           ;miwi_p2p.c: 1788: return IndirectPacket(0, address, 0, SecEn);
 11540  002F92  0EB5               	movlw	low MiApp_UnicastConnection@address
 11541  002F94  6F80               	movwf	IndirectPacket@DestinationAddress& (0+255),b
 11542  002F96  6B81               	clrf	(IndirectPacket@DestinationAddress+1)& (0+255),b
 11543  002F98  0E00               	movlw	0
 11544  002F9A  6B82               	clrf	IndirectPacket@isCommand& (0+255),b
 11545  002F9C  C0B2  F083         	movff	MiApp_UnicastConnection@SecEn,IndirectPacket@SecurityEnabled
 11546  002FA0  EF5B  F00E         	goto	_IndirectPacket
 11547  002FA4                     l9684:
 11548                           
 11549                           ; BSR set to: 2
 11550                           ;miwi_p2p.c: 1790: }
 11551                           ;miwi_p2p.c: 1801: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
 11552  002FA4  0100               	movlb	0	; () banked
 11553  002FA6  51BD               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
 11554  002FA8  0D0E               	mullw	14
 11555  002FAA  0E22               	movlw	low (_ConnectionTable+4)
 11556  002FAC  24F3               	addwf	prodl,w,c
 11557  002FAE  6FAD               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
 11558  002FB0  0E02               	movlw	high (_ConnectionTable+4)
 11559  002FB2  20F4               	addwfc	prodh,w,c
 11560  002FB4  6FAE               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
 11561  002FB6  0E01               	movlw	1
 11562  002FB8  6FAF               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 11563  002FBA  C0B2  F0B0         	movff	MiApp_UnicastConnection@SecEn,MiApp_UnicastAddress@SecEn
 11564  002FBE  EFFB  F01A         	goto	_MiApp_UnicastAddress	;wreg free
 11565  002FC2                     __end_of_MiApp_UnicastConnection:
 11566                           	opt stack 0
 11567                           tblptru	equ	0xFF8
 11568                           tblptrh	equ	0xFF7
 11569                           tblptrl	equ	0xFF6
 11570                           tablat	equ	0xFF5
 11571                           prodh	equ	0xFF4
 11572                           prodl	equ	0xFF3
 11573                           intcon	equ	0xFF2
 11574                           intcon2	equ	0xFF1
 11575                           intcon3	equ	0xFF0
 11576                           postinc0	equ	0xFEE
 11577                           wreg	equ	0xFE8
 11578                           indf1	equ	0xFE7
 11579                           postinc1	equ	0xFE6
 11580                           fsr1h	equ	0xFE2
 11581                           fsr1l	equ	0xFE1
 11582                           indf2	equ	0xFDF
 11583                           postinc2	equ	0xFDE
 11584                           postdec2	equ	0xFDD
 11585                           fsr2h	equ	0xFDA
 11586                           fsr2l	equ	0xFD9
 11587                           status	equ	0xFD8
 11588                           
 11589 ;; *************** function _MiApp_UnicastAddress *****************
 11590 ;; Defined at:
 11591 ;;		line 1843 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;  DestinationA    2   77[BANK0 ] PTR unsigned char 
 11594 ;;		 -> ConnectionTable(140), 
 11595 ;;  PermanentAdd    1   79[BANK0 ] unsigned char 
 11596 ;;  SecEn           1   80[BANK0 ] unsigned char 
 11597 ;; Auto vars:     Size  Location     Type
 11598 ;;  i               1   81[BANK0 ] unsigned char 
 11599 ;; Return value:  Size  Location     Type
 11600 ;;                  1    wreg      unsigned char 
 11601 ;; Registers used:
 11602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11603 ;; Tracked objects:
 11604 ;;		On entry : F/0
 11605 ;;		On exit  : F/0
 11606 ;;		Unchanged: 0/0
 11607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11608 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11609 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11611 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11612 ;;Total ram usage:        5 bytes
 11613 ;; Hardware stack levels used:    1
 11614 ;; Hardware stack levels required when called:   14
 11615 ;; This function calls:
 11616 ;;		_IndirectPacket
 11617 ;;		_SendPacket
 11618 ;;		_isSameAddress
 11619 ;; This function is called by:
 11620 ;;		_MiApp_UnicastConnection
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           	psect	text41
 11625  0035F6                     __ptext41:
 11626                           	opt stack 0
 11627  0035F6                     _MiApp_UnicastAddress:
 11628                           	opt stack 9
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;miwi_p2p.c: 1848: uint8_t i;
 11632                           ;miwi_p2p.c: 1850: for(i = 0; i < 10; i++)
 11633                           
 11634                           ;incstack = 0
 11635  0035F6  6BB1               	clrf	MiApp_UnicastAddress@i& (0+255),b
 11636  0035F8                     l9586:
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;miwi_p2p.c: 1851: {
 11640                           ;miwi_p2p.c: 1853: if( ConnectionTable[i].status.bits.isValid && (ConnectionTable[i].sta
      +                          tus.bits.RXOnWhenIdle == 0) &&
 11641                           ;miwi_p2p.c: 1854: isSameAddress(DestinationAddress, ConnectionTable[i].Address) )
 11642  0035F8  51B1               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 11643  0035FA  0D0E               	mullw	14
 11644  0035FC  0E2A               	movlw	low (_ConnectionTable+12)
 11645  0035FE  24F3               	addwf	prodl,w,c
 11646  003600  6ED9               	movwf	fsr2l,c
 11647  003602  0E02               	movlw	high (_ConnectionTable+12)
 11648  003604  20F4               	addwfc	prodh,w,c
 11649  003606  6EDA               	movwf	fsr2h,c
 11650  003608  AEDF               	btfss	indf2,7,c
 11651  00360A  D025               	goto	l9596
 11652                           
 11653                           ; BSR set to: 2
 11654  00360C  0100               	movlb	0	; () banked
 11655  00360E  51B1               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 11656  003610  0D0E               	mullw	14
 11657  003612  0E2A               	movlw	low (_ConnectionTable+12)
 11658  003614  24F3               	addwf	prodl,w,c
 11659  003616  6ED9               	movwf	fsr2l,c
 11660  003618  0E02               	movlw	high (_ConnectionTable+12)
 11661  00361A  20F4               	addwfc	prodh,w,c
 11662  00361C  6EDA               	movwf	fsr2h,c
 11663  00361E  B0DF               	btfsc	indf2,0,c
 11664  003620  D01A               	goto	l9596
 11665                           
 11666                           ; BSR set to: 2
 11667  003622  C0AD  F076         	movff	MiApp_UnicastAddress@DestinationAddress,isSameAddress@Address1
 11668  003626  C0AE  F077         	movff	MiApp_UnicastAddress@DestinationAddress+1,isSameAddress@Address1+1
 11669  00362A  51B1               	movf	MiApp_UnicastAddress@i& (0+255),w,b
 11670  00362C  0D0E               	mullw	14
 11671  00362E  0E22               	movlw	low (_ConnectionTable+4)
 11672  003630  24F3               	addwf	prodl,w,c
 11673  003632  6F78               	movwf	isSameAddress@Address2& (0+255),b
 11674  003634  0E02               	movlw	high (_ConnectionTable+4)
 11675  003636  20F4               	addwfc	prodh,w,c
 11676  003638  6F79               	movwf	(isSameAddress@Address2+1)& (0+255),b
 11677  00363A  ECBC  F01F         	call	_isSameAddress	;wreg free
 11678  00363E  0900               	iorlw	0
 11679  003640  E00A               	bz	l9596
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;miwi_p2p.c: 1855: {
 11683                           ;miwi_p2p.c: 1859: return IndirectPacket(0, DestinationAddress, 0, SecEn);
 11684  003642  C0AD  F080         	movff	MiApp_UnicastAddress@DestinationAddress,IndirectPacket@DestinationAddress
 11685  003646  C0AE  F081         	movff	MiApp_UnicastAddress@DestinationAddress+1,IndirectPacket@DestinationAddress+1
 11686  00364A  0E00               	movlw	0
 11687  00364C  6B82               	clrf	IndirectPacket@isCommand& (0+255),b
 11688  00364E  C0B0  F083         	movff	MiApp_UnicastAddress@SecEn,IndirectPacket@SecurityEnabled
 11689  003652  EF5B  F00E         	goto	_IndirectPacket
 11690  003656                     l9596:
 11691  003656  0100               	movlb	0	; () banked
 11692  003658  2BB1               	incf	MiApp_UnicastAddress@i& (0+255),f,b
 11693                           
 11694                           ; BSR set to: 0
 11695  00365A  0E09               	movlw	9
 11696  00365C  65B1               	cpfsgt	MiApp_UnicastAddress@i& (0+255),b
 11697  00365E  D7CC               	goto	l9586
 11698                           
 11699                           ; BSR set to: 0
 11700                           ;miwi_p2p.c: 1861: }
 11701                           ;miwi_p2p.c: 1862: }
 11702                           ;miwi_p2p.c: 1876: return SendPacket(0, DestinationAddress, 0, SecEn);
 11703  003660  C0AD  F0A3         	movff	MiApp_UnicastAddress@DestinationAddress,SendPacket@DestinationAddress
 11704  003664  C0AE  F0A4         	movff	MiApp_UnicastAddress@DestinationAddress+1,SendPacket@DestinationAddress+1
 11705  003668  0E00               	movlw	0
 11706  00366A  6BA5               	clrf	SendPacket@isCommand& (0+255),b
 11707  00366C  C0B0  F0A6         	movff	MiApp_UnicastAddress@SecEn,SendPacket@SecurityEnabled
 11708  003670  EFE1  F017         	goto	_SendPacket
 11709  003674                     __end_of_MiApp_UnicastAddress:
 11710                           	opt stack 0
 11711                           tblptru	equ	0xFF8
 11712                           tblptrh	equ	0xFF7
 11713                           tblptrl	equ	0xFF6
 11714                           tablat	equ	0xFF5
 11715                           prodh	equ	0xFF4
 11716                           prodl	equ	0xFF3
 11717                           intcon	equ	0xFF2
 11718                           intcon2	equ	0xFF1
 11719                           intcon3	equ	0xFF0
 11720                           postinc0	equ	0xFEE
 11721                           wreg	equ	0xFE8
 11722                           indf1	equ	0xFE7
 11723                           postinc1	equ	0xFE6
 11724                           fsr1h	equ	0xFE2
 11725                           fsr1l	equ	0xFE1
 11726                           indf2	equ	0xFDF
 11727                           postinc2	equ	0xFDE
 11728                           postdec2	equ	0xFDD
 11729                           fsr2h	equ	0xFDA
 11730                           fsr2l	equ	0xFD9
 11731                           status	equ	0xFD8
 11732                           
 11733 ;; *************** function _IndirectPacket *****************
 11734 ;; Defined at:
 11735 ;;		line 1507 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11736 ;; Parameters:    Size  Location     Type
 11737 ;;  Broadcast       1    wreg     unsigned char 
 11738 ;;  DestinationA    2   32[BANK0 ] PTR unsigned char 
 11739 ;;		 -> MiApp_UnicastConnection@address(8), ConnectionTable(140), NULL(0), 
 11740 ;;  isCommand       1   34[BANK0 ] unsigned char 
 11741 ;;  SecurityEnab    1   35[BANK0 ] unsigned char 
 11742 ;; Auto vars:     Size  Location     Type
 11743 ;;  Broadcast       1   38[BANK0 ] unsigned char 
 11744 ;;  k               1   39[BANK0 ] unsigned char 
 11745 ;;  j               1   41[BANK0 ] unsigned char 
 11746 ;;  i               1   40[BANK0 ] unsigned char 
 11747 ;; Return value:  Size  Location     Type
 11748 ;;                  1    wreg      unsigned char 
 11749 ;; Registers used:
 11750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11751 ;; Tracked objects:
 11752 ;;		On entry : F/0
 11753 ;;		On exit  : F/0
 11754 ;;		Unchanged: 0/0
 11755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11756 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11757 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11758 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11759 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11760 ;;Total ram usage:       10 bytes
 11761 ;; Hardware stack levels used:    1
 11762 ;; Hardware stack levels required when called:    9
 11763 ;; This function calls:
 11764 ;;		_MiWi_TickGet
 11765 ;; This function is called by:
 11766 ;;		_MiApp_BroadcastPacket
 11767 ;;		_MiApp_UnicastConnection
 11768 ;;		_MiApp_UnicastAddress
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           	psect	text42
 11773  001CB6                     __ptext42:
 11774                           	opt stack 0
 11775  001CB6                     _IndirectPacket:
 11776                           	opt stack 13
 11777                           
 11778                           ; BSR set to: 0
 11779                           ;incstack = 0
 11780                           ;IndirectPacket@Broadcast stored from wreg
 11781  001CB6  6F86               	movwf	IndirectPacket@Broadcast& (0+255),b
 11782                           
 11783                           ;miwi_p2p.c: 1513: uint8_t i;
 11784                           ;miwi_p2p.c: 1524: for(i = 0; i < 2; i++)
 11785  001CB8  0100               	movlb	0	; () banked
 11786  001CBA  6B88               	clrf	IndirectPacket@i& (0+255),b
 11787  001CBC                     l9066:
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;miwi_p2p.c: 1525: {
 11791                           ;miwi_p2p.c: 1526: if( indirectMessages[i].flags.bits.isValid == 0 )
 11792  001CBC  5188               	movf	IndirectPacket@i& (0+255),w,b
 11793  001CBE  0D33               	mullw	51
 11794  001CC0  0E80               	movlw	low (_indirectMessages+14)
 11795  001CC2  24F3               	addwf	prodl,w,c
 11796  001CC4  6ED9               	movwf	fsr2l,c
 11797  001CC6  0E03               	movlw	high (_indirectMessages+14)
 11798  001CC8  20F4               	addwfc	prodh,w,c
 11799  001CCA  6EDA               	movwf	fsr2h,c
 11800  001CCC  B0DF               	btfsc	indf2,0,c
 11801  001CCE  D0E6               	goto	l9126
 11802                           
 11803                           ; BSR set to: 3
 11804                           ;miwi_p2p.c: 1527: {
 11805                           ;miwi_p2p.c: 1528: uint8_t j;
 11806                           ;miwi_p2p.c: 1531: indirectMessages[i].flags.bits.isValid = 1;
 11807  001CD0  0100               	movlb	0	; () banked
 11808  001CD2  5188               	movf	IndirectPacket@i& (0+255),w,b
 11809  001CD4  0D33               	mullw	51
 11810  001CD6  0E80               	movlw	low (_indirectMessages+14)
 11811  001CD8  24F3               	addwf	prodl,w,c
 11812  001CDA  6ED9               	movwf	fsr2l,c
 11813  001CDC  0E03               	movlw	high (_indirectMessages+14)
 11814  001CDE  20F4               	addwfc	prodh,w,c
 11815  001CE0  6EDA               	movwf	fsr2h,c
 11816  001CE2  80DF               	bsf	indf2,0,c
 11817                           
 11818                           ;miwi_p2p.c: 1532: indirectMessages[i].flags.bits.isBroadcast = Broadcast;
 11819  001CE4  5188               	movf	IndirectPacket@i& (0+255),w,b
 11820  001CE6  0D33               	mullw	51
 11821  001CE8  0E80               	movlw	low (_indirectMessages+14)
 11822  001CEA  24F3               	addwf	prodl,w,c
 11823  001CEC  6ED9               	movwf	fsr2l,c
 11824  001CEE  0E03               	movlw	high (_indirectMessages+14)
 11825  001CF0  20F4               	addwfc	prodh,w,c
 11826  001CF2  6EDA               	movwf	fsr2h,c
 11827  001CF4  B186               	btfsc	IndirectPacket@Broadcast& (0+255),0,b
 11828  001CF6  D002               	bra	u8865
 11829  001CF8  92DF               	bcf	indf2,1,c
 11830  001CFA  D001               	bra	u8866
 11831  001CFC                     u8865:
 11832  001CFC  82DF               	bsf	indf2,1,c
 11833  001CFE                     u8866:
 11834                           
 11835                           ;miwi_p2p.c: 1533: indirectMessages[i].flags.bits.isCommand = isCommand;
 11836  001CFE  0100               	movlb	0	; () banked
 11837  001D00  5188               	movf	IndirectPacket@i& (0+255),w,b
 11838  001D02  0D33               	mullw	51
 11839  001D04  0E80               	movlw	low (_indirectMessages+14)
 11840  001D06  24F3               	addwf	prodl,w,c
 11841  001D08  6ED9               	movwf	fsr2l,c
 11842  001D0A  0E03               	movlw	high (_indirectMessages+14)
 11843  001D0C  20F4               	addwfc	prodh,w,c
 11844  001D0E  6EDA               	movwf	fsr2h,c
 11845  001D10  B182               	btfsc	IndirectPacket@isCommand& (0+255),0,b
 11846  001D12  D002               	bra	u8875
 11847  001D14  94DF               	bcf	indf2,2,c
 11848  001D16  D001               	bra	u8876
 11849  001D18                     u8875:
 11850  001D18  84DF               	bsf	indf2,2,c
 11851  001D1A                     u8876:
 11852                           
 11853                           ;miwi_p2p.c: 1534: indirectMessages[i].flags.bits.isSecured = SecurityEnabled;
 11854  001D1A  0100               	movlb	0	; () banked
 11855  001D1C  5188               	movf	IndirectPacket@i& (0+255),w,b
 11856  001D1E  0D33               	mullw	51
 11857  001D20  0E80               	movlw	low (_indirectMessages+14)
 11858  001D22  24F3               	addwf	prodl,w,c
 11859  001D24  6ED9               	movwf	fsr2l,c
 11860  001D26  0E03               	movlw	high (_indirectMessages+14)
 11861  001D28  20F4               	addwfc	prodh,w,c
 11862  001D2A  6EDA               	movwf	fsr2h,c
 11863  001D2C  B183               	btfsc	IndirectPacket@SecurityEnabled& (0+255),0,b
 11864  001D2E  D002               	bra	u8885
 11865  001D30  96DF               	bcf	indf2,3,c
 11866  001D32  D001               	bra	u8886
 11867  001D34                     u8885:
 11868  001D34  86DF               	bsf	indf2,3,c
 11869  001D36                     u8886:
 11870                           
 11871                           ; BSR set to: 3
 11872                           ;miwi_p2p.c: 1538: if( DestinationAddress != (0) )
 11873  001D36  0100               	movlb	0	; () banked
 11874  001D38  5180               	movf	IndirectPacket@DestinationAddress& (0+255),w,b
 11875  001D3A  1181               	iorwf	(IndirectPacket@DestinationAddress+1)& (0+255),w,b
 11876  001D3C  E022               	bz	l578
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;miwi_p2p.c: 1539: {
 11880                           ;miwi_p2p.c: 1540: for(j = 0; j < 8; j++)
 11881  001D3E  6B89               	clrf	IndirectPacket@j& (0+255),b
 11882  001D40                     l9078:
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;miwi_p2p.c: 1541: {
 11886                           ;miwi_p2p.c: 1542: indirectMessages[i].DestAddress.DestLongAddress[j] = DestinationAddre
      +                          ss[j];
 11887  001D40  5189               	movf	IndirectPacket@j& (0+255),w,b
 11888  001D42  2580               	addwf	IndirectPacket@DestinationAddress& (0+255),w,b
 11889  001D44  6ED9               	movwf	fsr2l,c
 11890  001D46  0E00               	movlw	0
 11891  001D48  2181               	addwfc	(IndirectPacket@DestinationAddress+1)& (0+255),w,b
 11892  001D4A  6EDA               	movwf	fsr2h,c
 11893  001D4C  5188               	movf	IndirectPacket@i& (0+255),w,b
 11894  001D4E  0D33               	mullw	51
 11895  001D50  0E72               	movlw	low _indirectMessages
 11896  001D52  6F84               	movwf	??_IndirectPacket& (0+255),b
 11897  001D54  0E03               	movlw	high _indirectMessages
 11898  001D56  6F85               	movwf	(??_IndirectPacket+1)& (0+255),b
 11899  001D58  0E04               	movlw	4
 11900  001D5A  2784               	addwf	??_IndirectPacket& (0+255),f,b
 11901  001D5C  0E00               	movlw	0
 11902  001D5E  2385               	addwfc	(??_IndirectPacket+1)& (0+255),f,b
 11903  001D60  50F3               	movf	prodl,w,c
 11904  001D62  2784               	addwf	??_IndirectPacket& (0+255),f,b
 11905  001D64  50F4               	movf	prodh,w,c
 11906  001D66  2385               	addwfc	(??_IndirectPacket+1)& (0+255),f,b
 11907  001D68  5189               	movf	IndirectPacket@j& (0+255),w,b
 11908  001D6A  2584               	addwf	??_IndirectPacket& (0+255),w,b
 11909  001D6C  6EE1               	movwf	fsr1l,c
 11910  001D6E  0E00               	movlw	0
 11911  001D70  2185               	addwfc	(??_IndirectPacket+1)& (0+255),w,b
 11912  001D72  6EE2               	movwf	fsr1h,c
 11913  001D74  CFDF FFE7          	movff	indf2,indf1
 11914                           
 11915                           ; BSR set to: 0
 11916  001D78  2B89               	incf	IndirectPacket@j& (0+255),f,b
 11917                           
 11918                           ; BSR set to: 0
 11919  001D7A  0E07               	movlw	7
 11920  001D7C  6589               	cpfsgt	IndirectPacket@j& (0+255),b
 11921  001D7E  D7E0               	goto	l9078
 11922  001D80  D04E               	goto	l9110
 11923  001D82                     l578:
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;miwi_p2p.c: 1546: else
 11927                           ;miwi_p2p.c: 1547: {
 11928                           ;miwi_p2p.c: 1548: uint8_t k = 0;
 11929  001D82  6B87               	clrf	IndirectPacket@k& (0+255),b
 11930                           
 11931                           ;miwi_p2p.c: 1550: for(j = 0; j < 10; j++)
 11932  001D84  6B89               	clrf	IndirectPacket@j& (0+255),b
 11933  001D86                     l9088:
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;miwi_p2p.c: 1551: {
 11937                           ;miwi_p2p.c: 1553: if( ConnectionTable[j].status.bits.isValid &&
 11938                           ;miwi_p2p.c: 1554: ConnectionTable[j].status.bits.RXOnWhenIdle == 0 )
 11939  001D86  5189               	movf	IndirectPacket@j& (0+255),w,b
 11940  001D88  0D0E               	mullw	14
 11941  001D8A  0E2A               	movlw	low (_ConnectionTable+12)
 11942  001D8C  24F3               	addwf	prodl,w,c
 11943  001D8E  6ED9               	movwf	fsr2l,c
 11944  001D90  0E02               	movlw	high (_ConnectionTable+12)
 11945  001D92  20F4               	addwfc	prodh,w,c
 11946  001D94  6EDA               	movwf	fsr2h,c
 11947  001D96  AEDF               	btfss	indf2,7,c
 11948  001D98  D022               	goto	l9096
 11949                           
 11950                           ; BSR set to: 2
 11951  001D9A  0100               	movlb	0	; () banked
 11952  001D9C  5189               	movf	IndirectPacket@j& (0+255),w,b
 11953  001D9E  0D0E               	mullw	14
 11954  001DA0  0E2A               	movlw	low (_ConnectionTable+12)
 11955  001DA2  24F3               	addwf	prodl,w,c
 11956  001DA4  6ED9               	movwf	fsr2l,c
 11957  001DA6  0E02               	movlw	high (_ConnectionTable+12)
 11958  001DA8  20F4               	addwfc	prodh,w,c
 11959  001DAA  6EDA               	movwf	fsr2h,c
 11960  001DAC  B0DF               	btfsc	indf2,0,c
 11961  001DAE  D017               	goto	l9096
 11962                           
 11963                           ; BSR set to: 2
 11964                           ;miwi_p2p.c: 1555: {
 11965                           ;miwi_p2p.c: 1556: indirectMessages[i].DestAddress.DestIndex[k++] = j;
 11966  001DB0  5188               	movf	IndirectPacket@i& (0+255),w,b
 11967  001DB2  0D33               	mullw	51
 11968  001DB4  0E72               	movlw	low _indirectMessages
 11969  001DB6  6F84               	movwf	??_IndirectPacket& (0+255),b
 11970  001DB8  0E03               	movlw	high _indirectMessages
 11971  001DBA  6F85               	movwf	(??_IndirectPacket+1)& (0+255),b
 11972  001DBC  0E04               	movlw	4
 11973  001DBE  2784               	addwf	??_IndirectPacket& (0+255),f,b
 11974  001DC0  0E00               	movlw	0
 11975  001DC2  2385               	addwfc	(??_IndirectPacket+1)& (0+255),f,b
 11976  001DC4  50F3               	movf	prodl,w,c
 11977  001DC6  2784               	addwf	??_IndirectPacket& (0+255),f,b
 11978  001DC8  50F4               	movf	prodh,w,c
 11979  001DCA  2385               	addwfc	(??_IndirectPacket+1)& (0+255),f,b
 11980  001DCC  5187               	movf	IndirectPacket@k& (0+255),w,b
 11981  001DCE  2584               	addwf	??_IndirectPacket& (0+255),w,b
 11982  001DD0  6ED9               	movwf	fsr2l,c
 11983  001DD2  0E00               	movlw	0
 11984  001DD4  2185               	addwfc	(??_IndirectPacket+1)& (0+255),w,b
 11985  001DD6  6EDA               	movwf	fsr2h,c
 11986  001DD8  C089  FFDF         	movff	IndirectPacket@j,indf2
 11987                           
 11988                           ; BSR set to: 0
 11989  001DDC  2B87               	incf	IndirectPacket@k& (0+255),f,b
 11990  001DDE                     l9096:
 11991  001DDE  0100               	movlb	0	; () banked
 11992  001DE0  2B89               	incf	IndirectPacket@j& (0+255),f,b
 11993                           
 11994                           ; BSR set to: 0
 11995  001DE2  0E09               	movlw	9
 11996  001DE4  6589               	cpfsgt	IndirectPacket@j& (0+255),b
 11997  001DE6  D7CF               	goto	l9088
 11998  001DE8                     l9100:
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;miwi_p2p.c: 1557: }
 12002                           ;miwi_p2p.c: 1558: }
 12003                           ;miwi_p2p.c: 1559: for(; k < 10; k++)
 12004  001DE8  0E09               	movlw	9
 12005  001DEA  6587               	cpfsgt	IndirectPacket@k& (0+255),b
 12006  001DEC  D001               	goto	l9104
 12007  001DEE  D017               	goto	l9110
 12008  001DF0                     l9104:
 12009                           
 12010                           ; BSR set to: 0
 12011                           ;miwi_p2p.c: 1560: {
 12012                           ;miwi_p2p.c: 1561: indirectMessages[i].DestAddress.DestIndex[k] = 0xFF;
 12013  001DF0  5188               	movf	IndirectPacket@i& (0+255),w,b
 12014  001DF2  0D33               	mullw	51
 12015  001DF4  0E72               	movlw	low _indirectMessages
 12016  001DF6  6F84               	movwf	??_IndirectPacket& (0+255),b
 12017  001DF8  0E03               	movlw	high _indirectMessages
 12018  001DFA  6F85               	movwf	(??_IndirectPacket+1)& (0+255),b
 12019  001DFC  0E04               	movlw	4
 12020  001DFE  2784               	addwf	??_IndirectPacket& (0+255),f,b
 12021  001E00  0E00               	movlw	0
 12022  001E02  2385               	addwfc	(??_IndirectPacket+1)& (0+255),f,b
 12023  001E04  50F3               	movf	prodl,w,c
 12024  001E06  2784               	addwf	??_IndirectPacket& (0+255),f,b
 12025  001E08  50F4               	movf	prodh,w,c
 12026  001E0A  2385               	addwfc	(??_IndirectPacket+1)& (0+255),f,b
 12027  001E0C  5187               	movf	IndirectPacket@k& (0+255),w,b
 12028  001E0E  2584               	addwf	??_IndirectPacket& (0+255),w,b
 12029  001E10  6ED9               	movwf	fsr2l,c
 12030  001E12  0E00               	movlw	0
 12031  001E14  2185               	addwfc	(??_IndirectPacket+1)& (0+255),w,b
 12032  001E16  6EDA               	movwf	fsr2h,c
 12033  001E18  68DF               	setf	indf2,c
 12034                           
 12035                           ; BSR set to: 0
 12036  001E1A  2B87               	incf	IndirectPacket@k& (0+255),f,b
 12037  001E1C  D7E5               	goto	l9100
 12038  001E1E                     l9110:
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;miwi_p2p.c: 1562: }
 12042                           ;miwi_p2p.c: 1563: }
 12043                           ;miwi_p2p.c: 1566: indirectMessages[i].PayLoadSize = TxData;
 12044  001E1E  5188               	movf	IndirectPacket@i& (0+255),w,b
 12045  001E20  0D33               	mullw	51
 12046  001E22  0E81               	movlw	low (_indirectMessages+15)
 12047  001E24  24F3               	addwf	prodl,w,c
 12048  001E26  6ED9               	movwf	fsr2l,c
 12049  001E28  0E03               	movlw	high (_indirectMessages+15)
 12050  001E2A  20F4               	addwfc	prodh,w,c
 12051  001E2C  6EDA               	movwf	fsr2h,c
 12052  001E2E  C0DF  FFDF         	movff	_TxData,indf2
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;miwi_p2p.c: 1567: for(j = 0; j < TxData; j++)
 12056  001E32  6B89               	clrf	IndirectPacket@j& (0+255),b
 12057  001E34  D01D               	goto	l9118
 12058  001E36                     l9114:
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;miwi_p2p.c: 1568: {
 12062                           ;miwi_p2p.c: 1569: indirectMessages[i].PayLoad[j] = TxBuffer[j];
 12063  001E36  0E95               	movlw	low _TxBuffer
 12064  001E38  2589               	addwf	IndirectPacket@j& (0+255),w,b
 12065  001E3A  6ED9               	movwf	fsr2l,c
 12066  001E3C  6ADA               	clrf	fsr2h,c
 12067  001E3E  0E01               	movlw	high _TxBuffer
 12068  001E40  22DA               	addwfc	fsr2h,f,c
 12069  001E42  5188               	movf	IndirectPacket@i& (0+255),w,b
 12070  001E44  0D33               	mullw	51
 12071  001E46  0E72               	movlw	low _indirectMessages
 12072  001E48  6F84               	movwf	??_IndirectPacket& (0+255),b
 12073  001E4A  0E03               	movlw	high _indirectMessages
 12074  001E4C  6F85               	movwf	(??_IndirectPacket+1)& (0+255),b
 12075  001E4E  0E10               	movlw	16
 12076  001E50  2784               	addwf	??_IndirectPacket& (0+255),f,b
 12077  001E52  0E00               	movlw	0
 12078  001E54  2385               	addwfc	(??_IndirectPacket+1)& (0+255),f,b
 12079  001E56  50F3               	movf	prodl,w,c
 12080  001E58  2784               	addwf	??_IndirectPacket& (0+255),f,b
 12081  001E5A  50F4               	movf	prodh,w,c
 12082  001E5C  2385               	addwfc	(??_IndirectPacket+1)& (0+255),f,b
 12083  001E5E  5189               	movf	IndirectPacket@j& (0+255),w,b
 12084  001E60  2584               	addwf	??_IndirectPacket& (0+255),w,b
 12085  001E62  6EE1               	movwf	fsr1l,c
 12086  001E64  0E00               	movlw	0
 12087  001E66  2185               	addwfc	(??_IndirectPacket+1)& (0+255),w,b
 12088  001E68  6EE2               	movwf	fsr1h,c
 12089  001E6A  CFDF FFE7          	movff	indf2,indf1
 12090                           
 12091                           ; BSR set to: 0
 12092  001E6E  2B89               	incf	IndirectPacket@j& (0+255),f,b
 12093  001E70                     l9118:
 12094                           
 12095                           ; BSR set to: 0
 12096  001E70  51DF               	movf	_TxData& (0+255),w,b
 12097  001E72  5D89               	subwf	IndirectPacket@j& (0+255),w,b
 12098  001E74  E3E0               	bnc	l9114
 12099                           
 12100                           ; BSR set to: 0
 12101                           ;miwi_p2p.c: 1570: }
 12102                           ;miwi_p2p.c: 1571: indirectMessages[i].TickStart = MiWi_TickGet();
 12103  001E76  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
 12104  001E7A  5188               	movf	IndirectPacket@i& (0+255),w,b
 12105  001E7C  0D33               	mullw	51
 12106  001E7E  0E72               	movlw	low _indirectMessages
 12107  001E80  24F3               	addwf	prodl,w,c
 12108  001E82  6ED9               	movwf	fsr2l,c
 12109  001E84  0E03               	movlw	high _indirectMessages
 12110  001E86  20F4               	addwfc	prodh,w,c
 12111  001E88  6EDA               	movwf	fsr2h,c
 12112  001E8A  C076  FFDE         	movff	?_MiWi_TickGet,postinc2
 12113  001E8E  C077  FFDE         	movff	?_MiWi_TickGet+1,postinc2
 12114  001E92  C078  FFDE         	movff	?_MiWi_TickGet+2,postinc2
 12115  001E96  C079  FFDE         	movff	?_MiWi_TickGet+3,postinc2
 12116                           
 12117                           ; BSR set to: 0
 12118                           ;miwi_p2p.c: 1572: return 1;
 12119  001E9A  0C01               	retlw	1
 12120  001E9C                     l9126:
 12121                           
 12122                           ; BSR set to: 3
 12123  001E9C  0100               	movlb	0	; () banked
 12124  001E9E  2B88               	incf	IndirectPacket@i& (0+255),f,b
 12125                           
 12126                           ; BSR set to: 0
 12127  001EA0  0E01               	movlw	1
 12128  001EA2  6588               	cpfsgt	IndirectPacket@i& (0+255),b
 12129  001EA4  D70B               	goto	l9066
 12130  001EA6  0C00               	retlw	0
 12131  001EA8                     __end_of_IndirectPacket:
 12132                           	opt stack 0
 12133                           tblptru	equ	0xFF8
 12134                           tblptrh	equ	0xFF7
 12135                           tblptrl	equ	0xFF6
 12136                           tablat	equ	0xFF5
 12137                           prodh	equ	0xFF4
 12138                           prodl	equ	0xFF3
 12139                           intcon	equ	0xFF2
 12140                           intcon2	equ	0xFF1
 12141                           intcon3	equ	0xFF0
 12142                           postinc0	equ	0xFEE
 12143                           wreg	equ	0xFE8
 12144                           indf1	equ	0xFE7
 12145                           postinc1	equ	0xFE6
 12146                           fsr1h	equ	0xFE2
 12147                           fsr1l	equ	0xFE1
 12148                           indf2	equ	0xFDF
 12149                           postinc2	equ	0xFDE
 12150                           postdec2	equ	0xFDD
 12151                           fsr2h	equ	0xFDA
 12152                           fsr2l	equ	0xFD9
 12153                           status	equ	0xFD8
 12154                           
 12155 ;; *************** function _DemoOutput_UnicastFail *****************
 12156 ;; Defined at:
 12157 ;;		line 203 in file "../src/demo_ouput.c"
 12158 ;; Parameters:    Size  Location     Type
 12159 ;;		None
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;		None
 12162 ;; Return value:  Size  Location     Type
 12163 ;;		None               void
 12164 ;; Registers used:
 12165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12166 ;; Tracked objects:
 12167 ;;		On entry : F/0
 12168 ;;		On exit  : F/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12175 ;;Total ram usage:        0 bytes
 12176 ;; Hardware stack levels used:    1
 12177 ;; Hardware stack levels required when called:   12
 12178 ;; This function calls:
 12179 ;;		_LCDDisplay
 12180 ;; This function is called by:
 12181 ;;		_Forward_Packet_PANCr_to_EDy
 12182 ;; This function uses a non-reentrant model
 12183 ;;
 12184                           
 12185                           	psect	text43
 12186  00418A                     __ptext43:
 12187                           	opt stack 0
 12188  00418A                     _DemoOutput_UnicastFail:
 12189                           	opt stack 12
 12190                           
 12191                           ; BSR set to: 0
 12192                           ;demo_ouput.c: 209: LCDDisplay((char *)" Unicast Failed", 0, 1);
 12193                           
 12194                           ; BSR set to: 0
 12195                           ;incstack = 0
 12196  00418A  0E9F               	movlw	low STR_24
 12197  00418C  6FA5               	movwf	LCDDisplay@text& (0+255),b
 12198  00418E  0EFF               	movlw	high STR_24
 12199  004190  6FA6               	movwf	(LCDDisplay@text+1)& (0+255),b
 12200  004192  6BA7               	clrf	LCDDisplay@value& (0+255),b
 12201  004194  0E01               	movlw	1
 12202  004196  6FA8               	movwf	LCDDisplay@delay& (0+255),b
 12203  004198  EFA4  F01E         	goto	_LCDDisplay	;wreg free
 12204  00419C                     __end_of_DemoOutput_UnicastFail:
 12205                           	opt stack 0
 12206                           tblptru	equ	0xFF8
 12207                           tblptrh	equ	0xFF7
 12208                           tblptrl	equ	0xFF6
 12209                           tablat	equ	0xFF5
 12210                           prodh	equ	0xFF4
 12211                           prodl	equ	0xFF3
 12212                           intcon	equ	0xFF2
 12213                           intcon2	equ	0xFF1
 12214                           intcon3	equ	0xFF0
 12215                           postinc0	equ	0xFEE
 12216                           wreg	equ	0xFE8
 12217                           indf1	equ	0xFE7
 12218                           postinc1	equ	0xFE6
 12219                           fsr1h	equ	0xFE2
 12220                           fsr1l	equ	0xFE1
 12221                           indf2	equ	0xFDF
 12222                           postinc2	equ	0xFDE
 12223                           postdec2	equ	0xFDD
 12224                           fsr2h	equ	0xFDA
 12225                           fsr2l	equ	0xFD9
 12226                           status	equ	0xFD8
 12227                           
 12228 ;; *************** function _Find_Index *****************
 12229 ;; Defined at:
 12230 ;;		line 105 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12231 ;; Parameters:    Size  Location     Type
 12232 ;;  DestAddr        2   22[BANK0 ] PTR unsigned char 
 12233 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
 12234 ;; Auto vars:     Size  Location     Type
 12235 ;;  i               1   26[BANK0 ] unsigned char 
 12236 ;; Return value:  Size  Location     Type
 12237 ;;                  1    wreg      unsigned char 
 12238 ;; Registers used:
 12239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12240 ;; Tracked objects:
 12241 ;;		On entry : F/0
 12242 ;;		On exit  : F/0
 12243 ;;		Unchanged: 0/0
 12244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12245 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12246 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12247 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12248 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12249 ;;Total ram usage:        5 bytes
 12250 ;; Hardware stack levels used:    1
 12251 ;; Hardware stack levels required when called:    8
 12252 ;; This function calls:
 12253 ;;		Nothing
 12254 ;; This function is called by:
 12255 ;;		_P2PTasks
 12256 ;; This function uses a non-reentrant model
 12257 ;;
 12258                           
 12259                           	psect	text44
 12260  003196                     __ptext44:
 12261                           	opt stack 0
 12262  003196                     _Find_Index:
 12263                           	opt stack 17
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;miwi_p2p.c: 107: uint8_t i;
 12267                           ;miwi_p2p.c: 108: for (i=0;i<conn_size;i++)
 12268                           
 12269                           ; BSR set to: 0
 12270                           ;incstack = 0
 12271  003196  6B7A               	clrf	Find_Index@i& (0+255),b
 12272  003198  D042               	goto	l9938
 12273  00319A                     l9922:
 12274                           
 12275                           ; BSR set to: 0
 12276                           ;miwi_p2p.c: 109: {
 12277                           ;miwi_p2p.c: 110: if (ConnectionTable[i].status.bits.isValid)
 12278  00319A  517A               	movf	Find_Index@i& (0+255),w,b
 12279  00319C  0D0E               	mullw	14
 12280  00319E  0E2A               	movlw	low (_ConnectionTable+12)
 12281  0031A0  24F3               	addwf	prodl,w,c
 12282  0031A2  6ED9               	movwf	fsr2l,c
 12283  0031A4  0E02               	movlw	high (_ConnectionTable+12)
 12284  0031A6  20F4               	addwfc	prodh,w,c
 12285  0031A8  6EDA               	movwf	fsr2h,c
 12286  0031AA  AEDF               	btfss	indf2,7,c
 12287  0031AC  D036               	goto	l9936
 12288                           
 12289                           ; BSR set to: 2
 12290                           ;miwi_p2p.c: 111: {
 12291                           ;miwi_p2p.c: 112: if (DestAddr[1] == ConnectionTable[i].Address[0] && DestAddr[2] == Con
      +                          nectionTable[i].Address[1] && DestAddr[3] == ConnectionTable[i].Address[2] )
 12292  0031AE  0100               	movlb	0	; () banked
 12293  0031B0  517A               	movf	Find_Index@i& (0+255),w,b
 12294  0031B2  0D0E               	mullw	14
 12295  0031B4  0E22               	movlw	low (_ConnectionTable+4)
 12296  0031B6  24F3               	addwf	prodl,w,c
 12297  0031B8  6ED9               	movwf	fsr2l,c
 12298  0031BA  0E02               	movlw	high (_ConnectionTable+4)
 12299  0031BC  20F4               	addwfc	prodh,w,c
 12300  0031BE  6EDA               	movwf	fsr2h,c
 12301  0031C0  EE10 F001          	lfsr	1,1
 12302  0031C4  5176               	movf	Find_Index@DestAddr& (0+255),w,b
 12303  0031C6  26E1               	addwf	fsr1l,f,c
 12304  0031C8  5177               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 12305  0031CA  22E2               	addwfc	fsr1h,f,c
 12306  0031CC  50DE               	movf	postinc2,w,c
 12307  0031CE  18E6               	xorwf	postinc1,w,c
 12308  0031D0  E124               	bnz	l9936
 12309                           
 12310                           ; BSR set to: 0
 12311  0031D2  517A               	movf	Find_Index@i& (0+255),w,b
 12312  0031D4  0D0E               	mullw	14
 12313  0031D6  0E23               	movlw	low (_ConnectionTable+5)
 12314  0031D8  24F3               	addwf	prodl,w,c
 12315  0031DA  6ED9               	movwf	fsr2l,c
 12316  0031DC  0E02               	movlw	high (_ConnectionTable+5)
 12317  0031DE  20F4               	addwfc	prodh,w,c
 12318  0031E0  6EDA               	movwf	fsr2h,c
 12319  0031E2  EE10 F002          	lfsr	1,2
 12320  0031E6  5176               	movf	Find_Index@DestAddr& (0+255),w,b
 12321  0031E8  26E1               	addwf	fsr1l,f,c
 12322  0031EA  5177               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 12323  0031EC  22E2               	addwfc	fsr1h,f,c
 12324  0031EE  50DE               	movf	postinc2,w,c
 12325  0031F0  18E6               	xorwf	postinc1,w,c
 12326  0031F2  E113               	bnz	l9936
 12327                           
 12328                           ; BSR set to: 0
 12329  0031F4  517A               	movf	Find_Index@i& (0+255),w,b
 12330  0031F6  0D0E               	mullw	14
 12331  0031F8  0E24               	movlw	low (_ConnectionTable+6)
 12332  0031FA  24F3               	addwf	prodl,w,c
 12333  0031FC  6ED9               	movwf	fsr2l,c
 12334  0031FE  0E02               	movlw	high (_ConnectionTable+6)
 12335  003200  20F4               	addwfc	prodh,w,c
 12336  003202  6EDA               	movwf	fsr2h,c
 12337  003204  EE10 F003          	lfsr	1,3
 12338  003208  5176               	movf	Find_Index@DestAddr& (0+255),w,b
 12339  00320A  26E1               	addwf	fsr1l,f,c
 12340  00320C  5177               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 12341  00320E  22E2               	addwfc	fsr1h,f,c
 12342  003210  50DE               	movf	postinc2,w,c
 12343  003212  18E6               	xorwf	postinc1,w,c
 12344  003214  E102               	bnz	l9936
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;miwi_p2p.c: 113: {
 12348                           ;miwi_p2p.c: 114: return i;
 12349  003216  517A               	movf	Find_Index@i& (0+255),w,b
 12350  003218  0012               	return	
 12351  00321A                     l9936:
 12352  00321A  0100               	movlb	0	; () banked
 12353  00321C  2B7A               	incf	Find_Index@i& (0+255),f,b
 12354  00321E                     l9938:
 12355                           
 12356                           ; BSR set to: 0
 12357  00321E  51E4               	movf	_conn_size& (0+255),w,b
 12358  003220  5D7A               	subwf	Find_Index@i& (0+255),w,b
 12359  003222  E3BB               	bnc	l9922
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;miwi_p2p.c: 116: }
 12363                           ;miwi_p2p.c: 118: }
 12364                           ;miwi_p2p.c: 119: }
 12365                           ;miwi_p2p.c: 120: if (i==conn_size)
 12366  003224  51E4               	movf	_conn_size& (0+255),w,b
 12367  003226  197A               	xorwf	Find_Index@i& (0+255),w,b
 12368  003228  B4D8               	btfsc	status,2,c
 12369                           
 12370                           ; BSR set to: 0
 12371                           ;miwi_p2p.c: 121: {
 12372                           ;miwi_p2p.c: 122: return 0xff;
 12373  00322A  0EFF               	movlw	255
 12374                           
 12375                           ; BSR set to: 0
 12376  00322C  0012               	return		;funcret
 12377  00322E                     __end_of_Find_Index:
 12378                           	opt stack 0
 12379                           tblptru	equ	0xFF8
 12380                           tblptrh	equ	0xFF7
 12381                           tblptrl	equ	0xFF6
 12382                           tablat	equ	0xFF5
 12383                           prodh	equ	0xFF4
 12384                           prodl	equ	0xFF3
 12385                           intcon	equ	0xFF2
 12386                           intcon2	equ	0xFF1
 12387                           intcon3	equ	0xFF0
 12388                           postinc0	equ	0xFEE
 12389                           wreg	equ	0xFE8
 12390                           indf1	equ	0xFE7
 12391                           postinc1	equ	0xFE6
 12392                           fsr1h	equ	0xFE2
 12393                           fsr1l	equ	0xFE1
 12394                           indf2	equ	0xFDF
 12395                           postinc2	equ	0xFDE
 12396                           postdec2	equ	0xFDD
 12397                           fsr2h	equ	0xFDA
 12398                           fsr2l	equ	0xFD9
 12399                           status	equ	0xFD8
 12400                           
 12401 ;; *************** function _Find_InActiveDevices *****************
 12402 ;; Defined at:
 12403 ;;		line 2046 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;		None
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;  i               1   84[BANK0 ] unsigned char 
 12408 ;; Return value:  Size  Location     Type
 12409 ;;		None               void
 12410 ;; Registers used:
 12411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12412 ;; Tracked objects:
 12413 ;;		On entry : F/0
 12414 ;;		On exit  : F/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12418 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12419 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12420 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12421 ;;Total ram usage:        2 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; Hardware stack levels required when called:   15
 12424 ;; This function calls:
 12425 ;;		_MiApp_RemoveConnection
 12426 ;; This function is called by:
 12427 ;;		_P2PTasks
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           	psect	text45
 12432  0039E0                     __ptext45:
 12433                           	opt stack 0
 12434  0039E0                     _Find_InActiveDevices:
 12435                           	opt stack 10
 12436                           
 12437                           ; BSR set to: 0
 12438                           ;miwi_p2p.c: 2048: uint8_t i;
 12439                           ;miwi_p2p.c: 2049: for (i=0;i<10;i++)
 12440                           
 12441                           ; BSR set to: 0
 12442                           ;incstack = 0
 12443  0039E0  6BB4               	clrf	Find_InActiveDevices@i& (0+255),b
 12444  0039E2                     l10014:
 12445                           
 12446                           ; BSR set to: 0
 12447                           ;miwi_p2p.c: 2050: {
 12448                           ;miwi_p2p.c: 2051: if (ConnectionTable[i].status.bits.isValid)
 12449  0039E2  51B4               	movf	Find_InActiveDevices@i& (0+255),w,b
 12450  0039E4  0D0E               	mullw	14
 12451  0039E6  0E2A               	movlw	low (_ConnectionTable+12)
 12452  0039E8  24F3               	addwf	prodl,w,c
 12453  0039EA  6ED9               	movwf	fsr2l,c
 12454  0039EC  0E02               	movlw	high (_ConnectionTable+12)
 12455  0039EE  20F4               	addwfc	prodh,w,c
 12456  0039F0  6EDA               	movwf	fsr2h,c
 12457  0039F2  AEDF               	btfss	indf2,7,c
 12458  0039F4  D01C               	goto	l10024
 12459                           
 12460                           ; BSR set to: 2
 12461                           ;miwi_p2p.c: 2052: {
 12462                           ;miwi_p2p.c: 2053: if (link_stat[i] == 0 && permanent_connections[i] != 0xFF)
 12463  0039F6  0E5F               	movlw	low _link_stat
 12464  0039F8  0100               	movlb	0	; () banked
 12465  0039FA  25B4               	addwf	Find_InActiveDevices@i& (0+255),w,b
 12466  0039FC  6ED9               	movwf	fsr2l,c
 12467  0039FE  6ADA               	clrf	fsr2h,c
 12468  003A00  0E01               	movlw	high _link_stat
 12469  003A02  22DA               	addwfc	fsr2h,f,c
 12470  003A04  50DF               	movf	indf2,w,c
 12471  003A06  E10C               	bnz	l10022
 12472                           
 12473                           ; BSR set to: 0
 12474  003A08  0E69               	movlw	low _permanent_connections
 12475  003A0A  25B4               	addwf	Find_InActiveDevices@i& (0+255),w,b
 12476  003A0C  6ED9               	movwf	fsr2l,c
 12477  003A0E  6ADA               	clrf	fsr2h,c
 12478  003A10  0E01               	movlw	high _permanent_connections
 12479  003A12  22DA               	addwfc	fsr2h,f,c
 12480  003A14  28DE               	incf	postinc2,w,c
 12481  003A16  E004               	bz	l10022
 12482                           
 12483                           ; BSR set to: 0
 12484                           ;miwi_p2p.c: 2054: {
 12485                           ;miwi_p2p.c: 2055: MiApp_RemoveConnection(i);
 12486  003A18  51B4               	movf	Find_InActiveDevices@i& (0+255),w,b
 12487  003A1A  EC52  F012         	call	_MiApp_RemoveConnection
 12488                           
 12489                           ;miwi_p2p.c: 2056: }
 12490  003A1E  D007               	goto	l10024
 12491  003A20                     l10022:
 12492                           
 12493                           ; BSR set to: 0
 12494                           ;miwi_p2p.c: 2057: else
 12495                           ;miwi_p2p.c: 2058: {
 12496                           ;miwi_p2p.c: 2059: link_stat[i] = 0;
 12497  003A20  0E5F               	movlw	low _link_stat
 12498  003A22  25B4               	addwf	Find_InActiveDevices@i& (0+255),w,b
 12499  003A24  6ED9               	movwf	fsr2l,c
 12500  003A26  6ADA               	clrf	fsr2h,c
 12501  003A28  0E01               	movlw	high _link_stat
 12502  003A2A  22DA               	addwfc	fsr2h,f,c
 12503  003A2C  6ADF               	clrf	indf2,c
 12504  003A2E                     l10024:
 12505  003A2E  0100               	movlb	0	; () banked
 12506  003A30  2BB4               	incf	Find_InActiveDevices@i& (0+255),f,b
 12507                           
 12508                           ; BSR set to: 0
 12509  003A32  0E09               	movlw	9
 12510  003A34  65B4               	cpfsgt	Find_InActiveDevices@i& (0+255),b
 12511  003A36  D7D5               	goto	l10014
 12512  003A38  0C09               	retlw	9
 12513  003A3A                     __end_of_Find_InActiveDevices:
 12514                           	opt stack 0
 12515                           tblptru	equ	0xFF8
 12516                           tblptrh	equ	0xFF7
 12517                           tblptrl	equ	0xFF6
 12518                           tablat	equ	0xFF5
 12519                           prodh	equ	0xFF4
 12520                           prodl	equ	0xFF3
 12521                           intcon	equ	0xFF2
 12522                           intcon2	equ	0xFF1
 12523                           intcon3	equ	0xFF0
 12524                           postinc0	equ	0xFEE
 12525                           wreg	equ	0xFE8
 12526                           indf1	equ	0xFE7
 12527                           postinc1	equ	0xFE6
 12528                           fsr1h	equ	0xFE2
 12529                           fsr1l	equ	0xFE1
 12530                           indf2	equ	0xFDF
 12531                           postinc2	equ	0xFDE
 12532                           postdec2	equ	0xFDD
 12533                           fsr2h	equ	0xFDA
 12534                           fsr2l	equ	0xFD9
 12535                           status	equ	0xFD8
 12536                           
 12537 ;; *************** function _MiApp_RemoveConnection *****************
 12538 ;; Defined at:
 12539 ;;		line 2877 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;  ConnectionIn    1    wreg     unsigned char 
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;  ConnectionIn    1   81[BANK0 ] unsigned char 
 12544 ;;  j               2   77[BANK0 ] unsigned int 
 12545 ;;  j               2   79[BANK0 ] unsigned int 
 12546 ;;  i               1   82[BANK0 ] unsigned char 
 12547 ;; Return value:  Size  Location     Type
 12548 ;;		None               void
 12549 ;; Registers used:
 12550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12551 ;; Tracked objects:
 12552 ;;		On entry : F/0
 12553 ;;		On exit  : 0/0
 12554 ;;		Unchanged: 0/0
 12555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12557 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12559 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12560 ;;Total ram usage:        6 bytes
 12561 ;; Hardware stack levels used:    1
 12562 ;; Hardware stack levels required when called:   14
 12563 ;; This function calls:
 12564 ;;		_EEPROM_Write
 12565 ;;		_SendPacket
 12566 ;; This function is called by:
 12567 ;;		_Find_InActiveDevices
 12568 ;; This function uses a non-reentrant model
 12569 ;;
 12570                           
 12571                           	psect	text46
 12572  0024A4                     __ptext46:
 12573                           	opt stack 0
 12574  0024A4                     _MiApp_RemoveConnection:
 12575                           	opt stack 10
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;incstack = 0
 12579                           ;MiApp_RemoveConnection@ConnectionIndex stored from wreg
 12580  0024A4  6FB1               	movwf	MiApp_RemoveConnection@ConnectionIndex& (0+255),b
 12581                           
 12582                           ;miwi_p2p.c: 2879: if( ConnectionIndex == 0xFF )
 12583  0024A6  0100               	movlb	0	; () banked
 12584  0024A8  29B1               	incf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 12585  0024AA  E14D               	bnz	l9744
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;miwi_p2p.c: 2880: {
 12589                           ;miwi_p2p.c: 2881: uint8_t i;
 12590                           ;miwi_p2p.c: 2882: for(i = 0; i < 10; i++)
 12591  0024AC  6BB2               	clrf	MiApp_RemoveConnection@i& (0+255),b
 12592  0024AE                     l9716:
 12593                           
 12594                           ; BSR set to: 0
 12595                           ;miwi_p2p.c: 2883: {
 12596                           ;miwi_p2p.c: 2884: uint16_t j;
 12597                           ;miwi_p2p.c: 2885: if( ConnectionTable[i].status.bits.isValid )
 12598  0024AE  51B2               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 12599  0024B0  0D0E               	mullw	14
 12600  0024B2  0E2A               	movlw	low (_ConnectionTable+12)
 12601  0024B4  24F3               	addwf	prodl,w,c
 12602  0024B6  6ED9               	movwf	fsr2l,c
 12603  0024B8  0E02               	movlw	high (_ConnectionTable+12)
 12604  0024BA  20F4               	addwfc	prodh,w,c
 12605  0024BC  6EDA               	movwf	fsr2h,c
 12606  0024BE  AEDF               	btfss	indf2,7,c
 12607  0024C0  D021               	goto	l9736
 12608                           
 12609                           ; BSR set to: 2
 12610                           ;miwi_p2p.c: 2886: {
 12611                           ;miwi_p2p.c: 2887: {TxData = 0;};
 12612  0024C2  0100               	movlb	0	; () banked
 12613  0024C4  6BDF               	clrf	_TxData& (0+255),b
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;miwi_p2p.c: 2888: TxBuffer[TxData++] = 0x82;
 12617  0024C6  0E95               	movlw	low _TxBuffer
 12618  0024C8  25DF               	addwf	_TxData& (0+255),w,b
 12619  0024CA  6ED9               	movwf	fsr2l,c
 12620  0024CC  6ADA               	clrf	fsr2h,c
 12621  0024CE  0E01               	movlw	high _TxBuffer
 12622  0024D0  22DA               	addwfc	fsr2h,f,c
 12623  0024D2  0E82               	movlw	130
 12624  0024D4  6EDF               	movwf	indf2,c
 12625                           
 12626                           ; BSR set to: 0
 12627  0024D6  2BDF               	incf	_TxData& (0+255),f,b
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;miwi_p2p.c: 2892: SendPacket(0, ConnectionTable[i].Address, 1, 0);
 12631  0024D8  51B2               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 12632  0024DA  0D0E               	mullw	14
 12633  0024DC  0E22               	movlw	low (_ConnectionTable+4)
 12634  0024DE  24F3               	addwf	prodl,w,c
 12635  0024E0  6FA3               	movwf	SendPacket@DestinationAddress& (0+255),b
 12636  0024E2  0E02               	movlw	high (_ConnectionTable+4)
 12637  0024E4  20F4               	addwfc	prodh,w,c
 12638  0024E6  6FA4               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 12639  0024E8  0E01               	movlw	1
 12640  0024EA  6FA5               	movwf	SendPacket@isCommand& (0+255),b
 12641  0024EC  0E00               	movlw	0
 12642  0024EE  6BA6               	clrf	SendPacket@SecurityEnabled& (0+255),b
 12643  0024F0  ECE1  F017         	call	_SendPacket
 12644                           
 12645                           ; BSR set to: 0
 12646                           ;miwi_p2p.c: 2894: for(j = 0; j < 0xFFF; j++) {}
 12647  0024F4  6BAD               	clrf	MiApp_RemoveConnection@j& (0+255),b
 12648  0024F6  6BAE               	clrf	(MiApp_RemoveConnection@j+1)& (0+255),b
 12649  0024F8                     l9732:
 12650                           
 12651                           ; BSR set to: 0
 12652  0024F8  4BAD               	infsnz	MiApp_RemoveConnection@j& (0+255),f,b
 12653  0024FA  2BAE               	incf	(MiApp_RemoveConnection@j+1)& (0+255),f,b
 12654                           
 12655                           ; BSR set to: 0
 12656  0024FC  29AD               	incf	MiApp_RemoveConnection@j& (0+255),w,b
 12657  0024FE  0E0F               	movlw	15
 12658  002500  59AE               	subwfb	(MiApp_RemoveConnection@j+1)& (0+255),w,b
 12659  002502  E3FA               	bnc	l9732
 12660  002504                     l9736:
 12661                           
 12662                           ;miwi_p2p.c: 2895: }
 12663                           ;miwi_p2p.c: 2896: ConnectionTable[i].status.Val = 0;
 12664  002504  0100               	movlb	0	; () banked
 12665  002506  51B2               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 12666  002508  0D0E               	mullw	14
 12667  00250A  0E2A               	movlw	low (_ConnectionTable+12)
 12668  00250C  24F3               	addwf	prodl,w,c
 12669  00250E  6ED9               	movwf	fsr2l,c
 12670  002510  0E02               	movlw	high (_ConnectionTable+12)
 12671  002512  20F4               	addwfc	prodh,w,c
 12672  002514  6EDA               	movwf	fsr2h,c
 12673  002516  6ADF               	clrf	indf2,c
 12674                           
 12675                           ; BSR set to: 0
 12676                           ;miwi_p2p.c: 2898: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * si
      +                          zeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 12677  002518  51B2               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 12678  00251A  0D0E               	mullw	14
 12679  00251C  0E1E               	movlw	low _ConnectionTable
 12680  00251E  24F3               	addwf	prodl,w,c
 12681  002520  6F77               	movwf	EEPROM_Write@dest& (0+255),b
 12682  002522  0E02               	movlw	high _ConnectionTable
 12683  002524  20F4               	addwfc	prodh,w,c
 12684  002526  6F78               	movwf	(EEPROM_Write@dest+1)& (0+255),b
 12685  002528  51B2               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 12686  00252A  0D0E               	mullw	14
 12687  00252C  50F3               	movf	prodl,w,c
 12688  00252E  0F04               	addlw	4
 12689  002530  6F79               	movwf	EEPROM_Write@addr& (0+255),b
 12690  002532  0E0E               	movlw	14
 12691  002534  6F7A               	movwf	EEPROM_Write@count& (0+255),b
 12692  002536  EC37  F01A         	call	_EEPROM_Write	;wreg free
 12693  00253A  0100               	movlb	0	; () banked
 12694  00253C  2BB2               	incf	MiApp_RemoveConnection@i& (0+255),f,b
 12695                           
 12696                           ; BSR set to: 0
 12697  00253E  0E09               	movlw	9
 12698  002540  65B2               	cpfsgt	MiApp_RemoveConnection@i& (0+255),b
 12699  002542  D7B5               	goto	l9716
 12700  002544  0C09               	retlw	9
 12701  002546                     l9744:
 12702                           
 12703                           ; BSR set to: 0
 12704                           ;miwi_p2p.c: 2902: else if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 12705  002546  51B1               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 12706  002548  0D0E               	mullw	14
 12707  00254A  0E2A               	movlw	low (_ConnectionTable+12)
 12708  00254C  24F3               	addwf	prodl,w,c
 12709  00254E  6ED9               	movwf	fsr2l,c
 12710  002550  0E02               	movlw	high (_ConnectionTable+12)
 12711  002552  20F4               	addwfc	prodh,w,c
 12712  002554  6EDA               	movwf	fsr2h,c
 12713  002556  0102               	movlb	2	; () banked
 12714  002558  AEDF               	btfss	indf2,7,c
 12715  00255A  0012               	return	
 12716                           
 12717                           ; BSR set to: 2
 12718                           ;miwi_p2p.c: 2903: {
 12719                           ;miwi_p2p.c: 2904: uint16_t j;
 12720                           ;miwi_p2p.c: 2906: {TxData = 0;};
 12721  00255C  0100               	movlb	0	; () banked
 12722  00255E  6BDF               	clrf	_TxData& (0+255),b
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;miwi_p2p.c: 2907: TxBuffer[TxData++] = 0x82;
 12726  002560  0E95               	movlw	low _TxBuffer
 12727  002562  25DF               	addwf	_TxData& (0+255),w,b
 12728  002564  6ED9               	movwf	fsr2l,c
 12729  002566  6ADA               	clrf	fsr2h,c
 12730  002568  0E01               	movlw	high _TxBuffer
 12731  00256A  22DA               	addwfc	fsr2h,f,c
 12732  00256C  0E82               	movlw	130
 12733  00256E  6EDF               	movwf	indf2,c
 12734                           
 12735                           ; BSR set to: 0
 12736  002570  2BDF               	incf	_TxData& (0+255),f,b
 12737                           
 12738                           ; BSR set to: 0
 12739                           ;miwi_p2p.c: 2911: SendPacket(0, ConnectionTable[ConnectionIndex].Address, 1, 0);
 12740  002572  51B1               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 12741  002574  0D0E               	mullw	14
 12742  002576  0E22               	movlw	low (_ConnectionTable+4)
 12743  002578  24F3               	addwf	prodl,w,c
 12744  00257A  6FA3               	movwf	SendPacket@DestinationAddress& (0+255),b
 12745  00257C  0E02               	movlw	high (_ConnectionTable+4)
 12746  00257E  20F4               	addwfc	prodh,w,c
 12747  002580  6FA4               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 12748  002582  0E01               	movlw	1
 12749  002584  6FA5               	movwf	SendPacket@isCommand& (0+255),b
 12750  002586  0E00               	movlw	0
 12751  002588  6BA6               	clrf	SendPacket@SecurityEnabled& (0+255),b
 12752  00258A  ECE1  F017         	call	_SendPacket
 12753                           
 12754                           ; BSR set to: 0
 12755                           ;miwi_p2p.c: 2913: for(j = 0; j < 0xFFF; j++) {}
 12756  00258E  6BAF               	clrf	MiApp_RemoveConnection@j_1610& (0+255),b
 12757  002590  6BB0               	clrf	(MiApp_RemoveConnection@j_1610+1)& (0+255),b
 12758  002592                     l9760:
 12759                           
 12760                           ; BSR set to: 0
 12761  002592  4BAF               	infsnz	MiApp_RemoveConnection@j_1610& (0+255),f,b
 12762  002594  2BB0               	incf	(MiApp_RemoveConnection@j_1610+1)& (0+255),f,b
 12763                           
 12764                           ; BSR set to: 0
 12765  002596  29AF               	incf	MiApp_RemoveConnection@j_1610& (0+255),w,b
 12766  002598  0E0F               	movlw	15
 12767  00259A  59B0               	subwfb	(MiApp_RemoveConnection@j_1610+1)& (0+255),w,b
 12768  00259C  E3FA               	bnc	l9760
 12769                           
 12770                           ; BSR set to: 0
 12771                           ;miwi_p2p.c: 2914: ConnectionTable[ConnectionIndex].status.Val = 0;
 12772  00259E  51B1               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 12773  0025A0  0D0E               	mullw	14
 12774  0025A2  0E2A               	movlw	low (_ConnectionTable+12)
 12775  0025A4  24F3               	addwf	prodl,w,c
 12776  0025A6  6ED9               	movwf	fsr2l,c
 12777  0025A8  0E02               	movlw	high (_ConnectionTable+12)
 12778  0025AA  20F4               	addwfc	prodh,w,c
 12779  0025AC  6EDA               	movwf	fsr2h,c
 12780  0025AE  6ADF               	clrf	indf2,c
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;miwi_p2p.c: 2916: EEPROM_Write((uint8_t *)&(ConnectionTable[ConnectionIndex]), 0x04+((u
      +                          int16_t)ConnectionIndex * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 12784  0025B0  51B1               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 12785  0025B2  0D0E               	mullw	14
 12786  0025B4  0E1E               	movlw	low _ConnectionTable
 12787  0025B6  24F3               	addwf	prodl,w,c
 12788  0025B8  6F77               	movwf	EEPROM_Write@dest& (0+255),b
 12789  0025BA  0E02               	movlw	high _ConnectionTable
 12790  0025BC  20F4               	addwfc	prodh,w,c
 12791  0025BE  6F78               	movwf	(EEPROM_Write@dest+1)& (0+255),b
 12792  0025C0  51B1               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 12793  0025C2  0D0E               	mullw	14
 12794  0025C4  50F3               	movf	prodl,w,c
 12795  0025C6  0F04               	addlw	4
 12796  0025C8  6F79               	movwf	EEPROM_Write@addr& (0+255),b
 12797  0025CA  0E0E               	movlw	14
 12798  0025CC  6F7A               	movwf	EEPROM_Write@count& (0+255),b
 12799  0025CE  EF37  F01A         	goto	_EEPROM_Write	;wreg free
 12800  0025D2                     __end_of_MiApp_RemoveConnection:
 12801                           	opt stack 0
 12802                           tblptru	equ	0xFF8
 12803                           tblptrh	equ	0xFF7
 12804                           tblptrl	equ	0xFF6
 12805                           tablat	equ	0xFF5
 12806                           prodh	equ	0xFF4
 12807                           prodl	equ	0xFF3
 12808                           intcon	equ	0xFF2
 12809                           intcon2	equ	0xFF1
 12810                           intcon3	equ	0xFF0
 12811                           postinc0	equ	0xFEE
 12812                           wreg	equ	0xFE8
 12813                           indf1	equ	0xFE7
 12814                           postinc1	equ	0xFE6
 12815                           fsr1h	equ	0xFE2
 12816                           fsr1l	equ	0xFE1
 12817                           indf2	equ	0xFDF
 12818                           postinc2	equ	0xFDE
 12819                           postdec2	equ	0xFDD
 12820                           fsr2h	equ	0xFDA
 12821                           fsr2l	equ	0xFD9
 12822                           status	equ	0xFD8
 12823                           
 12824 ;; *************** function _SendPacket *****************
 12825 ;; Defined at:
 12826 ;;		line 1611 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12827 ;; Parameters:    Size  Location     Type
 12828 ;;  Broadcast       1    wreg     unsigned char 
 12829 ;;  DestinationA    2   67[BANK0 ] PTR unsigned char 
 12830 ;;		 -> indirectMessages.DestAddress(10), indirectMessages(102), ConnectionTable(140), NULL(0), 
 12831 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
 12832 ;;  isCommand       1   69[BANK0 ] unsigned char 
 12833 ;;  SecurityEnab    1   70[BANK0 ] unsigned char 
 12834 ;; Auto vars:     Size  Location     Type
 12835 ;;  Broadcast       1   73[BANK0 ] unsigned char 
 12836 ;;  tParam          3   74[BANK0 ] struct .
 12837 ;;  status          1   72[BANK0 ] unsigned char 
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  1    wreg      unsigned char 
 12840 ;; Registers used:
 12841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12842 ;; Tracked objects:
 12843 ;;		On entry : F/0
 12844 ;;		On exit  : F/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12847 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12848 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12849 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12850 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12851 ;;Total ram usage:       10 bytes
 12852 ;; Hardware stack levels used:    1
 12853 ;; Hardware stack levels required when called:   13
 12854 ;; This function calls:
 12855 ;;		_MiMAC_SendPacket
 12856 ;; This function is called by:
 12857 ;;		_P2PTasks
 12858 ;;		_MiApp_BroadcastPacket
 12859 ;;		_MiApp_UnicastAddress
 12860 ;;		_MiApp_BroadcastConnectionTable
 12861 ;;		_MiApp_UnicastStar
 12862 ;;		_send_link_status
 12863 ;;		_SW_Ack_SrED
 12864 ;;		_MiApp_EstablishConnection
 12865 ;;		_StartChannelHopping
 12866 ;;		_MiApp_RemoveConnection
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           	psect	text47
 12871  002FC2                     __ptext47:
 12872                           	opt stack 0
 12873  002FC2                     _SendPacket:
 12874                           	opt stack 11
 12875                           
 12876                           ;incstack = 0
 12877                           ;SendPacket@Broadcast stored from wreg
 12878  002FC2  6FA9               	movwf	SendPacket@Broadcast& (0+255),b
 12879                           
 12880                           ;miwi_p2p.c: 1617: MAC_TRANS_PARAM tParam;
 12881                           ;miwi_p2p.c: 1618: bool status;
 12882                           ;miwi_p2p.c: 1620: tParam.flags.Val = 0;
 12883  002FC4  0100               	movlb	0	; () banked
 12884  002FC6  6BAA               	clrf	SendPacket@tParam& (0+255),b
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;miwi_p2p.c: 1621: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 12888  002FC8  51A5               	movf	SendPacket@isCommand& (0+255),w,b
 12889  002FCA  E003               	bz	u8770
 12890  002FCC  6BA7               	clrf	??_SendPacket& (0+255),b
 12891  002FCE  2BA7               	incf	??_SendPacket& (0+255),f,b
 12892  002FD0  D002               	goto	u8788
 12893  002FD2                     u8770:
 12894  002FD2  0100               	movlb	0	; () banked
 12895  002FD4  6BA7               	clrf	??_SendPacket& (0+255),b
 12896  002FD6                     u8788:
 12897  002FD6  51AA               	movf	SendPacket@tParam& (0+255),w,b
 12898  002FD8  19A7               	xorwf	??_SendPacket& (0+255),w,b
 12899  002FDA  0BFC               	andlw	-4
 12900  002FDC  19A7               	xorwf	??_SendPacket& (0+255),w,b
 12901  002FDE  6FAA               	movwf	SendPacket@tParam& (0+255),b
 12902                           
 12903                           ;miwi_p2p.c: 1622: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 12904  002FE0  51A9               	movf	SendPacket@Broadcast& (0+255),w,b
 12905  002FE2  E103               	bnz	u8790
 12906  002FE4  6BA7               	clrf	??_SendPacket& (0+255),b
 12907  002FE6  2BA7               	incf	??_SendPacket& (0+255),f,b
 12908  002FE8  D002               	goto	u8808
 12909  002FEA                     u8790:
 12910  002FEA  0100               	movlb	0	; () banked
 12911  002FEC  6BA7               	clrf	??_SendPacket& (0+255),b
 12912  002FEE                     u8808:
 12913  002FEE  3BA7               	swapf	??_SendPacket& (0+255),f,b
 12914  002FF0  47A7               	rlncf	??_SendPacket& (0+255),f,b
 12915  002FF2  51AA               	movf	SendPacket@tParam& (0+255),w,b
 12916  002FF4  19A7               	xorwf	??_SendPacket& (0+255),w,b
 12917  002FF6  0BDF               	andlw	-33
 12918  002FF8  19A7               	xorwf	??_SendPacket& (0+255),w,b
 12919  002FFA  6FAA               	movwf	SendPacket@tParam& (0+255),b
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;miwi_p2p.c: 1623: tParam.flags.bits.broadcast = Broadcast;
 12923  002FFC  B1A9               	btfsc	SendPacket@Broadcast& (0+255),0,b
 12924  002FFE  D002               	bra	u8815
 12925  003000  95AA               	bcf	SendPacket@tParam& (0+255),2,b
 12926  003002  D002               	bra	u8816
 12927  003004                     u8815:
 12928  003004  0100               	movlb	0	; () banked
 12929  003006  85AA               	bsf	SendPacket@tParam& (0+255),2,b
 12930  003008                     u8816:
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;miwi_p2p.c: 1624: tParam.flags.bits.secEn = SecurityEnabled;
 12934  003008  B1A6               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
 12935  00300A  D002               	bra	u8825
 12936  00300C  97AA               	bcf	SendPacket@tParam& (0+255),3,b
 12937  00300E  D002               	bra	u8826
 12938  003010                     u8825:
 12939  003010  0100               	movlb	0	; () banked
 12940  003012  87AA               	bsf	SendPacket@tParam& (0+255),3,b
 12941  003014                     u8826:
 12942                           
 12943                           ;miwi_p2p.c: 1633: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
 12944  003014  51A9               	movf	SendPacket@Broadcast& (0+255),w,b
 12945  003016  E103               	bnz	u8830
 12946  003018  6BA7               	clrf	??_SendPacket& (0+255),b
 12947  00301A  2BA7               	incf	??_SendPacket& (0+255),f,b
 12948  00301C  D002               	goto	u8848
 12949  00301E                     u8830:
 12950  00301E  0100               	movlb	0	; () banked
 12951  003020  6BA7               	clrf	??_SendPacket& (0+255),b
 12952  003022                     u8848:
 12953  003022  3BA7               	swapf	??_SendPacket& (0+255),f,b
 12954  003024  47A7               	rlncf	??_SendPacket& (0+255),f,b
 12955  003026  47A7               	rlncf	??_SendPacket& (0+255),f,b
 12956  003028  51AA               	movf	SendPacket@tParam& (0+255),w,b
 12957  00302A  19A7               	xorwf	??_SendPacket& (0+255),w,b
 12958  00302C  0BBF               	andlw	-65
 12959  00302E  19A7               	xorwf	??_SendPacket& (0+255),w,b
 12960  003030  6FAA               	movwf	SendPacket@tParam& (0+255),b
 12961                           
 12962                           ; BSR set to: 0
 12963                           ;miwi_p2p.c: 1646: tParam.flags.bits.sourcePrsnt = 1;
 12964  003032  8FAA               	bsf	SendPacket@tParam& (0+255),7,b
 12965                           
 12966                           ;miwi_p2p.c: 1649: tParam.DestAddress = DestinationAddress;
 12967  003034  C0A3  F0AB         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
 12968  003038  C0A4  F0AC         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;miwi_p2p.c: 1655: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
 12972  00303C  C0AA  F09A         	movff	SendPacket@tParam,MiMAC_SendPacket@transParam
 12973  003040  C0AB  F09B         	movff	SendPacket@tParam+1,MiMAC_SendPacket@transParam+1
 12974  003044  C0AC  F09C         	movff	SendPacket@tParam+2,MiMAC_SendPacket@transParam+2
 12975  003048  0E95               	movlw	low _TxBuffer
 12976  00304A  6F9D               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 12977  00304C  0E01               	movlw	high _TxBuffer
 12978  00304E  6F9E               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 12979  003050  C0DF  F09F         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 12980  003054  EC0B  F014         	call	_MiMAC_SendPacket	;wreg free
 12981  003058  6FA8               	movwf	SendPacket@status& (0+255),b
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;miwi_p2p.c: 1656: TxData = 0;
 12985  00305A  6BDF               	clrf	_TxData& (0+255),b
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;miwi_p2p.c: 1658: return status;
 12989  00305C  51A8               	movf	SendPacket@status& (0+255),w,b
 12990                           
 12991                           ; BSR set to: 0
 12992  00305E  0012               	return		;funcret
 12993  003060                     __end_of_SendPacket:
 12994                           	opt stack 0
 12995                           tblptru	equ	0xFF8
 12996                           tblptrh	equ	0xFF7
 12997                           tblptrl	equ	0xFF6
 12998                           tablat	equ	0xFF5
 12999                           prodh	equ	0xFF4
 13000                           prodl	equ	0xFF3
 13001                           intcon	equ	0xFF2
 13002                           intcon2	equ	0xFF1
 13003                           intcon3	equ	0xFF0
 13004                           postinc0	equ	0xFEE
 13005                           wreg	equ	0xFE8
 13006                           indf1	equ	0xFE7
 13007                           postinc1	equ	0xFE6
 13008                           fsr1h	equ	0xFE2
 13009                           fsr1l	equ	0xFE1
 13010                           indf2	equ	0xFDF
 13011                           postinc2	equ	0xFDE
 13012                           postdec2	equ	0xFDD
 13013                           fsr2h	equ	0xFDA
 13014                           fsr2l	equ	0xFD9
 13015                           status	equ	0xFD8
 13016                           
 13017 ;; *************** function _MiMAC_SendPacket *****************
 13018 ;; Defined at:
 13019 ;;		line 728 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13020 ;; Parameters:    Size  Location     Type
 13021 ;;  transParam      3   58[BANK0 ] struct .
 13022 ;;  MACPayload      2   61[BANK0 ] PTR unsigned char 
 13023 ;;		 -> TxBuffer(35), 
 13024 ;;  MACPayloadLe    1   63[BANK0 ] unsigned char 
 13025 ;; Auto vars:     Size  Location     Type
 13026 ;;  i               1   66[BANK0 ] unsigned char 
 13027 ;;  TxIndex         1   65[BANK0 ] unsigned char 
 13028 ;; Return value:  Size  Location     Type
 13029 ;;                  1    wreg      unsigned char 
 13030 ;; Registers used:
 13031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13032 ;; Tracked objects:
 13033 ;;		On entry : F/0
 13034 ;;		On exit  : F/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13037 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13038 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13040 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13041 ;;Total ram usage:        9 bytes
 13042 ;; Hardware stack levels used:    1
 13043 ;; Hardware stack levels required when called:   12
 13044 ;; This function calls:
 13045 ;;		_TxPacket
 13046 ;; This function is called by:
 13047 ;;		_SendPacket
 13048 ;; This function uses a non-reentrant model
 13049 ;;
 13050                           
 13051                           	psect	text48
 13052  002816                     __ptext48:
 13053                           	opt stack 0
 13054  002816                     _MiMAC_SendPacket:
 13055                           	opt stack 11
 13056                           
 13057                           ; BSR set to: 0
 13058                           ;drv_mrf_miwi_89xa.c: 732: uint8_t i;
 13059                           ;drv_mrf_miwi_89xa.c: 733: uint8_t TxIndex;
 13060                           ;drv_mrf_miwi_89xa.c: 735: if( MACPayloadLen > 35 )
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;incstack = 0
 13064  002816  0E23               	movlw	35
 13065  002818  659F               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 13066  00281A  D001               	goto	l8894
 13067  00281C  0C00               	retlw	0
 13068  00281E                     l8894:
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;drv_mrf_miwi_89xa.c: 738: }
 13072                           ;drv_mrf_miwi_89xa.c: 743: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 13073  00281E  B59A               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 13074  002820  D003               	goto	u8580
 13075  002822  6BA0               	clrf	??_MiMAC_SendPacket& (0+255),b
 13076  002824  2BA0               	incf	??_MiMAC_SendPacket& (0+255),f,b
 13077  002826  D002               	goto	u8598
 13078  002828                     u8580:
 13079  002828  0100               	movlb	0	; () banked
 13080  00282A  6BA0               	clrf	??_MiMAC_SendPacket& (0+255),b
 13081  00282C                     u8598:
 13082  00282C  3BA0               	swapf	??_MiMAC_SendPacket& (0+255),f,b
 13083  00282E  47A0               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 13084  002830  47A0               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 13085  002832  519A               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 13086  002834  19A0               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 13087  002836  0BBF               	andlw	-65
 13088  002838  19A0               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 13089  00283A  6F9A               	movwf	MiMAC_SendPacket@transParam& (0+255),b
 13090                           
 13091                           ; BSR set to: 0
 13092                           ;drv_mrf_miwi_89xa.c: 747: transParam.flags.bits.sourcePrsnt = 1;
 13093  00283C  8F9A               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 13094                           
 13095                           ;drv_mrf_miwi_89xa.c: 750: if( transParam.flags.bits.packetType == 0x01 )
 13096  00283E  519A               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 13097  002840  0B03               	andlw	3
 13098  002842  06E8               	decf	wreg,f,c
 13099  002844  E101               	bnz	l145
 13100                           
 13101                           ; BSR set to: 0
 13102                           ;drv_mrf_miwi_89xa.c: 751: {
 13103                           ;drv_mrf_miwi_89xa.c: 752: transParam.flags.bits.sourcePrsnt = 1;
 13104  002846  8F9A               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 13105  002848                     l145:
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;drv_mrf_miwi_89xa.c: 753: }
 13109                           ;drv_mrf_miwi_89xa.c: 755: MACTxBuffer[0] = transParam.flags.Val;
 13110  002848  C09A  F100         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 13111                           
 13112                           ;drv_mrf_miwi_89xa.c: 756: MACTxBuffer[1] = MACSeq++;
 13113  00284C  C03E  F101         	movff	_MACSeq,_MACTxBuffer+1	;volatile
 13114                           
 13115                           ; BSR set to: 0
 13116  002850  2A3E               	incf	_MACSeq,f,c
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;drv_mrf_miwi_89xa.c: 759: TxIndex = 2;
 13120  002852  0E02               	movlw	2
 13121  002854  6FA1               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
 13122                           
 13123                           ; BSR set to: 0
 13124                           ;drv_mrf_miwi_89xa.c: 761: if( transParam.flags.bits.destPrsnt )
 13125  002856  AD9A               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 13126  002858  D01A               	goto	l150
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;drv_mrf_miwi_89xa.c: 762: {
 13130                           ;drv_mrf_miwi_89xa.c: 763: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 13131  00285A  6BA2               	clrf	MiMAC_SendPacket@i& (0+255),b
 13132  00285C  D010               	goto	l8914
 13133  00285E                     l8908:
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;drv_mrf_miwi_89xa.c: 764: {
 13137                           ;drv_mrf_miwi_89xa.c: 765: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 13138  00285E  51A2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 13139  002860  259B               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 13140  002862  6ED9               	movwf	fsr2l,c
 13141  002864  0E00               	movlw	0
 13142  002866  219C               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 13143  002868  6EDA               	movwf	fsr2h,c
 13144  00286A  0E00               	movlw	low _MACTxBuffer
 13145  00286C  25A1               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 13146  00286E  6EE1               	movwf	fsr1l,c
 13147  002870  6AE2               	clrf	fsr1h,c
 13148  002872  0E01               	movlw	high _MACTxBuffer
 13149  002874  22E2               	addwfc	fsr1h,f,c
 13150  002876  CFDF FFE7          	movff	indf2,indf1
 13151                           
 13152                           ; BSR set to: 0
 13153  00287A  2BA1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 13154                           
 13155                           ; BSR set to: 0
 13156  00287C  2BA2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 13157  00287E                     l8914:
 13158                           
 13159                           ; BSR set to: 0
 13160  00287E  3039               	rrcf	_MACInitParams,w,c
 13161  002880  32E8               	rrcf	wreg,f,c
 13162  002882  32E8               	rrcf	wreg,f,c
 13163  002884  0B0F               	andlw	15
 13164  002886  6FA0               	movwf	??_MiMAC_SendPacket& (0+255),b
 13165  002888  51A0               	movf	??_MiMAC_SendPacket& (0+255),w,b
 13166  00288A  5DA2               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 13167  00288C  E3E8               	bnc	l8908
 13168  00288E                     l150:
 13169                           
 13170                           ; BSR set to: 0
 13171                           ;drv_mrf_miwi_89xa.c: 771: }
 13172                           ;drv_mrf_miwi_89xa.c: 773: if( transParam.flags.bits.sourcePrsnt )
 13173  00288E  AF9A               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 13174  002890  D01A               	goto	l151
 13175                           
 13176                           ; BSR set to: 0
 13177                           ;drv_mrf_miwi_89xa.c: 774: {
 13178                           ;drv_mrf_miwi_89xa.c: 775: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 13179  002892  6BA2               	clrf	MiMAC_SendPacket@i& (0+255),b
 13180  002894  D010               	goto	l8924
 13181  002896                     l8918:
 13182                           
 13183                           ; BSR set to: 0
 13184                           ;drv_mrf_miwi_89xa.c: 776: {
 13185                           ;drv_mrf_miwi_89xa.c: 777: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 13186  002896  51A2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 13187  002898  243A               	addwf	_MACInitParams+1,w,c
 13188  00289A  6ED9               	movwf	fsr2l,c
 13189  00289C  0E00               	movlw	0
 13190  00289E  203B               	addwfc	_MACInitParams+2,w,c
 13191  0028A0  6EDA               	movwf	fsr2h,c
 13192  0028A2  0E00               	movlw	low _MACTxBuffer
 13193  0028A4  25A1               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 13194  0028A6  6EE1               	movwf	fsr1l,c
 13195  0028A8  6AE2               	clrf	fsr1h,c
 13196  0028AA  0E01               	movlw	high _MACTxBuffer
 13197  0028AC  22E2               	addwfc	fsr1h,f,c
 13198  0028AE  CFDF FFE7          	movff	indf2,indf1
 13199                           
 13200                           ; BSR set to: 0
 13201  0028B2  2BA1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 13202                           
 13203                           ; BSR set to: 0
 13204  0028B4  2BA2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 13205  0028B6                     l8924:
 13206                           
 13207                           ; BSR set to: 0
 13208  0028B6  3039               	rrcf	_MACInitParams,w,c
 13209  0028B8  32E8               	rrcf	wreg,f,c
 13210  0028BA  32E8               	rrcf	wreg,f,c
 13211  0028BC  0B0F               	andlw	15
 13212  0028BE  6FA0               	movwf	??_MiMAC_SendPacket& (0+255),b
 13213  0028C0  51A0               	movf	??_MiMAC_SendPacket& (0+255),w,b
 13214  0028C2  5DA2               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 13215  0028C4  E3E8               	bnc	l8918
 13216  0028C6                     l151:
 13217                           
 13218                           ; BSR set to: 0
 13219                           ;drv_mrf_miwi_89xa.c: 778: }
 13220                           ;drv_mrf_miwi_89xa.c: 780: }
 13221                           ;drv_mrf_miwi_89xa.c: 841: for(i = 0; i < MACPayloadLen; i++)
 13222  0028C6  6BA2               	clrf	MiMAC_SendPacket@i& (0+255),b
 13223  0028C8  D010               	goto	l8932
 13224  0028CA                     l8926:
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;drv_mrf_miwi_89xa.c: 842: {
 13228                           ;drv_mrf_miwi_89xa.c: 843: MACTxBuffer[TxIndex++] = MACPayload[i];
 13229  0028CA  51A2               	movf	MiMAC_SendPacket@i& (0+255),w,b
 13230  0028CC  259D               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 13231  0028CE  6ED9               	movwf	fsr2l,c
 13232  0028D0  0E00               	movlw	0
 13233  0028D2  219E               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 13234  0028D4  6EDA               	movwf	fsr2h,c
 13235  0028D6  0E00               	movlw	low _MACTxBuffer
 13236  0028D8  25A1               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 13237  0028DA  6EE1               	movwf	fsr1l,c
 13238  0028DC  6AE2               	clrf	fsr1h,c
 13239  0028DE  0E01               	movlw	high _MACTxBuffer
 13240  0028E0  22E2               	addwfc	fsr1h,f,c
 13241  0028E2  CFDF FFE7          	movff	indf2,indf1
 13242                           
 13243                           ; BSR set to: 0
 13244  0028E6  2BA1               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 13245                           
 13246                           ; BSR set to: 0
 13247  0028E8  2BA2               	incf	MiMAC_SendPacket@i& (0+255),f,b
 13248  0028EA                     l8932:
 13249                           
 13250                           ; BSR set to: 0
 13251  0028EA  519F               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 13252  0028EC  5DA2               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 13253  0028EE  E3ED               	bnc	l8926
 13254                           
 13255                           ; BSR set to: 0
 13256                           ;drv_mrf_miwi_89xa.c: 844: }
 13257                           ;drv_mrf_miwi_89xa.c: 846: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 13258  0028F0  0E00               	movlw	0
 13259  0028F2  B239               	btfsc	_MACInitParams,1,c
 13260  0028F4  0E01               	movlw	1
 13261  0028F6  6F86               	movwf	TxPacket@CCA& (0+255),b
 13262  0028F8  51A1               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 13263  0028FA  EFE9  F012         	goto	_TxPacket
 13264  0028FE                     __end_of_MiMAC_SendPacket:
 13265                           	opt stack 0
 13266                           tblptru	equ	0xFF8
 13267                           tblptrh	equ	0xFF7
 13268                           tblptrl	equ	0xFF6
 13269                           tablat	equ	0xFF5
 13270                           prodh	equ	0xFF4
 13271                           prodl	equ	0xFF3
 13272                           intcon	equ	0xFF2
 13273                           intcon2	equ	0xFF1
 13274                           intcon3	equ	0xFF0
 13275                           postinc0	equ	0xFEE
 13276                           wreg	equ	0xFE8
 13277                           indf1	equ	0xFE7
 13278                           postinc1	equ	0xFE6
 13279                           fsr1h	equ	0xFE2
 13280                           fsr1l	equ	0xFE1
 13281                           indf2	equ	0xFDF
 13282                           postinc2	equ	0xFDE
 13283                           postdec2	equ	0xFDD
 13284                           fsr2h	equ	0xFDA
 13285                           fsr2l	equ	0xFD9
 13286                           status	equ	0xFD8
 13287                           
 13288 ;; *************** function _TxPacket *****************
 13289 ;; Defined at:
 13290 ;;		line 288 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13291 ;; Parameters:    Size  Location     Type
 13292 ;;  TxPacketLen     1    wreg     unsigned char 
 13293 ;;  CCA             1   38[BANK0 ] unsigned char 
 13294 ;; Auto vars:     Size  Location     Type
 13295 ;;  TxPacketLen     1   56[BANK0 ] unsigned char 
 13296 ;;  allowedTxFai    1   53[BANK0 ] unsigned char 
 13297 ;;  t2              4   47[BANK0 ] struct _MIWI_TICK
 13298 ;;  t1              4   43[BANK0 ] struct _MIWI_TICK
 13299 ;;  i               1   57[BANK0 ] unsigned char 
 13300 ;;  status          1   55[BANK0 ] unsigned char 
 13301 ;;  rssival         1   54[BANK0 ] unsigned char 
 13302 ;;  reTry           1   52[BANK0 ] unsigned char 
 13303 ;;  CCARetries      1   51[BANK0 ] unsigned char 
 13304 ;; Return value:  Size  Location     Type
 13305 ;;                  1    wreg      unsigned char 
 13306 ;; Registers used:
 13307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13308 ;; Tracked objects:
 13309 ;;		On entry : F/0
 13310 ;;		On exit  : F/0
 13311 ;;		Unchanged: 0/0
 13312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13313 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13314 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13315 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13316 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13317 ;;Total ram usage:       20 bytes
 13318 ;; Hardware stack levels used:    1
 13319 ;; Hardware stack levels required when called:   11
 13320 ;; This function calls:
 13321 ;;		_DELAY_10us
 13322 ;;		_MiWi_TickGet
 13323 ;;		_RegisterRead
 13324 ;;		_RegisterSet
 13325 ;;		_SetRFMode
 13326 ;;		_WriteFIFO
 13327 ;; This function is called by:
 13328 ;;		_MiMAC_SendPacket
 13329 ;; This function uses a non-reentrant model
 13330 ;;
 13331                           
 13332                           	psect	text49
 13333  0025D2                     __ptext49:
 13334                           	opt stack 0
 13335  0025D2                     _TxPacket:
 13336                           	opt stack 11
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;incstack = 0
 13340                           ;TxPacket@TxPacketLen stored from wreg
 13341  0025D2  6F98               	movwf	TxPacket@TxPacketLen& (0+255),b
 13342                           
 13343                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 13344                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 13345                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 13346                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 13347                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 13348                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 13349  0025D4  0E03               	movlw	3
 13350  0025D6  0100               	movlb	0	; () banked
 13351  0025D8  6F94               	movwf	TxPacket@reTry& (0+255),b
 13352                           
 13353                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 13354  0025DA  D087               	goto	l8862
 13355  0025DC                     l88:
 13356                           
 13357                           ; BSR set to: 0
 13358                           ;drv_mrf_miwi_89xa.c: 305: {
 13359                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 13360                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 13361  0025DC  6B95               	clrf	TxPacket@allowedTxFailure& (0+255),b
 13362  0025DE                     l89:
 13363                           
 13364                           ; BSR set to: 0
 13365                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 13366  0025DE  6BE0               	clrf	_hasAck& (0+255),b	;volatile
 13367                           
 13368                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 13369  0025E0  6B93               	clrf	TxPacket@CCARetries& (0+255),b
 13370                           
 13371                           ; BSR set to: 0
 13372                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 13373  0025E2  5186               	movf	TxPacket@CCA& (0+255),w,b
 13374  0025E4  E018               	bz	l90
 13375  0025E6                     l8800:
 13376                           
 13377                           ; BSR set to: 0
 13378                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 13379  0025E6  0E28               	movlw	40
 13380  0025E8  EC92  F01D         	call	_RegisterRead
 13381  0025EC  6F96               	movwf	TxPacket@rssival& (0+255),b
 13382                           
 13383                           ; BSR set to: 0
 13384                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 13385  0025EE  90D8               	bcf	status,0,c
 13386  0025F0  3396               	rrcf	TxPacket@rssival& (0+255),f,b
 13387                           
 13388                           ; BSR set to: 0
 13389                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 13390  0025F2  0E41               	movlw	65
 13391  0025F4  6596               	cpfsgt	TxPacket@rssival& (0+255),b
 13392  0025F6  D00F               	goto	l90
 13393                           
 13394                           ; BSR set to: 0
 13395                           ;drv_mrf_miwi_89xa.c: 326: {
 13396                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 13397  0025F8  2B93               	incf	TxPacket@CCARetries& (0+255),f,b
 13398  0025FA  0593               	decf	TxPacket@CCARetries& (0+255),w,b
 13399  0025FC  6F87               	movwf	??_TxPacket& (0+255),b
 13400  0025FE  0E04               	movlw	4
 13401  002600  6587               	cpfsgt	??_TxPacket& (0+255),b
 13402  002602  D001               	goto	l8812
 13403  002604  0C00               	retlw	0
 13404  002606                     l8812:
 13405                           
 13406                           ; BSR set to: 0
 13407                           ;drv_mrf_miwi_89xa.c: 331: }
 13408                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
 13409  002606  0E01               	movlw	1
 13410  002608  6F76               	movwf	DELAY_10us@tenMicroSecondCounter& (0+255),b
 13411  00260A  6B77               	clrf	(DELAY_10us@tenMicroSecondCounter+1)& (0+255),b
 13412  00260C  6B78               	clrf	(DELAY_10us@tenMicroSecondCounter+2)& (0+255),b
 13413  00260E  6B79               	clrf	(DELAY_10us@tenMicroSecondCounter+3)& (0+255),b
 13414  002610  EC5E  F015         	call	_DELAY_10us	;wreg free
 13415                           
 13416                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
 13417  002614  D7E8               	goto	l8800
 13418  002616                     l90:
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;drv_mrf_miwi_89xa.c: 334: }
 13422                           ;drv_mrf_miwi_89xa.c: 335: }
 13423                           ;drv_mrf_miwi_89xa.c: 340: INTCONbits.INT0IE = 0;
 13424  002616  98F2               	bcf	intcon,4,c	;volatile
 13425                           
 13426                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT1IE = 0;
 13427  002618  96F0               	bcf	intcon3,3,c	;volatile
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
 13431  00261A  0E20               	movlw	32
 13432  00261C  ECB2  F01B         	call	_SetRFMode
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
 13436  002620  0E1A               	movlw	26
 13437  002622  6F78               	movwf	(RegisterSet@setting+1)& (0+255),b
 13438  002624  0EC9               	movlw	201
 13439  002626  6F77               	movwf	RegisterSet@setting& (0+255),b
 13440  002628  EC46  F01E         	call	_RegisterSet	;wreg free
 13441                           
 13442                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
 13443  00262C  0100               	movlb	0	; () banked
 13444  00262E  5198               	movf	TxPacket@TxPacketLen& (0+255),w,b
 13445  002630  EC00  F01F         	call	_WriteFIFO
 13446                           
 13447                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
 13448  002634  0100               	movlb	0	; () banked
 13449  002636  6B99               	clrf	TxPacket@i& (0+255),b
 13450  002638  D00B               	goto	l8826
 13451  00263A                     l8822:
 13452                           
 13453                           ; BSR set to: 0
 13454                           ;drv_mrf_miwi_89xa.c: 347: {
 13455                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
 13456  00263A  0E00               	movlw	low _MACTxBuffer
 13457  00263C  2599               	addwf	TxPacket@i& (0+255),w,b
 13458  00263E  6ED9               	movwf	fsr2l,c
 13459  002640  6ADA               	clrf	fsr2h,c
 13460  002642  0E01               	movlw	high _MACTxBuffer
 13461  002644  22DA               	addwfc	fsr2h,f,c
 13462  002646  50DF               	movf	indf2,w,c
 13463  002648  EC00  F01F         	call	_WriteFIFO
 13464  00264C  0100               	movlb	0	; () banked
 13465  00264E  2B99               	incf	TxPacket@i& (0+255),f,b
 13466  002650                     l8826:
 13467                           
 13468                           ; BSR set to: 0
 13469  002650  5198               	movf	TxPacket@TxPacketLen& (0+255),w,b
 13470  002652  5D99               	subwf	TxPacket@i& (0+255),w,b
 13471  002654  E3F2               	bnc	l8822
 13472                           
 13473                           ; BSR set to: 0
 13474                           ;drv_mrf_miwi_89xa.c: 349: }
 13475                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
 13476  002656  0E80               	movlw	128
 13477  002658  ECB2  F01B         	call	_SetRFMode
 13478                           
 13479                           ; BSR set to: 0
 13480                           ;drv_mrf_miwi_89xa.c: 352: INTCONbits.INT0IE = 1;
 13481  00265C  88F2               	bsf	intcon,4,c	;volatile
 13482                           
 13483                           ; BSR set to: 0
 13484                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT1IE = 1;
 13485  00265E  86F0               	bsf	intcon3,3,c	;volatile
 13486  002660                     l8834:
 13487                           
 13488                           ; BSR set to: 0
 13489  002660  51D9               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 13490  002662  E102               	bnz	l102
 13491                           
 13492                           ; BSR set to: 0
 13493  002664  A0F0               	btfss	intcon3,0,c	;volatile
 13494  002666  D7FC               	goto	l8834
 13495  002668                     l102:
 13496                           
 13497                           ; BSR set to: 0
 13498                           ;drv_mrf_miwi_89xa.c: 358: };
 13499                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
 13500  002668  6BD9               	clrf	_IRQ1_Received& (0+255),b	;volatile
 13501                           
 13502                           ; BSR set to: 0
 13503                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
 13504  00266A  0E20               	movlw	32
 13505  00266C  ECB2  F01B         	call	_SetRFMode
 13506                           
 13507                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
 13508  002670  0E60               	movlw	96
 13509  002672  ECB2  F01B         	call	_SetRFMode
 13510                           
 13511                           ; BSR set to: 0
 13512                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
 13513  002676  0101               	movlb	1	; () banked
 13514  002678  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 13515  00267A  D00E               	goto	l8848
 13516                           
 13517                           ; BSR set to: 1
 13518                           ;drv_mrf_miwi_89xa.c: 368: {
 13519                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
 13520  00267C  C101  F044         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 13521                           
 13522                           ; BSR set to: 1
 13523                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
 13524  002680  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
 13525  002684  C076  F08B         	movff	?_MiWi_TickGet,TxPacket@t1
 13526  002688  C077  F08C         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 13527  00268C  C078  F08D         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 13528  002690  C079  F08E         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 13529  002694                     l8846:
 13530                           
 13531                           ; BSR set to: 0
 13532                           ;drv_mrf_miwi_89xa.c: 372: {
 13533                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
 13534  002694  51E0               	movf	_hasAck& (0+255),w,b	;volatile
 13535  002696  E004               	bz	l8850
 13536  002698                     l8848:
 13537                           
 13538                           ;drv_mrf_miwi_89xa.c: 374: {
 13539                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
 13540  002698  0E01               	movlw	1
 13541  00269A  0100               	movlb	0	; () banked
 13542  00269C  6F97               	movwf	TxPacket@status& (0+255),b
 13543                           
 13544                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
 13545  00269E  D02A               	goto	l8864
 13546  0026A0                     l8850:
 13547                           
 13548                           ; BSR set to: 0
 13549                           ;drv_mrf_miwi_89xa.c: 377: }
 13550                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
 13551  0026A0  EC1D  F01D         	call	_MiWi_TickGet	;wreg free
 13552  0026A4  C076  F08F         	movff	?_MiWi_TickGet,TxPacket@t2
 13553  0026A8  C077  F090         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 13554  0026AC  C078  F091         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 13555  0026B0  C079  F092         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 13556                           
 13557                           ; BSR set to: 0
 13558                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 13559  0026B4  518B               	movf	TxPacket@t1& (0+255),w,b
 13560  0026B6  5D8F               	subwf	TxPacket@t2& (0+255),w,b
 13561  0026B8  6F87               	movwf	??_TxPacket& (0+255),b
 13562  0026BA  518C               	movf	(TxPacket@t1+1)& (0+255),w,b
 13563  0026BC  5990               	subwfb	(TxPacket@t2+1)& (0+255),w,b
 13564  0026BE  6F88               	movwf	(??_TxPacket+1)& (0+255),b
 13565  0026C0  518D               	movf	(TxPacket@t1+2)& (0+255),w,b
 13566  0026C2  5991               	subwfb	(TxPacket@t2+2)& (0+255),w,b
 13567  0026C4  6F89               	movwf	(??_TxPacket+2)& (0+255),b
 13568  0026C6  518E               	movf	(TxPacket@t1+3)& (0+255),w,b
 13569  0026C8  5992               	subwfb	(TxPacket@t2+3)& (0+255),w,b
 13570  0026CA  6F8A               	movwf	(??_TxPacket+3)& (0+255),b
 13571  0026CC  518A               	movf	(??_TxPacket+3)& (0+255),w,b
 13572  0026CE  1189               	iorwf	(??_TxPacket+2)& (0+255),w,b
 13573  0026D0  E105               	bnz	u8500
 13574  0026D2  0EA9               	movlw	169
 13575  0026D4  5D87               	subwf	??_TxPacket& (0+255),w,b
 13576  0026D6  0E61               	movlw	97
 13577  0026D8  5988               	subwfb	(??_TxPacket+1)& (0+255),w,b
 13578  0026DA  E3DC               	bnc	l8846
 13579  0026DC                     u8500:
 13580                           
 13581                           ; BSR set to: 0
 13582                           ;drv_mrf_miwi_89xa.c: 382: }
 13583                           ;drv_mrf_miwi_89xa.c: 383: }
 13584                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
 13585  0026DC  2B95               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 13586  0026DE  0595               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 13587  0026E0  6F87               	movwf	??_TxPacket& (0+255),b
 13588  0026E2  0E04               	movlw	4
 13589  0026E4  6187               	cpfslt	??_TxPacket& (0+255),b
 13590  0026E6  D001               	goto	l8862
 13591  0026E8  D77A               	goto	l89
 13592  0026EA                     l8862:
 13593                           
 13594                           ; BSR set to: 0
 13595  0026EA  0794               	decf	TxPacket@reTry& (0+255),f,b
 13596  0026EC  2994               	incf	TxPacket@reTry& (0+255),w,b
 13597  0026EE  E001 D775          	bnz	l88
 13598                           
 13599                           ; BSR set to: 0
 13600                           ;drv_mrf_miwi_89xa.c: 394: }
 13601                           ;drv_mrf_miwi_89xa.c: 395: }
 13602                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
 13603  0026F2  6B97               	clrf	TxPacket@status& (0+255),b
 13604  0026F4                     l8864:
 13605                           
 13606                           ; BSR set to: 0
 13607                           ;drv_mrf_miwi_89xa.c: 399: return status;
 13608  0026F4  5197               	movf	TxPacket@status& (0+255),w,b
 13609                           
 13610                           ; BSR set to: 0
 13611  0026F6  0012               	return		;funcret
 13612  0026F8                     __end_of_TxPacket:
 13613                           	opt stack 0
 13614                           tblptru	equ	0xFF8
 13615                           tblptrh	equ	0xFF7
 13616                           tblptrl	equ	0xFF6
 13617                           tablat	equ	0xFF5
 13618                           prodh	equ	0xFF4
 13619                           prodl	equ	0xFF3
 13620                           intcon	equ	0xFF2
 13621                           intcon2	equ	0xFF1
 13622                           intcon3	equ	0xFF0
 13623                           postinc0	equ	0xFEE
 13624                           wreg	equ	0xFE8
 13625                           indf1	equ	0xFE7
 13626                           postinc1	equ	0xFE6
 13627                           fsr1h	equ	0xFE2
 13628                           fsr1l	equ	0xFE1
 13629                           indf2	equ	0xFDF
 13630                           postinc2	equ	0xFDE
 13631                           postdec2	equ	0xFDD
 13632                           fsr2h	equ	0xFDA
 13633                           fsr2l	equ	0xFD9
 13634                           status	equ	0xFD8
 13635                           
 13636 ;; *************** function _WriteFIFO *****************
 13637 ;; Defined at:
 13638 ;;		line 244 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13639 ;; Parameters:    Size  Location     Type
 13640 ;;  Data            1    wreg     unsigned char 
 13641 ;; Auto vars:     Size  Location     Type
 13642 ;;  Data            1   23[BANK0 ] unsigned char 
 13643 ;;  IRQ0select      1   25[BANK0 ] unsigned char 
 13644 ;;  IRQ1select      1   24[BANK0 ] unsigned char 
 13645 ;; Return value:  Size  Location     Type
 13646 ;;		None               void
 13647 ;; Registers used:
 13648 ;;		wreg, status,2, cstack
 13649 ;; Tracked objects:
 13650 ;;		On entry : F/0
 13651 ;;		On exit  : 0/0
 13652 ;;		Unchanged: 0/0
 13653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13655 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13657 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13658 ;;Total ram usage:        3 bytes
 13659 ;; Hardware stack levels used:    1
 13660 ;; Hardware stack levels required when called:    9
 13661 ;; This function calls:
 13662 ;;		_SPI1_Exchange8bit
 13663 ;; This function is called by:
 13664 ;;		_TxPacket
 13665 ;; This function uses a non-reentrant model
 13666 ;;
 13667                           
 13668                           	psect	text50
 13669  003E00                     __ptext50:
 13670                           	opt stack 0
 13671  003E00                     _WriteFIFO:
 13672                           	opt stack 12
 13673                           
 13674                           ; BSR set to: 0
 13675                           ;incstack = 0
 13676                           ;WriteFIFO@Data stored from wreg
 13677  003E00  6F77               	movwf	WriteFIFO@Data& (0+255),b
 13678                           
 13679                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 13680  003E02  0E00               	movlw	0
 13681  003E04  B6F0               	btfsc	intcon3,3,c	;volatile
 13682  003E06  0E01               	movlw	1
 13683  003E08  0100               	movlb	0	; () banked
 13684  003E0A  6F78               	movwf	WriteFIFO@IRQ1select& (0+255),b
 13685                           
 13686                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 13687  003E0C  0E00               	movlw	0
 13688  003E0E  B8F2               	btfsc	intcon,4,c	;volatile
 13689  003E10  0E01               	movlw	1
 13690  003E12  6F79               	movwf	WriteFIFO@IRQ0select& (0+255),b
 13691                           
 13692                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 13693  003E14  98F2               	bcf	intcon,4,c	;volatile
 13694                           
 13695                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 13696  003E16  96F0               	bcf	intcon3,3,c	;volatile
 13697                           
 13698                           ;drv_mrf_miwi_89xa.c: 254: LATAbits.LATA5 = 0;
 13699  003E18  9A89               	bcf	3977,5,c	;volatile
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;drv_mrf_miwi_89xa.c: 255: SPI1_Exchange8bit(Data);
 13703  003E1A  5177               	movf	WriteFIFO@Data& (0+255),w,b
 13704  003E1C  ECCE  F020         	call	_SPI1_Exchange8bit
 13705                           
 13706                           ;drv_mrf_miwi_89xa.c: 256: LATAbits.LATA5 = 1;
 13707  003E20  8A89               	bsf	3977,5,c	;volatile
 13708                           
 13709                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 13710  003E22  0100               	movlb	0	; () banked
 13711  003E24  B178               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 13712  003E26  D002               	bra	u8345
 13713  003E28  96F0               	bcf	intcon3,3,c	;volatile
 13714  003E2A  D001               	bra	u8346
 13715  003E2C                     u8345:
 13716  003E2C  86F0               	bsf	intcon3,3,c	;volatile
 13717  003E2E                     u8346:
 13718                           
 13719                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 13720  003E2E  0100               	movlb	0	; () banked
 13721  003E30  B179               	btfsc	WriteFIFO@IRQ0select& (0+255),0,b
 13722  003E32  D002               	bra	u8355
 13723  003E34  98F2               	bcf	intcon,4,c	;volatile
 13724  003E36  D001               	bra	u8356
 13725  003E38                     u8355:
 13726  003E38  88F2               	bsf	intcon,4,c	;volatile
 13727  003E3A                     u8356:
 13728  003E3A  0012               	return		;funcret
 13729  003E3C                     __end_of_WriteFIFO:
 13730                           	opt stack 0
 13731                           tblptru	equ	0xFF8
 13732                           tblptrh	equ	0xFF7
 13733                           tblptrl	equ	0xFF6
 13734                           tablat	equ	0xFF5
 13735                           prodh	equ	0xFF4
 13736                           prodl	equ	0xFF3
 13737                           intcon	equ	0xFF2
 13738                           intcon2	equ	0xFF1
 13739                           intcon3	equ	0xFF0
 13740                           postinc0	equ	0xFEE
 13741                           wreg	equ	0xFE8
 13742                           indf1	equ	0xFE7
 13743                           postinc1	equ	0xFE6
 13744                           fsr1h	equ	0xFE2
 13745                           fsr1l	equ	0xFE1
 13746                           indf2	equ	0xFDF
 13747                           postinc2	equ	0xFDE
 13748                           postdec2	equ	0xFDD
 13749                           fsr2h	equ	0xFDA
 13750                           fsr2l	equ	0xFD9
 13751                           status	equ	0xFD8
 13752                           
 13753 ;; *************** function _SetRFMode *****************
 13754 ;; Defined at:
 13755 ;;		line 667 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13756 ;; Parameters:    Size  Location     Type
 13757 ;;  mode            1    wreg     unsigned char 
 13758 ;; Auto vars:     Size  Location     Type
 13759 ;;  mode            1   27[BANK0 ] unsigned char 
 13760 ;; Return value:  Size  Location     Type
 13761 ;;		None               void
 13762 ;; Registers used:
 13763 ;;		wreg, status,2, status,0, cstack
 13764 ;; Tracked objects:
 13765 ;;		On entry : 0/0
 13766 ;;		On exit  : F/0
 13767 ;;		Unchanged: 0/0
 13768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13770 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13772 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13773 ;;Total ram usage:        1 bytes
 13774 ;; Hardware stack levels used:    1
 13775 ;; Hardware stack levels required when called:   10
 13776 ;; This function calls:
 13777 ;;		_RegisterSet
 13778 ;; This function is called by:
 13779 ;;		_TxPacket
 13780 ;;		_MiMAC_SetChannel
 13781 ;;		_MiMAC_Init
 13782 ;; This function uses a non-reentrant model
 13783 ;;
 13784                           
 13785                           	psect	text51
 13786  003764                     __ptext51:
 13787                           	opt stack 0
 13788  003764                     _SetRFMode:
 13789                           	opt stack 11
 13790                           
 13791                           ;incstack = 0
 13792                           ;SetRFMode@mode stored from wreg
 13793  003764  0100               	movlb	0	; () banked
 13794  003766  6F7B               	movwf	SetRFMode@mode& (0+255),b
 13795                           
 13796                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
 13797  003768  D02C               	goto	l8772
 13798  00376A                     l8750:
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x80);
 13802  00376A  6B78               	clrf	(RegisterSet@setting+1)& (0+255),b
 13803  00376C  0E86               	movlw	134
 13804  00376E  6F77               	movwf	RegisterSet@setting& (0+255),b
 13805  003770  EC46  F01E         	call	_RegisterSet	;wreg free
 13806                           
 13807                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
 13808  003774  0E80               	movlw	128
 13809  003776  0100               	movlb	0	; () banked
 13810  003778  6FDD               	movwf	_RF_Mode& (0+255),b
 13811                           
 13812                           ;drv_mrf_miwi_89xa.c: 673: break;
 13813  00377A  0C80               	retlw	128
 13814  00377C                     l8754:
 13815                           
 13816                           ; BSR set to: 0
 13817                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x00 | 0x06) & 0x1F) | 0x60);
 13818  00377C  6B78               	clrf	(RegisterSet@setting+1)& (0+255),b
 13819  00377E  0E66               	movlw	102
 13820  003780  6F77               	movwf	RegisterSet@setting& (0+255),b
 13821  003782  EC46  F01E         	call	_RegisterSet	;wreg free
 13822                           
 13823                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
 13824  003786  0E60               	movlw	96
 13825  003788  0100               	movlb	0	; () banked
 13826  00378A  6FDD               	movwf	_RF_Mode& (0+255),b
 13827                           
 13828                           ;drv_mrf_miwi_89xa.c: 677: break;
 13829  00378C  0C60               	retlw	96
 13830  00378E                     l8758:
 13831                           
 13832                           ; BSR set to: 0
 13833                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
 13834  00378E  6B78               	clrf	(RegisterSet@setting+1)& (0+255),b
 13835  003790  0E46               	movlw	70
 13836  003792  6F77               	movwf	RegisterSet@setting& (0+255),b
 13837  003794  EC46  F01E         	call	_RegisterSet	;wreg free
 13838                           
 13839                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
 13840  003798  0E40               	movlw	64
 13841  00379A  0100               	movlb	0	; () banked
 13842  00379C  6FDD               	movwf	_RF_Mode& (0+255),b
 13843                           
 13844                           ;drv_mrf_miwi_89xa.c: 681: break;
 13845  00379E  0C40               	retlw	64
 13846  0037A0                     l8762:
 13847                           
 13848                           ; BSR set to: 0
 13849                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x20);
 13850  0037A0  6B78               	clrf	(RegisterSet@setting+1)& (0+255),b
 13851  0037A2  0E26               	movlw	38
 13852  0037A4  6F77               	movwf	RegisterSet@setting& (0+255),b
 13853  0037A6  EC46  F01E         	call	_RegisterSet	;wreg free
 13854                           
 13855                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
 13856  0037AA  0E20               	movlw	32
 13857  0037AC  0100               	movlb	0	; () banked
 13858  0037AE  6FDD               	movwf	_RF_Mode& (0+255),b
 13859                           
 13860                           ;drv_mrf_miwi_89xa.c: 685: break;
 13861  0037B0  0C20               	retlw	32
 13862  0037B2                     l8766:
 13863                           
 13864                           ; BSR set to: 0
 13865                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x00);
 13866  0037B2  6B78               	clrf	(RegisterSet@setting+1)& (0+255),b
 13867  0037B4  0E06               	movlw	6
 13868  0037B6  6F77               	movwf	RegisterSet@setting& (0+255),b
 13869  0037B8  EC46  F01E         	call	_RegisterSet	;wreg free
 13870                           
 13871                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
 13872  0037BC  0100               	movlb	0	; () banked
 13873  0037BE  6BDD               	clrf	_RF_Mode& (0+255),b
 13874                           
 13875                           ;drv_mrf_miwi_89xa.c: 689: break;
 13876  0037C0  0012               	return	
 13877  0037C2                     l8772:
 13878  0037C2  0100               	movlb	0	; () banked
 13879  0037C4  517B               	movf	SetRFMode@mode& (0+255),w,b
 13880                           
 13881                           ; Switch size 1, requested type "speed"
 13882                           ; Number of cases is 5, Range of values is 0 to 128
 13883                           ; switch strategies available:
 13884                           ; Name         Instructions Cycles
 13885                           ; simple_byte           16     9 (average)
 13886                           ;	Chosen strategy is simple_byte
 13887  0037C6  E0F5               	bz	l8766
 13888  0037C8  0A20               	xorlw	32	; case 32
 13889  0037CA  E0EA               	bz	l8762
 13890  0037CC  0A60               	xorlw	96	; case 64
 13891  0037CE  E0DF               	bz	l8758
 13892  0037D0  0A20               	xorlw	32	; case 96
 13893  0037D2  E0D4               	bz	l8754
 13894  0037D4  0AE0               	xorlw	224	; case 128
 13895  0037D6  E0C9               	bz	l8750
 13896                           
 13897                           ; BSR set to: 0
 13898  0037D8  0012               	return		;funcret
 13899  0037DA                     __end_of_SetRFMode:
 13900                           	opt stack 0
 13901                           tblptru	equ	0xFF8
 13902                           tblptrh	equ	0xFF7
 13903                           tblptrl	equ	0xFF6
 13904                           tablat	equ	0xFF5
 13905                           prodh	equ	0xFF4
 13906                           prodl	equ	0xFF3
 13907                           intcon	equ	0xFF2
 13908                           intcon2	equ	0xFF1
 13909                           intcon3	equ	0xFF0
 13910                           postinc0	equ	0xFEE
 13911                           wreg	equ	0xFE8
 13912                           indf1	equ	0xFE7
 13913                           postinc1	equ	0xFE6
 13914                           fsr1h	equ	0xFE2
 13915                           fsr1l	equ	0xFE1
 13916                           indf2	equ	0xFDF
 13917                           postinc2	equ	0xFDE
 13918                           postdec2	equ	0xFDD
 13919                           fsr2h	equ	0xFDA
 13920                           fsr2l	equ	0xFD9
 13921                           status	equ	0xFD8
 13922                           
 13923 ;; *************** function _RegisterSet *****************
 13924 ;; Defined at:
 13925 ;;		line 164 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 13926 ;; Parameters:    Size  Location     Type
 13927 ;;  setting         2   23[BANK0 ] unsigned int 
 13928 ;; Auto vars:     Size  Location     Type
 13929 ;;  IRQ0select      1   26[BANK0 ] unsigned char 
 13930 ;;  IRQ1select      1   25[BANK0 ] unsigned char 
 13931 ;; Return value:  Size  Location     Type
 13932 ;;		None               void
 13933 ;; Registers used:
 13934 ;;		wreg, status,2, cstack
 13935 ;; Tracked objects:
 13936 ;;		On entry : F/0
 13937 ;;		On exit  : 0/0
 13938 ;;		Unchanged: 0/0
 13939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13941 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13943 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13944 ;;Total ram usage:        4 bytes
 13945 ;; Hardware stack levels used:    1
 13946 ;; Hardware stack levels required when called:    9
 13947 ;; This function calls:
 13948 ;;		_SPI1_Exchange8bit
 13949 ;; This function is called by:
 13950 ;;		_TxPacket
 13951 ;;		_MiMAC_SetChannel
 13952 ;;		_MiMAC_Init
 13953 ;;		_SetRFMode
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957                           	psect	text52
 13958  003C8C                     __ptext52:
 13959                           	opt stack 0
 13960  003C8C                     _RegisterSet:
 13961                           	opt stack 11
 13962                           
 13963                           ; BSR set to: 0
 13964                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;incstack = 0
 13968  003C8C  0E00               	movlw	0
 13969  003C8E  B6F0               	btfsc	intcon3,3,c	;volatile
 13970  003C90  0E01               	movlw	1
 13971  003C92  6F79               	movwf	RegisterSet@IRQ1select& (0+255),b
 13972                           
 13973                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 13974  003C94  0E00               	movlw	0
 13975  003C96  B8F2               	btfsc	intcon,4,c	;volatile
 13976  003C98  0E01               	movlw	1
 13977  003C9A  6F7A               	movwf	RegisterSet@IRQ0select& (0+255),b
 13978                           
 13979                           ; BSR set to: 0
 13980                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 13981  003C9C  98F2               	bcf	intcon,4,c	;volatile
 13982                           
 13983                           ; BSR set to: 0
 13984                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 13985  003C9E  96F0               	bcf	intcon3,3,c	;volatile
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;drv_mrf_miwi_89xa.c: 173: LATDbits.LATD1 = 0;
 13989  003CA0  928C               	bcf	3980,1,c	;volatile
 13990                           
 13991                           ; BSR set to: 0
 13992                           ;drv_mrf_miwi_89xa.c: 174: SPI1_Exchange8bit((uint8_t)(setting >> 8));
 13993  003CA2  5178               	movf	(RegisterSet@setting+1)& (0+255),w,b
 13994  003CA4  ECCE  F020         	call	_SPI1_Exchange8bit
 13995                           
 13996                           ;drv_mrf_miwi_89xa.c: 175: SPI1_Exchange8bit((uint8_t)setting);
 13997  003CA8  0100               	movlb	0	; () banked
 13998  003CAA  5177               	movf	RegisterSet@setting& (0+255),w,b
 13999  003CAC  ECCE  F020         	call	_SPI1_Exchange8bit
 14000                           
 14001                           ;drv_mrf_miwi_89xa.c: 176: LATDbits.LATD1 = 1;
 14002  003CB0  828C               	bsf	3980,1,c	;volatile
 14003                           
 14004                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 14005  003CB2  0100               	movlb	0	; () banked
 14006  003CB4  B179               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 14007  003CB6  D002               	bra	u8305
 14008  003CB8  96F0               	bcf	intcon3,3,c	;volatile
 14009  003CBA  D001               	bra	u8306
 14010  003CBC                     u8305:
 14011  003CBC  86F0               	bsf	intcon3,3,c	;volatile
 14012  003CBE                     u8306:
 14013                           
 14014                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 14015  003CBE  0100               	movlb	0	; () banked
 14016  003CC0  B17A               	btfsc	RegisterSet@IRQ0select& (0+255),0,b
 14017  003CC2  D002               	bra	u8315
 14018  003CC4  98F2               	bcf	intcon,4,c	;volatile
 14019  003CC6  D001               	bra	u8316
 14020  003CC8                     u8315:
 14021  003CC8  88F2               	bsf	intcon,4,c	;volatile
 14022  003CCA                     u8316:
 14023  003CCA  0012               	return		;funcret
 14024  003CCC                     __end_of_RegisterSet:
 14025                           	opt stack 0
 14026                           tblptru	equ	0xFF8
 14027                           tblptrh	equ	0xFF7
 14028                           tblptrl	equ	0xFF6
 14029                           tablat	equ	0xFF5
 14030                           prodh	equ	0xFF4
 14031                           prodl	equ	0xFF3
 14032                           intcon	equ	0xFF2
 14033                           intcon2	equ	0xFF1
 14034                           intcon3	equ	0xFF0
 14035                           postinc0	equ	0xFEE
 14036                           wreg	equ	0xFE8
 14037                           indf1	equ	0xFE7
 14038                           postinc1	equ	0xFE6
 14039                           fsr1h	equ	0xFE2
 14040                           fsr1l	equ	0xFE1
 14041                           indf2	equ	0xFDF
 14042                           postinc2	equ	0xFDE
 14043                           postdec2	equ	0xFDD
 14044                           fsr2h	equ	0xFDA
 14045                           fsr2l	equ	0xFD9
 14046                           status	equ	0xFD8
 14047                           
 14048 ;; *************** function _RegisterRead *****************
 14049 ;; Defined at:
 14050 ;;		line 200 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 14051 ;; Parameters:    Size  Location     Type
 14052 ;;  address         1    wreg     unsigned char 
 14053 ;; Auto vars:     Size  Location     Type
 14054 ;;  address         1   23[BANK0 ] unsigned char 
 14055 ;;  IRQ0select      1   26[BANK0 ] unsigned char 
 14056 ;;  IRQ1select      1   25[BANK0 ] unsigned char 
 14057 ;;  value           1   24[BANK0 ] unsigned char 
 14058 ;; Return value:  Size  Location     Type
 14059 ;;                  1    wreg      unsigned char 
 14060 ;; Registers used:
 14061 ;;		wreg, status,2, status,0, cstack
 14062 ;; Tracked objects:
 14063 ;;		On entry : 0/0
 14064 ;;		On exit  : F/0
 14065 ;;		Unchanged: 0/0
 14066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14068 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14070 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14071 ;;Total ram usage:        4 bytes
 14072 ;; Hardware stack levels used:    1
 14073 ;; Hardware stack levels required when called:    9
 14074 ;; This function calls:
 14075 ;;		_SPI1_Exchange8bit
 14076 ;; This function is called by:
 14077 ;;		_TxPacket
 14078 ;; This function uses a non-reentrant model
 14079 ;;
 14080                           
 14081                           	psect	text53
 14082  003B24                     __ptext53:
 14083                           	opt stack 0
 14084  003B24                     _RegisterRead:
 14085                           	opt stack 12
 14086                           
 14087                           ;incstack = 0
 14088                           ;RegisterRead@address stored from wreg
 14089  003B24  0100               	movlb	0	; () banked
 14090  003B26  6F77               	movwf	RegisterRead@address& (0+255),b
 14091                           
 14092                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 14093                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 14094  003B28  0E00               	movlw	0
 14095  003B2A  B6F0               	btfsc	intcon3,3,c	;volatile
 14096  003B2C  0E01               	movlw	1
 14097  003B2E  6F79               	movwf	RegisterRead@IRQ1select& (0+255),b
 14098                           
 14099                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 14100  003B30  0E00               	movlw	0
 14101  003B32  B8F2               	btfsc	intcon,4,c	;volatile
 14102  003B34  0E01               	movlw	1
 14103  003B36  6F7A               	movwf	RegisterRead@IRQ0select& (0+255),b
 14104                           
 14105                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 14106  003B38  98F2               	bcf	intcon,4,c	;volatile
 14107                           
 14108                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 14109  003B3A  96F0               	bcf	intcon3,3,c	;volatile
 14110                           
 14111                           ;drv_mrf_miwi_89xa.c: 211: LATDbits.LATD1 = 0;
 14112  003B3C  928C               	bcf	3980,1,c	;volatile
 14113                           
 14114                           ; BSR set to: 0
 14115                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 14116  003B3E  8D77               	bsf	RegisterRead@address& (0+255),6,b
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;drv_mrf_miwi_89xa.c: 213: SPI1_Exchange8bit(address);
 14120  003B40  5177               	movf	RegisterRead@address& (0+255),w,b
 14121  003B42  ECCE  F020         	call	_SPI1_Exchange8bit
 14122                           
 14123                           ;drv_mrf_miwi_89xa.c: 214: value = SPI1_Exchange8bit(0x00);
 14124  003B46  0E00               	movlw	0
 14125  003B48  ECCE  F020         	call	_SPI1_Exchange8bit
 14126  003B4C  0100               	movlb	0	; () banked
 14127  003B4E  6F78               	movwf	RegisterRead@value& (0+255),b
 14128                           
 14129                           ; BSR set to: 0
 14130                           ;drv_mrf_miwi_89xa.c: 215: LATDbits.LATD1 = 1;
 14131  003B50  828C               	bsf	3980,1,c	;volatile
 14132                           
 14133                           ; BSR set to: 0
 14134                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 14135  003B52  B179               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 14136  003B54  D002               	bra	u8325
 14137  003B56  96F0               	bcf	intcon3,3,c	;volatile
 14138  003B58  D001               	bra	u8326
 14139  003B5A                     u8325:
 14140  003B5A  86F0               	bsf	intcon3,3,c	;volatile
 14141  003B5C                     u8326:
 14142                           
 14143                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 14144  003B5C  0100               	movlb	0	; () banked
 14145  003B5E  B17A               	btfsc	RegisterRead@IRQ0select& (0+255),0,b
 14146  003B60  D002               	bra	u8335
 14147  003B62  98F2               	bcf	intcon,4,c	;volatile
 14148  003B64  D001               	bra	u8336
 14149  003B66                     u8335:
 14150  003B66  88F2               	bsf	intcon,4,c	;volatile
 14151  003B68                     u8336:
 14152                           
 14153                           ;drv_mrf_miwi_89xa.c: 222: return value;
 14154  003B68  0100               	movlb	0	; () banked
 14155  003B6A  5178               	movf	RegisterRead@value& (0+255),w,b
 14156                           
 14157                           ; BSR set to: 0
 14158  003B6C  0012               	return		;funcret
 14159  003B6E                     __end_of_RegisterRead:
 14160                           	opt stack 0
 14161                           tblptru	equ	0xFF8
 14162                           tblptrh	equ	0xFF7
 14163                           tblptrl	equ	0xFF6
 14164                           tablat	equ	0xFF5
 14165                           prodh	equ	0xFF4
 14166                           prodl	equ	0xFF3
 14167                           intcon	equ	0xFF2
 14168                           intcon2	equ	0xFF1
 14169                           intcon3	equ	0xFF0
 14170                           postinc0	equ	0xFEE
 14171                           wreg	equ	0xFE8
 14172                           indf1	equ	0xFE7
 14173                           postinc1	equ	0xFE6
 14174                           fsr1h	equ	0xFE2
 14175                           fsr1l	equ	0xFE1
 14176                           indf2	equ	0xFDF
 14177                           postinc2	equ	0xFDE
 14178                           postdec2	equ	0xFDD
 14179                           fsr2h	equ	0xFDA
 14180                           fsr2l	equ	0xFD9
 14181                           status	equ	0xFD8
 14182                           
 14183 ;; *************** function _SPI1_Exchange8bit *****************
 14184 ;; Defined at:
 14185 ;;		line 51 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 14186 ;; Parameters:    Size  Location     Type
 14187 ;;  data            1    wreg     unsigned char 
 14188 ;; Auto vars:     Size  Location     Type
 14189 ;;  data            1   22[BANK0 ] unsigned char 
 14190 ;; Return value:  Size  Location     Type
 14191 ;;                  1    wreg      unsigned char 
 14192 ;; Registers used:
 14193 ;;		wreg, status,2
 14194 ;; Tracked objects:
 14195 ;;		On entry : 0/0
 14196 ;;		On exit  : 0/0
 14197 ;;		Unchanged: 0/0
 14198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14200 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14202 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14203 ;;Total ram usage:        1 bytes
 14204 ;; Hardware stack levels used:    1
 14205 ;; Hardware stack levels required when called:    8
 14206 ;; This function calls:
 14207 ;;		Nothing
 14208 ;; This function is called by:
 14209 ;;		_RegisterSet
 14210 ;;		_RegisterRead
 14211 ;;		_WriteFIFO
 14212 ;; This function uses a non-reentrant model
 14213 ;;
 14214                           
 14215                           	psect	text54
 14216  00419C                     __ptext54:
 14217                           	opt stack 0
 14218  00419C                     _SPI1_Exchange8bit:
 14219                           	opt stack 12
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;incstack = 0
 14223                           ;SPI1_Exchange8bit@data stored from wreg
 14224  00419C  0100               	movlb	0	; () banked
 14225  00419E  6F76               	movwf	SPI1_Exchange8bit@data& (0+255),b
 14226                           
 14227                           ;spi.c: 53: SSP1CON1bits.WCOL = 0;
 14228  0041A0  9EC6               	bcf	4038,7,c	;volatile
 14229                           
 14230                           ;spi.c: 55: SSP1BUF = data;
 14231  0041A2  C076  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
 14232  0041A6                     l922:
 14233  0041A6  A0C7               	btfss	4039,0,c	;volatile
 14234  0041A8  D7FE               	goto	l922
 14235                           
 14236                           ;spi.c: 58: }
 14237                           ;spi.c: 60: return (SSP1BUF);
 14238  0041AA  50C9               	movf	4041,w,c	;volatile
 14239  0041AC  0012               	return		;funcret
 14240  0041AE                     __end_of_SPI1_Exchange8bit:
 14241                           	opt stack 0
 14242                           tblptru	equ	0xFF8
 14243                           tblptrh	equ	0xFF7
 14244                           tblptrl	equ	0xFF6
 14245                           tablat	equ	0xFF5
 14246                           prodh	equ	0xFF4
 14247                           prodl	equ	0xFF3
 14248                           intcon	equ	0xFF2
 14249                           intcon2	equ	0xFF1
 14250                           intcon3	equ	0xFF0
 14251                           postinc0	equ	0xFEE
 14252                           wreg	equ	0xFE8
 14253                           indf1	equ	0xFE7
 14254                           postinc1	equ	0xFE6
 14255                           fsr1h	equ	0xFE2
 14256                           fsr1l	equ	0xFE1
 14257                           indf2	equ	0xFDF
 14258                           postinc2	equ	0xFDE
 14259                           postdec2	equ	0xFDD
 14260                           fsr2h	equ	0xFDA
 14261                           fsr2l	equ	0xFD9
 14262                           status	equ	0xFD8
 14263                           
 14264 ;; *************** function _MiWi_TickGet *****************
 14265 ;; Defined at:
 14266 ;;		line 114 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 14267 ;; Parameters:    Size  Location     Type
 14268 ;;		None
 14269 ;; Auto vars:     Size  Location     Type
 14270 ;;  currentTime     4   28[BANK0 ] struct _MIWI_TICK
 14271 ;;  failureCount    1   27[BANK0 ] unsigned char 
 14272 ;; Return value:  Size  Location     Type
 14273 ;;                  4   22[BANK0 ] struct _MIWI_TICK
 14274 ;; Registers used:
 14275 ;;		wreg, status,2, status,0
 14276 ;; Tracked objects:
 14277 ;;		On entry : 0/0
 14278 ;;		On exit  : F/0
 14279 ;;		Unchanged: 0/0
 14280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14282 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14283 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14284 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14285 ;;Total ram usage:       10 bytes
 14286 ;; Hardware stack levels used:    1
 14287 ;; Hardware stack levels required when called:    8
 14288 ;; This function calls:
 14289 ;;		Nothing
 14290 ;; This function is called by:
 14291 ;;		_TxPacket
 14292 ;;		_MiMAC_ReceivedPacket
 14293 ;;		_P2PTasks
 14294 ;;		_IndirectPacket
 14295 ;;		_MiApp_UnicastStar
 14296 ;;		_MiApp_StartConnection
 14297 ;;		_MiApp_EstablishConnection
 14298 ;;		_StartChannelHopping
 14299 ;;		_ButtonPressed
 14300 ;;		_run_star_demo
 14301 ;; This function uses a non-reentrant model
 14302 ;;
 14303                           
 14304                           	psect	text55
 14305  003A3A                     __ptext55:
 14306                           	opt stack 0
 14307  003A3A                     _MiWi_TickGet:
 14308                           	opt stack 20
 14309                           
 14310                           ;symbol.c: 116: MIWI_TICK currentTime;
 14311                           ;symbol.c: 119: uint8_t failureCounter;
 14312                           ;symbol.c: 122: PIE1bits.TMR1IE = 0;
 14313                           
 14314                           ;incstack = 0
 14315  003A3A  909D               	bcf	3997,0,c	;volatile
 14316                           
 14317                           ;symbol.c: 125: currentTime.byte.b2 = 0;
 14318  003A3C  0100               	movlb	0	; () banked
 14319  003A3E  6B7E               	clrf	(MiWi_TickGet@currentTime+2)& (0+255),b
 14320                           
 14321                           ;symbol.c: 126: currentTime.byte.b3 = 0;
 14322  003A40  6B7F               	clrf	(MiWi_TickGet@currentTime+3)& (0+255),b
 14323                           
 14324                           ;symbol.c: 129: failureCounter = 0;
 14325  003A42  6B7B               	clrf	MiWi_TickGet@failureCounter& (0+255),b
 14326  003A44                     l972:
 14327                           
 14328                           ; BSR set to: 0
 14329                           ;symbol.c: 132: {
 14330                           ;symbol.c: 133: currentTime.byte.b0 = TMR1L;
 14331  003A44  CFCE F07C          	movff	4046,MiWi_TickGet@currentTime	;volatile
 14332                           
 14333                           ;symbol.c: 134: currentTime.byte.b1 = TMR1H;
 14334  003A48  CFCF F07D          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 14335                           
 14336                           ; BSR set to: 0
 14337                           ;symbol.c: 135: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 14338  003A4C  297C               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 14339  003A4E  E108               	bnz	l975
 14340  003A50  297D               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 14341  003A52  E106               	bnz	l975
 14342                           
 14343                           ; BSR set to: 0
 14344  003A54  2B7B               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 14345  003A56  057B               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 14346  003A58  6F7A               	movwf	??_MiWi_TickGet& (0+255),b
 14347  003A5A  0E02               	movlw	2
 14348  003A5C  657A               	cpfsgt	??_MiWi_TickGet& (0+255),b
 14349  003A5E  D7F2               	goto	l972
 14350  003A60                     l975:
 14351                           
 14352                           ; BSR set to: 0
 14353                           ;symbol.c: 139: if(PIR1bits.TMR1IF)
 14354  003A60  A09E               	btfss	3998,0,c	;volatile
 14355  003A62  D004               	goto	l8786
 14356                           
 14357                           ; BSR set to: 0
 14358                           ;symbol.c: 140: {
 14359                           ;symbol.c: 143: {
 14360                           ;symbol.c: 145: currentTime.byte.b2++;
 14361  003A64  2B7E               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 14362                           
 14363                           ; BSR set to: 0
 14364                           ;symbol.c: 146: if(timerExtension1 == 0xFF)
 14365  003A66  284B               	incf	_timerExtension1,w,c	;volatile
 14366  003A68  E101               	bnz	l8786
 14367                           
 14368                           ; BSR set to: 0
 14369                           ;symbol.c: 147: {
 14370                           ;symbol.c: 148: currentTime.byte.b3++;
 14371  003A6A  2B7F               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 14372  003A6C                     l8786:
 14373                           
 14374                           ; BSR set to: 0
 14375                           ;symbol.c: 149: }
 14376                           ;symbol.c: 150: }
 14377                           ;symbol.c: 151: }
 14378                           ;symbol.c: 154: currentTime.byte.b2 += timerExtension1;
 14379  003A6C  504B               	movf	_timerExtension1,w,c	;volatile
 14380  003A6E  277E               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;symbol.c: 155: currentTime.byte.b3 += timerExtension2;
 14384  003A70  51E3               	movf	_timerExtension2& (0+255),w,b	;volatile
 14385  003A72  277F               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 14386                           
 14387                           ; BSR set to: 0
 14388                           ;symbol.c: 158: PIE1bits.TMR1IE = 1;
 14389  003A74  809D               	bsf	3997,0,c	;volatile
 14390                           
 14391                           ; BSR set to: 0
 14392                           ;symbol.c: 160: return currentTime;
 14393  003A76  C07C  F076         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 14394  003A7A  C07D  F077         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 14395  003A7E  C07E  F078         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 14396  003A82  C07F  F079         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 14397                           
 14398                           ; BSR set to: 0
 14399  003A86  0012               	return		;funcret
 14400  003A88                     __end_of_MiWi_TickGet:
 14401                           	opt stack 0
 14402                           tblptru	equ	0xFF8
 14403                           tblptrh	equ	0xFF7
 14404                           tblptrl	equ	0xFF6
 14405                           tablat	equ	0xFF5
 14406                           prodh	equ	0xFF4
 14407                           prodl	equ	0xFF3
 14408                           intcon	equ	0xFF2
 14409                           intcon2	equ	0xFF1
 14410                           intcon3	equ	0xFF0
 14411                           postinc0	equ	0xFEE
 14412                           wreg	equ	0xFE8
 14413                           indf1	equ	0xFE7
 14414                           postinc1	equ	0xFE6
 14415                           fsr1h	equ	0xFE2
 14416                           fsr1l	equ	0xFE1
 14417                           indf2	equ	0xFDF
 14418                           postinc2	equ	0xFDE
 14419                           postdec2	equ	0xFDD
 14420                           fsr2h	equ	0xFDA
 14421                           fsr2l	equ	0xFD9
 14422                           status	equ	0xFD8
 14423                           
 14424 ;; *************** function _DELAY_10us *****************
 14425 ;; Defined at:
 14426 ;;		line 47 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 14427 ;; Parameters:    Size  Location     Type
 14428 ;;  tenMicroSeco    4   22[BANK0 ] unsigned long 
 14429 ;; Auto vars:     Size  Location     Type
 14430 ;;  cyclesRequir    4   34[BANK0 ] volatile long 
 14431 ;; Return value:  Size  Location     Type
 14432 ;;		None               void
 14433 ;; Registers used:
 14434 ;;		wreg, status,2, status,0, prodl, prodh
 14435 ;; Tracked objects:
 14436 ;;		On entry : F/0
 14437 ;;		On exit  : F/0
 14438 ;;		Unchanged: 0/0
 14439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14440 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14441 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14442 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14443 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14444 ;;Total ram usage:       16 bytes
 14445 ;; Hardware stack levels used:    1
 14446 ;; Hardware stack levels required when called:    8
 14447 ;; This function calls:
 14448 ;;		Nothing
 14449 ;; This function is called by:
 14450 ;;		_TxPacket
 14451 ;; This function uses a non-reentrant model
 14452 ;;
 14453                           
 14454                           	psect	text56
 14455  002ABC                     __ptext56:
 14456                           	opt stack 0
 14457  002ABC                     _DELAY_10us:
 14458                           	opt stack 13
 14459                           
 14460                           ; BSR set to: 0
 14461                           ;delay.c: 60: else
 14462                           ;delay.c: 61: {
 14463                           ;delay.c: 65: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/100000) * tenMicro
      +                          SecondCounter;
 14464                           
 14465                           ; BSR set to: 0
 14466                           ;delay.c: 49: volatile int32_t cyclesRequiredForEntireDelay;
 14467                           ;delay.c: 52: if (((16000000)/4) <= 2500000)
 14468                           
 14469                           ; BSR set to: 0
 14470                           ;incstack = 0
 14471  002ABC  C076  F07A         	movff	DELAY_10us@tenMicroSecondCounter,??_DELAY_10us
 14472  002AC0  C077  F07B         	movff	DELAY_10us@tenMicroSecondCounter+1,??_DELAY_10us+1
 14473  002AC4  C078  F07C         	movff	DELAY_10us@tenMicroSecondCounter+2,??_DELAY_10us+2
 14474  002AC8  C079  F07D         	movff	DELAY_10us@tenMicroSecondCounter+3,??_DELAY_10us+3
 14475  002ACC  0E28               	movlw	40
 14476  002ACE  037A               	mulwf	??_DELAY_10us& (0+255),b
 14477  002AD0  CFF3 F07E          	movff	prodl,??_DELAY_10us+4
 14478  002AD4  CFF4 F07F          	movff	prodh,??_DELAY_10us+5
 14479  002AD8  6B80               	clrf	(??_DELAY_10us+6)& (0+255),b
 14480  002ADA  6B81               	clrf	(??_DELAY_10us+7)& (0+255),b
 14481  002ADC  037B               	mulwf	(??_DELAY_10us+1)& (0+255),b
 14482  002ADE  50F3               	movf	prodl,w,c
 14483  002AE0  277F               	addwf	(??_DELAY_10us+5)& (0+255),f,b
 14484  002AE2  50F4               	movf	prodh,w,c
 14485  002AE4  2380               	addwfc	(??_DELAY_10us+6)& (0+255),f,b
 14486  002AE6  0E00               	movlw	0
 14487  002AE8  2381               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
 14488  002AEA  037A               	mulwf	??_DELAY_10us& (0+255),b
 14489  002AEC  50F3               	movf	prodl,w,c
 14490  002AEE  277F               	addwf	(??_DELAY_10us+5)& (0+255),f,b
 14491  002AF0  50F4               	movf	prodh,w,c
 14492  002AF2  2380               	addwfc	(??_DELAY_10us+6)& (0+255),f,b
 14493  002AF4  0E00               	movlw	0
 14494  002AF6  2381               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
 14495  002AF8  0E28               	movlw	40
 14496  002AFA  037C               	mulwf	(??_DELAY_10us+2)& (0+255),b
 14497  002AFC  50F3               	movf	prodl,w,c
 14498  002AFE  2780               	addwf	(??_DELAY_10us+6)& (0+255),f,b
 14499  002B00  50F4               	movf	prodh,w,c
 14500  002B02  2381               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
 14501  002B04  0E00               	movlw	0
 14502  002B06  037B               	mulwf	(??_DELAY_10us+1)& (0+255),b
 14503  002B08  50F3               	movf	prodl,w,c
 14504  002B0A  2780               	addwf	(??_DELAY_10us+6)& (0+255),f,b
 14505  002B0C  50F4               	movf	prodh,w,c
 14506  002B0E  2381               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
 14507  002B10  0E00               	movlw	0
 14508  002B12  037A               	mulwf	??_DELAY_10us& (0+255),b
 14509  002B14  50F3               	movf	prodl,w,c
 14510  002B16  2780               	addwf	(??_DELAY_10us+6)& (0+255),f,b
 14511  002B18  50F4               	movf	prodh,w,c
 14512  002B1A  2381               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
 14513  002B1C  0E28               	movlw	40
 14514  002B1E  037D               	mulwf	(??_DELAY_10us+3)& (0+255),b
 14515  002B20  50F3               	movf	prodl,w,c
 14516  002B22  2781               	addwf	(??_DELAY_10us+7)& (0+255),f,b
 14517  002B24  0E00               	movlw	0
 14518  002B26  037C               	mulwf	(??_DELAY_10us+2)& (0+255),b
 14519  002B28  50F3               	movf	prodl,w,c
 14520  002B2A  2781               	addwf	(??_DELAY_10us+7)& (0+255),f,b
 14521  002B2C  0E00               	movlw	0
 14522  002B2E  037B               	mulwf	(??_DELAY_10us+1)& (0+255),b
 14523  002B30  50F3               	movf	prodl,w,c
 14524  002B32  2781               	addwf	(??_DELAY_10us+7)& (0+255),f,b
 14525  002B34  0E00               	movlw	0
 14526  002B36  037A               	mulwf	??_DELAY_10us& (0+255),b
 14527  002B38  50F3               	movf	prodl,w,c
 14528  002B3A  2781               	addwf	(??_DELAY_10us+7)& (0+255),f,b
 14529  002B3C  C07E  F082         	movff	??_DELAY_10us+4,DELAY_10us@cyclesRequiredForEntireDelay	;volatile
 14530  002B40  C07F  F083         	movff	??_DELAY_10us+5,DELAY_10us@cyclesRequiredForEntireDelay+1	;volatile
 14531  002B44  C080  F084         	movff	??_DELAY_10us+6,DELAY_10us@cyclesRequiredForEntireDelay+2	;volatile
 14532  002B48  C081  F085         	movff	??_DELAY_10us+7,DELAY_10us@cyclesRequiredForEntireDelay+3	;volatile
 14533                           
 14534                           ; BSR set to: 0
 14535                           ;delay.c: 69: cyclesRequiredForEntireDelay -= (153 + 22);
 14536  002B4C  0E51               	movlw	81
 14537  002B4E  2782               	addwf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),f,b	;volatile
 14538  002B50  0EFF               	movlw	255
 14539  002B52  2383               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),f,b	;volatile
 14540  002B54  2384               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),f,b	;volatile
 14541  002B56  2385               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),f,b	;volatile
 14542                           
 14543                           ; BSR set to: 0
 14544                           ;delay.c: 71: if (cyclesRequiredForEntireDelay <= 45)
 14545  002B58  BF85               	btfsc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),7,b	;volatile
 14546  002B5A  0CFF               	retlw	255
 14547  002B5C  5185               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),w,b	;volatile
 14548  002B5E  1184               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),w,b	;volatile
 14549  002B60  1183               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),w,b	;volatile
 14550  002B62  E10C               	bnz	l774
 14551  002B64  0E2E               	movlw	46
 14552  002B66  5D82               	subwf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),w,b	;volatile
 14553  002B68  E209               	bc	l774
 14554  002B6A  0012               	return	
 14555  002B6C                     l775:
 14556                           
 14557                           ; BSR set to: 0
 14558                           ;delay.c: 80: {
 14559                           ;delay.c: 81: __nop();
 14560  002B6C  F000               	nop	
 14561                           
 14562                           ;delay.c: 82: cyclesRequiredForEntireDelay -= 42;
 14563  002B6E  0ED6               	movlw	214
 14564  002B70  0100               	movlb	0	; () banked
 14565  002B72  2782               	addwf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),f,b	;volatile
 14566  002B74  0EFF               	movlw	255
 14567  002B76  2383               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),f,b	;volatile
 14568  002B78  2384               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),f,b	;volatile
 14569  002B7A  2385               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),f,b	;volatile
 14570  002B7C                     l774:
 14571                           
 14572                           ; BSR set to: 0
 14573  002B7C  BF85               	btfsc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),7,b	;volatile
 14574  002B7E  0012               	return	
 14575  002B80  5185               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),w,b	;volatile
 14576  002B82  1184               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),w,b	;volatile
 14577  002B84  1183               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),w,b	;volatile
 14578  002B86  E1F2               	bnz	l775
 14579  002B88  0582               	decf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),w,b	;volatile
 14580  002B8A  E2F0               	bc	l775
 14581                           
 14582                           ; BSR set to: 0
 14583  002B8C  0012               	return		;funcret
 14584  002B8E                     __end_of_DELAY_10us:
 14585                           	opt stack 0
 14586                           tblptru	equ	0xFF8
 14587                           tblptrh	equ	0xFF7
 14588                           tblptrl	equ	0xFF6
 14589                           tablat	equ	0xFF5
 14590                           prodh	equ	0xFF4
 14591                           prodl	equ	0xFF3
 14592                           intcon	equ	0xFF2
 14593                           intcon2	equ	0xFF1
 14594                           intcon3	equ	0xFF0
 14595                           postinc0	equ	0xFEE
 14596                           wreg	equ	0xFE8
 14597                           indf1	equ	0xFE7
 14598                           postinc1	equ	0xFE6
 14599                           fsr1h	equ	0xFE2
 14600                           fsr1l	equ	0xFE1
 14601                           indf2	equ	0xFDF
 14602                           postinc2	equ	0xFDE
 14603                           postdec2	equ	0xFDD
 14604                           fsr2h	equ	0xFDA
 14605                           fsr2l	equ	0xFD9
 14606                           status	equ	0xFD8
 14607                           
 14608 ;; *************** function _AddConnection *****************
 14609 ;; Defined at:
 14610 ;;		line 2525 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 14611 ;; Parameters:    Size  Location     Type
 14612 ;;		None
 14613 ;; Auto vars:     Size  Location     Type
 14614 ;;  i               1   36[BANK0 ] unsigned char 
 14615 ;;  connectionSl    1   35[BANK0 ] unsigned char 
 14616 ;;  status          1   34[BANK0 ] unsigned char 
 14617 ;; Return value:  Size  Location     Type
 14618 ;;                  1    wreg      unsigned char 
 14619 ;; Registers used:
 14620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14621 ;; Tracked objects:
 14622 ;;		On entry : C/0
 14623 ;;		On exit  : F/0
 14624 ;;		Unchanged: 0/0
 14625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14627 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14628 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14629 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14630 ;;Total ram usage:        7 bytes
 14631 ;; Hardware stack levels used:    1
 14632 ;; Hardware stack levels required when called:   11
 14633 ;; This function calls:
 14634 ;;		_EEPROM_Write
 14635 ;;		_Total_Connections
 14636 ;;		_isSameAddress
 14637 ;; This function is called by:
 14638 ;;		_P2PTasks
 14639 ;; This function uses a non-reentrant model
 14640 ;;
 14641                           
 14642                           	psect	text57
 14643  0021F0                     __ptext57:
 14644                           	opt stack 0
 14645  0021F0                     _AddConnection:
 14646                           	opt stack 14
 14647                           
 14648                           ;miwi_p2p.c: 2529: uint8_t i;
 14649                           ;miwi_p2p.c: 2530: uint8_t status = 0x00;
 14650                           
 14651                           ; BSR set to: 0
 14652                           ;incstack = 0
 14653  0021F0  0100               	movlb	0	; () banked
 14654  0021F2  6B82               	clrf	AddConnection@status& (0+255),b
 14655                           
 14656                           ;miwi_p2p.c: 2531: uint8_t connectionSlot = 0xFF;
 14657  0021F4  6983               	setf	AddConnection@connectionSlot& (0+255),b
 14658                           
 14659                           ;miwi_p2p.c: 2542: for(i = 0; i < 10; i++)
 14660  0021F6  6B84               	clrf	AddConnection@i& (0+255),b
 14661  0021F8                     l10130:
 14662                           
 14663                           ; BSR set to: 0
 14664                           ;miwi_p2p.c: 2543: {
 14665                           ;miwi_p2p.c: 2545: if( ConnectionTable[i].status.bits.isValid )
 14666  0021F8  5184               	movf	AddConnection@i& (0+255),w,b
 14667  0021FA  0D0E               	mullw	14
 14668  0021FC  0E2A               	movlw	low (_ConnectionTable+12)
 14669  0021FE  24F3               	addwf	prodl,w,c
 14670  002200  6ED9               	movwf	fsr2l,c
 14671  002202  0E02               	movlw	high (_ConnectionTable+12)
 14672  002204  20F4               	addwfc	prodh,w,c
 14673  002206  6EDA               	movwf	fsr2h,c
 14674  002208  AEDF               	btfss	indf2,7,c
 14675  00220A  D016               	goto	l10138
 14676                           
 14677                           ; BSR set to: 2
 14678                           ;miwi_p2p.c: 2546: {
 14679                           ;miwi_p2p.c: 2548: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 14680  00220C  C032  F076         	movff	_rxMessage+3,isSameAddress@Address1
 14681  002210  C033  F077         	movff	_rxMessage+4,isSameAddress@Address1+1
 14682  002214  0100               	movlb	0	; () banked
 14683  002216  5184               	movf	AddConnection@i& (0+255),w,b
 14684  002218  0D0E               	mullw	14
 14685  00221A  0E22               	movlw	low (_ConnectionTable+4)
 14686  00221C  24F3               	addwf	prodl,w,c
 14687  00221E  6F78               	movwf	isSameAddress@Address2& (0+255),b
 14688  002220  0E02               	movlw	high (_ConnectionTable+4)
 14689  002222  20F4               	addwfc	prodh,w,c
 14690  002224  6F79               	movwf	(isSameAddress@Address2+1)& (0+255),b
 14691  002226  ECBC  F01F         	call	_isSameAddress	;wreg free
 14692  00222A  0900               	iorlw	0
 14693  00222C  E00A               	bz	l10142
 14694                           
 14695                           ; BSR set to: 0
 14696                           ;miwi_p2p.c: 2549: {
 14697                           ;miwi_p2p.c: 2550: connectionSlot = i;
 14698  00222E  C084  F083         	movff	AddConnection@i,AddConnection@connectionSlot
 14699                           
 14700                           ; BSR set to: 0
 14701                           ;miwi_p2p.c: 2551: status = 0x01;
 14702  002232  0E01               	movlw	1
 14703  002234  6F82               	movwf	AddConnection@status& (0+255),b
 14704                           
 14705                           ;miwi_p2p.c: 2552: break;
 14706  002236  D009               	goto	l10146
 14707  002238                     l10138:
 14708                           
 14709                           ; BSR set to: 2
 14710                           ;miwi_p2p.c: 2556: else if( connectionSlot == 0xFF )
 14711  002238  0100               	movlb	0	; () banked
 14712  00223A  2983               	incf	AddConnection@connectionSlot& (0+255),w,b
 14713  00223C  E102               	bnz	l10142
 14714                           
 14715                           ; BSR set to: 0
 14716                           ;miwi_p2p.c: 2557: {
 14717                           ;miwi_p2p.c: 2559: connectionSlot = i;
 14718  00223E  C084  F083         	movff	AddConnection@i,AddConnection@connectionSlot
 14719  002242                     l10142:
 14720                           
 14721                           ; BSR set to: 0
 14722  002242  2B84               	incf	AddConnection@i& (0+255),f,b
 14723                           
 14724                           ; BSR set to: 0
 14725  002244  0E09               	movlw	9
 14726  002246  6584               	cpfsgt	AddConnection@i& (0+255),b
 14727  002248  D7D7               	goto	l10130
 14728  00224A                     l10146:
 14729                           
 14730                           ; BSR set to: 0
 14731                           ;miwi_p2p.c: 2561: }
 14732                           ;miwi_p2p.c: 2562: }
 14733                           ;miwi_p2p.c: 2564: if( connectionSlot == 0xFF )
 14734  00224A  2983               	incf	AddConnection@connectionSlot& (0+255),w,b
 14735  00224C  E101               	bnz	l10154
 14736                           
 14737                           ; BSR set to: 0
 14738                           ;miwi_p2p.c: 2565: {
 14739                           ;miwi_p2p.c: 2566: return 0xF1;
 14740  00224E  0CF1               	retlw	241
 14741  002250                     l10154:
 14742                           
 14743                           ; BSR set to: 0
 14744                           ;miwi_p2p.c: 2568: else
 14745                           ;miwi_p2p.c: 2569: {
 14746                           ;miwi_p2p.c: 2570: if( ConnMode >= 0x01 )
 14747  002250  51E9               	movf	_ConnMode& (0+255),w,b
 14748  002252  E003               	bz	l729
 14749  002254                     l10156:
 14750                           
 14751                           ;miwi_p2p.c: 2571: {
 14752                           ;miwi_p2p.c: 2572: return status;
 14753  002254  0100               	movlb	0	; () banked
 14754  002256  5182               	movf	AddConnection@status& (0+255),w,b
 14755  002258  0012               	return	
 14756  00225A                     l729:
 14757                           
 14758                           ; BSR set to: 0
 14759                           ;miwi_p2p.c: 2573: }
 14760                           ;miwi_p2p.c: 2576: MyindexinPC = connectionSlot;
 14761  00225A  C083  F03F         	movff	AddConnection@connectionSlot,_MyindexinPC
 14762                           
 14763                           ;miwi_p2p.c: 2578: for(i = 0; i < 8; i++)
 14764  00225E  6B84               	clrf	AddConnection@i& (0+255),b
 14765  002260                     l10164:
 14766                           
 14767                           ; BSR set to: 0
 14768                           ;miwi_p2p.c: 2579: {
 14769                           ;miwi_p2p.c: 2580: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 14770  002260  5184               	movf	AddConnection@i& (0+255),w,b
 14771  002262  2432               	addwf	_rxMessage+3,w,c
 14772  002264  6ED9               	movwf	fsr2l,c
 14773  002266  0E00               	movlw	0
 14774  002268  2033               	addwfc	_rxMessage+4,w,c
 14775  00226A  6EDA               	movwf	fsr2h,c
 14776  00226C  5183               	movf	AddConnection@connectionSlot& (0+255),w,b
 14777  00226E  0D0E               	mullw	14
 14778  002270  0E1E               	movlw	low _ConnectionTable
 14779  002272  6F7E               	movwf	??_AddConnection& (0+255),b
 14780  002274  0E02               	movlw	high _ConnectionTable
 14781  002276  6F7F               	movwf	(??_AddConnection+1)& (0+255),b
 14782  002278  0E04               	movlw	4
 14783  00227A  277E               	addwf	??_AddConnection& (0+255),f,b
 14784  00227C  0E00               	movlw	0
 14785  00227E  237F               	addwfc	(??_AddConnection+1)& (0+255),f,b
 14786  002280  50F3               	movf	prodl,w,c
 14787  002282  277E               	addwf	??_AddConnection& (0+255),f,b
 14788  002284  50F4               	movf	prodh,w,c
 14789  002286  237F               	addwfc	(??_AddConnection+1)& (0+255),f,b
 14790  002288  5184               	movf	AddConnection@i& (0+255),w,b
 14791  00228A  257E               	addwf	??_AddConnection& (0+255),w,b
 14792  00228C  6EE1               	movwf	fsr1l,c
 14793  00228E  0E00               	movlw	0
 14794  002290  217F               	addwfc	(??_AddConnection+1)& (0+255),w,b
 14795  002292  6EE2               	movwf	fsr1h,c
 14796  002294  CFDF FFE7          	movff	indf2,indf1
 14797                           
 14798                           ; BSR set to: 0
 14799  002298  2B84               	incf	AddConnection@i& (0+255),f,b
 14800                           
 14801                           ; BSR set to: 0
 14802  00229A  0E07               	movlw	7
 14803  00229C  6584               	cpfsgt	AddConnection@i& (0+255),b
 14804  00229E  D7E0               	goto	l10164
 14805                           
 14806                           ; BSR set to: 0
 14807                           ;miwi_p2p.c: 2583: }
 14808                           ;miwi_p2p.c: 2588: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 14809  0022A0  5183               	movf	AddConnection@connectionSlot& (0+255),w,b
 14810  0022A2  0D0E               	mullw	14
 14811  0022A4  0E2A               	movlw	low (_ConnectionTable+12)
 14812  0022A6  24F3               	addwf	prodl,w,c
 14813  0022A8  6ED9               	movwf	fsr2l,c
 14814  0022AA  0E02               	movlw	high (_ConnectionTable+12)
 14815  0022AC  20F4               	addwfc	prodh,w,c
 14816  0022AE  6EDA               	movwf	fsr2h,c
 14817  0022B0  8EDF               	bsf	indf2,7,c
 14818                           
 14819                           ;miwi_p2p.c: 2589: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 14820  0022B2  EE20 F002          	lfsr	2,2
 14821  0022B6  5034               	movf	_rxMessage+5,w,c
 14822  0022B8  26D9               	addwf	fsr2l,f,c
 14823  0022BA  5035               	movf	_rxMessage+6,w,c
 14824  0022BC  22DA               	addwfc	fsr2h,f,c
 14825  0022BE  50DF               	movf	indf2,w,c
 14826  0022C0  0100               	movlb	0	; () banked
 14827  0022C2  6F7E               	movwf	??_AddConnection& (0+255),b
 14828  0022C4  0E01               	movlw	1
 14829  0022C6  177E               	andwf	??_AddConnection& (0+255),f,b
 14830  0022C8  5183               	movf	AddConnection@connectionSlot& (0+255),w,b
 14831  0022CA  0D0E               	mullw	14
 14832  0022CC  0E2A               	movlw	low (_ConnectionTable+12)
 14833  0022CE  24F3               	addwf	prodl,w,c
 14834  0022D0  6ED9               	movwf	fsr2l,c
 14835  0022D2  0E02               	movlw	high (_ConnectionTable+12)
 14836  0022D4  20F4               	addwfc	prodh,w,c
 14837  0022D6  6EDA               	movwf	fsr2h,c
 14838  0022D8  50DF               	movf	223,w,c
 14839  0022DA  197E               	xorwf	??_AddConnection& (0+255),w,b
 14840  0022DC  0BFE               	andlw	-2
 14841  0022DE  197E               	xorwf	??_AddConnection& (0+255),w,b
 14842  0022E0  6EDF               	movwf	223,c
 14843                           
 14844                           ; BSR set to: 2
 14845                           ;miwi_p2p.c: 2593: for(i = 0; i < 1; i++)
 14846  0022E2  6B84               	clrf	AddConnection@i& (0+255),b
 14847  0022E4                     l10178:
 14848                           
 14849                           ; BSR set to: 0
 14850                           ;miwi_p2p.c: 2594: {
 14851                           ;miwi_p2p.c: 2595: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 14852  0022E4  5184               	movf	AddConnection@i& (0+255),w,b
 14853  0022E6  2434               	addwf	_rxMessage+5,w,c
 14854  0022E8  6F7E               	movwf	??_AddConnection& (0+255),b
 14855  0022EA  0E00               	movlw	0
 14856  0022EC  2035               	addwfc	_rxMessage+6,w,c
 14857  0022EE  6F7F               	movwf	(??_AddConnection+1)& (0+255),b
 14858  0022F0  0E03               	movlw	3
 14859  0022F2  257E               	addwf	??_AddConnection& (0+255),w,b
 14860  0022F4  6ED9               	movwf	fsr2l,c
 14861  0022F6  0E00               	movlw	0
 14862  0022F8  217F               	addwfc	(??_AddConnection+1)& (0+255),w,b
 14863  0022FA  6EDA               	movwf	fsr2h,c
 14864  0022FC  5183               	movf	AddConnection@connectionSlot& (0+255),w,b
 14865  0022FE  0D0E               	mullw	14
 14866  002300  0E1E               	movlw	low _ConnectionTable
 14867  002302  6F80               	movwf	(??_AddConnection+2)& (0+255),b
 14868  002304  0E02               	movlw	high _ConnectionTable
 14869  002306  6F81               	movwf	(??_AddConnection+3)& (0+255),b
 14870  002308  0E0D               	movlw	13
 14871  00230A  2780               	addwf	(??_AddConnection+2)& (0+255),f,b
 14872  00230C  0E00               	movlw	0
 14873  00230E  2381               	addwfc	(??_AddConnection+3)& (0+255),f,b
 14874  002310  50F3               	movf	prodl,w,c
 14875  002312  2780               	addwf	(??_AddConnection+2)& (0+255),f,b
 14876  002314  50F4               	movf	prodh,w,c
 14877  002316  2381               	addwfc	(??_AddConnection+3)& (0+255),f,b
 14878  002318  5184               	movf	AddConnection@i& (0+255),w,b
 14879  00231A  2580               	addwf	(??_AddConnection+2)& (0+255),w,b
 14880  00231C  6EE1               	movwf	fsr1l,c
 14881  00231E  0E00               	movlw	0
 14882  002320  2181               	addwfc	(??_AddConnection+3)& (0+255),w,b
 14883  002322  6EE2               	movwf	fsr1h,c
 14884  002324  CFDF FFE7          	movff	indf2,indf1
 14885                           
 14886                           ; BSR set to: 0
 14887  002328  2B84               	incf	AddConnection@i& (0+255),f,b
 14888                           
 14889                           ; BSR set to: 0
 14890  00232A  5184               	movf	AddConnection@i& (0+255),w,b
 14891  00232C  E0DB               	bz	l10178
 14892                           
 14893                           ; BSR set to: 0
 14894                           ;miwi_p2p.c: 2596: }
 14895                           ;miwi_p2p.c: 2603: LatestConnection = connectionSlot;
 14896  00232E  C083  F0DA         	movff	AddConnection@connectionSlot,_LatestConnection
 14897                           
 14898                           ;miwi_p2p.c: 2605: P2PStatus.bits.SearchConnection = 0;
 14899  002332  99DC               	bcf	_P2PStatus& (0+255),4,b	;volatile
 14900                           
 14901                           ; BSR set to: 0
 14902                           ;miwi_p2p.c: 2606: }
 14903                           ;miwi_p2p.c: 2607: conn_size = Total_Connections();
 14904  002334  EC44  F01D         	call	_Total_Connections	;wreg free
 14905  002338  6FE4               	movwf	_conn_size& (0+255),b
 14906                           
 14907                           ; BSR set to: 0
 14908                           ;miwi_p2p.c: 2608: EEPROM_Write((uint8_t *)&conn_size, 0xBA, 1);
 14909  00233A  0EE4               	movlw	low _conn_size
 14910  00233C  6F77               	movwf	EEPROM_Write@dest& (0+255),b
 14911  00233E  6B78               	clrf	(EEPROM_Write@dest+1)& (0+255),b
 14912  002340  0EBA               	movlw	186
 14913  002342  6F79               	movwf	EEPROM_Write@addr& (0+255),b
 14914  002344  0E01               	movlw	1
 14915  002346  6F7A               	movwf	EEPROM_Write@count& (0+255),b
 14916  002348  EC37  F01A         	call	_EEPROM_Write	;wreg free
 14917  00234C  D783               	goto	l10156
 14918  00234E                     __end_of_AddConnection:
 14919                           	opt stack 0
 14920                           tblptru	equ	0xFF8
 14921                           tblptrh	equ	0xFF7
 14922                           tblptrl	equ	0xFF6
 14923                           tablat	equ	0xFF5
 14924                           prodh	equ	0xFF4
 14925                           prodl	equ	0xFF3
 14926                           intcon	equ	0xFF2
 14927                           intcon2	equ	0xFF1
 14928                           intcon3	equ	0xFF0
 14929                           postinc0	equ	0xFEE
 14930                           wreg	equ	0xFE8
 14931                           indf1	equ	0xFE7
 14932                           postinc1	equ	0xFE6
 14933                           fsr1h	equ	0xFE2
 14934                           fsr1l	equ	0xFE1
 14935                           indf2	equ	0xFDF
 14936                           postinc2	equ	0xFDE
 14937                           postdec2	equ	0xFDD
 14938                           fsr2h	equ	0xFDA
 14939                           fsr2l	equ	0xFD9
 14940                           status	equ	0xFD8
 14941                           
 14942 ;; *************** function _isSameAddress *****************
 14943 ;; Defined at:
 14944 ;;		line 2126 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 14945 ;; Parameters:    Size  Location     Type
 14946 ;;  Address1        2   22[BANK0 ] PTR unsigned char 
 14947 ;;		 -> indirectMessages.DestAddress(10), indirectMessages(102), ConnectionTable(140), NULL(0), 
 14948 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
 14949 ;;  Address2        2   24[BANK0 ] PTR unsigned char 
 14950 ;;		 -> ConnectionTable(140), NULL(0), RxPacket.Payload(55), RxPacket(114), 
 14951 ;; Auto vars:     Size  Location     Type
 14952 ;;  i               1   28[BANK0 ] unsigned char 
 14953 ;; Return value:  Size  Location     Type
 14954 ;;                  1    wreg      unsigned char 
 14955 ;; Registers used:
 14956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14957 ;; Tracked objects:
 14958 ;;		On entry : F/0
 14959 ;;		On exit  : F/0
 14960 ;;		Unchanged: 0/0
 14961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14962 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14964 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14965 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14966 ;;Total ram usage:        7 bytes
 14967 ;; Hardware stack levels used:    1
 14968 ;; Hardware stack levels required when called:    8
 14969 ;; This function calls:
 14970 ;;		Nothing
 14971 ;; This function is called by:
 14972 ;;		_P2PTasks
 14973 ;;		_MiApp_UnicastAddress
 14974 ;;		_AddConnection
 14975 ;; This function uses a non-reentrant model
 14976 ;;
 14977                           
 14978                           	psect	text58
 14979  003F78                     __ptext58:
 14980                           	opt stack 0
 14981  003F78                     _isSameAddress:
 14982                           	opt stack 17
 14983                           
 14984                           ; BSR set to: 0
 14985                           ;miwi_p2p.c: 2128: uint8_t i;
 14986                           ;miwi_p2p.c: 2130: for(i = 0; i < 8; i++)
 14987                           
 14988                           ; BSR set to: 0
 14989                           ;incstack = 0
 14990  003F78  6B7C               	clrf	isSameAddress@i& (0+255),b
 14991  003F7A                     l9028:
 14992                           
 14993                           ; BSR set to: 0
 14994                           ;miwi_p2p.c: 2131: {
 14995                           ;miwi_p2p.c: 2132: if( Address1[i] != Address2[i] )
 14996  003F7A  517C               	movf	isSameAddress@i& (0+255),w,b
 14997  003F7C  2578               	addwf	isSameAddress@Address2& (0+255),w,b
 14998  003F7E  6ED9               	movwf	fsr2l,c
 14999  003F80  0E00               	movlw	0
 15000  003F82  2179               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 15001  003F84  6EDA               	movwf	fsr2h,c
 15002  003F86  517C               	movf	isSameAddress@i& (0+255),w,b
 15003  003F88  2576               	addwf	isSameAddress@Address1& (0+255),w,b
 15004  003F8A  6EE1               	movwf	fsr1l,c
 15005  003F8C  0E00               	movlw	0
 15006  003F8E  2177               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 15007  003F90  6EE2               	movwf	fsr1h,c
 15008  003F92  50DE               	movf	postinc2,w,c
 15009  003F94  18E6               	xorwf	postinc1,w,c
 15010  003F96  E001               	bz	l9034
 15011                           
 15012                           ; BSR set to: 0
 15013                           ;miwi_p2p.c: 2133: {
 15014                           ;miwi_p2p.c: 2134: return 0;
 15015  003F98  0C00               	retlw	0
 15016  003F9A                     l9034:
 15017                           
 15018                           ; BSR set to: 0
 15019  003F9A  2B7C               	incf	isSameAddress@i& (0+255),f,b
 15020                           
 15021                           ; BSR set to: 0
 15022  003F9C  0E07               	movlw	7
 15023  003F9E  657C               	cpfsgt	isSameAddress@i& (0+255),b
 15024  003FA0  D7EC               	goto	l9028
 15025  003FA2  0C01               	retlw	1
 15026  003FA4                     __end_of_isSameAddress:
 15027                           	opt stack 0
 15028                           tblptru	equ	0xFF8
 15029                           tblptrh	equ	0xFF7
 15030                           tblptrl	equ	0xFF6
 15031                           tablat	equ	0xFF5
 15032                           prodh	equ	0xFF4
 15033                           prodl	equ	0xFF3
 15034                           intcon	equ	0xFF2
 15035                           intcon2	equ	0xFF1
 15036                           intcon3	equ	0xFF0
 15037                           postinc0	equ	0xFEE
 15038                           wreg	equ	0xFE8
 15039                           indf1	equ	0xFE7
 15040                           postinc1	equ	0xFE6
 15041                           fsr1h	equ	0xFE2
 15042                           fsr1l	equ	0xFE1
 15043                           indf2	equ	0xFDF
 15044                           postinc2	equ	0xFDE
 15045                           postdec2	equ	0xFDD
 15046                           fsr2h	equ	0xFDA
 15047                           fsr2l	equ	0xFD9
 15048                           status	equ	0xFD8
 15049                           
 15050 ;; *************** function _Total_Connections *****************
 15051 ;; Defined at:
 15052 ;;		line 62 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 15053 ;; Parameters:    Size  Location     Type
 15054 ;;		None
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;  i               1   23[BANK0 ] unsigned char 
 15057 ;;  count           1   22[BANK0 ] unsigned char 
 15058 ;; Return value:  Size  Location     Type
 15059 ;;                  1    wreg      unsigned char 
 15060 ;; Registers used:
 15061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15062 ;; Tracked objects:
 15063 ;;		On entry : F/0
 15064 ;;		On exit  : F/0
 15065 ;;		Unchanged: 0/0
 15066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15068 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15070 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15071 ;;Total ram usage:        2 bytes
 15072 ;; Hardware stack levels used:    1
 15073 ;; Hardware stack levels required when called:    8
 15074 ;; This function calls:
 15075 ;;		Nothing
 15076 ;; This function is called by:
 15077 ;;		_AddConnection
 15078 ;; This function uses a non-reentrant model
 15079 ;;
 15080                           
 15081                           	psect	text59
 15082  003A88                     __ptext59:
 15083                           	opt stack 0
 15084  003A88                     _Total_Connections:
 15085                           	opt stack 16
 15086                           
 15087                           ; BSR set to: 0
 15088                           ;miwi_p2p.c: 64: uint8_t count=0 , i;
 15089                           
 15090                           ; BSR set to: 0
 15091                           ;incstack = 0
 15092  003A88  6B76               	clrf	Total_Connections@count& (0+255),b
 15093                           
 15094                           ;miwi_p2p.c: 65: for (i=0;i<10;i++)
 15095  003A8A  6B77               	clrf	Total_Connections@i& (0+255),b
 15096  003A8C                     l9630:
 15097                           
 15098                           ; BSR set to: 0
 15099                           ;miwi_p2p.c: 66: {
 15100                           ;miwi_p2p.c: 68: if (ConnectionTable[i].Address[0] != 0x00 || ConnectionTable[i].Address
      +                          [1] != 0x00 || ConnectionTable[i].Address[2] != 0x00)
 15101  003A8C  5177               	movf	Total_Connections@i& (0+255),w,b
 15102  003A8E  0D0E               	mullw	14
 15103  003A90  0E22               	movlw	low (_ConnectionTable+4)
 15104  003A92  24F3               	addwf	prodl,w,c
 15105  003A94  6ED9               	movwf	fsr2l,c
 15106  003A96  0E02               	movlw	high (_ConnectionTable+4)
 15107  003A98  20F4               	addwfc	prodh,w,c
 15108  003A9A  6EDA               	movwf	fsr2h,c
 15109  003A9C  50DF               	movf	indf2,w,c
 15110  003A9E  E114               	bnz	l9636
 15111                           
 15112                           ; BSR set to: 0
 15113  003AA0  5177               	movf	Total_Connections@i& (0+255),w,b
 15114  003AA2  0D0E               	mullw	14
 15115  003AA4  0E23               	movlw	low (_ConnectionTable+5)
 15116  003AA6  24F3               	addwf	prodl,w,c
 15117  003AA8  6ED9               	movwf	fsr2l,c
 15118  003AAA  0E02               	movlw	high (_ConnectionTable+5)
 15119  003AAC  20F4               	addwfc	prodh,w,c
 15120  003AAE  6EDA               	movwf	fsr2h,c
 15121  003AB0  50DF               	movf	indf2,w,c
 15122  003AB2  E10A               	bnz	l9636
 15123                           
 15124                           ; BSR set to: 0
 15125  003AB4  5177               	movf	Total_Connections@i& (0+255),w,b
 15126  003AB6  0D0E               	mullw	14
 15127  003AB8  0E24               	movlw	low (_ConnectionTable+6)
 15128  003ABA  24F3               	addwf	prodl,w,c
 15129  003ABC  6ED9               	movwf	fsr2l,c
 15130  003ABE  0E02               	movlw	high (_ConnectionTable+6)
 15131  003AC0  20F4               	addwfc	prodh,w,c
 15132  003AC2  6EDA               	movwf	fsr2h,c
 15133  003AC4  50DF               	movf	indf2,w,c
 15134  003AC6  E001               	bz	l377
 15135  003AC8                     l9636:
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;miwi_p2p.c: 69: {
 15139                           ;miwi_p2p.c: 70: count++;
 15140  003AC8  2B76               	incf	Total_Connections@count& (0+255),f,b
 15141  003ACA                     l377:
 15142                           
 15143                           ; BSR set to: 0
 15144  003ACA  2B77               	incf	Total_Connections@i& (0+255),f,b
 15145                           
 15146                           ; BSR set to: 0
 15147  003ACC  0E09               	movlw	9
 15148  003ACE  6577               	cpfsgt	Total_Connections@i& (0+255),b
 15149  003AD0  D7DD               	goto	l9630
 15150                           
 15151                           ; BSR set to: 0
 15152                           ;miwi_p2p.c: 71: }
 15153                           ;miwi_p2p.c: 78: }
 15154                           ;miwi_p2p.c: 79: return count;
 15155  003AD2  5176               	movf	Total_Connections@count& (0+255),w,b
 15156                           
 15157                           ; BSR set to: 0
 15158  003AD4  0012               	return		;funcret
 15159  003AD6                     __end_of_Total_Connections:
 15160                           	opt stack 0
 15161                           tblptru	equ	0xFF8
 15162                           tblptrh	equ	0xFF7
 15163                           tblptrl	equ	0xFF6
 15164                           tablat	equ	0xFF5
 15165                           prodh	equ	0xFF4
 15166                           prodl	equ	0xFF3
 15167                           intcon	equ	0xFF2
 15168                           intcon2	equ	0xFF1
 15169                           intcon3	equ	0xFF0
 15170                           postinc0	equ	0xFEE
 15171                           wreg	equ	0xFE8
 15172                           indf1	equ	0xFE7
 15173                           postinc1	equ	0xFE6
 15174                           fsr1h	equ	0xFE2
 15175                           fsr1l	equ	0xFE1
 15176                           indf2	equ	0xFDF
 15177                           postinc2	equ	0xFDE
 15178                           postdec2	equ	0xFDD
 15179                           fsr2h	equ	0xFDA
 15180                           fsr2l	equ	0xFD9
 15181                           status	equ	0xFD8
 15182                           
 15183 ;; *************** function _MiApp_DiscardMessage *****************
 15184 ;; Defined at:
 15185 ;;		line 2370 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 15186 ;; Parameters:    Size  Location     Type
 15187 ;;		None
 15188 ;; Auto vars:     Size  Location     Type
 15189 ;;		None
 15190 ;; Return value:  Size  Location     Type
 15191 ;;		None               void
 15192 ;; Registers used:
 15193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15194 ;; Tracked objects:
 15195 ;;		On entry : F/0
 15196 ;;		On exit  : F/0
 15197 ;;		Unchanged: 0/0
 15198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15203 ;;Total ram usage:        0 bytes
 15204 ;; Hardware stack levels used:    1
 15205 ;; Hardware stack levels required when called:    9
 15206 ;; This function calls:
 15207 ;;		_MiMAC_DiscardPacket
 15208 ;; This function is called by:
 15209 ;;		_MiApp_EstablishConnection
 15210 ;;		_Process_RxMessage
 15211 ;; This function uses a non-reentrant model
 15212 ;;
 15213                           
 15214                           	psect	text60
 15215  004218                     __ptext60:
 15216                           	opt stack 0
 15217  004218                     _MiApp_DiscardMessage:
 15218                           	opt stack 18
 15219                           
 15220                           ; BSR set to: 0
 15221                           ;miwi_p2p.c: 2372: P2PStatus.bits.RxHasUserData = 0;
 15222                           
 15223                           ; BSR set to: 0
 15224                           ;incstack = 0
 15225  004218  97DC               	bcf	_P2PStatus& (0+255),3,b	;volatile
 15226                           
 15227                           ; BSR set to: 0
 15228                           ;miwi_p2p.c: 2373: MiMAC_DiscardPacket();
 15229  00421A  EF6F  F020         	goto	_MiMAC_DiscardPacket	;wreg free
 15230  00421E                     __end_of_MiApp_DiscardMessage:
 15231                           	opt stack 0
 15232                           tblptru	equ	0xFF8
 15233                           tblptrh	equ	0xFF7
 15234                           tblptrl	equ	0xFF6
 15235                           tablat	equ	0xFF5
 15236                           prodh	equ	0xFF4
 15237                           prodl	equ	0xFF3
 15238                           intcon	equ	0xFF2
 15239                           intcon2	equ	0xFF1
 15240                           intcon3	equ	0xFF0
 15241                           postinc0	equ	0xFEE
 15242                           wreg	equ	0xFE8
 15243                           indf1	equ	0xFE7
 15244                           postinc1	equ	0xFE6
 15245                           fsr1h	equ	0xFE2
 15246                           fsr1l	equ	0xFE1
 15247                           indf2	equ	0xFDF
 15248                           postinc2	equ	0xFDE
 15249                           postdec2	equ	0xFDD
 15250                           fsr2h	equ	0xFDA
 15251                           fsr2l	equ	0xFD9
 15252                           status	equ	0xFD8
 15253                           
 15254 ;; *************** function _MiMAC_DiscardPacket *****************
 15255 ;; Defined at:
 15256 ;;		line 1050 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 15257 ;; Parameters:    Size  Location     Type
 15258 ;;		None
 15259 ;; Auto vars:     Size  Location     Type
 15260 ;;		None
 15261 ;; Return value:  Size  Location     Type
 15262 ;;		None               void
 15263 ;; Registers used:
 15264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15265 ;; Tracked objects:
 15266 ;;		On entry : 0/0
 15267 ;;		On exit  : F/0
 15268 ;;		Unchanged: 0/0
 15269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15274 ;;Total ram usage:        0 bytes
 15275 ;; Hardware stack levels used:    1
 15276 ;; Hardware stack levels required when called:    8
 15277 ;; This function calls:
 15278 ;;		Nothing
 15279 ;; This function is called by:
 15280 ;;		_P2PTasks
 15281 ;;		_MiApp_DiscardMessage
 15282 ;; This function uses a non-reentrant model
 15283 ;;
 15284                           
 15285                           	psect	text61
 15286  0040DE                     __ptext61:
 15287                           	opt stack 0
 15288  0040DE                     _MiMAC_DiscardPacket:
 15289                           	opt stack 17
 15290                           
 15291                           ;drv_mrf_miwi_89xa.c: 1052: if( ReceivedBankIndex < 2 )
 15292                           
 15293                           ; BSR set to: 0
 15294                           ;incstack = 0
 15295  0040DE  0E02               	movlw	2
 15296  0040E0  0100               	movlb	0	; () banked
 15297  0040E2  61DE               	cpfslt	_ReceivedBankIndex& (0+255),b
 15298  0040E4  0C02               	retlw	2
 15299                           
 15300                           ; BSR set to: 0
 15301                           ;drv_mrf_miwi_89xa.c: 1053: {
 15302                           ;drv_mrf_miwi_89xa.c: 1054: RxPacket[ReceivedBankIndex].flags.Val = 0;
 15303  0040E6  51DE               	movf	_ReceivedBankIndex& (0+255),w,b
 15304  0040E8  0D39               	mullw	57
 15305  0040EA  0E00               	movlw	low _RxPacket
 15306  0040EC  24F3               	addwf	prodl,w,c
 15307  0040EE  6ED9               	movwf	fsr2l,c
 15308  0040F0  0E03               	movlw	high _RxPacket
 15309  0040F2  20F4               	addwfc	prodh,w,c
 15310  0040F4  6EDA               	movwf	fsr2h,c
 15311  0040F6  0E00               	movlw	0
 15312  0040F8  6ADF               	clrf	indf2,c
 15313                           
 15314                           ; BSR set to: 0
 15315                           ;drv_mrf_miwi_89xa.c: 1055: ReceivedBankIndex = 0xFF;
 15316  0040FA  69DE               	setf	_ReceivedBankIndex& (0+255),b
 15317                           
 15318                           ; BSR set to: 0
 15319  0040FC  0012               	return		;funcret
 15320  0040FE                     __end_of_MiMAC_DiscardPacket:
 15321                           	opt stack 0
 15322                           tblptru	equ	0xFF8
 15323                           tblptrh	equ	0xFF7
 15324                           tblptrl	equ	0xFF6
 15325                           tablat	equ	0xFF5
 15326                           prodh	equ	0xFF4
 15327                           prodl	equ	0xFF3
 15328                           intcon	equ	0xFF2
 15329                           intcon2	equ	0xFF1
 15330                           intcon3	equ	0xFF0
 15331                           postinc0	equ	0xFEE
 15332                           wreg	equ	0xFE8
 15333                           indf1	equ	0xFE7
 15334                           postinc1	equ	0xFE6
 15335                           fsr1h	equ	0xFE2
 15336                           fsr1l	equ	0xFE1
 15337                           indf2	equ	0xFDF
 15338                           postinc2	equ	0xFDE
 15339                           postdec2	equ	0xFDD
 15340                           fsr2h	equ	0xFDA
 15341                           fsr2l	equ	0xFD9
 15342                           status	equ	0xFD8
 15343                           
 15344 ;; *************** function _MiApp_ConnectionMode *****************
 15345 ;; Defined at:
 15346 ;;		line 2962 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 15347 ;; Parameters:    Size  Location     Type
 15348 ;;  Mode            1    wreg     unsigned char 
 15349 ;; Auto vars:     Size  Location     Type
 15350 ;;  Mode            1   31[BANK0 ] unsigned char 
 15351 ;; Return value:  Size  Location     Type
 15352 ;;		None               void
 15353 ;; Registers used:
 15354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15355 ;; Tracked objects:
 15356 ;;		On entry : 0/0
 15357 ;;		On exit  : 0/0
 15358 ;;		Unchanged: 0/0
 15359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15362 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15363 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15364 ;;Total ram usage:        2 bytes
 15365 ;; Hardware stack levels used:    1
 15366 ;; Hardware stack levels required when called:   11
 15367 ;; This function calls:
 15368 ;;		_EEPROM_Write
 15369 ;; This function is called by:
 15370 ;;		_Initialize_Demo
 15371 ;; This function uses a non-reentrant model
 15372 ;;
 15373                           
 15374                           	psect	text62
 15375  003EE2                     __ptext62:
 15376                           	opt stack 0
 15377  003EE2                     _MiApp_ConnectionMode:
 15378                           	opt stack 18
 15379                           
 15380                           ; BSR set to: 0
 15381                           ;incstack = 0
 15382                           ;MiApp_ConnectionMode@Mode stored from wreg
 15383  003EE2  0100               	movlb	0	; () banked
 15384  003EE4  6F7F               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 15385                           
 15386                           ;miwi_p2p.c: 2964: if( Mode > 3 )
 15387  003EE6  0E03               	movlw	3
 15388  003EE8  657F               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 15389  003EEA  D001               	goto	l758
 15390  003EEC  0C03               	retlw	3
 15391  003EEE                     l758:
 15392                           
 15393                           ; BSR set to: 0
 15394                           ;miwi_p2p.c: 2967: }
 15395                           ;miwi_p2p.c: 2968: ConnMode = Mode;
 15396  003EEE  C07F  F0E9         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 15397                           
 15398                           ; BSR set to: 0
 15399                           ;miwi_p2p.c: 2969: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 15400  003EF2  C0E9  F07E         	movff	_ConnMode,??_MiApp_ConnectionMode
 15401  003EF6  3B7E               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 15402  003EF8  0EF0               	movlw	240
 15403  003EFA  177E               	andwf	??_MiApp_ConnectionMode& (0+255),f,b
 15404  003EFC  51DB               	movf	_P2PCapacityInfo& (0+255),w,b
 15405  003EFE  0B0F               	andlw	15
 15406  003F00  117E               	iorwf	??_MiApp_ConnectionMode& (0+255),w,b
 15407  003F02  6FDB               	movwf	_P2PCapacityInfo& (0+255),b
 15408                           
 15409                           ; BSR set to: 0
 15410                           ;miwi_p2p.c: 2972: EEPROM_Write((uint8_t *)&ConnMode, 0x03, 1);
 15411  003F04  0EE9               	movlw	low _ConnMode
 15412  003F06  6F77               	movwf	EEPROM_Write@dest& (0+255),b
 15413  003F08  6B78               	clrf	(EEPROM_Write@dest+1)& (0+255),b
 15414  003F0A  0E03               	movlw	3
 15415  003F0C  6F79               	movwf	EEPROM_Write@addr& (0+255),b
 15416  003F0E  0E01               	movlw	1
 15417  003F10  6F7A               	movwf	EEPROM_Write@count& (0+255),b
 15418  003F12  EF37  F01A         	goto	_EEPROM_Write	;wreg free
 15419  003F16                     __end_of_MiApp_ConnectionMode:
 15420                           	opt stack 0
 15421                           tblptru	equ	0xFF8
 15422                           tblptrh	equ	0xFF7
 15423                           tblptrl	equ	0xFF6
 15424                           tablat	equ	0xFF5
 15425                           prodh	equ	0xFF4
 15426                           prodl	equ	0xFF3
 15427                           intcon	equ	0xFF2
 15428                           intcon2	equ	0xFF1
 15429                           intcon3	equ	0xFF0
 15430                           postinc0	equ	0xFEE
 15431                           wreg	equ	0xFE8
 15432                           indf1	equ	0xFE7
 15433                           postinc1	equ	0xFE6
 15434                           fsr1h	equ	0xFE2
 15435                           fsr1l	equ	0xFE1
 15436                           indf2	equ	0xFDF
 15437                           postinc2	equ	0xFDE
 15438                           postdec2	equ	0xFDD
 15439                           fsr2h	equ	0xFDA
 15440                           fsr2l	equ	0xFD9
 15441                           status	equ	0xFD8
 15442                           
 15443 ;; *************** function _EEPROM_Write *****************
 15444 ;; Defined at:
 15445 ;;		line 118 in file "../src/system_config/miwikit_pic18f46j50_89xa/eeprom.c"
 15446 ;; Parameters:    Size  Location     Type
 15447 ;;  dest            2   23[BANK0 ] PTR unsigned char 
 15448 ;;		 -> myConnectionIndex_in_PanCo(1), ConnMode(1), currentChannel(1), role(1), 
 15449 ;;		 -> conn_size(1), ConnectionTable(140), 
 15450 ;;  addr            1   25[BANK0 ] unsigned char 
 15451 ;;  count           1   26[BANK0 ] unsigned char 
 15452 ;; Auto vars:     Size  Location     Type
 15453 ;;  PageCounter     1   29[BANK0 ] unsigned char 
 15454 ;;  oldRFIE         1   28[BANK0 ] unsigned char 
 15455 ;; Return value:  Size  Location     Type
 15456 ;;		None               void
 15457 ;; Registers used:
 15458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15459 ;; Tracked objects:
 15460 ;;		On entry : F/0
 15461 ;;		On exit  : 0/0
 15462 ;;		Unchanged: 0/0
 15463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15464 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15465 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15466 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15467 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15468 ;;Total ram usage:        7 bytes
 15469 ;; Hardware stack levels used:    1
 15470 ;; Hardware stack levels required when called:   10
 15471 ;; This function calls:
 15472 ;;		_MacroNop
 15473 ;;		_SPIGet2
 15474 ;;		_SPIPut2
 15475 ;; This function is called by:
 15476 ;;		_P2PTasks
 15477 ;;		_MiApp_ProtocolInit
 15478 ;;		_MiApp_SetChannel
 15479 ;;		_AddConnection
 15480 ;;		_MiApp_RemoveConnection
 15481 ;;		_MiApp_ConnectionMode
 15482 ;;		_Initialize_Demo
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486                           	psect	text63
 15487  00346E                     __ptext63:
 15488                           	opt stack 0
 15489  00346E                     _EEPROM_Write:
 15490                           	opt stack 13
 15491                           
 15492                           ; BSR set to: 0
 15493                           ;eeprom.c: 126: uint8_t oldRFIE = INTCON3bits.INT1IE;
 15494                           
 15495                           ; BSR set to: 0
 15496                           
 15497                           ;incstack = 0
 15498  00346E  0E00               	movlw	0
 15499  003470  B6F0               	btfsc	intcon3,3,c	;volatile
 15500  003472  0E01               	movlw	1
 15501  003474  6F7C               	movwf	EEPROM_Write@oldRFIE& (0+255),b
 15502                           
 15503                           ; BSR set to: 0
 15504                           ;eeprom.c: 127: INTCON3bits.INT1IE = 0;
 15505  003476  96F0               	bcf	intcon3,3,c	;volatile
 15506  003478                     l9538:
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;eeprom.c: 133: {
 15510                           ;eeprom.c: 134: LATDbits.LATD5 = 0;
 15511  003478  9A8C               	bcf	3980,5,c	;volatile
 15512                           
 15513                           ; BSR set to: 0
 15514                           ;eeprom.c: 135: SPIPut2(0x05);
 15515  00347A  0E05               	movlw	5
 15516  00347C  ECB9  F020         	call	_SPIPut2
 15517                           
 15518                           ;eeprom.c: 136: PageCounter = SPIGet2();
 15519  003480  EC07  F021         	call	_SPIGet2	;wreg free
 15520  003484  0100               	movlb	0	; () banked
 15521  003486  6F7D               	movwf	EEPROM_Write@PageCounter& (0+255),b
 15522                           
 15523                           ; BSR set to: 0
 15524                           ;eeprom.c: 137: LATDbits.LATD5 = 1;
 15525  003488  8A8C               	bsf	3980,5,c	;volatile
 15526                           
 15527                           ; BSR set to: 0
 15528                           ;eeprom.c: 138: MacroNop();
 15529  00348A  EC13  F021         	call	_MacroNop	;wreg free
 15530                           
 15531                           ;eeprom.c: 139: } while(PageCounter & 0x01 );
 15532  00348E  0100               	movlb	0	; () banked
 15533  003490  B17D               	btfsc	EEPROM_Write@PageCounter& (0+255),0,b
 15534  003492  D7F2               	goto	l9538
 15535                           
 15536                           ; BSR set to: 0
 15537                           ;eeprom.c: 141: LATDbits.LATD5 = 0;
 15538  003494  9A8C               	bcf	3980,5,c	;volatile
 15539                           
 15540                           ; BSR set to: 0
 15541                           ;eeprom.c: 142: SPIPut2(0x06);
 15542  003496  0E06               	movlw	6
 15543  003498  ECB9  F020         	call	_SPIPut2
 15544                           
 15545                           ;eeprom.c: 143: LATDbits.LATD5 = 1;
 15546  00349C  8A8C               	bsf	3980,5,c	;volatile
 15547                           
 15548                           ;eeprom.c: 144: MacroNop();
 15549  00349E  EC13  F021         	call	_MacroNop	;wreg free
 15550                           
 15551                           ;eeprom.c: 145: LATDbits.LATD5 = 0;
 15552  0034A2  9A8C               	bcf	3980,5,c	;volatile
 15553                           
 15554                           ;eeprom.c: 147: SPIPut2(0x02);
 15555  0034A4  0E02               	movlw	2
 15556  0034A6  ECB9  F020         	call	_SPIPut2
 15557                           
 15558                           ;eeprom.c: 148: SPIPut2(addr);
 15559  0034AA  0100               	movlb	0	; () banked
 15560  0034AC  5179               	movf	EEPROM_Write@addr& (0+255),w,b
 15561  0034AE  ECB9  F020         	call	_SPIPut2
 15562                           
 15563                           ;eeprom.c: 150: PageCounter = 0;
 15564  0034B2  0100               	movlb	0	; () banked
 15565  0034B4  6B7D               	clrf	EEPROM_Write@PageCounter& (0+255),b
 15566                           
 15567                           ;eeprom.c: 151: while( count > 0 )
 15568  0034B6  D016               	goto	l9578
 15569  0034B8                     l9564:
 15570                           
 15571                           ; BSR set to: 0
 15572                           ;eeprom.c: 152: {
 15573                           ;eeprom.c: 153: SPIPut2(*dest++);
 15574  0034B8  C077  FFD9         	movff	EEPROM_Write@dest,fsr2l
 15575  0034BC  C078  FFDA         	movff	EEPROM_Write@dest+1,fsr2h
 15576  0034C0  50DF               	movf	indf2,w,c
 15577  0034C2  ECB9  F020         	call	_SPIPut2
 15578  0034C6  0100               	movlb	0	; () banked
 15579  0034C8  4B77               	infsnz	EEPROM_Write@dest& (0+255),f,b
 15580  0034CA  2B78               	incf	(EEPROM_Write@dest+1)& (0+255),f,b
 15581                           
 15582                           ; BSR set to: 0
 15583                           ;eeprom.c: 154: count--;
 15584  0034CC  077A               	decf	EEPROM_Write@count& (0+255),f,b
 15585                           
 15586                           ; BSR set to: 0
 15587                           ;eeprom.c: 155: PageCounter++;
 15588  0034CE  2B7D               	incf	EEPROM_Write@PageCounter& (0+255),f,b
 15589                           
 15590                           ; BSR set to: 0
 15591                           ;eeprom.c: 156: if( ((addr + PageCounter) & (16-1)) == 0 )
 15592  0034D0  5179               	movf	EEPROM_Write@addr& (0+255),w,b
 15593  0034D2  257D               	addwf	EEPROM_Write@PageCounter& (0+255),w,b
 15594  0034D4  6F7B               	movwf	??_EEPROM_Write& (0+255),b
 15595  0034D6  0E0F               	movlw	15
 15596  0034D8  177B               	andwf	??_EEPROM_Write& (0+255),f,b
 15597  0034DA  E104               	bnz	l9578
 15598                           
 15599                           ; BSR set to: 0
 15600                           ;eeprom.c: 157: {
 15601                           ;eeprom.c: 158: LATDbits.LATD5 = 1;
 15602  0034DC  8A8C               	bsf	3980,5,c	;volatile
 15603                           
 15604                           ; BSR set to: 0
 15605                           ;eeprom.c: 159: addr += PageCounter;
 15606  0034DE  517D               	movf	EEPROM_Write@PageCounter& (0+255),w,b
 15607  0034E0  2779               	addwf	EEPROM_Write@addr& (0+255),f,b
 15608                           
 15609                           ;eeprom.c: 160: goto EEPROM_NEXT_PAGE;
 15610  0034E2  D7CA               	goto	l9538
 15611  0034E4                     l9578:
 15612                           
 15613                           ; BSR set to: 0
 15614  0034E4  517A               	movf	EEPROM_Write@count& (0+255),w,b
 15615  0034E6  E1E8               	bnz	l9564
 15616                           
 15617                           ; BSR set to: 0
 15618                           ;eeprom.c: 161: }
 15619                           ;eeprom.c: 162: }
 15620                           ;eeprom.c: 163: LATDbits.LATD5 = 1;
 15621  0034E8  8A8C               	bsf	3980,5,c	;volatile
 15622                           
 15623                           ;eeprom.c: 168: INTCON3bits.INT1IE = oldRFIE;
 15624  0034EA  B17C               	btfsc	EEPROM_Write@oldRFIE& (0+255),0,b
 15625  0034EC  D002               	bra	u9635
 15626  0034EE  96F0               	bcf	intcon3,3,c	;volatile
 15627  0034F0  D001               	bra	u9636
 15628  0034F2                     u9635:
 15629  0034F2  86F0               	bsf	intcon3,3,c	;volatile
 15630  0034F4                     u9636:
 15631  0034F4  0012               	return		;funcret
 15632  0034F6                     __end_of_EEPROM_Write:
 15633                           	opt stack 0
 15634                           tblptru	equ	0xFF8
 15635                           tblptrh	equ	0xFF7
 15636                           tblptrl	equ	0xFF6
 15637                           tablat	equ	0xFF5
 15638                           prodh	equ	0xFF4
 15639                           prodl	equ	0xFF3
 15640                           intcon	equ	0xFF2
 15641                           intcon2	equ	0xFF1
 15642                           intcon3	equ	0xFF0
 15643                           postinc0	equ	0xFEE
 15644                           wreg	equ	0xFE8
 15645                           indf1	equ	0xFE7
 15646                           postinc1	equ	0xFE6
 15647                           fsr1h	equ	0xFE2
 15648                           fsr1l	equ	0xFE1
 15649                           indf2	equ	0xFDF
 15650                           postinc2	equ	0xFDE
 15651                           postdec2	equ	0xFDD
 15652                           fsr2h	equ	0xFDA
 15653                           fsr2l	equ	0xFD9
 15654                           status	equ	0xFD8
 15655                           
 15656 ;; *************** function _SPIGet2 *****************
 15657 ;; Defined at:
 15658 ;;		line 129 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 15659 ;; Parameters:    Size  Location     Type
 15660 ;;		None
 15661 ;; Auto vars:     Size  Location     Type
 15662 ;;		None
 15663 ;; Return value:  Size  Location     Type
 15664 ;;                  1    wreg      unsigned char 
 15665 ;; Registers used:
 15666 ;;		wreg, status,2, cstack
 15667 ;; Tracked objects:
 15668 ;;		On entry : 0/0
 15669 ;;		On exit  : 0/0
 15670 ;;		Unchanged: 0/0
 15671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15676 ;;Total ram usage:        0 bytes
 15677 ;; Hardware stack levels used:    1
 15678 ;; Hardware stack levels required when called:    9
 15679 ;; This function calls:
 15680 ;;		_SPIPut2
 15681 ;; This function is called by:
 15682 ;;		_EEPROM_Read
 15683 ;;		_EEPROM_Write
 15684 ;; This function uses a non-reentrant model
 15685 ;;
 15686                           
 15687                           	psect	text64
 15688  00420E                     __ptext64:
 15689                           	opt stack 0
 15690  00420E                     _SPIGet2:
 15691                           	opt stack 13
 15692                           
 15693                           ;spi.c: 132: SPIPut2(0x00);
 15694                           
 15695                           ;incstack = 0
 15696  00420E  0E00               	movlw	0
 15697  004210  ECB9  F020         	call	_SPIPut2
 15698                           
 15699                           ;spi.c: 133: return SSP2BUF;
 15700  004214  5075               	movf	3957,w,c	;volatile
 15701  004216  0012               	return		;funcret
 15702  004218                     __end_of_SPIGet2:
 15703                           	opt stack 0
 15704                           tblptru	equ	0xFF8
 15705                           tblptrh	equ	0xFF7
 15706                           tblptrl	equ	0xFF6
 15707                           tablat	equ	0xFF5
 15708                           prodh	equ	0xFF4
 15709                           prodl	equ	0xFF3
 15710                           intcon	equ	0xFF2
 15711                           intcon2	equ	0xFF1
 15712                           intcon3	equ	0xFF0
 15713                           postinc0	equ	0xFEE
 15714                           wreg	equ	0xFE8
 15715                           indf1	equ	0xFE7
 15716                           postinc1	equ	0xFE6
 15717                           fsr1h	equ	0xFE2
 15718                           fsr1l	equ	0xFE1
 15719                           indf2	equ	0xFDF
 15720                           postinc2	equ	0xFDE
 15721                           postdec2	equ	0xFDD
 15722                           fsr2h	equ	0xFDA
 15723                           fsr2l	equ	0xFD9
 15724                           status	equ	0xFD8
 15725                           
 15726 ;; *************** function _MacroNop *****************
 15727 ;; Defined at:
 15728 ;;		line 322 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 15729 ;; Parameters:    Size  Location     Type
 15730 ;;		None
 15731 ;; Auto vars:     Size  Location     Type
 15732 ;;		None
 15733 ;; Return value:  Size  Location     Type
 15734 ;;		None               void
 15735 ;; Registers used:
 15736 ;;		None
 15737 ;; Tracked objects:
 15738 ;;		On entry : 0/0
 15739 ;;		On exit  : 0/0
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15746 ;;Total ram usage:        0 bytes
 15747 ;; Hardware stack levels used:    1
 15748 ;; Hardware stack levels required when called:    8
 15749 ;; This function calls:
 15750 ;;		Nothing
 15751 ;; This function is called by:
 15752 ;;		_EEPROM_Write
 15753 ;; This function uses a non-reentrant model
 15754 ;;
 15755                           
 15756                           	psect	text65
 15757  004226                     __ptext65:
 15758                           	opt stack 0
 15759  004226                     _MacroNop:
 15760                           	opt stack 14
 15761                           
 15762                           ;miwi_p2p.c: 324: __nop();
 15763                           
 15764                           ;incstack = 0
 15765  004226  F000               	nop	
 15766  004228  0012               	return		;funcret
 15767  00422A                     __end_of_MacroNop:
 15768                           	opt stack 0
 15769                           tblptru	equ	0xFF8
 15770                           tblptrh	equ	0xFF7
 15771                           tblptrl	equ	0xFF6
 15772                           tablat	equ	0xFF5
 15773                           prodh	equ	0xFF4
 15774                           prodl	equ	0xFF3
 15775                           intcon	equ	0xFF2
 15776                           intcon2	equ	0xFF1
 15777                           intcon3	equ	0xFF0
 15778                           postinc0	equ	0xFEE
 15779                           wreg	equ	0xFE8
 15780                           indf1	equ	0xFE7
 15781                           postinc1	equ	0xFE6
 15782                           fsr1h	equ	0xFE2
 15783                           fsr1l	equ	0xFE1
 15784                           indf2	equ	0xFDF
 15785                           postinc2	equ	0xFDE
 15786                           postdec2	equ	0xFDD
 15787                           fsr2h	equ	0xFDA
 15788                           fsr2l	equ	0xFD9
 15789                           status	equ	0xFD8
 15790                           
 15791 ;; *************** function _DemoOutput_ChannelError *****************
 15792 ;; Defined at:
 15793 ;;		line 193 in file "../src/demo_ouput.c"
 15794 ;; Parameters:    Size  Location     Type
 15795 ;;  channel         1    wreg     unsigned char 
 15796 ;; Auto vars:     Size  Location     Type
 15797 ;;  channel         1    0[COMRAM] unsigned char 
 15798 ;; Return value:  Size  Location     Type
 15799 ;;		None               void
 15800 ;; Registers used:
 15801 ;;		wreg
 15802 ;; Tracked objects:
 15803 ;;		On entry : 0/0
 15804 ;;		On exit  : 0/0
 15805 ;;		Unchanged: 0/0
 15806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15811 ;;Total ram usage:        0 bytes
 15812 ;; Hardware stack levels used:    1
 15813 ;; Hardware stack levels required when called:    8
 15814 ;; This function calls:
 15815 ;;		Nothing
 15816 ;; This function is called by:
 15817 ;;		_Initialize_Demo
 15818 ;; This function uses a non-reentrant model
 15819 ;;
 15820                           
 15821                           	psect	text66
 15822  00422C                     __ptext66:
 15823                           	opt stack 0
 15824  00422C                     _DemoOutput_ChannelError:
 15825                           	opt stack 21
 15826                           
 15827                           ;incstack = 0
 15828  00422C  0012               	return		;funcret
 15829  00422E                     __end_of_DemoOutput_ChannelError:
 15830                           	opt stack 0
 15831                           tblptru	equ	0xFF8
 15832                           tblptrh	equ	0xFF7
 15833                           tblptrl	equ	0xFF6
 15834                           tablat	equ	0xFF5
 15835                           prodh	equ	0xFF4
 15836                           prodl	equ	0xFF3
 15837                           intcon	equ	0xFF2
 15838                           intcon2	equ	0xFF1
 15839                           intcon3	equ	0xFF0
 15840                           postinc0	equ	0xFEE
 15841                           wreg	equ	0xFE8
 15842                           indf1	equ	0xFE7
 15843                           postinc1	equ	0xFE6
 15844                           fsr1h	equ	0xFE2
 15845                           fsr1l	equ	0xFE1
 15846                           indf2	equ	0xFDF
 15847                           postinc2	equ	0xFDE
 15848                           postdec2	equ	0xFDD
 15849                           fsr2h	equ	0xFDA
 15850                           fsr2l	equ	0xFD9
 15851                           status	equ	0xFD8
 15852                           
 15853 ;; *************** function _DemoOutput_Channel *****************
 15854 ;; Defined at:
 15855 ;;		line 111 in file "../src/demo_ouput.c"
 15856 ;; Parameters:    Size  Location     Type
 15857 ;;  channel         1    wreg     unsigned char 
 15858 ;;  Step            1   74[BANK0 ] unsigned char 
 15859 ;; Auto vars:     Size  Location     Type
 15860 ;;  channel         1   75[BANK0 ] unsigned char 
 15861 ;; Return value:  Size  Location     Type
 15862 ;;		None               void
 15863 ;; Registers used:
 15864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15865 ;; Tracked objects:
 15866 ;;		On entry : F/0
 15867 ;;		On exit  : F/0
 15868 ;;		Unchanged: 0/0
 15869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15870 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15873 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15874 ;;Total ram usage:        2 bytes
 15875 ;; Hardware stack levels used:    1
 15876 ;; Hardware stack levels required when called:   12
 15877 ;; This function calls:
 15878 ;;		_DELAY_ms
 15879 ;;		_LCDDisplay
 15880 ;; This function is called by:
 15881 ;;		_Initialize_Demo
 15882 ;; This function uses a non-reentrant model
 15883 ;;
 15884                           
 15885                           	psect	text67
 15886  003D0A                     __ptext67:
 15887                           	opt stack 0
 15888  003D0A                     _DemoOutput_Channel:
 15889                           	opt stack 17
 15890                           
 15891                           ;incstack = 0
 15892                           ;DemoOutput_Channel@channel stored from wreg
 15893  003D0A  6FAB               	movwf	DemoOutput_Channel@channel& (0+255),b
 15894                           
 15895                           ;demo_ouput.c: 113: if( Step == 0 )
 15896  003D0C  0100               	movlb	0	; () banked
 15897  003D0E  51AA               	movf	DemoOutput_Channel@Step& (0+255),w,b
 15898  003D10  E10B               	bnz	l11124
 15899                           
 15900                           ; BSR set to: 0
 15901                           ;demo_ouput.c: 114: {
 15902                           ;demo_ouput.c: 115: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 15903  003D12  0ED5               	movlw	low STR_16
 15904  003D14  6FA5               	movwf	LCDDisplay@text& (0+255),b
 15905  003D16  0EFD               	movlw	high STR_16
 15906  003D18  6FA6               	movwf	(LCDDisplay@text+1)& (0+255),b
 15907  003D1A  C0AB  F0A7         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 15908  003D1E  0E01               	movlw	1
 15909  003D20  6FA8               	movwf	LCDDisplay@delay& (0+255),b
 15910  003D22  ECA4  F01E         	call	_LCDDisplay	;wreg free
 15911                           
 15912                           ;demo_ouput.c: 122: }
 15913  003D26  D00A               	goto	l11126
 15914  003D28                     l11124:
 15915                           
 15916                           ; BSR set to: 0
 15917                           ;demo_ouput.c: 123: else
 15918                           ;demo_ouput.c: 124: {
 15919                           ;demo_ouput.c: 125: LCDDisplay((char *)" Connected Peer  on Channel %d", channel, 1);
 15920  003D28  0E15               	movlw	low STR_17
 15921  003D2A  6FA5               	movwf	LCDDisplay@text& (0+255),b
 15922  003D2C  0EFE               	movlw	high STR_17
 15923  003D2E  6FA6               	movwf	(LCDDisplay@text+1)& (0+255),b
 15924  003D30  C0AB  F0A7         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 15925  003D34  0E01               	movlw	1
 15926  003D36  6FA8               	movwf	LCDDisplay@delay& (0+255),b
 15927  003D38  ECA4  F01E         	call	_LCDDisplay	;wreg free
 15928  003D3C                     l11126:
 15929                           
 15930                           ; BSR set to: 0
 15931                           ;demo_ouput.c: 132: }
 15932                           ;demo_ouput.c: 133: DELAY_ms(1000);
 15933  003D3C  0E03               	movlw	3
 15934  003D3E  6F77               	movwf	(DELAY_ms@ms+1)& (0+255),b
 15935  003D40  0EE8               	movlw	232
 15936  003D42  6F76               	movwf	DELAY_ms@ms& (0+255),b
 15937  003D44  EFC7  F015         	goto	_DELAY_ms	;wreg free
 15938  003D48                     __end_of_DemoOutput_Channel:
 15939                           	opt stack 0
 15940                           tblptru	equ	0xFF8
 15941                           tblptrh	equ	0xFF7
 15942                           tblptrl	equ	0xFF6
 15943                           tablat	equ	0xFF5
 15944                           prodh	equ	0xFF4
 15945                           prodl	equ	0xFF3
 15946                           intcon	equ	0xFF2
 15947                           intcon2	equ	0xFF1
 15948                           intcon3	equ	0xFF0
 15949                           postinc0	equ	0xFEE
 15950                           wreg	equ	0xFE8
 15951                           indf1	equ	0xFE7
 15952                           postinc1	equ	0xFE6
 15953                           fsr1h	equ	0xFE2
 15954                           fsr1l	equ	0xFE1
 15955                           indf2	equ	0xFDF
 15956                           postinc2	equ	0xFDE
 15957                           postdec2	equ	0xFDD
 15958                           fsr2h	equ	0xFDA
 15959                           fsr2l	equ	0xFD9
 15960                           status	equ	0xFD8
 15961                           
 15962 ;; *************** function _DemoOutput_Greeting *****************
 15963 ;; Defined at:
 15964 ;;		line 63 in file "../src/demo_ouput.c"
 15965 ;; Parameters:    Size  Location     Type
 15966 ;;		None
 15967 ;; Auto vars:     Size  Location     Type
 15968 ;;		None
 15969 ;; Return value:  Size  Location     Type
 15970 ;;		None               void
 15971 ;; Registers used:
 15972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15973 ;; Tracked objects:
 15974 ;;		On entry : F/0
 15975 ;;		On exit  : F/0
 15976 ;;		Unchanged: 0/0
 15977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15982 ;;Total ram usage:        0 bytes
 15983 ;; Hardware stack levels used:    1
 15984 ;; Hardware stack levels required when called:   12
 15985 ;; This function calls:
 15986 ;;		_DELAY_ms
 15987 ;;		_LCDDisplay
 15988 ;; This function is called by:
 15989 ;;		_main
 15990 ;; This function uses a non-reentrant model
 15991 ;;
 15992                           
 15993                           	psect	text68
 15994  00411C                     __ptext68:
 15995                           	opt stack 0
 15996  00411C                     _DemoOutput_Greeting:
 15997                           	opt stack 18
 15998                           
 15999                           ; BSR set to: 0
 16000                           ;demo_ouput.c: 77: LCDDisplay((char *)"Simple STAR     MRF89XA Node", 0, 1);
 16001                           
 16002                           ; BSR set to: 0
 16003                           ;incstack = 0
 16004  00411C  0E34               	movlw	low STR_15
 16005  00411E  6FA5               	movwf	LCDDisplay@text& (0+255),b
 16006  004120  0EFE               	movlw	high STR_15
 16007  004122  6FA6               	movwf	(LCDDisplay@text+1)& (0+255),b
 16008  004124  6BA7               	clrf	LCDDisplay@value& (0+255),b
 16009  004126  0E01               	movlw	1
 16010  004128  6FA8               	movwf	LCDDisplay@delay& (0+255),b
 16011  00412A  ECA4  F01E         	call	_LCDDisplay	;wreg free
 16012                           
 16013                           ; BSR set to: 0
 16014                           ;demo_ouput.c: 108: DELAY_ms(2000);
 16015  00412E  0E07               	movlw	7
 16016  004130  6F77               	movwf	(DELAY_ms@ms+1)& (0+255),b
 16017  004132  0ED0               	movlw	208
 16018  004134  6F76               	movwf	DELAY_ms@ms& (0+255),b
 16019  004136  EFC7  F015         	goto	_DELAY_ms	;wreg free
 16020  00413A                     __end_of_DemoOutput_Greeting:
 16021                           	opt stack 0
 16022                           tblptru	equ	0xFF8
 16023                           tblptrh	equ	0xFF7
 16024                           tblptrl	equ	0xFF6
 16025                           tablat	equ	0xFF5
 16026                           prodh	equ	0xFF4
 16027                           prodl	equ	0xFF3
 16028                           intcon	equ	0xFF2
 16029                           intcon2	equ	0xFF1
 16030                           intcon3	equ	0xFF0
 16031                           postinc0	equ	0xFEE
 16032                           wreg	equ	0xFE8
 16033                           indf1	equ	0xFE7
 16034                           postinc1	equ	0xFE6
 16035                           fsr1h	equ	0xFE2
 16036                           fsr1l	equ	0xFE1
 16037                           indf2	equ	0xFDF
 16038                           postinc2	equ	0xFDE
 16039                           postdec2	equ	0xFDD
 16040                           fsr2h	equ	0xFDA
 16041                           fsr2l	equ	0xFD9
 16042                           status	equ	0xFD8
 16043                           
 16044 ;; *************** function _LCDDisplay *****************
 16045 ;; Defined at:
 16046 ;;		line 187 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 16047 ;; Parameters:    Size  Location     Type
 16048 ;;  text            2   69[BANK0 ] PTR unsigned char 
 16049 ;;		 -> STR_34(20), STR_29(28), STR_26(32), STR_25(29), 
 16050 ;;		 -> STR_24(16), STR_18(29), STR_17(31), STR_16(32), 
 16051 ;;		 -> STR_15(29), 
 16052 ;;  value           1   71[BANK0 ] unsigned char 
 16053 ;;  delay           1   72[BANK0 ] unsigned char 
 16054 ;; Auto vars:     Size  Location     Type
 16055 ;;  i               1   73[BANK0 ] unsigned char 
 16056 ;; Return value:  Size  Location     Type
 16057 ;;		None               void
 16058 ;; Registers used:
 16059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16060 ;; Tracked objects:
 16061 ;;		On entry : F/0
 16062 ;;		On exit  : F/0
 16063 ;;		Unchanged: 0/0
 16064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16065 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16066 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16068 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16069 ;;Total ram usage:        5 bytes
 16070 ;; Hardware stack levels used:    1
 16071 ;; Hardware stack levels required when called:   11
 16072 ;; This function calls:
 16073 ;;		_DELAY_ms
 16074 ;;		_LCD_Erase
 16075 ;;		_LCD_Update
 16076 ;;		_sprintf
 16077 ;; This function is called by:
 16078 ;;		_DemoOutput_Greeting
 16079 ;;		_DemoOutput_Channel
 16080 ;;		_DemoOutput_UnicastFail
 16081 ;;		_STAR_DEMO_OPTIONS_MESSAGE
 16082 ;;		_freezer_feature
 16083 ;;		_run_star_demo
 16084 ;; This function uses a non-reentrant model
 16085 ;;
 16086                           
 16087                           	psect	text69
 16088  003D48                     __ptext69:
 16089                           	opt stack 0
 16090  003D48                     _LCDDisplay:
 16091                           	opt stack 18
 16092                           
 16093                           ; BSR set to: 0
 16094                           ;lcd.c: 189: LCD_Erase();
 16095                           
 16096                           ; BSR set to: 0
 16097                           ;incstack = 0
 16098  003D48  EC25  F020         	call	_LCD_Erase	;wreg free
 16099                           
 16100                           ; BSR set to: 0
 16101                           ;lcd.c: 190: sprintf((char *)LCDText, (char*)text, value);
 16102  003D4C  0EB8               	movlw	low _LCDText
 16103  003D4E  6F82               	movwf	sprintf@sp& (0+255),b
 16104  003D50  0E01               	movlw	high _LCDText
 16105  003D52  6F83               	movwf	(sprintf@sp+1)& (0+255),b
 16106  003D54  C0A5  F084         	movff	LCDDisplay@text,sprintf@f
 16107  003D58  C0A6  F085         	movff	LCDDisplay@text+1,sprintf@f+1
 16108  003D5C  C0A7  F086         	movff	LCDDisplay@value,?_sprintf+4
 16109  003D60  6B87               	clrf	(?_sprintf+5)& (0+255),b
 16110  003D62  EC8E  F005         	call	_sprintf	;wreg free
 16111                           
 16112                           ; BSR set to: 0
 16113                           ;lcd.c: 191: LCD_Update();
 16114  003D66  ECBB  F01A         	call	_LCD_Update	;wreg free
 16115                           
 16116                           ; BSR set to: 0
 16117                           ;lcd.c: 194: if( delay )
 16118  003D6A  51A8               	movf	LCDDisplay@delay& (0+255),w,b
 16119  003D6C  B4D8               	btfsc	status,2,c
 16120  003D6E  0012               	return	
 16121                           
 16122                           ; BSR set to: 0
 16123                           ;lcd.c: 195: {
 16124                           ;lcd.c: 196: uint8_t i;
 16125                           ;lcd.c: 197: for(i = 0; i < 8; i++)
 16126  003D70  6BA9               	clrf	LCDDisplay@i& (0+255),b
 16127  003D72                     l9618:
 16128                           
 16129                           ; BSR set to: 0
 16130                           ;lcd.c: 198: {
 16131                           ;lcd.c: 199: DELAY_ms(250);
 16132  003D72  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
 16133  003D74  0EFA               	movlw	250
 16134  003D76  6F76               	movwf	DELAY_ms@ms& (0+255),b
 16135  003D78  ECC7  F015         	call	_DELAY_ms	;wreg free
 16136                           
 16137                           ; BSR set to: 0
 16138  003D7C  2BA9               	incf	LCDDisplay@i& (0+255),f,b
 16139                           
 16140                           ; BSR set to: 0
 16141  003D7E  0E07               	movlw	7
 16142  003D80  65A9               	cpfsgt	LCDDisplay@i& (0+255),b
 16143  003D82  D7F7               	goto	l9618
 16144  003D84  0C07               	retlw	7
 16145  003D86                     __end_of_LCDDisplay:
 16146                           	opt stack 0
 16147                           tblptru	equ	0xFF8
 16148                           tblptrh	equ	0xFF7
 16149                           tblptrl	equ	0xFF6
 16150                           tablat	equ	0xFF5
 16151                           prodh	equ	0xFF4
 16152                           prodl	equ	0xFF3
 16153                           intcon	equ	0xFF2
 16154                           intcon2	equ	0xFF1
 16155                           intcon3	equ	0xFF0
 16156                           postinc0	equ	0xFEE
 16157                           wreg	equ	0xFE8
 16158                           indf1	equ	0xFE7
 16159                           postinc1	equ	0xFE6
 16160                           fsr1h	equ	0xFE2
 16161                           fsr1l	equ	0xFE1
 16162                           indf2	equ	0xFDF
 16163                           postinc2	equ	0xFDE
 16164                           postdec2	equ	0xFDD
 16165                           fsr2h	equ	0xFDA
 16166                           fsr2l	equ	0xFD9
 16167                           status	equ	0xFD8
 16168                           
 16169 ;; *************** function _sprintf *****************
 16170 ;; Defined at:
 16171 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 16172 ;; Parameters:    Size  Location     Type
 16173 ;;  sp              2   34[BANK0 ] PTR unsigned char 
 16174 ;;		 -> LCDText(33), 
 16175 ;;  f               2   36[BANK0 ] PTR const unsigned char 
 16176 ;;		 -> STR_35(18), STR_34(20), STR_33(17), STR_32(22), 
 16177 ;;		 -> STR_31(22), STR_30(25), STR_29(28), STR_28(22), 
 16178 ;;		 -> STR_27(17), STR_26(32), STR_25(29), STR_24(16), 
 16179 ;;		 -> STR_18(29), STR_17(31), STR_16(32), STR_15(29), 
 16180 ;;		 -> STR_14(14), STR_13(16), 
 16181 ;; Auto vars:     Size  Location     Type
 16182 ;;  idx             1   50[BANK0 ] unsigned char 
 16183 ;;  tmpval          4    0        struct .
 16184 ;;  flag            2   67[BANK0 ] unsigned short 
 16185 ;;  width           2   64[BANK0 ] int 
 16186 ;;  val             2   61[BANK0 ] unsigned int 
 16187 ;;  len             2   58[BANK0 ] unsigned int 
 16188 ;;  c               1   66[BANK0 ] char 
 16189 ;;  prec            1   63[BANK0 ] char 
 16190 ;;  ap              1   60[BANK0 ] PTR void [1]
 16191 ;;		 -> ?_sprintf(2), 
 16192 ;;  cp              1   57[BANK0 ] PTR const unsigned char 
 16193 ;;		 -> sprintf@c(1), 
 16194 ;; Return value:  Size  Location     Type
 16195 ;;                  2   34[BANK0 ] int 
 16196 ;; Registers used:
 16197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16198 ;; Tracked objects:
 16199 ;;		On entry : F/0
 16200 ;;		On exit  : F/0
 16201 ;;		Unchanged: 0/0
 16202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16203 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16204 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16205 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16206 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16207 ;;Total ram usage:       35 bytes
 16208 ;; Hardware stack levels used:    1
 16209 ;; Hardware stack levels required when called:    9
 16210 ;; This function calls:
 16211 ;;		___lwdiv
 16212 ;;		___lwmod
 16213 ;;		___wmul
 16214 ;;		_isdigit
 16215 ;; This function is called by:
 16216 ;;		_LCDTRXCount
 16217 ;;		_LCDDisplay
 16218 ;;		_Source_END_DEVICE_INFO
 16219 ;;		_run_star_demo
 16220 ;; This function uses a non-reentrant model
 16221 ;;
 16222                           
 16223                           	psect	text70
 16224  000B1C                     __ptext70:
 16225                           	opt stack 0
 16226  000B1C                     _sprintf:
 16227                           	opt stack 19
 16228                           
 16229                           ; BSR set to: 0
 16230                           ;doprnt.c: 494: va_list ap;
 16231                           ;doprnt.c: 499: signed char c;
 16232                           ;doprnt.c: 501: int width;
 16233                           ;doprnt.c: 506: signed char prec;
 16234                           ;doprnt.c: 508: unsigned short flag;
 16235                           ;doprnt.c: 523: union {
 16236                           ;doprnt.c: 524: unsigned long vd;
 16237                           ;doprnt.c: 525: double integ;
 16238                           ;doprnt.c: 526: } tmpval;
 16239                           ;doprnt.c: 528: unsigned int val;
 16240                           ;doprnt.c: 529: unsigned len;
 16241                           ;doprnt.c: 530: const char * cp;
 16242                           ;doprnt.c: 533: *ap = __va_start();
 16243                           
 16244                           ; BSR set to: 0
 16245                           ;incstack = 0
 16246  000B1C  0E86               	movlw	low (?_sprintf+4)
 16247  000B1E  6F9C               	movwf	sprintf@ap& (0+255),b
 16248                           
 16249                           ;doprnt.c: 536: while(c = *f++) {
 16250  000B20  D378               	goto	l9464
 16251  000B22                     l9142:
 16252                           
 16253                           ; BSR set to: 0
 16254                           ;doprnt.c: 538: if(c != '%')
 16255  000B22  0E25               	movlw	37
 16256  000B24  19A2               	xorwf	sprintf@c& (0+255),w,b
 16257  000B26  E009               	bz	l1423
 16258                           
 16259                           ; BSR set to: 0
 16260                           ;doprnt.c: 540: {
 16261                           ;doprnt.c: 541: ((*sp++ = (c)));
 16262  000B28  C082  FFD9         	movff	sprintf@sp,fsr2l
 16263  000B2C  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 16264  000B30  C0A2  FFDF         	movff	sprintf@c,indf2
 16265                           
 16266                           ; BSR set to: 0
 16267  000B34  4B82               	infsnz	sprintf@sp& (0+255),f,b
 16268  000B36  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 16269                           
 16270                           ;doprnt.c: 542: continue;
 16271  000B38  D36C               	goto	l9464
 16272  000B3A                     l1423:
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;doprnt.c: 543: }
 16276                           ;doprnt.c: 546: width = 0;
 16277  000B3A  6BA0               	clrf	sprintf@width& (0+255),b
 16278  000B3C  6BA1               	clrf	(sprintf@width+1)& (0+255),b
 16279                           
 16280                           ;doprnt.c: 548: flag = 0;
 16281  000B3E  6BA3               	clrf	sprintf@flag& (0+255),b
 16282  000B40  6BA4               	clrf	(sprintf@flag+1)& (0+255),b
 16283  000B42  D009               	goto	l9158
 16284  000B44                     l9148:
 16285                           
 16286                           ; BSR set to: 0
 16287                           ;doprnt.c: 554: flag |= 0x08;
 16288  000B44  87A3               	bsf	sprintf@flag& (0+255),3,b
 16289  000B46  D005               	goto	L1
 16290  000B48                     l9150:
 16291                           
 16292                           ; BSR set to: 0
 16293                           ;doprnt.c: 561: flag |= 0x01;
 16294  000B48  81A3               	bsf	sprintf@flag& (0+255),0,b
 16295  000B4A  D003               	goto	L1
 16296  000B4C                     l9152:
 16297                           
 16298                           ; BSR set to: 0
 16299                           ;doprnt.c: 574: flag |= 0x800;
 16300  000B4C  87A4               	bsf	(sprintf@flag+1)& (0+255),3,b
 16301  000B4E  D001               	goto	L1
 16302  000B50                     l9154:
 16303                           
 16304                           ; BSR set to: 0
 16305                           ;doprnt.c: 580: flag |= 0x04;
 16306  000B50  85A3               	bsf	sprintf@flag& (0+255),2,b
 16307  000B52                     L1:
 16308                           
 16309                           ;doprnt.c: 581: f++;
 16310  000B52  4B84               	infsnz	sprintf@f& (0+255),f,b
 16311  000B54  2B85               	incf	(sprintf@f+1)& (0+255),f,b
 16312  000B56                     l9158:
 16313                           
 16314                           ; BSR set to: 0
 16315  000B56  C084  FFF6         	movff	sprintf@f,tblptrl
 16316  000B5A  C085  FFF7         	movff	sprintf@f+1,tblptrh
 16317  000B5E                     	if	0	;tblptru may be non-zero
 16318  000B5E                     	endif
 16319  000B5E                     	if	0	;tblptru may be non-zero
 16320  000B5E                     	endif
 16321  000B5E  0008               	tblrd		*
 16322  000B60  50F5               	movf	tablat,w,c
 16323                           
 16324                           ; Switch size 1, requested type "speed"
 16325                           ; Number of cases is 4, Range of values is 32 to 48
 16326                           ; switch strategies available:
 16327                           ; Name         Instructions Cycles
 16328                           ; simple_byte           13     7 (average)
 16329                           ;	Chosen strategy is simple_byte
 16330  000B62  0A20               	xorlw	32	; case 32
 16331  000B64  E0F1               	bz	l9150
 16332  000B66  0A03               	xorlw	3	; case 35
 16333  000B68  E0F1               	bz	l9152
 16334  000B6A  0A0E               	xorlw	14	; case 45
 16335  000B6C  E0EB               	bz	l9148
 16336  000B6E  0A1D               	xorlw	29	; case 48
 16337  000B70  E0EF               	bz	l9154
 16338                           
 16339                           ; BSR set to: 0
 16340                           ;doprnt.c: 593: if(flag & 0x08)
 16341  000B72  B7A3               	btfsc	sprintf@flag& (0+255),3,b
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;doprnt.c: 594: flag &= ~0x04;
 16345  000B74  95A3               	bcf	sprintf@flag& (0+255),2,b
 16346                           
 16347                           ; BSR set to: 0
 16348                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 16349  000B76  C084  FFF6         	movff	sprintf@f,tblptrl
 16350  000B7A  C085  FFF7         	movff	sprintf@f+1,tblptrh
 16351  000B7E                     	if	0	;tblptru may be non-zero
 16352  000B7E                     	endif
 16353  000B7E                     	if	0	;tblptru may be non-zero
 16354  000B7E                     	endif
 16355  000B7E  0008               	tblrd		*
 16356  000B80  50F5               	movf	tablat,w,c
 16357  000B82  EC9D  F020         	call	_isdigit
 16358  000B86  E32E               	bnc	l9174
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;doprnt.c: 598: width = 0;
 16362  000B88  6BA0               	clrf	sprintf@width& (0+255),b
 16363  000B8A  6BA1               	clrf	(sprintf@width+1)& (0+255),b
 16364  000B8C                     l9166:
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;doprnt.c: 600: width *= 10;
 16368  000B8C  C0A0  F076         	movff	sprintf@width,___wmul@multiplier
 16369  000B90  C0A1  F077         	movff	sprintf@width+1,___wmul@multiplier+1
 16370  000B94  6B79               	clrf	(___wmul@multiplicand+1)& (0+255),b
 16371  000B96  0E0A               	movlw	10
 16372  000B98  6F78               	movwf	___wmul@multiplicand& (0+255),b
 16373  000B9A  EC4C  F020         	call	___wmul	;wreg free
 16374  000B9E  C076  F0A0         	movff	?___wmul,sprintf@width
 16375  000BA2  C077  F0A1         	movff	?___wmul+1,sprintf@width+1
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;doprnt.c: 601: width += *f++ - '0';
 16379  000BA6  0ED0               	movlw	208
 16380  000BA8  6F8E               	movwf	??_sprintf& (0+255),b
 16381  000BAA  698F               	setf	(??_sprintf+1)& (0+255),b
 16382  000BAC  C084  FFF6         	movff	sprintf@f,tblptrl
 16383  000BB0  C085  FFF7         	movff	sprintf@f+1,tblptrh
 16384  000BB4                     	if	0	;tblptru may be non-zero
 16385  000BB4                     	endif
 16386  000BB4                     	if	0	;tblptru may be non-zero
 16387  000BB4                     	endif
 16388  000BB4  0008               	tblrd		*
 16389  000BB6  50F5               	movf	tablat,w,c
 16390  000BB8  6F90               	movwf	(??_sprintf+2)& (0+255),b
 16391  000BBA  6B91               	clrf	(??_sprintf+3)& (0+255),b
 16392  000BBC  518E               	movf	??_sprintf& (0+255),w,b
 16393  000BBE  2790               	addwf	(??_sprintf+2)& (0+255),f,b
 16394  000BC0  518F               	movf	(??_sprintf+1)& (0+255),w,b
 16395  000BC2  2391               	addwfc	(??_sprintf+3)& (0+255),f,b
 16396  000BC4  5190               	movf	(??_sprintf+2)& (0+255),w,b
 16397  000BC6  27A0               	addwf	sprintf@width& (0+255),f,b
 16398  000BC8  5191               	movf	(??_sprintf+3)& (0+255),w,b
 16399  000BCA  23A1               	addwfc	(sprintf@width+1)& (0+255),f,b
 16400                           
 16401                           ; BSR set to: 0
 16402  000BCC  4B84               	infsnz	sprintf@f& (0+255),f,b
 16403  000BCE  2B85               	incf	(sprintf@f+1)& (0+255),f,b
 16404                           
 16405                           ; BSR set to: 0
 16406                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 16407  000BD0  C084  FFF6         	movff	sprintf@f,tblptrl
 16408  000BD4  C085  FFF7         	movff	sprintf@f+1,tblptrh
 16409  000BD8                     	if	0	;tblptru may be non-zero
 16410  000BD8                     	endif
 16411  000BD8                     	if	0	;tblptru may be non-zero
 16412  000BD8                     	endif
 16413  000BD8  0008               	tblrd		*
 16414  000BDA  50F5               	movf	tablat,w,c
 16415  000BDC  EC9D  F020         	call	_isdigit
 16416  000BE0  E314               	bnc	l9182
 16417  000BE2  D7D4               	goto	l9166
 16418  000BE4                     l9174:
 16419                           
 16420                           ; BSR set to: 0
 16421  000BE4  C084  FFF6         	movff	sprintf@f,tblptrl
 16422  000BE8  C085  FFF7         	movff	sprintf@f+1,tblptrh
 16423  000BEC                     	if	0	;tblptru may be non-zero
 16424  000BEC                     	endif
 16425  000BEC                     	if	0	;tblptru may be non-zero
 16426  000BEC                     	endif
 16427  000BEC  0008               	tblrd		*
 16428  000BEE  50F5               	movf	tablat,w,c
 16429  000BF0  0A2A               	xorlw	42
 16430  000BF2  E10B               	bnz	l9182
 16431                           
 16432                           ; BSR set to: 0
 16433                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 16434  000BF4  519C               	movf	sprintf@ap& (0+255),w,b
 16435  000BF6  6ED9               	movwf	fsr2l,c
 16436  000BF8  6ADA               	clrf	fsr2h,c
 16437  000BFA  CFDE F0A0          	movff	postinc2,sprintf@width
 16438  000BFE  CFDD F0A1          	movff	postdec2,sprintf@width+1
 16439                           
 16440                           ; BSR set to: 0
 16441  000C02  0E02               	movlw	2
 16442  000C04  279C               	addwf	sprintf@ap& (0+255),f,b
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;doprnt.c: 606: f++;
 16446  000C06  4B84               	infsnz	sprintf@f& (0+255),f,b
 16447  000C08  2B85               	incf	(sprintf@f+1)& (0+255),f,b
 16448  000C0A                     l9182:
 16449                           
 16450                           ; BSR set to: 0
 16451                           ;doprnt.c: 608: }
 16452                           ;doprnt.c: 611: if(*f == '.') {
 16453  000C0A  C084  FFF6         	movff	sprintf@f,tblptrl
 16454  000C0E  C085  FFF7         	movff	sprintf@f+1,tblptrh
 16455  000C12                     	if	0	;tblptru may be non-zero
 16456  000C12                     	endif
 16457  000C12                     	if	0	;tblptru may be non-zero
 16458  000C12                     	endif
 16459  000C12  0008               	tblrd		*
 16460  000C14  50F5               	movf	tablat,w,c
 16461  000C16  0A2E               	xorlw	46
 16462  000C18  E130               	bnz	l1439
 16463                           
 16464                           ; BSR set to: 0
 16465                           ;doprnt.c: 612: flag |= 0x4000;
 16466  000C1A  8DA4               	bsf	(sprintf@flag+1)& (0+255),6,b
 16467                           
 16468                           ;doprnt.c: 613: f++;
 16469  000C1C  4B84               	infsnz	sprintf@f& (0+255),f,b
 16470  000C1E  2B85               	incf	(sprintf@f+1)& (0+255),f,b
 16471                           
 16472                           ; BSR set to: 0
 16473                           ;doprnt.c: 615: if(*f == '*') {
 16474  000C20  C084  FFF6         	movff	sprintf@f,tblptrl
 16475  000C24  C085  FFF7         	movff	sprintf@f+1,tblptrh
 16476  000C28                     	if	0	;tblptru may be non-zero
 16477  000C28                     	endif
 16478  000C28                     	if	0	;tblptru may be non-zero
 16479  000C28                     	endif
 16480  000C28  0008               	tblrd		*
 16481  000C2A  50F5               	movf	tablat,w,c
 16482  000C2C  0A2A               	xorlw	42
 16483  000C2E  E10A               	bnz	l1440
 16484                           
 16485                           ; BSR set to: 0
 16486                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 16487  000C30  519C               	movf	sprintf@ap& (0+255),w,b
 16488  000C32  6ED9               	movwf	fsr2l,c
 16489  000C34  6ADA               	clrf	fsr2h,c
 16490  000C36  50DF               	movf	indf2,w,c
 16491  000C38  6F9F               	movwf	sprintf@prec& (0+255),b
 16492                           
 16493                           ; BSR set to: 0
 16494  000C3A  0E02               	movlw	2
 16495  000C3C  279C               	addwf	sprintf@ap& (0+255),f,b
 16496                           
 16497                           ; BSR set to: 0
 16498                           ;doprnt.c: 617: f++;
 16499  000C3E  4B84               	infsnz	sprintf@f& (0+255),f,b
 16500  000C40  2B85               	incf	(sprintf@f+1)& (0+255),f,b
 16501                           
 16502                           ;doprnt.c: 618: } else
 16503  000C42  D08A               	goto	l9250
 16504  000C44                     l1440:
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;doprnt.c: 620: {
 16508                           ;doprnt.c: 621: prec = 0;
 16509  000C44  6B9F               	clrf	sprintf@prec& (0+255),b
 16510                           
 16511                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 16512  000C46  D00F               	goto	l9198
 16513  000C48                     l9194:
 16514                           
 16515                           ; BSR set to: 0
 16516                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 16517  000C48  C084  FFF6         	movff	sprintf@f,tblptrl
 16518  000C4C  C085  FFF7         	movff	sprintf@f+1,tblptrh
 16519  000C50                     	if	0	;tblptru may be non-zero
 16520  000C50                     	endif
 16521  000C50                     	if	0	;tblptru may be non-zero
 16522  000C50                     	endif
 16523  000C50  0008               	tblrd		*
 16524  000C52  CFF5 F08E          	movff	tablat,??_sprintf
 16525  000C56  519F               	movf	sprintf@prec& (0+255),w,b
 16526  000C58  0D0A               	mullw	10
 16527  000C5A  50F3               	movf	prodl,w,c
 16528  000C5C  258E               	addwf	??_sprintf& (0+255),w,b
 16529  000C5E  0FD0               	addlw	208
 16530  000C60  6F9F               	movwf	sprintf@prec& (0+255),b
 16531                           
 16532                           ; BSR set to: 0
 16533  000C62  4B84               	infsnz	sprintf@f& (0+255),f,b
 16534  000C64  2B85               	incf	(sprintf@f+1)& (0+255),f,b
 16535  000C66                     l9198:
 16536                           
 16537                           ; BSR set to: 0
 16538  000C66  C084  FFF6         	movff	sprintf@f,tblptrl
 16539  000C6A  C085  FFF7         	movff	sprintf@f+1,tblptrh
 16540  000C6E                     	if	0	;tblptru may be non-zero
 16541  000C6E                     	endif
 16542  000C6E                     	if	0	;tblptru may be non-zero
 16543  000C6E                     	endif
 16544  000C6E  0008               	tblrd		*
 16545  000C70  50F5               	movf	tablat,w,c
 16546  000C72  EC9D  F020         	call	_isdigit
 16547  000C76  E370               	bnc	l9250
 16548  000C78  D7E7               	goto	l9194
 16549  000C7A                     l1439:
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;doprnt.c: 626: prec = 0;
 16553  000C7A  6B9F               	clrf	sprintf@prec& (0+255),b
 16554  000C7C  D06D               	goto	l9250
 16555  000C7E                     l9200:
 16556                           
 16557                           ; BSR set to: 0
 16558                           ;doprnt.c: 691: flag |= 0x40;
 16559  000C7E  8DA3               	bsf	sprintf@flag& (0+255),6,b
 16560                           
 16561                           ;doprnt.c: 693: break;
 16562  000C80  D088               	goto	l9252
 16563  000C82                     l9202:
 16564                           
 16565                           ; BSR set to: 0
 16566                           ;doprnt.c: 714: flag |= 0x20;
 16567  000C82  8BA3               	bsf	sprintf@flag& (0+255),5,b
 16568  000C84                     l1454:
 16569                           
 16570                           ; BSR set to: 0
 16571                           ;doprnt.c: 721: flag |= 0x80;
 16572  000C84  8FA3               	bsf	sprintf@flag& (0+255),7,b
 16573                           
 16574                           ;doprnt.c: 723: break;
 16575  000C86  D085               	goto	l9252
 16576  000C88                     l9204:
 16577                           
 16578                           ; BSR set to: 0
 16579                           ;doprnt.c: 753: if(prec && prec < len)
 16580  000C88  519F               	movf	sprintf@prec& (0+255),w,b
 16581  000C8A  E00F               	bz	l9210
 16582                           
 16583                           ; BSR set to: 0
 16584  000C8C  C09F  F08E         	movff	sprintf@prec,??_sprintf
 16585  000C90  6B8F               	clrf	(??_sprintf+1)& (0+255),b
 16586  000C92  BF8E               	btfsc	??_sprintf& (0+255),7,b
 16587  000C94  078F               	decf	(??_sprintf+1)& (0+255),f,b
 16588  000C96  519A               	movf	sprintf@len& (0+255),w,b
 16589  000C98  5D8E               	subwf	??_sprintf& (0+255),w,b
 16590  000C9A  519B               	movf	(sprintf@len+1)& (0+255),w,b
 16591  000C9C  598F               	subwfb	(??_sprintf+1)& (0+255),w,b
 16592  000C9E  E205               	bc	l9210
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;doprnt.c: 754: len = prec;
 16596  000CA0  519F               	movf	sprintf@prec& (0+255),w,b
 16597  000CA2  6F9A               	movwf	sprintf@len& (0+255),b
 16598  000CA4  6B9B               	clrf	(sprintf@len+1)& (0+255),b
 16599  000CA6  BF9A               	btfsc	sprintf@len& (0+255),7,b
 16600  000CA8  079B               	decf	(sprintf@len+1)& (0+255),f,b
 16601  000CAA                     l9210:
 16602                           
 16603                           ; BSR set to: 0
 16604                           ;doprnt.c: 757: if(width > len)
 16605  000CAA  51A0               	movf	sprintf@width& (0+255),w,b
 16606  000CAC  5D9A               	subwf	sprintf@len& (0+255),w,b
 16607  000CAE  51A1               	movf	(sprintf@width+1)& (0+255),w,b
 16608  000CB0  599B               	subwfb	(sprintf@len+1)& (0+255),w,b
 16609  000CB2  E205               	bc	l1457
 16610                           
 16611                           ; BSR set to: 0
 16612                           ;doprnt.c: 758: width -= len;
 16613  000CB4  519A               	movf	sprintf@len& (0+255),w,b
 16614  000CB6  5FA0               	subwf	sprintf@width& (0+255),f,b
 16615  000CB8  519B               	movf	(sprintf@len+1)& (0+255),w,b
 16616  000CBA  5BA1               	subwfb	(sprintf@width+1)& (0+255),f,b
 16617  000CBC  D002               	goto	l1458
 16618  000CBE                     l1457:
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;doprnt.c: 759: else
 16622                           ;doprnt.c: 760: width = 0;
 16623  000CBE  6BA0               	clrf	sprintf@width& (0+255),b
 16624  000CC0  6BA1               	clrf	(sprintf@width+1)& (0+255),b
 16625  000CC2                     l1458:
 16626                           
 16627                           ; BSR set to: 0
 16628                           ;doprnt.c: 762: if(!(flag & 0x08))
 16629  000CC2  B7A3               	btfsc	sprintf@flag& (0+255),3,b
 16630  000CC4  D01D               	goto	l9228
 16631  000CC6  D008               	goto	l9220
 16632  000CC8                     l9216:
 16633                           
 16634                           ; BSR set to: 0
 16635                           ;doprnt.c: 765: ((*sp++ = (' ')));
 16636  000CC8  C082  FFD9         	movff	sprintf@sp,fsr2l
 16637  000CCC  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 16638  000CD0  0E20               	movlw	32
 16639  000CD2  6EDF               	movwf	indf2,c
 16640                           
 16641                           ; BSR set to: 0
 16642  000CD4  4B82               	infsnz	sprintf@sp& (0+255),f,b
 16643  000CD6  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 16644  000CD8                     l9220:
 16645                           
 16646                           ; BSR set to: 0
 16647  000CD8  07A0               	decf	sprintf@width& (0+255),f,b
 16648  000CDA  A0D8               	btfss	status,0,c
 16649  000CDC  07A1               	decf	(sprintf@width+1)& (0+255),f,b
 16650  000CDE  29A0               	incf	sprintf@width& (0+255),w,b
 16651  000CE0  E1F3               	bnz	l9216
 16652  000CE2  29A1               	incf	(sprintf@width+1)& (0+255),w,b
 16653  000CE4  E00D               	bz	l9228
 16654  000CE6  D7F0               	goto	l9216
 16655  000CE8                     l9222:
 16656                           
 16657                           ; BSR set to: 0
 16658                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 16659  000CE8  5199               	movf	sprintf@cp& (0+255),w,b
 16660  000CEA  6ED9               	movwf	fsr2l,c
 16661  000CEC  6ADA               	clrf	fsr2h,c
 16662  000CEE  C082  FFE1         	movff	sprintf@sp,fsr1l
 16663  000CF2  C083  FFE2         	movff	sprintf@sp+1,fsr1h
 16664  000CF6  CFDF FFE7          	movff	indf2,indf1
 16665                           
 16666                           ; BSR set to: 0
 16667  000CFA  2B99               	incf	sprintf@cp& (0+255),f,b
 16668                           
 16669                           ; BSR set to: 0
 16670  000CFC  4B82               	infsnz	sprintf@sp& (0+255),f,b
 16671  000CFE  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 16672  000D00                     l9228:
 16673                           
 16674                           ; BSR set to: 0
 16675  000D00  079A               	decf	sprintf@len& (0+255),f,b
 16676  000D02  A0D8               	btfss	status,0,c
 16677  000D04  079B               	decf	(sprintf@len+1)& (0+255),f,b
 16678  000D06  299A               	incf	sprintf@len& (0+255),w,b
 16679  000D08  E1EF               	bnz	l9222
 16680  000D0A  299B               	incf	(sprintf@len+1)& (0+255),w,b
 16681  000D0C  E1ED               	bnz	l9222
 16682                           
 16683                           ; BSR set to: 0
 16684                           ;doprnt.c: 770: if(flag & 0x08)
 16685  000D0E  A7A3               	btfss	sprintf@flag& (0+255),3,b
 16686  000D10  D280               	goto	l9464
 16687  000D12  D008               	goto	l9236
 16688  000D14                     l9232:
 16689                           
 16690                           ; BSR set to: 0
 16691                           ;doprnt.c: 772: ((*sp++ = (' ')));
 16692  000D14  C082  FFD9         	movff	sprintf@sp,fsr2l
 16693  000D18  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 16694  000D1C  0E20               	movlw	32
 16695  000D1E  6EDF               	movwf	indf2,c
 16696                           
 16697                           ; BSR set to: 0
 16698  000D20  4B82               	infsnz	sprintf@sp& (0+255),f,b
 16699  000D22  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 16700  000D24                     l9236:
 16701                           
 16702                           ; BSR set to: 0
 16703  000D24  07A0               	decf	sprintf@width& (0+255),f,b
 16704  000D26  A0D8               	btfss	status,0,c
 16705  000D28  07A1               	decf	(sprintf@width+1)& (0+255),f,b
 16706  000D2A  29A0               	incf	sprintf@width& (0+255),w,b
 16707  000D2C  E1F3               	bnz	l9232
 16708  000D2E  29A1               	incf	(sprintf@width+1)& (0+255),w,b
 16709  000D30  E101 D26F          	bz	l9464
 16710  000D34  D7EF               	goto	l9232
 16711  000D36                     l9238:
 16712                           
 16713                           ; BSR set to: 0
 16714                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 16715  000D36  519C               	movf	sprintf@ap& (0+255),w,b
 16716  000D38  6ED9               	movwf	fsr2l,c
 16717  000D3A  6ADA               	clrf	fsr2h,c
 16718  000D3C  50DF               	movf	indf2,w,c
 16719  000D3E  6FA2               	movwf	sprintf@c& (0+255),b
 16720                           
 16721                           ; BSR set to: 0
 16722  000D40  0E02               	movlw	2
 16723  000D42  279C               	addwf	sprintf@ap& (0+255),f,b
 16724  000D44                     l9242:
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;doprnt.c: 805: cp = (char *)&c;
 16728  000D44  0EA2               	movlw	low sprintf@c
 16729  000D46  6F99               	movwf	sprintf@cp& (0+255),b
 16730                           
 16731                           ; BSR set to: 0
 16732                           ;doprnt.c: 806: len = 1;
 16733  000D48  0E00               	movlw	0
 16734  000D4A  6F9B               	movwf	(sprintf@len+1)& (0+255),b
 16735  000D4C  0E01               	movlw	1
 16736  000D4E  6F9A               	movwf	sprintf@len& (0+255),b
 16737                           
 16738                           ;doprnt.c: 807: goto dostring;
 16739  000D50  D79B               	goto	l9204
 16740  000D52                     l9246:
 16741                           
 16742                           ; BSR set to: 0
 16743                           ;doprnt.c: 818: flag |= 0xC0;
 16744  000D52  0EC0               	movlw	192
 16745  000D54  13A3               	iorwf	sprintf@flag& (0+255),f,b
 16746                           
 16747                           ;doprnt.c: 819: break;
 16748  000D56  D01D               	goto	l9252
 16749  000D58                     l9250:
 16750                           
 16751                           ; BSR set to: 0
 16752  000D58  C084  FFF6         	movff	sprintf@f,tblptrl
 16753  000D5C  C085  FFF7         	movff	sprintf@f+1,tblptrh
 16754  000D60  4B84               	infsnz	sprintf@f& (0+255),f,b
 16755  000D62  2B85               	incf	(sprintf@f+1)& (0+255),f,b
 16756  000D64                     	if	0	;tblptru may be non-zero
 16757  000D64                     	endif
 16758  000D64                     	if	0	;tblptru may be non-zero
 16759  000D64                     	endif
 16760  000D64  0008               	tblrd		*
 16761  000D66  CFF5 F0A2          	movff	tablat,sprintf@c
 16762  000D6A  51A2               	movf	sprintf@c& (0+255),w,b
 16763                           
 16764                           ; Switch size 1, requested type "speed"
 16765                           ; Number of cases is 8, Range of values is 0 to 120
 16766                           ; switch strategies available:
 16767                           ; Name         Instructions Cycles
 16768                           ; simple_byte           25    13 (average)
 16769                           ;	Chosen strategy is simple_byte
 16770  000D6C  E101 D25D          	bz	l9466
 16771  000D70  0A58               	xorlw	88	; case 88
 16772  000D72  E087               	bz	l9202
 16773  000D74  0A3B               	xorlw	59	; case 99
 16774  000D76  E0DF               	bz	l9238
 16775  000D78  0A07               	xorlw	7	; case 100
 16776  000D7A  E00B               	bz	l9252
 16777  000D7C  0A0D               	xorlw	13	; case 105
 16778  000D7E  E009               	bz	l9252
 16779  000D80  0A06               	xorlw	6	; case 111
 16780  000D82  E101 D77C          	bz	l9200
 16781  000D86  0A1A               	xorlw	26	; case 117
 16782  000D88  E0E4               	bz	l9246
 16783  000D8A  0A0D               	xorlw	13	; case 120
 16784  000D8C  E101 D77A          	bz	l1454
 16785  000D90  D7D9               	goto	l9242
 16786  000D92                     l9252:
 16787                           
 16788                           ; BSR set to: 0
 16789                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 16790  000D92  C0A3  F08E         	movff	sprintf@flag,??_sprintf
 16791  000D96  0EC0               	movlw	192
 16792  000D98  178E               	andwf	??_sprintf& (0+255),f,b
 16793  000D9A  E112               	bnz	l9264
 16794                           
 16795                           ; BSR set to: 0
 16796                           ;doprnt.c: 1253: {
 16797                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 16798  000D9C  519C               	movf	sprintf@ap& (0+255),w,b
 16799  000D9E  6ED9               	movwf	fsr2l,c
 16800  000DA0  6ADA               	clrf	fsr2h,c
 16801  000DA2  CFDE F09D          	movff	postinc2,sprintf@val
 16802  000DA6  CFDD F09E          	movff	postdec2,sprintf@val+1
 16803                           
 16804                           ; BSR set to: 0
 16805  000DAA  0E02               	movlw	2
 16806  000DAC  279C               	addwf	sprintf@ap& (0+255),f,b
 16807                           
 16808                           ; BSR set to: 0
 16809                           ;doprnt.c: 1261: if((int)val < 0) {
 16810  000DAE  AF9E               	btfss	(sprintf@val+1)& (0+255),7,b
 16811  000DB0  D010               	goto	l9268
 16812                           
 16813                           ; BSR set to: 0
 16814                           ;doprnt.c: 1262: flag |= 0x03;
 16815  000DB2  0E03               	movlw	3
 16816  000DB4  13A3               	iorwf	sprintf@flag& (0+255),f,b
 16817                           
 16818                           ; BSR set to: 0
 16819                           ;doprnt.c: 1263: val = -val;
 16820  000DB6  6D9D               	negf	sprintf@val& (0+255),b
 16821  000DB8  1F9E               	comf	(sprintf@val+1)& (0+255),f,b
 16822  000DBA  B0D8               	btfsc	status,0,c
 16823  000DBC  2B9E               	incf	(sprintf@val+1)& (0+255),f,b
 16824  000DBE  D009               	goto	l9268
 16825  000DC0                     l9264:
 16826                           
 16827                           ; BSR set to: 0
 16828                           ;doprnt.c: 1268: else
 16829                           ;doprnt.c: 1273: {
 16830                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16831  000DC0  519C               	movf	sprintf@ap& (0+255),w,b
 16832  000DC2  6ED9               	movwf	fsr2l,c
 16833  000DC4  6ADA               	clrf	fsr2h,c
 16834  000DC6  CFDE F09D          	movff	postinc2,sprintf@val
 16835  000DCA  CFDD F09E          	movff	postdec2,sprintf@val+1
 16836                           
 16837                           ; BSR set to: 0
 16838  000DCE  0E02               	movlw	2
 16839  000DD0  279C               	addwf	sprintf@ap& (0+255),f,b
 16840  000DD2                     l9268:
 16841                           
 16842                           ; BSR set to: 0
 16843                           ;doprnt.c: 1287: }
 16844                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 16845  000DD2  519F               	movf	sprintf@prec& (0+255),w,b
 16846  000DD4  E147               	bnz	l9318
 16847                           
 16848                           ; BSR set to: 0
 16849  000DD6  519D               	movf	sprintf@val& (0+255),w,b
 16850  000DD8  119E               	iorwf	(sprintf@val+1)& (0+255),w,b
 16851  000DDA  E144               	bnz	l9318
 16852                           
 16853                           ; BSR set to: 0
 16854                           ;doprnt.c: 1291: prec++;
 16855  000DDC  2B9F               	incf	sprintf@prec& (0+255),f,b
 16856  000DDE  D042               	goto	l9318
 16857  000DE0                     l9274:
 16858                           
 16859                           ; BSR set to: 0
 16860                           ;doprnt.c: 1302: case 0xC0:
 16861                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16862  000DE0  0E01               	movlw	1
 16863  000DE2  6FA2               	movwf	sprintf@c& (0+255),b
 16864  000DE4                     l9276:
 16865                           
 16866                           ; BSR set to: 0
 16867  000DE4  0E05               	movlw	5
 16868  000DE6  19A2               	xorwf	sprintf@c& (0+255),w,b
 16869  000DE8  E046               	bz	l9320
 16870                           
 16871                           ; BSR set to: 0
 16872                           ;doprnt.c: 1306: if(val < dpowers[c])
 16873  000DEA  51A2               	movf	sprintf@c& (0+255),w,b
 16874  000DEC  0D02               	mullw	2
 16875  000DEE  0E91               	movlw	low _dpowers
 16876  000DF0  24F3               	addwf	prodl,w,c
 16877  000DF2  6EF6               	movwf	tblptrl,c
 16878  000DF4  0EFD               	movlw	high _dpowers
 16879  000DF6  20F4               	addwfc	prodh,w,c
 16880  000DF8  6EF7               	movwf	tblptrh,c
 16881  000DFA                     	if	0	;There are less than 3 active tblptr bytes
 16882  000DFA                     	endif
 16883  000DFA  0009               	tblrd		*+
 16884  000DFC  50F5               	movf	tablat,w,c
 16885  000DFE  5D9D               	subwf	sprintf@val& (0+255),w,b
 16886  000E00  0009               	tblrd		*+
 16887  000E02  50F5               	movf	tablat,w,c
 16888  000E04  599E               	subwfb	(sprintf@val+1)& (0+255),w,b
 16889  000E06  E337               	bnc	l9320
 16890                           
 16891                           ; BSR set to: 0
 16892  000E08  2BA2               	incf	sprintf@c& (0+255),f,b
 16893  000E0A  D7EC               	goto	l9276
 16894  000E0C                     l9288:
 16895                           
 16896                           ; BSR set to: 0
 16897                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16898  000E0C  0E01               	movlw	1
 16899  000E0E  6FA2               	movwf	sprintf@c& (0+255),b
 16900  000E10                     l9290:
 16901                           
 16902                           ; BSR set to: 0
 16903  000E10  0E04               	movlw	4
 16904  000E12  19A2               	xorwf	sprintf@c& (0+255),w,b
 16905  000E14  E030               	bz	l9320
 16906                           
 16907                           ; BSR set to: 0
 16908                           ;doprnt.c: 1317: if(val < hexpowers[c])
 16909  000E16  51A2               	movf	sprintf@c& (0+255),w,b
 16910  000E18  0D02               	mullw	2
 16911  000E1A  0E9B               	movlw	low _hexpowers
 16912  000E1C  24F3               	addwf	prodl,w,c
 16913  000E1E  6EF6               	movwf	tblptrl,c
 16914  000E20  0EFD               	movlw	high _hexpowers
 16915  000E22  20F4               	addwfc	prodh,w,c
 16916  000E24  6EF7               	movwf	tblptrh,c
 16917  000E26                     	if	0	;There are less than 3 active tblptr bytes
 16918  000E26                     	endif
 16919  000E26  0009               	tblrd		*+
 16920  000E28  50F5               	movf	tablat,w,c
 16921  000E2A  5D9D               	subwf	sprintf@val& (0+255),w,b
 16922  000E2C  0009               	tblrd		*+
 16923  000E2E  50F5               	movf	tablat,w,c
 16924  000E30  599E               	subwfb	(sprintf@val+1)& (0+255),w,b
 16925  000E32  E321               	bnc	l9320
 16926                           
 16927                           ; BSR set to: 0
 16928  000E34  2BA2               	incf	sprintf@c& (0+255),f,b
 16929  000E36  D7EC               	goto	l9290
 16930  000E38                     l9302:
 16931                           
 16932                           ; BSR set to: 0
 16933                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 16934  000E38  0E01               	movlw	1
 16935  000E3A  6FA2               	movwf	sprintf@c& (0+255),b
 16936  000E3C                     l9304:
 16937                           
 16938                           ; BSR set to: 0
 16939  000E3C  0E06               	movlw	6
 16940  000E3E  19A2               	xorwf	sprintf@c& (0+255),w,b
 16941  000E40  E01A               	bz	l9320
 16942                           
 16943                           ; BSR set to: 0
 16944                           ;doprnt.c: 1329: if(val < octpowers[c])
 16945  000E42  51A2               	movf	sprintf@c& (0+255),w,b
 16946  000E44  0D02               	mullw	2
 16947  000E46  0E85               	movlw	low _octpowers
 16948  000E48  24F3               	addwf	prodl,w,c
 16949  000E4A  6EF6               	movwf	tblptrl,c
 16950  000E4C  0EFD               	movlw	high _octpowers
 16951  000E4E  20F4               	addwfc	prodh,w,c
 16952  000E50  6EF7               	movwf	tblptrh,c
 16953  000E52                     	if	0	;There are less than 3 active tblptr bytes
 16954  000E52                     	endif
 16955  000E52  0009               	tblrd		*+
 16956  000E54  50F5               	movf	tablat,w,c
 16957  000E56  5D9D               	subwf	sprintf@val& (0+255),w,b
 16958  000E58  0009               	tblrd		*+
 16959  000E5A  50F5               	movf	tablat,w,c
 16960  000E5C  599E               	subwfb	(sprintf@val+1)& (0+255),w,b
 16961  000E5E  E30B               	bnc	l9320
 16962                           
 16963                           ; BSR set to: 0
 16964  000E60  2BA2               	incf	sprintf@c& (0+255),f,b
 16965  000E62  D7EC               	goto	l9304
 16966  000E64                     l9318:
 16967                           
 16968                           ; BSR set to: 0
 16969  000E64  51A3               	movf	sprintf@flag& (0+255),w,b
 16970  000E66  0BC0               	andlw	192
 16971                           
 16972                           ; Switch size 1, requested type "speed"
 16973                           ; Number of cases is 4, Range of values is 0 to 192
 16974                           ; switch strategies available:
 16975                           ; Name         Instructions Cycles
 16976                           ; simple_byte           13     7 (average)
 16977                           ;	Chosen strategy is simple_byte
 16978  000E68  E0BB               	bz	l9274
 16979  000E6A  0A40               	xorlw	64	; case 64
 16980  000E6C  E0E5               	bz	l9302
 16981  000E6E  0AC0               	xorlw	192	; case 128
 16982  000E70  E0CD               	bz	l9288
 16983  000E72  0A40               	xorlw	64	; case 192
 16984  000E74  E0B5               	bz	l9274
 16985  000E76                     l9320:
 16986                           
 16987                           ; BSR set to: 0
 16988                           ;doprnt.c: 1339: if(c < prec)
 16989  000E76  51A2               	movf	sprintf@c& (0+255),w,b
 16990  000E78  0A80               	xorlw	128
 16991  000E7A  6F8E               	movwf	??_sprintf& (0+255),b
 16992  000E7C  519F               	movf	sprintf@prec& (0+255),w,b
 16993  000E7E  0A80               	xorlw	128
 16994  000E80  5D8E               	subwf	??_sprintf& (0+255),w,b
 16995  000E82  E203               	bc	l9324
 16996                           
 16997                           ; BSR set to: 0
 16998                           ;doprnt.c: 1340: c = prec;
 16999  000E84  C09F  F0A2         	movff	sprintf@prec,sprintf@c
 17000  000E88  D009               	goto	l9328
 17001  000E8A                     l9324:
 17002                           
 17003                           ; BSR set to: 0
 17004                           ;doprnt.c: 1341: else if(prec < c)
 17005  000E8A  519F               	movf	sprintf@prec& (0+255),w,b
 17006  000E8C  0A80               	xorlw	128
 17007  000E8E  6F8E               	movwf	??_sprintf& (0+255),b
 17008  000E90  51A2               	movf	sprintf@c& (0+255),w,b
 17009  000E92  0A80               	xorlw	128
 17010  000E94  5D8E               	subwf	??_sprintf& (0+255),w,b
 17011  000E96  E202               	bc	l9328
 17012                           
 17013                           ; BSR set to: 0
 17014                           ;doprnt.c: 1342: prec = c;
 17015  000E98  C0A2  F09F         	movff	sprintf@c,sprintf@prec
 17016  000E9C                     l9328:
 17017                           
 17018                           ; BSR set to: 0
 17019                           ;doprnt.c: 1345: if(width && flag & 0x03)
 17020  000E9C  51A0               	movf	sprintf@width& (0+255),w,b
 17021  000E9E  11A1               	iorwf	(sprintf@width+1)& (0+255),w,b
 17022  000EA0  E008               	bz	l9334
 17023                           
 17024                           ; BSR set to: 0
 17025  000EA2  C0A3  F08E         	movff	sprintf@flag,??_sprintf
 17026  000EA6  0E03               	movlw	3
 17027  000EA8  178E               	andwf	??_sprintf& (0+255),f,b
 17028  000EAA  E003               	bz	l9334
 17029                           
 17030                           ; BSR set to: 0
 17031                           ;doprnt.c: 1346: width--;
 17032  000EAC  07A0               	decf	sprintf@width& (0+255),f,b
 17033  000EAE  A0D8               	btfss	status,0,c
 17034  000EB0  07A1               	decf	(sprintf@width+1)& (0+255),f,b
 17035  000EB2                     l9334:
 17036                           
 17037                           ; BSR set to: 0
 17038                           ;doprnt.c: 1348: if(flag & 0x4000) {
 17039  000EB2  ADA4               	btfss	(sprintf@flag+1)& (0+255),6,b
 17040  000EB4  D013               	goto	l9340
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;doprnt.c: 1349: if(width > prec)
 17044  000EB6  0E80               	movlw	128
 17045  000EB8  BF9F               	btfsc	sprintf@prec& (0+255),7,b
 17046  000EBA  0E7F               	movlw	127
 17047  000EBC  6F8E               	movwf	??_sprintf& (0+255),b
 17048  000EBE  51A0               	movf	sprintf@width& (0+255),w,b
 17049  000EC0  5D9F               	subwf	sprintf@prec& (0+255),w,b
 17050  000EC2  51A1               	movf	(sprintf@width+1)& (0+255),w,b
 17051  000EC4  0A80               	xorlw	128
 17052  000EC6  598E               	subwfb	??_sprintf& (0+255),w,b
 17053  000EC8  E207               	bc	l1497
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;doprnt.c: 1350: width -= prec;
 17057  000ECA  519F               	movf	sprintf@prec& (0+255),w,b
 17058  000ECC  5FA0               	subwf	sprintf@width& (0+255),f,b
 17059  000ECE  0E00               	movlw	0
 17060  000ED0  BF9F               	btfsc	sprintf@prec& (0+255),7,b
 17061  000ED2  0EFF               	movlw	255
 17062  000ED4  5BA1               	subwfb	(sprintf@width+1)& (0+255),f,b
 17063  000ED6  D002               	goto	l9340
 17064  000ED8                     l1497:
 17065                           
 17066                           ; BSR set to: 0
 17067                           ;doprnt.c: 1351: else
 17068                           ;doprnt.c: 1352: width = 0;
 17069  000ED8  6BA0               	clrf	sprintf@width& (0+255),b
 17070  000EDA  6BA1               	clrf	(sprintf@width+1)& (0+255),b
 17071  000EDC                     l9340:
 17072                           
 17073                           ; BSR set to: 0
 17074                           ;doprnt.c: 1353: }
 17075                           ;doprnt.c: 1357: if((flag & (
 17076                           ;doprnt.c: 1359: 0x04|
 17077                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 17078  000EDC  0EC4               	movlw	196
 17079  000EDE  6F8E               	movwf	??_sprintf& (0+255),b
 17080  000EE0  0E08               	movlw	8
 17081  000EE2  6F8F               	movwf	(??_sprintf+1)& (0+255),b
 17082  000EE4  C0A3  F090         	movff	sprintf@flag,??_sprintf+2
 17083  000EE8  C0A4  F091         	movff	sprintf@flag+1,??_sprintf+3
 17084  000EEC  518E               	movf	??_sprintf& (0+255),w,b
 17085  000EEE  1790               	andwf	(??_sprintf+2)& (0+255),f,b
 17086  000EF0  518F               	movf	(??_sprintf+1)& (0+255),w,b
 17087  000EF2  1791               	andwf	(??_sprintf+3)& (0+255),f,b
 17088  000EF4  0E40               	movlw	64
 17089  000EF6  1990               	xorwf	(??_sprintf+2)& (0+255),w,b
 17090  000EF8  E10A               	bnz	l9346
 17091  000EFA  0E08               	movlw	8
 17092  000EFC  1991               	xorwf	(??_sprintf+3)& (0+255),w,b
 17093  000EFE  E107               	bnz	l9346
 17094                           
 17095                           ; BSR set to: 0
 17096                           ;doprnt.c: 1362: if(width)
 17097  000F00  51A0               	movf	sprintf@width& (0+255),w,b
 17098  000F02  11A1               	iorwf	(sprintf@width+1)& (0+255),w,b
 17099  000F04  E024               	bz	l9352
 17100                           
 17101                           ; BSR set to: 0
 17102                           ;doprnt.c: 1363: width--;
 17103  000F06  07A0               	decf	sprintf@width& (0+255),f,b
 17104  000F08  A0D8               	btfss	status,0,c
 17105  000F0A  07A1               	decf	(sprintf@width+1)& (0+255),f,b
 17106  000F0C  D020               	goto	l9352
 17107  000F0E                     l9346:
 17108                           
 17109                           ; BSR set to: 0
 17110                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 17111  000F0E  0EC0               	movlw	192
 17112  000F10  6F8E               	movwf	??_sprintf& (0+255),b
 17113  000F12  0E08               	movlw	8
 17114  000F14  6F8F               	movwf	(??_sprintf+1)& (0+255),b
 17115  000F16  C0A3  F090         	movff	sprintf@flag,??_sprintf+2
 17116  000F1A  C0A4  F091         	movff	sprintf@flag+1,??_sprintf+3
 17117  000F1E  518E               	movf	??_sprintf& (0+255),w,b
 17118  000F20  1790               	andwf	(??_sprintf+2)& (0+255),f,b
 17119  000F22  518F               	movf	(??_sprintf+1)& (0+255),w,b
 17120  000F24  1791               	andwf	(??_sprintf+3)& (0+255),f,b
 17121  000F26  0E80               	movlw	128
 17122  000F28  1990               	xorwf	(??_sprintf+2)& (0+255),w,b
 17123  000F2A  E111               	bnz	l9352
 17124  000F2C  0E08               	movlw	8
 17125  000F2E  1991               	xorwf	(??_sprintf+3)& (0+255),w,b
 17126  000F30  E10E               	bnz	l9352
 17127                           
 17128                           ; BSR set to: 0
 17129                           ;doprnt.c: 1372: if(width > 2)
 17130  000F32  BFA1               	btfsc	(sprintf@width+1)& (0+255),7,b
 17131  000F34  D00A               	goto	l1503
 17132  000F36  51A1               	movf	(sprintf@width+1)& (0+255),w,b
 17133  000F38  E103               	bnz	u9320
 17134  000F3A  0E03               	movlw	3
 17135  000F3C  5DA0               	subwf	sprintf@width& (0+255),w,b
 17136  000F3E  E305               	bnc	l1503
 17137  000F40                     u9320:
 17138                           
 17139                           ; BSR set to: 0
 17140                           ;doprnt.c: 1373: width -= 2;
 17141  000F40  0EFE               	movlw	254
 17142  000F42  27A0               	addwf	sprintf@width& (0+255),f,b
 17143  000F44  0EFF               	movlw	255
 17144  000F46  23A1               	addwfc	(sprintf@width+1)& (0+255),f,b
 17145  000F48  D002               	goto	l9352
 17146  000F4A                     l1503:
 17147                           
 17148                           ; BSR set to: 0
 17149                           ;doprnt.c: 1374: else
 17150                           ;doprnt.c: 1375: width = 0;
 17151  000F4A  6BA0               	clrf	sprintf@width& (0+255),b
 17152  000F4C  6BA1               	clrf	(sprintf@width+1)& (0+255),b
 17153  000F4E                     l9352:
 17154                           
 17155                           ; BSR set to: 0
 17156                           ;doprnt.c: 1376: }
 17157                           ;doprnt.c: 1381: if(width > c)
 17158  000F4E  0E80               	movlw	128
 17159  000F50  BFA2               	btfsc	sprintf@c& (0+255),7,b
 17160  000F52  0E7F               	movlw	127
 17161  000F54  6F8E               	movwf	??_sprintf& (0+255),b
 17162  000F56  51A0               	movf	sprintf@width& (0+255),w,b
 17163  000F58  5DA2               	subwf	sprintf@c& (0+255),w,b
 17164  000F5A  51A1               	movf	(sprintf@width+1)& (0+255),w,b
 17165  000F5C  0A80               	xorlw	128
 17166  000F5E  598E               	subwfb	??_sprintf& (0+255),w,b
 17167  000F60  E207               	bc	l1505
 17168                           
 17169                           ; BSR set to: 0
 17170                           ;doprnt.c: 1382: width -= c;
 17171  000F62  51A2               	movf	sprintf@c& (0+255),w,b
 17172  000F64  5FA0               	subwf	sprintf@width& (0+255),f,b
 17173  000F66  0E00               	movlw	0
 17174  000F68  BFA2               	btfsc	sprintf@c& (0+255),7,b
 17175  000F6A  0EFF               	movlw	255
 17176  000F6C  5BA1               	subwfb	(sprintf@width+1)& (0+255),f,b
 17177  000F6E  D002               	goto	l1506
 17178  000F70                     l1505:
 17179                           
 17180                           ; BSR set to: 0
 17181                           ;doprnt.c: 1383: else
 17182                           ;doprnt.c: 1384: width = 0;
 17183  000F70  6BA0               	clrf	sprintf@width& (0+255),b
 17184  000F72  6BA1               	clrf	(sprintf@width+1)& (0+255),b
 17185  000F74                     l1506:
 17186                           
 17187                           ; BSR set to: 0
 17188                           ;doprnt.c: 1387: if(flag & 0x04) {
 17189  000F74  A5A3               	btfss	sprintf@flag& (0+255),2,b
 17190  000F76  D04F               	goto	l9390
 17191                           
 17192                           ; BSR set to: 0
 17193                           ;doprnt.c: 1392: if(flag & 0x03)
 17194  000F78  C0A3  F08E         	movff	sprintf@flag,??_sprintf
 17195  000F7C  0E03               	movlw	3
 17196  000F7E  178E               	andwf	??_sprintf& (0+255),f,b
 17197  000F80  E009               	bz	l1508
 17198                           
 17199                           ; BSR set to: 0
 17200                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 17201  000F82  C082  FFD9         	movff	sprintf@sp,fsr2l
 17202  000F86  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17203  000F8A  0E2D               	movlw	45
 17204  000F8C  6EDF               	movwf	indf2,c
 17205  000F8E                     l9360:
 17206                           
 17207                           ; BSR set to: 0
 17208  000F8E  4B82               	infsnz	sprintf@sp& (0+255),f,b
 17209  000F90  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 17210  000F92  D031               	goto	l9382
 17211  000F94                     l1508:
 17212                           
 17213                           ; BSR set to: 0
 17214                           ;doprnt.c: 1396: else
 17215                           ;doprnt.c: 1399: if(flag & 0x01)
 17216  000F94  A1A3               	btfss	sprintf@flag& (0+255),0,b
 17217  000F96  D006               	goto	l9366
 17218                           
 17219                           ; BSR set to: 0
 17220                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 17221  000F98  C082  FFD9         	movff	sprintf@sp,fsr2l
 17222  000F9C  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17223  000FA0  0E20               	movlw	32
 17224  000FA2  D7F4               	goto	L2
 17225  000FA4                     l9366:
 17226                           
 17227                           ; BSR set to: 0
 17228                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 17229  000FA4  0EC0               	movlw	192
 17230  000FA6  6F8E               	movwf	??_sprintf& (0+255),b
 17231  000FA8  0E08               	movlw	8
 17232  000FAA  6F8F               	movwf	(??_sprintf+1)& (0+255),b
 17233  000FAC  C0A3  F090         	movff	sprintf@flag,??_sprintf+2
 17234  000FB0  C0A4  F091         	movff	sprintf@flag+1,??_sprintf+3
 17235  000FB4  518E               	movf	??_sprintf& (0+255),w,b
 17236  000FB6  1790               	andwf	(??_sprintf+2)& (0+255),f,b
 17237  000FB8  518F               	movf	(??_sprintf+1)& (0+255),w,b
 17238  000FBA  1791               	andwf	(??_sprintf+3)& (0+255),f,b
 17239  000FBC  0E80               	movlw	128
 17240  000FBE  1990               	xorwf	(??_sprintf+2)& (0+255),w,b
 17241  000FC0  E11A               	bnz	l9382
 17242  000FC2  0E08               	movlw	8
 17243  000FC4  1991               	xorwf	(??_sprintf+3)& (0+255),w,b
 17244  000FC6  E117               	bnz	l9382
 17245                           
 17246                           ; BSR set to: 0
 17247                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 17248  000FC8  C082  FFD9         	movff	sprintf@sp,fsr2l
 17249  000FCC  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17250  000FD0  0E30               	movlw	48
 17251  000FD2  6EDF               	movwf	indf2,c
 17252                           
 17253                           ; BSR set to: 0
 17254  000FD4  4B82               	infsnz	sprintf@sp& (0+255),f,b
 17255  000FD6  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 17256                           
 17257                           ; BSR set to: 0
 17258                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 17259  000FD8  BBA3               	btfsc	sprintf@flag& (0+255),5,b
 17260  000FDA  D003               	goto	l9376
 17261                           
 17262                           ; BSR set to: 0
 17263  000FDC  6B94               	clrf	(_sprintf$3865+1)& (0+255),b
 17264  000FDE  0E78               	movlw	120
 17265  000FE0  D002               	goto	L3
 17266  000FE2                     l9376:
 17267                           
 17268                           ; BSR set to: 0
 17269  000FE2  6B94               	clrf	(_sprintf$3865+1)& (0+255),b
 17270  000FE4  0E58               	movlw	88
 17271  000FE6                     L3:
 17272  000FE6  6F93               	movwf	_sprintf$3865& (0+255),b
 17273                           
 17274                           ; BSR set to: 0
 17275  000FE8  C082  FFD9         	movff	sprintf@sp,fsr2l
 17276  000FEC  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17277  000FF0  C093  FFDF         	movff	_sprintf$3865,indf2
 17278  000FF4  D7CC               	goto	l9360
 17279  000FF6                     l9382:
 17280                           
 17281                           ; BSR set to: 0
 17282                           ;doprnt.c: 1412: }
 17283                           ;doprnt.c: 1415: if(width)
 17284  000FF6  51A0               	movf	sprintf@width& (0+255),w,b
 17285  000FF8  11A1               	iorwf	(sprintf@width+1)& (0+255),w,b
 17286  000FFA  E101 D0F2          	bz	l9454
 17287                           
 17288                           ; BSR set to: 0
 17289                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 17290  000FFE  C082  FFD9         	movff	sprintf@sp,fsr2l
 17291  001002  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17292  001006  0E30               	movlw	48
 17293  001008  6EDF               	movwf	indf2,c
 17294                           
 17295                           ; BSR set to: 0
 17296  00100A  4B82               	infsnz	sprintf@sp& (0+255),f,b
 17297  00100C  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 17298                           
 17299                           ; BSR set to: 0
 17300                           ;doprnt.c: 1418: while(--width);
 17301  00100E  07A0               	decf	sprintf@width& (0+255),f,b
 17302  001010  A0D8               	btfss	status,0,c
 17303  001012  07A1               	decf	(sprintf@width+1)& (0+255),f,b
 17304  001014  D7F0               	goto	l9382
 17305  001016                     l9390:
 17306                           
 17307                           ; BSR set to: 0
 17308                           ;doprnt.c: 1422: {
 17309                           ;doprnt.c: 1424: if(width
 17310                           ;doprnt.c: 1426: && !(flag & 0x08)
 17311                           ;doprnt.c: 1428: )
 17312  001016  51A0               	movf	sprintf@width& (0+255),w,b
 17313  001018  11A1               	iorwf	(sprintf@width+1)& (0+255),w,b
 17314  00101A  E010               	bz	l9400
 17315                           
 17316                           ; BSR set to: 0
 17317  00101C  B7A3               	btfsc	sprintf@flag& (0+255),3,b
 17318  00101E  D00E               	goto	l9400
 17319  001020                     l9394:
 17320                           
 17321                           ; BSR set to: 0
 17322                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 17323  001020  C082  FFD9         	movff	sprintf@sp,fsr2l
 17324  001024  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17325  001028  0E20               	movlw	32
 17326  00102A  6EDF               	movwf	indf2,c
 17327                           
 17328                           ; BSR set to: 0
 17329  00102C  4B82               	infsnz	sprintf@sp& (0+255),f,b
 17330  00102E  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 17331                           
 17332                           ; BSR set to: 0
 17333                           ;doprnt.c: 1431: while(--width);
 17334  001030  07A0               	decf	sprintf@width& (0+255),f,b
 17335  001032  A0D8               	btfss	status,0,c
 17336  001034  07A1               	decf	(sprintf@width+1)& (0+255),f,b
 17337  001036  51A0               	movf	sprintf@width& (0+255),w,b
 17338  001038  11A1               	iorwf	(sprintf@width+1)& (0+255),w,b
 17339  00103A  E1F2               	bnz	l9394
 17340  00103C                     l9400:
 17341                           
 17342                           ; BSR set to: 0
 17343                           ;doprnt.c: 1438: if(flag & 0x03)
 17344  00103C  C0A3  F08E         	movff	sprintf@flag,??_sprintf
 17345  001040  0E03               	movlw	3
 17346  001042  178E               	andwf	??_sprintf& (0+255),f,b
 17347  001044  E009               	bz	l1524
 17348                           
 17349                           ; BSR set to: 0
 17350                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 17351  001046  C082  FFD9         	movff	sprintf@sp,fsr2l
 17352  00104A  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17353  00104E  0E2D               	movlw	45
 17354  001050  6EDF               	movwf	indf2,c
 17355                           
 17356                           ; BSR set to: 0
 17357  001052  4B82               	infsnz	sprintf@sp& (0+255),f,b
 17358  001054  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 17359  001056  D008               	goto	l9410
 17360  001058                     l1524:
 17361                           
 17362                           ; BSR set to: 0
 17363                           ;doprnt.c: 1443: else if(flag & 0x01)
 17364  001058  A1A3               	btfss	sprintf@flag& (0+255),0,b
 17365  00105A  D006               	goto	l9410
 17366                           
 17367                           ; BSR set to: 0
 17368                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 17369  00105C  C082  FFD9         	movff	sprintf@sp,fsr2l
 17370  001060  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17371  001064  0E20               	movlw	32
 17372  001066  D7F4               	goto	L4
 17373  001068                     l9410:
 17374                           
 17375                           ; BSR set to: 0
 17376                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 17377  001068  0EC0               	movlw	192
 17378  00106A  6F8E               	movwf	??_sprintf& (0+255),b
 17379  00106C  0E08               	movlw	8
 17380  00106E  6F8F               	movwf	(??_sprintf+1)& (0+255),b
 17381  001070  C0A3  F090         	movff	sprintf@flag,??_sprintf+2
 17382  001074  C0A4  F091         	movff	sprintf@flag+1,??_sprintf+3
 17383  001078  518E               	movf	??_sprintf& (0+255),w,b
 17384  00107A  1790               	andwf	(??_sprintf+2)& (0+255),f,b
 17385  00107C  518F               	movf	(??_sprintf+1)& (0+255),w,b
 17386  00107E  1791               	andwf	(??_sprintf+3)& (0+255),f,b
 17387  001080  0E40               	movlw	64
 17388  001082  1990               	xorwf	(??_sprintf+2)& (0+255),w,b
 17389  001084  E10C               	bnz	l9416
 17390  001086  0E08               	movlw	8
 17391  001088  1991               	xorwf	(??_sprintf+3)& (0+255),w,b
 17392  00108A  E109               	bnz	l9416
 17393                           
 17394                           ; BSR set to: 0
 17395                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 17396  00108C  C082  FFD9         	movff	sprintf@sp,fsr2l
 17397  001090  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17398  001094  0E30               	movlw	48
 17399  001096  6EDF               	movwf	indf2,c
 17400  001098                     l9414:
 17401                           
 17402                           ; BSR set to: 0
 17403  001098  4B82               	infsnz	sprintf@sp& (0+255),f,b
 17404  00109A  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 17405  00109C  D0A2               	goto	l9454
 17406  00109E                     l9416:
 17407                           
 17408                           ; BSR set to: 0
 17409                           ;doprnt.c: 1450: else
 17410                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 17411  00109E  0EC0               	movlw	192
 17412  0010A0  6F8E               	movwf	??_sprintf& (0+255),b
 17413  0010A2  0E08               	movlw	8
 17414  0010A4  6F8F               	movwf	(??_sprintf+1)& (0+255),b
 17415  0010A6  C0A3  F090         	movff	sprintf@flag,??_sprintf+2
 17416  0010AA  C0A4  F091         	movff	sprintf@flag+1,??_sprintf+3
 17417  0010AE  518E               	movf	??_sprintf& (0+255),w,b
 17418  0010B0  1790               	andwf	(??_sprintf+2)& (0+255),f,b
 17419  0010B2  518F               	movf	(??_sprintf+1)& (0+255),w,b
 17420  0010B4  1791               	andwf	(??_sprintf+3)& (0+255),f,b
 17421  0010B6  0E80               	movlw	128
 17422  0010B8  1990               	xorwf	(??_sprintf+2)& (0+255),w,b
 17423  0010BA  E11B               	bnz	l1520
 17424  0010BC  0E08               	movlw	8
 17425  0010BE  1991               	xorwf	(??_sprintf+3)& (0+255),w,b
 17426  0010C0  E001 D08F          	bnz	l9454
 17427                           
 17428                           ; BSR set to: 0
 17429                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 17430  0010C4  C082  FFD9         	movff	sprintf@sp,fsr2l
 17431  0010C8  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17432  0010CC  0E30               	movlw	48
 17433  0010CE  6EDF               	movwf	indf2,c
 17434                           
 17435                           ; BSR set to: 0
 17436  0010D0  4B82               	infsnz	sprintf@sp& (0+255),f,b
 17437  0010D2  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 17438                           
 17439                           ; BSR set to: 0
 17440                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 17441  0010D4  BBA3               	btfsc	sprintf@flag& (0+255),5,b
 17442  0010D6  D003               	goto	l9426
 17443                           
 17444                           ; BSR set to: 0
 17445  0010D8  6B96               	clrf	(_sprintf$3866+1)& (0+255),b
 17446  0010DA  0E78               	movlw	120
 17447  0010DC  D002               	goto	L5
 17448  0010DE                     l9426:
 17449                           
 17450                           ; BSR set to: 0
 17451  0010DE  6B96               	clrf	(_sprintf$3866+1)& (0+255),b
 17452  0010E0  0E58               	movlw	88
 17453  0010E2                     L5:
 17454  0010E2  6F95               	movwf	_sprintf$3866& (0+255),b
 17455                           
 17456                           ; BSR set to: 0
 17457  0010E4  C082  FFD9         	movff	sprintf@sp,fsr2l
 17458  0010E8  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17459  0010EC  C095  FFDF         	movff	_sprintf$3866,indf2
 17460  0010F0  D7D3               	goto	l9414
 17461  0010F2                     l1520:
 17462                           
 17463                           ; BSR set to: 0
 17464                           ;doprnt.c: 1466: }
 17465                           ;doprnt.c: 1469: }
 17466                           ;doprnt.c: 1474: while(prec--) {
 17467  0010F2  D077               	goto	l9454
 17468  0010F4                     l9432:
 17469                           
 17470                           ; BSR set to: 0
 17471                           ;doprnt.c: 1486: case 0xC0:
 17472                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 17473  0010F4  519F               	movf	sprintf@prec& (0+255),w,b
 17474  0010F6  0D02               	mullw	2
 17475  0010F8  0E91               	movlw	low _dpowers
 17476  0010FA  24F3               	addwf	prodl,w,c
 17477  0010FC  6EF6               	movwf	tblptrl,c
 17478  0010FE  0EFD               	movlw	high _dpowers
 17479  001100  20F4               	addwfc	prodh,w,c
 17480  001102  6EF7               	movwf	tblptrh,c
 17481  001104                     	if	0	;There are less than 3 active tblptr bytes
 17482  001104                     	endif
 17483  001104  0009               	tblrd		*+
 17484  001106  CFF5 F078          	movff	tablat,___lwdiv@divisor
 17485  00110A  000A               	tblrd		*-
 17486  00110C  CFF5 F079          	movff	tablat,___lwdiv@divisor+1
 17487  001110  C09D  F076         	movff	sprintf@val,___lwdiv@dividend
 17488  001114  C09E  F077         	movff	sprintf@val+1,___lwdiv@dividend+1
 17489  001118  ECB7  F01D         	call	___lwdiv	;wreg free
 17490  00111C  C076  F07D         	movff	?___lwdiv,___lwmod@dividend
 17491  001120  C077  F07E         	movff	?___lwdiv+1,___lwmod@dividend+1
 17492  001124  6B80               	clrf	(___lwmod@divisor+1)& (0+255),b
 17493  001126  0E0A               	movlw	10
 17494  001128  6F7F               	movwf	___lwmod@divisor& (0+255),b
 17495  00112A  ECC3  F01E         	call	___lwmod	;wreg free
 17496  00112E  517D               	movf	?___lwmod& (0+255),w,b
 17497  001130  D045               	goto	L6
 17498  001132                     l9434:
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;doprnt.c: 1499: {
 17502                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 17503  001132  C09D  F076         	movff	sprintf@val,___lwdiv@dividend
 17504  001136  C09E  F077         	movff	sprintf@val+1,___lwdiv@dividend+1
 17505  00113A  519F               	movf	sprintf@prec& (0+255),w,b
 17506  00113C  0D02               	mullw	2
 17507  00113E  0E9B               	movlw	low _hexpowers
 17508  001140  24F3               	addwf	prodl,w,c
 17509  001142  6EF6               	movwf	tblptrl,c
 17510  001144  0EFD               	movlw	high _hexpowers
 17511  001146  20F4               	addwfc	prodh,w,c
 17512  001148  6EF7               	movwf	tblptrh,c
 17513  00114A                     	if	0	;There are less than 3 active tblptr bytes
 17514  00114A                     	endif
 17515  00114A  0009               	tblrd		*+
 17516  00114C  CFF5 F078          	movff	tablat,___lwdiv@divisor
 17517  001150  000A               	tblrd		*-
 17518  001152  CFF5 F079          	movff	tablat,___lwdiv@divisor+1
 17519  001156  ECB7  F01D         	call	___lwdiv	;wreg free
 17520  00115A  5176               	movf	?___lwdiv& (0+255),w,b
 17521  00115C  0B0F               	andlw	15
 17522  00115E  6F92               	movwf	sprintf@idx& (0+255),b
 17523                           
 17524                           ; BSR set to: 0
 17525                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 17526  001160  BBA3               	btfsc	sprintf@flag& (0+255),5,b
 17527  001162  D004               	goto	l9440
 17528                           
 17529                           ; BSR set to: 0
 17530  001164  0E6C               	movlw	low STR_37
 17531  001166  6F97               	movwf	_sprintf$3872& (0+255),b
 17532  001168  0EFF               	movlw	high STR_37
 17533  00116A  D003               	goto	L7
 17534  00116C                     l9440:
 17535                           
 17536                           ; BSR set to: 0
 17537  00116C  0E5B               	movlw	low STR_36
 17538  00116E  6F97               	movwf	_sprintf$3872& (0+255),b
 17539  001170  0EFF               	movlw	high STR_36
 17540  001172                     L7:
 17541  001172  6F98               	movwf	(_sprintf$3872+1)& (0+255),b
 17542                           
 17543                           ; BSR set to: 0
 17544  001174  5192               	movf	sprintf@idx& (0+255),w,b
 17545  001176  2597               	addwf	_sprintf$3872& (0+255),w,b
 17546  001178  6F8E               	movwf	??_sprintf& (0+255),b
 17547  00117A  0E00               	movlw	0
 17548  00117C  2198               	addwfc	(_sprintf$3872+1)& (0+255),w,b
 17549  00117E  6F8F               	movwf	(??_sprintf+1)& (0+255),b
 17550  001180  C08E  FFF6         	movff	??_sprintf,tblptrl
 17551  001184  C08F  FFF7         	movff	??_sprintf+1,tblptrh
 17552  001188                     	if	0	;tblptru may be non-zero
 17553  001188                     	endif
 17554  001188                     	if	0	;tblptru may be non-zero
 17555  001188                     	endif
 17556  001188  0008               	tblrd		*
 17557  00118A  CFF5 F0A2          	movff	tablat,sprintf@c
 17558                           
 17559                           ;doprnt.c: 1508: }
 17560                           ;doprnt.c: 1510: break;
 17561  00118E  D022               	goto	l9450
 17562  001190                     l9444:
 17563                           
 17564                           ; BSR set to: 0
 17565                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 17566  001190  C09D  F076         	movff	sprintf@val,___lwdiv@dividend
 17567  001194  C09E  F077         	movff	sprintf@val+1,___lwdiv@dividend+1
 17568  001198  519F               	movf	sprintf@prec& (0+255),w,b
 17569  00119A  0D02               	mullw	2
 17570  00119C  0E85               	movlw	low _octpowers
 17571  00119E  24F3               	addwf	prodl,w,c
 17572  0011A0  6EF6               	movwf	tblptrl,c
 17573  0011A2  0EFD               	movlw	high _octpowers
 17574  0011A4  20F4               	addwfc	prodh,w,c
 17575  0011A6  6EF7               	movwf	tblptrh,c
 17576  0011A8                     	if	0	;There are less than 3 active tblptr bytes
 17577  0011A8                     	endif
 17578  0011A8  0009               	tblrd		*+
 17579  0011AA  CFF5 F078          	movff	tablat,___lwdiv@divisor
 17580  0011AE  000A               	tblrd		*-
 17581  0011B0  CFF5 F079          	movff	tablat,___lwdiv@divisor+1
 17582  0011B4  ECB7  F01D         	call	___lwdiv	;wreg free
 17583  0011B8  5176               	movf	?___lwdiv& (0+255),w,b
 17584  0011BA  0B07               	andlw	7
 17585  0011BC                     L6:
 17586  0011BC  0F30               	addlw	48
 17587  0011BE  6FA2               	movwf	sprintf@c& (0+255),b
 17588                           
 17589                           ;doprnt.c: 1520: break;
 17590  0011C0  D009               	goto	l9450
 17591  0011C2                     l9448:
 17592                           
 17593                           ; BSR set to: 0
 17594  0011C2  51A3               	movf	sprintf@flag& (0+255),w,b
 17595  0011C4  0BC0               	andlw	192
 17596                           
 17597                           ; Switch size 1, requested type "speed"
 17598                           ; Number of cases is 4, Range of values is 0 to 192
 17599                           ; switch strategies available:
 17600                           ; Name         Instructions Cycles
 17601                           ; simple_byte           13     7 (average)
 17602                           ;	Chosen strategy is simple_byte
 17603  0011C6  E096               	bz	l9432
 17604  0011C8  0A40               	xorlw	64	; case 64
 17605  0011CA  E0E2               	bz	l9444
 17606  0011CC  0AC0               	xorlw	192	; case 128
 17607  0011CE  E0B1               	bz	l9434
 17608  0011D0  0A40               	xorlw	64	; case 192
 17609  0011D2  E090               	bz	l9432
 17610  0011D4                     l9450:
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;doprnt.c: 1524: ((*sp++ = (c)));
 17614  0011D4  C082  FFD9         	movff	sprintf@sp,fsr2l
 17615  0011D8  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17616  0011DC  C0A2  FFDF         	movff	sprintf@c,indf2
 17617  0011E0  D75B               	goto	l9414
 17618  0011E2                     l9454:
 17619                           
 17620                           ; BSR set to: 0
 17621  0011E2  079F               	decf	sprintf@prec& (0+255),f,b
 17622  0011E4  299F               	incf	sprintf@prec& (0+255),w,b
 17623  0011E6  E1ED               	bnz	l9448
 17624                           
 17625                           ; BSR set to: 0
 17626                           ;doprnt.c: 1525: }
 17627                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 17628  0011E8  B7A3               	btfsc	sprintf@flag& (0+255),3,b
 17629                           
 17630                           ; BSR set to: 0
 17631  0011EA  BFA1               	btfsc	(sprintf@width+1)& (0+255),7,b
 17632  0011EC  D012               	goto	l9464
 17633  0011EE  51A1               	movf	(sprintf@width+1)& (0+255),w,b
 17634  0011F0  E102               	bnz	u9520
 17635  0011F2  05A0               	decf	sprintf@width& (0+255),w,b
 17636  0011F4  E30E               	bnc	l9464
 17637  0011F6                     u9520:
 17638  0011F6                     l9458:
 17639                           
 17640                           ; BSR set to: 0
 17641                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 17642  0011F6  C082  FFD9         	movff	sprintf@sp,fsr2l
 17643  0011FA  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17644  0011FE  0E20               	movlw	32
 17645  001200  6EDF               	movwf	indf2,c
 17646                           
 17647                           ; BSR set to: 0
 17648  001202  4B82               	infsnz	sprintf@sp& (0+255),f,b
 17649  001204  2B83               	incf	(sprintf@sp+1)& (0+255),f,b
 17650                           
 17651                           ; BSR set to: 0
 17652                           ;doprnt.c: 1531: while(--width);
 17653  001206  07A0               	decf	sprintf@width& (0+255),f,b
 17654  001208  A0D8               	btfss	status,0,c
 17655  00120A  07A1               	decf	(sprintf@width+1)& (0+255),f,b
 17656  00120C  51A0               	movf	sprintf@width& (0+255),w,b
 17657  00120E  11A1               	iorwf	(sprintf@width+1)& (0+255),w,b
 17658  001210  E1F2               	bnz	l9458
 17659  001212                     l9464:
 17660                           
 17661                           ; BSR set to: 0
 17662  001212  C084  FFF6         	movff	sprintf@f,tblptrl
 17663  001216  C085  FFF7         	movff	sprintf@f+1,tblptrh
 17664  00121A  4B84               	infsnz	sprintf@f& (0+255),f,b
 17665  00121C  2B85               	incf	(sprintf@f+1)& (0+255),f,b
 17666  00121E                     	if	0	;tblptru may be non-zero
 17667  00121E                     	endif
 17668  00121E                     	if	0	;tblptru may be non-zero
 17669  00121E                     	endif
 17670  00121E  0008               	tblrd		*
 17671  001220  CFF5 F0A2          	movff	tablat,sprintf@c
 17672  001224  51A2               	movf	sprintf@c& (0+255),w,b
 17673  001226  E001 D47C          	bnz	l9142
 17674  00122A                     l9466:
 17675                           
 17676                           ; BSR set to: 0
 17677                           ;doprnt.c: 1538: *sp = 0;
 17678  00122A  C082  FFD9         	movff	sprintf@sp,fsr2l
 17679  00122E  C083  FFDA         	movff	sprintf@sp+1,fsr2h
 17680  001232  6ADF               	clrf	indf2,c
 17681                           
 17682                           ; BSR set to: 0
 17683  001234  0C00               	retlw	0	;funcret
 17684  001236                     __end_of_sprintf:
 17685                           	opt stack 0
 17686                           tblptru	equ	0xFF8
 17687                           tblptrh	equ	0xFF7
 17688                           tblptrl	equ	0xFF6
 17689                           tablat	equ	0xFF5
 17690                           prodh	equ	0xFF4
 17691                           prodl	equ	0xFF3
 17692                           intcon	equ	0xFF2
 17693                           intcon2	equ	0xFF1
 17694                           intcon3	equ	0xFF0
 17695                           postinc0	equ	0xFEE
 17696                           wreg	equ	0xFE8
 17697                           indf1	equ	0xFE7
 17698                           postinc1	equ	0xFE6
 17699                           fsr1h	equ	0xFE2
 17700                           fsr1l	equ	0xFE1
 17701                           indf2	equ	0xFDF
 17702                           postinc2	equ	0xFDE
 17703                           postdec2	equ	0xFDD
 17704                           fsr2h	equ	0xFDA
 17705                           fsr2l	equ	0xFD9
 17706                           status	equ	0xFD8
 17707                           
 17708 ;; *************** function _isdigit *****************
 17709 ;; Defined at:
 17710 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 17711 ;; Parameters:    Size  Location     Type
 17712 ;;  c               1    wreg     unsigned char 
 17713 ;; Auto vars:     Size  Location     Type
 17714 ;;  c               1   24[BANK0 ] unsigned char 
 17715 ;; Return value:  Size  Location     Type
 17716 ;;		None               void
 17717 ;; Registers used:
 17718 ;;		wreg, status,2, status,0
 17719 ;; Tracked objects:
 17720 ;;		On entry : F/0
 17721 ;;		On exit  : F/0
 17722 ;;		Unchanged: 0/0
 17723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17725 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17726 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17727 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17728 ;;Total ram usage:        3 bytes
 17729 ;; Hardware stack levels used:    1
 17730 ;; Hardware stack levels required when called:    8
 17731 ;; This function calls:
 17732 ;;		Nothing
 17733 ;; This function is called by:
 17734 ;;		_sprintf
 17735 ;; This function uses a non-reentrant model
 17736 ;;
 17737                           
 17738                           	psect	text71
 17739  00413A                     __ptext71:
 17740                           	opt stack 0
 17741  00413A                     _isdigit:
 17742                           	opt stack 19
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;incstack = 0
 17746                           ;isdigit@c stored from wreg
 17747  00413A  6F78               	movwf	isdigit@c& (0+255),b
 17748  00413C  0100               	movlb	0	; () banked
 17749  00413E  6B77               	clrf	_isdigit$4096& (0+255),b
 17750                           
 17751                           ; BSR set to: 0
 17752  004140  0E3A               	movlw	58
 17753  004142  6178               	cpfslt	isdigit@c& (0+255),b
 17754  004144  D005               	goto	l8966
 17755                           
 17756                           ; BSR set to: 0
 17757  004146  0E2F               	movlw	47
 17758  004148  6578               	cpfsgt	isdigit@c& (0+255),b
 17759  00414A  D002               	goto	l8966
 17760                           
 17761                           ; BSR set to: 0
 17762  00414C  0E01               	movlw	1
 17763  00414E  6F77               	movwf	_isdigit$4096& (0+255),b
 17764  004150                     l8966:
 17765                           
 17766                           ; BSR set to: 0
 17767  004150  C077  F076         	movff	_isdigit$4096,??_isdigit
 17768  004154  3176               	rrcf	??_isdigit& (0+255),w,b
 17769                           
 17770                           ; BSR set to: 0
 17771  004156  0012               	return		;funcret
 17772  004158                     __end_of_isdigit:
 17773                           	opt stack 0
 17774                           tblptru	equ	0xFF8
 17775                           tblptrh	equ	0xFF7
 17776                           tblptrl	equ	0xFF6
 17777                           tablat	equ	0xFF5
 17778                           prodh	equ	0xFF4
 17779                           prodl	equ	0xFF3
 17780                           intcon	equ	0xFF2
 17781                           intcon2	equ	0xFF1
 17782                           intcon3	equ	0xFF0
 17783                           postinc0	equ	0xFEE
 17784                           wreg	equ	0xFE8
 17785                           indf1	equ	0xFE7
 17786                           postinc1	equ	0xFE6
 17787                           fsr1h	equ	0xFE2
 17788                           fsr1l	equ	0xFE1
 17789                           indf2	equ	0xFDF
 17790                           postinc2	equ	0xFDE
 17791                           postdec2	equ	0xFDD
 17792                           fsr2h	equ	0xFDA
 17793                           fsr2l	equ	0xFD9
 17794                           status	equ	0xFD8
 17795                           
 17796 ;; *************** function ___wmul *****************
 17797 ;; Defined at:
 17798 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 17799 ;; Parameters:    Size  Location     Type
 17800 ;;  multiplier      2   22[BANK0 ] unsigned int 
 17801 ;;  multiplicand    2   24[BANK0 ] unsigned int 
 17802 ;; Auto vars:     Size  Location     Type
 17803 ;;  product         2   26[BANK0 ] unsigned int 
 17804 ;; Return value:  Size  Location     Type
 17805 ;;                  2   22[BANK0 ] unsigned int 
 17806 ;; Registers used:
 17807 ;;		wreg, status,2, status,0, prodl, prodh
 17808 ;; Tracked objects:
 17809 ;;		On entry : F/0
 17810 ;;		On exit  : F/0
 17811 ;;		Unchanged: 0/0
 17812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17813 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17816 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17817 ;;Total ram usage:        6 bytes
 17818 ;; Hardware stack levels used:    1
 17819 ;; Hardware stack levels required when called:    8
 17820 ;; This function calls:
 17821 ;;		Nothing
 17822 ;; This function is called by:
 17823 ;;		_sprintf
 17824 ;; This function uses a non-reentrant model
 17825 ;;
 17826                           
 17827                           	psect	text72
 17828  004098                     __ptext72:
 17829                           	opt stack 0
 17830  004098                     ___wmul:
 17831                           	opt stack 19
 17832                           
 17833                           ; BSR set to: 0
 17834                           
 17835                           ; BSR set to: 0
 17836                           ;incstack = 0
 17837  004098  5176               	movf	___wmul@multiplier& (0+255),w,b
 17838  00409A  0378               	mulwf	___wmul@multiplicand& (0+255),b
 17839  00409C  CFF3 F07A          	movff	prodl,___wmul@product
 17840  0040A0  CFF4 F07B          	movff	prodh,___wmul@product+1
 17841  0040A4  5176               	movf	___wmul@multiplier& (0+255),w,b
 17842  0040A6  0379               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 17843  0040A8  50F3               	movf	prodl,w,c
 17844  0040AA  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 17845  0040AC  5177               	movf	(___wmul@multiplier+1)& (0+255),w,b
 17846  0040AE  0378               	mulwf	___wmul@multiplicand& (0+255),b
 17847  0040B0  50F3               	movf	prodl,w,c
 17848  0040B2  277B               	addwf	(___wmul@product+1)& (0+255),f,b
 17849                           
 17850                           ; BSR set to: 0
 17851  0040B4  C07A  F076         	movff	___wmul@product,?___wmul
 17852  0040B8  C07B  F077         	movff	___wmul@product+1,?___wmul+1
 17853                           
 17854                           ; BSR set to: 0
 17855  0040BC  0012               	return		;funcret
 17856  0040BE                     __end_of___wmul:
 17857                           	opt stack 0
 17858                           tblptru	equ	0xFF8
 17859                           tblptrh	equ	0xFF7
 17860                           tblptrl	equ	0xFF6
 17861                           tablat	equ	0xFF5
 17862                           prodh	equ	0xFF4
 17863                           prodl	equ	0xFF3
 17864                           intcon	equ	0xFF2
 17865                           intcon2	equ	0xFF1
 17866                           intcon3	equ	0xFF0
 17867                           postinc0	equ	0xFEE
 17868                           wreg	equ	0xFE8
 17869                           indf1	equ	0xFE7
 17870                           postinc1	equ	0xFE6
 17871                           fsr1h	equ	0xFE2
 17872                           fsr1l	equ	0xFE1
 17873                           indf2	equ	0xFDF
 17874                           postinc2	equ	0xFDE
 17875                           postdec2	equ	0xFDD
 17876                           fsr2h	equ	0xFDA
 17877                           fsr2l	equ	0xFD9
 17878                           status	equ	0xFD8
 17879                           
 17880 ;; *************** function ___lwmod *****************
 17881 ;; Defined at:
 17882 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 17883 ;; Parameters:    Size  Location     Type
 17884 ;;  dividend        2   29[BANK0 ] unsigned int 
 17885 ;;  divisor         2   31[BANK0 ] unsigned int 
 17886 ;; Auto vars:     Size  Location     Type
 17887 ;;  counter         1   33[BANK0 ] unsigned char 
 17888 ;; Return value:  Size  Location     Type
 17889 ;;                  2   29[BANK0 ] unsigned int 
 17890 ;; Registers used:
 17891 ;;		wreg, status,2, status,0
 17892 ;; Tracked objects:
 17893 ;;		On entry : F/0
 17894 ;;		On exit  : F/0
 17895 ;;		Unchanged: 0/0
 17896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17897 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17900 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17901 ;;Total ram usage:        5 bytes
 17902 ;; Hardware stack levels used:    1
 17903 ;; Hardware stack levels required when called:    8
 17904 ;; This function calls:
 17905 ;;		Nothing
 17906 ;; This function is called by:
 17907 ;;		_sprintf
 17908 ;; This function uses a non-reentrant model
 17909 ;;
 17910                           
 17911                           	psect	text73
 17912  003D86                     __ptext73:
 17913                           	opt stack 0
 17914  003D86                     ___lwmod:
 17915                           	opt stack 19
 17916                           
 17917                           ; BSR set to: 0
 17918                           
 17919                           ; BSR set to: 0
 17920                           ;incstack = 0
 17921  003D86  517F               	movf	___lwmod@divisor& (0+255),w,b
 17922  003D88  1180               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17923  003D8A  E017               	bz	l1963
 17924                           
 17925                           ; BSR set to: 0
 17926  003D8C  0E01               	movlw	1
 17927  003D8E  6F81               	movwf	___lwmod@counter& (0+255),b
 17928  003D90  D004               	goto	l9004
 17929  003D92                     l9002:
 17930                           
 17931                           ; BSR set to: 0
 17932  003D92  90D8               	bcf	status,0,c
 17933  003D94  377F               	rlcf	___lwmod@divisor& (0+255),f,b
 17934  003D96  3780               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17935  003D98  2B81               	incf	___lwmod@counter& (0+255),f,b
 17936  003D9A                     l9004:
 17937                           
 17938                           ; BSR set to: 0
 17939  003D9A  AF80               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17940  003D9C  D7FA               	goto	l9002
 17941  003D9E                     l9006:
 17942                           
 17943                           ; BSR set to: 0
 17944  003D9E  517F               	movf	___lwmod@divisor& (0+255),w,b
 17945  003DA0  5D7D               	subwf	___lwmod@dividend& (0+255),w,b
 17946  003DA2  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17947  003DA4  597E               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17948  003DA6  E304               	bnc	l9010
 17949                           
 17950                           ; BSR set to: 0
 17951  003DA8  517F               	movf	___lwmod@divisor& (0+255),w,b
 17952  003DAA  5F7D               	subwf	___lwmod@dividend& (0+255),f,b
 17953  003DAC  5180               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17954  003DAE  5B7E               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17955  003DB0                     l9010:
 17956                           
 17957                           ; BSR set to: 0
 17958  003DB0  90D8               	bcf	status,0,c
 17959  003DB2  3380               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17960  003DB4  337F               	rrcf	___lwmod@divisor& (0+255),f,b
 17961                           
 17962                           ; BSR set to: 0
 17963  003DB6  2F81               	decfsz	___lwmod@counter& (0+255),f,b
 17964  003DB8  D7F2               	goto	l9006
 17965  003DBA                     l1963:
 17966                           
 17967                           ; BSR set to: 0
 17968  003DBA  C07D  F07D         	movff	___lwmod@dividend,?___lwmod
 17969  003DBE  C07E  F07E         	movff	___lwmod@dividend+1,?___lwmod+1
 17970                           
 17971                           ; BSR set to: 0
 17972  003DC2  0012               	return		;funcret
 17973  003DC4                     __end_of___lwmod:
 17974                           	opt stack 0
 17975                           tblptru	equ	0xFF8
 17976                           tblptrh	equ	0xFF7
 17977                           tblptrl	equ	0xFF6
 17978                           tablat	equ	0xFF5
 17979                           prodh	equ	0xFF4
 17980                           prodl	equ	0xFF3
 17981                           intcon	equ	0xFF2
 17982                           intcon2	equ	0xFF1
 17983                           intcon3	equ	0xFF0
 17984                           postinc0	equ	0xFEE
 17985                           wreg	equ	0xFE8
 17986                           indf1	equ	0xFE7
 17987                           postinc1	equ	0xFE6
 17988                           fsr1h	equ	0xFE2
 17989                           fsr1l	equ	0xFE1
 17990                           indf2	equ	0xFDF
 17991                           postinc2	equ	0xFDE
 17992                           postdec2	equ	0xFDD
 17993                           fsr2h	equ	0xFDA
 17994                           fsr2l	equ	0xFD9
 17995                           status	equ	0xFD8
 17996                           
 17997 ;; *************** function ___lwdiv *****************
 17998 ;; Defined at:
 17999 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 18000 ;; Parameters:    Size  Location     Type
 18001 ;;  dividend        2   22[BANK0 ] unsigned int 
 18002 ;;  divisor         2   24[BANK0 ] unsigned int 
 18003 ;; Auto vars:     Size  Location     Type
 18004 ;;  quotient        2   27[BANK0 ] unsigned int 
 18005 ;;  counter         1   26[BANK0 ] unsigned char 
 18006 ;; Return value:  Size  Location     Type
 18007 ;;                  2   22[BANK0 ] unsigned int 
 18008 ;; Registers used:
 18009 ;;		wreg, status,2, status,0
 18010 ;; Tracked objects:
 18011 ;;		On entry : F/0
 18012 ;;		On exit  : F/0
 18013 ;;		Unchanged: 0/0
 18014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18015 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18016 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18018 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18019 ;;Total ram usage:        7 bytes
 18020 ;; Hardware stack levels used:    1
 18021 ;; Hardware stack levels required when called:    8
 18022 ;; This function calls:
 18023 ;;		Nothing
 18024 ;; This function is called by:
 18025 ;;		_sprintf
 18026 ;; This function uses a non-reentrant model
 18027 ;;
 18028                           
 18029                           	psect	text74
 18030  003B6E                     __ptext74:
 18031                           	opt stack 0
 18032  003B6E                     ___lwdiv:
 18033                           	opt stack 19
 18034                           
 18035                           ; BSR set to: 0
 18036                           
 18037                           ; BSR set to: 0
 18038                           ;incstack = 0
 18039  003B6E  6B7B               	clrf	___lwdiv@quotient& (0+255),b
 18040  003B70  6B7C               	clrf	(___lwdiv@quotient+1)& (0+255),b
 18041                           
 18042                           ; BSR set to: 0
 18043  003B72  5178               	movf	___lwdiv@divisor& (0+255),w,b
 18044  003B74  1179               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 18045  003B76  E01B               	bz	l1953
 18046                           
 18047                           ; BSR set to: 0
 18048  003B78  0E01               	movlw	1
 18049  003B7A  6F7A               	movwf	___lwdiv@counter& (0+255),b
 18050  003B7C  D004               	goto	l8984
 18051  003B7E                     l8982:
 18052                           
 18053                           ; BSR set to: 0
 18054  003B7E  90D8               	bcf	status,0,c
 18055  003B80  3778               	rlcf	___lwdiv@divisor& (0+255),f,b
 18056  003B82  3779               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 18057  003B84  2B7A               	incf	___lwdiv@counter& (0+255),f,b
 18058  003B86                     l8984:
 18059                           
 18060                           ; BSR set to: 0
 18061  003B86  AF79               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 18062  003B88  D7FA               	goto	l8982
 18063  003B8A                     l8986:
 18064                           
 18065                           ; BSR set to: 0
 18066  003B8A  90D8               	bcf	status,0,c
 18067  003B8C  377B               	rlcf	___lwdiv@quotient& (0+255),f,b
 18068  003B8E  377C               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 18069                           
 18070                           ; BSR set to: 0
 18071  003B90  5178               	movf	___lwdiv@divisor& (0+255),w,b
 18072  003B92  5D76               	subwf	___lwdiv@dividend& (0+255),w,b
 18073  003B94  5179               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18074  003B96  5977               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 18075  003B98  E305               	bnc	l8994
 18076                           
 18077                           ; BSR set to: 0
 18078  003B9A  5178               	movf	___lwdiv@divisor& (0+255),w,b
 18079  003B9C  5F76               	subwf	___lwdiv@dividend& (0+255),f,b
 18080  003B9E  5179               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 18081  003BA0  5B77               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 18082                           
 18083                           ; BSR set to: 0
 18084  003BA2  817B               	bsf	___lwdiv@quotient& (0+255),0,b
 18085  003BA4                     l8994:
 18086                           
 18087                           ; BSR set to: 0
 18088  003BA4  90D8               	bcf	status,0,c
 18089  003BA6  3379               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 18090  003BA8  3378               	rrcf	___lwdiv@divisor& (0+255),f,b
 18091                           
 18092                           ; BSR set to: 0
 18093  003BAA  2F7A               	decfsz	___lwdiv@counter& (0+255),f,b
 18094  003BAC  D7EE               	goto	l8986
 18095  003BAE                     l1953:
 18096                           
 18097                           ; BSR set to: 0
 18098  003BAE  C07B  F076         	movff	___lwdiv@quotient,?___lwdiv
 18099  003BB2  C07C  F077         	movff	___lwdiv@quotient+1,?___lwdiv+1
 18100                           
 18101                           ; BSR set to: 0
 18102  003BB6  0012               	return		;funcret
 18103  003BB8                     __end_of___lwdiv:
 18104                           	opt stack 0
 18105                           tblptru	equ	0xFF8
 18106                           tblptrh	equ	0xFF7
 18107                           tblptrl	equ	0xFF6
 18108                           tablat	equ	0xFF5
 18109                           prodh	equ	0xFF4
 18110                           prodl	equ	0xFF3
 18111                           intcon	equ	0xFF2
 18112                           intcon2	equ	0xFF1
 18113                           intcon3	equ	0xFF0
 18114                           postinc0	equ	0xFEE
 18115                           wreg	equ	0xFE8
 18116                           indf1	equ	0xFE7
 18117                           postinc1	equ	0xFE6
 18118                           fsr1h	equ	0xFE2
 18119                           fsr1l	equ	0xFE1
 18120                           indf2	equ	0xFDF
 18121                           postinc2	equ	0xFDE
 18122                           postdec2	equ	0xFDD
 18123                           fsr2h	equ	0xFDA
 18124                           fsr2l	equ	0xFD9
 18125                           status	equ	0xFD8
 18126                           
 18127 ;; *************** function _LCD_Update *****************
 18128 ;; Defined at:
 18129 ;;		line 132 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 18130 ;; Parameters:    Size  Location     Type
 18131 ;;		None
 18132 ;; Auto vars:     Size  Location     Type
 18133 ;;  i               1   24[BANK0 ] unsigned char 
 18134 ;; Return value:  Size  Location     Type
 18135 ;;		None               void
 18136 ;; Registers used:
 18137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18138 ;; Tracked objects:
 18139 ;;		On entry : F/0
 18140 ;;		On exit  : F/0
 18141 ;;		Unchanged: 0/0
 18142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18144 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18146 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18147 ;;Total ram usage:        1 bytes
 18148 ;; Hardware stack levels used:    1
 18149 ;; Hardware stack levels required when called:   10
 18150 ;; This function calls:
 18151 ;;		_LCD_WriteCmd
 18152 ;;		_LCD_WriteData
 18153 ;; This function is called by:
 18154 ;;		_LCDTRXCount
 18155 ;;		_LCDDisplay
 18156 ;;		_Source_END_DEVICE_INFO
 18157 ;;		_run_star_demo
 18158 ;; This function uses a non-reentrant model
 18159 ;;
 18160                           
 18161                           	psect	text75
 18162  003576                     __ptext75:
 18163                           	opt stack 0
 18164  003576                     _LCD_Update:
 18165                           	opt stack 18
 18166                           
 18167                           ; BSR set to: 0
 18168                           ;lcd.c: 134: uint8_t i;
 18169                           ;lcd.c: 136: LCD_WriteCmd(0x80 | 0x00);
 18170                           
 18171                           ; BSR set to: 0
 18172                           ;incstack = 0
 18173  003576  0E80               	movlw	128
 18174  003578  ECE0  F020         	call	_LCD_WriteCmd
 18175                           
 18176                           ;lcd.c: 138: for(i = 0; i < 16; i++)
 18177  00357C  0100               	movlb	0	; () banked
 18178  00357E  6B78               	clrf	LCD_Update@i& (0+255),b
 18179  003580                     l9478:
 18180                           
 18181                           ; BSR set to: 0
 18182                           ;lcd.c: 139: {
 18183                           ;lcd.c: 140: if( LCDText[i] == 0 )
 18184  003580  0EB8               	movlw	low _LCDText
 18185  003582  2578               	addwf	LCD_Update@i& (0+255),w,b
 18186  003584  6ED9               	movwf	fsr2l,c
 18187  003586  6ADA               	clrf	fsr2h,c
 18188  003588  0E01               	movlw	high _LCDText
 18189  00358A  22DA               	addwfc	fsr2h,f,c
 18190  00358C  50DF               	movf	indf2,w,c
 18191  00358E  E104               	bnz	l9482
 18192                           
 18193                           ; BSR set to: 0
 18194                           ;lcd.c: 141: {
 18195                           ;lcd.c: 142: LCD_WriteData(' ');
 18196  003590  0E20               	movlw	32
 18197  003592  ECD7  F020         	call	_LCD_WriteData
 18198                           
 18199                           ;lcd.c: 143: }
 18200  003596  D009               	goto	l9484
 18201  003598                     l9482:
 18202                           
 18203                           ; BSR set to: 0
 18204                           ;lcd.c: 144: else
 18205                           ;lcd.c: 145: {
 18206                           ;lcd.c: 146: LCD_WriteData(LCDText[i]);
 18207  003598  0EB8               	movlw	low _LCDText
 18208  00359A  2578               	addwf	LCD_Update@i& (0+255),w,b
 18209  00359C  6ED9               	movwf	fsr2l,c
 18210  00359E  6ADA               	clrf	fsr2h,c
 18211  0035A0  0E01               	movlw	high _LCDText
 18212  0035A2  22DA               	addwfc	fsr2h,f,c
 18213  0035A4  50DF               	movf	indf2,w,c
 18214  0035A6  ECD7  F020         	call	_LCD_WriteData
 18215  0035AA                     l9484:
 18216  0035AA  0100               	movlb	0	; () banked
 18217  0035AC  2B78               	incf	LCD_Update@i& (0+255),f,b
 18218                           
 18219                           ; BSR set to: 0
 18220  0035AE  0E0F               	movlw	15
 18221  0035B0  6578               	cpfsgt	LCD_Update@i& (0+255),b
 18222  0035B2  D7E6               	goto	l9478
 18223                           
 18224                           ; BSR set to: 0
 18225                           ;lcd.c: 147: }
 18226                           ;lcd.c: 148: }
 18227                           ;lcd.c: 150: LCD_WriteCmd(0x80 | 0x40);
 18228  0035B4  0EC0               	movlw	192
 18229  0035B6  ECE0  F020         	call	_LCD_WriteCmd
 18230                           
 18231                           ;lcd.c: 152: for(i = 16; i < 32; i++)
 18232  0035BA  0E10               	movlw	16
 18233  0035BC  0100               	movlb	0	; () banked
 18234  0035BE  6F78               	movwf	LCD_Update@i& (0+255),b
 18235  0035C0                     l9496:
 18236                           
 18237                           ; BSR set to: 0
 18238                           ;lcd.c: 153: {
 18239                           ;lcd.c: 154: if( LCDText[i] == 0 )
 18240  0035C0  0EB8               	movlw	low _LCDText
 18241  0035C2  2578               	addwf	LCD_Update@i& (0+255),w,b
 18242  0035C4  6ED9               	movwf	fsr2l,c
 18243  0035C6  6ADA               	clrf	fsr2h,c
 18244  0035C8  0E01               	movlw	high _LCDText
 18245  0035CA  22DA               	addwfc	fsr2h,f,c
 18246  0035CC  50DF               	movf	indf2,w,c
 18247  0035CE  E104               	bnz	l9500
 18248                           
 18249                           ; BSR set to: 0
 18250                           ;lcd.c: 155: {
 18251                           ;lcd.c: 156: LCD_WriteData(' ');
 18252  0035D0  0E20               	movlw	32
 18253  0035D2  ECD7  F020         	call	_LCD_WriteData
 18254                           
 18255                           ;lcd.c: 157: }
 18256  0035D6  D009               	goto	l9502
 18257  0035D8                     l9500:
 18258                           
 18259                           ; BSR set to: 0
 18260                           ;lcd.c: 158: else
 18261                           ;lcd.c: 159: {
 18262                           ;lcd.c: 160: LCD_WriteData(LCDText[i]);
 18263  0035D8  0EB8               	movlw	low _LCDText
 18264  0035DA  2578               	addwf	LCD_Update@i& (0+255),w,b
 18265  0035DC  6ED9               	movwf	fsr2l,c
 18266  0035DE  6ADA               	clrf	fsr2h,c
 18267  0035E0  0E01               	movlw	high _LCDText
 18268  0035E2  22DA               	addwfc	fsr2h,f,c
 18269  0035E4  50DF               	movf	indf2,w,c
 18270  0035E6  ECD7  F020         	call	_LCD_WriteData
 18271  0035EA                     l9502:
 18272  0035EA  0100               	movlb	0	; () banked
 18273  0035EC  2B78               	incf	LCD_Update@i& (0+255),f,b
 18274                           
 18275                           ; BSR set to: 0
 18276  0035EE  0E1F               	movlw	31
 18277  0035F0  6578               	cpfsgt	LCD_Update@i& (0+255),b
 18278  0035F2  D7E6               	goto	l9496
 18279  0035F4  0C1F               	retlw	31
 18280  0035F6                     __end_of_LCD_Update:
 18281                           	opt stack 0
 18282                           tblptru	equ	0xFF8
 18283                           tblptrh	equ	0xFF7
 18284                           tblptrl	equ	0xFF6
 18285                           tablat	equ	0xFF5
 18286                           prodh	equ	0xFF4
 18287                           prodl	equ	0xFF3
 18288                           intcon	equ	0xFF2
 18289                           intcon2	equ	0xFF1
 18290                           intcon3	equ	0xFF0
 18291                           postinc0	equ	0xFEE
 18292                           wreg	equ	0xFE8
 18293                           indf1	equ	0xFE7
 18294                           postinc1	equ	0xFE6
 18295                           fsr1h	equ	0xFE2
 18296                           fsr1l	equ	0xFE1
 18297                           indf2	equ	0xFDF
 18298                           postinc2	equ	0xFDE
 18299                           postdec2	equ	0xFDD
 18300                           fsr2h	equ	0xFDA
 18301                           fsr2l	equ	0xFD9
 18302                           status	equ	0xFD8
 18303                           
 18304 ;; *************** function _LCD_WriteData *****************
 18305 ;; Defined at:
 18306 ;;		line 43 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 18307 ;; Parameters:    Size  Location     Type
 18308 ;;  data            1    wreg     unsigned char 
 18309 ;; Auto vars:     Size  Location     Type
 18310 ;;  data            1   23[BANK0 ] unsigned char 
 18311 ;; Return value:  Size  Location     Type
 18312 ;;		None               void
 18313 ;; Registers used:
 18314 ;;		wreg, status,2, cstack
 18315 ;; Tracked objects:
 18316 ;;		On entry : F/0
 18317 ;;		On exit  : 0/0
 18318 ;;		Unchanged: 0/0
 18319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18323 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18324 ;;Total ram usage:        1 bytes
 18325 ;; Hardware stack levels used:    1
 18326 ;; Hardware stack levels required when called:    9
 18327 ;; This function calls:
 18328 ;;		_SPIPut2
 18329 ;; This function is called by:
 18330 ;;		_LCD_Update
 18331 ;; This function uses a non-reentrant model
 18332 ;;
 18333                           
 18334                           	psect	text76
 18335  0041AE                     __ptext76:
 18336                           	opt stack 0
 18337  0041AE                     _LCD_WriteData:
 18338                           	opt stack 18
 18339                           
 18340                           ; BSR set to: 0
 18341                           ;incstack = 0
 18342                           ;LCD_WriteData@data stored from wreg
 18343  0041AE  6F77               	movwf	LCD_WriteData@data& (0+255),b
 18344                           
 18345                           ;lcd.c: 45: LATDbits.LATD7 = 0;
 18346  0041B0  9E8C               	bcf	3980,7,c	;volatile
 18347                           
 18348                           ;lcd.c: 46: LATDbits.LATD3 = 1;
 18349  0041B2  868C               	bsf	3980,3,c	;volatile
 18350                           
 18351                           ;lcd.c: 48: SPIPut2(data);
 18352  0041B4  0100               	movlb	0	; () banked
 18353  0041B6  5177               	movf	LCD_WriteData@data& (0+255),w,b
 18354  0041B8  ECB9  F020         	call	_SPIPut2
 18355                           
 18356                           ;lcd.c: 50: LATDbits.LATD7 = 1;
 18357  0041BC  8E8C               	bsf	3980,7,c	;volatile
 18358  0041BE  0012               	return		;funcret
 18359  0041C0                     __end_of_LCD_WriteData:
 18360                           	opt stack 0
 18361                           tblptru	equ	0xFF8
 18362                           tblptrh	equ	0xFF7
 18363                           tblptrl	equ	0xFF6
 18364                           tablat	equ	0xFF5
 18365                           prodh	equ	0xFF4
 18366                           prodl	equ	0xFF3
 18367                           intcon	equ	0xFF2
 18368                           intcon2	equ	0xFF1
 18369                           intcon3	equ	0xFF0
 18370                           postinc0	equ	0xFEE
 18371                           wreg	equ	0xFE8
 18372                           indf1	equ	0xFE7
 18373                           postinc1	equ	0xFE6
 18374                           fsr1h	equ	0xFE2
 18375                           fsr1l	equ	0xFE1
 18376                           indf2	equ	0xFDF
 18377                           postinc2	equ	0xFDE
 18378                           postdec2	equ	0xFDD
 18379                           fsr2h	equ	0xFDA
 18380                           fsr2l	equ	0xFD9
 18381                           status	equ	0xFD8
 18382                           
 18383 ;; *************** function _LCD_Erase *****************
 18384 ;; Defined at:
 18385 ;;		line 101 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;		None
 18388 ;; Auto vars:     Size  Location     Type
 18389 ;;		None
 18390 ;; Return value:  Size  Location     Type
 18391 ;;		None               void
 18392 ;; Registers used:
 18393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18394 ;; Tracked objects:
 18395 ;;		On entry : 0/0
 18396 ;;		On exit  : F/0
 18397 ;;		Unchanged: 0/0
 18398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18403 ;;Total ram usage:        0 bytes
 18404 ;; Hardware stack levels used:    1
 18405 ;; Hardware stack levels required when called:   10
 18406 ;; This function calls:
 18407 ;;		_DELAY_ms
 18408 ;;		_LCD_WriteCmd
 18409 ;;		_memset
 18410 ;; This function is called by:
 18411 ;;		_LCDTRXCount
 18412 ;;		_LCDDisplay
 18413 ;;		_Source_END_DEVICE_INFO
 18414 ;;		_run_star_demo
 18415 ;; This function uses a non-reentrant model
 18416 ;;
 18417                           
 18418                           	psect	text77
 18419  00404A                     __ptext77:
 18420                           	opt stack 0
 18421  00404A                     _LCD_Erase:
 18422                           	opt stack 18
 18423                           
 18424                           ;lcd.c: 104: LCD_WriteCmd(0x01);;
 18425                           
 18426                           ;incstack = 0
 18427  00404A  0E01               	movlw	1
 18428  00404C  ECE0  F020         	call	_LCD_WriteCmd
 18429                           
 18430                           ;lcd.c: 105: DELAY_ms(2);
 18431  004050  0100               	movlb	0	; () banked
 18432  004052  6B77               	clrf	(DELAY_ms@ms+1)& (0+255),b
 18433  004054  0E02               	movlw	2
 18434  004056  6F76               	movwf	DELAY_ms@ms& (0+255),b
 18435  004058  ECC7  F015         	call	_DELAY_ms	;wreg free
 18436                           
 18437                           ; BSR set to: 0
 18438                           ;lcd.c: 108: memset(LCDText, ' ', 32);
 18439  00405C  0EB8               	movlw	low _LCDText
 18440  00405E  6F76               	movwf	memset@p1& (0+255),b
 18441  004060  0E01               	movlw	high _LCDText
 18442  004062  6F77               	movwf	(memset@p1+1)& (0+255),b
 18443  004064  6B79               	clrf	(memset@c+1)& (0+255),b
 18444  004066  0E20               	movlw	32
 18445  004068  6F78               	movwf	memset@c& (0+255),b
 18446  00406A  6B7B               	clrf	(memset@n+1)& (0+255),b
 18447  00406C  6F7A               	movwf	memset@n& (0+255),b
 18448  00406E  EFFC  F01F         	goto	_memset	;wreg free
 18449  004072                     __end_of_LCD_Erase:
 18450                           	opt stack 0
 18451                           tblptru	equ	0xFF8
 18452                           tblptrh	equ	0xFF7
 18453                           tblptrl	equ	0xFF6
 18454                           tablat	equ	0xFF5
 18455                           prodh	equ	0xFF4
 18456                           prodl	equ	0xFF3
 18457                           intcon	equ	0xFF2
 18458                           intcon2	equ	0xFF1
 18459                           intcon3	equ	0xFF0
 18460                           postinc0	equ	0xFEE
 18461                           wreg	equ	0xFE8
 18462                           indf1	equ	0xFE7
 18463                           postinc1	equ	0xFE6
 18464                           fsr1h	equ	0xFE2
 18465                           fsr1l	equ	0xFE1
 18466                           indf2	equ	0xFDF
 18467                           postinc2	equ	0xFDE
 18468                           postdec2	equ	0xFDD
 18469                           fsr2h	equ	0xFDA
 18470                           fsr2l	equ	0xFD9
 18471                           status	equ	0xFD8
 18472                           
 18473 ;; *************** function _memset *****************
 18474 ;; Defined at:
 18475 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 18476 ;; Parameters:    Size  Location     Type
 18477 ;;  p1              2   22[BANK0 ] PTR void 
 18478 ;;		 -> LCDText(33), 
 18479 ;;  c               2   24[BANK0 ] int 
 18480 ;;  n               2   26[BANK0 ] unsigned int 
 18481 ;; Auto vars:     Size  Location     Type
 18482 ;;  p               2   28[BANK0 ] PTR unsigned char 
 18483 ;;		 -> LCDText(33), 
 18484 ;; Return value:  Size  Location     Type
 18485 ;;                  2   22[BANK0 ] PTR void 
 18486 ;; Registers used:
 18487 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18488 ;; Tracked objects:
 18489 ;;		On entry : F/0
 18490 ;;		On exit  : F/0
 18491 ;;		Unchanged: 0/0
 18492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18493 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18494 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18496 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18497 ;;Total ram usage:        8 bytes
 18498 ;; Hardware stack levels used:    1
 18499 ;; Hardware stack levels required when called:    8
 18500 ;; This function calls:
 18501 ;;		Nothing
 18502 ;; This function is called by:
 18503 ;;		_LCD_Erase
 18504 ;; This function uses a non-reentrant model
 18505 ;;
 18506                           
 18507                           	psect	text78
 18508  003FF8                     __ptext78:
 18509                           	opt stack 0
 18510  003FF8                     _memset:
 18511                           	opt stack 19
 18512                           
 18513                           ; BSR set to: 0
 18514                           
 18515                           ; BSR set to: 0
 18516                           ;incstack = 0
 18517  003FF8  C076  F07C         	movff	memset@p1,memset@p
 18518  003FFC  C077  F07D         	movff	memset@p1+1,memset@p+1
 18519  004000  D008               	goto	l8956
 18520  004002                     l8952:
 18521                           
 18522                           ; BSR set to: 0
 18523  004002  C07C  FFD9         	movff	memset@p,fsr2l
 18524  004006  C07D  FFDA         	movff	memset@p+1,fsr2h
 18525  00400A  C078  FFDF         	movff	memset@c,indf2
 18526                           
 18527                           ; BSR set to: 0
 18528  00400E  4B7C               	infsnz	memset@p& (0+255),f,b
 18529  004010  2B7D               	incf	(memset@p+1)& (0+255),f,b
 18530  004012                     l8956:
 18531                           
 18532                           ; BSR set to: 0
 18533  004012  077A               	decf	memset@n& (0+255),f,b
 18534  004014  A0D8               	btfss	status,0,c
 18535  004016  077B               	decf	(memset@n+1)& (0+255),f,b
 18536  004018  297A               	incf	memset@n& (0+255),w,b
 18537  00401A  E1F3               	bnz	l8952
 18538  00401C  297B               	incf	(memset@n+1)& (0+255),w,b
 18539  00401E  E1F1               	bnz	l8952
 18540                           
 18541                           ; BSR set to: 0
 18542  004020  0012               	return		;funcret
 18543  004022                     __end_of_memset:
 18544                           	opt stack 0
 18545                           tblptru	equ	0xFF8
 18546                           tblptrh	equ	0xFF7
 18547                           tblptrl	equ	0xFF6
 18548                           tablat	equ	0xFF5
 18549                           prodh	equ	0xFF4
 18550                           prodl	equ	0xFF3
 18551                           intcon	equ	0xFF2
 18552                           intcon2	equ	0xFF1
 18553                           intcon3	equ	0xFF0
 18554                           postinc0	equ	0xFEE
 18555                           wreg	equ	0xFE8
 18556                           indf1	equ	0xFE7
 18557                           postinc1	equ	0xFE6
 18558                           fsr1h	equ	0xFE2
 18559                           fsr1l	equ	0xFE1
 18560                           indf2	equ	0xFDF
 18561                           postinc2	equ	0xFDE
 18562                           postdec2	equ	0xFDD
 18563                           fsr2h	equ	0xFDA
 18564                           fsr2l	equ	0xFD9
 18565                           status	equ	0xFD8
 18566                           
 18567 ;; *************** function _LCD_WriteCmd *****************
 18568 ;; Defined at:
 18569 ;;		line 32 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 18570 ;; Parameters:    Size  Location     Type
 18571 ;;  data            1    wreg     unsigned char 
 18572 ;; Auto vars:     Size  Location     Type
 18573 ;;  data            1   23[BANK0 ] unsigned char 
 18574 ;; Return value:  Size  Location     Type
 18575 ;;		None               void
 18576 ;; Registers used:
 18577 ;;		wreg, status,2, cstack
 18578 ;; Tracked objects:
 18579 ;;		On entry : 0/0
 18580 ;;		On exit  : 0/0
 18581 ;;		Unchanged: 0/0
 18582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18584 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18586 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18587 ;;Total ram usage:        1 bytes
 18588 ;; Hardware stack levels used:    1
 18589 ;; Hardware stack levels required when called:    9
 18590 ;; This function calls:
 18591 ;;		_SPIPut2
 18592 ;; This function is called by:
 18593 ;;		_LCD_Initialize
 18594 ;;		_LCD_Erase
 18595 ;;		_LCD_Update
 18596 ;; This function uses a non-reentrant model
 18597 ;;
 18598                           
 18599                           	psect	text79
 18600  0041C0                     __ptext79:
 18601                           	opt stack 0
 18602  0041C0                     _LCD_WriteCmd:
 18603                           	opt stack 18
 18604                           
 18605                           ; BSR set to: 0
 18606                           ;incstack = 0
 18607                           ;LCD_WriteCmd@data stored from wreg
 18608  0041C0  0100               	movlb	0	; () banked
 18609  0041C2  6F77               	movwf	LCD_WriteCmd@data& (0+255),b
 18610                           
 18611                           ;lcd.c: 34: LATDbits.LATD7 = 0;
 18612  0041C4  9E8C               	bcf	3980,7,c	;volatile
 18613                           
 18614                           ;lcd.c: 35: LATDbits.LATD3 = 0;
 18615  0041C6  968C               	bcf	3980,3,c	;volatile
 18616                           
 18617                           ;lcd.c: 37: SPIPut2(data);
 18618  0041C8  5177               	movf	LCD_WriteCmd@data& (0+255),w,b
 18619  0041CA  ECB9  F020         	call	_SPIPut2
 18620                           
 18621                           ;lcd.c: 39: LATDbits.LATD7 = 1;
 18622  0041CE  8E8C               	bsf	3980,7,c	;volatile
 18623  0041D0  0012               	return		;funcret
 18624  0041D2                     __end_of_LCD_WriteCmd:
 18625                           	opt stack 0
 18626                           tblptru	equ	0xFF8
 18627                           tblptrh	equ	0xFF7
 18628                           tblptrl	equ	0xFF6
 18629                           tablat	equ	0xFF5
 18630                           prodh	equ	0xFF4
 18631                           prodl	equ	0xFF3
 18632                           intcon	equ	0xFF2
 18633                           intcon2	equ	0xFF1
 18634                           intcon3	equ	0xFF0
 18635                           postinc0	equ	0xFEE
 18636                           wreg	equ	0xFE8
 18637                           indf1	equ	0xFE7
 18638                           postinc1	equ	0xFE6
 18639                           fsr1h	equ	0xFE2
 18640                           fsr1l	equ	0xFE1
 18641                           indf2	equ	0xFDF
 18642                           postinc2	equ	0xFDE
 18643                           postdec2	equ	0xFDD
 18644                           fsr2h	equ	0xFDA
 18645                           fsr2l	equ	0xFD9
 18646                           status	equ	0xFD8
 18647                           
 18648 ;; *************** function _SPIPut2 *****************
 18649 ;; Defined at:
 18650 ;;		line 80 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 18651 ;; Parameters:    Size  Location     Type
 18652 ;;  v               1    wreg     unsigned char 
 18653 ;; Auto vars:     Size  Location     Type
 18654 ;;  v               1   22[BANK0 ] unsigned char 
 18655 ;;  i               1    0        unsigned char 
 18656 ;; Return value:  Size  Location     Type
 18657 ;;		None               void
 18658 ;; Registers used:
 18659 ;;		wreg
 18660 ;; Tracked objects:
 18661 ;;		On entry : 0/0
 18662 ;;		On exit  : 0/0
 18663 ;;		Unchanged: 0/0
 18664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18666 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18668 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18669 ;;Total ram usage:        1 bytes
 18670 ;; Hardware stack levels used:    1
 18671 ;; Hardware stack levels required when called:    8
 18672 ;; This function calls:
 18673 ;;		Nothing
 18674 ;; This function is called by:
 18675 ;;		_EEPROM_Read
 18676 ;;		_EEPROM_Write
 18677 ;;		_LCD_WriteCmd
 18678 ;;		_LCD_WriteData
 18679 ;;		_SPIGet2
 18680 ;; This function uses a non-reentrant model
 18681 ;;
 18682                           
 18683                           	psect	text80
 18684  004172                     __ptext80:
 18685                           	opt stack 0
 18686  004172                     _SPIPut2:
 18687                           	opt stack 18
 18688                           
 18689                           ;incstack = 0
 18690                           ;SPIPut2@v stored from wreg
 18691  004172  0100               	movlb	0	; () banked
 18692  004174  6F76               	movwf	SPIPut2@v& (0+255),b
 18693                           
 18694                           ;spi.c: 82: uint8_t i;
 18695                           ;spi.c: 88: PIR3bits.SSP2IF = 0;
 18696  004176  9EA4               	bcf	4004,7,c	;volatile
 18697  004178                     l928:
 18698                           
 18699                           ;spi.c: 90: {
 18700                           ;spi.c: 92: SSP2CON1bits.WCOL = 0;
 18701  004178  9E72               	bcf	3954,7,c	;volatile
 18702                           
 18703                           ;spi.c: 95: SSP2BUF = v;
 18704  00417A  C076  FF75         	movff	SPIPut2@v,3957	;volatile
 18705                           
 18706                           ;spi.c: 98: } while( SSP2CON1bits.WCOL );
 18707  00417E  BE72               	btfsc	3954,7,c	;volatile
 18708  004180  D7FB               	goto	l928
 18709  004182                     l930:
 18710  004182  AEA4               	btfss	4004,7,c	;volatile
 18711  004184  D7FE               	goto	l930
 18712                           
 18713                           ;spi.c: 106: PIR3bits.SSP2IF = 0;
 18714  004186  9EA4               	bcf	4004,7,c	;volatile
 18715  004188  0012               	return		;funcret
 18716  00418A                     __end_of_SPIPut2:
 18717                           	opt stack 0
 18718                           tblptru	equ	0xFF8
 18719                           tblptrh	equ	0xFF7
 18720                           tblptrl	equ	0xFF6
 18721                           tablat	equ	0xFF5
 18722                           prodh	equ	0xFF4
 18723                           prodl	equ	0xFF3
 18724                           intcon	equ	0xFF2
 18725                           intcon2	equ	0xFF1
 18726                           intcon3	equ	0xFF0
 18727                           postinc0	equ	0xFEE
 18728                           wreg	equ	0xFE8
 18729                           indf1	equ	0xFE7
 18730                           postinc1	equ	0xFE6
 18731                           fsr1h	equ	0xFE2
 18732                           fsr1l	equ	0xFE1
 18733                           indf2	equ	0xFDF
 18734                           postinc2	equ	0xFDE
 18735                           postdec2	equ	0xFDD
 18736                           fsr2h	equ	0xFDA
 18737                           fsr2l	equ	0xFD9
 18738                           status	equ	0xFD8
 18739                           
 18740 ;; *************** function _DELAY_ms *****************
 18741 ;; Defined at:
 18742 ;;		line 108 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 18743 ;; Parameters:    Size  Location     Type
 18744 ;;  ms              2   22[BANK0 ] unsigned int 
 18745 ;; Auto vars:     Size  Location     Type
 18746 ;;  cyclesRequir    4   32[BANK0 ] long 
 18747 ;; Return value:  Size  Location     Type
 18748 ;;		None               void
 18749 ;; Registers used:
 18750 ;;		wreg, status,2, status,0, prodl, prodh
 18751 ;; Tracked objects:
 18752 ;;		On entry : F/0
 18753 ;;		On exit  : F/0
 18754 ;;		Unchanged: 0/0
 18755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18756 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18757 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18758 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18759 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18760 ;;Total ram usage:       14 bytes
 18761 ;; Hardware stack levels used:    1
 18762 ;; Hardware stack levels required when called:    8
 18763 ;; This function calls:
 18764 ;;		Nothing
 18765 ;; This function is called by:
 18766 ;;		_MiMAC_Init
 18767 ;;		_LCD_Initialize
 18768 ;;		_LCD_Erase
 18769 ;;		_LCDDisplay
 18770 ;;		_DemoOutput_Greeting
 18771 ;;		_DemoOutput_Channel
 18772 ;;		_Source_END_DEVICE_INFO
 18773 ;;		_Process_RxMessage
 18774 ;;		_run_star_demo
 18775 ;; This function uses a non-reentrant model
 18776 ;;
 18777                           
 18778                           	psect	text81
 18779  002B8E                     __ptext81:
 18780                           	opt stack 0
 18781  002B8E                     _DELAY_ms:
 18782                           	opt stack 19
 18783                           
 18784                           ; BSR set to: 0
 18785                           ;delay.c: 115: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 18786                           
 18787                           ; BSR set to: 0
 18788                           
 18789                           ;incstack = 0
 18790  002B8E  5176               	movf	DELAY_ms@ms& (0+255),w,b
 18791  002B90  6F78               	movwf	??_DELAY_ms& (0+255),b
 18792  002B92  5177               	movf	(DELAY_ms@ms+1)& (0+255),w,b
 18793  002B94  6F79               	movwf	(??_DELAY_ms+1)& (0+255),b
 18794  002B96  6B7A               	clrf	(??_DELAY_ms+2)& (0+255),b
 18795  002B98  6B7B               	clrf	(??_DELAY_ms+3)& (0+255),b
 18796  002B9A  0EA0               	movlw	160
 18797  002B9C  0378               	mulwf	??_DELAY_ms& (0+255),b
 18798  002B9E  CFF3 F07C          	movff	prodl,??_DELAY_ms+4
 18799  002BA2  CFF4 F07D          	movff	prodh,??_DELAY_ms+5
 18800  002BA6  6B7E               	clrf	(??_DELAY_ms+6)& (0+255),b
 18801  002BA8  6B7F               	clrf	(??_DELAY_ms+7)& (0+255),b
 18802  002BAA  0379               	mulwf	(??_DELAY_ms+1)& (0+255),b
 18803  002BAC  50F3               	movf	prodl,w,c
 18804  002BAE  277D               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 18805  002BB0  50F4               	movf	prodh,w,c
 18806  002BB2  237E               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 18807  002BB4  0E00               	movlw	0
 18808  002BB6  237F               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 18809  002BB8  0E0F               	movlw	15
 18810  002BBA  0378               	mulwf	??_DELAY_ms& (0+255),b
 18811  002BBC  50F3               	movf	prodl,w,c
 18812  002BBE  277D               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 18813  002BC0  50F4               	movf	prodh,w,c
 18814  002BC2  237E               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 18815  002BC4  0E00               	movlw	0
 18816  002BC6  237F               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 18817  002BC8  0EA0               	movlw	160
 18818  002BCA  037A               	mulwf	(??_DELAY_ms+2)& (0+255),b
 18819  002BCC  50F3               	movf	prodl,w,c
 18820  002BCE  277E               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 18821  002BD0  50F4               	movf	prodh,w,c
 18822  002BD2  237F               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 18823  002BD4  0E0F               	movlw	15
 18824  002BD6  0379               	mulwf	(??_DELAY_ms+1)& (0+255),b
 18825  002BD8  50F3               	movf	prodl,w,c
 18826  002BDA  277E               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 18827  002BDC  50F4               	movf	prodh,w,c
 18828  002BDE  237F               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 18829  002BE0  0E00               	movlw	0
 18830  002BE2  0378               	mulwf	??_DELAY_ms& (0+255),b
 18831  002BE4  50F3               	movf	prodl,w,c
 18832  002BE6  277E               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 18833  002BE8  50F4               	movf	prodh,w,c
 18834  002BEA  237F               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 18835  002BEC  0EA0               	movlw	160
 18836  002BEE  037B               	mulwf	(??_DELAY_ms+3)& (0+255),b
 18837  002BF0  50F3               	movf	prodl,w,c
 18838  002BF2  277F               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 18839  002BF4  0E0F               	movlw	15
 18840  002BF6  037A               	mulwf	(??_DELAY_ms+2)& (0+255),b
 18841  002BF8  50F3               	movf	prodl,w,c
 18842  002BFA  277F               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 18843  002BFC  0E00               	movlw	0
 18844  002BFE  0379               	mulwf	(??_DELAY_ms+1)& (0+255),b
 18845  002C00  50F3               	movf	prodl,w,c
 18846  002C02  277F               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 18847  002C04  0E00               	movlw	0
 18848  002C06  0378               	mulwf	??_DELAY_ms& (0+255),b
 18849  002C08  50F3               	movf	prodl,w,c
 18850  002C0A  277F               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 18851  002C0C  C07C  F080         	movff	??_DELAY_ms+4,DELAY_ms@cyclesRequiredForEntireDelay
 18852  002C10  C07D  F081         	movff	??_DELAY_ms+5,DELAY_ms@cyclesRequiredForEntireDelay+1
 18853  002C14  C07E  F082         	movff	??_DELAY_ms+6,DELAY_ms@cyclesRequiredForEntireDelay+2
 18854  002C18  C07F  F083         	movff	??_DELAY_ms+7,DELAY_ms@cyclesRequiredForEntireDelay+3
 18855                           
 18856                           ; BSR set to: 0
 18857                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 18858  002C1C  0E56               	movlw	86
 18859  002C1E  2780               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 18860  002C20  0EFF               	movlw	255
 18861  002C22  2381               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 18862  002C24  2382               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 18863  002C26  2383               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 18864                           
 18865                           ; BSR set to: 0
 18866                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 18867  002C28  BF83               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 18868  002C2A  0CFF               	retlw	255
 18869  002C2C  5183               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 18870  002C2E  1182               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 18871  002C30  1181               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 18872  002C32  E10C               	bnz	l783
 18873  002C34  0EC4               	movlw	196
 18874  002C36  5D80               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 18875  002C38  E209               	bc	l783
 18876  002C3A  0012               	return	
 18877  002C3C                     l784:
 18878                           
 18879                           ; BSR set to: 0
 18880                           ;delay.c: 128: {
 18881                           ;delay.c: 129: __nop();
 18882  002C3C  F000               	nop	
 18883                           
 18884                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 18885  002C3E  0ED9               	movlw	217
 18886  002C40  0100               	movlb	0	; () banked
 18887  002C42  2780               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 18888  002C44  0EFF               	movlw	255
 18889  002C46  2381               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 18890  002C48  2382               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 18891  002C4A  2383               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 18892  002C4C                     l783:
 18893                           
 18894                           ; BSR set to: 0
 18895  002C4C  BF83               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 18896  002C4E  0012               	return	
 18897  002C50  5183               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 18898  002C52  1182               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 18899  002C54  1181               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 18900  002C56  E1F2               	bnz	l784
 18901  002C58  0580               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 18902  002C5A  E2F0               	bc	l784
 18903                           
 18904                           ; BSR set to: 0
 18905  002C5C  0012               	return		;funcret
 18906  002C5E                     __end_of_DELAY_ms:
 18907                           	opt stack 0
 18908                           tblptru	equ	0xFF8
 18909                           tblptrh	equ	0xFF7
 18910                           tblptrl	equ	0xFF6
 18911                           tablat	equ	0xFF5
 18912                           prodh	equ	0xFF4
 18913                           prodl	equ	0xFF3
 18914                           intcon	equ	0xFF2
 18915                           intcon2	equ	0xFF1
 18916                           intcon3	equ	0xFF0
 18917                           postinc0	equ	0xFEE
 18918                           wreg	equ	0xFE8
 18919                           indf1	equ	0xFE7
 18920                           postinc1	equ	0xFE6
 18921                           fsr1h	equ	0xFE2
 18922                           fsr1l	equ	0xFE1
 18923                           indf2	equ	0xFDF
 18924                           postinc2	equ	0xFDE
 18925                           postdec2	equ	0xFDD
 18926                           fsr2h	equ	0xFDA
 18927                           fsr2l	equ	0xFD9
 18928                           status	equ	0xFD8
 18929                           
 18930 ;; *************** function _low_isr *****************
 18931 ;; Defined at:
 18932 ;;		line 1210 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 18933 ;; Parameters:    Size  Location     Type
 18934 ;;		None
 18935 ;; Auto vars:     Size  Location     Type
 18936 ;;		None
 18937 ;; Return value:  Size  Location     Type
 18938 ;;		None               void
 18939 ;; Registers used:
 18940 ;;		wreg, status,2, status,0, cstack
 18941 ;; Tracked objects:
 18942 ;;		On entry : 0/0
 18943 ;;		On exit  : F/0
 18944 ;;		Unchanged: 0/0
 18945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18948 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18949 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18950 ;;Total ram usage:        4 bytes
 18951 ;; Hardware stack levels used:    1
 18952 ;; Hardware stack levels required when called:    7
 18953 ;; This function calls:
 18954 ;;		i1_RegisterRead
 18955 ;; This function is called by:
 18956 ;;		Interrupt level 1
 18957 ;; This function uses a non-reentrant model
 18958 ;;
 18959                           
 18960                           	psect	intcodelo
 18961  000018                     __pintcodelo:
 18962                           	opt stack 0
 18963  000018                     _low_isr:
 18964                           	opt stack 9
 18965                           
 18966                           ; BSR set to: 0
 18967                           ;incstack = 0
 18968  000018  8056               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 18969  00001A  CFD8 F073          	movff	status,??_low_isr+1
 18970  00001E  CFE8 F074          	movff	wreg,??_low_isr+2
 18971  000022  CFE0 F075          	movff	bsr,??_low_isr+3
 18972                           
 18973                           ;drv_mrf_miwi_89xa.c: 1224: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 18974  000026  B2F2               	btfsc	intcon,1,c	;volatile
 18975  000028  A8F2               	btfss	intcon,4,c	;volatile
 18976  00002A  D001               	goto	i1l8464
 18977                           
 18978                           ;drv_mrf_miwi_89xa.c: 1225: INTCONbits.INT0IF = 0;
 18979  00002C  92F2               	bcf	intcon,1,c	;volatile
 18980  00002E                     i1l8464:
 18981                           
 18982                           ;drv_mrf_miwi_89xa.c: 1228: if(RF_Mode == 0x60)
 18983  00002E  0E60               	movlw	96
 18984  000030  0100               	movlb	0	; () banked
 18985  000032  19DD               	xorwf	_RF_Mode& (0+255),w,b
 18986  000034  E107               	bnz	i1l179
 18987                           
 18988                           ; BSR set to: 0
 18989                           ;drv_mrf_miwi_89xa.c: 1229: {
 18990                           ;drv_mrf_miwi_89xa.c: 1230: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 18991  000036  0E28               	movlw	40
 18992  000038  ECDC  F01D         	call	i1_RegisterRead
 18993  00003C  6F72               	movwf	??_low_isr& (0+255),b
 18994  00003E  90D8               	bcf	status,0,c
 18995  000040  3172               	rrcf	??_low_isr& (0+255),w,b
 18996  000042  6E42               	movwf	_RSSIVal,c
 18997  000044                     i1l179:
 18998                           
 18999                           ; BSR set to: 0
 19000  000044  C075  FFE0         	movff	??_low_isr+3,bsr
 19001  000048  C074  FFE8         	movff	??_low_isr+2,wreg
 19002  00004C  C073  FFD8         	movff	??_low_isr+1,status
 19003  000050  9056               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 19004  000052  0010               	retfie	
 19005  000054                     __end_of_low_isr:
 19006                           	opt stack 0
 19007                           tblptru	equ	0xFF8
 19008                           tblptrh	equ	0xFF7
 19009                           tblptrl	equ	0xFF6
 19010                           tablat	equ	0xFF5
 19011                           prodh	equ	0xFF4
 19012                           prodl	equ	0xFF3
 19013                           intcon	equ	0xFF2
 19014                           intcon2	equ	0xFF1
 19015                           intcon3	equ	0xFF0
 19016                           postinc0	equ	0xFEE
 19017                           wreg	equ	0xFE8
 19018                           indf1	equ	0xFE7
 19019                           postinc1	equ	0xFE6
 19020                           fsr1h	equ	0xFE2
 19021                           fsr1l	equ	0xFE1
 19022                           bsr	equ	0xFE0
 19023                           indf2	equ	0xFDF
 19024                           postinc2	equ	0xFDE
 19025                           postdec2	equ	0xFDD
 19026                           fsr2h	equ	0xFDA
 19027                           fsr2l	equ	0xFD9
 19028                           status	equ	0xFD8
 19029                           
 19030 ;; *************** function i1_RegisterRead *****************
 19031 ;; Defined at:
 19032 ;;		line 200 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 19033 ;; Parameters:    Size  Location     Type
 19034 ;;  address         1    wreg     unsigned char 
 19035 ;; Auto vars:     Size  Location     Type
 19036 ;;  address         1   14[BANK0 ] unsigned char 
 19037 ;;  RegisterRead    1   17[BANK0 ] unsigned char 
 19038 ;;  RegisterRead    1   16[BANK0 ] unsigned char 
 19039 ;;  RegisterRead    1   15[BANK0 ] unsigned char 
 19040 ;; Return value:  Size  Location     Type
 19041 ;;                  1    wreg      unsigned char 
 19042 ;; Registers used:
 19043 ;;		wreg, status,2, status,0, cstack
 19044 ;; Tracked objects:
 19045 ;;		On entry : F/0
 19046 ;;		On exit  : F/0
 19047 ;;		Unchanged: 0/0
 19048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19050 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19052 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19053 ;;Total ram usage:        4 bytes
 19054 ;; Hardware stack levels used:    1
 19055 ;; Hardware stack levels required when called:    6
 19056 ;; This function calls:
 19057 ;;		i1_SPI1_Exchange8bit
 19058 ;; This function is called by:
 19059 ;;		_low_isr
 19060 ;; This function uses a non-reentrant model
 19061 ;;
 19062                           
 19063                           	psect	text83
 19064  003BB8                     __ptext83:
 19065                           	opt stack 0
 19066  003BB8                     i1_RegisterRead:
 19067                           	opt stack 9
 19068                           
 19069                           ; BSR set to: 0
 19070                           ;incstack = 0
 19071                           ;i1RegisterRead@address stored from wreg
 19072  003BB8  6F6E               	movwf	i1RegisterRead@address& (0+255),b
 19073                           
 19074                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 19075                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 19076  003BBA  0E00               	movlw	0
 19077  003BBC  B6F0               	btfsc	intcon3,3,c	;volatile
 19078  003BBE  0E01               	movlw	1
 19079  003BC0  0100               	movlb	0	; () banked
 19080  003BC2  6F70               	movwf	i1RegisterRead@IRQ1select& (0+255),b
 19081                           
 19082                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 19083  003BC4  0E00               	movlw	0
 19084  003BC6  B8F2               	btfsc	intcon,4,c	;volatile
 19085  003BC8  0E01               	movlw	1
 19086  003BCA  6F71               	movwf	i1RegisterRead@IRQ0select& (0+255),b
 19087                           
 19088                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 19089  003BCC  98F2               	bcf	intcon,4,c	;volatile
 19090                           
 19091                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 19092  003BCE  96F0               	bcf	intcon3,3,c	;volatile
 19093                           
 19094                           ;drv_mrf_miwi_89xa.c: 211: LATDbits.LATD1 = 0;
 19095  003BD0  928C               	bcf	3980,1,c	;volatile
 19096                           
 19097                           ; BSR set to: 0
 19098                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 19099  003BD2  8D6E               	bsf	i1RegisterRead@address& (0+255),6,b
 19100                           
 19101                           ; BSR set to: 0
 19102                           ;drv_mrf_miwi_89xa.c: 213: SPI1_Exchange8bit(address);
 19103  003BD4  516E               	movf	i1RegisterRead@address& (0+255),w,b
 19104  003BD6  ECE9  F020         	call	i1_SPI1_Exchange8bit
 19105                           
 19106                           ;drv_mrf_miwi_89xa.c: 214: value = SPI1_Exchange8bit(0x00);
 19107  003BDA  0E00               	movlw	0
 19108  003BDC  ECE9  F020         	call	i1_SPI1_Exchange8bit
 19109  003BE0  0100               	movlb	0	; () banked
 19110  003BE2  6F6F               	movwf	i1RegisterRead@value& (0+255),b
 19111                           
 19112                           ; BSR set to: 0
 19113                           ;drv_mrf_miwi_89xa.c: 215: LATDbits.LATD1 = 1;
 19114  003BE4  828C               	bsf	3980,1,c	;volatile
 19115                           
 19116                           ; BSR set to: 0
 19117                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 19118  003BE6  B170               	btfsc	i1RegisterRead@IRQ1select& (0+255),0,b
 19119  003BE8  D002               	bra	i1u776_25
 19120  003BEA  96F0               	bcf	intcon3,3,c	;volatile
 19121  003BEC  D001               	bra	i1u776_26
 19122  003BEE                     i1u776_25:
 19123  003BEE  86F0               	bsf	intcon3,3,c	;volatile
 19124  003BF0                     i1u776_26:
 19125                           
 19126                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 19127  003BF0  0100               	movlb	0	; () banked
 19128  003BF2  B171               	btfsc	i1RegisterRead@IRQ0select& (0+255),0,b
 19129  003BF4  D002               	bra	i1u777_25
 19130  003BF6  98F2               	bcf	intcon,4,c	;volatile
 19131  003BF8  D001               	bra	i1u777_26
 19132  003BFA                     i1u777_25:
 19133  003BFA  88F2               	bsf	intcon,4,c	;volatile
 19134  003BFC                     i1u777_26:
 19135                           
 19136                           ;drv_mrf_miwi_89xa.c: 222: return value;
 19137  003BFC  0100               	movlb	0	; () banked
 19138  003BFE  516F               	movf	i1RegisterRead@value& (0+255),w,b
 19139                           
 19140                           ; BSR set to: 0
 19141  003C00  0012               	return		;funcret
 19142  003C02                     __end_ofi1_RegisterRead:
 19143                           	opt stack 0
 19144                           tblptru	equ	0xFF8
 19145                           tblptrh	equ	0xFF7
 19146                           tblptrl	equ	0xFF6
 19147                           tablat	equ	0xFF5
 19148                           prodh	equ	0xFF4
 19149                           prodl	equ	0xFF3
 19150                           intcon	equ	0xFF2
 19151                           intcon2	equ	0xFF1
 19152                           intcon3	equ	0xFF0
 19153                           postinc0	equ	0xFEE
 19154                           wreg	equ	0xFE8
 19155                           indf1	equ	0xFE7
 19156                           postinc1	equ	0xFE6
 19157                           fsr1h	equ	0xFE2
 19158                           fsr1l	equ	0xFE1
 19159                           bsr	equ	0xFE0
 19160                           indf2	equ	0xFDF
 19161                           postinc2	equ	0xFDE
 19162                           postdec2	equ	0xFDD
 19163                           fsr2h	equ	0xFDA
 19164                           fsr2l	equ	0xFD9
 19165                           status	equ	0xFD8
 19166                           
 19167 ;; *************** function i1_SPI1_Exchange8bit *****************
 19168 ;; Defined at:
 19169 ;;		line 51 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 19170 ;; Parameters:    Size  Location     Type
 19171 ;;  data            1    wreg     unsigned char 
 19172 ;; Auto vars:     Size  Location     Type
 19173 ;;  data            1   13[BANK0 ] unsigned char 
 19174 ;; Return value:  Size  Location     Type
 19175 ;;                  1    wreg      unsigned char 
 19176 ;; Registers used:
 19177 ;;		wreg, status,2
 19178 ;; Tracked objects:
 19179 ;;		On entry : 0/0
 19180 ;;		On exit  : 0/0
 19181 ;;		Unchanged: 0/0
 19182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19184 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19186 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19187 ;;Total ram usage:        1 bytes
 19188 ;; Hardware stack levels used:    1
 19189 ;; Hardware stack levels required when called:    5
 19190 ;; This function calls:
 19191 ;;		Nothing
 19192 ;; This function is called by:
 19193 ;;		i1_RegisterRead
 19194 ;; This function uses a non-reentrant model
 19195 ;;
 19196                           
 19197                           	psect	text84
 19198  0041D2                     __ptext84:
 19199                           	opt stack 0
 19200  0041D2                     i1_SPI1_Exchange8bit:
 19201                           	opt stack 9
 19202                           
 19203                           ; BSR set to: 0
 19204                           ;incstack = 0
 19205                           ;i1SPI1_Exchange8bit@data stored from wreg
 19206  0041D2  0100               	movlb	0	; () banked
 19207  0041D4  6F6D               	movwf	i1SPI1_Exchange8bit@data& (0+255),b
 19208                           
 19209                           ;spi.c: 53: SSP1CON1bits.WCOL = 0;
 19210  0041D6  9EC6               	bcf	4038,7,c	;volatile
 19211                           
 19212                           ;spi.c: 55: SSP1BUF = data;
 19213  0041D8  C06D  FFC9         	movff	i1SPI1_Exchange8bit@data,4041	;volatile
 19214  0041DC                     i1l922:
 19215  0041DC  A0C7               	btfss	4039,0,c	;volatile
 19216  0041DE  D7FE               	goto	i1l922
 19217                           
 19218                           ;spi.c: 58: }
 19219                           ;spi.c: 60: return (SSP1BUF);
 19220  0041E0  50C9               	movf	4041,w,c	;volatile
 19221  0041E2  0012               	return		;funcret
 19222  0041E4                     __end_ofi1_SPI1_Exchange8bit:
 19223                           	opt stack 0
 19224                           tblptru	equ	0xFF8
 19225                           tblptrh	equ	0xFF7
 19226                           tblptrl	equ	0xFF6
 19227                           tablat	equ	0xFF5
 19228                           prodh	equ	0xFF4
 19229                           prodl	equ	0xFF3
 19230                           intcon	equ	0xFF2
 19231                           intcon2	equ	0xFF1
 19232                           intcon3	equ	0xFF0
 19233                           postinc0	equ	0xFEE
 19234                           wreg	equ	0xFE8
 19235                           indf1	equ	0xFE7
 19236                           postinc1	equ	0xFE6
 19237                           fsr1h	equ	0xFE2
 19238                           fsr1l	equ	0xFE1
 19239                           bsr	equ	0xFE0
 19240                           indf2	equ	0xFDF
 19241                           postinc2	equ	0xFDE
 19242                           postdec2	equ	0xFDD
 19243                           fsr2h	equ	0xFDA
 19244                           fsr2l	equ	0xFD9
 19245                           status	equ	0xFD8
 19246                           
 19247 ;; *************** function _high_isr *****************
 19248 ;; Defined at:
 19249 ;;		line 1240 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 19250 ;; Parameters:    Size  Location     Type
 19251 ;;		None
 19252 ;; Auto vars:     Size  Location     Type
 19253 ;;  ackInfoIndex    1    9[BANK0 ] unsigned char 
 19254 ;;  i               1   12[BANK0 ] unsigned char 
 19255 ;;  fifo_stat       1    2[BANK0 ] unsigned char 
 19256 ;;  ackPacket       4    3[BANK0 ] unsigned char [4]
 19257 ;;  counter         2    0[BANK0 ] unsigned int 
 19258 ;;  BankIndex       1   11[BANK0 ] unsigned char 
 19259 ;;  PacketLen       1   10[BANK0 ] unsigned char 
 19260 ;;  RxPacketPtr     1    8[BANK0 ] unsigned char 
 19261 ;;  bAck            1    7[BANK0 ] unsigned char 
 19262 ;; Return value:  Size  Location     Type
 19263 ;;		None               void
 19264 ;; Registers used:
 19265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19266 ;; Tracked objects:
 19267 ;;		On entry : 0/0
 19268 ;;		On exit  : 0/0
 19269 ;;		Unchanged: 0/0
 19270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19272 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19273 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19274 ;;      Totals:        10      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19275 ;;Total ram usage:       23 bytes
 19276 ;; Hardware stack levels used:    1
 19277 ;; Hardware stack levels required when called:    4
 19278 ;; This function calls:
 19279 ;;		_UserInterruptHandler
 19280 ;;		i2_MiWi_TickGet
 19281 ;;		i2_RegisterRead
 19282 ;;		i2_SPI1_Exchange8bit
 19283 ;;		i2_TxPacket
 19284 ;; This function is called by:
 19285 ;;		Interrupt level 2
 19286 ;; This function uses a non-reentrant model
 19287 ;;
 19288                           
 19289                           	psect	intcode
 19290  000008                     __pintcode:
 19291                           	opt stack 0
 19292  000008                     _high_isr:
 19293                           	opt stack 9
 19294                           
 19295                           ;incstack = 0
 19296  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19297  00000A  CFE1 F029          	movff	fsr1l,??_high_isr+4
 19298  00000E  CFE2 F02A          	movff	fsr1h,??_high_isr+5
 19299  000012  EF71  F00B         	goto	int_func
 19300                           tblptru	equ	0xFF8
 19301                           tblptrh	equ	0xFF7
 19302                           tblptrl	equ	0xFF6
 19303                           tablat	equ	0xFF5
 19304                           prodh	equ	0xFF4
 19305                           prodl	equ	0xFF3
 19306                           intcon	equ	0xFF2
 19307                           intcon2	equ	0xFF1
 19308                           intcon3	equ	0xFF0
 19309                           postinc0	equ	0xFEE
 19310                           wreg	equ	0xFE8
 19311                           indf1	equ	0xFE7
 19312                           postinc1	equ	0xFE6
 19313                           fsr1h	equ	0xFE2
 19314                           fsr1l	equ	0xFE1
 19315                           bsr	equ	0xFE0
 19316                           indf2	equ	0xFDF
 19317                           postinc2	equ	0xFDE
 19318                           postdec2	equ	0xFDD
 19319                           fsr2h	equ	0xFDA
 19320                           fsr2l	equ	0xFD9
 19321                           status	equ	0xFD8
 19322                           
 19323                           	psect	intcode_body
 19324  0016E2                     __pintcode_body:
 19325                           	opt stack 9
 19326  0016E2                     int_func:
 19327                           	opt stack 9
 19328  0016E2  CFD9 F02B          	movff	fsr2l,??_high_isr+6
 19329  0016E6  CFDA F02C          	movff	fsr2h,??_high_isr+7
 19330  0016EA  CFF3 F02D          	movff	prodl,??_high_isr+8
 19331  0016EE  CFF4 F02E          	movff	prodh,??_high_isr+9
 19332                           
 19333                           ;drv_mrf_miwi_89xa.c: 1255: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE )
 19334  0016F2  B0F0               	btfsc	intcon3,0,c	;volatile
 19335  0016F4  A6F0               	btfss	intcon3,3,c	;volatile
 19336  0016F6  D1AD               	goto	i2l11790
 19337                           
 19338                           ;drv_mrf_miwi_89xa.c: 1256: {
 19339                           ;drv_mrf_miwi_89xa.c: 1257: if(RF_Mode == 0x60)
 19340  0016F8  0E60               	movlw	96
 19341  0016FA  0100               	movlb	0	; () banked
 19342  0016FC  19DD               	xorwf	_RF_Mode& (0+255),w,b
 19343  0016FE  E001 D1A4          	bnz	i2l11784
 19344                           
 19345                           ; BSR set to: 0
 19346                           ;drv_mrf_miwi_89xa.c: 1258: {
 19347                           ;drv_mrf_miwi_89xa.c: 1259: uint8_t RxPacketPtr;
 19348                           ;drv_mrf_miwi_89xa.c: 1260: uint8_t PacketLen;
 19349                           ;drv_mrf_miwi_89xa.c: 1261: uint8_t BankIndex;
 19350                           ;drv_mrf_miwi_89xa.c: 1262: uint16_t counter;
 19351                           ;drv_mrf_miwi_89xa.c: 1263: bool bAck;
 19352                           ;drv_mrf_miwi_89xa.c: 1264: uint8_t ackPacket[4];
 19353                           ;drv_mrf_miwi_89xa.c: 1270: RSSILock = RSSIVal;
 19354  001702  C042  F041         	movff	_RSSIVal,_RSSILock
 19355                           
 19356                           ;drv_mrf_miwi_89xa.c: 1272: LATAbits.LATA5 = 0;
 19357  001706  9A89               	bcf	3977,5,c	;volatile
 19358                           
 19359                           ; BSR set to: 0
 19360                           ;drv_mrf_miwi_89xa.c: 1274: PacketLen = SPI1_Exchange8bit(0x00);
 19361  001708  0E00               	movlw	0
 19362  00170A  ECF2  F020         	call	i2_SPI1_Exchange8bit
 19363  00170E  0100               	movlb	0	; () banked
 19364  001710  6F6A               	movwf	high_isr@PacketLen& (0+255),b
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;drv_mrf_miwi_89xa.c: 1275: LATAbits.LATA5 = 1;
 19368  001712  8A89               	bsf	3977,5,c	;volatile
 19369                           
 19370                           ; BSR set to: 0
 19371                           ;drv_mrf_miwi_89xa.c: 1278: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 19372  001714  6B6B               	clrf	high_isr@BankIndex& (0+255),b
 19373  001716                     i2l11634:
 19374                           
 19375                           ; BSR set to: 0
 19376                           ;drv_mrf_miwi_89xa.c: 1279: {
 19377                           ;drv_mrf_miwi_89xa.c: 1280: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 19378  001716  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19379  001718  0D39               	mullw	57
 19380  00171A  0E00               	movlw	low _RxPacket
 19381  00171C  24F3               	addwf	prodl,w,c
 19382  00171E  6ED9               	movwf	fsr2l,c
 19383  001720  0E03               	movlw	high _RxPacket
 19384  001722  20F4               	addwfc	prodh,w,c
 19385  001724  6EDA               	movwf	fsr2h,c
 19386  001726  A0DF               	btfss	indf2,0,c
 19387  001728  D005               	goto	i2l11642
 19388                           
 19389                           ; BSR set to: 3
 19390  00172A  0100               	movlb	0	; () banked
 19391  00172C  2B6B               	incf	high_isr@BankIndex& (0+255),f,b
 19392                           
 19393                           ; BSR set to: 0
 19394  00172E  0E01               	movlw	1
 19395  001730  656B               	cpfsgt	high_isr@BankIndex& (0+255),b
 19396  001732  D7F1               	goto	i2l11634
 19397  001734                     i2l11642:
 19398                           
 19399                           ;drv_mrf_miwi_89xa.c: 1283: }
 19400                           ;drv_mrf_miwi_89xa.c: 1284: }
 19401                           ;drv_mrf_miwi_89xa.c: 1287: if( PacketLen == 2 )
 19402  001734  0E02               	movlw	2
 19403  001736  0100               	movlb	0	; () banked
 19404  001738  196A               	xorwf	high_isr@PacketLen& (0+255),w,b
 19405  00173A  E103               	bnz	i2l187
 19406                           
 19407                           ; BSR set to: 0
 19408                           ;drv_mrf_miwi_89xa.c: 1288: {
 19409                           ;drv_mrf_miwi_89xa.c: 1289: bAck = 1;
 19410  00173C  0E01               	movlw	1
 19411  00173E  6F67               	movwf	high_isr@bAck& (0+255),b
 19412                           
 19413                           ;drv_mrf_miwi_89xa.c: 1290: }
 19414  001740  D001               	goto	i2l11646
 19415  001742                     i2l187:
 19416                           
 19417                           ; BSR set to: 0
 19418                           ;drv_mrf_miwi_89xa.c: 1291: else
 19419                           ;drv_mrf_miwi_89xa.c: 1292: {
 19420                           ;drv_mrf_miwi_89xa.c: 1293: bAck = 0;
 19421  001742  6B67               	clrf	high_isr@bAck& (0+255),b
 19422  001744                     i2l11646:
 19423                           
 19424                           ; BSR set to: 0
 19425                           ;drv_mrf_miwi_89xa.c: 1294: }
 19426                           ;drv_mrf_miwi_89xa.c: 1297: if( PacketLen >= (35+0+8+8+4) || PacketLen == 0 || (BankInde
      +                          x >= 2 && (bAck==0)) )
 19427  001744  0E37               	movlw	55
 19428  001746  616A               	cpfslt	high_isr@PacketLen& (0+255),b
 19429  001748  D007               	goto	i2l11654
 19430                           
 19431                           ; BSR set to: 0
 19432  00174A  516A               	movf	high_isr@PacketLen& (0+255),w,b
 19433  00174C  E005               	bz	i2l11654
 19434                           
 19435                           ; BSR set to: 0
 19436  00174E  0E01               	movlw	1
 19437  001750  656B               	cpfsgt	high_isr@BankIndex& (0+255),b
 19438  001752  D013               	goto	i2l189
 19439                           
 19440                           ; BSR set to: 0
 19441  001754  5167               	movf	high_isr@bAck& (0+255),w,b
 19442  001756  E111               	bnz	i2l189
 19443  001758                     i2l11654:
 19444                           
 19445                           ; BSR set to: 0
 19446                           ;drv_mrf_miwi_89xa.c: 1300: {
 19447                           ;drv_mrf_miwi_89xa.c: 1301: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 19448  001758  0E1A               	movlw	26
 19449  00175A  EC25  F01E         	call	i2_RegisterRead
 19450  00175E  D008               	goto	L8
 19451  001760                     i2l194:
 19452                           
 19453                           ; BSR set to: 0
 19454                           ;drv_mrf_miwi_89xa.c: 1303: {
 19455                           ;drv_mrf_miwi_89xa.c: 1304: LATAbits.LATA5 = 0;
 19456  001760  9A89               	bcf	3977,5,c	;volatile
 19457                           
 19458                           ; BSR set to: 0
 19459                           ;drv_mrf_miwi_89xa.c: 1306: SPI1_Exchange8bit(0x00);
 19460  001762  0E00               	movlw	0
 19461  001764  ECF2  F020         	call	i2_SPI1_Exchange8bit
 19462                           
 19463                           ;drv_mrf_miwi_89xa.c: 1307: LATAbits.LATA5 = 1;
 19464  001768  8A89               	bsf	3977,5,c	;volatile
 19465                           
 19466                           ;drv_mrf_miwi_89xa.c: 1308: fifo_stat = RegisterRead(0x1A00>>8);
 19467  00176A  0E1A               	movlw	26
 19468  00176C  EC25  F01E         	call	i2_RegisterRead
 19469  001770                     L8:
 19470  001770  0100               	movlb	0	; () banked
 19471  001772  6F62               	movwf	high_isr@fifo_stat& (0+255),b
 19472                           
 19473                           ; BSR set to: 0
 19474  001774  B362               	btfsc	high_isr@fifo_stat& (0+255),1,b
 19475  001776  D7F4               	goto	i2l194
 19476  001778  D16A               	goto	i2l11786
 19477  00177A                     i2l189:
 19478                           
 19479                           ; BSR set to: 0
 19480                           ;drv_mrf_miwi_89xa.c: 1312: }
 19481                           ;drv_mrf_miwi_89xa.c: 1314: RxPacketPtr = 0;
 19482  00177A  6B68               	clrf	high_isr@RxPacketPtr& (0+255),b
 19483                           
 19484                           ;drv_mrf_miwi_89xa.c: 1315: counter = PacketLen;
 19485  00177C  C06A  F060         	movff	high_isr@PacketLen,high_isr@counter
 19486  001780  6B61               	clrf	(high_isr@counter+1)& (0+255),b
 19487                           
 19488                           ;drv_mrf_miwi_89xa.c: 1317: while(counter >= 1)
 19489  001782  D15F               	goto	i2l11782
 19490  001784                     i2l11664:
 19491                           
 19492                           ; BSR set to: 0
 19493                           ;drv_mrf_miwi_89xa.c: 1320: if(1)
 19494  001784  0760               	decf	high_isr@counter& (0+255),f,b
 19495  001786  A0D8               	btfss	status,0,c
 19496  001788  0761               	decf	(high_isr@counter+1)& (0+255),f,b
 19497                           
 19498                           ; BSR set to: 0
 19499                           ;drv_mrf_miwi_89xa.c: 1321: {
 19500                           ;drv_mrf_miwi_89xa.c: 1323: if( bAck )
 19501  00178A  5167               	movf	high_isr@bAck& (0+255),w,b
 19502  00178C  E009               	bz	i2l200
 19503                           
 19504                           ; BSR set to: 0
 19505                           ;drv_mrf_miwi_89xa.c: 1324: {
 19506                           ;drv_mrf_miwi_89xa.c: 1325: LATAbits.LATA5 = 0;
 19507  00178E  9A89               	bcf	3977,5,c	;volatile
 19508                           
 19509                           ; BSR set to: 0
 19510                           ;drv_mrf_miwi_89xa.c: 1327: ackPacket[RxPacketPtr++] = SPI1_Exchange8bit(0x00);
 19511  001790  5168               	movf	high_isr@RxPacketPtr& (0+255),w,b
 19512  001792  0F63               	addlw	low high_isr@ackPacket
 19513  001794  6ED9               	movwf	fsr2l,c
 19514  001796  6ADA               	clrf	fsr2h,c
 19515  001798  0E00               	movlw	0
 19516  00179A  ECF2  F020         	call	i2_SPI1_Exchange8bit
 19517  00179E  D017               	goto	L11
 19518  0017A0                     i2l200:
 19519                           
 19520                           ; BSR set to: 0
 19521                           ;drv_mrf_miwi_89xa.c: 1331: else
 19522                           ;drv_mrf_miwi_89xa.c: 1332: {
 19523                           ;drv_mrf_miwi_89xa.c: 1333: LATAbits.LATA5 = 0;
 19524  0017A0  9A89               	bcf	3977,5,c	;volatile
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;drv_mrf_miwi_89xa.c: 1335: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPI1_Exchange8b
      +                          it(0x00);
 19528  0017A2  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19529  0017A4  0D39               	mullw	57
 19530  0017A6  0E00               	movlw	low _RxPacket
 19531  0017A8  6E25               	movwf	??_high_isr& (0+255),c
 19532  0017AA  0E03               	movlw	high _RxPacket
 19533  0017AC  6E26               	movwf	(??_high_isr+1)& (0+255),c
 19534  0017AE  2A25               	incf	??_high_isr,f,c
 19535  0017B0  0E00               	movlw	0
 19536  0017B2  2226               	addwfc	??_high_isr+1,f,c
 19537  0017B4  50F3               	movf	prodl,w,c
 19538  0017B6  2625               	addwf	??_high_isr,f,c
 19539  0017B8  50F4               	movf	prodh,w,c
 19540  0017BA  2226               	addwfc	??_high_isr+1,f,c
 19541  0017BC  5168               	movf	high_isr@RxPacketPtr& (0+255),w,b
 19542  0017BE  2425               	addwf	??_high_isr,w,c
 19543  0017C0  6ED9               	movwf	fsr2l,c
 19544  0017C2  0E00               	movlw	0
 19545  0017C4  2026               	addwfc	??_high_isr+1,w,c
 19546  0017C6  6EDA               	movwf	fsr2h,c
 19547  0017C8  0E00               	movlw	0
 19548  0017CA  ECF2  F020         	call	i2_SPI1_Exchange8bit
 19549  0017CE                     L11:
 19550  0017CE  6EDF               	movwf	indf2,c
 19551  0017D0  0100               	movlb	0	; () banked
 19552  0017D2  2B68               	incf	high_isr@RxPacketPtr& (0+255),f,b
 19553                           
 19554                           ; BSR set to: 0
 19555                           ;drv_mrf_miwi_89xa.c: 1336: LATAbits.LATA5 = 1;
 19556  0017D4  8A89               	bsf	3977,5,c	;volatile
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;drv_mrf_miwi_89xa.c: 1337: }
 19560                           ;drv_mrf_miwi_89xa.c: 1340: if( RxPacketPtr >= PacketLen )
 19561  0017D6  516A               	movf	high_isr@PacketLen& (0+255),w,b
 19562  0017D8  5D68               	subwf	high_isr@RxPacketPtr& (0+255),w,b
 19563  0017DA  E201 D132          	bnc	i2l11782
 19564                           
 19565                           ; BSR set to: 0
 19566                           ;drv_mrf_miwi_89xa.c: 1341: {
 19567                           ;drv_mrf_miwi_89xa.c: 1342: uint8_t i;
 19568                           ;drv_mrf_miwi_89xa.c: 1344: if( bAck )
 19569  0017DE  5167               	movf	high_isr@bAck& (0+255),w,b
 19570  0017E0  E023               	bz	i2l203
 19571                           
 19572                           ; BSR set to: 0
 19573                           ;drv_mrf_miwi_89xa.c: 1345: {
 19574                           ;drv_mrf_miwi_89xa.c: 1347: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 19575  0017E2  5163               	movf	high_isr@ackPacket& (0+255),w,b
 19576  0017E4  0B03               	andlw	3
 19577  0017E6  0A02               	xorlw	2
 19578  0017E8  E107               	bnz	i2l11696
 19579                           
 19580                           ; BSR set to: 0
 19581                           ;drv_mrf_miwi_89xa.c: 1348: {
 19582                           ;drv_mrf_miwi_89xa.c: 1349: if( ackPacket[1] == TxMACSeq )
 19583  0017EA  5044               	movf	_TxMACSeq,w,c
 19584  0017EC  1964               	xorwf	(high_isr@ackPacket+1)& (0+255),w,b
 19585  0017EE  E001 D12E          	bnz	i2l11786
 19586                           
 19587                           ; BSR set to: 0
 19588                           ;drv_mrf_miwi_89xa.c: 1350: {
 19589                           ;drv_mrf_miwi_89xa.c: 1351: hasAck = 1;
 19590  0017F2  0E01               	movlw	1
 19591  0017F4  6FE0               	movwf	_hasAck& (0+255),b	;volatile
 19592                           
 19593                           ; BSR set to: 0
 19594                           ;drv_mrf_miwi_89xa.c: 1354: goto RETURN_HERE;
 19595  0017F6  D12B               	goto	i2l11786
 19596  0017F8                     i2l11696:
 19597                           
 19598                           ; BSR set to: 0
 19599                           ;drv_mrf_miwi_89xa.c: 1356: else
 19600                           ;drv_mrf_miwi_89xa.c: 1358: if( BankIndex >= 2 )
 19601  0017F8  0E01               	movlw	1
 19602  0017FA  656B               	cpfsgt	high_isr@BankIndex& (0+255),b
 19603  0017FC  D001               	goto	i2l11700
 19604  0017FE  D7AC               	goto	i2l11654
 19605  001800                     i2l11700:
 19606                           
 19607                           ; BSR set to: 0
 19608                           ;drv_mrf_miwi_89xa.c: 1362: }
 19609                           ;drv_mrf_miwi_89xa.c: 1363: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 19610  001800  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19611  001802  0D39               	mullw	57
 19612  001804  0E01               	movlw	low (_RxPacket+1)
 19613  001806  24F3               	addwf	prodl,w,c
 19614  001808  6ED9               	movwf	fsr2l,c
 19615  00180A  0E03               	movlw	high (_RxPacket+1)
 19616  00180C  20F4               	addwfc	prodh,w,c
 19617  00180E  6EDA               	movwf	fsr2h,c
 19618  001810  C063  FFDF         	movff	high_isr@ackPacket,indf2
 19619                           
 19620                           ;drv_mrf_miwi_89xa.c: 1364: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 19621  001814  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19622  001816  0D39               	mullw	57
 19623  001818  0E02               	movlw	low (_RxPacket+2)
 19624  00181A  24F3               	addwf	prodl,w,c
 19625  00181C  6ED9               	movwf	fsr2l,c
 19626  00181E  0E03               	movlw	high (_RxPacket+2)
 19627  001820  20F4               	addwfc	prodh,w,c
 19628  001822  6EDA               	movwf	fsr2h,c
 19629  001824  C064  FFDF         	movff	high_isr@ackPacket+1,indf2
 19630  001828                     i2l203:
 19631                           
 19632                           ; BSR set to: 0
 19633                           ;drv_mrf_miwi_89xa.c: 1366: }
 19634                           ;drv_mrf_miwi_89xa.c: 1368: RxPacket[BankIndex].PayloadLen = PacketLen;
 19635  001828  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19636  00182A  0D39               	mullw	57
 19637  00182C  0E38               	movlw	low (_RxPacket+56)
 19638  00182E  24F3               	addwf	prodl,w,c
 19639  001830  6ED9               	movwf	fsr2l,c
 19640  001832  0E03               	movlw	high (_RxPacket+56)
 19641  001834  20F4               	addwfc	prodh,w,c
 19642  001836  6EDA               	movwf	fsr2h,c
 19643  001838  C06A  FFDF         	movff	high_isr@PacketLen,indf2
 19644                           
 19645                           ; BSR set to: 0
 19646                           ;drv_mrf_miwi_89xa.c: 1385: {
 19647                           ;drv_mrf_miwi_89xa.c: 1386: uint8_t ackInfoIndex = 0xFF;
 19648  00183C  6969               	setf	high_isr@ackInfoIndex& (0+255),b
 19649                           
 19650                           ;drv_mrf_miwi_89xa.c: 1388: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 19651  00183E  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19652  001840  0D39               	mullw	57
 19653  001842  0E01               	movlw	low (_RxPacket+1)
 19654  001844  24F3               	addwf	prodl,w,c
 19655  001846  6ED9               	movwf	fsr2l,c
 19656  001848  0E03               	movlw	high (_RxPacket+1)
 19657  00184A  20F4               	addwfc	prodh,w,c
 19658  00184C  6EDA               	movwf	fsr2h,c
 19659  00184E  ACDF               	btfss	indf2,6,c
 19660  001850  D033               	goto	i2l11716
 19661                           
 19662                           ; BSR set to: 3
 19663                           ;drv_mrf_miwi_89xa.c: 1389: {
 19664                           ;drv_mrf_miwi_89xa.c: 1390: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 19665  001852  0100               	movlb	0	; () banked
 19666  001854  6B6C               	clrf	high_isr@i& (0+255),b
 19667  001856  D028               	goto	i2l11714
 19668  001858                     i2l11706:
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;drv_mrf_miwi_89xa.c: 1391: {
 19672                           ;drv_mrf_miwi_89xa.c: 1392: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 19673  001858  516C               	movf	high_isr@i& (0+255),w,b
 19674  00185A  243A               	addwf	_MACInitParams+1,w,c
 19675  00185C  6ED9               	movwf	fsr2l,c
 19676  00185E  0E00               	movlw	0
 19677  001860  203B               	addwfc	_MACInitParams+2,w,c
 19678  001862  6EDA               	movwf	fsr2h,c
 19679  001864  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19680  001866  0D39               	mullw	57
 19681  001868  0E00               	movlw	low _RxPacket
 19682  00186A  6E26               	movwf	(??_high_isr+1)& (0+255),c
 19683  00186C  0E03               	movlw	high _RxPacket
 19684  00186E  6E27               	movwf	(??_high_isr+2)& (0+255),c
 19685  001870  0E03               	movlw	3
 19686  001872  2626               	addwf	??_high_isr+1,f,c
 19687  001874  0E00               	movlw	0
 19688  001876  2227               	addwfc	??_high_isr+2,f,c
 19689  001878  50F3               	movf	prodl,w,c
 19690  00187A  2626               	addwf	??_high_isr+1,f,c
 19691  00187C  50F4               	movf	prodh,w,c
 19692  00187E  2227               	addwfc	??_high_isr+2,f,c
 19693  001880  516C               	movf	high_isr@i& (0+255),w,b
 19694  001882  2426               	addwf	??_high_isr+1,w,c
 19695  001884  6EE1               	movwf	fsr1l,c
 19696  001886  0E00               	movlw	0
 19697  001888  2027               	addwfc	??_high_isr+2,w,c
 19698  00188A  6EE2               	movwf	fsr1h,c
 19699  00188C  50DE               	movf	postinc2,w,c
 19700  00188E  18E6               	xorwf	postinc1,w,c
 19701  001890  E00A               	bz	i2l11712
 19702                           
 19703                           ; BSR set to: 0
 19704                           ;drv_mrf_miwi_89xa.c: 1395: RxPacket[BankIndex].PayloadLen = 0;
 19705                           
 19706                           ; BSR set to: 0
 19707  001892  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19708  001894  0D39               	mullw	57
 19709  001896  0E38               	movlw	low (_RxPacket+56)
 19710  001898  24F3               	addwf	prodl,w,c
 19711  00189A  6ED9               	movwf	fsr2l,c
 19712  00189C  0E03               	movlw	high (_RxPacket+56)
 19713  00189E  20F4               	addwfc	prodh,w,c
 19714  0018A0  6EDA               	movwf	fsr2h,c
 19715  0018A2  6ADF               	clrf	indf2,c
 19716                           
 19717                           ;drv_mrf_miwi_89xa.c: 1396: goto IGNORE_HERE;
 19718  0018A4  D759               	goto	i2l11654
 19719  0018A6                     i2l11712:
 19720                           
 19721                           ; BSR set to: 0
 19722  0018A6  2B6C               	incf	high_isr@i& (0+255),f,b
 19723  0018A8                     i2l11714:
 19724                           
 19725                           ; BSR set to: 0
 19726  0018A8  3039               	rrcf	_MACInitParams,w,c
 19727  0018AA  32E8               	rrcf	wreg,f,c
 19728  0018AC  32E8               	rrcf	wreg,f,c
 19729  0018AE  0B0F               	andlw	15
 19730  0018B0  6E25               	movwf	??_high_isr& (0+255),c
 19731  0018B2  5025               	movf	??_high_isr,w,c
 19732  0018B4  5D6C               	subwf	high_isr@i& (0+255),w,b
 19733  0018B6  E3D0               	bnc	i2l11706
 19734  0018B8                     i2l11716:
 19735                           
 19736                           ;drv_mrf_miwi_89xa.c: 1397: }
 19737                           ;drv_mrf_miwi_89xa.c: 1398: }
 19738                           ;drv_mrf_miwi_89xa.c: 1399: }
 19739                           ;drv_mrf_miwi_89xa.c: 1402: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 19740  0018B8  0100               	movlb	0	; () banked
 19741  0018BA  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19742  0018BC  0D39               	mullw	57
 19743  0018BE  0E01               	movlw	low (_RxPacket+1)
 19744  0018C0  24F3               	addwf	prodl,w,c
 19745  0018C2  6ED9               	movwf	fsr2l,c
 19746  0018C4  0E03               	movlw	high (_RxPacket+1)
 19747  0018C6  20F4               	addwfc	prodh,w,c
 19748  0018C8  6EDA               	movwf	fsr2h,c
 19749  0018CA  AADF               	btfss	indf2,5,c
 19750  0018CC  D037               	goto	i2l213
 19751                           
 19752                           ; BSR set to: 3
 19753                           ;drv_mrf_miwi_89xa.c: 1403: {
 19754                           ;drv_mrf_miwi_89xa.c: 1405: for(i = 0; i < 2; i++)
 19755  0018CE  6B6C               	clrf	high_isr@i& (0+255),b
 19756  0018D0                     i2l11724:
 19757                           
 19758                           ; BSR set to: 0
 19759                           ;drv_mrf_miwi_89xa.c: 1406: {
 19760                           ;drv_mrf_miwi_89xa.c: 1407: ackPacket[i] = MACTxBuffer[i];
 19761  0018D0  0E00               	movlw	low _MACTxBuffer
 19762  0018D2  256C               	addwf	high_isr@i& (0+255),w,b
 19763  0018D4  6ED9               	movwf	fsr2l,c
 19764  0018D6  6ADA               	clrf	fsr2h,c
 19765  0018D8  0E01               	movlw	high _MACTxBuffer
 19766  0018DA  22DA               	addwfc	fsr2h,f,c
 19767  0018DC  516C               	movf	high_isr@i& (0+255),w,b
 19768  0018DE  0F63               	addlw	low high_isr@ackPacket
 19769  0018E0  6EE1               	movwf	fsr1l,c
 19770  0018E2  6AE2               	clrf	fsr1h,c
 19771  0018E4  CFDF FFE7          	movff	indf2,indf1
 19772                           
 19773                           ; BSR set to: 0
 19774  0018E8  2B6C               	incf	high_isr@i& (0+255),f,b
 19775                           
 19776                           ; BSR set to: 0
 19777  0018EA  0E01               	movlw	1
 19778  0018EC  656C               	cpfsgt	high_isr@i& (0+255),b
 19779  0018EE  D7F0               	goto	i2l11724
 19780                           
 19781                           ; BSR set to: 0
 19782                           ;drv_mrf_miwi_89xa.c: 1408: }
 19783                           ;drv_mrf_miwi_89xa.c: 1409: MACTxBuffer[0] = 0x02 | 0x04;
 19784  0018F0  0E06               	movlw	6
 19785  0018F2  0101               	movlb	1	; () banked
 19786  0018F4  6F00               	movwf	_MACTxBuffer& (0+255),b	;volatile
 19787                           
 19788                           ; BSR set to: 1
 19789                           ;drv_mrf_miwi_89xa.c: 1410: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 19790  0018F6  0100               	movlb	0	; () banked
 19791  0018F8  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19792  0018FA  0D39               	mullw	57
 19793  0018FC  0E02               	movlw	low (_RxPacket+2)
 19794  0018FE  24F3               	addwf	prodl,w,c
 19795  001900  6ED9               	movwf	fsr2l,c
 19796  001902  0E03               	movlw	high (_RxPacket+2)
 19797  001904  20F4               	addwfc	prodh,w,c
 19798  001906  6EDA               	movwf	fsr2h,c
 19799  001908  50DF               	movf	indf2,w,c
 19800  00190A  0101               	movlb	1	; () banked
 19801  00190C  6F01               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 19802                           
 19803                           ; BSR set to: 1
 19804                           ;drv_mrf_miwi_89xa.c: 1411: INTCON3bits.INT1IF = 0;
 19805  00190E  90F0               	bcf	intcon3,0,c	;volatile
 19806                           
 19807                           ; BSR set to: 1
 19808                           ;drv_mrf_miwi_89xa.c: 1412: TxPacket(2, 0);
 19809  001910  6A11               	clrf	i2TxPacket@CCA,c
 19810  001912  0E02               	movlw	2
 19811  001914  EC7C  F013         	call	i2_TxPacket
 19812                           
 19813                           ;drv_mrf_miwi_89xa.c: 1415: for(i = 0; i < 2; i++)
 19814  001918  0100               	movlb	0	; () banked
 19815  00191A  6B6C               	clrf	high_isr@i& (0+255),b
 19816  00191C                     i2l11744:
 19817                           
 19818                           ; BSR set to: 0
 19819                           ;drv_mrf_miwi_89xa.c: 1416: {
 19820                           ;drv_mrf_miwi_89xa.c: 1417: MACTxBuffer[i] = ackPacket[i];
 19821  00191C  516C               	movf	high_isr@i& (0+255),w,b
 19822  00191E  0F63               	addlw	low high_isr@ackPacket
 19823  001920  6ED9               	movwf	fsr2l,c
 19824  001922  6ADA               	clrf	fsr2h,c
 19825  001924  0E00               	movlw	low _MACTxBuffer
 19826  001926  256C               	addwf	high_isr@i& (0+255),w,b
 19827  001928  6EE1               	movwf	fsr1l,c
 19828  00192A  6AE2               	clrf	fsr1h,c
 19829  00192C  0E01               	movlw	high _MACTxBuffer
 19830  00192E  22E2               	addwfc	fsr1h,f,c
 19831  001930  CFDF FFE7          	movff	indf2,indf1
 19832                           
 19833                           ; BSR set to: 0
 19834  001934  2B6C               	incf	high_isr@i& (0+255),f,b
 19835                           
 19836                           ; BSR set to: 0
 19837  001936  0E01               	movlw	1
 19838  001938  656C               	cpfsgt	high_isr@i& (0+255),b
 19839  00193A  D7F0               	goto	i2l11744
 19840  00193C                     i2l213:
 19841                           
 19842                           ;drv_mrf_miwi_89xa.c: 1418: }
 19843                           ;drv_mrf_miwi_89xa.c: 1419: }
 19844                           ;drv_mrf_miwi_89xa.c: 1423: for(i = 0; i < 5; i++)
 19845  00193C  0100               	movlb	0	; () banked
 19846  00193E  6B6C               	clrf	high_isr@i& (0+255),b
 19847  001940                     i2l11754:
 19848                           
 19849                           ; BSR set to: 0
 19850                           ;drv_mrf_miwi_89xa.c: 1424: {
 19851                           ;drv_mrf_miwi_89xa.c: 1425: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 19852  001940  516C               	movf	high_isr@i& (0+255),w,b
 19853  001942  0D06               	mullw	6
 19854  001944  0E00               	movlw	low _AckInfo
 19855  001946  24F3               	addwf	prodl,w,c
 19856  001948  6ED9               	movwf	fsr2l,c
 19857  00194A  0E02               	movlw	high _AckInfo
 19858  00194C  20F4               	addwfc	prodh,w,c
 19859  00194E  6EDA               	movwf	fsr2h,c
 19860  001950  50DF               	movf	indf2,w,c
 19861  001952  E026               	bz	i2l11760
 19862                           
 19863                           ; BSR set to: 0
 19864  001954  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19865  001956  0D39               	mullw	57
 19866  001958  0E02               	movlw	low (_RxPacket+2)
 19867  00195A  24F3               	addwf	prodl,w,c
 19868  00195C  6ED9               	movwf	fsr2l,c
 19869  00195E  0E03               	movlw	high (_RxPacket+2)
 19870  001960  20F4               	addwfc	prodh,w,c
 19871  001962  6EDA               	movwf	fsr2h,c
 19872  001964  516C               	movf	high_isr@i& (0+255),w,b
 19873  001966  0D06               	mullw	6
 19874  001968  0E01               	movlw	low (_AckInfo+1)
 19875  00196A  24F3               	addwf	prodl,w,c
 19876  00196C  6EE1               	movwf	fsr1l,c
 19877  00196E  0E02               	movlw	high (_AckInfo+1)
 19878  001970  20F4               	addwfc	prodh,w,c
 19879  001972  6EE2               	movwf	fsr1h,c
 19880  001974  50DE               	movf	postinc2,w,c
 19881  001976  18E6               	xorwf	postinc1,w,c
 19882  001978  E113               	bnz	i2l11760
 19883                           
 19884                           ; BSR set to: 0
 19885                           ;drv_mrf_miwi_89xa.c: 1426: {
 19886                           ;drv_mrf_miwi_89xa.c: 1427: AckInfo[i].startTick = MiWi_TickGet();
 19887  00197A  EC6B  F01D         	call	i2_MiWi_TickGet	;wreg free
 19888  00197E  516C               	movf	high_isr@i& (0+255),w,b
 19889  001980  0D06               	mullw	6
 19890  001982  0E02               	movlw	low (_AckInfo+2)
 19891  001984  24F3               	addwf	prodl,w,c
 19892  001986  6ED9               	movwf	fsr2l,c
 19893  001988  0E02               	movlw	high (_AckInfo+2)
 19894  00198A  20F4               	addwfc	prodh,w,c
 19895  00198C  6EDA               	movwf	fsr2h,c
 19896  00198E  C001  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 19897  001992  C002  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 19898  001996  C003  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 19899  00199A  C004  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 19900                           
 19901                           ;drv_mrf_miwi_89xa.c: 1428: break;
 19902  00199E  D012               	goto	i2l11770
 19903  0019A0                     i2l11760:
 19904                           
 19905                           ; BSR set to: 0
 19906                           ;drv_mrf_miwi_89xa.c: 1429: }
 19907                           ;drv_mrf_miwi_89xa.c: 1430: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 19908  0019A0  2969               	incf	high_isr@ackInfoIndex& (0+255),w,b
 19909  0019A2  E10C               	bnz	i2l11766
 19910                           
 19911                           ; BSR set to: 0
 19912  0019A4  516C               	movf	high_isr@i& (0+255),w,b
 19913  0019A6  0D06               	mullw	6
 19914  0019A8  0E00               	movlw	low _AckInfo
 19915  0019AA  24F3               	addwf	prodl,w,c
 19916  0019AC  6ED9               	movwf	fsr2l,c
 19917  0019AE  0E02               	movlw	high _AckInfo
 19918  0019B0  20F4               	addwfc	prodh,w,c
 19919  0019B2  6EDA               	movwf	fsr2h,c
 19920  0019B4  50DF               	movf	indf2,w,c
 19921  0019B6  E102               	bnz	i2l11766
 19922                           
 19923                           ; BSR set to: 0
 19924                           ;drv_mrf_miwi_89xa.c: 1431: {
 19925                           ;drv_mrf_miwi_89xa.c: 1432: ackInfoIndex = i;
 19926  0019B8  C06C  F069         	movff	high_isr@i,high_isr@ackInfoIndex
 19927  0019BC                     i2l11766:
 19928                           
 19929                           ; BSR set to: 0
 19930  0019BC  2B6C               	incf	high_isr@i& (0+255),f,b
 19931                           
 19932                           ; BSR set to: 0
 19933  0019BE  0E04               	movlw	4
 19934  0019C0  656C               	cpfsgt	high_isr@i& (0+255),b
 19935  0019C2  D7BE               	goto	i2l11754
 19936  0019C4                     i2l11770:
 19937                           
 19938                           ; BSR set to: 0
 19939                           ;drv_mrf_miwi_89xa.c: 1433: }
 19940                           ;drv_mrf_miwi_89xa.c: 1434: }
 19941                           ;drv_mrf_miwi_89xa.c: 1436: if( i >= 5 )
 19942  0019C4  0E04               	movlw	4
 19943  0019C6  656C               	cpfsgt	high_isr@i& (0+255),b
 19944  0019C8  D042               	goto	i2l11786
 19945                           
 19946                           ; BSR set to: 0
 19947                           ;drv_mrf_miwi_89xa.c: 1437: {
 19948                           ;drv_mrf_miwi_89xa.c: 1438: if( ackInfoIndex < 5 )
 19949  0019CA  0E05               	movlw	5
 19950  0019CC  6169               	cpfslt	high_isr@ackInfoIndex& (0+255),b
 19951  0019CE  D02E               	goto	i2l11780
 19952                           
 19953                           ; BSR set to: 0
 19954                           ;drv_mrf_miwi_89xa.c: 1439: {
 19955                           ;drv_mrf_miwi_89xa.c: 1440: AckInfo[ackInfoIndex].Valid = 1;
 19956  0019D0  5169               	movf	high_isr@ackInfoIndex& (0+255),w,b
 19957  0019D2  0D06               	mullw	6
 19958  0019D4  0E00               	movlw	low _AckInfo
 19959  0019D6  24F3               	addwf	prodl,w,c
 19960  0019D8  6ED9               	movwf	fsr2l,c
 19961  0019DA  0E02               	movlw	high _AckInfo
 19962  0019DC  20F4               	addwfc	prodh,w,c
 19963  0019DE  6EDA               	movwf	fsr2h,c
 19964  0019E0  0E01               	movlw	1
 19965  0019E2  6EDF               	movwf	indf2,c
 19966                           
 19967                           ; BSR set to: 0
 19968                           ;drv_mrf_miwi_89xa.c: 1441: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 19969  0019E4  516B               	movf	high_isr@BankIndex& (0+255),w,b
 19970  0019E6  0D39               	mullw	57
 19971  0019E8  0E02               	movlw	low (_RxPacket+2)
 19972  0019EA  24F3               	addwf	prodl,w,c
 19973  0019EC  6ED9               	movwf	fsr2l,c
 19974  0019EE  0E03               	movlw	high (_RxPacket+2)
 19975  0019F0  20F4               	addwfc	prodh,w,c
 19976  0019F2  6EDA               	movwf	fsr2h,c
 19977  0019F4  5169               	movf	high_isr@ackInfoIndex& (0+255),w,b
 19978  0019F6  0D06               	mullw	6
 19979  0019F8  0E01               	movlw	low (_AckInfo+1)
 19980  0019FA  24F3               	addwf	prodl,w,c
 19981  0019FC  6EE1               	movwf	fsr1l,c
 19982  0019FE  0E02               	movlw	high (_AckInfo+1)
 19983  001A00  20F4               	addwfc	prodh,w,c
 19984  001A02  6EE2               	movwf	fsr1h,c
 19985  001A04  CFDF FFE7          	movff	indf2,indf1
 19986                           
 19987                           ; BSR set to: 0
 19988                           ;drv_mrf_miwi_89xa.c: 1442: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 19989  001A08  EC6B  F01D         	call	i2_MiWi_TickGet	;wreg free
 19990  001A0C  5169               	movf	high_isr@ackInfoIndex& (0+255),w,b
 19991  001A0E  0D06               	mullw	6
 19992  001A10  0E02               	movlw	low (_AckInfo+2)
 19993  001A12  24F3               	addwf	prodl,w,c
 19994  001A14  6ED9               	movwf	fsr2l,c
 19995  001A16  0E02               	movlw	high (_AckInfo+2)
 19996  001A18  20F4               	addwfc	prodh,w,c
 19997  001A1A  6EDA               	movwf	fsr2h,c
 19998  001A1C  C001  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 19999  001A20  C002  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 20000  001A24  C003  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 20001  001A28  C004  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 20002  001A2C                     i2l11780:
 20003                           
 20004                           ; BSR set to: 0
 20005                           ;drv_mrf_miwi_89xa.c: 1443: }
 20006                           ;drv_mrf_miwi_89xa.c: 1446: RxPacket[BankIndex].flags.bits.Valid = 1;
 20007  001A2C  516B               	movf	high_isr@BankIndex& (0+255),w,b
 20008  001A2E  0D39               	mullw	57
 20009  001A30  0E00               	movlw	low _RxPacket
 20010  001A32  24F3               	addwf	prodl,w,c
 20011  001A34  6ED9               	movwf	fsr2l,c
 20012  001A36  0E03               	movlw	high _RxPacket
 20013  001A38  20F4               	addwfc	prodh,w,c
 20014  001A3A  6EDA               	movwf	fsr2h,c
 20015  001A3C  0103               	movlb	3	; () banked
 20016  001A3E  80DF               	bsf	indf2,0,c
 20017  001A40  D006               	goto	i2l11786
 20018  001A42                     i2l11782:
 20019                           
 20020                           ; BSR set to: 0
 20021  001A42  5160               	movf	high_isr@counter& (0+255),w,b
 20022  001A44  1161               	iorwf	(high_isr@counter+1)& (0+255),w,b
 20023  001A46  E003               	bz	i2l11786
 20024  001A48  D69D               	goto	i2l11664
 20025  001A4A                     i2l11784:
 20026                           
 20027                           ; BSR set to: 0
 20028                           ;drv_mrf_miwi_89xa.c: 1461: else
 20029                           ;drv_mrf_miwi_89xa.c: 1462: {
 20030                           ;drv_mrf_miwi_89xa.c: 1464: IRQ1_Received = 1;
 20031  001A4A  0E01               	movlw	1
 20032  001A4C  6FD9               	movwf	_IRQ1_Received& (0+255),b	;volatile
 20033  001A4E                     i2l11786:
 20034                           
 20035                           ;drv_mrf_miwi_89xa.c: 1468: INTCON3bits.INT1IF = 0;
 20036  001A4E  90F0               	bcf	intcon3,0,c	;volatile
 20037                           
 20038                           ;drv_mrf_miwi_89xa.c: 1470: __nop();
 20039  001A50  F000               	nop	
 20040  001A52                     i2l11790:
 20041                           
 20042                           ;drv_mrf_miwi_89xa.c: 1471: }
 20043                           ;drv_mrf_miwi_89xa.c: 1475: {
 20044                           ;drv_mrf_miwi_89xa.c: 1476: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 20045  001A52  B2F2               	btfsc	intcon,1,c	;volatile
 20046  001A54  A8F2               	btfss	intcon,4,c	;volatile
 20047  001A56  D00C               	goto	i2l11800
 20048                           
 20049                           ;drv_mrf_miwi_89xa.c: 1477: {
 20050                           ;drv_mrf_miwi_89xa.c: 1478: INTCONbits.INT0IF = 0;
 20051  001A58  92F2               	bcf	intcon,1,c	;volatile
 20052                           
 20053                           ;drv_mrf_miwi_89xa.c: 1481: if(RF_Mode == 0x60)
 20054  001A5A  0E60               	movlw	96
 20055  001A5C  0100               	movlb	0	; () banked
 20056  001A5E  19DD               	xorwf	_RF_Mode& (0+255),w,b
 20057  001A60  E107               	bnz	i2l11800
 20058                           
 20059                           ; BSR set to: 0
 20060                           ;drv_mrf_miwi_89xa.c: 1482: {
 20061                           ;drv_mrf_miwi_89xa.c: 1483: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 20062  001A62  0E28               	movlw	40
 20063  001A64  EC25  F01E         	call	i2_RegisterRead
 20064  001A68  6E25               	movwf	??_high_isr& (0+255),c
 20065  001A6A  90D8               	bcf	status,0,c
 20066  001A6C  3025               	rrcf	??_high_isr,w,c
 20067  001A6E  6E42               	movwf	_RSSIVal,c
 20068  001A70                     i2l11800:
 20069                           
 20070                           ;drv_mrf_miwi_89xa.c: 1484: }
 20071                           ;drv_mrf_miwi_89xa.c: 1486: }
 20072                           ;drv_mrf_miwi_89xa.c: 1487: }
 20073                           ;drv_mrf_miwi_89xa.c: 1491: if(PIR1bits.TMR1IF)
 20074  001A70  B09E               	btfsc	3998,0,c	;volatile
 20075                           
 20076                           ;drv_mrf_miwi_89xa.c: 1492: {
 20077                           ;drv_mrf_miwi_89xa.c: 1493: if(PIE1bits.TMR1IE)
 20078  001A72  A09D               	btfss	3997,0,c	;volatile
 20079  001A74  D006               	goto	i2l11812
 20080                           
 20081                           ;drv_mrf_miwi_89xa.c: 1494: {
 20082                           ;drv_mrf_miwi_89xa.c: 1496: PIR1bits.TMR1IF = 0;
 20083  001A76  909E               	bcf	3998,0,c	;volatile
 20084                           
 20085                           ;drv_mrf_miwi_89xa.c: 1497: timerExtension1++;
 20086  001A78  2A4B               	incf	_timerExtension1,f,c	;volatile
 20087                           
 20088                           ;drv_mrf_miwi_89xa.c: 1498: if(timerExtension1 == 0)
 20089  001A7A  504B               	movf	_timerExtension1,w,c	;volatile
 20090  001A7C  E102               	bnz	i2l11812
 20091                           
 20092                           ;drv_mrf_miwi_89xa.c: 1499: {
 20093                           ;drv_mrf_miwi_89xa.c: 1500: timerExtension2++;
 20094  001A7E  0100               	movlb	0	; () banked
 20095  001A80  2BE3               	incf	_timerExtension2& (0+255),f,b	;volatile
 20096  001A82                     i2l11812:
 20097                           
 20098                           ;drv_mrf_miwi_89xa.c: 1501: }
 20099                           ;drv_mrf_miwi_89xa.c: 1502: }
 20100                           ;drv_mrf_miwi_89xa.c: 1503: }
 20101                           ;drv_mrf_miwi_89xa.c: 1505: UserInterruptHandler();
 20102  001A82  EC17  F021         	call	_UserInterruptHandler	;wreg free
 20103  001A86  C02E  FFF4         	movff	??_high_isr+9,prodh
 20104  001A8A  C02D  FFF3         	movff	??_high_isr+8,prodl
 20105  001A8E  C02C  FFDA         	movff	??_high_isr+7,fsr2h
 20106  001A92  C02B  FFD9         	movff	??_high_isr+6,fsr2l
 20107  001A96  C02A  FFE2         	movff	??_high_isr+5,fsr1h
 20108  001A9A  C029  FFE1         	movff	??_high_isr+4,fsr1l
 20109  001A9E  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 20110  001AA0  0011               	retfie		f
 20111  001AA2                     __end_of_high_isr:
 20112                           	opt stack 0
 20113                           tblptru	equ	0xFF8
 20114                           tblptrh	equ	0xFF7
 20115                           tblptrl	equ	0xFF6
 20116                           tablat	equ	0xFF5
 20117                           prodh	equ	0xFF4
 20118                           prodl	equ	0xFF3
 20119                           intcon	equ	0xFF2
 20120                           intcon2	equ	0xFF1
 20121                           intcon3	equ	0xFF0
 20122                           postinc0	equ	0xFEE
 20123                           wreg	equ	0xFE8
 20124                           indf1	equ	0xFE7
 20125                           postinc1	equ	0xFE6
 20126                           fsr1h	equ	0xFE2
 20127                           fsr1l	equ	0xFE1
 20128                           bsr	equ	0xFE0
 20129                           indf2	equ	0xFDF
 20130                           postinc2	equ	0xFDE
 20131                           postdec2	equ	0xFDD
 20132                           fsr2h	equ	0xFDA
 20133                           fsr2l	equ	0xFD9
 20134                           status	equ	0xFD8
 20135                           
 20136 ;; *************** function i2_TxPacket *****************
 20137 ;; Defined at:
 20138 ;;		line 288 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 20139 ;; Parameters:    Size  Location     Type
 20140 ;;  TxPacketLen     1    wreg     unsigned char 
 20141 ;;  CCA             1   16[COMRAM] unsigned char 
 20142 ;; Auto vars:     Size  Location     Type
 20143 ;;  TxPacketLen     1   21[COMRAM] unsigned char 
 20144 ;;  TxPacket        4   27[COMRAM] struct _MIWI_TICK
 20145 ;;  TxPacket        4   23[COMRAM] struct _MIWI_TICK
 20146 ;;  TxPacket        1   35[COMRAM] unsigned char 
 20147 ;;  TxPacket        1   34[COMRAM] unsigned char 
 20148 ;;  TxPacket        1   33[COMRAM] unsigned char 
 20149 ;;  TxPacket        1   32[COMRAM] unsigned char 
 20150 ;;  TxPacket        1   31[COMRAM] unsigned char 
 20151 ;;  TxPacket        1   22[COMRAM] unsigned char 
 20152 ;; Return value:  Size  Location     Type
 20153 ;;                  1    wreg      unsigned char 
 20154 ;; Registers used:
 20155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20156 ;; Tracked objects:
 20157 ;;		On entry : F/1
 20158 ;;		On exit  : 0/0
 20159 ;;		Unchanged: 0/0
 20160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20161 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20162 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20164 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20165 ;;Total ram usage:       20 bytes
 20166 ;; Hardware stack levels used:    1
 20167 ;; Hardware stack levels required when called:    3
 20168 ;; This function calls:
 20169 ;;		i2_DELAY_10us
 20170 ;;		i2_MiWi_TickGet
 20171 ;;		i2_RegisterRead
 20172 ;;		i2_RegisterSet
 20173 ;;		i2_SetRFMode
 20174 ;;		i2_WriteFIFO
 20175 ;; This function is called by:
 20176 ;;		_high_isr
 20177 ;; This function uses a non-reentrant model
 20178 ;;
 20179                           
 20180                           	psect	text86
 20181  0026F8                     __ptext86:
 20182                           	opt stack 0
 20183  0026F8                     i2_TxPacket:
 20184                           	opt stack 9
 20185                           
 20186                           ;incstack = 0
 20187                           ;i2TxPacket@TxPacketLen stored from wreg
 20188  0026F8  6E16               	movwf	i2TxPacket@TxPacketLen,c
 20189                           
 20190                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 20191                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 20192                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 20193                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 20194                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 20195                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 20196  0026FA  0E03               	movlw	3
 20197  0026FC  6E21               	movwf	i2TxPacket@reTry,c
 20198                           
 20199                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 20200  0026FE  D085               	goto	i2l11614
 20201  002700                     i2l88:
 20202                           
 20203                           ;drv_mrf_miwi_89xa.c: 305: {
 20204                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 20205                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 20206  002700  6A22               	clrf	i2TxPacket@allowedTxFailure,c
 20207  002702                     i2l89:
 20208                           
 20209                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 20210  002702  0100               	movlb	0	; () banked
 20211  002704  6BE0               	clrf	_hasAck& (0+255),b	;volatile
 20212                           
 20213                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 20214  002706  6A20               	clrf	i2TxPacket@CCARetries,c
 20215                           
 20216                           ; BSR set to: 0
 20217                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 20218  002708  5011               	movf	i2TxPacket@CCA,w,c
 20219  00270A  E018               	bz	i2l90
 20220  00270C                     i2l11554:
 20221                           
 20222                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 20223  00270C  0E28               	movlw	40
 20224  00270E  EC25  F01E         	call	i2_RegisterRead
 20225  002712  6E23               	movwf	i2TxPacket@rssival,c
 20226                           
 20227                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 20228  002714  90D8               	bcf	status,0,c
 20229  002716  3223               	rrcf	i2TxPacket@rssival,f,c
 20230                           
 20231                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 20232  002718  0E41               	movlw	65
 20233  00271A  6423               	cpfsgt	i2TxPacket@rssival,c
 20234  00271C  D00F               	goto	i2l90
 20235                           
 20236                           ;drv_mrf_miwi_89xa.c: 326: {
 20237                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 20238  00271E  2A20               	incf	i2TxPacket@CCARetries,f,c
 20239  002720  0420               	decf	i2TxPacket@CCARetries,w,c
 20240  002722  6E12               	movwf	??i2_TxPacket& (0+255),c
 20241  002724  0E04               	movlw	4
 20242  002726  6412               	cpfsgt	??i2_TxPacket,c
 20243  002728  D001               	goto	i2l11564
 20244  00272A  0C04               	retlw	4
 20245  00272C                     i2l11564:
 20246                           
 20247                           ;drv_mrf_miwi_89xa.c: 331: }
 20248                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
 20249  00272C  0E01               	movlw	1
 20250  00272E  6E01               	movwf	i2DELAY_10us@tenMicroSecondCounter,c
 20251  002730  6A02               	clrf	i2DELAY_10us@tenMicroSecondCounter+1,c
 20252  002732  6A03               	clrf	i2DELAY_10us@tenMicroSecondCounter+2,c
 20253  002734  6A04               	clrf	i2DELAY_10us@tenMicroSecondCounter+3,c
 20254  002736  EC2F  F016         	call	i2_DELAY_10us	;wreg free
 20255                           
 20256                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
 20257  00273A  D7E8               	goto	i2l11554
 20258  00273C                     i2l90:
 20259                           
 20260                           ;drv_mrf_miwi_89xa.c: 334: }
 20261                           ;drv_mrf_miwi_89xa.c: 335: }
 20262                           ;drv_mrf_miwi_89xa.c: 340: INTCONbits.INT0IE = 0;
 20263  00273C  98F2               	bcf	intcon,4,c	;volatile
 20264                           
 20265                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT1IE = 0;
 20266  00273E  96F0               	bcf	intcon3,3,c	;volatile
 20267                           
 20268                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
 20269  002740  0E20               	movlw	32
 20270  002742  ECED  F01B         	call	i2_SetRFMode
 20271                           
 20272                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
 20273  002746  0E1A               	movlw	26
 20274  002748  6E03               	movwf	i2RegisterSet@setting+1,c
 20275  00274A  0EC9               	movlw	201
 20276  00274C  6E02               	movwf	i2RegisterSet@setting,c
 20277  00274E  EC1E  F01F         	call	i2_RegisterSet	;wreg free
 20278                           
 20279                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
 20280  002752  5016               	movf	i2TxPacket@TxPacketLen,w,c
 20281  002754  EC56  F01F         	call	i2_WriteFIFO
 20282                           
 20283                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
 20284  002758  6A24               	clrf	i2TxPacket@i,c
 20285  00275A  D00A               	goto	i2l11578
 20286  00275C                     i2l11574:
 20287                           
 20288                           ;drv_mrf_miwi_89xa.c: 347: {
 20289                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
 20290  00275C  0E00               	movlw	low _MACTxBuffer
 20291  00275E  2424               	addwf	i2TxPacket@i,w,c
 20292  002760  6ED9               	movwf	fsr2l,c
 20293  002762  6ADA               	clrf	fsr2h,c
 20294  002764  0E01               	movlw	high _MACTxBuffer
 20295  002766  22DA               	addwfc	fsr2h,f,c
 20296  002768  50DF               	movf	indf2,w,c
 20297  00276A  EC56  F01F         	call	i2_WriteFIFO
 20298  00276E  2A24               	incf	i2TxPacket@i,f,c
 20299  002770                     i2l11578:
 20300  002770  5016               	movf	i2TxPacket@TxPacketLen,w,c
 20301  002772  5C24               	subwf	i2TxPacket@i,w,c
 20302  002774  E3F3               	bnc	i2l11574
 20303                           
 20304                           ;drv_mrf_miwi_89xa.c: 349: }
 20305                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
 20306  002776  0E80               	movlw	128
 20307  002778  ECED  F01B         	call	i2_SetRFMode
 20308                           
 20309                           ;drv_mrf_miwi_89xa.c: 352: INTCONbits.INT0IE = 1;
 20310  00277C  88F2               	bsf	intcon,4,c	;volatile
 20311                           
 20312                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT1IE = 1;
 20313  00277E  86F0               	bsf	intcon3,3,c	;volatile
 20314  002780                     i2l11586:
 20315  002780  0100               	movlb	0	; () banked
 20316  002782  51D9               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 20317  002784  E102               	bnz	i2l102
 20318                           
 20319                           ; BSR set to: 0
 20320  002786  A0F0               	btfss	intcon3,0,c	;volatile
 20321  002788  D7FB               	goto	i2l11586
 20322  00278A                     i2l102:
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;drv_mrf_miwi_89xa.c: 358: };
 20326                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
 20327  00278A  6BD9               	clrf	_IRQ1_Received& (0+255),b	;volatile
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
 20331  00278C  0E20               	movlw	32
 20332  00278E  ECED  F01B         	call	i2_SetRFMode
 20333                           
 20334                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
 20335  002792  0E60               	movlw	96
 20336  002794  ECED  F01B         	call	i2_SetRFMode
 20337                           
 20338                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
 20339  002798  0101               	movlb	1	; () banked
 20340  00279A  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 20341  00279C  D00E               	goto	i2l11600
 20342                           
 20343                           ; BSR set to: 1
 20344                           ;drv_mrf_miwi_89xa.c: 368: {
 20345                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
 20346  00279E  C101  F044         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 20347                           
 20348                           ; BSR set to: 1
 20349                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
 20350  0027A2  EC6B  F01D         	call	i2_MiWi_TickGet	;wreg free
 20351  0027A6  C001  F018         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 20352  0027AA  C002  F019         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 20353  0027AE  C003  F01A         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 20354  0027B2  C004  F01B         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 20355  0027B6                     i2l11598:
 20356                           
 20357                           ; BSR set to: 0
 20358                           ;drv_mrf_miwi_89xa.c: 372: {
 20359                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
 20360  0027B6  51E0               	movf	_hasAck& (0+255),w,b	;volatile
 20361  0027B8  E003               	bz	i2l11602
 20362  0027BA                     i2l11600:
 20363                           
 20364                           ;drv_mrf_miwi_89xa.c: 374: {
 20365                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
 20366  0027BA  0E01               	movlw	1
 20367  0027BC  6E17               	movwf	i2TxPacket@status,c
 20368                           
 20369                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
 20370  0027BE  0C01               	retlw	1
 20371  0027C0                     i2l11602:
 20372                           
 20373                           ; BSR set to: 0
 20374                           ;drv_mrf_miwi_89xa.c: 377: }
 20375                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
 20376  0027C0  EC6B  F01D         	call	i2_MiWi_TickGet	;wreg free
 20377  0027C4  C001  F01C         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 20378  0027C8  C002  F01D         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 20379  0027CC  C003  F01E         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 20380  0027D0  C004  F01F         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 20381                           
 20382                           ; BSR set to: 0
 20383                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 20384  0027D4  5018               	movf	i2TxPacket@t1,w,c
 20385  0027D6  5C1C               	subwf	i2TxPacket@t2,w,c
 20386  0027D8  6E12               	movwf	??i2_TxPacket& (0+255),c
 20387  0027DA  5019               	movf	i2TxPacket@t1+1,w,c
 20388  0027DC  581D               	subwfb	i2TxPacket@t2+1,w,c
 20389  0027DE  6E13               	movwf	(??i2_TxPacket+1)& (0+255),c
 20390  0027E0  501A               	movf	i2TxPacket@t1+2,w,c
 20391  0027E2  581E               	subwfb	i2TxPacket@t2+2,w,c
 20392  0027E4  6E14               	movwf	(??i2_TxPacket+2)& (0+255),c
 20393  0027E6  501B               	movf	i2TxPacket@t1+3,w,c
 20394  0027E8  581F               	subwfb	i2TxPacket@t2+3,w,c
 20395  0027EA  6E15               	movwf	(??i2_TxPacket+3)& (0+255),c
 20396  0027EC  5015               	movf	??i2_TxPacket+3,w,c
 20397  0027EE  1014               	iorwf	??i2_TxPacket+2,w,c
 20398  0027F0  E105               	bnz	i2u1195_40
 20399  0027F2  0EA9               	movlw	169
 20400  0027F4  5C12               	subwf	??i2_TxPacket,w,c
 20401  0027F6  0E61               	movlw	97
 20402  0027F8  5813               	subwfb	??i2_TxPacket+1,w,c
 20403  0027FA  E3DD               	bnc	i2l11598
 20404  0027FC                     i2u1195_40:
 20405                           
 20406                           ; BSR set to: 0
 20407                           ;drv_mrf_miwi_89xa.c: 382: }
 20408                           ;drv_mrf_miwi_89xa.c: 383: }
 20409                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
 20410  0027FC  2A22               	incf	i2TxPacket@allowedTxFailure,f,c
 20411  0027FE  0422               	decf	i2TxPacket@allowedTxFailure,w,c
 20412  002800  6E12               	movwf	??i2_TxPacket& (0+255),c
 20413  002802  0E04               	movlw	4
 20414  002804  6012               	cpfslt	??i2_TxPacket,c
 20415  002806  D001               	goto	i2l11614
 20416  002808  D77C               	goto	i2l89
 20417  00280A                     i2l11614:
 20418  00280A  0621               	decf	i2TxPacket@reTry,f,c
 20419  00280C  2821               	incf	i2TxPacket@reTry,w,c
 20420  00280E  E001 D777          	bnz	i2l88
 20421                           
 20422                           ;drv_mrf_miwi_89xa.c: 394: }
 20423                           ;drv_mrf_miwi_89xa.c: 395: }
 20424                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
 20425  002812  6A17               	clrf	i2TxPacket@status,c
 20426  002814  0012               	return		;funcret
 20427  002816                     __end_ofi2_TxPacket:
 20428                           	opt stack 0
 20429                           tblptru	equ	0xFF8
 20430                           tblptrh	equ	0xFF7
 20431                           tblptrl	equ	0xFF6
 20432                           tablat	equ	0xFF5
 20433                           prodh	equ	0xFF4
 20434                           prodl	equ	0xFF3
 20435                           intcon	equ	0xFF2
 20436                           intcon2	equ	0xFF1
 20437                           intcon3	equ	0xFF0
 20438                           postinc0	equ	0xFEE
 20439                           wreg	equ	0xFE8
 20440                           indf1	equ	0xFE7
 20441                           postinc1	equ	0xFE6
 20442                           fsr1h	equ	0xFE2
 20443                           fsr1l	equ	0xFE1
 20444                           bsr	equ	0xFE0
 20445                           indf2	equ	0xFDF
 20446                           postinc2	equ	0xFDE
 20447                           postdec2	equ	0xFDD
 20448                           fsr2h	equ	0xFDA
 20449                           fsr2l	equ	0xFD9
 20450                           status	equ	0xFD8
 20451                           
 20452 ;; *************** function i2_WriteFIFO *****************
 20453 ;; Defined at:
 20454 ;;		line 244 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 20455 ;; Parameters:    Size  Location     Type
 20456 ;;  Data            1    wreg     unsigned char 
 20457 ;; Auto vars:     Size  Location     Type
 20458 ;;  Data            1    1[COMRAM] unsigned char 
 20459 ;;  WriteFIFO       1    3[COMRAM] unsigned char 
 20460 ;;  WriteFIFO       1    2[COMRAM] unsigned char 
 20461 ;; Return value:  Size  Location     Type
 20462 ;;		None               void
 20463 ;; Registers used:
 20464 ;;		wreg, status,2, cstack
 20465 ;; Tracked objects:
 20466 ;;		On entry : 0/0
 20467 ;;		On exit  : 0/0
 20468 ;;		Unchanged: 0/0
 20469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20471 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20473 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20474 ;;Total ram usage:        3 bytes
 20475 ;; Hardware stack levels used:    1
 20476 ;; Hardware stack levels required when called:    1
 20477 ;; This function calls:
 20478 ;;		i2_SPI1_Exchange8bit
 20479 ;; This function is called by:
 20480 ;;		i2_TxPacket
 20481 ;; This function uses a non-reentrant model
 20482 ;;
 20483                           
 20484                           	psect	text87
 20485  003EAC                     __ptext87:
 20486                           	opt stack 0
 20487  003EAC                     i2_WriteFIFO:
 20488                           	opt stack 10
 20489                           
 20490                           ;incstack = 0
 20491                           ;i2WriteFIFO@Data stored from wreg
 20492  003EAC  6E02               	movwf	i2WriteFIFO@Data,c
 20493                           
 20494                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20495  003EAE  0E00               	movlw	0
 20496  003EB0  B6F0               	btfsc	intcon3,3,c	;volatile
 20497  003EB2  0E01               	movlw	1
 20498  003EB4  6E03               	movwf	i2WriteFIFO@IRQ1select,c
 20499                           
 20500                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 20501  003EB6  0E00               	movlw	0
 20502  003EB8  B8F2               	btfsc	intcon,4,c	;volatile
 20503  003EBA  0E01               	movlw	1
 20504  003EBC  6E04               	movwf	i2WriteFIFO@IRQ0select,c
 20505                           
 20506                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 20507  003EBE  98F2               	bcf	intcon,4,c	;volatile
 20508                           
 20509                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 20510  003EC0  96F0               	bcf	intcon3,3,c	;volatile
 20511                           
 20512                           ;drv_mrf_miwi_89xa.c: 254: LATAbits.LATA5 = 0;
 20513  003EC2  9A89               	bcf	3977,5,c	;volatile
 20514                           
 20515                           ;drv_mrf_miwi_89xa.c: 255: SPI1_Exchange8bit(Data);
 20516  003EC4  5002               	movf	i2WriteFIFO@Data,w,c
 20517  003EC6  ECF2  F020         	call	i2_SPI1_Exchange8bit
 20518                           
 20519                           ;drv_mrf_miwi_89xa.c: 256: LATAbits.LATA5 = 1;
 20520  003ECA  8A89               	bsf	3977,5,c	;volatile
 20521                           
 20522                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 20523  003ECC  B003               	btfsc	i2WriteFIFO@IRQ1select,0,c
 20524  003ECE  D002               	bra	i2u1174_45
 20525  003ED0  96F0               	bcf	intcon3,3,c	;volatile
 20526  003ED2  D001               	bra	i2u1174_46
 20527  003ED4                     i2u1174_45:
 20528  003ED4  86F0               	bsf	intcon3,3,c	;volatile
 20529  003ED6                     i2u1174_46:
 20530                           
 20531                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 20532  003ED6  B004               	btfsc	i2WriteFIFO@IRQ0select,0,c
 20533  003ED8  D002               	bra	i2u1175_45
 20534  003EDA  98F2               	bcf	intcon,4,c	;volatile
 20535  003EDC  D001               	bra	i2u1175_46
 20536  003EDE                     i2u1175_45:
 20537  003EDE  88F2               	bsf	intcon,4,c	;volatile
 20538  003EE0                     i2u1175_46:
 20539  003EE0  0012               	return		;funcret
 20540  003EE2                     __end_ofi2_WriteFIFO:
 20541                           	opt stack 0
 20542                           tblptru	equ	0xFF8
 20543                           tblptrh	equ	0xFF7
 20544                           tblptrl	equ	0xFF6
 20545                           tablat	equ	0xFF5
 20546                           prodh	equ	0xFF4
 20547                           prodl	equ	0xFF3
 20548                           intcon	equ	0xFF2
 20549                           intcon2	equ	0xFF1
 20550                           intcon3	equ	0xFF0
 20551                           postinc0	equ	0xFEE
 20552                           wreg	equ	0xFE8
 20553                           indf1	equ	0xFE7
 20554                           postinc1	equ	0xFE6
 20555                           fsr1h	equ	0xFE2
 20556                           fsr1l	equ	0xFE1
 20557                           bsr	equ	0xFE0
 20558                           indf2	equ	0xFDF
 20559                           postinc2	equ	0xFDE
 20560                           postdec2	equ	0xFDD
 20561                           fsr2h	equ	0xFDA
 20562                           fsr2l	equ	0xFD9
 20563                           status	equ	0xFD8
 20564                           
 20565 ;; *************** function i2_SetRFMode *****************
 20566 ;; Defined at:
 20567 ;;		line 667 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 20568 ;; Parameters:    Size  Location     Type
 20569 ;;  mode            1    wreg     unsigned char 
 20570 ;; Auto vars:     Size  Location     Type
 20571 ;;  mode            1    5[COMRAM] unsigned char 
 20572 ;; Return value:  Size  Location     Type
 20573 ;;		None               void
 20574 ;; Registers used:
 20575 ;;		wreg, status,2, status,0, cstack
 20576 ;; Tracked objects:
 20577 ;;		On entry : 0/0
 20578 ;;		On exit  : 0/0
 20579 ;;		Unchanged: 0/0
 20580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20585 ;;Total ram usage:        1 bytes
 20586 ;; Hardware stack levels used:    1
 20587 ;; Hardware stack levels required when called:    2
 20588 ;; This function calls:
 20589 ;;		i2_RegisterSet
 20590 ;; This function is called by:
 20591 ;;		i2_TxPacket
 20592 ;; This function uses a non-reentrant model
 20593 ;;
 20594                           
 20595                           	psect	text88
 20596  0037DA                     __ptext88:
 20597                           	opt stack 0
 20598  0037DA                     i2_SetRFMode:
 20599                           	opt stack 9
 20600                           
 20601                           ;incstack = 0
 20602                           ;i2SetRFMode@mode stored from wreg
 20603  0037DA  6E06               	movwf	i2SetRFMode@mode,c
 20604                           
 20605                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
 20606  0037DC  D02C               	goto	i2l11342
 20607  0037DE                     i2l11320:
 20608                           
 20609                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x80);
 20610  0037DE  6A03               	clrf	i2RegisterSet@setting+1,c
 20611  0037E0  0E86               	movlw	134
 20612  0037E2  6E02               	movwf	i2RegisterSet@setting,c
 20613  0037E4  EC1E  F01F         	call	i2_RegisterSet	;wreg free
 20614                           
 20615                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
 20616  0037E8  0E80               	movlw	128
 20617  0037EA  0100               	movlb	0	; () banked
 20618  0037EC  6FDD               	movwf	_RF_Mode& (0+255),b
 20619                           
 20620                           ;drv_mrf_miwi_89xa.c: 673: break;
 20621  0037EE  0C80               	retlw	128
 20622  0037F0                     i2l11324:
 20623                           
 20624                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x00 | 0x06) & 0x1F) | 0x60);
 20625  0037F0  6A03               	clrf	i2RegisterSet@setting+1,c
 20626  0037F2  0E66               	movlw	102
 20627  0037F4  6E02               	movwf	i2RegisterSet@setting,c
 20628  0037F6  EC1E  F01F         	call	i2_RegisterSet	;wreg free
 20629                           
 20630                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
 20631  0037FA  0E60               	movlw	96
 20632  0037FC  0100               	movlb	0	; () banked
 20633  0037FE  6FDD               	movwf	_RF_Mode& (0+255),b
 20634                           
 20635                           ;drv_mrf_miwi_89xa.c: 677: break;
 20636  003800  0C60               	retlw	96
 20637  003802                     i2l11328:
 20638                           
 20639                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
 20640  003802  6A03               	clrf	i2RegisterSet@setting+1,c
 20641  003804  0E46               	movlw	70
 20642  003806  6E02               	movwf	i2RegisterSet@setting,c
 20643  003808  EC1E  F01F         	call	i2_RegisterSet	;wreg free
 20644                           
 20645                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
 20646  00380C  0E40               	movlw	64
 20647  00380E  0100               	movlb	0	; () banked
 20648  003810  6FDD               	movwf	_RF_Mode& (0+255),b
 20649                           
 20650                           ;drv_mrf_miwi_89xa.c: 681: break;
 20651  003812  0C40               	retlw	64
 20652  003814                     i2l11332:
 20653                           
 20654                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x20);
 20655  003814  6A03               	clrf	i2RegisterSet@setting+1,c
 20656  003816  0E26               	movlw	38
 20657  003818  6E02               	movwf	i2RegisterSet@setting,c
 20658  00381A  EC1E  F01F         	call	i2_RegisterSet	;wreg free
 20659                           
 20660                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
 20661  00381E  0E20               	movlw	32
 20662  003820  0100               	movlb	0	; () banked
 20663  003822  6FDD               	movwf	_RF_Mode& (0+255),b
 20664                           
 20665                           ;drv_mrf_miwi_89xa.c: 685: break;
 20666  003824  0C20               	retlw	32
 20667  003826                     i2l11336:
 20668                           
 20669                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x00);
 20670  003826  6A03               	clrf	i2RegisterSet@setting+1,c
 20671  003828  0E06               	movlw	6
 20672  00382A  6E02               	movwf	i2RegisterSet@setting,c
 20673  00382C  EC1E  F01F         	call	i2_RegisterSet	;wreg free
 20674                           
 20675                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
 20676  003830  0100               	movlb	0	; () banked
 20677  003832  6BDD               	clrf	_RF_Mode& (0+255),b
 20678                           
 20679                           ;drv_mrf_miwi_89xa.c: 689: break;
 20680  003834  0012               	return	
 20681  003836                     i2l11342:
 20682  003836  5006               	movf	i2SetRFMode@mode,w,c
 20683                           
 20684                           ; Switch size 1, requested type "speed"
 20685                           ; Number of cases is 5, Range of values is 0 to 128
 20686                           ; switch strategies available:
 20687                           ; Name         Instructions Cycles
 20688                           ; simple_byte           16     9 (average)
 20689                           ;	Chosen strategy is simple_byte
 20690  003838  E0F6               	bz	i2l11336
 20691  00383A  0A20               	xorlw	32	; case 32
 20692  00383C  E0EB               	bz	i2l11332
 20693  00383E  0A60               	xorlw	96	; case 64
 20694  003840  E0E0               	bz	i2l11328
 20695  003842  0A20               	xorlw	32	; case 96
 20696  003844  E0D5               	bz	i2l11324
 20697  003846  0AE0               	xorlw	224	; case 128
 20698  003848  E0CA               	bz	i2l11320
 20699  00384A  0012               	return		;funcret
 20700  00384C                     __end_ofi2_SetRFMode:
 20701                           	opt stack 0
 20702                           tblptru	equ	0xFF8
 20703                           tblptrh	equ	0xFF7
 20704                           tblptrl	equ	0xFF6
 20705                           tablat	equ	0xFF5
 20706                           prodh	equ	0xFF4
 20707                           prodl	equ	0xFF3
 20708                           intcon	equ	0xFF2
 20709                           intcon2	equ	0xFF1
 20710                           intcon3	equ	0xFF0
 20711                           postinc0	equ	0xFEE
 20712                           wreg	equ	0xFE8
 20713                           indf1	equ	0xFE7
 20714                           postinc1	equ	0xFE6
 20715                           fsr1h	equ	0xFE2
 20716                           fsr1l	equ	0xFE1
 20717                           bsr	equ	0xFE0
 20718                           indf2	equ	0xFDF
 20719                           postinc2	equ	0xFDE
 20720                           postdec2	equ	0xFDD
 20721                           fsr2h	equ	0xFDA
 20722                           fsr2l	equ	0xFD9
 20723                           status	equ	0xFD8
 20724                           
 20725 ;; *************** function i2_RegisterSet *****************
 20726 ;; Defined at:
 20727 ;;		line 164 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 20728 ;; Parameters:    Size  Location     Type
 20729 ;;  setting         2    1[COMRAM] unsigned int 
 20730 ;; Auto vars:     Size  Location     Type
 20731 ;;  RegisterSet     1    4[COMRAM] unsigned char 
 20732 ;;  RegisterSet     1    3[COMRAM] unsigned char 
 20733 ;; Return value:  Size  Location     Type
 20734 ;;		None               void
 20735 ;; Registers used:
 20736 ;;		wreg, status,2, cstack
 20737 ;; Tracked objects:
 20738 ;;		On entry : 0/0
 20739 ;;		On exit  : 0/0
 20740 ;;		Unchanged: 0/0
 20741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20745 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20746 ;;Total ram usage:        4 bytes
 20747 ;; Hardware stack levels used:    1
 20748 ;; Hardware stack levels required when called:    1
 20749 ;; This function calls:
 20750 ;;		i2_SPI1_Exchange8bit
 20751 ;; This function is called by:
 20752 ;;		i2_TxPacket
 20753 ;;		i2_SetRFMode
 20754 ;; This function uses a non-reentrant model
 20755 ;;
 20756                           
 20757                           	psect	text89
 20758  003E3C                     __ptext89:
 20759                           	opt stack 0
 20760  003E3C                     i2_RegisterSet:
 20761                           	opt stack 9
 20762                           
 20763                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20764                           
 20765                           ;incstack = 0
 20766  003E3C  0E00               	movlw	0
 20767  003E3E  B6F0               	btfsc	intcon3,3,c	;volatile
 20768  003E40  0E01               	movlw	1
 20769  003E42  6E04               	movwf	i2RegisterSet@IRQ1select,c
 20770                           
 20771                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 20772  003E44  0E00               	movlw	0
 20773  003E46  B8F2               	btfsc	intcon,4,c	;volatile
 20774  003E48  0E01               	movlw	1
 20775  003E4A  6E05               	movwf	i2RegisterSet@IRQ0select,c
 20776                           
 20777                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 20778  003E4C  98F2               	bcf	intcon,4,c	;volatile
 20779                           
 20780                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 20781  003E4E  96F0               	bcf	intcon3,3,c	;volatile
 20782                           
 20783                           ;drv_mrf_miwi_89xa.c: 173: LATDbits.LATD1 = 0;
 20784  003E50  928C               	bcf	3980,1,c	;volatile
 20785                           
 20786                           ;drv_mrf_miwi_89xa.c: 174: SPI1_Exchange8bit((uint8_t)(setting >> 8));
 20787  003E52  5003               	movf	i2RegisterSet@setting+1,w,c
 20788  003E54  ECF2  F020         	call	i2_SPI1_Exchange8bit
 20789                           
 20790                           ;drv_mrf_miwi_89xa.c: 175: SPI1_Exchange8bit((uint8_t)setting);
 20791  003E58  5002               	movf	i2RegisterSet@setting,w,c
 20792  003E5A  ECF2  F020         	call	i2_SPI1_Exchange8bit
 20793                           
 20794                           ;drv_mrf_miwi_89xa.c: 176: LATDbits.LATD1 = 1;
 20795  003E5E  828C               	bsf	3980,1,c	;volatile
 20796                           
 20797                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 20798  003E60  B004               	btfsc	i2RegisterSet@IRQ1select,0,c
 20799  003E62  D002               	bra	i2u1139_45
 20800  003E64  96F0               	bcf	intcon3,3,c	;volatile
 20801  003E66  D001               	bra	i2u1139_46
 20802  003E68                     i2u1139_45:
 20803  003E68  86F0               	bsf	intcon3,3,c	;volatile
 20804  003E6A                     i2u1139_46:
 20805                           
 20806                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 20807  003E6A  B005               	btfsc	i2RegisterSet@IRQ0select,0,c
 20808  003E6C  D002               	bra	i2u1140_45
 20809  003E6E  98F2               	bcf	intcon,4,c	;volatile
 20810  003E70  D001               	bra	i2u1140_46
 20811  003E72                     i2u1140_45:
 20812  003E72  88F2               	bsf	intcon,4,c	;volatile
 20813  003E74                     i2u1140_46:
 20814  003E74  0012               	return		;funcret
 20815  003E76                     __end_ofi2_RegisterSet:
 20816                           	opt stack 0
 20817                           tblptru	equ	0xFF8
 20818                           tblptrh	equ	0xFF7
 20819                           tblptrl	equ	0xFF6
 20820                           tablat	equ	0xFF5
 20821                           prodh	equ	0xFF4
 20822                           prodl	equ	0xFF3
 20823                           intcon	equ	0xFF2
 20824                           intcon2	equ	0xFF1
 20825                           intcon3	equ	0xFF0
 20826                           postinc0	equ	0xFEE
 20827                           wreg	equ	0xFE8
 20828                           indf1	equ	0xFE7
 20829                           postinc1	equ	0xFE6
 20830                           fsr1h	equ	0xFE2
 20831                           fsr1l	equ	0xFE1
 20832                           bsr	equ	0xFE0
 20833                           indf2	equ	0xFDF
 20834                           postinc2	equ	0xFDE
 20835                           postdec2	equ	0xFDD
 20836                           fsr2h	equ	0xFDA
 20837                           fsr2l	equ	0xFD9
 20838                           status	equ	0xFD8
 20839                           
 20840 ;; *************** function i2_RegisterRead *****************
 20841 ;; Defined at:
 20842 ;;		line 200 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 20843 ;; Parameters:    Size  Location     Type
 20844 ;;  address         1    wreg     unsigned char 
 20845 ;; Auto vars:     Size  Location     Type
 20846 ;;  address         1    1[COMRAM] unsigned char 
 20847 ;;  RegisterRead    1    4[COMRAM] unsigned char 
 20848 ;;  RegisterRead    1    3[COMRAM] unsigned char 
 20849 ;;  RegisterRead    1    2[COMRAM] unsigned char 
 20850 ;; Return value:  Size  Location     Type
 20851 ;;                  1    wreg      unsigned char 
 20852 ;; Registers used:
 20853 ;;		wreg, status,2, status,0, cstack
 20854 ;; Tracked objects:
 20855 ;;		On entry : 0/0
 20856 ;;		On exit  : 0/0
 20857 ;;		Unchanged: 0/0
 20858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20860 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20862 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20863 ;;Total ram usage:        4 bytes
 20864 ;; Hardware stack levels used:    1
 20865 ;; Hardware stack levels required when called:    1
 20866 ;; This function calls:
 20867 ;;		i2_SPI1_Exchange8bit
 20868 ;; This function is called by:
 20869 ;;		_high_isr
 20870 ;;		i2_TxPacket
 20871 ;; This function uses a non-reentrant model
 20872 ;;
 20873                           
 20874                           	psect	text90
 20875  003C4A                     __ptext90:
 20876                           	opt stack 0
 20877  003C4A                     i2_RegisterRead:
 20878                           	opt stack 10
 20879                           
 20880                           ;incstack = 0
 20881                           ;i2RegisterRead@address stored from wreg
 20882  003C4A  6E02               	movwf	i2RegisterRead@address,c
 20883                           
 20884                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 20885                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 20886  003C4C  0E00               	movlw	0
 20887  003C4E  B6F0               	btfsc	intcon3,3,c	;volatile
 20888  003C50  0E01               	movlw	1
 20889  003C52  6E04               	movwf	i2RegisterRead@IRQ1select,c
 20890                           
 20891                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 20892  003C54  0E00               	movlw	0
 20893  003C56  B8F2               	btfsc	intcon,4,c	;volatile
 20894  003C58  0E01               	movlw	1
 20895  003C5A  6E05               	movwf	i2RegisterRead@IRQ0select,c
 20896                           
 20897                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 20898  003C5C  98F2               	bcf	intcon,4,c	;volatile
 20899                           
 20900                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 20901  003C5E  96F0               	bcf	intcon3,3,c	;volatile
 20902                           
 20903                           ;drv_mrf_miwi_89xa.c: 211: LATDbits.LATD1 = 0;
 20904  003C60  928C               	bcf	3980,1,c	;volatile
 20905                           
 20906                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 20907  003C62  8C02               	bsf	i2RegisterRead@address,6,c
 20908                           
 20909                           ;drv_mrf_miwi_89xa.c: 213: SPI1_Exchange8bit(address);
 20910  003C64  5002               	movf	i2RegisterRead@address,w,c
 20911  003C66  ECF2  F020         	call	i2_SPI1_Exchange8bit
 20912                           
 20913                           ;drv_mrf_miwi_89xa.c: 214: value = SPI1_Exchange8bit(0x00);
 20914  003C6A  0E00               	movlw	0
 20915  003C6C  ECF2  F020         	call	i2_SPI1_Exchange8bit
 20916  003C70  6E03               	movwf	i2RegisterRead@value,c
 20917                           
 20918                           ;drv_mrf_miwi_89xa.c: 215: LATDbits.LATD1 = 1;
 20919  003C72  828C               	bsf	3980,1,c	;volatile
 20920                           
 20921                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 20922  003C74  B004               	btfsc	i2RegisterRead@IRQ1select,0,c
 20923  003C76  D002               	bra	i2u1172_45
 20924  003C78  96F0               	bcf	intcon3,3,c	;volatile
 20925  003C7A  D001               	bra	i2u1172_46
 20926  003C7C                     i2u1172_45:
 20927  003C7C  86F0               	bsf	intcon3,3,c	;volatile
 20928  003C7E                     i2u1172_46:
 20929                           
 20930                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 20931  003C7E  B005               	btfsc	i2RegisterRead@IRQ0select,0,c
 20932  003C80  D002               	bra	i2u1173_45
 20933  003C82  98F2               	bcf	intcon,4,c	;volatile
 20934  003C84  D001               	bra	i2u1173_46
 20935  003C86                     i2u1173_45:
 20936  003C86  88F2               	bsf	intcon,4,c	;volatile
 20937  003C88                     i2u1173_46:
 20938                           
 20939                           ;drv_mrf_miwi_89xa.c: 222: return value;
 20940  003C88  5003               	movf	i2RegisterRead@value,w,c
 20941  003C8A  0012               	return		;funcret
 20942  003C8C                     __end_ofi2_RegisterRead:
 20943                           	opt stack 0
 20944                           tblptru	equ	0xFF8
 20945                           tblptrh	equ	0xFF7
 20946                           tblptrl	equ	0xFF6
 20947                           tablat	equ	0xFF5
 20948                           prodh	equ	0xFF4
 20949                           prodl	equ	0xFF3
 20950                           intcon	equ	0xFF2
 20951                           intcon2	equ	0xFF1
 20952                           intcon3	equ	0xFF0
 20953                           postinc0	equ	0xFEE
 20954                           wreg	equ	0xFE8
 20955                           indf1	equ	0xFE7
 20956                           postinc1	equ	0xFE6
 20957                           fsr1h	equ	0xFE2
 20958                           fsr1l	equ	0xFE1
 20959                           bsr	equ	0xFE0
 20960                           indf2	equ	0xFDF
 20961                           postinc2	equ	0xFDE
 20962                           postdec2	equ	0xFDD
 20963                           fsr2h	equ	0xFDA
 20964                           fsr2l	equ	0xFD9
 20965                           status	equ	0xFD8
 20966                           
 20967 ;; *************** function i2_SPI1_Exchange8bit *****************
 20968 ;; Defined at:
 20969 ;;		line 51 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 20970 ;; Parameters:    Size  Location     Type
 20971 ;;  data            1    wreg     unsigned char 
 20972 ;; Auto vars:     Size  Location     Type
 20973 ;;  data            1    0[COMRAM] unsigned char 
 20974 ;; Return value:  Size  Location     Type
 20975 ;;                  1    wreg      unsigned char 
 20976 ;; Registers used:
 20977 ;;		wreg, status,2
 20978 ;; Tracked objects:
 20979 ;;		On entry : 0/0
 20980 ;;		On exit  : 0/0
 20981 ;;		Unchanged: 0/0
 20982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20987 ;;Total ram usage:        1 bytes
 20988 ;; Hardware stack levels used:    1
 20989 ;; This function calls:
 20990 ;;		Nothing
 20991 ;; This function is called by:
 20992 ;;		_high_isr
 20993 ;;		i2_RegisterSet
 20994 ;;		i2_RegisterRead
 20995 ;;		i2_WriteFIFO
 20996 ;; This function uses a non-reentrant model
 20997 ;;
 20998                           
 20999                           	psect	text91
 21000  0041E4                     __ptext91:
 21001                           	opt stack 0
 21002  0041E4                     i2_SPI1_Exchange8bit:
 21003                           	opt stack 10
 21004                           
 21005                           ;incstack = 0
 21006                           ;i2SPI1_Exchange8bit@data stored from wreg
 21007  0041E4  6E01               	movwf	i2SPI1_Exchange8bit@data,c
 21008                           
 21009                           ;spi.c: 53: SSP1CON1bits.WCOL = 0;
 21010  0041E6  9EC6               	bcf	4038,7,c	;volatile
 21011                           
 21012                           ;spi.c: 55: SSP1BUF = data;
 21013  0041E8  C001  FFC9         	movff	i2SPI1_Exchange8bit@data,4041	;volatile
 21014  0041EC                     i2l922:
 21015  0041EC  A0C7               	btfss	4039,0,c	;volatile
 21016  0041EE  D7FE               	goto	i2l922
 21017                           
 21018                           ;spi.c: 58: }
 21019                           ;spi.c: 60: return (SSP1BUF);
 21020  0041F0  50C9               	movf	4041,w,c	;volatile
 21021  0041F2  0012               	return		;funcret
 21022  0041F4                     __end_ofi2_SPI1_Exchange8bit:
 21023                           	opt stack 0
 21024                           tblptru	equ	0xFF8
 21025                           tblptrh	equ	0xFF7
 21026                           tblptrl	equ	0xFF6
 21027                           tablat	equ	0xFF5
 21028                           prodh	equ	0xFF4
 21029                           prodl	equ	0xFF3
 21030                           intcon	equ	0xFF2
 21031                           intcon2	equ	0xFF1
 21032                           intcon3	equ	0xFF0
 21033                           postinc0	equ	0xFEE
 21034                           wreg	equ	0xFE8
 21035                           indf1	equ	0xFE7
 21036                           postinc1	equ	0xFE6
 21037                           fsr1h	equ	0xFE2
 21038                           fsr1l	equ	0xFE1
 21039                           bsr	equ	0xFE0
 21040                           indf2	equ	0xFDF
 21041                           postinc2	equ	0xFDE
 21042                           postdec2	equ	0xFDD
 21043                           fsr2h	equ	0xFDA
 21044                           fsr2l	equ	0xFD9
 21045                           status	equ	0xFD8
 21046                           
 21047 ;; *************** function i2_MiWi_TickGet *****************
 21048 ;; Defined at:
 21049 ;;		line 114 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 21050 ;; Parameters:    Size  Location     Type
 21051 ;;		None
 21052 ;; Auto vars:     Size  Location     Type
 21053 ;;  MiWi_TickGet    4    6[COMRAM] struct _MIWI_TICK
 21054 ;;  MiWi_TickGet    1    5[COMRAM] unsigned char 
 21055 ;; Return value:  Size  Location     Type
 21056 ;;                  4    0[COMRAM] struct _MIWI_TICK
 21057 ;; Registers used:
 21058 ;;		wreg, status,2, status,0
 21059 ;; Tracked objects:
 21060 ;;		On entry : E/0
 21061 ;;		On exit  : F/0
 21062 ;;		Unchanged: 0/0
 21063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21065 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21067 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21068 ;;Total ram usage:       10 bytes
 21069 ;; Hardware stack levels used:    1
 21070 ;; This function calls:
 21071 ;;		Nothing
 21072 ;; This function is called by:
 21073 ;;		_high_isr
 21074 ;;		i2_TxPacket
 21075 ;; This function uses a non-reentrant model
 21076 ;;
 21077                           
 21078                           	psect	text92
 21079  003AD6                     __ptext92:
 21080                           	opt stack 0
 21081  003AD6                     i2_MiWi_TickGet:
 21082                           	opt stack 11
 21083                           
 21084                           ;symbol.c: 116: MIWI_TICK currentTime;
 21085                           ;symbol.c: 119: uint8_t failureCounter;
 21086                           ;symbol.c: 122: PIE1bits.TMR1IE = 0;
 21087                           
 21088                           ;incstack = 0
 21089  003AD6  909D               	bcf	3997,0,c	;volatile
 21090                           
 21091                           ;symbol.c: 125: currentTime.byte.b2 = 0;
 21092  003AD8  6A09               	clrf	i2MiWi_TickGet@currentTime+2,c
 21093                           
 21094                           ;symbol.c: 126: currentTime.byte.b3 = 0;
 21095  003ADA  6A0A               	clrf	i2MiWi_TickGet@currentTime+3,c
 21096                           
 21097                           ;symbol.c: 129: failureCounter = 0;
 21098  003ADC  6A06               	clrf	i2MiWi_TickGet@failureCounter,c
 21099  003ADE                     i2l972:
 21100                           
 21101                           ;symbol.c: 132: {
 21102                           ;symbol.c: 133: currentTime.byte.b0 = TMR1L;
 21103  003ADE  CFCE F007          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 21104                           
 21105                           ;symbol.c: 134: currentTime.byte.b1 = TMR1H;
 21106  003AE2  CFCF F008          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 21107                           
 21108                           ;symbol.c: 135: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 21109  003AE6  2807               	incf	i2MiWi_TickGet@currentTime,w,c
 21110  003AE8  E108               	bnz	i2l975
 21111  003AEA  2808               	incf	i2MiWi_TickGet@currentTime+1,w,c
 21112  003AEC  E106               	bnz	i2l975
 21113  003AEE  2A06               	incf	i2MiWi_TickGet@failureCounter,f,c
 21114  003AF0  0406               	decf	i2MiWi_TickGet@failureCounter,w,c
 21115  003AF2  6E05               	movwf	??i2_MiWi_TickGet& (0+255),c
 21116  003AF4  0E02               	movlw	2
 21117  003AF6  6405               	cpfsgt	??i2_MiWi_TickGet,c
 21118  003AF8  D7F2               	goto	i2l972
 21119  003AFA                     i2l975:
 21120                           
 21121                           ;symbol.c: 139: if(PIR1bits.TMR1IF)
 21122  003AFA  A09E               	btfss	3998,0,c	;volatile
 21123  003AFC  D004               	goto	i2l11370
 21124                           
 21125                           ;symbol.c: 140: {
 21126                           ;symbol.c: 143: {
 21127                           ;symbol.c: 145: currentTime.byte.b2++;
 21128  003AFE  2A09               	incf	i2MiWi_TickGet@currentTime+2,f,c
 21129                           
 21130                           ;symbol.c: 146: if(timerExtension1 == 0xFF)
 21131  003B00  284B               	incf	_timerExtension1,w,c	;volatile
 21132  003B02  E101               	bnz	i2l11370
 21133                           
 21134                           ;symbol.c: 147: {
 21135                           ;symbol.c: 148: currentTime.byte.b3++;
 21136  003B04  2A0A               	incf	i2MiWi_TickGet@currentTime+3,f,c
 21137  003B06                     i2l11370:
 21138                           
 21139                           ;symbol.c: 149: }
 21140                           ;symbol.c: 150: }
 21141                           ;symbol.c: 151: }
 21142                           ;symbol.c: 154: currentTime.byte.b2 += timerExtension1;
 21143  003B06  504B               	movf	_timerExtension1,w,c	;volatile
 21144  003B08  2609               	addwf	i2MiWi_TickGet@currentTime+2,f,c
 21145                           
 21146                           ;symbol.c: 155: currentTime.byte.b3 += timerExtension2;
 21147  003B0A  0100               	movlb	0	; () banked
 21148  003B0C  51E3               	movf	_timerExtension2& (0+255),w,b	;volatile
 21149  003B0E  260A               	addwf	i2MiWi_TickGet@currentTime+3,f,c
 21150                           
 21151                           ; BSR set to: 0
 21152                           ;symbol.c: 158: PIE1bits.TMR1IE = 1;
 21153  003B10  809D               	bsf	3997,0,c	;volatile
 21154                           
 21155                           ; BSR set to: 0
 21156                           ;symbol.c: 160: return currentTime;
 21157  003B12  C007  F001         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 21158  003B16  C008  F002         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 21159  003B1A  C009  F003         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 21160  003B1E  C00A  F004         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 21161                           
 21162                           ; BSR set to: 0
 21163  003B22  0012               	return		;funcret
 21164  003B24                     __end_ofi2_MiWi_TickGet:
 21165                           	opt stack 0
 21166                           tblptru	equ	0xFF8
 21167                           tblptrh	equ	0xFF7
 21168                           tblptrl	equ	0xFF6
 21169                           tablat	equ	0xFF5
 21170                           prodh	equ	0xFF4
 21171                           prodl	equ	0xFF3
 21172                           intcon	equ	0xFF2
 21173                           intcon2	equ	0xFF1
 21174                           intcon3	equ	0xFF0
 21175                           postinc0	equ	0xFEE
 21176                           wreg	equ	0xFE8
 21177                           indf1	equ	0xFE7
 21178                           postinc1	equ	0xFE6
 21179                           fsr1h	equ	0xFE2
 21180                           fsr1l	equ	0xFE1
 21181                           bsr	equ	0xFE0
 21182                           indf2	equ	0xFDF
 21183                           postinc2	equ	0xFDE
 21184                           postdec2	equ	0xFDD
 21185                           fsr2h	equ	0xFDA
 21186                           fsr2l	equ	0xFD9
 21187                           status	equ	0xFD8
 21188                           
 21189 ;; *************** function i2_DELAY_10us *****************
 21190 ;; Defined at:
 21191 ;;		line 47 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 21192 ;; Parameters:    Size  Location     Type
 21193 ;;  tenMicroSeco    4    0[COMRAM] unsigned long 
 21194 ;; Auto vars:     Size  Location     Type
 21195 ;;  DELAY_10us      4   12[COMRAM] volatile long 
 21196 ;; Return value:  Size  Location     Type
 21197 ;;		None               void
 21198 ;; Registers used:
 21199 ;;		wreg, status,2, status,0, prodl, prodh
 21200 ;; Tracked objects:
 21201 ;;		On entry : 0/0
 21202 ;;		On exit  : 0/0
 21203 ;;		Unchanged: 0/0
 21204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21206 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21207 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21208 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21209 ;;Total ram usage:       16 bytes
 21210 ;; Hardware stack levels used:    1
 21211 ;; This function calls:
 21212 ;;		Nothing
 21213 ;; This function is called by:
 21214 ;;		i2_TxPacket
 21215 ;; This function uses a non-reentrant model
 21216 ;;
 21217                           
 21218                           	psect	text93
 21219  002C5E                     __ptext93:
 21220                           	opt stack 0
 21221  002C5E                     i2_DELAY_10us:
 21222                           	opt stack 11
 21223                           
 21224                           ;delay.c: 60: else
 21225                           ;delay.c: 61: {
 21226                           ;delay.c: 65: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/100000) * tenMicro
      +                          SecondCounter;
 21227                           
 21228                           ;delay.c: 49: volatile int32_t cyclesRequiredForEntireDelay;
 21229                           ;delay.c: 52: if (((16000000)/4) <= 2500000)
 21230                           
 21231                           ; BSR set to: 0
 21232                           ;incstack = 0
 21233  002C5E  C001  F005         	movff	i2DELAY_10us@tenMicroSecondCounter,??i2_DELAY_10us
 21234  002C62  C002  F006         	movff	i2DELAY_10us@tenMicroSecondCounter+1,??i2_DELAY_10us+1
 21235  002C66  C003  F007         	movff	i2DELAY_10us@tenMicroSecondCounter+2,??i2_DELAY_10us+2
 21236  002C6A  C004  F008         	movff	i2DELAY_10us@tenMicroSecondCounter+3,??i2_DELAY_10us+3
 21237  002C6E  0E28               	movlw	40
 21238  002C70  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 21239  002C72  CFF3 F009          	movff	prodl,??i2_DELAY_10us+4
 21240  002C76  CFF4 F00A          	movff	prodh,??i2_DELAY_10us+5
 21241  002C7A  6A0B               	clrf	(??i2_DELAY_10us+6)& (0+255),c
 21242  002C7C  6A0C               	clrf	(??i2_DELAY_10us+7)& (0+255),c
 21243  002C7E  0206               	mulwf	(??i2_DELAY_10us+1)& (0+255),c
 21244  002C80  50F3               	movf	prodl,w,c
 21245  002C82  260A               	addwf	(??i2_DELAY_10us+5)& (0+255),f,c
 21246  002C84  50F4               	movf	prodh,w,c
 21247  002C86  220B               	addwfc	(??i2_DELAY_10us+6)& (0+255),f,c
 21248  002C88  0E00               	movlw	0
 21249  002C8A  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 21250  002C8C  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 21251  002C8E  50F3               	movf	prodl,w,c
 21252  002C90  260A               	addwf	(??i2_DELAY_10us+5)& (0+255),f,c
 21253  002C92  50F4               	movf	prodh,w,c
 21254  002C94  220B               	addwfc	(??i2_DELAY_10us+6)& (0+255),f,c
 21255  002C96  0E00               	movlw	0
 21256  002C98  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 21257  002C9A  0E28               	movlw	40
 21258  002C9C  0207               	mulwf	(??i2_DELAY_10us+2)& (0+255),c
 21259  002C9E  50F3               	movf	prodl,w,c
 21260  002CA0  260B               	addwf	(??i2_DELAY_10us+6)& (0+255),f,c
 21261  002CA2  50F4               	movf	prodh,w,c
 21262  002CA4  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 21263  002CA6  0E00               	movlw	0
 21264  002CA8  0206               	mulwf	(??i2_DELAY_10us+1)& (0+255),c
 21265  002CAA  50F3               	movf	prodl,w,c
 21266  002CAC  260B               	addwf	(??i2_DELAY_10us+6)& (0+255),f,c
 21267  002CAE  50F4               	movf	prodh,w,c
 21268  002CB0  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 21269  002CB2  0E00               	movlw	0
 21270  002CB4  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 21271  002CB6  50F3               	movf	prodl,w,c
 21272  002CB8  260B               	addwf	(??i2_DELAY_10us+6)& (0+255),f,c
 21273  002CBA  50F4               	movf	prodh,w,c
 21274  002CBC  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 21275  002CBE  0E28               	movlw	40
 21276  002CC0  0208               	mulwf	(??i2_DELAY_10us+3)& (0+255),c
 21277  002CC2  50F3               	movf	prodl,w,c
 21278  002CC4  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 21279  002CC6  0E00               	movlw	0
 21280  002CC8  0207               	mulwf	(??i2_DELAY_10us+2)& (0+255),c
 21281  002CCA  50F3               	movf	prodl,w,c
 21282  002CCC  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 21283  002CCE  0E00               	movlw	0
 21284  002CD0  0206               	mulwf	(??i2_DELAY_10us+1)& (0+255),c
 21285  002CD2  50F3               	movf	prodl,w,c
 21286  002CD4  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 21287  002CD6  0E00               	movlw	0
 21288  002CD8  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 21289  002CDA  50F3               	movf	prodl,w,c
 21290  002CDC  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 21291  002CDE  C009  F00D         	movff	??i2_DELAY_10us+4,i2DELAY_10us@cyclesRequiredForEntireDelay	;volatile
 21292  002CE2  C00A  F00E         	movff	??i2_DELAY_10us+5,i2DELAY_10us@cyclesRequiredForEntireDelay+1	;volatile
 21293  002CE6  C00B  F00F         	movff	??i2_DELAY_10us+6,i2DELAY_10us@cyclesRequiredForEntireDelay+2	;volatile
 21294  002CEA  C00C  F010         	movff	??i2_DELAY_10us+7,i2DELAY_10us@cyclesRequiredForEntireDelay+3	;volatile
 21295                           
 21296                           ;delay.c: 69: cyclesRequiredForEntireDelay -= (153 + 22);
 21297  002CEE  0E51               	movlw	81
 21298  002CF0  260D               	addwf	i2DELAY_10us@cyclesRequiredForEntireDelay,f,c	;volatile
 21299  002CF2  0EFF               	movlw	255
 21300  002CF4  220E               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+1,f,c	;volatile
 21301  002CF6  220F               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+2,f,c	;volatile
 21302  002CF8  2210               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,f,c	;volatile
 21303                           
 21304                           ;delay.c: 71: if (cyclesRequiredForEntireDelay <= 45)
 21305  002CFA  BE10               	btfsc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,7,c	;volatile
 21306  002CFC  0CFF               	retlw	255
 21307  002CFE  5010               	movf	i2DELAY_10us@cyclesRequiredForEntireDelay+3,w,c	;volatile
 21308  002D00  100F               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+2,w,c	;volatile
 21309  002D02  100E               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+1,w,c	;volatile
 21310  002D04  E10B               	bnz	i2l774
 21311  002D06  0E2E               	movlw	46
 21312  002D08  5C0D               	subwf	i2DELAY_10us@cyclesRequiredForEntireDelay,w,c	;volatile
 21313  002D0A  E208               	bc	i2l774
 21314  002D0C  0012               	return	
 21315  002D0E                     i2l775:
 21316                           
 21317                           ;delay.c: 80: {
 21318                           ;delay.c: 81: __nop();
 21319  002D0E  F000               	nop	
 21320                           
 21321                           ;delay.c: 82: cyclesRequiredForEntireDelay -= 42;
 21322  002D10  0ED6               	movlw	214
 21323  002D12  260D               	addwf	i2DELAY_10us@cyclesRequiredForEntireDelay,f,c	;volatile
 21324  002D14  0EFF               	movlw	255
 21325  002D16  220E               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+1,f,c	;volatile
 21326  002D18  220F               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+2,f,c	;volatile
 21327  002D1A  2210               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,f,c	;volatile
 21328  002D1C                     i2l774:
 21329  002D1C  BE10               	btfsc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,7,c	;volatile
 21330  002D1E  0012               	return	
 21331  002D20  5010               	movf	i2DELAY_10us@cyclesRequiredForEntireDelay+3,w,c	;volatile
 21332  002D22  100F               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+2,w,c	;volatile
 21333  002D24  100E               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+1,w,c	;volatile
 21334  002D26  E1F3               	bnz	i2l775
 21335  002D28  040D               	decf	i2DELAY_10us@cyclesRequiredForEntireDelay,w,c	;volatile
 21336  002D2A  E2F1               	bc	i2l775
 21337  002D2C  0012               	return		;funcret
 21338  002D2E                     __end_ofi2_DELAY_10us:
 21339                           	opt stack 0
 21340                           tblptru	equ	0xFF8
 21341                           tblptrh	equ	0xFF7
 21342                           tblptrl	equ	0xFF6
 21343                           tablat	equ	0xFF5
 21344                           prodh	equ	0xFF4
 21345                           prodl	equ	0xFF3
 21346                           intcon	equ	0xFF2
 21347                           intcon2	equ	0xFF1
 21348                           intcon3	equ	0xFF0
 21349                           postinc0	equ	0xFEE
 21350                           wreg	equ	0xFE8
 21351                           indf1	equ	0xFE7
 21352                           postinc1	equ	0xFE6
 21353                           fsr1h	equ	0xFE2
 21354                           fsr1l	equ	0xFE1
 21355                           bsr	equ	0xFE0
 21356                           indf2	equ	0xFDF
 21357                           postinc2	equ	0xFDE
 21358                           postdec2	equ	0xFDD
 21359                           fsr2h	equ	0xFDA
 21360                           fsr2l	equ	0xFD9
 21361                           status	equ	0xFD8
 21362                           
 21363 ;; *************** function _UserInterruptHandler *****************
 21364 ;; Defined at:
 21365 ;;		line 205 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 21366 ;; Parameters:    Size  Location     Type
 21367 ;;		None
 21368 ;; Auto vars:     Size  Location     Type
 21369 ;;		None
 21370 ;; Return value:  Size  Location     Type
 21371 ;;		None               void
 21372 ;; Registers used:
 21373 ;;		None
 21374 ;; Tracked objects:
 21375 ;;		On entry : 0/0
 21376 ;;		On exit  : 0/0
 21377 ;;		Unchanged: 0/0
 21378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21383 ;;Total ram usage:        0 bytes
 21384 ;; Hardware stack levels used:    1
 21385 ;; This function calls:
 21386 ;;		Nothing
 21387 ;; This function is called by:
 21388 ;;		_high_isr
 21389 ;; This function uses a non-reentrant model
 21390 ;;
 21391                           
 21392                           	psect	text94
 21393  00422E                     __ptext94:
 21394                           	opt stack 0
 21395  00422E                     _UserInterruptHandler:
 21396                           	opt stack 12
 21397                           
 21398                           ;incstack = 0
 21399  00422E  0012               	return		;funcret
 21400  004230                     __end_of_UserInterruptHandler:
 21401                           	opt stack 0
 21402                           tblptru	equ	0xFF8
 21403                           tblptrh	equ	0xFF7
 21404                           tblptrl	equ	0xFF6
 21405                           tablat	equ	0xFF5
 21406                           prodh	equ	0xFF4
 21407                           prodl	equ	0xFF3
 21408                           intcon	equ	0xFF2
 21409                           intcon2	equ	0xFF1
 21410                           intcon3	equ	0xFF0
 21411                           postinc0	equ	0xFEE
 21412                           wreg	equ	0xFE8
 21413                           indf1	equ	0xFE7
 21414                           postinc1	equ	0xFE6
 21415                           fsr1h	equ	0xFE2
 21416                           fsr1l	equ	0xFE1
 21417                           bsr	equ	0xFE0
 21418                           indf2	equ	0xFDF
 21419                           postinc2	equ	0xFDE
 21420                           postdec2	equ	0xFDD
 21421                           fsr2h	equ	0xFDA
 21422                           fsr2l	equ	0xFD9
 21423                           status	equ	0xFD8
 21424                           tblptru	equ	0xFF8
 21425                           tblptrh	equ	0xFF7
 21426                           tblptrl	equ	0xFF6
 21427                           tablat	equ	0xFF5
 21428                           prodh	equ	0xFF4
 21429                           prodl	equ	0xFF3
 21430                           intcon	equ	0xFF2
 21431                           intcon2	equ	0xFF1
 21432                           intcon3	equ	0xFF0
 21433                           postinc0	equ	0xFEE
 21434                           wreg	equ	0xFE8
 21435                           indf1	equ	0xFE7
 21436                           postinc1	equ	0xFE6
 21437                           fsr1h	equ	0xFE2
 21438                           fsr1l	equ	0xFE1
 21439                           bsr	equ	0xFE0
 21440                           indf2	equ	0xFDF
 21441                           postinc2	equ	0xFDE
 21442                           postdec2	equ	0xFDD
 21443                           fsr2h	equ	0xFDA
 21444                           fsr2l	equ	0xFD9
 21445                           status	equ	0xFD8
 21446                           
 21447                           	psect	rparam
 21448  0000                     tblptru	equ	0xFF8
 21449                           tblptrh	equ	0xFF7
 21450                           tblptrl	equ	0xFF6
 21451                           tablat	equ	0xFF5
 21452                           prodh	equ	0xFF4
 21453                           prodl	equ	0xFF3
 21454                           intcon	equ	0xFF2
 21455                           intcon2	equ	0xFF1
 21456                           intcon3	equ	0xFF0
 21457                           postinc0	equ	0xFEE
 21458                           wreg	equ	0xFE8
 21459                           indf1	equ	0xFE7
 21460                           postinc1	equ	0xFE6
 21461                           fsr1h	equ	0xFE2
 21462                           fsr1l	equ	0xFE1
 21463                           bsr	equ	0xFE0
 21464                           indf2	equ	0xFDF
 21465                           postinc2	equ	0xFDE
 21466                           postdec2	equ	0xFDD
 21467                           fsr2h	equ	0xFDA
 21468                           fsr2l	equ	0xFD9
 21469                           status	equ	0xFD8
 21470                           
 21471                           	psect	temp
 21472  000056                     btemp:
 21473                           	opt stack 0
 21474  000056                     	ds	1
 21475  0000                     int$flags	set	btemp
 21476                           tblptru	equ	0xFF8
 21477                           tblptrh	equ	0xFF7
 21478                           tblptrl	equ	0xFF6
 21479                           tablat	equ	0xFF5
 21480                           prodh	equ	0xFF4
 21481                           prodl	equ	0xFF3
 21482                           intcon	equ	0xFF2
 21483                           intcon2	equ	0xFF1
 21484                           intcon3	equ	0xFF0
 21485                           postinc0	equ	0xFEE
 21486                           wreg	equ	0xFE8
 21487                           indf1	equ	0xFE7
 21488                           postinc1	equ	0xFE6
 21489                           fsr1h	equ	0xFE2
 21490                           fsr1l	equ	0xFE1
 21491                           bsr	equ	0xFE0
 21492                           indf2	equ	0xFDF
 21493                           postinc2	equ	0xFDE
 21494                           postdec2	equ	0xFDD
 21495                           fsr2h	equ	0xFDA
 21496                           fsr2l	equ	0xFD9
 21497                           status	equ	0xFD8


Data Sizes:
    Strings     596
    Constant    284
    Data        2
    BSS         671
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      85
    BANK0           160    121     138
    BANK1           256     20     251
    BANK2           256     19     189
    BANK3           256      0     216
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf$3872	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_37(CODE[17]), STR_36(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_35(CODE[18]), STR_34(CODE[20]), STR_33(CODE[17]), STR_32(CODE[22]), 
		 -> STR_31(CODE[22]), STR_30(CODE[25]), STR_29(CODE[28]), STR_28(CODE[22]), 
		 -> STR_27(CODE[17]), STR_26(CODE[32]), STR_25(CODE[29]), STR_24(CODE[16]), 
		 -> STR_18(CODE[29]), STR_17(CODE[31]), STR_16(CODE[32]), STR_15(CODE[29]), 
		 -> STR_14(CODE[14]), STR_13(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Source_END_DEVICE_INFO@SrAddr	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 32
		 -> STR_34(CODE[20]), STR_29(CODE[28]), STR_26(CODE[32]), STR_25(CODE[29]), 
		 -> STR_24(CODE[16]), STR_18(CODE[29]), STR_17(CODE[31]), STR_16(CODE[32]), 
		 -> STR_15(CODE[29]), 

    sp__memset	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    EEPROM_Write@dest	PTR unsigned char  size(2) Largest target is 140
		 -> myConnectionIndex_in_PanCo(BANK0[1]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), role(BANK0[1]), 
		 -> conn_size(BANK0[1]), ConnectionTable(BANK2[140]), 

    Read_MAC_Address@myAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    EEPROM_Read@dest	PTR unsigned char  size(2) Largest target is 140
		 -> myConnectionIndex_in_PanCo(BANK0[1]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), myLongAddress(BANK1[8]), 
		 -> role(BANK0[1]), conn_size(BANK0[1]), ConnectionTable(BANK2[140]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 140
		 -> indirectMessages.DestAddress(BANK3[10]), indirectMessages(BANK3[102]), ConnectionTable(BANK2[140]), NULL(NULL[0]), 
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    SW_Ack_SrED@Dest_Addr	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 140
		 -> indirectMessages.DestAddress(BANK3[10]), indirectMessages(BANK3[102]), ConnectionTable(BANK2[140]), NULL(NULL[0]), 
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> indirectMessages.DestAddress(BANK3[10]), indirectMessages(BANK3[102]), ConnectionTable(BANK2[140]), NULL(NULL[0]), 
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    IndirectPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 140
		 -> MiApp_UnicastConnection@address(BANK0[8]), ConnectionTable(BANK2[140]), NULL(NULL[0]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S995$Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket(BANK3[114]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    S995$SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket(BANK3[114]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    Forward_Packet_PANCr_to_EDy@fw_payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    Forward_Packet_PANCr_to_EDy@EDxAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    store_connection_tb@payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    Find_Index@DestAddr	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    NVMalloc@location	PTR unsigned int  size(2) Largest target is 2
		 -> nvmmyIndex(BANK1[2]), nvmRole(BANK1[2]), nvmEdc(BANK1[2]), nvmOutFrameCounter(COMRAM[2]), 
		 -> nvmConnectionTable(COMRAM[2]), nvmConnMode(COMRAM[2]), nvmCurrentChannel(COMRAM[2]), nvmMyPANID(COMRAM[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 35
		 -> TxBuffer(BANK1[35]), 

    S366$DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> indirectMessages(BANK3[102]), ConnectionTable(BANK2[140]), NULL(NULL[0]), RxPacket(BANK3[114]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> indirectMessages(BANK3[102]), ConnectionTable(BANK2[140]), NULL(NULL[0]), RxPacket(BANK3[114]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S51$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S380$Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket(BANK3[114]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 

    S380$SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket(BANK3[114]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK3[55]), RxPacket(BANK3[114]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_TxPacket
    i2_TxPacket->i2_DELAY_10us
    i2_WriteFIFO->i2_SPI1_Exchange8bit
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPI1_Exchange8bit
    i2_RegisterRead->i2_SPI1_Exchange8bit

Critical Paths under _main in BANK0

    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _Run_Demo->_run_star_demo
    _run_star_demo->_MiApp_EstablishConnection
    _Source_END_DEVICE_INFO->_sprintf
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _MiApp_BroadcastPacket->_SendPacket
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_MiApp_EstablishConnection
    _STAR_DEMO_OPTIONS_MESSAGE->_LCDDisplay
    _Read_MAC_Address->_EEPROM_Read
    _MiApp_StartConnection->_MiWi_TickGet
    _MiApp_ProtocolInit->_MiMAC_Init
    _NVMInit->_NVMalloc
    _MiMAC_Init->_DELAY_ms
    _EEPROM_Read->_SPIPut2
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_Forward_Packet_PANCr_to_EDy
    _store_connection_tb->_handle_lost_connection
    _send_link_status->_SendPacket
    _StartChannelHopping->_SendPacket
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _SW_Ack_SrED->_SendPacket
    _MiMAC_ReceivedPacket->_MiWi_TickGet
    _MiApp_BroadcastConnectionTable->_SendPacket
    _Forward_Packet_PANCr_to_EDy->_MiApp_UnicastConnection
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _IndirectPacket->_MiWi_TickGet
    _DemoOutput_UnicastFail->_LCDDisplay
    _Find_InActiveDevices->_MiApp_RemoveConnection
    _MiApp_RemoveConnection->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_TxPacket
    _TxPacket->_DELAY_10us
    _WriteFIFO->_SPI1_Exchange8bit
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPI1_Exchange8bit
    _RegisterRead->_SPI1_Exchange8bit
    _AddConnection->_EEPROM_Write
    _MiApp_ConnectionMode->_EEPROM_Write
    _EEPROM_Write->_SPIPut2
    _SPIGet2->_SPIPut2
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Update->_LCD_WriteCmd
    _LCD_Update->_LCD_WriteData
    _LCD_WriteData->_SPIPut2
    _LCD_Erase->_DELAY_ms
    _LCD_WriteCmd->_SPIPut2

Critical Paths under _low_isr in BANK0

    _low_isr->i1_RegisterRead
    i1_RegisterRead->i1_SPI1_Exchange8bit

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _MiApp_MessageAvailable->_P2PTasks

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    _Run_Demo->_run_star_demo
    _run_star_demo->_MiApp_EstablishConnection
    _Initialize_Demo->_MiApp_EstablishConnection

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  828586
                                            120 BANK0      1     1      0
                _DemoOutput_Greeting
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                      1     1      0   16437
                                             74 BANK0      1     1      0
                      _ButtonPressed
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2455
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2455
                           _DELAY_ms
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0  567071
                      _run_star_demo
 ---------------------------------------------------------------------------------
 (2) _run_star_demo                                       13    13      0  567071
                                            115 BANK0      5     5      0
                                             12 BANK2      7     7      0
                      _ButtonPressed
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
                         _LCDDisplay
                          _LCD_Erase
                         _LCD_Update
              _MiApp_BroadcastPacket
          _MiApp_EstablishConnection
            _MiApp_UnicastConnection
                  _MiApp_UnicastStar
                       _MiWi_TickGet
                  _Process_RxMessage
          _STAR_DEMO_OPTIONS_MESSAGE
                            ___lbmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     426
                                             22 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Process_RxMessage                                    1     1      0  178943
                                            110 BANK0      1     1      0
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
          _STAR_DEMO_OPTIONS_MESSAGE
             _Source_END_DEVICE_INFO
 ---------------------------------------------------------------------------------
 (4) _Source_END_DEVICE_INFO                               2     0      2   13131
                                             69 BANK0      2     0      2
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_UpdateTxRx                                2     1      1   11142
                                             71 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (5) _LCDTRXCount                                          2     1      1   10768
                                             69 BANK0      2     1      1
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastStar                                   14    14      0  148229
                                            110 BANK0      4     4      0
                                              0 BANK2      9     9      0
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_BroadcastPacket                                2     2      0   14071
                                             77 BANK0      2     2      0
                     _IndirectPacket
                         _SendPacket
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     468
                                             32 BANK0      8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      1     1      0  224289
                                            115 BANK0      1     1      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
                       _EEPROM_Write
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
                   _Read_MAC_Address
          _STAR_DEMO_OPTIONS_MESSAGE
 ---------------------------------------------------------------------------------
 (3) _STAR_DEMO_OPTIONS_MESSAGE                            1     1      0   15935
                                             74 BANK0      1     1      0
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _Read_MAC_Address                                     5     3      2    3008
                                             27 BANK0      5     3      2
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (2) _MiApp_StartConnection                                6     1      5     639
                                             32 BANK0      6     1      5
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   5     5      0   22090
                                             40 BANK0      5     5      0
                        _EEPROM_Read
                       _EEPROM_Write
                   _MiApp_SetChannel
                         _MiMAC_Init
                            _NVMInit
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    1505
                                             28 BANK0      1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             6     2      4    1490
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           4     1      3    6171
                                             36 BANK0      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          4     0      4    2420
                                             23 BANK0      4     0      4
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _MiApp_EstablishConnection                           18    17      1  148678
                                            110 BANK0      5     4      1
                                              0 BANK2     12    12      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0  136274
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            33    33      0  136274
                                            102 BANK0      8     8      0
                                              0 BANK1     20    20      0
                      _AddConnection
                       _EEPROM_Write
               _Find_InActiveDevices
                         _Find_Index
        _Forward_Packet_PANCr_to_EDy
     _MiApp_BroadcastConnectionTable
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                       _MiWi_TickGet
                        _SW_Ack_SrED
                         _SendPacket
                _StartChannelHopping
                      _isSameAddress
                   _send_link_status
                _store_connection_tb
 ---------------------------------------------------------------------------------
 (6) _store_connection_tb                                  8     6      2     715
                                             29 BANK0      6     4      2
             _handle_lost_connection
 ---------------------------------------------------------------------------------
 (7) _handle_lost_connection                               7     7      0     136
                                             22 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (6) _send_link_status                                     1     1      0   11490
                                             77 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _StartChannelHopping                                 14    14      0   19606
                                             77 BANK0     14    14      0
                   _MiApp_SetChannel
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (7) _MiApp_SetChannel                                     1     1      0    7552
                                             31 BANK0      1     1      0
                       _EEPROM_Write
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (8) _MiMAC_SetChannel                                     3     2      1    3642
                                             28 BANK0      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (6) _SW_Ack_SrED                                          2     0      2   11591
                                             77 BANK0      2     0      2
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                15    15      0    1013
                                             32 BANK0     14    14      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (6) _MiApp_BroadcastConnectionTable                      12    12      0   13313
                                             77 BANK0     12    12      0
                         _SendPacket
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     641
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     653
                                             22 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _Forward_Packet_PANCr_to_EDy                          7     2      5   35586
                                             95 BANK0      7     2      5
             _DemoOutput_UnicastFail
            _MiApp_UnicastConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_UnicastConnection                             13    12      1   19112
                                             82 BANK0     13    12      1
                     _IndirectPacket
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (8) _MiApp_UnicastAddress                                 5     1      4   16094
                                             77 BANK0      5     1      4
                     _IndirectPacket
                         _SendPacket
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (9) _IndirectPacket                                      10     6      4    2423
                                             32 BANK0     10     6      4
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (7) _DemoOutput_UnicastFail                               0     0      0   15904
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (6) _Find_Index                                           5     3      2     359
                                             22 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _Find_InActiveDevices                                 2     2      0   16072
                                             83 BANK0      2     2      0
             _MiApp_RemoveConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_RemoveConnection                               6     6      0   15849
                                             77 BANK0      6     6      0
                       _EEPROM_Write
                         _SendPacket
 ---------------------------------------------------------------------------------
 (7) _SendPacket                                          10     6      4   11456
                                             67 BANK0     10     6      4
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (8) _MiMAC_SendPacket                                     9     3      6    5903
                                             58 BANK0      9     3      6
                           _TxPacket
 ---------------------------------------------------------------------------------
 (9) _TxPacket                                            20    19      1    4929
                                             38 BANK0     20    19      1
                         _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (10) _WriteFIFO                                           3     3      0     130
                                             23 BANK0      3     3      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (10) _SetRFMode                                           1     1      0    1738
                                             27 BANK0      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (11) _RegisterSet                                         4     2      2    1707
                                             23 BANK0      4     2      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (10) _RegisterRead                                        4     4      0     167
                                             23 BANK0      4     4      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (11) _SPI1_Exchange8bit                                   1     1      0      31
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MiWi_TickGet                                        10     6      4     400
                                             22 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (10) _DELAY_10us                                         16    12      4     206
                                             22 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        7     7      0    6471
                                             30 BANK0      7     7      0
                       _EEPROM_Write
                  _Total_Connections
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     3      4    1648
                                             22 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0     198
                                             22 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MiApp_ConnectionMode                                 2     2      0    3910
                                             30 BANK0      2     2      0
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (8) _EEPROM_Write                                         7     3      4    3848
                                             23 BANK0      7     3      4
                           _MacroNop
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (9) _SPIGet2                                              0     0      0      31
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (9) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   18598
                                             74 BANK0      2     1      1
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   18297
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   15904
                                             69 BANK0      5     1      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    27     12    7375
                                             34 BANK0     35    23     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             22 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     440
                                             22 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     440
                                             29 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     865
                                             22 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           1     1      0     384
                                             24 BANK0      1     1      0
                       _LCD_WriteCmd
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteData                                        1     1      0      62
                                             23 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            0     0      0    2843
                           _DELAY_ms
                       _LCD_WriteCmd
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     388
                                             22 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteCmd                                         1     1      0      62
                                             23 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (5) _SPIPut2                                              2     2      0      31
                                             22 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DELAY_ms                                            14    12      2    2393
                                             22 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _low_isr                                             4     4      0     114
                                             18 BANK0      4     4      0
                     i1_RegisterRead
 ---------------------------------------------------------------------------------
 (16) i1_RegisterRead                                      4     4      0     114
                                             14 BANK0      4     4      0
                i1_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (17) i1_SPI1_Exchange8bit                                 1     1      0      22
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _high_isr                                           23    23      0    4474
                                             36 COMRAM    10    10      0
                                              0 BANK0     13    13      0
               _UserInterruptHandler
                     i2_MiWi_TickGet
                     i2_RegisterRead
                i2_SPI1_Exchange8bit
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (19) i2_TxPacket                                         20    19      1    1942
                                             16 COMRAM    20    19      1
                       i2_DELAY_10us
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (20) i2_WriteFIFO                                         3     3      0     130
                                              1 COMRAM     3     3      0
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (20) i2_SetRFMode                                         1     1      0     402
                                              5 COMRAM     1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (21) i2_RegisterSet                                       4     2      2     371
                                              1 COMRAM     4     2      2
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (20) i2_RegisterRead                                      4     4      0     167
                                              1 COMRAM     4     4      0
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (21) i2_SPI1_Exchange8bit                                 1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (20) i2_MiWi_TickGet                                     10     6      4     316
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (20) i2_DELAY_10us                                       16    12      4     137
                                              0 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (19) _UserInterruptHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DemoOutput_Greeting
     _DELAY_ms
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _Initialize_Demo
     _DemoOutput_Channel
       _DELAY_ms
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DemoOutput_ChannelError
     _EEPROM_Write
       _MacroNop
       _SPIGet2
         _SPIPut2
       _SPIPut2
     _MiApp_ConnectionMode
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Total_Connections
             _isSameAddress
           _EEPROM_Write
             _MacroNop
             _SPIGet2
               _SPIPut2
             _SPIPut2
           _Find_InActiveDevices
             _MiApp_RemoveConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                   _DELAY_ms
                   _LCD_WriteCmd
                     _SPIPut2
                   _memset
                 _LCD_Update
                   _LCD_WriteCmd
                     _SPIPut2
                   _LCD_WriteData
                     _SPIPut2
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _IndirectPacket
                 _MiWi_TickGet
               _MiApp_UnicastAddress
                 _IndirectPacket
                   _MiWi_TickGet
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPI1_Exchange8bit
                       _RegisterSet
                         _SPI1_Exchange8bit
                       _SetRFMode
                         _RegisterSet
                           _SPI1_Exchange8bit
                       _WriteFIFO
                         _SPI1_Exchange8bit
                 _isSameAddress
           _MiApp_BroadcastConnectionTable
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
             ___awdiv
             ___awmod
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
           _MiWi_TickGet
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
           _StartChannelHopping
             _MiApp_SetChannel
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _MiMAC_SetChannel
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
             _MiWi_TickGet
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _isSameAddress
           _send_link_status
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _store_connection_tb
             _handle_lost_connection
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _TxPacket
             _DELAY_10us
             _MiWi_TickGet
             _RegisterRead
               _SPI1_Exchange8bit
             _RegisterSet
               _SPI1_Exchange8bit
             _SetRFMode
               _RegisterSet
                 _SPI1_Exchange8bit
             _WriteFIFO
               _SPI1_Exchange8bit
     _MiApp_ProtocolInit
       _EEPROM_Read
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _MiApp_SetChannel
         _EEPROM_Write
           _MacroNop
           _SPIGet2
             _SPIPut2
           _SPIPut2
         _MiMAC_SetChannel
           _RegisterSet
             _SPI1_Exchange8bit
           _SetRFMode
             _RegisterSet
               _SPI1_Exchange8bit
       _MiMAC_Init
         _DELAY_ms
         _RegisterSet
           _SPI1_Exchange8bit
         _SetRFMode
           _RegisterSet
             _SPI1_Exchange8bit
       _NVMInit
         _NVMalloc
     _MiApp_SetChannel
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _MiMAC_SetChannel
         _RegisterSet
           _SPI1_Exchange8bit
         _SetRFMode
           _RegisterSet
             _SPI1_Exchange8bit
     _MiApp_StartConnection
       _MiWi_TickGet
     _Read_MAC_Address
       _EEPROM_Read
         _SPIGet2
           _SPIPut2
         _SPIPut2
     _STAR_DEMO_OPTIONS_MESSAGE
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
   _Run_Demo
     _run_star_demo
       _ButtonPressed
         _MiWi_TickGet
       _DELAY_ms
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _LCD_Erase
             _DELAY_ms
             _LCD_WriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCD_WriteCmd
               _SPIPut2
             _LCD_WriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _MiApp_BroadcastPacket
         _IndirectPacket
           _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPI1_Exchange8bit
               _RegisterSet
                 _SPI1_Exchange8bit
               _SetRFMode
                 _RegisterSet
                   _SPI1_Exchange8bit
               _WriteFIFO
                 _SPI1_Exchange8bit
       _MiApp_EstablishConnection
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _Total_Connections
               _isSameAddress
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _EEPROM_Write
                   _MacroNop
                   _SPIGet2
                     _SPIPut2
                   _SPIPut2
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPI1_Exchange8bit
                       _RegisterSet
                         _SPI1_Exchange8bit
                       _SetRFMode
                         _RegisterSet
                           _SPI1_Exchange8bit
                       _WriteFIFO
                         _SPI1_Exchange8bit
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                     _DELAY_ms
                     _LCD_WriteCmd
                       _SPIPut2
                     _memset
                   _LCD_Update
                     _LCD_WriteCmd
                       _SPIPut2
                     _LCD_WriteData
                       _SPIPut2
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _IndirectPacket
                   _MiWi_TickGet
                 _MiApp_UnicastAddress
                   _IndirectPacket
                     _MiWi_TickGet
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                         _MiWi_TickGet
                         _RegisterRead
                           _SPI1_Exchange8bit
                         _RegisterSet
                           _SPI1_Exchange8bit
                         _SetRFMode
                           _RegisterSet
                             _SPI1_Exchange8bit
                         _WriteFIFO
                           _SPI1_Exchange8bit
                   _isSameAddress
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
             _StartChannelHopping
               _MiApp_SetChannel
                 _EEPROM_Write
                   _MacroNop
                   _SPIGet2
                     _SPIPut2
                   _SPIPut2
                 _MiMAC_SetChannel
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
               _MiWi_TickGet
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPI1_Exchange8bit
               _RegisterSet
                 _SPI1_Exchange8bit
               _SetRFMode
                 _RegisterSet
                   _SPI1_Exchange8bit
               _WriteFIFO
                 _SPI1_Exchange8bit
       _MiApp_UnicastConnection
         _IndirectPacket
           _MiWi_TickGet
         _MiApp_UnicastAddress
           _IndirectPacket
             _MiWi_TickGet
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
           _isSameAddress
       _MiApp_UnicastStar
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _Total_Connections
               _isSameAddress
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _EEPROM_Write
                   _MacroNop
                   _SPIGet2
                     _SPIPut2
                   _SPIPut2
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPI1_Exchange8bit
                       _RegisterSet
                         _SPI1_Exchange8bit
                       _SetRFMode
                         _RegisterSet
                           _SPI1_Exchange8bit
                       _WriteFIFO
                         _SPI1_Exchange8bit
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                     _DELAY_ms
                     _LCD_WriteCmd
                       _SPIPut2
                     _memset
                   _LCD_Update
                     _LCD_WriteCmd
                       _SPIPut2
                     _LCD_WriteData
                       _SPIPut2
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _IndirectPacket
                   _MiWi_TickGet
                 _MiApp_UnicastAddress
                   _IndirectPacket
                     _MiWi_TickGet
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                         _MiWi_TickGet
                         _RegisterRead
                           _SPI1_Exchange8bit
                         _RegisterSet
                           _SPI1_Exchange8bit
                         _SetRFMode
                           _RegisterSet
                             _SPI1_Exchange8bit
                         _WriteFIFO
                           _SPI1_Exchange8bit
                   _isSameAddress
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
             _StartChannelHopping
               _MiApp_SetChannel
                 _EEPROM_Write
                   _MacroNop
                   _SPIGet2
                     _SPIPut2
                   _SPIPut2
                 _MiMAC_SetChannel
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
               _MiWi_TickGet
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPI1_Exchange8bit
               _RegisterSet
                 _SPI1_Exchange8bit
               _SetRFMode
                 _RegisterSet
                   _SPI1_Exchange8bit
               _WriteFIFO
                 _SPI1_Exchange8bit
       _MiWi_TickGet
       _Process_RxMessage
         _DELAY_ms
         _DemoOutput_UpdateTxRx
           _LCDTRXCount
             _LCD_Erase
               _DELAY_ms
               _LCD_WriteCmd
                 _SPIPut2
               _memset
             _LCD_Update
               _LCD_WriteCmd
                 _SPIPut2
               _LCD_WriteData
                 _SPIPut2
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _Total_Connections
               _isSameAddress
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _EEPROM_Write
                   _MacroNop
                   _SPIGet2
                     _SPIPut2
                   _SPIPut2
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPI1_Exchange8bit
                       _RegisterSet
                         _SPI1_Exchange8bit
                       _SetRFMode
                         _RegisterSet
                           _SPI1_Exchange8bit
                       _WriteFIFO
                         _SPI1_Exchange8bit
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                     _DELAY_ms
                     _LCD_WriteCmd
                       _SPIPut2
                     _memset
                   _LCD_Update
                     _LCD_WriteCmd
                       _SPIPut2
                     _LCD_WriteData
                       _SPIPut2
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _IndirectPacket
                   _MiWi_TickGet
                 _MiApp_UnicastAddress
                   _IndirectPacket
                     _MiWi_TickGet
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                         _MiWi_TickGet
                         _RegisterRead
                           _SPI1_Exchange8bit
                         _RegisterSet
                           _SPI1_Exchange8bit
                         _SetRFMode
                           _RegisterSet
                             _SPI1_Exchange8bit
                         _WriteFIFO
                           _SPI1_Exchange8bit
                   _isSameAddress
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
             _StartChannelHopping
               _MiApp_SetChannel
                 _EEPROM_Write
                   _MacroNop
                   _SPIGet2
                     _SPIPut2
                   _SPIPut2
                 _MiMAC_SetChannel
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
               _MiWi_TickGet
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _store_connection_tb
               _handle_lost_connection
         _STAR_DEMO_OPTIONS_MESSAGE
           _LCDDisplay
             _DELAY_ms
             _LCD_Erase
               _DELAY_ms
               _LCD_WriteCmd
                 _SPIPut2
               _memset
             _LCD_Update
               _LCD_WriteCmd
                 _SPIPut2
               _LCD_WriteData
                 _SPIPut2
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
         _Source_END_DEVICE_INFO
           _DELAY_ms
           _LCD_Erase
             _DELAY_ms
             _LCD_WriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCD_WriteCmd
               _SPIPut2
             _LCD_WriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _STAR_DEMO_OPTIONS_MESSAGE
         _LCDDisplay
           _DELAY_ms
           _LCD_Erase
             _DELAY_ms
             _LCD_WriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCD_WriteCmd
               _SPIPut2
             _LCD_WriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       ___lbmod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
       _LCD_WriteCmd
         _SPIPut2
   _TMR1_Initialize
     _TMR1_StartTimer
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit

 _low_isr (ROOT)
   i1_RegisterRead
     i1_SPI1_Exchange8bit

 _high_isr (ROOT)
   _UserInterruptHandler
   i2_MiWi_TickGet
   i2_RegisterRead
     i2_SPI1_Exchange8bit
   i2_SPI1_Exchange8bit
   i2_TxPacket
     i2_DELAY_10us
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPI1_Exchange8bit
     i2_RegisterSet
       i2_SPI1_Exchange8bit
     i2_SetRFMode
       i2_RegisterSet
         i2_SPI1_Exchange8bit
     i2_WriteFIFO
       i2_SPI1_Exchange8bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      D8      12       84.4%
BITBANK2           100      0       0       9        0.0%
BANK2              100     13      BD      10       73.8%
BITBANK1           100      0       0       7        0.0%
BANK1              100     14      FB       8       98.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     79      8A       5       86.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      55       1       90.4%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     36F       6        0.0%
DATA                 0      0     36F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Feb 14 03:48:58 2016

                            _SPI1_Exchange8bit 419C                                     i2_TxPacket 26F8  
                       _PUSH_BUTTON_press_time 017B                                              _i 00E1  
                               _LCD_Initialize 28FE                       ??_Source_END_DEVICE_INFO 00A7  
                          EEPROM_Write@oldRFIE 007C                            P2PTasks@final_index 01F0  
                            _Process_RxMessage 3C02                      __end_of_MiApp_UnicastStar 3352  
                         ?_MiMAC_DiscardPacket 0001                                 ?_isSameAddress 0076  
                           ?_SPI1_Exchange8bit 0001                                             l90 2616  
                                           l88 25DC                                             l89 25DE  
                                 ___awdiv@sign 007B                                             _t1 0183  
                                           _t2 0187                                    ?_LCD_Update 0001  
                                           bsr 000FE0                            ___wmul@multiplicand 0078  
                          MiApp_ProtocolInit@i 008C                          Find_InActiveDevices@i 00B4  
                           ?_Process_RxMessage 0001                        MiApp_RemoveConnection@i 00B2  
                      MiApp_RemoveConnection@j 00AD                                     _MiMAC_Init 30FC  
                              _P2PCapacityInfo 00DB                                            l102 2668  
                                          l150 288E                                            l151 28C6  
                                          l145 2848                                            l163 1F5E  
                                          l169 1FFE                                            l508 0652  
                                          l517 06F0                                            l377 3ACA  
                                          l562 20C8                                            l619 1B14  
                                          l469 0B02                                 ?i2_RegisterSet 0002  
                                          l558 0B14                                            l496 0512  
                                          l729 225A                                            l930 4182  
                                          l922 41A6                                            l578 1D82  
                                          l738 2D48                                            l758 3EEE  
                                          l774 2B7C                                            l783 2C4C  
                                          l775 2B6C                                            l679 2418  
                                          l784 2C3C                                            l928 4178  
                                          l972 3A44                                            l975 3A60  
                              _timer1ReloadVal 0193                            ??_SPI1_Exchange8bit 0076  
                                 ___awmod@sign 007B                                ??_AddConnection 007E  
                                  LCDDisplay@i 00A9                                            prod 000FF3  
                                          wreg 000FE8                            ??_Process_RxMessage 00CE  
                          __size_of_DELAY_10us 00D2                                    i2_WriteFIFO 3EAC  
                                NVMInit@result 007C              __end_of_MiApp_EstablishConnection 24A4  
               __size_of_MiApp_StartConnection 003C                  __end_of_MiApp_StartConnection 3E00  
                            _Total_Connections 3A88                                           l1180 3374  
                                         l1503 0F4A                                           l1423 0B3A  
                                         l1520 10F2                                           l1440 0C44  
                                         l1505 0F70                                           l1506 0F74  
                                         l1267 324A                                           l1524 1058  
                                         l1508 0F94                                           l1372 12E0  
                                         l1454 0C84                                           l1439 0C7A  
                                         l1383 14D8                                           l1457 0CBE  
                                         l1458 0CC2                                           l1386 15D8  
                                         l1379 13CE                                           l1497 0ED8  
                                         l1953 3BAE                                           l1963 3DBA  
                                         l9010 3DB0                                           l9002 3D92  
                                         l9004 3D9A                                           l9100 1DE8  
                                         l7412 3F5E                                           l9006 3D9E  
                                         l9110 1E1E                                           l9200 0C7E  
                                         l9104 1DF0                                ?i2_RegisterRead 0001  
                                         l9210 0CAA                                           l9202 0C82  
                                         l9034 3F9A                                           l9114 1E36  
                                         l9220 0CD8                                           l9204 0C88  
                                         l9028 3F7A                                           l9302 0E38  
                                         l9222 0CE8                                           l9150 0B48  
                                         l9142 0B22                                           l9118 1E70  
                                         l9126 1E9C                                           l9400 103C  
                                         l9304 0E3C                                           l9320 0E76  
                                         l9232 0D14                                           l9216 0CC8  
                                         l9152 0B4C                                           l9410 1068  
                                         l9242 0D44                                           l9250 0D58  
                                         l9154 0B50                                           l9066 1CBC  
                                         l9500 35D8                                           l9340 0EDC  
                                         l9324 0E8A                                           l9236 0D24  
                                         l9228 0D00                                           l9252 0D92  
                                         l9148 0B44                                           l7732 4042  
                                         l7724 402C                                           l9502 35EA  
                                         l9414 1098                                           l9334 0EB2  
                                         l9318 0E64                                           l9246 0D52  
                                         l9238 0D36                                           l9182 0C0A  
                                         l9166 0B8C                                           l9174 0BE4  
                                         l9158 0B56                                           l9078 1D40  
         __size_of_Forward_Packet_PANCr_to_EDy 009C                                           l9440 116C  
                                         l9432 10F4                                           l9416 109E  
                                         l9360 0F8E                                           l9352 0F4E  
                                         l9328 0E9C                                           l9264 0DC0  
                                         l8800 25E6                                           l9096 1DDE  
                                         l9088 1D86                                           l9512 33EE  
                                         l9434 1132                                           l9450 11D4  
                                         l9426 10DE                                           l9346 0F0E  
                                         l9290 0E10                                           l9274 0DE0  
                                         l9194 0C48                                           l9444 1190  
                                         l9276 0DE4                                           l9268 0DD2  
                                         l8812 2606                                           l9454 11E2  
                                         l9366 0FA4                                           l9382 0FF6  
                                         l9390 1016                                           l9198 0C66  
                                         l9630 3A8C                                           l8750 376A  
                                         l8822 263A                                           l9448 11C2  
                                         l9376 0FE2                                           l9288 0E0C  
                                         l9464 1212                                           l9800 3744  
                                         l9704 3FCC                                           l9482 3598  
                                         l9458 11F6                                           l9394 1020  
                                         l9466 122A                                           l9618 3D72  
                                         l9538 3478                                           l8762 37A0  
                                         l8754 377C                                           l8850 26A0  
                                         l8834 2660                                           l8826 2650  
                                         l8914 287E                                           l9650 3680  
                                         l9484 35AA                                           l9564 34B8  
                                         l9636 3AC8                                           l8772 37C2  
                                         l8932 28EA                                           l8924 28B6  
                                         l8908 285E                                           l9732 24F8  
                                         l9716 24AE                                           l9804 374E  
                                         l9820 38CC                                           l9478 3580  
                                         l8766 37B2                                           l8758 378E  
                                         l8846 2694                                           l8862 26EA  
                                         l8926 28CA                                           l8918 2896  
                                         l9830 38EC                                           l8952 4002  
                                         l9496 35C0                                           l8864 26F4  
                                         l8848 2698                                           l9760 2592  
                                         l9736 2504                                           l9744 2546  
                                         l9808 375A                                           l9832 38F0  
                                         l9840 390C                                           l9824 38D8  
                                         l9656 36B8                                           l9578 34E4  
                                         l8786 3A6C                                           l9922 319A  
                                         l9586 35F8                                           l9674 2F56  
                                         l9906 2042                                           l9658 36BC  
                                         l8956 4012                                           l9596 3656  
                                         l9684 2FA4                                           l9844 3918  
                                         l9836 3902                                           l9828 38E4  
                                         l8982 3B7E                                           l8966 4150  
                                         l8894 281E                                           l9790 3726  
                                         l9782 370E                                           l9854 1EAA  
                                         STR_1 FF36                                           l8984 3B86  
                                         l9936 321A                                           l9792 372A  
                                         l9776 36FE                                           l9864 1F50  
                                         l9952 29E4                                           STR_2 FFDB  
                                         l8994 3BA4                                           l8986 3B8A  
                                         l9938 321E                                           STR_4 FFCD  
                                         l9788 371E                                           l9956 2A0A  
                                         l9990 30BE                                           l9894 2002  
                                         l9878 1F60                                           l9966 2AB0  
                                         STR_8 FDA3                                           l9888 1FBC  
                       __size_of_ButtonPressed 0090                      DemoOutput_Channel@channel 00AB  
                                         u8305 3CBC                                           i2l90 273C  
                                         u8306 3CBE                                           u8315 3CC8  
                                         u8316 3CCA                                           u8500 26DC  
                                         u8325 3B5A                                           u8326 3B5C  
                                         u8335 3B66                                           i2l88 2700  
                                         u9320 0F40                                           u8336 3B68  
                                         i2l89 2702                                           u8345 3E2C  
                                         u8346 3E2E                                           u8355 3E38  
                                         u8356 3E3A                                           u9520 11F6  
                                         u8580 2828                                           u8830 301E  
                                         u8815 3004                                           u8816 3008  
                                         u8808 2FEE                                 _IndirectPacket 1CB6  
                                         u8825 3010                                           u8826 3014  
                                         u8770 2FD2                                           u9635 34F2  
                                         u9636 34F4                                           u8598 282C  
                                         u8790 2FEA                                           u8848 3022  
                                         u8865 1CFC                                           u8866 1CFE  
                                         u8875 1D18                                           u8788 2FD6  
                                         u8876 1D1A                                           u8885 1D34  
                                         u8886 1D36                                           _TMR1 000FCE  
                                         _MiWi FC87                        i1SPI1_Exchange8bit@data 006D  
                           ?_Total_Connections 0001                      MiApp_StartConnection@Mode 0085  
                       MiApp_UnicastStar@SecEn 02B2                     MiMAC_SetChannel@offsetFreq 007C  
                                         _main 40FE                                __end_of_SPIGet2 4218  
                              __end_of_NVMInit 2F24                                           _role 00E7  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         indf1 000FE7                                           fsr1l 000FE1  
                                         indf2 000FDF                                           fsr2l 000FD9  
                                         btemp 0056                                __end_of_SPIPut2 418A  
                           __size_of_LCD_Erase 0028         __end_of_MiApp_BroadcastConnectionTable 1CB6  
      __size_of_MiApp_BroadcastConnectionTable 0214                 _MiApp_BroadcastConnectionTable 1AA2  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 0054                         __size_of_run_star_demo 04AC  
                    __end_of_SPI1_Exchange8bit 41AE                               __end_of_DELAY_ms 2C5E  
                                ?_LCD_WriteCmd 0001                                   _sprintf$3872 0097  
                                 _sprintf$3865 0093                                   _sprintf$3866 0095  
                          ??_Total_Connections 0076                         __end_of_LCD_Initialize 29E0  
                                _LCD_WriteData 41AE                      __end_of_Process_RxMessage 3C4A  
                               _InitConfigRegs FD05                                   high_isr@bAck 0067  
                                 ___param_bank 000010                          ??_MiMAC_DiscardPacket 0076  
                         __end_of_EEPROM_Write 34F6                               __end_of_P2PTasks 0B1C  
                 __end_of_MiApp_DiscardMessage 421E                               _send_link_status 3E76  
                                __CFG_PLLDIV$2 000000                                     _Find_Index 3196  
                                        l10004 30F8                                          l10100 1C3C  
                                        l10022 3A20                                          l10014 39E2  
                                        l10110 1C86                                          l10102 1C40  
                                        l10024 3A2E                                          l10104 1C42  
                                        l10130 21F8                                          l10106 1C7E  
                                        l10122 1CAC                                          l11002 210E  
                                        l10052 1B10                                          l10044 1ABC  
                                        l11004 216C                                          l10142 2242  
                                        l10118 1C9C                                          l10070 1B74  
                                        l10046 1AC2                                          l11006 21A8  
                                        l10400 0486                                          l11032 3DC8  
                                        l10154 2250                                          l10146 224A  
                                        l10138 2238                                          l10082 1BF4  
                                        l10330 0368                                          l10314 0338  
                                        l10242 00D4                                          l11202 14CC  
                                        l11124 3D28                                          l10164 2260  
                                        l10156 2254                                          l10420 04CE  
                                        l10404 0490                                          l10316 033E  
                                        l10308 031A                                          l11204 14D4  
                                        l11132 1250                                          l11126 3D3C  
                                        l10334 039A                                          l10326 0360  
                                        l10270 0212                                          l10262 0178  
                                        l11038 3DF2                                          l11054 34F8  
                                        l11150 127E                                          l11142 126E  
                                        l10088 1C0A                                          l10520 0726  
                                        l10504 06E4                                          l10352 03B6  
                                        l10256 0174                                          l10248 0122  
                                        l11224 1556                                          l10178 22E4  
                                        l10514 06FA                                          l10442 052C  
                                        l10370 03FA                                          l10338 03A0  
                                        l10282 0286                                          l11146 1276  
                                        l10532 07EA                                          l10524 072E  
                                        l10380 0412                                          l11068 3546  
                                        l11236 15BC                                          l11228 155E  
                                        l11172 1362                                          l11260 163A  
                                        l10198 2D34                                          l10630 0AA8  
                                        l10622 0A36                                          l10614 0A22  
                                        l10606 0A0E                                          l10550 08A2  
                                        l10542 0872                                          l10454 05B4  
                                        l11270 1650                                          l11254 162E  
                                        l11190 1478                                          l11166 12EA  
                                        l11158 12CA                                          l11262 1640  
                                        l10480 063C                                          l10640 0AAC  
                                        l11256 1632                                          l11248 15F6  
                                        l11504 4090                                          l10618 0A2E  
                                        l10538 082E                                          l10546 0878  
                                        l10562 094A                                          l10466 05DE  
                                        l10458 05BE                                          l10642 0B06  
                                        l10298 0300                                          l11194 1480  
                                        l11178 1458                                          l11258 1634  
                                        l10580 099E                                          l10572 0974  
                                        l10556 08E6                                          l10468 05FC  
                                        l10388 0436                                          l10820 23A2  
                                        l10812 2374                                          l10708 311E  
                                        l10718 313A                                          l11542 32A6  
                                        l11526 3264                                          l10496 066E  
                                        l10488 065A                                          l11288 16DA  
                                        l10754 3F3E                                          l10674 40CE  
                                        l11538 3290                                          l10906 33E0  
                                        l10762 398A                                          l10588 09AC  
                                        l10748 3F28                                          l10772 39D0  
                                        l10932 3C46                                          l11492 4082  
                                        l10598 09D6                                          l10870 2496  
                                        l10782 32F6                                          l10856 2456  
                                        l10768 39C6                                          l10792 334A  
                                        l10928 3C3C                                          l10866 248A  
                                        l10794 334E                                          l10980 20CC  
                                        l11828 4116                                          l10990 20E8  
                                        l10966 205C                                          l10898 3396  
                                        ?_main 0001                    __end_of_StartChannelHopping 2DDA  
                              __end_of___awdiv 3764                                          STR_20 FEA7  
                MiApp_EstablishConnection@Mode 00CE                                          STR_13 FFAF  
                                        STR_21 FEC3                                          STR_22 FFF0  
                                        STR_14 FFBF                                          STR_30 FEDD  
                                        STR_31 FEF6                                          STR_15 FE34  
                                        STR_32 FEF6                                          STR_24 FF9F  
                                        STR_16 FDD5                                          STR_33 FF7D  
                                        STR_25 FE51                                          STR_17 FE15  
                                        STR_34 FF22                                          STR_18 FE6E  
                                        STR_26 FDF5                                          STR_19 FFE7  
                                        STR_27 FF8E                                          STR_35 FF49  
                                        STR_36 FF5B                                          STR_28 FF0C  
                              __end_of___awmod 3922                                          STR_37 FF6C  
                                        STR_29 FE8B                                __end_of___lbmod 404A  
                              _TMR1_StartTimer 421E                                          u10030 1F3E  
                                        u11210 3346                                          u10420 2D86  
                                        u10500 01FE                                          u10530 0270  
                                        u11250 23F0                                          u10460 010E  
                              ___awdiv@divisor 0078                                          u10605 02F0  
                                        u10470 015C                                          u11350 33DE  
                                        u10607 02F2                                          u10560 02A8  
                                        _T1CON 000FCD                                          u10580 02D4  
                                        u10575 02C0                                          u10568 02AC  
                                        u10577 02C2                                          u11475 21C4  
                                        u11476 21C8                                    LCD_Update@i 0078  
                                        u10598 02D8                                          u11690 169E  
                              __end_of___lwdiv 3BB8                                          i2l102 278A  
                                        i2l200 17A0                                __end_of___lwmod 3DC4  
                                        i2l203 1828                                          i1l179 0044  
                                        i2l213 193C                                          i2l194 1760  
                                        i1l922 41DC                                          i2l187 1742  
                                        i2l189 177A                                          i2l922 41EC  
                                        i2l774 2D1C                                          i2l775 2D0E  
                                        i2l972 3ADE                                ___awdiv@counter 007A  
                                        i2l975 3AFA                                          _TMR1H 000FCF  
                                        _TMR0L 000FD6                                          _TMR1L 000FCE  
                             SendPacket@tParam 00AA                                  P2PTasks@tick2 01E8  
                                P2PTasks@tick3 01F2                         ?_DemoOutput_UpdateTxRx 00A7  
                            high_isr@BankIndex 006B                      __end_of_Total_Connections 3AD6  
                                        _RxNum 0043                         run_star_demo@select_ed 00D7  
                                        _TxNum 0045                            __size_of_LCDDisplay 003E  
                __size_of_MiApp_ConnectionMode 0034                         __end_of_IndirectPacket 1EA8  
                              __end_of_dpowers FD9B                               SendPacket@status 00A8  
                   store_connection_tb@payload 007D                  __size_of_MiApp_UnicastAddress 007E  
                                  _SW_Ack_SrED 3FCE                                __end_of_isdigit 4158  
                                        _tick1 018B                                          _tick4 018F  
                      __end_of_TMR1_Initialize 4172                                __end_of_low_isr 0054  
                             __end_of_NVMalloc 3F78                                          tablat 000FF5  
                               ButtonPressed@t 0084                    __end_ofi2_SPI1_Exchange8bit 41F4  
                          __size_of_LCD_Update 0080                        ?_MiApp_RemoveConnection 0001  
                                        status 000FD8                                __end_of_sprintf 1236  
                       run_star_demo@update_ed 00D4                               EEPROM_Write@addr 0079  
                       __end_of_InitConfigRegs FD45                               EEPROM_Write@dest 0077  
                               ??_LCD_WriteCmd 0077                                  ?i2_DELAY_10us 0001  
                               ?_LCD_WriteData 0001                      __size_of_MiMAC_SetChannel 008C  
                         __size_of_EEPROM_Read 0032              StartChannelHopping@OptimalChannel 00B9  
                    __size_of_Read_MAC_Address 0080                    __end_of_DemoOutput_Greeting 413A  
                              ?_LCD_Initialize 0001                                   __end_of_MiWi FD05  
                              __initialization 3922                   __size_ofi1_SPI1_Exchange8bit 0012  
                              ??_isSameAddress 007A                                    ?i2_TxPacket 0011  
                    __size_of_MiMAC_SendPacket 00E8           STAR_DEMO_OPTIONS_MESSAGE@NetworkRole 00AA  
                             __end_of_MacroNop 422A                                   __end_of_main 411C  
                      handle_lost_connection@i 007C                     __size_of_MiApp_UnicastStar 0090  
              __size_of_Source_END_DEVICE_INFO 006E                                 TxPacket@status 0097  
                                _ButtonPressed 3352                                ??i2_RegisterSet 0004  
       MiApp_UnicastConnection@ConnectionIndex 00BD                       i1RegisterRead@IRQ0select 0071  
                     i1RegisterRead@IRQ1select 0070                                  ??_RegisterSet 0079  
                            high_isr@PacketLen 006A                                         ??_main 00D8  
                                  ?_MiMAC_Init 0084                        _DemoOutput_ChannelError 422C  
                                __activetblptr 000002                              __end_of_LCD_Erase 4072  
                                _run_star_demo 1236                           __end_of_MiWi_TickGet 3A88  
                                _IRQ1_Received 00D9                               ??i1_RegisterRead 006E  
                      MiApp_SetChannel@channel 007F                           store_connection_tb@i 0082  
                         store_connection_tb@j 0081                               __end_of_TxPacket 26F8  
                 __size_of_store_connection_tb 00DC                               __end_of_Run_Demo 4226  
            MiApp_ProtocolInit@bNetworkFreezer 0088                           _MiMAC_ReceivedPacket 1EA8  
                              i2SetRFMode@mode 0006                                     _SendPacket 2FC2  
                              ?_IndirectPacket 0080                                      ??_SPIGet2 0077  
                                    ??_NVMInit 007C                                         _EECON2 000FA7  
                                       _ANCON0 000F48                                         _ANCON1 000F49  
                                    ??_SPIPut2 0076                               ___awdiv@dividend 0076  
                     ?_MiApp_UnicastConnection 00B2                                 P2PTasks@p_1412 01F7  
                                       _T1GCON 000F9A                 __end_of_MiApp_RemoveConnection 25D2  
                                       _MACSeq 003E                                 __CFG_WDTEN$OFF 000000  
                                       i1l8464 002E                                         _OSCCON 000FD3  
                                       _PVALUE FD45                                         _RPOR21 000EDB  
                                       _RPINR1 000EE7                                         _RPOR19 000ED9  
                                       _SVALUE FD65                        i2RegisterSet@IRQ0select 0005  
              MiApp_StartConnection@ChannelMap 0081                        i2RegisterSet@IRQ1select 0004  
                        SPI1_Exchange8bit@data 0076                           __size_of_LCDTRXCount 003E  
                               ??i2_DELAY_10us 0005                  __size_of_UserInterruptHandler 0002  
                                 ??_DELAY_10us 007A                        ?_DemoOutput_UnicastFail 0001  
                   __size_of_SPI1_Exchange8bit 0012                                     TxPacket@t1 008B  
                                   TxPacket@t2 008F                             __size_of_SetRFMode 0076  
                               P2PTasks@status 01F8                                 __CFG_XINST$OFF 000000  
                                       _TxData 00DF                     __size_of_Process_RxMessage 0048  
                             LCD_WriteCmd@data 0077                               __end_of_high_isr 1AA2  
                      __end_of_TMR1_StartTimer 4222                                         ___wmul 4098  
                      ??_MiApp_BroadcastPacket 00AD                                      ??___awdiv 007A  
                               ?_ButtonPressed 0001                                      ??___awmod 007A  
                                    ??___lbmod 0077                                         _hasAck 00E0  
                     __size_of_freezer_feature 0026                      __size_of_MiApp_SetChannel 002A  
                                    ??___lwdiv 007A                                      ??___lwmod 0081  
                                       _memset 3FF8                                    ?_Find_Index 0076  
                                       clear_0 3928                                         clear_1 3934  
                                       clear_2 3940                                         clear_3 394C  
                                       clear_4 3958                               ___awdiv@quotient 007C  
                                       _nvmEdc 01E1                                ___awmod@divisor 0078  
                              ___awmod@counter 007A                                   NVMalloc@size 0076  
                               ?_run_star_demo 0001                              high_isr@ackPacket 0063  
                                    ??_isdigit 0076                                 LCDDisplay@text 00A5  
                                 __mediumconst FC86                          ?_MiMAC_ReceivedPacket 0001  
                  __size_of_DemoOutput_Channel 003E                                      ??_low_isr 0072  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                   __size_of_Total_Connections 004E                                         tblptru 000FF8  
                  ??_MiApp_EstablishConnection 00CF                                      ?_DELAY_ms 0076  
                           __end_of_DELAY_10us 2B8E                                     _TxSynCount 0046  
                          __end_of_RegisterSet 3CCC                                  ?_RegisterRead 0001  
                          __size_ofi2_TxPacket 011E                                      ??_sprintf 008E  
                       _Source_END_DEVICE_INFO 384C                              _ReceivedBankIndex 00DE  
                                 ?i2_SetRFMode 0001                               ?_TMR1_Initialize 0001  
                            _SYSTEM_Initialize 2DDA                                      ?_P2PTasks 0001  
                              ___lbmod@divisor 0076                           _MiApp_DiscardMessage 4218  
                          _PUSH_BUTTON_pressed 0040                                     __accesstop 0060  
                           __size_of_WriteFIFO 003C                        __end_of__initialization 3976  
                              ___lbmod@counter 0078                  __size_of_Find_InActiveDevices 005A  
                            EEPROM_Write@count 007A                 __end_of_DemoOutput_UnicastFail 419C  
                              ??_LCD_WriteData 0077                                      P2PTasks@i 01FA  
                                    P2PTasks@j 01F9                                      P2PTasks@p 01F6  
              MiMAC_ReceivedPacket@currentTick 0088                             ?_SYSTEM_Initialize 0001  
                          __size_of_MiMAC_Init 009A                                  ___rparam_used 000001  
                               _chk_sel_status 0047                           StartChannelHopping@i 00BA  
                             _LatestConnection 00DA  MiApp_BroadcastConnectionTable@broadcast_count 00B5  
                        __size_of_EEPROM_Write 0088                                IndirectPacket@i 0088  
                              IndirectPacket@j 0089                                   ??_LCDDisplay 00A9  
                              IndirectPacket@k 0087                     _myConnectionIndex_in_PanCo 00E6  
                            high_isr@fifo_stat 0062                                 __pcstackCOMRAM 0001  
        Forward_Packet_PANCr_to_EDy@fw_payload 00BF                                   __pidataBANK0 422A  
                          ??_SYSTEM_Initialize 0084                          i2RegisterRead@address 0002  
                     __size_of_Initialize_Demo 0094                      ??_DemoOutput_ChannelError 0076  
                                 ??_LCD_Update 0078                        run_star_demo@switch_val 00D6  
                 ?_Forward_Packet_PANCr_to_EDy 00BF                                      ?_NVMalloc 0076  
                              TxPacket@rssival 0096                                _ConnectionTable 021E  
                             ??i2_RegisterRead 0002                __end_of_MiApp_UnicastConnection 2FC2  
                         __end_of_LCD_WriteCmd 41D2                              __end_of_SetRFMode 37DA  
                                 ?i2_WriteFIFO 0001               IndirectPacket@DestinationAddress 0080  
                                   ??_DELAY_ms 0078                      _END_DEVICES_Short_Address 0137  
                               ??_RegisterRead 0077                                    ?_SendPacket 00A3  
                           __end_of_LCDDisplay 3D86                      __end_of_SYSTEM_Initialize 2E82  
                                 sprintf@width 00A0                          isSameAddress@Address1 0076  
                        isSameAddress@Address2 0078                                      ?_MacroNop 0001  
                                 _EEPROM_Write 346E                                     __pbssBANK0 00D9  
                                   __pbssBANK1 0100                                     __pbssBANK2 0200  
                                   __pbssBANK3 0300                          ?_MiApp_DiscardMessage 0001  
                     __end_of_send_link_status 3EAC                                     ??_P2PTasks 00C6  
                  __size_of_MiApp_ProtocolInit 01A2                            __size_of_Find_Index 0098  
                           RegisterSet@setting 0077                             __end_of_LCD_Update 35F6  
                    SendPacket@SecurityEnabled 00A6                                 isSameAddress@i 007C  
                   MiApp_BroadcastPacket@SecEn 00AD                            i2RegisterRead@value 0003  
                              P2PTasks@FW_Stat 01E7                               _MiMAC_SetChannel 33E2  
                    _MiApp_EstablishConnection 234E                               _Read_MAC_Address 34F6  
                              ??_ButtonPressed 0080                                      ?_TxPacket 0086  
                             _MiMAC_SendPacket 2816                                      ?_Run_Demo 0001  
                                      ?___wmul 0076                               ?_TMR1_StartTimer 0001  
                        __size_of_MiWi_TickGet 004E                                        ?_memset 0076  
                              ??_run_star_demo 02B6               run_star_demo@sw_layer_ack_status 00D3  
                                   ??_NVMalloc 007A                              __end_of_WriteFIFO 3E3C  
                      ??_DemoOutput_UpdateTxRx 00A8                                    _RegisterSet 3C8C  
                            ??_freezer_feature 00AA                                        i2l11320 37DE  
                                      i2l11332 3814                                        i2l11324 37F0  
                                      i2l11342 3836                                        i2l11336 3826  
                                      i2l11328 3802                                        i2l11600 27BA  
                ??_Forward_Packet_PANCr_to_EDy 00C4                                        i2l11370 3B06  
                                      i2l11602 27C0                                        i2l11700 1800  
                                      i2l11614 280A                                        i2l11800 1A70  
                                      i2l11712 18A6                         ??_MiMAC_ReceivedPacket 0080  
                                      i2l11554 270C                                        i2l11706 1858  
                                      i2l11714 18A8                                        i2l11642 1734  
                                      i2l11634 1716                                        i2l11564 272C  
                                      i2l11812 1A82                                        i2l11724 18D0  
                                      i2l11716 18B8                                        i2l11574 275C  
                                      i2l11654 1758                                        i2l11646 1744  
                                      i2l11760 19A0                                        i2l11744 191C  
                                      i2l11664 1784                                        i2l11586 2780  
                                      i2l11578 2770                                        i2l11770 19C4  
                                      i2l11754 1940                                        i2l11780 1A2C  
                                      i2l11598 27B6                                        i2l11766 19BC  
                                      i2l11782 1A42                                        i2l11790 1A52  
                                      i2l11696 17F8                                        i2l11784 1A4A  
                                      i2l11786 1A4E                             __CFG_OSC$INTOSCPLL 000000  
                                      _LCDText 01B8                           __end_ofi2_DELAY_10us 2D2E  
                        i2WriteFIFO@IRQ0select 0004                          i2WriteFIFO@IRQ1select 0003  
                          i1_SPI1_Exchange8bit 41D2                                __CFG_WDTPS$2048 000000  
                        __end_of_AddConnection 234E                                        _RPINR21 000EFB  
                                      _SSP1BUF 000FC9                                        _SSP2BUF 000F75  
                                      _SPIGet2 420E                                   ?_SW_Ack_SrED 00AD  
                                      _NVMInit 2E82                                        _RF_Mode 00DD  
                                      _AckInfo 0200                                        _SPIPut2 4172  
                                    ?_high_isr 0001                                        _RSSIVal 0042  
                                   ??_MacroNop 0076             __size_of_STAR_DEMO_OPTIONS_MESSAGE 0020  
                        _MiApp_StartConnection 3DC4                        i2SPI1_Exchange8bit@data 0001  
                             ??_LCD_Initialize 0084                     ?_STAR_DEMO_OPTIONS_MESSAGE 0001  
                  AddConnection@connectionSlot 0083                                _timerExtension1 004B  
                              _timerExtension2 00E3                                    TxPacket@CCA 0086  
                     MiApp_ConnectionMode@Mode 007F                               _AdditionalNodeID 00E8  
                  __end_of_MiMAC_DiscardPacket 40FE                                P2PTasks@tmpTick 01EC  
                                   DELAY_ms@ms 0076                                   _MiWi_TickGet 3A3A  
                                      __Hparam 0000                            _store_connection_tb 29E0  
                                      __Lparam 0000                           ?i1_SPI1_Exchange8bit 0001  
                 __end_of_MiApp_ConnectionMode 3F16                                   ??i2_TxPacket 0012  
                                   ??_TxPacket 0087                   __end_of_MiApp_UnicastAddress 3674  
                                   ??_Run_Demo 00D8                              LCD_WriteData@data 0077  
                      __size_ofi2_MiWi_TickGet 004E                                        ___awdiv 36EC  
                                      ___awmod 38BA                                        ___lbmod 4022  
                              __size_of___wmul 0026                               _MiApp_SetChannel 3FA4  
                          __size_of_SendPacket 009E                                        ___lwdiv 3B6E  
                                      ___lwmod 3D86                       ??_handle_lost_connection 0076  
                                      __pcinit 3922                                __size_of_memset 002A  
               DemoOutput_ChannelError@channel 0001                                        __ramtop 0F00  
                                      __ptext0 40FE                                        __ptext1 4072  
                                 ??_MiMAC_Init 0087                                        __ptext2 4158  
                                      __ptext3 421E                                        __ptext4 2DDA  
                                      __ptext5 28FE                                        __ptext6 4222  
                                      __ptext7 1236                                        __ptext8 4022  
                                      __ptext9 3C02                              __end_of_hexpowers FDA3  
                                    _T1CONbits 000FCD                               ??_IndirectPacket 0084  
                                      _dpowers FD91                  Initialize_Demo@freezer_enable 00D3  
                     ??_MiApp_MessageAvailable 00CE                                        _rec_ack 00E2  
                                      _isdigit 413A                              ??_Initialize_Demo 00D3  
                                _myLongAddress 01D9                               ___awmod@dividend 0076  
                         ?_store_connection_tb 007D                         DemoOutput_Channel@Step 00AA  
                                      _low_isr 0018                         RegisterRead@IRQ0select 007A  
                        MiApp_UnicastAddress@i 00B1                                        _nvmRole 01E3  
                       RegisterRead@IRQ1select 0079                                      _P2PStatus 00DC  
                                    _LCD_Erase 404A                                    _MyindexinPC 003F  
                 __size_of_StartChannelHopping 00AC                     __size_of_SYSTEM_Initialize 00A8  
                                      _sprintf 0B1C                         ??_MiApp_DiscardMessage 0076  
                                   ??_high_isr 0025                                 __pintcode_body 16E2  
                           __end_ofi2_TxPacket 2816                           end_of_initialization 3976  
                 MiApp_RemoveConnection@j_1610 00AF                              __end_of_octpowers FD91  
                                ??_EEPROM_Read 007B                                        memset@c 0078  
                                      memset@n 007A                                        memset@p 007C  
                MiMAC_SendPacket@MACPayloadLen 009F                                  __Lmediumconst FC86  
                                      int_func 16E2                           __size_ofi2_SetRFMode 0072  
                              LCDDisplay@delay 00A8              i2DELAY_10us@tenMicroSecondCounter 0001  
              DELAY_10us@tenMicroSecondCounter 0076                                     _nvmMyPANID 0052  
            __end_of_STAR_DEMO_OPTIONS_MESSAGE 40DE                                      i2u1140_45 3E72  
                                    i2u1140_46 3E74                                      i2u1139_45 3E68  
                                    i2u1139_46 3E6A                                      i2u1172_45 3C7C  
                                    i2u1172_46 3C7E                                      i2u1173_45 3C86  
                                    i2u1173_46 3C88                                      i2u1174_45 3ED4  
                                    i2u1174_46 3ED6                                      i2u1175_45 3EDE  
                                    i2u1175_46 3EE0                                      i2u1195_40 27FC  
                              LCDDisplay@value 00A7                             __end_of_MiMAC_Init 3196  
                        ??i1_SPI1_Exchange8bit 006D                   __size_ofi2_SPI1_Exchange8bit 0010  
                 MiApp_UnicastConnection@SecEn 00B2               __size_of_MiApp_UnicastConnection 009E  
                      MiMAC_SetChannel@channel 007E                                        postdec2 000FDD  
                         __end_of_RegisterRead 3B6E                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                        __end_of_isSameAddress 3FA4           DELAY_ms@cyclesRequiredForEntireDelay 0080  
                          RegisterRead@address 0077                 __size_of_MiApp_BroadcastPacket 005C  
                                WriteFIFO@Data 0077                                   ??_Find_Index 0078  
                   run_star_demo@PressedButton 00D5                  __end_of_MiApp_BroadcastPacket 39E0  
                        __size_of_LCD_WriteCmd 0012                        IndirectPacket@Broadcast 0086  
                 __size_of_DemoOutput_Greeting 001E                                      _PORTBbits 000F81  
                             NVMalloc@location 0078                          __end_ofi2_RegisterSet 3E76  
                 __end_of_UserInterruptHandler 4230                          ??_store_connection_tb 007F  
                                   _nvmmyIndex 01E5                        ?_Source_END_DEVICE_INFO 00A5  
                             ___lbmod@dividend 0077                                      _TRISAbits 000F92  
                                    _TRISBbits 000F93                              P2PTasks@isCommand 01F1  
                                    _TRISCbits 000F94                                      _TRISDbits 000F95  
                                    _TRISEbits 000F96                                     ?_LCD_Erase 0001  
                      MiMAC_SendPacket@TxIndex 00A1                           __size_ofi2_WriteFIFO 0036  
                       ?_MiApp_StartConnection 0080                              __size_of_DELAY_ms 00D0  
                                ??_LCDTRXCount 00A6                                    ___lbmod@rem 0079  
                        StartChannelHopping@t1 00B1                          StartChannelHopping@t2 00B5  
                   MiMAC_SendPacket@transParam 009A                      MiApp_UnicastAddress@SecEn 00B0  
                           __end_of_Find_Index 322E                                 __end_of_PVALUE FD65  
                            __size_of_P2PTasks 0AC4                               _indirectMessages 0372  
                               __end_of_SVALUE FD85                                   _LCD_WriteCmd 41C0  
                          __end_of_EEPROM_Read 3F48                  freezer_feature@PressedButton1 00AA  
                               __end_of___wmul 40BE                __size_of_handle_lost_connection 0078  
                        __size_ofi2_DELAY_10us 00D0                   __end_of_Find_InActiveDevices 3A3A  
           __size_of_MiApp_EstablishConnection 0156                                 __end_of_memset 4022  
                   __end_of_DemoOutput_Channel 3D48                 __end_of_Source_END_DEVICE_INFO 38BA  
                    Read_MAC_Address@myAddress 007B                __size_of_MiApp_MessageAvailable 000C  
             MiMAC_ReceivedPacket@PayloadIndex 008C                       __end_of_MiMAC_SetChannel 346E  
                            __size_of_NVMalloc 0030                            start_initialization 3922  
                     __end_of_Read_MAC_Address 3576                            WriteFIFO@IRQ0select 0079  
                                TxPacket@reTry 0094                            WriteFIFO@IRQ1select 0078  
                     __end_of_MiMAC_SendPacket 28FE                                   ??_SendPacket 00A7  
                         _MiApp_ConnectionMode 3EE2                             TxPacket@CCARetries 0093  
                   i2TxPacket@allowedTxFailure 0022                                high_isr@counter 0060  
                       MiApp_BroadcastPacket@i 00AE                           _MiApp_UnicastAddress 35F6  
                                    _SetRFMode 3764                           __size_of_SW_Ack_SrED 002A  
                      EEPROM_Write@PageCounter 007D                              ?_send_link_status 0001  
                      __size_ofi1_RegisterRead 004A              Forward_Packet_PANCr_to_EDy@status 00C4  
                            __size_of_MacroNop 0004                             ??_send_link_status 00AD  
                               _currentChannel 00E5                          __end_of_LCD_WriteData 41C0  
                                 i2_DELAY_10us 2C5E                                      TxPacket@i 0099  
                          __end_of_LCDTRXCount 3D0A    MiApp_EstablishConnection@connectionInterval 02B0  
                     __size_of_TMR1_Initialize 001A                                _freezer_feature 4072  
                               i2_MiWi_TickGet 3AD6                                       ??___wmul 007A  
            MiApp_UnicastAddress@PermanentAddr 00AF                                    __pdataBANK0 00E8  
                            __size_of_TxPacket 0126                             __end_of_SendPacket 3060  
                                     ??_memset 007C                              __size_of_Run_Demo 0004  
                      IndirectPacket@isCommand 0082                                   ?_RegisterSet 0077  
                            RegisterRead@value 0078                 __size_of_DemoOutput_UpdateTxRx 000E  
                      MiWi_TickGet@currentTime 007C                  __end_of_DemoOutput_UpdateTxRx 4202  
                                  __pbssCOMRAM 002F                       ??_MiApp_RemoveConnection 00AD  
                                    _WriteFIFO 3E00                                  __pcstackBANK0 0060  
                                __pcstackBANK1 01E7                                  __pcstackBANK2 02AA  
                        ?_MiApp_ConnectionMode 0001                            SendPacket@Broadcast 00A9  
                                  ??_LCD_Erase 0084         MiApp_UnicastAddress@DestinationAddress 00AD  
                        ?_MiApp_UnicastAddress 00AD                                   _isdigit$4096 0077  
                                     ?_SPIGet2 0001                                       ?_NVMInit 0001  
                   __end_of_MiApp_ProtocolInit 21F0                                       ?_SPIPut2 0001  
                   MiApp_EstablishConnection@i 02B5                       __end_of_MiApp_SetChannel 3FCE  
                                   ?_SetRFMode 0001                              Read_MAC_Address@i 007F  
                       _handle_lost_connection 3674                                    MiMAC_Init@i 0087  
                            __size_of_high_isr 1A9A                                    sprintf@flag 00A3  
                  ??_STAR_DEMO_OPTIONS_MESSAGE 00AA                                    _EEPROM_Read 3F16  
                                  sprintf@prec 009F                          __size_of_RegisterRead 004A  
                       _MiApp_MessageAvailable 4202                           _UserInterruptHandler 422E  
                       __end_ofi2_MiWi_TickGet 3B24                 MiApp_UnicastConnection@address 00B5  
                            MiMAC_SendPacket@i 00A2                               ___lwdiv@dividend 0076  
                      _MiApp_UnicastConnection 2F24                       ?_DemoOutput_ChannelError 0001  
                                    __pintcode 0008                                  __pmediumconst FC86  
                              _Initialize_Demo 322E                            _StartChannelHopping 2D2E  
                        __end_of_ButtonPressed 33E2                                       ?___awdiv 0076  
                                     ?___awmod 0076                                       ?___lbmod 0076  
                                     ?___lwdiv 0076                                       ?___lwmod 007D  
                                    _end_nodes 0049                                    __pintcodelo 0018  
                                    _conn_size 00E4                          __end_of_run_star_demo 16E2  
                 Forward_Packet_PANCr_to_EDy@i 00C5                       __size_of_TMR1_StartTimer 0004  
                                     ?_isdigit 0001                                       SPIPut2@v 0076  
                                   ?_WriteFIFO 0001                                       ?_low_isr 0001  
                __size_of_MiMAC_ReceivedPacket 01A6                            i2_SPI1_Exchange8bit 41E4  
                                     _DELAY_ms 2B8E                            AddConnection@status 0082  
                                    _hexpowers FD9B                           ?_StartChannelHopping 0001  
                     ??_DemoOutput_UnicastFail 00AA                               ___lwdiv@quotient 007B  
                                     ?_sprintf 0082                                   _RegisterRead 3B24  
                                    _link_stat 015F                                    _LCDTRXCount 3CCC  
                                     _P2PTasks 0058                            _DemoOutput_Greeting 411C  
                         _Find_InActiveDevices 39E0                        __end_of_freezer_feature 4098  
                               ___wmul@product 007A                        __size_ofi2_RegisterRead 0042  
                                     _LATAbits 000F89                           i2RegisterSet@setting 0002  
                                     _LATCbits 000F8B                                       _LATDbits 000F8C  
                                     _LATEbits 000F8D                          ?_UserInterruptHandler 0001  
                                    _octpowers FD85                                       _PIE1bits 000F9D  
                   DemoOutput_UpdateTxRx@RxNum 00A7                     DemoOutput_UpdateTxRx@TxNum 00A8  
                              ?i2_MiWi_TickGet 0001                                       _PIR1bits 000F9E  
                                     _PIR3bits 000FA4                                       i1u776_25 3BEE  
                                     i1u776_26 3BF0                                       i1u777_25 3BFA  
                                     i1u777_26 3BFC                           ?i2_SPI1_Exchange8bit 0001  
                                    _rxMessage 002F                             _nvmConnectionTable 004E  
                          high_isr@RxPacketPtr 0068                                       _SSP1CON1 000FC6  
                                     _SSP2CON1 000F72                         __size_of_AddConnection 015E  
          MiApp_BroadcastConnectionTable@count 00B4                                       _SSP1STAT 000FC7  
                                     _SSP2STAT 000F73                   __size_of_MiMAC_DiscardPacket 0020  
     MiApp_EstablishConnection@ActiveScanIndex 0001              MiApp_StartConnection@ScanDuration 0080  
          __end_of_Forward_Packet_PANCr_to_EDy 30FC                    _Forward_Packet_PANCr_to_EDy 3060  
                                  _MACRxPacket 0173                           ?_DemoOutput_Greeting 0001  
                                     _RSSILock 0041                      _STAR_DEMO_OPTIONS_MESSAGE 40BE  
                                  _MACTxBuffer 0100                              ??_TMR1_Initialize 0076  
                                SetRFMode@mode 007B                                       _NVMalloc 3F48  
                            ___wmul@multiplier 0076                                      high_isr@i 006C  
              ?_MiApp_BroadcastConnectionTable 0001               ??_MiApp_BroadcastConnectionTable 00AD  
                        i2TxPacket@TxPacketLen 0016                         ??_MiApp_ConnectionMode 007E  
                           main@freezer_enable 00D8                         ??_MiApp_UnicastAddress 00B1  
                      ??_MiApp_StartConnection 0085                __size_of_MiApp_RemoveConnection 012E  
                          SendPacket@isCommand 00A5                           high_isr@ackInfoIndex 0069  
                        ??_StartChannelHopping 00AD                                 _nextEEPosition 003C  
     i2DELAY_10us@cyclesRequiredForEntireDelay 000D         DELAY_10us@cyclesRequiredForEntireDelay 0082  
                                     _ConnMode 00E9                                    _INTCON2bits 000FF1  
                                  _INTCON3bits 000FF0                 MiApp_EstablishConnection@retry 02AB  
        Forward_Packet_PANCr_to_EDy@EDxAddress 00C2                                  ??i2_SetRFMode 0006  
                                  ??_SetRFMode 007B                                       _MacroNop 4226  
                             __size_of_SPIGet2 000A                               __size_of_NVMInit 00A2  
                             __size_of_SPIPut2 0018                                 i1_RegisterRead 3BB8  
                  __end_ofi1_SPI1_Exchange8bit 41E4                  __size_of_MiApp_DiscardMessage 0006  
                        ?_Find_InActiveDevices 0001          MiApp_RemoveConnection@ConnectionIndex 00B1  
                     MiApp_UnicastConnection@i 00BE                                       _TxMACSeq 0044  
              __end_of_DemoOutput_ChannelError 422E                      ??_MiApp_UnicastConnection 00B3  
                      __end_of_Initialize_Demo 32C2                            _display_connections 0048  
                                   _DELAY_10us 2ABC                                       __Hrparam 0000  
                        ??i2_SPI1_Exchange8bit 0001                                       _RxPacket 0300  
                                     _TxBuffer 0195                                   _nvmDelayTick 017F  
                                     __Lrparam 0000                                       _TxPacket 25D2  
                                     _Run_Demo 4222                             Total_Connections@i 0077  
                      __size_of_LCD_Initialize 00E2                MiApp_BroadcastConnectionTable@i 00B7  
              MiApp_BroadcastConnectionTable@j 00B8                MiApp_BroadcastConnectionTable@k 00B6  
                        MiMAC_ReceivedPacket@i 008D                               __size_of___awdiv 0078  
                             __size_of___awmod 0068                               __size_of___lbmod 0028  
                  __end_of_store_connection_tb 2ABC                          ??_DemoOutput_Greeting 00AA  
                             __size_of___lwdiv 004A                               __size_of___lwmod 003E  
                     i2RegisterRead@IRQ0select 0005                       i2RegisterRead@IRQ1select 0004  
                        _MiApp_BroadcastPacket 3984                                     sprintf@idx 0092  
                                   sprintf@len 009A                                     sprintf@val 009D  
                         __size_of_RegisterSet 0040                                _lost_connection 004A  
                                ??i2_WriteFIFO 0002                                    ??_WriteFIFO 0077  
                             __size_of_isdigit 001E                              ?_MiMAC_SetChannel 007C  
                              ___lwdiv@divisor 0078                              ?_Read_MAC_Address 007B  
                              ___lwdiv@counter 007A                               __size_of_low_isr 003C  
                                     __ptext10 384C                                       __ptext11 41F4  
                                     __ptext20 204E                                       __ptext12 3CCC  
                                     __ptext21 2E82                                       __ptext13 32C2  
                                     __ptext30 3E76                                       __ptext22 3F48  
                                     __ptext14 3984                                       __ptext31 2D2E  
                                     __ptext23 30FC                                       __ptext15 3352  
                                     __ptext40 2F24                                       __ptext32 3FA4  
                                     __ptext24 3F16                                       __ptext16 322E  
                                     __ptext41 35F6                                       __ptext33 33E2  
                                     __ptext25 234E                                       __ptext17 40BE  
                                     __ptext50 3E00                                       __ptext42 1CB6  
                                     __ptext34 3FCE                                       __ptext26 4202  
                                     __ptext18 34F6                                       __ptext51 3764  
                                     __ptext43 418A                                       __ptext35 1EA8  
                                     __ptext27 0058                                       __ptext19 3DC4  
                                     __ptext60 4218                                       __ptext52 3C8C  
                                     __ptext44 3196                                       __ptext36 1AA2  
                                     __ptext28 29E0                                       __ptext61 40DE  
                                     __ptext53 3B24                                       __ptext45 39E0  
                                     __ptext37 38BA                                       __ptext29 3674  
                                     __ptext70 0B1C                                       __ptext62 3EE2  
                                     __ptext54 419C                                       __ptext46 24A4  
                                     __ptext38 36EC                                       __ptext71 413A  
                                     __ptext63 346E                                       __ptext55 3A3A  
                                     __ptext47 2FC2                                       __ptext39 3060  
                                     __ptext80 4172                                       __ptext72 4098  
                                     __ptext64 420E                                       __ptext56 2ABC  
                                     __ptext48 2816                                       __ptext81 2B8E  
                                     __ptext73 3D86                                       __ptext65 4226  
                                     __ptext57 21F0                                       __ptext49 25D2  
                                     __ptext90 3C4A                                       __ptext74 3B6E  
                                     __ptext66 422C                                       __ptext58 3F78  
                                     __ptext91 41E4                                       __ptext83 3BB8  
                                     __ptext75 3576                                       __ptext67 3D0A  
                                     __ptext59 3A88                                       __ptext92 3AD6  
                                     __ptext84 41D2                                       __ptext76 41AE  
                                     __ptext68 411C                                       __ptext93 2C5E  
                                     __ptext77 404A                                       __ptext69 3D48  
                                     __ptext94 422E                                       __ptext86 26F8  
                                     __ptext78 3FF8                                       __ptext87 3EAC  
                                     __ptext79 41C0                                       __ptext88 37DA  
                                     __ptext89 3E3C                                   _SSP1CON1bits 000FC6  
                                _AddConnection 21F0                       TxPacket@allowedTxFailure 0095  
                           ??_MiMAC_SetChannel 007D                              ?_MiMAC_SendPacket 009A  
              __size_of_DemoOutput_UnicastFail 0012                         __end_ofi1_RegisterRead 3C02  
                                     _high_isr 0008                             ??_Read_MAC_Address 007D  
                                 _SSP2CON1bits 000F72                                  ?_EEPROM_Write 0077  
                 Source_END_DEVICE_INFO@SrAddr 00A5                              ??_TMR1_StartTimer 0076  
                             __size_of_sprintf 071A                         __size_of_isSameAddress 002C  
                           ??_MiMAC_SendPacket 00A0                             _DemoOutput_Channel 3D0A  
                      __size_of_IndirectPacket 01F2                         ??_UserInterruptHandler 0001  
                                __size_of_main 001E                               ?_freezer_feature 0001  
                       __size_ofi2_RegisterSet 003A                            __end_ofi2_SetRFMode 384C  
                       _MiApp_RemoveConnection 24A4                            ?_DemoOutput_Channel 00AA  
                                   _LCDDisplay 3D48                                       int$flags 0056  
                           LCDTRXCount@rxCount 00A5                    MiApp_EstablishConnection@t1 02AC  
                  MiApp_EstablishConnection@t2 02B1                   i2MiWi_TickGet@failureCounter 0006  
                           LCDTRXCount@txCount 00A6                                   _SSP1STATbits 000FC7  
                                   _LCD_Update 3576                      __size_of_send_link_status 0036  
                          MiApp_UnicastStar@t1 02AA                            MiApp_UnicastStar@t2 02AE  
                   MiMAC_SendPacket@MACPayload 009D                          __CFG_CPUDIV$OSC3_PLL3 000000  
                                  Find_Index@i 007A                          _permanent_connections 0169  
                                  _OSCTUNEbits 000F9B                                     _INTCONbits 000FF2  
                               AddConnection@i 0084                           ??_DemoOutput_Channel 00AB  
                   handle_lost_connection@stat 007B                                i2WriteFIFO@Data 0002  
                      ?_handle_lost_connection 0001                                 ?_AddConnection 0001  
                  ButtonPressed@tickDifference 0080                                       isdigit@c 0078  
                                     memset@p1 0076                                  ??_SW_Ack_SrED 00AF  
                               ??_EEPROM_Write 007B                                ?i1_RegisterRead 0001  
                                  _nvmConnMode 004C                           SW_Ack_SrED@Dest_Addr 00AD  
                       Total_Connections@count 0076                    MiApp_ProtocolInit@initValue 0089  
                       ??_Find_InActiveDevices 00B3                                       intlevel1 0000  
                                     intlevel2 0000                              ?_MiApp_SetChannel 0001  
                                    sprintf@ap 009C                                      sprintf@cp 0099  
                                    sprintf@sp 0082                        ?_MiApp_MessageAvailable 0001  
                          __end_ofi2_WriteFIFO 3EE2                                 i2_RegisterRead 3C4A  
                             ___lwmod@dividend 007D                                   ?_EEPROM_Read 0077  
                           ??_MiApp_SetChannel 007F                               ?_Initialize_Demo 0001  
                                ?_MiWi_TickGet 0076                                    ?_DELAY_10us 0076  
                           _MiApp_ProtocolInit 204E                   SendPacket@DestinationAddress 00A3  
                       _DemoOutput_UnicastFail 418A                                  _MACInitParams 0039  
                          MiMAC_Init@initValue 0084                          i1RegisterRead@address 006E  
                                _isSameAddress 3F78                            ?_MiApp_ProtocolInit 0001  
                   MiWi_TickGet@failureCounter 007B                              _MiApp_UnicastStar 32C2  
                       ?_MiApp_BroadcastPacket 0001                                       sprintf@c 00A2  
                                     sprintf@f 0084                             ?_MiApp_UnicastStar 0001  
                                i2_RegisterSet 3E3C                                     _PPSCONbits 000EFF  
             __size_of_DemoOutput_ChannelError 0002                 __end_of_handle_lost_connection 36EC  
                              ___lwmod@divisor 007F     MiApp_EstablishConnection@tmpConnectionMode 02AA  
                              ___lwmod@counter 0081                              i2TxPacket@rssival 0023  
                          TxPacket@TxPacketLen 0098                     ?_MiApp_EstablishConnection 00CE  
                       __size_of_LCD_WriteData 0012                          _DemoOutput_UpdateTxRx 41F4  
                         i2TxPacket@CCARetries 0020                                     _WDTCONbits 000FC0  
                          ??_MiApp_UnicastStar 00CE                 __end_of_MiApp_MessageAvailable 420E  
                       __end_ofi2_RegisterRead 3C8C                            _MiMAC_DiscardPacket 40DE  
                                  i2_SetRFMode 37DA                             _nvmOutFrameCounter 0054  
                            _nvmCurrentChannel 0050                           ??_MiApp_ProtocolInit 0088  
                             i2TxPacket@status 0017                                   ?_LCDTRXCount 00A5  
                             ??i2_MiWi_TickGet 0005                    send_link_status@send_status 00AD  
                             EEPROM_Read@count 007A                                i2TxPacket@reTry 0021  
                               ??_MiWi_TickGet 007A              Process_RxMessage@User_data_status 00CE  
                          __end_of_SW_Ack_SrED 3FF8                            i1RegisterRead@value 006F  
                              EEPROM_Read@addr 0079                                  i2TxPacket@CCA 0011  
                    i2MiWi_TickGet@currentTime 0007                                EEPROM_Read@dest 0077  
                IndirectPacket@SecurityEnabled 0083               Forward_Packet_PANCr_to_EDy@index 00C1  
                              _TMR1_Initialize 4158                          RegisterSet@IRQ0select 007A  
                        RegisterSet@IRQ1select 0079                   __end_of_MiMAC_ReceivedPacket 204E  
                           Find_Index@DestAddr 0076                                   i2TxPacket@t1 0018  
                                 i2TxPacket@t2 001C                                    ?_LCDDisplay 00A5  
                                  i2TxPacket@i 0024  
