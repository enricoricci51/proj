

Microchip Technology PIC18 PRO Macro Assembler V1.37 build -260352376 
                                                                                               Sun Jun 19 15:25:31 2016

Microchip Technology Omniscient Code Generator v1.37 (PRO mode) build 201603110536
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   106                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   107                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   108  0000                     
   109                           	psect	idataCOMRAM
   110  003C4E                     __pidataCOMRAM:
   111                           	opt stack 0
   112                           
   113                           ;initializer for _BankIndex
   114  003C4E  FF                 	db	255
   115                           
   116                           	psect	idataBANK0
   117  003C4A                     __pidataBANK0:
   118                           	opt stack 0
   119                           
   120                           ;initializer for _AdditionalNodeID
   121  003C4A  01                 	db	1
   122                           
   123                           ;initializer for _ConnMode
   124  003C4B  03                 	db	3
   125                           
   126                           	psect	mediumconst
   127  00FDA6                     __pmediumconst:
   128                           	opt stack 0
   129  00FDA6  00                 	db	0
   130  00FDA7                     _MiWi:
   131                           	opt stack 0
   132  00FDA7  20                 	db	32
   133  00FDA8  B2                 	db	178
   134  00FDA9  20                 	db	32
   135  00FDAA  20                 	db	32
   136  00FDAB  20                 	db	32
   137  00FDAC  B2                 	db	178
   138  00FDAD  20                 	db	32
   139  00FDAE  20                 	db	32
   140  00FDAF  B2                 	db	178
   141  00FDB0  20                 	db	32
   142  00FDB1  B2                 	db	178
   143  00FDB2  20                 	db	32
   144  00FDB3  20                 	db	32
   145  00FDB4  20                 	db	32
   146  00FDB5  20                 	db	32
   147  00FDB6  20                 	db	32
   148  00FDB7  B2                 	db	178
   149  00FDB8  20                 	db	32
   150  00FDB9  B2                 	db	178
   151  00FDBA  0D                 	db	13
   152  00FDBB  0A                 	db	10
   153  00FDBC  B2                 	db	178
   154  00FDBD  20                 	db	32
   155  00FDBE  B2                 	db	178
   156  00FDBF  20                 	db	32
   157  00FDC0  B2                 	db	178
   158  00FDC1  20                 	db	32
   159  00FDC2  B2                 	db	178
   160  00FDC3  20                 	db	32
   161  00FDC4  20                 	db	32
   162  00FDC5  20                 	db	32
   163  00FDC6  B2                 	db	178
   164  00FDC7  20                 	db	32
   165  00FDC8  20                 	db	32
   166  00FDC9  B2                 	db	178
   167  00FDCA  20                 	db	32
   168  00FDCB  20                 	db	32
   169  00FDCC  B2                 	db	178
   170  00FDCD  20                 	db	32
   171  00FDCE  20                 	db	32
   172  00FDCF  0D                 	db	13
   173  00FDD0  0A                 	db	10
   174  00FDD1  B2                 	db	178
   175  00FDD2  20                 	db	32
   176  00FDD3  20                 	db	32
   177  00FDD4  B2                 	db	178
   178  00FDD5  20                 	db	32
   179  00FDD6  20                 	db	32
   180  00FDD7  B2                 	db	178
   181  00FDD8  20                 	db	32
   182  00FDD9  B2                 	db	178
   183  00FDDA  20                 	db	32
   184  00FDDB  B2                 	db	178
   185  00FDDC  20                 	db	32
   186  00FDDD  20                 	db	32
   187  00FDDE  B2                 	db	178
   188  00FDDF  20                 	db	32
   189  00FDE0  20                 	db	32
   190  00FDE1  B2                 	db	178
   191  00FDE2  20                 	db	32
   192  00FDE3  B2                 	db	178
   193  00FDE4  0D                 	db	13
   194  00FDE5  0A                 	db	10
   195  00FDE6  B2                 	db	178
   196  00FDE7  20                 	db	32
   197  00FDE8  20                 	db	32
   198  00FDE9  B2                 	db	178
   199  00FDEA  20                 	db	32
   200  00FDEB  20                 	db	32
   201  00FDEC  B2                 	db	178
   202  00FDED  20                 	db	32
   203  00FDEE  B2                 	db	178
   204  00FDEF  20                 	db	32
   205  00FDF0  20                 	db	32
   206  00FDF1  B2                 	db	178
   207  00FDF2  20                 	db	32
   208  00FDF3  B2                 	db	178
   209  00FDF4  20                 	db	32
   210  00FDF5  B2                 	db	178
   211  00FDF6  20                 	db	32
   212  00FDF7  20                 	db	32
   213  00FDF8  B2                 	db	178
   214  00FDF9  0D                 	db	13
   215  00FDFA  0A                 	db	10
   216  00FDFB  B2                 	db	178
   217  00FDFC  20                 	db	32
   218  00FDFD  20                 	db	32
   219  00FDFE  B2                 	db	178
   220  00FDFF  20                 	db	32
   221  00FE00  20                 	db	32
   222  00FE01  B2                 	db	178
   223  00FE02  20                 	db	32
   224  00FE03  B2                 	db	178
   225  00FE04  20                 	db	32
   226  00FE05  20                 	db	32
   227  00FE06  20                 	db	32
   228  00FE07  B2                 	db	178
   229  00FE08  20                 	db	32
   230  00FE09  B2                 	db	178
   231  00FE0A  20                 	db	32
   232  00FE0B  20                 	db	32
   233  00FE0C  20                 	db	32
   234  00FE0D  B2                 	db	178
   235  00FE0E  0D                 	db	13
   236  00FE0F  0A                 	db	10
   237  00FE10  20                 	db	32
   238  00FE11  20                 	db	32
   239  00FE12  20                 	db	32
   240  00FE13  20                 	db	32
   241  00FE14  20                 	db	32
   242  00FE15  20                 	db	32
   243  00FE16  20                 	db	32
   244  00FE17  20                 	db	32
   245  00FE18  20                 	db	32
   246  00FE19  20                 	db	32
   247  00FE1A  20                 	db	32
   248  00FE1B  20                 	db	32
   249  00FE1C  20                 	db	32
   250  00FE1D  20                 	db	32
   251  00FE1E  20                 	db	32
   252  00FE1F  20                 	db	32
   253  00FE20  20                 	db	32
   254  00FE21  20                 	db	32
   255  00FE22  20                 	db	32
   256  00FE23  0D                 	db	13
   257  00FE24  0A                 	db	10
   258  00FE25                     __end_of_MiWi:
   259                           	opt stack 0
   260  00FE25                     _octpowers:
   261                           	opt stack 0
   262  00FE25  0001               	dw	1
   263  00FE27  0008               	dw	8
   264  00FE29  0040               	dw	64
   265  00FE2B  0200               	dw	512
   266  00FE2D  1000               	dw	4096
   267  00FE2F  8000               	dw	32768
   268  00FE31                     __end_of_octpowers:
   269                           	opt stack 0
   270  00FE31                     _dpowers:
   271                           	opt stack 0
   272  00FE31  0001               	dw	1
   273  00FE33  000A               	dw	10
   274  00FE35  0064               	dw	100
   275  00FE37  03E8               	dw	1000
   276  00FE39  2710               	dw	10000
   277  00FE3B                     __end_of_dpowers:
   278                           	opt stack 0
   279  00FE3B                     _hexpowers:
   280                           	opt stack 0
   281  00FE3B  0001               	dw	1
   282  00FE3D  0010               	dw	16
   283  00FE3F  0100               	dw	256
   284  00FE41  1000               	dw	4096
   285  00FE43                     __end_of_hexpowers:
   286                           	opt stack 0
   287  0000                     _PPSCONbits	set	3839
   288  0000                     _RPINR1	set	3815
   289  0000                     _RPINR16	set	3830
   290  0000                     _RPOR17	set	3799
   291  0000                     _ANCON0	set	3912
   292  0000                     _ANCON1	set	3913
   293  0000                     _TMR1	set	4046
   294  0000                     _EECON2	set	4007
   295  0000                     _INTCON	set	4082
   296  0000                     _INTCON2bits	set	4081
   297  0000                     _INTCON3bits	set	4080
   298  0000                     _INTCONbits	set	4082
   299  0000                     _LATA	set	3977
   300  0000                     _LATAbits	set	3977
   301  0000                     _LATB	set	3978
   302  0000                     _LATBbits	set	3978
   303  0000                     _LATCbits	set	3979
   304  0000                     _LATD	set	3980
   305  0000                     _LATDbits	set	3980
   306  0000                     _LATE	set	3981
   307  0000                     _OSCCON	set	4051
   308  0000                     _PIE1bits	set	3997
   309  0000                     _PIE3bits	set	4003
   310  0000                     _PIR1bits	set	3998
   311  0000                     _PIR3bits	set	4004
   312  0000                     _PORTBbits	set	3969
   313  0000                     _SSP1BUF	set	4041
   314  0000                     _SSP1CON1	set	4038
   315  0000                     _SSP1CON1bits	set	4038
   316  0000                     _SSP1STAT	set	4039
   317  0000                     _SSP1STATbits	set	4039
   318  0000                     _SSP2ADD	set	3956
   319  0000                     _SSP2BUF	set	3957
   320  0000                     _SSP2CON1	set	3954
   321  0000                     _SSP2CON2	set	3953
   322  0000                     _SSP2CON2bits	set	3953
   323  0000                     _SSP2STAT	set	3955
   324  0000                     _T1CON	set	4045
   325  0000                     _T1CONbits	set	4045
   326  0000                     _T1GCON	set	3994
   327  0000                     _TMR0L	set	4054
   328  0000                     _TMR1H	set	4047
   329  0000                     _TMR1L	set	4046
   330  0000                     _TRISA	set	3986
   331  0000                     _TRISAbits	set	3986
   332  0000                     _TRISB	set	3987
   333  0000                     _TRISBbits	set	3987
   334  0000                     _TRISC	set	3988
   335  0000                     _TRISCbits	set	3988
   336  0000                     _TRISD	set	3989
   337  0000                     _TRISDbits	set	3989
   338  0000                     _TRISE	set	3990
   339  0000                     _WDTCONbits	set	4032
   340  00FE43                     STR_4:
   341  00FE43  43                 	db	67	;'C'
   342  00FE44  6F                 	db	111	;'o'
   343  00FE45  6E                 	db	110	;'n'
   344  00FE46  6E                 	db	110	;'n'
   345  00FE47  65                 	db	101	;'e'
   346  00FE48  63                 	db	99	;'c'
   347  00FE49  74                 	db	116	;'t'
   348  00FE4A  69                 	db	105	;'i'
   349  00FE4B  6E                 	db	110	;'n'
   350  00FE4C  67                 	db	103	;'g'
   351  00FE4D  20                 	db	32
   352  00FE4E  50                 	db	80	;'P'
   353  00FE4F  65                 	db	101	;'e'
   354  00FE50  65                 	db	101	;'e'
   355  00FE51  72                 	db	114	;'r'
   356  00FE52  20                 	db	32
   357  00FE53  20                 	db	32
   358  00FE54  6F                 	db	111	;'o'
   359  00FE55  6E                 	db	110	;'n'
   360  00FE56  20                 	db	32
   361  00FE57  43                 	db	67	;'C'
   362  00FE58  68                 	db	104	;'h'
   363  00FE59  61                 	db	97	;'a'
   364  00FE5A  6E                 	db	110	;'n'
   365  00FE5B  6E                 	db	110	;'n'
   366  00FE5C  65                 	db	101	;'e'
   367  00FE5D  6C                 	db	108	;'l'
   368  00FE5E  20                 	db	32
   369  00FE5F  25                 	db	37
   370  00FE60  64                 	db	100	;'d'
   371  00FE61  20                 	db	32
   372  00FE62  00                 	db	0
   373  00FE63                     STR_9:
   374  00FE63  52                 	db	82	;'R'
   375  00FE64  42                 	db	66	;'B'
   376  00FE65  30                 	db	48	;'0'
   377  00FE66  20                 	db	32
   378  00FE67  3A                 	db	58	;':'
   379  00FE68  20                 	db	32
   380  00FE69  55                 	db	85	;'U'
   381  00FE6A  6E                 	db	110	;'n'
   382  00FE6B  69                 	db	105	;'i'
   383  00FE6C  63                 	db	99	;'c'
   384  00FE6D  61                 	db	97	;'a'
   385  00FE6E  73                 	db	115	;'s'
   386  00FE6F  74                 	db	116	;'t'
   387  00FE70  20                 	db	32
   388  00FE71  20                 	db	32
   389  00FE72  20                 	db	32
   390  00FE73  52                 	db	82	;'R'
   391  00FE74  42                 	db	66	;'B'
   392  00FE75  32                 	db	50	;'2'
   393  00FE76  20                 	db	32
   394  00FE77  3A                 	db	58	;':'
   395  00FE78  20                 	db	32
   396  00FE79  4E                 	db	78	;'N'
   397  00FE7A  65                 	db	101	;'e'
   398  00FE7B  78                 	db	120	;'x'
   399  00FE7C  74                 	db	116	;'t'
   400  00FE7D  20                 	db	32
   401  00FE7E  4E                 	db	78	;'N'
   402  00FE7F  6F                 	db	111	;'o'
   403  00FE80  64                 	db	100	;'d'
   404  00FE81  65                 	db	101	;'e'
   405  00FE82  00                 	db	0
   406  00FE83                     STR_5:
   407  00FE83  20                 	db	32
   408  00FE84  43                 	db	67	;'C'
   409  00FE85  6F                 	db	111	;'o'
   410  00FE86  6E                 	db	110	;'n'
   411  00FE87  6E                 	db	110	;'n'
   412  00FE88  65                 	db	101	;'e'
   413  00FE89  63                 	db	99	;'c'
   414  00FE8A  74                 	db	116	;'t'
   415  00FE8B  65                 	db	101	;'e'
   416  00FE8C  64                 	db	100	;'d'
   417  00FE8D  20                 	db	32
   418  00FE8E  50                 	db	80	;'P'
   419  00FE8F  65                 	db	101	;'e'
   420  00FE90  65                 	db	101	;'e'
   421  00FE91  72                 	db	114	;'r'
   422  00FE92  20                 	db	32
   423  00FE93  20                 	db	32
   424  00FE94  6F                 	db	111	;'o'
   425  00FE95  6E                 	db	110	;'n'
   426  00FE96  20                 	db	32
   427  00FE97  43                 	db	67	;'C'
   428  00FE98  68                 	db	104	;'h'
   429  00FE99  61                 	db	97	;'a'
   430  00FE9A  6E                 	db	110	;'n'
   431  00FE9B  6E                 	db	110	;'n'
   432  00FE9C  65                 	db	101	;'e'
   433  00FE9D  6C                 	db	108	;'l'
   434  00FE9E  20                 	db	32
   435  00FE9F  25                 	db	37
   436  00FEA0  64                 	db	100	;'d'
   437  00FEA1  00                 	db	0
   438  00FEA2                     STR_3:
   439  00FEA2  53                 	db	83	;'S'
   440  00FEA3  69                 	db	105	;'i'
   441  00FEA4  6D                 	db	109	;'m'
   442  00FEA5  70                 	db	112	;'p'
   443  00FEA6  6C                 	db	108	;'l'
   444  00FEA7  65                 	db	101	;'e'
   445  00FEA8  20                 	db	32
   446  00FEA9  53                 	db	83	;'S'
   447  00FEAA  54                 	db	84	;'T'
   448  00FEAB  41                 	db	65	;'A'
   449  00FEAC  52                 	db	82	;'R'
   450  00FEAD  20                 	db	32
   451  00FEAE  20                 	db	32
   452  00FEAF  20                 	db	32
   453  00FEB0  20                 	db	32
   454  00FEB1  20                 	db	32
   455  00FEB2  4D                 	db	77	;'M'
   456  00FEB3  52                 	db	82	;'R'
   457  00FEB4  46                 	db	70	;'F'
   458  00FEB5  32                 	db	50	;'2'
   459  00FEB6  34                 	db	52	;'4'
   460  00FEB7  4A                 	db	74	;'J'
   461  00FEB8  34                 	db	52	;'4'
   462  00FEB9  30                 	db	48	;'0'
   463  00FEBA  20                 	db	32
   464  00FEBB  4E                 	db	78	;'N'
   465  00FEBC  6F                 	db	111	;'o'
   466  00FEBD  64                 	db	100	;'d'
   467  00FEBE  65                 	db	101	;'e'
   468  00FEBF  00                 	db	0
   469  00FEC0                     STR_8:
   470  00FEC0  50                 	db	80	;'P'
   471  00FEC1  43                 	db	67	;'C'
   472  00FEC2  20                 	db	32
   473  00FEC3  3A                 	db	58	;':'
   474  00FEC4  52                 	db	82	;'R'
   475  00FEC5  42                 	db	66	;'B'
   476  00FEC6  30                 	db	48	;'0'
   477  00FEC7  20                 	db	32
   478  00FEC8  6F                 	db	111	;'o'
   479  00FEC9  72                 	db	114	;'r'
   480  00FECA  20                 	db	32
   481  00FECB  52                 	db	82	;'R'
   482  00FECC  42                 	db	66	;'B'
   483  00FECD  32                 	db	50	;'2'
   484  00FECE  20                 	db	32
   485  00FECF  20                 	db	32
   486  00FED0  74                 	db	116	;'t'
   487  00FED1  6F                 	db	111	;'o'
   488  00FED2  20                 	db	32
   489  00FED3  42                 	db	66	;'B'
   490  00FED4  72                 	db	114	;'r'
   491  00FED5  6F                 	db	111	;'o'
   492  00FED6  61                 	db	97	;'a'
   493  00FED7  64                 	db	100	;'d'
   494  00FED8  63                 	db	99	;'c'
   495  00FED9  61                 	db	97	;'a'
   496  00FEDA  73                 	db	115	;'s'
   497  00FEDB  74                 	db	116	;'t'
   498  00FEDC  00                 	db	0
   499  00FEDD  52                 	db	82	;'R'
   500  00FEDE  42                 	db	66	;'B'
   501  00FEDF  30                 	db	48	;'0'
   502  00FEE0  3A                 	db	58	;':'
   503  00FEE1  20                 	db	32
   504  00FEE2  42                 	db	66	;'B'
   505  00FEE3  72                 	db	114	;'r'
   506  00FEE4  6F                 	db	111	;'o'
   507  00FEE5  61                 	db	97	;'a'
   508  00FEE6  64                 	db	100	;'d'
   509  00FEE7  63                 	db	99	;'c'
   510  00FEE8  61                 	db	97	;'a'
   511  00FEE9  73                 	db	115	;'s'
   512  00FEEA  74                 	db	116	;'t'
   513  00FEEB  20                 	db	32
   514  00FEEC  20                 	db	32
   515  00FEED  52                 	db	82	;'R'
   516  00FEEE  42                 	db	66	;'B'
   517  00FEEF  32                 	db	50	;'2'
   518  00FEF0  3A                 	db	58	;':'
   519  00FEF1  20                 	db	32
   520  00FEF2  55                 	db	85	;'U'
   521  00FEF3  6E                 	db	110	;'n'
   522  00FEF4  69                 	db	105	;'i'
   523  00FEF5  63                 	db	99	;'c'
   524  00FEF6  61                 	db	97	;'a'
   525  00FEF7  73                 	db	115	;'s'
   526  00FEF8  74                 	db	116	;'t'
   527  00FEF9  00                 	db	0
   528  00FEFA                     STR_12:
   529  00FEFA  52                 	db	82	;'R'
   530  00FEFB  42                 	db	66	;'B'
   531  00FEFC  30                 	db	48	;'0'
   532  00FEFD  3A                 	db	58	;':'
   533  00FEFE  4E                 	db	78	;'N'
   534  00FEFF  65                 	db	101	;'e'
   535  00FF00  77                 	db	119	;'w'
   536  00FF01  20                 	db	32
   537  00FF02  4E                 	db	78	;'N'
   538  00FF03  65                 	db	101	;'e'
   539  00FF04  74                 	db	116	;'t'
   540  00FF05  77                 	db	119	;'w'
   541  00FF06  6F                 	db	111	;'o'
   542  00FF07  72                 	db	114	;'r'
   543  00FF08  6B                 	db	107	;'k'
   544  00FF09  20                 	db	32
   545  00FF0A  52                 	db	82	;'R'
   546  00FF0B  42                 	db	66	;'B'
   547  00FF0C  32                 	db	50	;'2'
   548  00FF0D  3A                 	db	58	;':'
   549  00FF0E  46                 	db	70	;'F'
   550  00FF0F  72                 	db	114	;'r'
   551  00FF10  65                 	db	101	;'e'
   552  00FF11  65                 	db	101	;'e'
   553  00FF12  7A                 	db	122	;'z'
   554  00FF13  65                 	db	101	;'e'
   555  00FF14  72                 	db	114	;'r'
   556  00FF15  00                 	db	0
   557  00FF16                     STR_13:
   558  00FF16  52                 	db	82	;'R'
   559  00FF17  42                 	db	66	;'B'
   560  00FF18  30                 	db	48	;'0'
   561  00FF19  3A                 	db	58	;':'
   562  00FF1A  25                 	db	37
   563  00FF1B  30                 	db	48	;'0'
   564  00FF1C  32                 	db	50	;'2'
   565  00FF1D  64                 	db	100	;'d'
   566  00FF1E  2D                 	db	45
   567  00FF1F  25                 	db	37
   568  00FF20  30                 	db	48	;'0'
   569  00FF21  32                 	db	50	;'2'
   570  00FF22  78                 	db	120	;'x'
   571  00FF23  25                 	db	37
   572  00FF24  30                 	db	48	;'0'
   573  00FF25  32                 	db	50	;'2'
   574  00FF26  78                 	db	120	;'x'
   575  00FF27  25                 	db	37
   576  00FF28  30                 	db	48	;'0'
   577  00FF29  32                 	db	50	;'2'
   578  00FF2A  78                 	db	120	;'x'
   579  00FF2B  2D                 	db	45
   580  00FF2C  6D                 	db	109	;'m'
   581  00FF2D  65                 	db	101	;'e'
   582  00FF2E  00                 	db	0
   583  00FF2F                     STR_14:
   584  00FF2F  52                 	db	82	;'R'
   585  00FF30  42                 	db	66	;'B'
   586  00FF31  30                 	db	48	;'0'
   587  00FF32  3A                 	db	58	;':'
   588  00FF33  25                 	db	37
   589  00FF34  30                 	db	48	;'0'
   590  00FF35  32                 	db	50	;'2'
   591  00FF36  64                 	db	100	;'d'
   592  00FF37  2D                 	db	45
   593  00FF38  25                 	db	37
   594  00FF39  30                 	db	48	;'0'
   595  00FF3A  32                 	db	50	;'2'
   596  00FF3B  78                 	db	120	;'x'
   597  00FF3C  25                 	db	37
   598  00FF3D  30                 	db	48	;'0'
   599  00FF3E  32                 	db	50	;'2'
   600  00FF3F  78                 	db	120	;'x'
   601  00FF40  25                 	db	37
   602  00FF41  30                 	db	48	;'0'
   603  00FF42  32                 	db	50	;'2'
   604  00FF43  78                 	db	120	;'x'
   605  00FF44  00                 	db	0
   606  00FF45                     STR_11:
   607  00FF45  20                 	db	32
   608  00FF46  41                 	db	65	;'A'
   609  00FF47  64                 	db	100	;'d'
   610  00FF48  64                 	db	100	;'d'
   611  00FF49  72                 	db	114	;'r'
   612  00FF4A  65                 	db	101	;'e'
   613  00FF4B  73                 	db	115	;'s'
   614  00FF4C  73                 	db	115	;'s'
   615  00FF4D  3A                 	db	58	;':'
   616  00FF4E  25                 	db	37
   617  00FF4F  30                 	db	48	;'0'
   618  00FF50  32                 	db	50	;'2'
   619  00FF51  78                 	db	120	;'x'
   620  00FF52  25                 	db	37
   621  00FF53  30                 	db	48	;'0'
   622  00FF54  32                 	db	50	;'2'
   623  00FF55  78                 	db	120	;'x'
   624  00FF56  25                 	db	37
   625  00FF57  30                 	db	48	;'0'
   626  00FF58  32                 	db	50	;'2'
   627  00FF59  78                 	db	120	;'x'
   628  00FF5A  00                 	db	0
   629  00FF5B                     STR_17:
   630  00FF5B  44                 	db	68	;'D'
   631  00FF5C  61                 	db	97	;'a'
   632  00FF5D  74                 	db	116	;'t'
   633  00FF5E  61                 	db	97	;'a'
   634  00FF5F  5F                 	db	95	;'_'
   635  00FF60  53                 	db	83	;'S'
   636  00FF61  65                 	db	101	;'e'
   637  00FF62  6E                 	db	110	;'n'
   638  00FF63  64                 	db	100	;'d'
   639  00FF64  69                 	db	105	;'i'
   640  00FF65  6E                 	db	110	;'n'
   641  00FF66  67                 	db	103	;'g'
   642  00FF67  5F                 	db	95	;'_'
   643  00FF68  46                 	db	70	;'F'
   644  00FF69  61                 	db	97	;'a'
   645  00FF6A  69                 	db	105	;'i'
   646  00FF6B  6C                 	db	108	;'l'
   647  00FF6C  21                 	db	33
   648  00FF6D  21                 	db	33
   649  00FF6E  00                 	db	0
   650  00FF6F                     STR_18:
   651  00FF6F  45                 	db	69	;'E'
   652  00FF70  4E                 	db	78	;'N'
   653  00FF71  44                 	db	68	;'D'
   654  00FF72  5F                 	db	95	;'_'
   655  00FF73  44                 	db	68	;'D'
   656  00FF74  45                 	db	69	;'E'
   657  00FF75  56                 	db	86	;'V'
   658  00FF76  49                 	db	73	;'I'
   659  00FF77  43                 	db	67	;'C'
   660  00FF78  45                 	db	69	;'E'
   661  00FF79  53                 	db	83	;'S'
   662  00FF7A  20                 	db	32
   663  00FF7B  3A                 	db	58	;':'
   664  00FF7C  25                 	db	37
   665  00FF7D  30                 	db	48	;'0'
   666  00FF7E  32                 	db	50	;'2'
   667  00FF7F  64                 	db	100	;'d'
   668  00FF80  00                 	db	0
   669  00FF81                     STR_19:
   670  00FF81  30                 	db	48	;'0'
   671  00FF82  31                 	db	49	;'1'
   672  00FF83  32                 	db	50	;'2'
   673  00FF84  33                 	db	51	;'3'
   674  00FF85  34                 	db	52	;'4'
   675  00FF86  35                 	db	53	;'5'
   676  00FF87  36                 	db	54	;'6'
   677  00FF88  37                 	db	55	;'7'
   678  00FF89  38                 	db	56	;'8'
   679  00FF8A  39                 	db	57	;'9'
   680  00FF8B  41                 	db	65	;'A'
   681  00FF8C  42                 	db	66	;'B'
   682  00FF8D  43                 	db	67	;'C'
   683  00FF8E  44                 	db	68	;'D'
   684  00FF8F  45                 	db	69	;'E'
   685  00FF90  46                 	db	70	;'F'
   686  00FF91  00                 	db	0
   687  00FF92                     STR_20:
   688  00FF92  30                 	db	48	;'0'
   689  00FF93  31                 	db	49	;'1'
   690  00FF94  32                 	db	50	;'2'
   691  00FF95  33                 	db	51	;'3'
   692  00FF96  34                 	db	52	;'4'
   693  00FF97  35                 	db	53	;'5'
   694  00FF98  36                 	db	54	;'6'
   695  00FF99  37                 	db	55	;'7'
   696  00FF9A  38                 	db	56	;'8'
   697  00FF9B  39                 	db	57	;'9'
   698  00FF9C  61                 	db	97	;'a'
   699  00FF9D  62                 	db	98	;'b'
   700  00FF9E  63                 	db	99	;'c'
   701  00FF9F  64                 	db	100	;'d'
   702  00FFA0  65                 	db	101	;'e'
   703  00FFA1  66                 	db	102	;'f'
   704  00FFA2  00                 	db	0
   705  00FFA3                     STR_16:
   706  00FFA3  52                 	db	82	;'R'
   707  00FFA4  42                 	db	66	;'B'
   708  00FFA5  32                 	db	50	;'2'
   709  00FFA6  3A                 	db	58	;':'
   710  00FFA7  20                 	db	32
   711  00FFA8  43                 	db	67	;'C'
   712  00FFA9  68                 	db	104	;'h'
   713  00FFAA  61                 	db	97	;'a'
   714  00FFAB  6E                 	db	110	;'n'
   715  00FFAC  67                 	db	103	;'g'
   716  00FFAD  65                 	db	101	;'e'
   717  00FFAE  20                 	db	32
   718  00FFAF  6E                 	db	110	;'n'
   719  00FFB0  6F                 	db	111	;'o'
   720  00FFB1  64                 	db	100	;'d'
   721  00FFB2  65                 	db	101	;'e'
   722  00FFB3  00                 	db	0
   723  00FFB4                     STR_10:
   724  00FFB4  44                 	db	68	;'D'
   725  00FFB5  61                 	db	97	;'a'
   726  00FFB6  74                 	db	116	;'t'
   727  00FFB7  61                 	db	97	;'a'
   728  00FFB8  20                 	db	32
   729  00FFB9  50                 	db	80	;'P'
   730  00FFBA  61                 	db	97	;'a'
   731  00FFBB  63                 	db	99	;'c'
   732  00FFBC  6B                 	db	107	;'k'
   733  00FFBD  65                 	db	101	;'e'
   734  00FFBE  74                 	db	116	;'t'
   735  00FFBF  20                 	db	32
   736  00FFC0  66                 	db	102	;'f'
   737  00FFC1  72                 	db	114	;'r'
   738  00FFC2  6F                 	db	111	;'o'
   739  00FFC3  6D                 	db	109	;'m'
   740  00FFC4  00                 	db	0
   741  00FFC5                     STR_2:
   742  00FFC5  52                 	db	82	;'R'
   743  00FFC6  58                 	db	88	;'X'
   744  00FFC7  20                 	db	32
   745  00FFC8  4D                 	db	77	;'M'
   746  00FFC9  65                 	db	101	;'e'
   747  00FFCA  73                 	db	115	;'s'
   748  00FFCB  73                 	db	115	;'s'
   749  00FFCC  61                 	db	97	;'a'
   750  00FFCD  67                 	db	103	;'g'
   751  00FFCE  65                 	db	101	;'e'
   752  00FFCF  73                 	db	115	;'s'
   753  00FFD0  3A                 	db	58	;':'
   754  00FFD1  20                 	db	32
   755  00FFD2  25                 	db	37
   756  00FFD3  33                 	db	51	;'3'
   757  00FFD4  64                 	db	100	;'d'
   758  00FFD5  00                 	db	0
   759  00FFD6                     STR_1:
   760  00FFD6  54                 	db	84	;'T'
   761  00FFD7  58                 	db	88	;'X'
   762  00FFD8  20                 	db	32
   763  00FFD9  4D                 	db	77	;'M'
   764  00FFDA  65                 	db	101	;'e'
   765  00FFDB  73                 	db	115	;'s'
   766  00FFDC  73                 	db	115	;'s'
   767  00FFDD  61                 	db	97	;'a'
   768  00FFDE  67                 	db	103	;'g'
   769  00FFDF  65                 	db	101	;'e'
   770  00FFE0  73                 	db	115	;'s'
   771  00FFE1  3A                 	db	58	;':'
   772  00FFE2  20                 	db	32
   773  00FFE3  25                 	db	37
   774  00FFE4  33                 	db	51	;'3'
   775  00FFE5  64                 	db	100	;'d'
   776  00FFE6  00                 	db	0
   777  00FFE7                     STR_7:
   778  00FFE7  20                 	db	32
   779  00FFE8  55                 	db	85	;'U'
   780  00FFE9  6E                 	db	110	;'n'
   781  00FFEA  69                 	db	105	;'i'
   782  00FFEB  63                 	db	99	;'c'
   783  00FFEC  61                 	db	97	;'a'
   784  00FFED  73                 	db	115	;'s'
   785  00FFEE  74                 	db	116	;'t'
   786  00FFEF  20                 	db	32
   787  00FFF0  46                 	db	70	;'F'
   788  00FFF1  61                 	db	97	;'a'
   789  00FFF2  69                 	db	105	;'i'
   790  00FFF3  6C                 	db	108	;'l'
   791  00FFF4  65                 	db	101	;'e'
   792  00FFF5  64                 	db	100	;'d'
   793  00FFF6  00                 	db	0
   794  0000                     
   795                           ; #config settings
   796  00FFF7  00                 	db	0	; dummy byte at the end
   797  0000                     
   798                           	psect	cinit
   799  002EDC                     __pcinit:
   800                           	opt stack 0
   801  002EDC                     start_initialization:
   802                           	opt stack 0
   803  002EDC                     __initialization:
   804                           	opt stack 0
   805                           
   806                           ; Clear objects allocated to BIGRAM (280 bytes)
   807  002EDC  EE03  F050         	lfsr	0,__pbssBIGRAM
   808  002EE0  EE11 F018          	lfsr	1,280
   809  002EE4                     clear_0:
   810  002EE4  6AEE               	clrf	postinc0,c
   811  002EE6  50E5               	movf	postdec1,w,c
   812  002EE8  50E1               	movf	fsr1l,w,c
   813  002EEA  E1FC               	bnz	clear_0
   814  002EEC  50E2               	movf	fsr1h,w,c
   815  002EEE  E1FA               	bnz	clear_0
   816                           
   817                           ; Clear objects allocated to BANK3 (80 bytes)
   818  002EF0  EE03  F000         	lfsr	0,__pbssBANK3
   819  002EF4  0E50               	movlw	80
   820  002EF6                     clear_1:
   821  002EF6  6AEE               	clrf	postinc0,c
   822  002EF8  06E8               	decf	wreg,f,c
   823  002EFA  E1FD               	bnz	clear_1
   824                           
   825                           ; Clear objects allocated to BANK2 (178 bytes)
   826  002EFC  EE02  F000         	lfsr	0,__pbssBANK2
   827  002F00  0EB2               	movlw	178
   828  002F02                     clear_2:
   829  002F02  6AEE               	clrf	postinc0,c
   830  002F04  06E8               	decf	wreg,f,c
   831  002F06  E1FD               	bnz	clear_2
   832                           
   833                           ; Clear objects allocated to BANK1 (105 bytes)
   834  002F08  EE01  F000         	lfsr	0,__pbssBANK1
   835  002F0C  0E69               	movlw	105
   836  002F0E                     clear_3:
   837  002F0E  6AEE               	clrf	postinc0,c
   838  002F10  06E8               	decf	wreg,f,c
   839  002F12  E1FD               	bnz	clear_3
   840                           
   841                           ; Clear objects allocated to BANK0 (55 bytes)
   842  002F14  EE00  F0C7         	lfsr	0,__pbssBANK0
   843  002F18  0E37               	movlw	55
   844  002F1A                     clear_4:
   845  002F1A  6AEE               	clrf	postinc0,c
   846  002F1C  06E8               	decf	wreg,f,c
   847  002F1E  E1FD               	bnz	clear_4
   848                           
   849                           ; Clear objects allocated to COMRAM (29 bytes)
   850  002F20  EE00  F025         	lfsr	0,__pbssCOMRAM
   851  002F24  0E1D               	movlw	29
   852  002F26                     clear_5:
   853  002F26  6AEE               	clrf	postinc0,c
   854  002F28  06E8               	decf	wreg,f,c
   855  002F2A  E1FD               	bnz	clear_5
   856                           
   857                           ; Initialize objects allocated to BANK0 (2 bytes)
   858                           ; load TBLPTR registers with __pidataBANK0
   859  002F2C  0E4A               	movlw	low __pidataBANK0
   860  002F2E  6EF6               	movwf	tblptrl,c
   861  002F30  0E3C               	movlw	high __pidataBANK0
   862  002F32  6EF7               	movwf	tblptrh,c
   863  002F34  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   864  002F36  6EF8               	movwf	tblptru,c
   865  002F38  0009               	tblrd		*+	;fetch initializer
   866  002F3A  CFF5 F0FE          	movff	tablat,__pdataBANK0
   867  002F3E  0009               	tblrd		*+	;fetch initializer
   868  002F40  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   869                           
   870                           ; Initialize objects allocated to COMRAM (1 bytes)
   871                           ; load TBLPTR registers with __pidataCOMRAM
   872  002F44  0E4E               	movlw	low __pidataCOMRAM
   873  002F46  6EF6               	movwf	tblptrl,c
   874  002F48  0E3C               	movlw	high __pidataCOMRAM
   875  002F4A  6EF7               	movwf	tblptrh,c
   876  002F4C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   877  002F4E  6EF8               	movwf	tblptru,c
   878  002F50  0009               	tblrd		*+	;fetch initializer
   879  002F52  CFF5 F042          	movff	tablat,__pdataCOMRAM
   880  002F56                     end_of_initialization:
   881                           	opt stack 0
   882  002F56                     __end_of__initialization:
   883                           	opt stack 0
   884  002F56  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   885  002F58  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   886  002F5A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   887  002F5C  6EF8               	movwf	tblptru,c
   888  002F5E  0100               	movlb	0
   889  002F60  EF53  F01D         	goto	_main	;jump to C main() function
   890                           tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           tblptrl	equ	0xFF6
   893                           tablat	equ	0xFF5
   894                           postinc0	equ	0xFEE
   895                           wreg	equ	0xFE8
   896                           postdec1	equ	0xFE5
   897                           fsr1h	equ	0xFE2
   898                           fsr1l	equ	0xFE1
   899                           
   900                           	psect	bssCOMRAM
   901  000025                     __pbssCOMRAM:
   902                           	opt stack 0
   903  000025                     _MACRxPacket:
   904                           	opt stack 0
   905  000025                     	ds	11
   906  000030                     _CommandLen:
   907                           	opt stack 0
   908  000030                     	ds	1
   909  000031                     _CommandPtr:
   910                           	opt stack 0
   911  000031                     	ds	1
   912  000032                     _IEEESeqNum:
   913                           	opt stack 0
   914  000032                     	ds	1
   915  000033                     _MRF24J40Status:
   916                           	opt stack 0
   917  000033                     	ds	1
   918  000034                     _TextLen:
   919                           	opt stack 0
   920  000034                     	ds	1
   921  000035                     _TextPtr:
   922                           	opt stack 0
   923  000035                     	ds	1
   924  000036                     _end_nodes:
   925                           	opt stack 0
   926  000036                     	ds	1
   927  000037                     _i:
   928                           	opt stack 0
   929  000037                     	ds	1
   930  000038                     _timerExtension1:
   931                           	opt stack 0
   932  000038                     	ds	1
   933  000039                     _timerExtension2:
   934                           	opt stack 0
   935  000039                     	ds	1
   936  00003A                     _MAC_PANID:
   937                           	opt stack 0
   938  00003A                     	ds	2
   939  00003C                     _myNetworkAddress:
   940                           	opt stack 0
   941  00003C                     	ds	2
   942  00003E                     _nvmConnectionTable:
   943                           	opt stack 0
   944  00003E                     	ds	2
   945  000040                     _conn_size:
   946                           	opt stack 0
   947  000040                     	ds	1
   948  000041                     _role:
   949                           	opt stack 0
   950  000041                     	ds	1
   951                           tblptru	equ	0xFF8
   952                           tblptrh	equ	0xFF7
   953                           tblptrl	equ	0xFF6
   954                           tablat	equ	0xFF5
   955                           postinc0	equ	0xFEE
   956                           wreg	equ	0xFE8
   957                           postdec1	equ	0xFE5
   958                           fsr1h	equ	0xFE2
   959                           fsr1l	equ	0xFE1
   960                           
   961                           	psect	dataCOMRAM
   962  000042                     __pdataCOMRAM:
   963                           	opt stack 0
   964  000042                     _BankIndex:
   965                           	opt stack 0
   966  000042                     	ds	1
   967                           tblptru	equ	0xFF8
   968                           tblptrh	equ	0xFF7
   969                           tblptrl	equ	0xFF6
   970                           tablat	equ	0xFF5
   971                           postinc0	equ	0xFEE
   972                           wreg	equ	0xFE8
   973                           postdec1	equ	0xFE5
   974                           fsr1h	equ	0xFE2
   975                           fsr1l	equ	0xFE1
   976                           
   977                           	psect	bssBANK0
   978  0000C7                     __pbssBANK0:
   979                           	opt stack 0
   980  0000C7                     _rxMessage:
   981                           	opt stack 0
   982  0000C7                     	ds	10
   983  0000D1                     _LCDCommand:
   984                           	opt stack 0
   985  0000D1                     	ds	4
   986  0000D5                     _MACInitParams:
   987                           	opt stack 0
   988  0000D5                     	ds	3
   989  0000D8                     _failureCounter:
   990                           	opt stack 0
   991  0000D8                     	ds	2
   992  0000DA                     _nextEEPosition:
   993                           	opt stack 0
   994  0000DA                     	ds	2
   995  0000DC                     _timer1ReloadVal:
   996                           	opt stack 0
   997  0000DC                     	ds	2
   998  0000DE                     _LatestConnection:
   999                           	opt stack 0
  1000  0000DE                     	ds	1
  1001  0000DF                     _MACCurrentChannel:
  1002                           	opt stack 0
  1003  0000DF                     	ds	1
  1004  0000E0                     _MyindexinPC:
  1005                           	opt stack 0
  1006  0000E0                     	ds	1
  1007  0000E1                     _P2PCapacityInfo:
  1008                           	opt stack 0
  1009  0000E1                     	ds	1
  1010  0000E2                     _P2PStatus:
  1011                           	opt stack 0
  1012  0000E2                     	ds	1
  1013  0000E3                     _PUSH_BUTTON_pressed:
  1014                           	opt stack 0
  1015  0000E3                     	ds	1
  1016  0000E4                     _RxNum:
  1017                           	opt stack 0
  1018  0000E4                     	ds	1
  1019  0000E5                     _TxData:
  1020                           	opt stack 0
  1021  0000E5                     	ds	1
  1022  0000E6                     _TxNum:
  1023                           	opt stack 0
  1024  0000E6                     	ds	1
  1025  0000E7                     _TxSynCount:
  1026                           	opt stack 0
  1027  0000E7                     	ds	1
  1028  0000E8                     _chk_sel_status:
  1029                           	opt stack 0
  1030  0000E8                     	ds	1
  1031  0000E9                     _display_connections:
  1032                           	opt stack 0
  1033  0000E9                     	ds	1
  1034  0000EA                     _lost_connection:
  1035                           	opt stack 0
  1036  0000EA                     	ds	1
  1037  0000EB                     _rec_ack:
  1038                           	opt stack 0
  1039  0000EB                     	ds	1
  1040  0000EC                     _myPANID:
  1041                           	opt stack 0
  1042  0000EC                     	ds	2
  1043  0000EE                     _nvmConnMode:
  1044                           	opt stack 0
  1045  0000EE                     	ds	2
  1046  0000F0                     _nvmCurrentChannel:
  1047                           	opt stack 0
  1048  0000F0                     	ds	2
  1049  0000F2                     _nvmEdc:
  1050                           	opt stack 0
  1051  0000F2                     	ds	2
  1052  0000F4                     _nvmMyPANID:
  1053                           	opt stack 0
  1054  0000F4                     	ds	2
  1055  0000F6                     _nvmOutFrameCounter:
  1056                           	opt stack 0
  1057  0000F6                     	ds	2
  1058  0000F8                     _nvmRole:
  1059                           	opt stack 0
  1060  0000F8                     	ds	2
  1061  0000FA                     _nvmmyIndex:
  1062                           	opt stack 0
  1063  0000FA                     	ds	2
  1064  0000FC                     _currentChannel:
  1065                           	opt stack 0
  1066  0000FC                     	ds	1
  1067  0000FD                     _myConnectionIndex_in_PanCo:
  1068                           	opt stack 0
  1069  0000FD                     	ds	1
  1070                           tblptru	equ	0xFF8
  1071                           tblptrh	equ	0xFF7
  1072                           tblptrl	equ	0xFF6
  1073                           tablat	equ	0xFF5
  1074                           postinc0	equ	0xFEE
  1075                           wreg	equ	0xFE8
  1076                           postdec1	equ	0xFE5
  1077                           fsr1h	equ	0xFE2
  1078                           fsr1l	equ	0xFE1
  1079                           
  1080                           	psect	dataBANK0
  1081  0000FE                     __pdataBANK0:
  1082                           	opt stack 0
  1083  0000FE                     _AdditionalNodeID:
  1084                           	opt stack 0
  1085  0000FE                     	ds	1
  1086  0000FF                     _ConnMode:
  1087                           	opt stack 0
  1088  0000FF                     	ds	1
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           postinc0	equ	0xFEE
  1094                           wreg	equ	0xFE8
  1095                           postdec1	equ	0xFE5
  1096                           fsr1h	equ	0xFE2
  1097                           fsr1l	equ	0xFE1
  1098                           
  1099                           	psect	bssBANK1
  1100  000100                     __pbssBANK1:
  1101                           	opt stack 0
  1102  000100                     _PUSH_BUTTON_press_time:
  1103                           	opt stack 0
  1104  000100                     	ds	4
  1105  000104                     _nvmDelayTick:
  1106                           	opt stack 0
  1107  000104                     	ds	4
  1108  000108                     _t1:
  1109                           	opt stack 0
  1110  000108                     	ds	4
  1111  00010C                     _t2:
  1112                           	opt stack 0
  1113  00010C                     	ds	4
  1114  000110                     _tick1:
  1115                           	opt stack 0
  1116  000110                     	ds	4
  1117  000114                     _tick4:
  1118                           	opt stack 0
  1119  000114                     	ds	4
  1120  000118                     _TxBuffer:
  1121                           	opt stack 0
  1122  000118                     	ds	40
  1123  000140                     _LCDText:
  1124                           	opt stack 0
  1125  000140                     	ds	33
  1126  000161                     _myLongAddress:
  1127                           	opt stack 0
  1128  000161                     	ds	8
  1129                           tblptru	equ	0xFF8
  1130                           tblptrh	equ	0xFF7
  1131                           tblptrl	equ	0xFF6
  1132                           tablat	equ	0xFF5
  1133                           postinc0	equ	0xFEE
  1134                           wreg	equ	0xFE8
  1135                           postdec1	equ	0xFE5
  1136                           fsr1h	equ	0xFE2
  1137                           fsr1l	equ	0xFE1
  1138                           
  1139                           	psect	bssBANK2
  1140  000200                     __pbssBANK2:
  1141                           	opt stack 0
  1142  000200                     _link_stat:
  1143                           	opt stack 0
  1144  000200                     	ds	20
  1145  000214                     _permanent_connections:
  1146                           	opt stack 0
  1147  000214                     	ds	20
  1148  000228                     _RxBuffer:
  1149                           	opt stack 0
  1150  000228                     	ds	138
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           postdec1	equ	0xFE5
  1158                           fsr1h	equ	0xFE2
  1159                           fsr1l	equ	0xFE1
  1160                           
  1161                           	psect	bssBANK3
  1162  000300                     __pbssBANK3:
  1163                           	opt stack 0
  1164  000300                     _END_DEVICES_Short_Address:
  1165                           	opt stack 0
  1166  000300                     	ds	80
  1167                           tblptru	equ	0xFF8
  1168                           tblptrh	equ	0xFF7
  1169                           tblptrl	equ	0xFF6
  1170                           tablat	equ	0xFF5
  1171                           postinc0	equ	0xFEE
  1172                           wreg	equ	0xFE8
  1173                           postdec1	equ	0xFE5
  1174                           fsr1h	equ	0xFE2
  1175                           fsr1l	equ	0xFE1
  1176                           
  1177                           	psect	bssBIGRAM
  1178  000350                     __pbssBIGRAM:
  1179                           	opt stack 0
  1180  000350                     _ConnectionTable:
  1181                           	opt stack 0
  1182  000350                     	ds	280
  1183                           tblptru	equ	0xFF8
  1184                           tblptrh	equ	0xFF7
  1185                           tblptrl	equ	0xFF6
  1186                           tablat	equ	0xFF5
  1187                           postinc0	equ	0xFEE
  1188                           wreg	equ	0xFE8
  1189                           postdec1	equ	0xFE5
  1190                           fsr1h	equ	0xFE2
  1191                           fsr1l	equ	0xFE1
  1192                           
  1193                           	psect	cstackBANK1
  1194  000169                     __pcstackBANK1:
  1195                           	opt stack 0
  1196  000169                     ??_MiApp_UnicastStar:
  1197  000169                     ??_MiApp_EstablishConnection:
  1198                           
  1199                           ; 1 bytes @ 0x0
  1200  000169                     	ds	4
  1201  00016D                     MiApp_UnicastStar@SecEn:
  1202                           	opt stack 0
  1203  00016D                     MiApp_EstablishConnection@tmpConnectionMode:
  1204                           	opt stack 0
  1205                           
  1206                           ; 1 bytes @ 0x4
  1207  00016D                     	ds	1
  1208  00016E                     MiApp_EstablishConnection@retry:
  1209                           	opt stack 0
  1210  00016E                     MiApp_UnicastStar@t1:
  1211                           	opt stack 0
  1212                           
  1213                           ; 4 bytes @ 0x5
  1214  00016E                     	ds	1
  1215  00016F                     MiApp_EstablishConnection@connectionInterval:
  1216                           	opt stack 0
  1217                           
  1218                           ; 1 bytes @ 0x6
  1219  00016F                     	ds	1
  1220  000170                     MiApp_EstablishConnection@t1:
  1221                           	opt stack 0
  1222                           
  1223                           ; 4 bytes @ 0x7
  1224  000170                     	ds	2
  1225  000172                     MiApp_UnicastStar@t2:
  1226                           	opt stack 0
  1227                           
  1228                           ; 4 bytes @ 0x9
  1229  000172                     	ds	2
  1230  000174                     MiApp_EstablishConnection@t2:
  1231                           	opt stack 0
  1232                           
  1233                           ; 4 bytes @ 0xB
  1234  000174                     	ds	4
  1235  000178                     MiApp_EstablishConnection@i:
  1236                           	opt stack 0
  1237                           
  1238                           ; 1 bytes @ 0xF
  1239  000178                     	ds	1
  1240  000179                     ??_run_star_demo:
  1241                           
  1242                           ; 1 bytes @ 0x10
  1243  000179                     	ds	7
  1244  000180                     run_star_demo@sw_layer_ack_status:
  1245                           	opt stack 0
  1246                           
  1247                           ; 1 bytes @ 0x17
  1248  000180                     	ds	1
  1249  000181                     run_star_demo@update_ed:
  1250                           	opt stack 0
  1251                           
  1252                           ; 1 bytes @ 0x18
  1253  000181                     	ds	1
  1254  000182                     run_star_demo@PressedButton:
  1255                           	opt stack 0
  1256                           
  1257                           ; 1 bytes @ 0x19
  1258  000182                     	ds	1
  1259  000183                     run_star_demo@switch_val:
  1260                           	opt stack 0
  1261                           
  1262                           ; 1 bytes @ 0x1A
  1263  000183                     	ds	1
  1264  000184                     run_star_demo@select_ed:
  1265                           	opt stack 0
  1266                           
  1267                           ; 1 bytes @ 0x1B
  1268  000184                     	ds	1
  1269  000185                     main@freezer_enable:
  1270                           	opt stack 0
  1271                           
  1272                           ; 1 bytes @ 0x1C
  1273  000185                     	ds	1
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           postdec1	equ	0xFE5
  1281                           fsr1h	equ	0xFE2
  1282                           fsr1l	equ	0xFE1
  1283                           
  1284                           	psect	cstackBANK0
  1285  000060                     __pcstackBANK0:
  1286                           	opt stack 0
  1287  000060                     ??_DELAY_ms:
  1288  000060                     ??_Read_MAC_Address:
  1289  000060                     ?___lwmod:
  1290                           	opt stack 0
  1291  000060                     MiMAC_SetChannel@channel:
  1292                           	opt stack 0
  1293  000060                     NVMWrite@oldRFIE:
  1294                           	opt stack 0
  1295  000060                     MiWi_TickGet@failureCounter:
  1296                           	opt stack 0
  1297  000060                     store_connection_tb@payload:
  1298                           	opt stack 0
  1299  000060                     ___lwmod@dividend:
  1300                           	opt stack 0
  1301                           
  1302                           ; 2 bytes @ 0x0
  1303  000060                     	ds	1
  1304  000061                     ??_InitMRF24J40:
  1305  000061                     NVMWrite@PageCounter:
  1306                           	opt stack 0
  1307  000061                     MiWi_TickGet@currentTime:
  1308                           	opt stack 0
  1309                           
  1310                           ; 4 bytes @ 0x1
  1311  000061                     	ds	1
  1312  000062                     ??_AddConnection:
  1313  000062                     ??_store_connection_tb:
  1314  000062                     ??_MiApp_ConnectionMode:
  1315  000062                     MiApp_SetChannel@channel:
  1316                           	opt stack 0
  1317  000062                     Read_MAC_Address@i:
  1318                           	opt stack 0
  1319  000062                     ___lwmod@divisor:
  1320                           	opt stack 0
  1321  000062                     InitMRF24J40@_dcnt:
  1322                           	opt stack 0
  1323                           
  1324                           ; 4 bytes @ 0x2
  1325  000062                     	ds	1
  1326  000063                     MiApp_ConnectionMode@Mode:
  1327                           	opt stack 0
  1328                           
  1329                           ; 1 bytes @ 0x3
  1330  000063                     	ds	1
  1331  000064                     ?_sprintf:
  1332                           	opt stack 0
  1333  000064                     store_connection_tb@j:
  1334                           	opt stack 0
  1335  000064                     sprintf@sp:
  1336                           	opt stack 0
  1337                           
  1338                           ; 2 bytes @ 0x4
  1339  000064                     	ds	1
  1340  000065                     store_connection_tb@i:
  1341                           	opt stack 0
  1342  000065                     MiApp_StartConnection@ScanDuration:
  1343                           	opt stack 0
  1344  000065                     ButtonPressed@tickDifference:
  1345                           	opt stack 0
  1346                           
  1347                           ; 4 bytes @ 0x5
  1348  000065                     	ds	1
  1349  000066                     AddConnection@status:
  1350                           	opt stack 0
  1351  000066                     sprintf@f:
  1352                           	opt stack 0
  1353  000066                     InitMRF24J40@_dcnt_635:
  1354                           	opt stack 0
  1355  000066                     MiApp_StartConnection@ChannelMap:
  1356                           	opt stack 0
  1357                           
  1358                           ; 4 bytes @ 0x6
  1359  000066                     	ds	1
  1360  000067                     AddConnection@connectionSlot:
  1361                           	opt stack 0
  1362                           
  1363                           ; 1 bytes @ 0x7
  1364  000067                     	ds	1
  1365  000068                     AddConnection@i:
  1366                           	opt stack 0
  1367                           
  1368                           ; 1 bytes @ 0x8
  1369  000068                     	ds	1
  1370  000069                     ButtonPressed@t:
  1371                           	opt stack 0
  1372                           
  1373                           ; 4 bytes @ 0x9
  1374  000069                     	ds	1
  1375  00006A                     MiApp_StartConnection@Mode:
  1376                           	opt stack 0
  1377  00006A                     InitMRF24J40@_ms:
  1378                           	opt stack 0
  1379                           
  1380                           ; 4 bytes @ 0xA
  1381  00006A                     	ds	1
  1382  00006B                     MiApp_StartConnection@tmp:
  1383                           	opt stack 0
  1384                           
  1385                           ; 2 bytes @ 0xB
  1386  00006B                     	ds	3
  1387  00006E                     InitMRF24J40@_ms_636:
  1388                           	opt stack 0
  1389                           
  1390                           ; 4 bytes @ 0xE
  1391  00006E                     	ds	2
  1392  000070                     ??_sprintf:
  1393                           
  1394                           ; 1 bytes @ 0x10
  1395  000070                     	ds	2
  1396  000072                     InitMRF24J40@j:
  1397                           	opt stack 0
  1398                           
  1399                           ; 2 bytes @ 0x12
  1400  000072                     	ds	2
  1401  000074                     InitMRF24J40@i:
  1402                           	opt stack 0
  1403  000074                     sprintf@idx:
  1404                           	opt stack 0
  1405                           
  1406                           ; 1 bytes @ 0x14
  1407  000074                     	ds	1
  1408  000075                     _sprintf$3538:
  1409                           	opt stack 0
  1410  000075                     MiMAC_Init@initValue:
  1411                           	opt stack 0
  1412  000075                     MiMAC_SendPacket@transParam:
  1413                           	opt stack 0
  1414                           
  1415                           ; 7 bytes @ 0x15
  1416  000075                     	ds	2
  1417  000077                     _sprintf$3539:
  1418                           	opt stack 0
  1419                           
  1420                           ; 2 bytes @ 0x17
  1421  000077                     	ds	1
  1422  000078                     MiMAC_Init@i:
  1423                           	opt stack 0
  1424                           
  1425                           ; 1 bytes @ 0x18
  1426  000078                     	ds	1
  1427  000079                     MiApp_ProtocolInit@tmp:
  1428                           	opt stack 0
  1429  000079                     _sprintf$3545:
  1430                           	opt stack 0
  1431                           
  1432                           ; 2 bytes @ 0x19
  1433  000079                     	ds	2
  1434  00007B                     MiApp_ProtocolInit@bNetworkFreezer:
  1435                           	opt stack 0
  1436  00007B                     sprintf@cp:
  1437                           	opt stack 0
  1438                           
  1439                           ; 1 bytes @ 0x1B
  1440  00007B                     	ds	1
  1441  00007C                     MiMAC_SendPacket@MACPayload:
  1442                           	opt stack 0
  1443  00007C                     sprintf@len:
  1444                           	opt stack 0
  1445  00007C                     MiApp_ProtocolInit@initValue:
  1446                           	opt stack 0
  1447                           
  1448                           ; 3 bytes @ 0x1C
  1449  00007C                     	ds	2
  1450  00007E                     MiMAC_SendPacket@MACPayloadLen:
  1451                           	opt stack 0
  1452  00007E                     sprintf@ap:
  1453                           	opt stack 0
  1454                           
  1455                           ; 1 bytes @ 0x1E
  1456  00007E                     	ds	1
  1457  00007F                     ??_MiMAC_SendPacket:
  1458  00007F                     MiApp_ProtocolInit@i:
  1459                           	opt stack 0
  1460  00007F                     sprintf@val:
  1461                           	opt stack 0
  1462                           
  1463                           ; 2 bytes @ 0x1F
  1464  00007F                     	ds	2
  1465  000081                     sprintf@prec:
  1466                           	opt stack 0
  1467                           
  1468                           ; 1 bytes @ 0x21
  1469  000081                     	ds	1
  1470  000082                     sprintf@width:
  1471                           	opt stack 0
  1472                           
  1473                           ; 2 bytes @ 0x22
  1474  000082                     	ds	1
  1475  000083                     MiMAC_SendPacket@t1:
  1476                           	opt stack 0
  1477                           
  1478                           ; 4 bytes @ 0x23
  1479  000083                     	ds	1
  1480  000084                     sprintf@c:
  1481                           	opt stack 0
  1482                           
  1483                           ; 1 bytes @ 0x24
  1484  000084                     	ds	1
  1485  000085                     sprintf@flag:
  1486                           	opt stack 0
  1487                           
  1488                           ; 2 bytes @ 0x25
  1489  000085                     	ds	2
  1490  000087                     LCDTRXCount@rxCount:
  1491                           	opt stack 0
  1492  000087                     LCDDisplay@text:
  1493                           	opt stack 0
  1494  000087                     Source_END_DEVICE_INFO@SrAddr:
  1495                           	opt stack 0
  1496  000087                     MiMAC_SendPacket@t2:
  1497                           	opt stack 0
  1498                           
  1499                           ; 4 bytes @ 0x27
  1500  000087                     	ds	1
  1501  000088                     LCDTRXCount@txCount:
  1502                           	opt stack 0
  1503                           
  1504                           ; 1 bytes @ 0x28
  1505  000088                     	ds	1
  1506  000089                     LCDDisplay@value:
  1507                           	opt stack 0
  1508  000089                     DemoOutput_UpdateTxRx@RxNum:
  1509                           	opt stack 0
  1510                           
  1511                           ; 1 bytes @ 0x29
  1512  000089                     	ds	1
  1513  00008A                     LCDDisplay@delay:
  1514                           	opt stack 0
  1515  00008A                     DemoOutput_UpdateTxRx@TxNum:
  1516                           	opt stack 0
  1517                           
  1518                           ; 1 bytes @ 0x2A
  1519  00008A                     	ds	1
  1520  00008B                     MiMAC_SendPacket@IntraPAN:
  1521                           	opt stack 0
  1522  00008B                     LCDDisplay@i:
  1523                           	opt stack 0
  1524                           
  1525                           ; 1 bytes @ 0x2B
  1526  00008B                     	ds	1
  1527  00008C                     MiMAC_SendPacket@frameControl:
  1528                           	opt stack 0
  1529  00008C                     DemoOutput_Channel@Step:
  1530                           	opt stack 0
  1531  00008C                     STAR_DEMO_OPTIONS_MESSAGE@NetworkRole:
  1532                           	opt stack 0
  1533  00008C                     freezer_feature@PressedButton1:
  1534                           	opt stack 0
  1535                           
  1536                           ; 1 bytes @ 0x2C
  1537  00008C                     	ds	1
  1538  00008D                     MiMAC_SendPacket@headerLength:
  1539                           	opt stack 0
  1540  00008D                     DemoOutput_Channel@channel:
  1541                           	opt stack 0
  1542                           
  1543                           ; 1 bytes @ 0x2D
  1544  00008D                     	ds	1
  1545  00008E                     MiMAC_SendPacket@i:
  1546                           	opt stack 0
  1547                           
  1548                           ; 1 bytes @ 0x2E
  1549  00008E                     	ds	1
  1550  00008F                     MiMAC_SendPacket@loc:
  1551                           	opt stack 0
  1552                           
  1553                           ; 1 bytes @ 0x2F
  1554  00008F                     	ds	1
  1555  000090                     SendPacket@DestinationPANID:
  1556                           	opt stack 0
  1557                           
  1558                           ; 2 bytes @ 0x30
  1559  000090                     	ds	2
  1560  000092                     SendPacket@DestinationAddress:
  1561                           	opt stack 0
  1562                           
  1563                           ; 2 bytes @ 0x32
  1564  000092                     	ds	2
  1565  000094                     SendPacket@isCommand:
  1566                           	opt stack 0
  1567                           
  1568                           ; 1 bytes @ 0x34
  1569  000094                     	ds	1
  1570  000095                     SendPacket@SecurityEnabled:
  1571                           	opt stack 0
  1572                           
  1573                           ; 1 bytes @ 0x35
  1574  000095                     	ds	1
  1575  000096                     ??_SendPacket:
  1576                           
  1577                           ; 1 bytes @ 0x36
  1578  000096                     	ds	1
  1579  000097                     SendPacket@status:
  1580                           	opt stack 0
  1581                           
  1582                           ; 1 bytes @ 0x37
  1583  000097                     	ds	1
  1584  000098                     SendPacket@Broadcast:
  1585                           	opt stack 0
  1586                           
  1587                           ; 1 bytes @ 0x38
  1588  000098                     	ds	1
  1589  000099                     SendPacket@tParam:
  1590                           	opt stack 0
  1591                           
  1592                           ; 7 bytes @ 0x39
  1593  000099                     	ds	7
  1594  0000A0                     ??_MiApp_BroadcastConnectionTable:
  1595  0000A0                     MiApp_BroadcastPacket@SecEn:
  1596                           	opt stack 0
  1597  0000A0                     send_link_status@send_status:
  1598                           	opt stack 0
  1599  0000A0                     MiApp_UnicastAddress@DestinationAddress:
  1600                           	opt stack 0
  1601  0000A0                     SW_Ack_SrED@Dest_Addr:
  1602                           	opt stack 0
  1603  0000A0                     MiApp_RemoveConnection@j:
  1604                           	opt stack 0
  1605                           
  1606                           ; 2 bytes @ 0x40
  1607  0000A0                     	ds	2
  1608  0000A2                     MiApp_UnicastAddress@PermanentAddr:
  1609                           	opt stack 0
  1610  0000A2                     MiApp_RemoveConnection@j_1504:
  1611                           	opt stack 0
  1612                           
  1613                           ; 2 bytes @ 0x42
  1614  0000A2                     	ds	1
  1615  0000A3                     MiApp_UnicastAddress@SecEn:
  1616                           	opt stack 0
  1617                           
  1618                           ; 1 bytes @ 0x43
  1619  0000A3                     	ds	1
  1620  0000A4                     MiApp_UnicastConnection@SecEn:
  1621                           	opt stack 0
  1622  0000A4                     MiApp_RemoveConnection@ConnectionIndex:
  1623                           	opt stack 0
  1624                           
  1625                           ; 1 bytes @ 0x44
  1626  0000A4                     	ds	1
  1627  0000A5                     MiApp_UnicastConnection@ConnectionIndex:
  1628                           	opt stack 0
  1629  0000A5                     MiApp_RemoveConnection@i:
  1630                           	opt stack 0
  1631                           
  1632                           ; 1 bytes @ 0x45
  1633  0000A5                     	ds	1
  1634  0000A6                     Forward_Packet_PANCr_to_EDy@fw_payload:
  1635                           	opt stack 0
  1636                           
  1637                           ; 2 bytes @ 0x46
  1638  0000A6                     	ds	1
  1639  0000A7                     MiApp_BroadcastConnectionTable@count:
  1640                           	opt stack 0
  1641  0000A7                     Find_InActiveDevices@i:
  1642                           	opt stack 0
  1643                           
  1644                           ; 1 bytes @ 0x47
  1645  0000A7                     	ds	1
  1646  0000A8                     Forward_Packet_PANCr_to_EDy@index:
  1647                           	opt stack 0
  1648  0000A8                     MiApp_BroadcastConnectionTable@broadcast_count:
  1649                           	opt stack 0
  1650                           
  1651                           ; 1 bytes @ 0x48
  1652  0000A8                     	ds	1
  1653  0000A9                     MiApp_BroadcastConnectionTable@k:
  1654                           	opt stack 0
  1655  0000A9                     Forward_Packet_PANCr_to_EDy@EDxAddress:
  1656                           	opt stack 0
  1657                           
  1658                           ; 2 bytes @ 0x49
  1659  0000A9                     	ds	1
  1660  0000AA                     MiApp_BroadcastConnectionTable@i:
  1661                           	opt stack 0
  1662                           
  1663                           ; 1 bytes @ 0x4A
  1664  0000AA                     	ds	1
  1665  0000AB                     Forward_Packet_PANCr_to_EDy@status:
  1666                           	opt stack 0
  1667  0000AB                     MiApp_BroadcastConnectionTable@j:
  1668                           	opt stack 0
  1669                           
  1670                           ; 1 bytes @ 0x4B
  1671  0000AB                     	ds	1
  1672  0000AC                     Forward_Packet_PANCr_to_EDy@i:
  1673                           	opt stack 0
  1674                           
  1675                           ; 1 bytes @ 0x4C
  1676  0000AC                     	ds	1
  1677  0000AD                     ??_P2PTasks:
  1678                           
  1679                           ; 1 bytes @ 0x4D
  1680  0000AD                     	ds	4
  1681  0000B1                     P2PTasks@tmpTick:
  1682                           	opt stack 0
  1683                           
  1684                           ; 4 bytes @ 0x51
  1685  0000B1                     	ds	4
  1686  0000B5                     P2PTasks@FW_Stat:
  1687                           	opt stack 0
  1688                           
  1689                           ; 1 bytes @ 0x55
  1690  0000B5                     	ds	1
  1691  0000B6                     P2PTasks@tmp:
  1692                           	opt stack 0
  1693                           
  1694                           ; 2 bytes @ 0x56
  1695  0000B6                     	ds	2
  1696  0000B8                     P2PTasks@tick2:
  1697                           	opt stack 0
  1698                           
  1699                           ; 4 bytes @ 0x58
  1700  0000B8                     	ds	4
  1701  0000BC                     P2PTasks@final_index:
  1702                           	opt stack 0
  1703                           
  1704                           ; 1 bytes @ 0x5C
  1705  0000BC                     	ds	1
  1706  0000BD                     P2PTasks@tick3:
  1707                           	opt stack 0
  1708                           
  1709                           ; 4 bytes @ 0x5D
  1710  0000BD                     	ds	4
  1711  0000C1                     P2PTasks@p:
  1712                           	opt stack 0
  1713                           
  1714                           ; 1 bytes @ 0x61
  1715  0000C1                     	ds	1
  1716  0000C2                     P2PTasks@p_1345:
  1717                           	opt stack 0
  1718                           
  1719                           ; 1 bytes @ 0x62
  1720  0000C2                     	ds	1
  1721  0000C3                     P2PTasks@status:
  1722                           	opt stack 0
  1723                           
  1724                           ; 1 bytes @ 0x63
  1725  0000C3                     	ds	1
  1726  0000C4                     P2PTasks@i:
  1727                           	opt stack 0
  1728                           
  1729                           ; 1 bytes @ 0x64
  1730  0000C4                     	ds	1
  1731  0000C5                     MiApp_EstablishConnection@Mode:
  1732                           	opt stack 0
  1733  0000C5                     Process_RxMessage@User_data_status:
  1734                           	opt stack 0
  1735                           
  1736                           ; 1 bytes @ 0x65
  1737  0000C5                     	ds	1
  1738  0000C6                     Initialize_Demo@freezer_enable:
  1739                           	opt stack 0
  1740                           
  1741                           ; 1 bytes @ 0x66
  1742  0000C6                     	ds	1
  1743                           tblptru	equ	0xFF8
  1744                           tblptrh	equ	0xFF7
  1745                           tblptrl	equ	0xFF6
  1746                           tablat	equ	0xFF5
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           postdec1	equ	0xFE5
  1750                           fsr1h	equ	0xFE2
  1751                           fsr1l	equ	0xFE1
  1752                           
  1753                           	psect	cstackCOMRAM
  1754  000001                     __pcstackCOMRAM:
  1755                           	opt stack 0
  1756  000001                     i2SPI1_Exchange8bit@data:
  1757                           	opt stack 0
  1758  000001                     i2DELAY_ms@ms:
  1759                           	opt stack 0
  1760                           
  1761                           ; 2 bytes @ 0x0
  1762  000001                     	ds	1
  1763  000002                     i2PHYSetShortRAMAddr@value:
  1764                           	opt stack 0
  1765  000002                     i2PHYGetShortRAMAddr@address:
  1766                           	opt stack 0
  1767  000002                     i2PHYGetLongRAMAddr@address:
  1768                           	opt stack 0
  1769                           
  1770                           ; 2 bytes @ 0x1
  1771  000002                     	ds	1
  1772  000003                     ??i2_DELAY_ms:
  1773  000003                     i2PHYSetShortRAMAddr@address:
  1774                           	opt stack 0
  1775  000003                     i2PHYGetShortRAMAddr@toReturn:
  1776                           	opt stack 0
  1777                           
  1778                           ; 1 bytes @ 0x2
  1779  000003                     	ds	1
  1780  000004                     ??i2_PHYGetLongRAMAddr:
  1781  000004                     i2PHYSetShortRAMAddr@tmpRFIE:
  1782                           	opt stack 0
  1783  000004                     i2PHYGetShortRAMAddr@tmpRFIE:
  1784                           	opt stack 0
  1785                           
  1786                           ; 1 bytes @ 0x3
  1787  000004                     	ds	2
  1788  000006                     i2PHYGetLongRAMAddr@toReturn:
  1789                           	opt stack 0
  1790                           
  1791                           ; 1 bytes @ 0x5
  1792  000006                     	ds	1
  1793  000007                     i2PHYGetLongRAMAddr@tmpRFIE:
  1794                           	opt stack 0
  1795                           
  1796                           ; 1 bytes @ 0x6
  1797  000007                     	ds	4
  1798  00000B                     i2DELAY_ms@cyclesRequiredForEntireDelay:
  1799                           	opt stack 0
  1800                           
  1801                           ; 4 bytes @ 0xA
  1802  00000B                     	ds	4
  1803  00000F                     ??_high_isr:
  1804  00000F                     
  1805                           ; 1 bytes @ 0xE
  1806  00000F                     	ds	9
  1807  000018                     high_isr@results:
  1808                           	opt stack 0
  1809                           
  1810                           ; 1 bytes @ 0x17
  1811  000018                     	ds	1
  1812  000019                     high_isr@flags:
  1813                           	opt stack 0
  1814                           
  1815                           ; 2 bytes @ 0x18
  1816  000019                     	ds	2
  1817  00001B                     high_isr@RxBank:
  1818                           	opt stack 0
  1819                           
  1820                           ; 1 bytes @ 0x1A
  1821  00001B                     	ds	1
  1822  00001C                     high_isr@i:
  1823                           	opt stack 0
  1824                           
  1825                           ; 1 bytes @ 0x1B
  1826  00001C                     	ds	1
  1827  00001D                     ??_isdigit:
  1828  00001D                     ??_MiMAC_ReceivedPacket:
  1829  00001D                     ??_handle_lost_connection:
  1830  00001D                     ?___wmul:
  1831                           	opt stack 0
  1832  00001D                     ?___awdiv:
  1833                           	opt stack 0
  1834  00001D                     ?___awmod:
  1835                           	opt stack 0
  1836  00001D                     ?___lwdiv:
  1837                           	opt stack 0
  1838  00001D                     ?_MiWi_TickGet:
  1839                           	opt stack 0
  1840  00001D                     Total_Connections@count:
  1841                           	opt stack 0
  1842  00001D                     I2CWrite@BufferLen:
  1843                           	opt stack 0
  1844  00001D                     LCD_Erase@i:
  1845                           	opt stack 0
  1846  00001D                     SPI1_Exchange8bit@data:
  1847                           	opt stack 0
  1848  00001D                     ___lbmod@divisor:
  1849                           	opt stack 0
  1850  00001D                     NVMalloc@size:
  1851                           	opt stack 0
  1852  00001D                     Find_Index@DestAddr:
  1853                           	opt stack 0
  1854  00001D                     isSameAddress@Address1:
  1855                           	opt stack 0
  1856  00001D                     DELAY_ms@ms:
  1857                           	opt stack 0
  1858  00001D                     ___wmul@multiplier:
  1859                           	opt stack 0
  1860  00001D                     ___awdiv@dividend:
  1861                           	opt stack 0
  1862  00001D                     ___awmod@dividend:
  1863                           	opt stack 0
  1864  00001D                     ___lwdiv@dividend:
  1865                           	opt stack 0
  1866                           
  1867                           ; 2 bytes @ 0x1C
  1868  00001D                     	ds	1
  1869  00001E                     PHYSetShortRAMAddr@value:
  1870                           	opt stack 0
  1871  00001E                     PHYGetShortRAMAddr@address:
  1872                           	opt stack 0
  1873  00001E                     Total_Connections@i:
  1874                           	opt stack 0
  1875  00001E                     I2CWrite@Commandlen:
  1876                           	opt stack 0
  1877  00001E                     _isdigit$3769:
  1878                           	opt stack 0
  1879  00001E                     ___lbmod@dividend:
  1880                           	opt stack 0
  1881  00001E                     PHYSetLongRAMAddr@address:
  1882                           	opt stack 0
  1883  00001E                     PHYGetLongRAMAddr@address:
  1884                           	opt stack 0
  1885  00001E                     NVMRead@dest:
  1886                           	opt stack 0
  1887  00001E                     NVMWrite@source:
  1888                           	opt stack 0
  1889  00001E                     EEPROM_Read@dest:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x1D
  1893  00001E                     	ds	1
  1894  00001F                     PHYSetShortRAMAddr@address:
  1895                           	opt stack 0
  1896  00001F                     PHYGetShortRAMAddr@toReturn:
  1897                           	opt stack 0
  1898  00001F                     NVMalloc@location:
  1899                           	opt stack 0
  1900  00001F                     isdigit@c:
  1901                           	opt stack 0
  1902  00001F                     ___lbmod@counter:
  1903                           	opt stack 0
  1904  00001F                     isSameAddress@Address2:
  1905                           	opt stack 0
  1906  00001F                     ___wmul@multiplicand:
  1907                           	opt stack 0
  1908  00001F                     ___awdiv@divisor:
  1909                           	opt stack 0
  1910  00001F                     ___awmod@divisor:
  1911                           	opt stack 0
  1912  00001F                     ___lwdiv@divisor:
  1913                           	opt stack 0
  1914  00001F                     DELAY_ms@cyclesRequiredForEntireDelay:
  1915                           	opt stack 0
  1916                           
  1917                           ; 4 bytes @ 0x1E
  1918  00001F                     	ds	1
  1919  000020                     ??_PHYGetLongRAMAddr:
  1920  000020                     ??_NVMalloc:
  1921  000020                     PHYSetLongRAMAddr@value:
  1922                           	opt stack 0
  1923  000020                     PHYSetShortRAMAddr@tmpRFIE:
  1924                           	opt stack 0
  1925  000020                     PHYGetShortRAMAddr@tmpRFIE:
  1926                           	opt stack 0
  1927  000020                     EEPROM_Read@addr:
  1928                           	opt stack 0
  1929  000020                     ___lbmod@rem:
  1930                           	opt stack 0
  1931  000020                     NVMRead@addr:
  1932                           	opt stack 0
  1933  000020                     NVMWrite@addr:
  1934                           	opt stack 0
  1935                           
  1936                           ; 2 bytes @ 0x1F
  1937  000020                     	ds	1
  1938  000021                     ??_MiWi_TickGet:
  1939  000021                     ??_PHYSetLongRAMAddr:
  1940  000021                     MiMAC_SetAltAddress@PANID:
  1941                           	opt stack 0
  1942  000021                     Find_Index@i:
  1943                           	opt stack 0
  1944  000021                     EEPROM_Read@count:
  1945                           	opt stack 0
  1946  000021                     ___awdiv@counter:
  1947                           	opt stack 0
  1948  000021                     ___awmod@counter:
  1949                           	opt stack 0
  1950  000021                     ___lwdiv@counter:
  1951                           	opt stack 0
  1952  000021                     ___wmul@product:
  1953                           	opt stack 0
  1954                           
  1955                           ; 2 bytes @ 0x20
  1956  000021                     	ds	1
  1957  000022                     PHYGetLongRAMAddr@toReturn:
  1958                           	opt stack 0
  1959  000022                     MiMAC_ReceivedPacket@addrMode:
  1960                           	opt stack 0
  1961  000022                     MiMAC_SetAltAddress@Address:
  1962                           	opt stack 0
  1963  000022                     NVMInit@result:
  1964                           	opt stack 0
  1965  000022                     handle_lost_connection@stat:
  1966                           	opt stack 0
  1967  000022                     EEPROM_Read@oldGIEH:
  1968                           	opt stack 0
  1969  000022                     ___awdiv@sign:
  1970                           	opt stack 0
  1971  000022                     ___awmod@sign:
  1972                           	opt stack 0
  1973  000022                     NVMRead@count:
  1974                           	opt stack 0
  1975  000022                     NVMWrite@count:
  1976                           	opt stack 0
  1977  000022                     ___lwdiv@quotient:
  1978                           	opt stack 0
  1979                           
  1980                           ; 2 bytes @ 0x21
  1981  000022                     	ds	1
  1982  000023                     PHYSetLongRAMAddr@tmpRFIE:
  1983                           	opt stack 0
  1984  000023                     PHYGetLongRAMAddr@tmpRFIE:
  1985                           	opt stack 0
  1986  000023                     MiMAC_ReceivedPacket@i:
  1987                           	opt stack 0
  1988  000023                     handle_lost_connection@i:
  1989                           	opt stack 0
  1990  000023                     isSameAddress@i:
  1991                           	opt stack 0
  1992  000023                     Read_MAC_Address@myAddress:
  1993                           	opt stack 0
  1994  000023                     ___awdiv@quotient:
  1995                           	opt stack 0
  1996                           
  1997                           ; 2 bytes @ 0x22
  1998  000023                     	ds	1
  1999  000024                     ??_NVMWrite:
  2000  000024                     MiMAC_ReceivedPacket@bIntraPAN:
  2001                           	opt stack 0
  2002  000024                     MiMAC_SetChannel@offsetFreq:
  2003                           	opt stack 0
  2004  000024                     NVMRead@oldRFIE:
  2005                           	opt stack 0
  2006  000024                     ___lwmod@counter:
  2007                           	opt stack 0
  2008                           
  2009                           ; 1 bytes @ 0x23
  2010  000024                     	ds	1
  2011  000025                     tblptru	equ	0xFF8
  2012                           tblptrh	equ	0xFF7
  2013                           tblptrl	equ	0xFF6
  2014                           tablat	equ	0xFF5
  2015                           postinc0	equ	0xFEE
  2016                           wreg	equ	0xFE8
  2017                           postdec1	equ	0xFE5
  2018                           fsr1h	equ	0xFE2
  2019                           fsr1l	equ	0xFE1
  2020                           
  2021                           ; 1 bytes @ 0x24
  2022 ;;
  2023 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2024 ;;
  2025 ;; *************** function _main *****************
  2026 ;; Defined at:
  2027 ;;		line 56 in file "../src/main.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;		None
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;  freezer_enab    1   28[BANK1 ] unsigned char 
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  1    wreg      void 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : F/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2042 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2044 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2045 ;;Total ram usage:        1 bytes
  2046 ;; Hardware stack levels required when called:   18
  2047 ;; This function calls:
  2048 ;;		_DemoOutput_Greeting
  2049 ;;		_Initialize_Demo
  2050 ;;		_Run_Demo
  2051 ;;		_SYSTEM_Initialize
  2052 ;;		_TMR1_Initialize
  2053 ;;		_freezer_feature
  2054 ;; This function is called by:
  2055 ;;		Startup code after reset
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text0
  2060  003AA6                     __ptext0:
  2061                           	opt stack 0
  2062  003AA6                     _main:
  2063                           	opt stack 13
  2064                           
  2065                           ;main.c: 60: SYSTEM_Initialize();
  2066                           
  2067                           ;incstack = 0
  2068  003AA6  ECB2  F017         	call	_SYSTEM_Initialize	;wreg free
  2069                           
  2070                           ;main.c: 62: TMR1_Initialize();
  2071  003AAA  ECBB  F01D         	call	_TMR1_Initialize	;wreg free
  2072                           
  2073                           ;main.c: 64: DemoOutput_Greeting();
  2074  003AAE  EC73  F01D         	call	_DemoOutput_Greeting	;wreg free
  2075                           
  2076                           ;main.c: 68: freezer_enable = freezer_feature();
  2077  003AB2  EC1A  F01D         	call	_freezer_feature	;wreg free
  2078  003AB6  0101               	movlb	1	; () banked
  2079  003AB8  6F85               	movwf	main@freezer_enable& (0+255),b
  2080                           
  2081                           ; BSR set to: 1
  2082                           ;main.c: 72: Initialize_Demo(freezer_enable);
  2083  003ABA  5185               	movf	main@freezer_enable& (0+255),w,b
  2084  003ABC  EC66  F015         	call	_Initialize_Demo
  2085  003AC0                     l13855:
  2086                           
  2087                           ; BSR set to: 0
  2088                           ;main.c: 74: {
  2089                           ;main.c: 76: Run_Demo();
  2090  003AC0  EC21  F01E         	call	_Run_Demo	;wreg free
  2091  003AC4  D7FD               	goto	l13855
  2092  003AC6                     __end_of_main:
  2093                           	opt stack 0
  2094                           tblptru	equ	0xFF8
  2095                           tblptrh	equ	0xFF7
  2096                           tblptrl	equ	0xFF6
  2097                           tablat	equ	0xFF5
  2098                           postinc0	equ	0xFEE
  2099                           wreg	equ	0xFE8
  2100                           postdec1	equ	0xFE5
  2101                           fsr1h	equ	0xFE2
  2102                           fsr1l	equ	0xFE1
  2103                           
  2104 ;; *************** function _freezer_feature *****************
  2105 ;; Defined at:
  2106 ;;		line 69 in file "../src/task.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  PressedButto    1   44[BANK0 ] unsigned char 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      unsigned char 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : F/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;Total ram usage:        1 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    7
  2127 ;; This function calls:
  2128 ;;		_ButtonPressed
  2129 ;;		_LCDDisplay
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text1
  2136  003A34                     __ptext1:
  2137                           	opt stack 0
  2138  003A34                     _freezer_feature:
  2139                           	opt stack 23
  2140                           
  2141                           ;task.c: 72: LCDDisplay((char *)"RB0:New Network RB2:Freezer", 0, 0);
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;incstack = 0
  2145  003A34  0EFA               	movlw	low STR_12
  2146  003A36  0100               	movlb	0	; () banked
  2147  003A38  6F87               	movwf	LCDDisplay@text& (0+255),b
  2148  003A3A  0EFE               	movlw	high STR_12
  2149  003A3C  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
  2150  003A3E  6B89               	clrf	LCDDisplay@value& (0+255),b
  2151  003A40  6B8A               	clrf	LCDDisplay@delay& (0+255),b
  2152  003A42  EC14  F01B         	call	_LCDDisplay	;wreg free
  2153  003A46                     l13787:
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;task.c: 77: {
  2157                           ;task.c: 78: uint8_t PressedButton1 = ButtonPressed();
  2158  003A46  EC4C  F016         	call	_ButtonPressed	;wreg free
  2159  003A4A  6F8C               	movwf	freezer_feature@PressedButton1& (0+255),b
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;task.c: 79: if (PressedButton1 == 1)
  2163  003A4C  058C               	decf	freezer_feature@PressedButton1& (0+255),w,b
  2164  003A4E  E101               	bnz	l13797
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;task.c: 80: {
  2168                           ;task.c: 81: return 0;
  2169  003A50  0C00               	retlw	0
  2170  003A52                     l13797:
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;task.c: 83: else if (PressedButton1 == 2)
  2174  003A52  0E02               	movlw	2
  2175  003A54  198C               	xorwf	freezer_feature@PressedButton1& (0+255),w,b
  2176  003A56  E1F7               	bnz	l13787
  2177                           
  2178                           ; BSR set to: 0
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;task.c: 84: {
  2182                           ;task.c: 85: return 1;
  2183  003A58  0C01               	retlw	1	;funcret
  2184  003A5A                     __end_of_freezer_feature:
  2185                           	opt stack 0
  2186                           tblptru	equ	0xFF8
  2187                           tblptrh	equ	0xFF7
  2188                           tblptrl	equ	0xFF6
  2189                           tablat	equ	0xFF5
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           postdec1	equ	0xFE5
  2193                           fsr1h	equ	0xFE2
  2194                           fsr1l	equ	0xFE1
  2195                           
  2196 ;; *************** function _TMR1_Initialize *****************
  2197 ;; Defined at:
  2198 ;;		line 174 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/symbol.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;		None
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;		None
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2216 ;;Total ram usage:        0 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    5
  2219 ;; This function calls:
  2220 ;;		_TMR1_StartTimer
  2221 ;; This function is called by:
  2222 ;;		_main
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           	psect	text2
  2227  003B76                     __ptext2:
  2228                           	opt stack 0
  2229  003B76                     _TMR1_Initialize:
  2230                           	opt stack 25
  2231                           
  2232                           ;symbol.c: 178: T1CON = 0x38;
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;incstack = 0
  2236  003B76  0E38               	movlw	56
  2237  003B78  6ECD               	movwf	4045,c	;volatile
  2238                           
  2239                           ;symbol.c: 181: T1GCON = 0x00;
  2240  003B7A  6A9A               	clrf	3994,c	;volatile
  2241                           
  2242                           ;symbol.c: 184: TMR1H = 0x00;
  2243  003B7C  6ACF               	clrf	4047,c	;volatile
  2244                           
  2245                           ;symbol.c: 187: TMR1L = 0x00;
  2246  003B7E  6ACE               	clrf	4046,c	;volatile
  2247                           
  2248                           ;symbol.c: 190: timer1ReloadVal = TMR1;
  2249  003B80  CFCE F0DC          	movff	4046,_timer1ReloadVal	;volatile
  2250  003B84  CFCF F0DD          	movff	4047,_timer1ReloadVal+1	;volatile
  2251                           
  2252                           ;symbol.c: 193: PIR1bits.TMR1IF = 0;
  2253  003B88  909E               	bcf	3998,0,c	;volatile
  2254                           
  2255                           ;symbol.c: 196: PIE1bits.TMR1IE = 1;
  2256  003B8A  809D               	bsf	3997,0,c	;volatile
  2257                           
  2258                           ;symbol.c: 199: TMR1_StartTimer();
  2259  003B8C  EF1F  F01E         	goto	_TMR1_StartTimer	;wreg free
  2260  003B90                     __end_of_TMR1_Initialize:
  2261                           	opt stack 0
  2262                           tblptru	equ	0xFF8
  2263                           tblptrh	equ	0xFF7
  2264                           tblptrl	equ	0xFF6
  2265                           tablat	equ	0xFF5
  2266                           postinc0	equ	0xFEE
  2267                           wreg	equ	0xFE8
  2268                           postdec1	equ	0xFE5
  2269                           fsr1h	equ	0xFE2
  2270                           fsr1l	equ	0xFE1
  2271                           
  2272 ;; *************** function _TMR1_StartTimer *****************
  2273 ;; Defined at:
  2274 ;;		line 202 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/symbol.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		None
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    4
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_TMR1_Initialize
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text3
  2303  003C3E                     __ptext3:
  2304                           	opt stack 0
  2305  003C3E                     _TMR1_StartTimer:
  2306                           	opt stack 25
  2307                           
  2308                           ;symbol.c: 204: T1CONbits.TMR1ON = 1;
  2309                           
  2310                           ;incstack = 0
  2311  003C3E  80CD               	bsf	4045,0,c	;volatile
  2312  003C40  0012               	return		;funcret
  2313  003C42                     __end_of_TMR1_StartTimer:
  2314                           	opt stack 0
  2315                           tblptru	equ	0xFF8
  2316                           tblptrh	equ	0xFF7
  2317                           tblptrl	equ	0xFF6
  2318                           tablat	equ	0xFF5
  2319                           postinc0	equ	0xFEE
  2320                           wreg	equ	0xFE8
  2321                           postdec1	equ	0xFE5
  2322                           fsr1h	equ	0xFE2
  2323                           fsr1l	equ	0xFE1
  2324                           
  2325 ;; *************** function _SYSTEM_Initialize *****************
  2326 ;; Defined at:
  2327 ;;		line 50 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/system.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2345 ;;Total ram usage:        0 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    6
  2348 ;; This function calls:
  2349 ;;		_LCD_Initialize
  2350 ;; This function is called by:
  2351 ;;		_main
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text4
  2356  002F64                     __ptext4:
  2357                           	opt stack 0
  2358  002F64                     _SYSTEM_Initialize:
  2359                           	opt stack 24
  2360                           
  2361                           ;system.c: 54: OSCCON = 0x7B;
  2362                           
  2363                           ;incstack = 0
  2364  002F64  0E7B               	movlw	123
  2365  002F66  6ED3               	movwf	4051,c	;volatile
  2366                           
  2367                           ;system.c: 55: WDTCONbits.SWDTEN = 0;
  2368  002F68  90C0               	bcf	4032,0,c	;volatile
  2369                           
  2370                           ;system.c: 57: INTCON = 0;
  2371  002F6A  6AF2               	clrf	intcon,c	;volatile
  2372                           
  2373                           ;system.c: 59: EECON2 = 0x55;
  2374  002F6C  0E55               	movlw	85
  2375  002F6E  6EA7               	movwf	4007,c	;volatile
  2376                           
  2377                           ;system.c: 60: EECON2 = 0xAA;
  2378  002F70  0EAA               	movlw	170
  2379  002F72  6EA7               	movwf	4007,c	;volatile
  2380                           
  2381                           ;system.c: 61: PPSCONbits.IOLOCK = 0;
  2382  002F74  010E               	movlb	14	; () banked
  2383  002F76  91FF               	bcf	255,0,b	;volatile
  2384                           
  2385                           ;system.c: 68: RPINR1 = 4;
  2386  002F78  0E04               	movlw	4
  2387  002F7A  6FE7               	movwf	231,b	;volatile
  2388                           
  2389                           ;system.c: 84: RPINR16 = 19;
  2390  002F7C  0E13               	movlw	19
  2391  002F7E  6FF6               	movwf	246,b	;volatile
  2392                           
  2393                           ;system.c: 85: RPOR17 = 5;
  2394  002F80  0E05               	movlw	5
  2395  002F82  6FD7               	movwf	215,b	;volatile
  2396                           
  2397                           ;system.c: 88: EECON2 = 0x55;
  2398  002F84  0E55               	movlw	85
  2399  002F86  6EA7               	movwf	4007,c	;volatile
  2400                           
  2401                           ;system.c: 89: EECON2 = 0xAA;
  2402  002F88  0EAA               	movlw	170
  2403  002F8A  6EA7               	movwf	4007,c	;volatile
  2404                           
  2405                           ; BSR set to: 14
  2406                           ;system.c: 90: PPSCONbits.IOLOCK = 1;
  2407  002F8C  81FF               	bsf	255,0,b	;volatile
  2408                           
  2409                           ; BSR set to: 14
  2410                           ;system.c: 93: ANCON0 = 0xFF;
  2411  002F8E  010F               	movlb	15	; () banked
  2412  002F90  6948               	setf	72,b	;volatile
  2413                           
  2414                           ;system.c: 94: ANCON1 = 0x3F;
  2415  002F92  0E3F               	movlw	63
  2416  002F94  6F49               	movwf	73,b	;volatile
  2417                           
  2418                           ; BSR set to: 15
  2419                           ;system.c: 95: INTCON2bits.RBPU = 0;
  2420  002F96  9EF1               	bcf	intcon2,7,c	;volatile
  2421                           
  2422                           ; BSR set to: 15
  2423                           ;system.c: 97: TRISA = 0xFF;
  2424  002F98  6892               	setf	3986,c	;volatile
  2425                           
  2426                           ; BSR set to: 15
  2427                           ;system.c: 98: TRISB = 0xFF;
  2428  002F9A  6893               	setf	3987,c	;volatile
  2429                           
  2430                           ; BSR set to: 15
  2431                           ;system.c: 99: TRISC = 0xFF;
  2432  002F9C  6894               	setf	3988,c	;volatile
  2433                           
  2434                           ; BSR set to: 15
  2435                           ;system.c: 100: TRISD = 0xFF;
  2436  002F9E  6895               	setf	3989,c	;volatile
  2437                           
  2438                           ; BSR set to: 15
  2439                           ;system.c: 101: TRISE = 0xFF;
  2440  002FA0  6896               	setf	3990,c	;volatile
  2441                           
  2442                           ; BSR set to: 15
  2443                           ;system.c: 103: LATA = 0;
  2444  002FA2  6A89               	clrf	3977,c	;volatile
  2445                           
  2446                           ; BSR set to: 15
  2447                           ;system.c: 104: LATB = 0;
  2448  002FA4  6A8A               	clrf	3978,c	;volatile
  2449                           
  2450                           ; BSR set to: 15
  2451                           ;system.c: 106: LATD = 0;
  2452  002FA6  6A8C               	clrf	3980,c	;volatile
  2453                           
  2454                           ; BSR set to: 15
  2455                           ;system.c: 107: LATE = 0;
  2456  002FA8  6A8D               	clrf	3981,c	;volatile
  2457                           
  2458                           ; BSR set to: 15
  2459                           ;system.c: 109: TRISDbits.TRISD2 = 0;
  2460  002FAA  9495               	bcf	3989,2,c	;volatile
  2461                           
  2462                           ; BSR set to: 15
  2463                           ;system.c: 110: LATDbits.LATD2 = 1;
  2464  002FAC  848C               	bsf	3980,2,c	;volatile
  2465                           
  2466                           ; BSR set to: 15
  2467                           ;system.c: 111: TRISCbits.TRISC6 = 0;
  2468  002FAE  9C94               	bcf	3988,6,c	;volatile
  2469                           
  2470                           ; BSR set to: 15
  2471                           ;system.c: 112: LATCbits.LATC6 = 0;
  2472  002FB0  9C8B               	bcf	3979,6,c	;volatile
  2473                           
  2474                           ; BSR set to: 15
  2475                           ;system.c: 115: TRISBbits.TRISB0 = 1;
  2476  002FB2  8093               	bsf	3987,0,c	;volatile
  2477                           
  2478                           ; BSR set to: 15
  2479                           ;system.c: 116: TRISBbits.TRISB2 = 1;
  2480  002FB4  8493               	bsf	3987,2,c	;volatile
  2481                           
  2482                           ; BSR set to: 15
  2483                           ;system.c: 117: TRISAbits.TRISA2 = 0;
  2484  002FB6  9492               	bcf	3986,2,c	;volatile
  2485                           
  2486                           ; BSR set to: 15
  2487                           ;system.c: 118: TRISAbits.TRISA3 = 0;
  2488  002FB8  9692               	bcf	3986,3,c	;volatile
  2489                           
  2490                           ; BSR set to: 15
  2491                           ;system.c: 121: TRISBbits.TRISB3 = 0;
  2492  002FBA  9693               	bcf	3987,3,c	;volatile
  2493                           
  2494                           ; BSR set to: 15
  2495                           ;system.c: 122: LATBbits.LATB3 = 1;
  2496  002FBC  868A               	bsf	3978,3,c	;volatile
  2497                           
  2498                           ; BSR set to: 15
  2499                           ;system.c: 123: TRISDbits.TRISD7 = 0;
  2500  002FBE  9E95               	bcf	3989,7,c	;volatile
  2501                           
  2502                           ; BSR set to: 15
  2503                           ;system.c: 124: LATDbits.LATD7 = 1;
  2504  002FC0  8E8C               	bsf	3980,7,c	;volatile
  2505                           
  2506                           ; BSR set to: 15
  2507                           ;system.c: 125: TRISBbits.TRISB1 = 1;
  2508  002FC2  8293               	bsf	3987,1,c	;volatile
  2509                           
  2510                           ; BSR set to: 15
  2511                           ;system.c: 139: TRISBbits.TRISB5 = 1;
  2512  002FC4  8A93               	bsf	3987,5,c	;volatile
  2513                           
  2514                           ; BSR set to: 15
  2515                           ;system.c: 140: TRISCbits.TRISC7 = 0;
  2516  002FC6  9E94               	bcf	3988,7,c	;volatile
  2517                           
  2518                           ; BSR set to: 15
  2519                           ;system.c: 141: TRISBbits.TRISB4 = 0;
  2520  002FC8  9893               	bcf	3987,4,c	;volatile
  2521                           
  2522                           ;system.c: 145: SSP1STAT = 0xC0;
  2523  002FCA  0EC0               	movlw	192
  2524  002FCC  6EC7               	movwf	4039,c	;volatile
  2525                           
  2526                           ;system.c: 146: SSP1CON1 = 0x21;
  2527  002FCE  0E21               	movlw	33
  2528  002FD0  6EC6               	movwf	4038,c	;volatile
  2529                           
  2530                           ; BSR set to: 15
  2531                           ;system.c: 167: TRISDbits.TRISD3 = 0;
  2532  002FD2  9695               	bcf	3989,3,c	;volatile
  2533                           
  2534                           ; BSR set to: 15
  2535                           ;system.c: 168: LATDbits.LATD3 = 1;
  2536  002FD4  868C               	bsf	3980,3,c	;volatile
  2537                           
  2538                           ; BSR set to: 15
  2539                           ;system.c: 171: INTCON2bits.INTEDG1 = 0;
  2540  002FD6  9AF1               	bcf	intcon2,5,c	;volatile
  2541                           
  2542                           ; BSR set to: 15
  2543                           ;system.c: 181: TRISCbits.TRISC2 = 0;
  2544  002FD8  9494               	bcf	3988,2,c	;volatile
  2545                           
  2546                           ; BSR set to: 15
  2547                           ;system.c: 182: LATCbits.LATC2 = 1;
  2548  002FDA  848B               	bsf	3979,2,c	;volatile
  2549                           
  2550                           ; BSR set to: 15
  2551                           ;system.c: 185: TRISDbits.TRISD5 = 0;
  2552  002FDC  9A95               	bcf	3989,5,c	;volatile
  2553                           
  2554                           ; BSR set to: 15
  2555                           ;system.c: 186: LATDbits.LATD5 = 1;
  2556  002FDE  8A8C               	bsf	3980,5,c	;volatile
  2557                           
  2558                           ; BSR set to: 15
  2559                           ;system.c: 190: INTCONbits.GIEH = 1;
  2560  002FE0  8EF2               	bsf	intcon,7,c	;volatile
  2561                           
  2562                           ; BSR set to: 15
  2563                           ;system.c: 192: INTCON3bits.INT1IF = 0;
  2564  002FE2  90F0               	bcf	intcon3,0,c	;volatile
  2565                           
  2566                           ; BSR set to: 15
  2567                           ;system.c: 193: INTCON3bits.INT1IE = 1;
  2568  002FE4  86F0               	bsf	intcon3,3,c	;volatile
  2569                           
  2570                           ; BSR set to: 15
  2571                           ;system.c: 197: LCD_Initialize();
  2572  002FE6  EF36  F01B         	goto	_LCD_Initialize	;wreg free
  2573  002FEA                     __end_of_SYSTEM_Initialize:
  2574                           	opt stack 0
  2575                           tblptru	equ	0xFF8
  2576                           tblptrh	equ	0xFF7
  2577                           tblptrl	equ	0xFF6
  2578                           tablat	equ	0xFF5
  2579                           intcon	equ	0xFF2
  2580                           intcon2	equ	0xFF1
  2581                           intcon3	equ	0xFF0
  2582                           postinc0	equ	0xFEE
  2583                           wreg	equ	0xFE8
  2584                           postdec1	equ	0xFE5
  2585                           fsr1h	equ	0xFE2
  2586                           fsr1l	equ	0xFE1
  2587                           
  2588 ;; *************** function _LCD_Initialize *****************
  2589 ;; Defined at:
  2590 ;;		line 150 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : F/F
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2608 ;;Total ram usage:        0 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    5
  2611 ;; This function calls:
  2612 ;;		_DELAY_ms
  2613 ;;		_I2CWrite
  2614 ;; This function is called by:
  2615 ;;		_SYSTEM_Initialize
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text5
  2620  00366C                     __ptext5:
  2621                           	opt stack 0
  2622  00366C                     _LCD_Initialize:
  2623                           	opt stack 24
  2624                           
  2625                           ; BSR set to: 15
  2626                           ;lcd.c: 153: TRISD |= 0x53;
  2627                           
  2628                           ;incstack = 0
  2629  00366C  0E53               	movlw	83
  2630  00366E  1295               	iorwf	3989,f,c	;volatile
  2631                           
  2632                           ; BSR set to: 15
  2633                           ;lcd.c: 156: PIR3bits.SSP2IF = 0;
  2634  003670  9EA4               	bcf	4004,7,c	;volatile
  2635                           
  2636                           ; BSR set to: 15
  2637                           ;lcd.c: 157: SSP2STAT = 0x00;
  2638  003672  6A73               	clrf	3955,c	;volatile
  2639                           
  2640                           ; BSR set to: 15
  2641                           ;lcd.c: 159: SSP2ADD = 0xF0;
  2642  003674  0EF0               	movlw	240
  2643  003676  6E74               	movwf	3956,c	;volatile
  2644                           
  2645                           ; BSR set to: 15
  2646                           ;lcd.c: 160: SSP2CON1 = 0x28;
  2647  003678  0E28               	movlw	40
  2648  00367A  6E72               	movwf	3954,c	;volatile
  2649                           
  2650                           ; BSR set to: 15
  2651                           ;lcd.c: 161: SSP2CON2 = 0x00;
  2652  00367C  6A71               	clrf	3953,c	;volatile
  2653                           
  2654                           ; BSR set to: 15
  2655                           ;lcd.c: 162: PIE3bits.SSP2IE = 1;
  2656  00367E  8EA3               	bsf	4003,7,c	;volatile
  2657                           
  2658                           ; BSR set to: 15
  2659                           ;lcd.c: 164: INTCONbits.GIEH = 1;
  2660  003680  8EF2               	bsf	intcon,7,c	;volatile
  2661                           
  2662                           ; BSR set to: 15
  2663                           ;lcd.c: 165: INTCONbits.GIEL = 1;
  2664  003682  8CF2               	bsf	intcon,6,c	;volatile
  2665                           
  2666                           ; BSR set to: 15
  2667                           ;lcd.c: 167: DELAY_ms(300);
  2668  003684  0E01               	movlw	1
  2669  003686  6E1E               	movwf	DELAY_ms@ms+1,c
  2670  003688  0E2C               	movlw	44
  2671  00368A  6E1D               	movwf	DELAY_ms@ms,c
  2672  00368C  EC3A  F014         	call	_DELAY_ms	;wreg free
  2673                           
  2674                           ;lcd.c: 169: LCDCommand[0] = 0x3E << 1;
  2675  003690  0E7C               	movlw	124
  2676  003692  0100               	movlb	0	; () banked
  2677  003694  6FD1               	movwf	_LCDCommand& (0+255),b
  2678                           
  2679                           ; BSR set to: 0
  2680                           ;lcd.c: 170: LCDCommand[1] = 0x81;
  2681  003696  0E81               	movlw	129
  2682  003698  6FD2               	movwf	(_LCDCommand+1)& (0+255),b
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;lcd.c: 171: LCDCommand[2] = 0x00;
  2686  00369A  6BD3               	clrf	(_LCDCommand+2)& (0+255),b
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;lcd.c: 173: I2CWrite(3, 0);
  2690  00369C  6A1D               	clrf	I2CWrite@BufferLen,c
  2691  00369E  0E03               	movlw	3
  2692  0036A0  ECE0  F01D         	call	_I2CWrite
  2693                           
  2694                           ;lcd.c: 175: DELAY_ms(200);
  2695  0036A4  6A1E               	clrf	DELAY_ms@ms+1,c
  2696  0036A6  0EC8               	movlw	200
  2697  0036A8  6E1D               	movwf	DELAY_ms@ms,c
  2698  0036AA  EF3A  F014         	goto	_DELAY_ms	;wreg free
  2699  0036AE                     __end_of_LCD_Initialize:
  2700                           	opt stack 0
  2701                           tblptru	equ	0xFF8
  2702                           tblptrh	equ	0xFF7
  2703                           tblptrl	equ	0xFF6
  2704                           tablat	equ	0xFF5
  2705                           intcon	equ	0xFF2
  2706                           intcon2	equ	0xFF1
  2707                           intcon3	equ	0xFF0
  2708                           postinc0	equ	0xFEE
  2709                           wreg	equ	0xFE8
  2710                           postdec1	equ	0xFE5
  2711                           fsr1h	equ	0xFE2
  2712                           fsr1l	equ	0xFE1
  2713                           
  2714 ;; *************** function _Run_Demo *****************
  2715 ;; Defined at:
  2716 ;;		line 282 in file "../src/task.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : F/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;Total ram usage:        0 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; Hardware stack levels required when called:   17
  2737 ;; This function calls:
  2738 ;;		_run_star_demo
  2739 ;; This function is called by:
  2740 ;;		_main
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744                           	psect	text6
  2745  003C42                     __ptext6:
  2746                           	opt stack 0
  2747  003C42                     _Run_Demo:
  2748                           	opt stack 13
  2749                           
  2750                           ;task.c: 288: run_star_demo();
  2751                           
  2752                           ;incstack = 0
  2753  003C42  EFC0  F00A         	goto	_run_star_demo	;wreg free
  2754  003C46                     __end_of_Run_Demo:
  2755                           	opt stack 0
  2756                           tblptru	equ	0xFF8
  2757                           tblptrh	equ	0xFF7
  2758                           tblptrl	equ	0xFF6
  2759                           tablat	equ	0xFF5
  2760                           intcon	equ	0xFF2
  2761                           intcon2	equ	0xFF1
  2762                           intcon3	equ	0xFF0
  2763                           postinc0	equ	0xFEE
  2764                           wreg	equ	0xFE8
  2765                           postdec1	equ	0xFE5
  2766                           fsr1h	equ	0xFE2
  2767                           fsr1l	equ	0xFE1
  2768                           
  2769 ;; *************** function _run_star_demo *****************
  2770 ;; Defined at:
  2771 ;;		line 112 in file "../src/star_demo.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  switch_val      1   26[BANK1 ] unsigned char 
  2776 ;;  sw_layer_ack    1   23[BANK1 ] unsigned char 
  2777 ;;  mac_ack_stat    1    0        unsigned char 
  2778 ;;  select_ed       1   27[BANK1 ] unsigned char 
  2779 ;;  update_ed       1   24[BANK1 ] unsigned char 
  2780 ;;  PressedButto    1   25[BANK1 ] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : F/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2791 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2792 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2793 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2794 ;;Total ram usage:       12 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; Hardware stack levels required when called:   16
  2797 ;; This function calls:
  2798 ;;		_ButtonPressed
  2799 ;;		_DELAY_ms
  2800 ;;		_DemoOutput_UpdateTxRx
  2801 ;;		_LCDDisplay
  2802 ;;		_LCD_Erase
  2803 ;;		_LCD_Update
  2804 ;;		_MiApp_BroadcastPacket
  2805 ;;		_MiApp_EstablishConnection
  2806 ;;		_MiApp_UnicastConnection
  2807 ;;		_MiApp_UnicastStar
  2808 ;;		_MiWi_TickGet
  2809 ;;		_Process_RxMessage
  2810 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  2811 ;;		___lbmod
  2812 ;;		_sprintf
  2813 ;; This function is called by:
  2814 ;;		_Run_Demo
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text7
  2819  001580                     __ptext7:
  2820                           	opt stack 0
  2821  001580                     _run_star_demo:
  2822                           	opt stack 13
  2823                           
  2824                           ;star_demo.c: 114: t1 = MiWi_TickGet ();
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;incstack = 0
  2828  001580  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  2829  001584  C01D  F108         	movff	?_MiWi_TickGet,_t1
  2830  001588  C01E  F109         	movff	?_MiWi_TickGet+1,_t1+1
  2831  00158C  C01F  F10A         	movff	?_MiWi_TickGet+2,_t1+2
  2832  001590  C020  F10B         	movff	?_MiWi_TickGet+3,_t1+3
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;star_demo.c: 115: display_connections = 1;
  2836  001594  0E01               	movlw	1
  2837  001596  6FE9               	movwf	_display_connections& (0+255),b
  2838                           
  2839                           ;star_demo.c: 116: while(display_connections)
  2840  001598  D265               	goto	l13677
  2841  00159A                     l13521:
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;star_demo.c: 117: {
  2845                           ;star_demo.c: 119: if (Process_RxMessage ())
  2846  00159A  ECCA  F01A         	call	_Process_RxMessage	;wreg free
  2847  00159E  0900               	iorlw	0
  2848  0015A0  E001 D218          	bnz	l13651
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;star_demo.c: 123: else
  2852                           ;star_demo.c: 124: {
  2853                           ;star_demo.c: 132: uint8_t PressedButton = ButtonPressed();
  2854  0015A4  EC4C  F016         	call	_ButtonPressed	;wreg free
  2855  0015A8  0101               	movlb	1	; () banked
  2856  0015AA  6F82               	movwf	run_star_demo@PressedButton& (0+255),b
  2857                           
  2858                           ; BSR set to: 1
  2859                           ;star_demo.c: 133: if ( PressedButton == 1 || PressedButton == 2)
  2860  0015AC  0582               	decf	run_star_demo@PressedButton& (0+255),w,b
  2861  0015AE  E004               	bz	l13531
  2862                           
  2863                           ; BSR set to: 1
  2864  0015B0  0E02               	movlw	2
  2865  0015B2  1982               	xorwf	run_star_demo@PressedButton& (0+255),w,b
  2866  0015B4  E001 D20E          	bnz	l13651
  2867  0015B8                     l13531:
  2868                           
  2869                           ; BSR set to: 1
  2870                           ;star_demo.c: 134: {
  2871                           ;star_demo.c: 136: if (role)
  2872  0015B8  5041               	movf	_role,w,c
  2873  0015BA  E036               	bz	l1215
  2874                           
  2875                           ; BSR set to: 1
  2876                           ;star_demo.c: 137: {
  2877                           ;star_demo.c: 145: {TxData = 0;};
  2878  0015BC  0100               	movlb	0	; () banked
  2879  0015BE  6BE5               	clrf	_TxData& (0+255),b
  2880                           
  2881                           ;star_demo.c: 146: for(i = 0; i < 21; i++)
  2882  0015C0  6A37               	clrf	_i,c
  2883  0015C2                     l13535:
  2884                           
  2885                           ; BSR set to: 0
  2886  0015C2  0E14               	movlw	20
  2887  0015C4  6437               	cpfsgt	_i,c
  2888  0015C6  D001               	goto	l13539
  2889  0015C8  D024               	goto	l13547
  2890  0015CA                     l13539:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;star_demo.c: 147: {
  2894                           ;star_demo.c: 148: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  2895  0015CA  0E06               	movlw	6
  2896  0015CC  6E1D               	movwf	___lbmod@divisor,c
  2897  0015CE  51E7               	movf	_TxSynCount& (0+255),w,b
  2898  0015D0  EC2D  F01D         	call	___lbmod
  2899  0015D4  0D15               	mullw	21
  2900  0015D6  0EA7               	movlw	low _MiWi
  2901  0015D8  0101               	movlb	1	; () banked
  2902  0015DA  6F79               	movwf	??_run_star_demo& (0+255),b
  2903  0015DC  0EFD               	movlw	high _MiWi
  2904  0015DE  6F7A               	movwf	(??_run_star_demo+1)& (0+255),b
  2905  0015E0  50F3               	movf	prodl,w,c
  2906  0015E2  2779               	addwf	??_run_star_demo& (0+255),f,b
  2907  0015E4  50F4               	movf	prodh,w,c
  2908  0015E6  237A               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  2909  0015E8  5037               	movf	_i,w,c
  2910  0015EA  2779               	addwf	??_run_star_demo& (0+255),f,b
  2911  0015EC  0E00               	movlw	0
  2912  0015EE  237A               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  2913  0015F0  C179  FFF6         	movff	??_run_star_demo,tblptrl
  2914  0015F4  C17A  FFF7         	movff	??_run_star_demo+1,tblptrh
  2915  0015F8                     	if	0	;tblptru may be non-zero
  2916  0015F8                     	endif
  2917  0015F8                     	if	0	;tblptru may be non-zero
  2918  0015F8                     	endif
  2919  0015F8  0E18               	movlw	low _TxBuffer
  2920  0015FA  0100               	movlb	0	; () banked
  2921  0015FC  25E5               	addwf	_TxData& (0+255),w,b
  2922  0015FE  6ED9               	movwf	fsr2l,c
  2923  001600  6ADA               	clrf	fsr2h,c
  2924  001602  0E01               	movlw	high _TxBuffer
  2925  001604  22DA               	addwfc	fsr2h,f,c
  2926  001606  0008               	tblrd		*
  2927  001608  CFF5 FFDF          	movff	tablat,indf2
  2928                           
  2929                           ; BSR set to: 0
  2930  00160C  2BE5               	incf	_TxData& (0+255),f,b
  2931                           
  2932                           ; BSR set to: 0
  2933  00160E  2A37               	incf	_i,f,c
  2934  001610  D7D8               	goto	l13535
  2935  001612                     l13547:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;star_demo.c: 149: }
  2939                           ;star_demo.c: 150: TxSynCount++;
  2940  001612  2BE7               	incf	_TxSynCount& (0+255),f,b
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;star_demo.c: 161: MiApp_BroadcastPacket (0);
  2944  001614  0E00               	movlw	0
  2945  001616  EC83  F01D         	call	_MiApp_BroadcastPacket
  2946                           
  2947                           ; BSR set to: 0
  2948                           ;star_demo.c: 164: DemoOutput_UpdateTxRx(++TxNum, RxNum);
  2949  00161A  C0E4  F089         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  2950  00161E  2BE6               	incf	_TxNum& (0+255),f,b
  2951  001620  51E6               	movf	_TxNum& (0+255),w,b
  2952  001622  EC0E  F01E         	call	_DemoOutput_UpdateTxRx
  2953                           
  2954                           ;star_demo.c: 166: }
  2955  001626  D1D6               	goto	l13651
  2956  001628                     l1215:
  2957                           
  2958                           ; BSR set to: 1
  2959                           ;star_demo.c: 167: else
  2960                           ;star_demo.c: 168: {
  2961                           ;star_demo.c: 170: uint8_t select_ed = 0;
  2962  001628  6B84               	clrf	run_star_demo@select_ed& (0+255),b
  2963                           
  2964                           ; BSR set to: 1
  2965                           ;star_demo.c: 171: chk_sel_status = 1;
  2966  00162A  0E01               	movlw	1
  2967  00162C  0100               	movlb	0	; () banked
  2968  00162E  6FE8               	movwf	_chk_sel_status& (0+255),b
  2969                           
  2970                           ;star_demo.c: 172: bool update_ed = 1;
  2971  001630  0101               	movlb	1	; () banked
  2972  001632  6F81               	movwf	run_star_demo@update_ed& (0+255),b
  2973                           
  2974                           ;star_demo.c: 173: while(update_ed == 1)
  2975  001634  D1CB               	goto	l13649
  2976  001636                     l13555:
  2977                           
  2978                           ; BSR set to: 1
  2979                           ;star_demo.c: 174: {
  2980                           ;star_demo.c: 176: LCD_Erase();
  2981  001636  ECAD  F01D         	call	_LCD_Erase	;wreg free
  2982                           
  2983                           ;star_demo.c: 177: if (myConnectionIndex_in_PanCo == select_ed)
  2984  00163A  0101               	movlb	1	; () banked
  2985  00163C  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  2986  00163E  0100               	movlb	0	; () banked
  2987  001640  19FD               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  2988  001642  E13F               	bnz	l13561
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;star_demo.c: 178: {
  2992                           ;star_demo.c: 179: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x-me",END_DEVICE
      +                          S_Short_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[
      +                          0],
  2993                           ;star_demo.c: 180: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  2994  001644  0E40               	movlw	low _LCDText
  2995  001646  6F64               	movwf	sprintf@sp& (0+255),b
  2996  001648  0E01               	movlw	high _LCDText
  2997  00164A  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  2998  00164C  0E16               	movlw	low STR_13
  2999  00164E  6F66               	movwf	sprintf@f& (0+255),b
  3000  001650  0EFF               	movlw	high STR_13
  3001  001652  6F67               	movwf	(sprintf@f+1)& (0+255),b
  3002  001654  0101               	movlb	1	; () banked
  3003  001656  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3004  001658  0D04               	mullw	4
  3005  00165A  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  3006  00165C  24F3               	addwf	prodl,w,c
  3007  00165E  6ED9               	movwf	fsr2l,c
  3008  001660  0E03               	movlw	high (_END_DEVICES_Short_Address+3)
  3009  001662  20F4               	addwfc	prodh,w,c
  3010  001664  6EDA               	movwf	fsr2h,c
  3011  001666  50DF               	movf	indf2,w,c
  3012  001668  0100               	movlb	0	; () banked
  3013  00166A  6F68               	movwf	(?_sprintf+4)& (0+255),b
  3014  00166C  6B69               	clrf	(?_sprintf+5)& (0+255),b
  3015  00166E  0101               	movlb	1	; () banked
  3016  001670  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3017  001672  0D04               	mullw	4
  3018  001674  0E00               	movlw	low _END_DEVICES_Short_Address
  3019  001676  24F3               	addwf	prodl,w,c
  3020  001678  6ED9               	movwf	fsr2l,c
  3021  00167A  0E03               	movlw	high _END_DEVICES_Short_Address
  3022  00167C  20F4               	addwfc	prodh,w,c
  3023  00167E  6EDA               	movwf	fsr2h,c
  3024  001680  50DF               	movf	indf2,w,c
  3025  001682  0100               	movlb	0	; () banked
  3026  001684  6F6A               	movwf	(?_sprintf+6)& (0+255),b
  3027  001686  6B6B               	clrf	(?_sprintf+7)& (0+255),b
  3028  001688  0101               	movlb	1	; () banked
  3029  00168A  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3030  00168C  0D04               	mullw	4
  3031  00168E  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3032  001690  24F3               	addwf	prodl,w,c
  3033  001692  6ED9               	movwf	fsr2l,c
  3034  001694  0E03               	movlw	high (_END_DEVICES_Short_Address+1)
  3035  001696  20F4               	addwfc	prodh,w,c
  3036  001698  6EDA               	movwf	fsr2h,c
  3037  00169A  50DF               	movf	indf2,w,c
  3038  00169C  0100               	movlb	0	; () banked
  3039  00169E  6F6C               	movwf	(?_sprintf+8)& (0+255),b
  3040  0016A0  6B6D               	clrf	(?_sprintf+9)& (0+255),b
  3041  0016A2  0101               	movlb	1	; () banked
  3042  0016A4  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3043  0016A6  0D04               	mullw	4
  3044  0016A8  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3045  0016AA  24F3               	addwf	prodl,w,c
  3046  0016AC  6ED9               	movwf	fsr2l,c
  3047  0016AE  0E03               	movlw	high (_END_DEVICES_Short_Address+2)
  3048  0016B0  20F4               	addwfc	prodh,w,c
  3049  0016B2  6EDA               	movwf	fsr2h,c
  3050  0016B4  50DF               	movf	indf2,w,c
  3051  0016B6  0100               	movlb	0	; () banked
  3052  0016B8  6F6E               	movwf	(?_sprintf+10)& (0+255),b
  3053  0016BA  6B6F               	clrf	(?_sprintf+11)& (0+255),b
  3054  0016BC  EC95  F004         	call	_sprintf	;wreg free
  3055                           
  3056                           ;star_demo.c: 181: }
  3057  0016C0  D03E               	goto	l1222
  3058  0016C2                     l13561:
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;star_demo.c: 182: else
  3062                           ;star_demo.c: 183: {
  3063                           ;star_demo.c: 184: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3064                           ;star_demo.c: 185: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3065  0016C2  0E40               	movlw	low _LCDText
  3066  0016C4  6F64               	movwf	sprintf@sp& (0+255),b
  3067  0016C6  0E01               	movlw	high _LCDText
  3068  0016C8  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  3069  0016CA  0E2F               	movlw	low STR_14
  3070  0016CC  6F66               	movwf	sprintf@f& (0+255),b
  3071  0016CE  0EFF               	movlw	high STR_14
  3072  0016D0  6F67               	movwf	(sprintf@f+1)& (0+255),b
  3073  0016D2  0101               	movlb	1	; () banked
  3074  0016D4  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3075  0016D6  0D04               	mullw	4
  3076  0016D8  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  3077  0016DA  24F3               	addwf	prodl,w,c
  3078  0016DC  6ED9               	movwf	fsr2l,c
  3079  0016DE  0E03               	movlw	high (_END_DEVICES_Short_Address+3)
  3080  0016E0  20F4               	addwfc	prodh,w,c
  3081  0016E2  6EDA               	movwf	fsr2h,c
  3082  0016E4  50DF               	movf	indf2,w,c
  3083  0016E6  0100               	movlb	0	; () banked
  3084  0016E8  6F68               	movwf	(?_sprintf+4)& (0+255),b
  3085  0016EA  6B69               	clrf	(?_sprintf+5)& (0+255),b
  3086  0016EC  0101               	movlb	1	; () banked
  3087  0016EE  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3088  0016F0  0D04               	mullw	4
  3089  0016F2  0E00               	movlw	low _END_DEVICES_Short_Address
  3090  0016F4  24F3               	addwf	prodl,w,c
  3091  0016F6  6ED9               	movwf	fsr2l,c
  3092  0016F8  0E03               	movlw	high _END_DEVICES_Short_Address
  3093  0016FA  20F4               	addwfc	prodh,w,c
  3094  0016FC  6EDA               	movwf	fsr2h,c
  3095  0016FE  50DF               	movf	indf2,w,c
  3096  001700  0100               	movlb	0	; () banked
  3097  001702  6F6A               	movwf	(?_sprintf+6)& (0+255),b
  3098  001704  6B6B               	clrf	(?_sprintf+7)& (0+255),b
  3099  001706  0101               	movlb	1	; () banked
  3100  001708  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3101  00170A  0D04               	mullw	4
  3102  00170C  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3103  00170E  24F3               	addwf	prodl,w,c
  3104  001710  6ED9               	movwf	fsr2l,c
  3105  001712  0E03               	movlw	high (_END_DEVICES_Short_Address+1)
  3106  001714  20F4               	addwfc	prodh,w,c
  3107  001716  6EDA               	movwf	fsr2h,c
  3108  001718  50DF               	movf	indf2,w,c
  3109  00171A  0100               	movlb	0	; () banked
  3110  00171C  6F6C               	movwf	(?_sprintf+8)& (0+255),b
  3111  00171E  6B6D               	clrf	(?_sprintf+9)& (0+255),b
  3112  001720  0101               	movlb	1	; () banked
  3113  001722  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3114  001724  0D04               	mullw	4
  3115  001726  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3116  001728  24F3               	addwf	prodl,w,c
  3117  00172A  6ED9               	movwf	fsr2l,c
  3118  00172C  0E03               	movlw	high (_END_DEVICES_Short_Address+2)
  3119  00172E  20F4               	addwfc	prodh,w,c
  3120  001730  6EDA               	movwf	fsr2h,c
  3121  001732  50DF               	movf	indf2,w,c
  3122  001734  0100               	movlb	0	; () banked
  3123  001736  6F6E               	movwf	(?_sprintf+10)& (0+255),b
  3124  001738  6B6F               	clrf	(?_sprintf+11)& (0+255),b
  3125  00173A  EC95  F004         	call	_sprintf	;wreg free
  3126  00173E                     l1222:
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;star_demo.c: 186: }
  3130                           ;star_demo.c: 187: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3131                           ;star_demo.c: 188: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3132  00173E  0E40               	movlw	low _LCDText
  3133  001740  6F64               	movwf	sprintf@sp& (0+255),b
  3134  001742  0E01               	movlw	high _LCDText
  3135  001744  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  3136  001746  0E2F               	movlw	low STR_14
  3137  001748  6F66               	movwf	sprintf@f& (0+255),b
  3138  00174A  0EFF               	movlw	high STR_14
  3139  00174C  6F67               	movwf	(sprintf@f+1)& (0+255),b
  3140  00174E  0101               	movlb	1	; () banked
  3141  001750  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3142  001752  0D04               	mullw	4
  3143  001754  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  3144  001756  24F3               	addwf	prodl,w,c
  3145  001758  6ED9               	movwf	fsr2l,c
  3146  00175A  0E03               	movlw	high (_END_DEVICES_Short_Address+3)
  3147  00175C  20F4               	addwfc	prodh,w,c
  3148  00175E  6EDA               	movwf	fsr2h,c
  3149  001760  50DF               	movf	indf2,w,c
  3150  001762  0100               	movlb	0	; () banked
  3151  001764  6F68               	movwf	(?_sprintf+4)& (0+255),b
  3152  001766  6B69               	clrf	(?_sprintf+5)& (0+255),b
  3153  001768  0101               	movlb	1	; () banked
  3154  00176A  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3155  00176C  0D04               	mullw	4
  3156  00176E  0E00               	movlw	low _END_DEVICES_Short_Address
  3157  001770  24F3               	addwf	prodl,w,c
  3158  001772  6ED9               	movwf	fsr2l,c
  3159  001774  0E03               	movlw	high _END_DEVICES_Short_Address
  3160  001776  20F4               	addwfc	prodh,w,c
  3161  001778  6EDA               	movwf	fsr2h,c
  3162  00177A  50DF               	movf	indf2,w,c
  3163  00177C  0100               	movlb	0	; () banked
  3164  00177E  6F6A               	movwf	(?_sprintf+6)& (0+255),b
  3165  001780  6B6B               	clrf	(?_sprintf+7)& (0+255),b
  3166  001782  0101               	movlb	1	; () banked
  3167  001784  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3168  001786  0D04               	mullw	4
  3169  001788  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3170  00178A  24F3               	addwf	prodl,w,c
  3171  00178C  6ED9               	movwf	fsr2l,c
  3172  00178E  0E03               	movlw	high (_END_DEVICES_Short_Address+1)
  3173  001790  20F4               	addwfc	prodh,w,c
  3174  001792  6EDA               	movwf	fsr2h,c
  3175  001794  50DF               	movf	indf2,w,c
  3176  001796  0100               	movlb	0	; () banked
  3177  001798  6F6C               	movwf	(?_sprintf+8)& (0+255),b
  3178  00179A  6B6D               	clrf	(?_sprintf+9)& (0+255),b
  3179  00179C  0101               	movlb	1	; () banked
  3180  00179E  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3181  0017A0  0D04               	mullw	4
  3182  0017A2  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3183  0017A4  24F3               	addwf	prodl,w,c
  3184  0017A6  6ED9               	movwf	fsr2l,c
  3185  0017A8  0E03               	movlw	high (_END_DEVICES_Short_Address+2)
  3186  0017AA  20F4               	addwfc	prodh,w,c
  3187  0017AC  6EDA               	movwf	fsr2h,c
  3188  0017AE  50DF               	movf	indf2,w,c
  3189  0017B0  0100               	movlb	0	; () banked
  3190  0017B2  6F6E               	movwf	(?_sprintf+10)& (0+255),b
  3191  0017B4  6B6F               	clrf	(?_sprintf+11)& (0+255),b
  3192  0017B6  EC95  F004         	call	_sprintf	;wreg free
  3193                           
  3194                           ;star_demo.c: 189: sprintf((char *)&(LCDText[16]), (char*)"RB2: Change node");
  3195  0017BA  0E50               	movlw	low (_LCDText+16)
  3196  0017BC  6F64               	movwf	sprintf@sp& (0+255),b
  3197  0017BE  0E01               	movlw	high (_LCDText+16)
  3198  0017C0  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  3199  0017C2  0EA3               	movlw	low STR_16
  3200  0017C4  6F66               	movwf	sprintf@f& (0+255),b
  3201  0017C6  0EFF               	movlw	high STR_16
  3202  0017C8  6F67               	movwf	(sprintf@f+1)& (0+255),b
  3203  0017CA  EC95  F004         	call	_sprintf	;wreg free
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;star_demo.c: 190: LCD_Update();
  3207  0017CE  ECD5  F01D         	call	_LCD_Update	;wreg free
  3208                           
  3209                           ;star_demo.c: 191: chk_sel_status = 1;
  3210  0017D2  0E01               	movlw	1
  3211  0017D4  0100               	movlb	0	; () banked
  3212  0017D6  6FE8               	movwf	_chk_sel_status& (0+255),b
  3213                           
  3214                           ;star_demo.c: 193: while(chk_sel_status)
  3215  0017D8  D0F5               	goto	l13647
  3216  0017DA                     l13567:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;star_demo.c: 194: {
  3220                           ;star_demo.c: 196: uint8_t switch_val = ButtonPressed();
  3221  0017DA  EC4C  F016         	call	_ButtonPressed	;wreg free
  3222  0017DE  0101               	movlb	1	; () banked
  3223  0017E0  6F83               	movwf	run_star_demo@switch_val& (0+255),b
  3224                           
  3225                           ; BSR set to: 1
  3226                           ;star_demo.c: 198: Process_RxMessage ();
  3227  0017E2  ECCA  F01A         	call	_Process_RxMessage	;wreg free
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;star_demo.c: 199: bool sw_layer_ack_status , mac_ack_status;
  3231                           ;star_demo.c: 200: if(switch_val == 1)
  3232  0017E6  0101               	movlb	1	; () banked
  3233  0017E8  0583               	decf	run_star_demo@switch_val& (0+255),w,b
  3234  0017EA  E001 D0CE          	bnz	l13637
  3235                           
  3236                           ; BSR set to: 1
  3237                           ;star_demo.c: 201: {
  3238                           ;star_demo.c: 202: update_ed = 0;
  3239  0017EE  6B81               	clrf	run_star_demo@update_ed& (0+255),b
  3240                           
  3241                           ;star_demo.c: 204: TxSynCount2++;
  3242  0017F0  0100               	movlb	0	; () banked
  3243  0017F2  6BE8               	clrf	_chk_sel_status& (0+255),b
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;star_demo.c: 205: if (myConnectionIndex_in_PanCo == select_ed)
  3247  0017F4  0101               	movlb	1	; () banked
  3248  0017F6  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3249  0017F8  0100               	movlb	0	; () banked
  3250  0017FA  19FD               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3251  0017FC  E131               	bnz	l1226
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;star_demo.c: 206: {
  3255                           ;star_demo.c: 207: {TxData = 0;};
  3256  0017FE  6BE5               	clrf	_TxData& (0+255),b
  3257                           
  3258                           ;star_demo.c: 208: for (i = 0 ; i < 21 ; i++)
  3259  001800  6A37               	clrf	_i,c
  3260  001802                     l13579:
  3261                           
  3262                           ; BSR set to: 0
  3263  001802  0E14               	movlw	20
  3264  001804  6437               	cpfsgt	_i,c
  3265  001806  D001               	goto	l13583
  3266  001808  D024               	goto	l13591
  3267  00180A                     l13583:
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;star_demo.c: 209: {
  3271                           ;star_demo.c: 210: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  3272  00180A  0E06               	movlw	6
  3273  00180C  6E1D               	movwf	___lbmod@divisor,c
  3274  00180E  51E7               	movf	_TxSynCount& (0+255),w,b
  3275  001810  EC2D  F01D         	call	___lbmod
  3276  001814  0D15               	mullw	21
  3277  001816  0EA7               	movlw	low _MiWi
  3278  001818  0101               	movlb	1	; () banked
  3279  00181A  6F79               	movwf	??_run_star_demo& (0+255),b
  3280  00181C  0EFD               	movlw	high _MiWi
  3281  00181E  6F7A               	movwf	(??_run_star_demo+1)& (0+255),b
  3282  001820  50F3               	movf	prodl,w,c
  3283  001822  2779               	addwf	??_run_star_demo& (0+255),f,b
  3284  001824  50F4               	movf	prodh,w,c
  3285  001826  237A               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3286  001828  5037               	movf	_i,w,c
  3287  00182A  2779               	addwf	??_run_star_demo& (0+255),f,b
  3288  00182C  0E00               	movlw	0
  3289  00182E  237A               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3290  001830  C179  FFF6         	movff	??_run_star_demo,tblptrl
  3291  001834  C17A  FFF7         	movff	??_run_star_demo+1,tblptrh
  3292  001838                     	if	0	;tblptru may be non-zero
  3293  001838                     	endif
  3294  001838                     	if	0	;tblptru may be non-zero
  3295  001838                     	endif
  3296  001838  0E18               	movlw	low _TxBuffer
  3297  00183A  0100               	movlb	0	; () banked
  3298  00183C  25E5               	addwf	_TxData& (0+255),w,b
  3299  00183E  6ED9               	movwf	fsr2l,c
  3300  001840  6ADA               	clrf	fsr2h,c
  3301  001842  0E01               	movlw	high _TxBuffer
  3302  001844  22DA               	addwfc	fsr2h,f,c
  3303  001846  0008               	tblrd		*
  3304  001848  CFF5 FFDF          	movff	tablat,indf2
  3305                           
  3306                           ; BSR set to: 0
  3307  00184C  2BE5               	incf	_TxData& (0+255),f,b
  3308                           
  3309                           ; BSR set to: 0
  3310  00184E  2A37               	incf	_i,f,c
  3311  001850  D7D8               	goto	l13579
  3312  001852                     l13591:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;star_demo.c: 211: }
  3316                           ;star_demo.c: 218: mac_ack_status = MiApp_UnicastConnection (0, 0);
  3317  001852  0E00               	movlw	0
  3318  001854  6BA4               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  3319  001856  EC4F  F01C         	call	_MiApp_UnicastConnection
  3320  00185A                     l13593:
  3321                           
  3322                           ;star_demo.c: 220: TxNum++;
  3323  00185A  0100               	movlb	0	; () banked
  3324  00185C  2BE6               	incf	_TxNum& (0+255),f,b
  3325                           
  3326                           ;star_demo.c: 221: }
  3327  00185E  D086               	goto	l1229
  3328  001860                     l1226:
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;star_demo.c: 223: else
  3332                           ;star_demo.c: 224: {
  3333                           ;star_demo.c: 229: {TxData = 0;};
  3334  001860  6BE5               	clrf	_TxData& (0+255),b
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;star_demo.c: 230: TxBuffer[TxData++] = 0xCC;
  3338  001862  0E18               	movlw	low _TxBuffer
  3339  001864  25E5               	addwf	_TxData& (0+255),w,b
  3340  001866  6ED9               	movwf	fsr2l,c
  3341  001868  6ADA               	clrf	fsr2h,c
  3342  00186A  0E01               	movlw	high _TxBuffer
  3343  00186C  22DA               	addwfc	fsr2h,f,c
  3344  00186E  0ECC               	movlw	204
  3345  001870  6EDF               	movwf	indf2,c
  3346                           
  3347                           ; BSR set to: 0
  3348  001872  2BE5               	incf	_TxData& (0+255),f,b
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;star_demo.c: 231: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[0];
  3352  001874  0101               	movlb	1	; () banked
  3353  001876  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3354  001878  0D04               	mullw	4
  3355  00187A  0E00               	movlw	low _END_DEVICES_Short_Address
  3356  00187C  24F3               	addwf	prodl,w,c
  3357  00187E  6ED9               	movwf	fsr2l,c
  3358  001880  0E03               	movlw	high _END_DEVICES_Short_Address
  3359  001882  20F4               	addwfc	prodh,w,c
  3360  001884  6EDA               	movwf	fsr2h,c
  3361  001886  0E18               	movlw	low _TxBuffer
  3362  001888  0100               	movlb	0	; () banked
  3363  00188A  25E5               	addwf	_TxData& (0+255),w,b
  3364  00188C  6EE1               	movwf	fsr1l,c
  3365  00188E  6AE2               	clrf	fsr1h,c
  3366  001890  0E01               	movlw	high _TxBuffer
  3367  001892  22E2               	addwfc	fsr1h,f,c
  3368  001894  CFDF FFE7          	movff	indf2,indf1
  3369                           
  3370                           ; BSR set to: 0
  3371  001898  2BE5               	incf	_TxData& (0+255),f,b
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;star_demo.c: 232: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[1];
  3375  00189A  0101               	movlb	1	; () banked
  3376  00189C  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3377  00189E  0D04               	mullw	4
  3378  0018A0  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3379  0018A2  24F3               	addwf	prodl,w,c
  3380  0018A4  6ED9               	movwf	fsr2l,c
  3381  0018A6  0E03               	movlw	high (_END_DEVICES_Short_Address+1)
  3382  0018A8  20F4               	addwfc	prodh,w,c
  3383  0018AA  6EDA               	movwf	fsr2h,c
  3384  0018AC  0E18               	movlw	low _TxBuffer
  3385  0018AE  0100               	movlb	0	; () banked
  3386  0018B0  25E5               	addwf	_TxData& (0+255),w,b
  3387  0018B2  6EE1               	movwf	fsr1l,c
  3388  0018B4  6AE2               	clrf	fsr1h,c
  3389  0018B6  0E01               	movlw	high _TxBuffer
  3390  0018B8  22E2               	addwfc	fsr1h,f,c
  3391  0018BA  CFDF FFE7          	movff	indf2,indf1
  3392                           
  3393                           ; BSR set to: 0
  3394  0018BE  2BE5               	incf	_TxData& (0+255),f,b
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;star_demo.c: 233: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[2];
  3398  0018C0  0101               	movlb	1	; () banked
  3399  0018C2  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3400  0018C4  0D04               	mullw	4
  3401  0018C6  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3402  0018C8  24F3               	addwf	prodl,w,c
  3403  0018CA  6ED9               	movwf	fsr2l,c
  3404  0018CC  0E03               	movlw	high (_END_DEVICES_Short_Address+2)
  3405  0018CE  20F4               	addwfc	prodh,w,c
  3406  0018D0  6EDA               	movwf	fsr2h,c
  3407  0018D2  0E18               	movlw	low _TxBuffer
  3408  0018D4  0100               	movlb	0	; () banked
  3409  0018D6  25E5               	addwf	_TxData& (0+255),w,b
  3410  0018D8  6EE1               	movwf	fsr1l,c
  3411  0018DA  6AE2               	clrf	fsr1h,c
  3412  0018DC  0E01               	movlw	high _TxBuffer
  3413  0018DE  22E2               	addwfc	fsr1h,f,c
  3414  0018E0  CFDF FFE7          	movff	indf2,indf1
  3415                           
  3416                           ; BSR set to: 0
  3417  0018E4  2BE5               	incf	_TxData& (0+255),f,b
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;star_demo.c: 234: for (i = 4 ; i < 25 ; i++)
  3421  0018E6  0E04               	movlw	4
  3422  0018E8  6E37               	movwf	_i,c
  3423  0018EA                     l13613:
  3424                           
  3425                           ; BSR set to: 0
  3426  0018EA  0E18               	movlw	24
  3427  0018EC  6437               	cpfsgt	_i,c
  3428  0018EE  D001               	goto	l13617
  3429  0018F0  D02D               	goto	l13625
  3430  0018F2                     l13617:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;star_demo.c: 235: {
  3434                           ;star_demo.c: 236: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i-4];
  3435  0018F2  0EFC               	movlw	252
  3436  0018F4  0101               	movlb	1	; () banked
  3437  0018F6  6F79               	movwf	??_run_star_demo& (0+255),b
  3438  0018F8  697A               	setf	(??_run_star_demo+1)& (0+255),b
  3439  0018FA  0E06               	movlw	6
  3440  0018FC  6E1D               	movwf	___lbmod@divisor,c
  3441  0018FE  0100               	movlb	0	; () banked
  3442  001900  51E7               	movf	_TxSynCount& (0+255),w,b
  3443  001902  EC2D  F01D         	call	___lbmod
  3444  001906  0D15               	mullw	21
  3445  001908  0EA7               	movlw	low _MiWi
  3446  00190A  0101               	movlb	1	; () banked
  3447  00190C  6F7B               	movwf	(??_run_star_demo+2)& (0+255),b
  3448  00190E  0EFD               	movlw	high _MiWi
  3449  001910  6F7C               	movwf	(??_run_star_demo+3)& (0+255),b
  3450  001912  50F3               	movf	prodl,w,c
  3451  001914  277B               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3452  001916  50F4               	movf	prodh,w,c
  3453  001918  237C               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3454  00191A  5037               	movf	_i,w,c
  3455  00191C  277B               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3456  00191E  0E00               	movlw	0
  3457  001920  237C               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3458  001922  5179               	movf	??_run_star_demo& (0+255),w,b
  3459  001924  277B               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3460  001926  517A               	movf	(??_run_star_demo+1)& (0+255),w,b
  3461  001928  237C               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3462  00192A  C17B  FFF6         	movff	??_run_star_demo+2,tblptrl
  3463  00192E  C17C  FFF7         	movff	??_run_star_demo+3,tblptrh
  3464  001932                     	if	0	;tblptru may be non-zero
  3465  001932                     	endif
  3466  001932                     	if	0	;tblptru may be non-zero
  3467  001932                     	endif
  3468  001932  0E18               	movlw	low _TxBuffer
  3469  001934  0100               	movlb	0	; () banked
  3470  001936  25E5               	addwf	_TxData& (0+255),w,b
  3471  001938  6ED9               	movwf	fsr2l,c
  3472  00193A  6ADA               	clrf	fsr2h,c
  3473  00193C  0E01               	movlw	high _TxBuffer
  3474  00193E  22DA               	addwfc	fsr2h,f,c
  3475  001940  0008               	tblrd		*
  3476  001942  CFF5 FFDF          	movff	tablat,indf2
  3477                           
  3478                           ; BSR set to: 0
  3479  001946  2BE5               	incf	_TxData& (0+255),f,b
  3480                           
  3481                           ; BSR set to: 0
  3482  001948  2A37               	incf	_i,f,c
  3483  00194A  D7CF               	goto	l13613
  3484  00194C                     l13625:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;star_demo.c: 237: }
  3488                           ;star_demo.c: 241: sw_layer_ack_status = MiApp_UnicastStar (0);
  3489  00194C  0E00               	movlw	0
  3490  00194E  ECE0  F016         	call	_MiApp_UnicastStar
  3491  001952  0101               	movlb	1	; () banked
  3492  001954  6F80               	movwf	run_star_demo@sw_layer_ack_status& (0+255),b
  3493                           
  3494                           ; BSR set to: 1
  3495                           ;star_demo.c: 246: if (sw_layer_ack_status)
  3496  001956  5180               	movf	run_star_demo@sw_layer_ack_status& (0+255),w,b
  3497  001958  E180               	bnz	l13593
  3498                           
  3499                           ; BSR set to: 1
  3500                           ;star_demo.c: 250: else
  3501                           ;star_demo.c: 251: {
  3502                           ;star_demo.c: 252: LCDDisplay((char *)"Data_Sending_Fail!!", 0, 0);
  3503  00195A  0E5B               	movlw	low STR_17
  3504  00195C  0100               	movlb	0	; () banked
  3505  00195E  6F87               	movwf	LCDDisplay@text& (0+255),b
  3506  001960  0EFF               	movlw	high STR_17
  3507  001962  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
  3508  001964  6B89               	clrf	LCDDisplay@value& (0+255),b
  3509  001966  6B8A               	clrf	LCDDisplay@delay& (0+255),b
  3510  001968  EC14  F01B         	call	_LCDDisplay	;wreg free
  3511  00196C                     l1229:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;star_demo.c: 253: }
  3515                           ;star_demo.c: 258: }
  3516                           ;star_demo.c: 259: DemoOutput_UpdateTxRx(TxNum, RxNum);
  3517  00196C  C0E4  F089         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3518  001970  51E6               	movf	_TxNum& (0+255),w,b
  3519  001972  EC0E  F01E         	call	_DemoOutput_UpdateTxRx
  3520                           
  3521                           ;star_demo.c: 260: DELAY_ms(1500);
  3522  001976  0E05               	movlw	5
  3523  001978  6E1E               	movwf	DELAY_ms@ms+1,c
  3524  00197A  0EDC               	movlw	220
  3525  00197C  6E1D               	movwf	DELAY_ms@ms,c
  3526  00197E  EC3A  F014         	call	_DELAY_ms	;wreg free
  3527                           
  3528                           ;star_demo.c: 261: STAR_DEMO_OPTIONS_MESSAGE (role);
  3529  001982  5041               	movf	_role,w,c
  3530  001984  EC63  F01D         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3531                           
  3532                           ;star_demo.c: 262: }
  3533  001988  D01D               	goto	l13647
  3534  00198A                     l13637:
  3535                           
  3536                           ; BSR set to: 1
  3537                           ;star_demo.c: 263: else if(switch_val == 2)
  3538  00198A  0E02               	movlw	2
  3539  00198C  1983               	xorwf	run_star_demo@switch_val& (0+255),w,b
  3540  00198E  E11A               	bnz	l13647
  3541                           
  3542                           ; BSR set to: 1
  3543                           ;star_demo.c: 264: {
  3544                           ;star_demo.c: 265: if (select_ed > end_nodes-1)
  3545  001990  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3546  001992  6F79               	movwf	??_run_star_demo& (0+255),b
  3547  001994  6B7A               	clrf	(??_run_star_demo+1)& (0+255),b
  3548  001996  697B               	setf	(??_run_star_demo+2)& (0+255),b
  3549  001998  697C               	setf	(??_run_star_demo+3)& (0+255),b
  3550  00199A  5036               	movf	_end_nodes,w,c
  3551  00199C  6F7D               	movwf	(??_run_star_demo+4)& (0+255),b
  3552  00199E  6B7E               	clrf	(??_run_star_demo+5)& (0+255),b
  3553  0019A0  517B               	movf	(??_run_star_demo+2)& (0+255),w,b
  3554  0019A2  277D               	addwf	(??_run_star_demo+4)& (0+255),f,b
  3555  0019A4  517C               	movf	(??_run_star_demo+3)& (0+255),w,b
  3556  0019A6  237E               	addwfc	(??_run_star_demo+5)& (0+255),f,b
  3557  0019A8  5179               	movf	??_run_star_demo& (0+255),w,b
  3558  0019AA  5D7D               	subwf	(??_run_star_demo+4)& (0+255),w,b
  3559  0019AC  517E               	movf	(??_run_star_demo+5)& (0+255),w,b
  3560  0019AE  0A80               	xorlw	128
  3561  0019B0  6F7F               	movwf	(??_run_star_demo+6)& (0+255),b
  3562  0019B2  517A               	movf	(??_run_star_demo+1)& (0+255),w,b
  3563  0019B4  0A80               	xorlw	128
  3564  0019B6  597F               	subwfb	(??_run_star_demo+6)& (0+255),w,b
  3565  0019B8  E202               	bc	l13643
  3566                           
  3567                           ; BSR set to: 1
  3568                           ;star_demo.c: 266: {
  3569                           ;star_demo.c: 268: select_ed = 0;
  3570  0019BA  6B84               	clrf	run_star_demo@select_ed& (0+255),b
  3571                           
  3572                           ;star_demo.c: 269: }
  3573  0019BC  D001               	goto	l13645
  3574  0019BE                     l13643:
  3575                           
  3576                           ; BSR set to: 1
  3577                           ;star_demo.c: 270: else
  3578                           ;star_demo.c: 271: {
  3579                           ;star_demo.c: 273: select_ed = select_ed+1;
  3580  0019BE  2B84               	incf	run_star_demo@select_ed& (0+255),f,b
  3581  0019C0                     l13645:
  3582                           
  3583                           ; BSR set to: 1
  3584                           ;star_demo.c: 274: }
  3585                           ;star_demo.c: 275: chk_sel_status = 0;
  3586  0019C0  0100               	movlb	0	; () banked
  3587  0019C2  6BE8               	clrf	_chk_sel_status& (0+255),b
  3588  0019C4                     l13647:
  3589  0019C4  0100               	movlb	0	; () banked
  3590  0019C6  51E8               	movf	_chk_sel_status& (0+255),w,b
  3591  0019C8  E001 D707          	bnz	l13567
  3592  0019CC                     l13649:
  3593  0019CC  0101               	movlb	1	; () banked
  3594  0019CE  0581               	decf	run_star_demo@update_ed& (0+255),w,b
  3595  0019D0  E101 D631          	bz	l13555
  3596  0019D4                     l13651:
  3597                           
  3598                           ;star_demo.c: 277: }
  3599                           ;star_demo.c: 278: }
  3600                           ;star_demo.c: 280: }
  3601                           ;star_demo.c: 282: }
  3602                           ;star_demo.c: 283: }
  3603                           ;star_demo.c: 284: }
  3604                           ;star_demo.c: 288: if (lost_connection && !role)
  3605  0019D4  0100               	movlb	0	; () banked
  3606  0019D6  51EA               	movf	_lost_connection& (0+255),w,b
  3607  0019D8  E006               	bz	l13659
  3608                           
  3609                           ; BSR set to: 0
  3610  0019DA  5041               	movf	_role,w,c
  3611  0019DC  E104               	bnz	l13659
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;star_demo.c: 289: {
  3615                           ;star_demo.c: 290: MiApp_EstablishConnection(0xFF, 0x00);
  3616  0019DE  6BC5               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  3617  0019E0  EC82  F012         	call	_MiApp_EstablishConnection
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;star_demo.c: 291: lost_connection = 0;
  3621  0019E4  6BEA               	clrf	_lost_connection& (0+255),b
  3622  0019E6                     l13659:
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;star_demo.c: 293: }
  3626                           ;star_demo.c: 295: t2 = MiWi_TickGet ();
  3627  0019E6  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  3628  0019EA  C01D  F10C         	movff	?_MiWi_TickGet,_t2
  3629  0019EE  C01E  F10D         	movff	?_MiWi_TickGet+1,_t2+1
  3630  0019F2  C01F  F10E         	movff	?_MiWi_TickGet+2,_t2+2
  3631  0019F6  C020  F10F         	movff	?_MiWi_TickGet+3,_t2+3
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;star_demo.c: 297: if( (t2.Val - t1.Val) > (((uint32_t)(8000000)/32)*15) && role)
  3635  0019FA  0101               	movlb	1	; () banked
  3636  0019FC  5108               	movf	_t1& (0+255),w,b
  3637  0019FE  5D0C               	subwf	_t2& (0+255),w,b
  3638  001A00  6F79               	movwf	??_run_star_demo& (0+255),b
  3639  001A02  5109               	movf	(_t1+1)& (0+255),w,b
  3640  001A04  590D               	subwfb	(_t2+1)& (0+255),w,b
  3641  001A06  6F7A               	movwf	(??_run_star_demo+1)& (0+255),b
  3642  001A08  510A               	movf	(_t1+2)& (0+255),w,b
  3643  001A0A  590E               	subwfb	(_t2+2)& (0+255),w,b
  3644  001A0C  6F7B               	movwf	(??_run_star_demo+2)& (0+255),b
  3645  001A0E  510B               	movf	(_t1+3)& (0+255),w,b
  3646  001A10  590F               	subwfb	(_t2+3)& (0+255),w,b
  3647  001A12  6F7C               	movwf	(??_run_star_demo+3)& (0+255),b
  3648  001A14  517C               	movf	(??_run_star_demo+3)& (0+255),w,b
  3649  001A16  E107               	bnz	u14410
  3650  001A18  0E71               	movlw	113
  3651  001A1A  5D79               	subwf	??_run_star_demo& (0+255),w,b
  3652  001A1C  0E38               	movlw	56
  3653  001A1E  597A               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  3654  001A20  0E39               	movlw	57
  3655  001A22  597B               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  3656  001A24  E31F               	bnc	l13677
  3657  001A26                     u14410:
  3658                           
  3659                           ; BSR set to: 1
  3660  001A26  5041               	movf	_role,w,c
  3661  001A28  E01D               	bz	l13677
  3662                           
  3663                           ; BSR set to: 1
  3664                           ;star_demo.c: 298: {
  3665                           ;star_demo.c: 299: LCD_Erase();
  3666  001A2A  ECAD  F01D         	call	_LCD_Erase	;wreg free
  3667                           
  3668                           ;star_demo.c: 300: sprintf((char *)&(LCDText), (char*)"END_DEVICES :%02d",conn_size);
  3669  001A2E  0E40               	movlw	low _LCDText
  3670  001A30  0100               	movlb	0	; () banked
  3671  001A32  6F64               	movwf	sprintf@sp& (0+255),b
  3672  001A34  0E01               	movlw	high _LCDText
  3673  001A36  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  3674  001A38  0E6F               	movlw	low STR_18
  3675  001A3A  6F66               	movwf	sprintf@f& (0+255),b
  3676  001A3C  0EFF               	movlw	high STR_18
  3677  001A3E  6F67               	movwf	(sprintf@f+1)& (0+255),b
  3678  001A40  C040  F068         	movff	_conn_size,?_sprintf+4
  3679  001A44  6B69               	clrf	(?_sprintf+5)& (0+255),b
  3680  001A46  EC95  F004         	call	_sprintf	;wreg free
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;star_demo.c: 301: LCD_Update();
  3684  001A4A  ECD5  F01D         	call	_LCD_Update	;wreg free
  3685                           
  3686                           ;star_demo.c: 302: DELAY_ms(2000);
  3687  001A4E  0E07               	movlw	7
  3688  001A50  6E1E               	movwf	DELAY_ms@ms+1,c
  3689  001A52  0ED0               	movlw	208
  3690  001A54  6E1D               	movwf	DELAY_ms@ms,c
  3691  001A56  EC3A  F014         	call	_DELAY_ms	;wreg free
  3692                           
  3693                           ;star_demo.c: 303: display_connections = 0;
  3694  001A5A  0100               	movlb	0	; () banked
  3695  001A5C  6BE9               	clrf	_display_connections& (0+255),b
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;star_demo.c: 304: STAR_DEMO_OPTIONS_MESSAGE (1);
  3699  001A5E  0E01               	movlw	1
  3700  001A60  EC63  F01D         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3701  001A64                     l13677:
  3702  001A64  0100               	movlb	0	; () banked
  3703  001A66  51E9               	movf	_display_connections& (0+255),w,b
  3704  001A68  E001 D597          	bnz	l13521
  3705                           
  3706                           ; BSR set to: 0
  3707  001A6C  0012               	return		;funcret
  3708  001A6E                     __end_of_run_star_demo:
  3709                           	opt stack 0
  3710                           tblptru	equ	0xFF8
  3711                           tblptrh	equ	0xFF7
  3712                           tblptrl	equ	0xFF6
  3713                           tablat	equ	0xFF5
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           intcon	equ	0xFF2
  3717                           intcon2	equ	0xFF1
  3718                           intcon3	equ	0xFF0
  3719                           postinc0	equ	0xFEE
  3720                           wreg	equ	0xFE8
  3721                           indf1	equ	0xFE7
  3722                           postdec1	equ	0xFE5
  3723                           fsr1h	equ	0xFE2
  3724                           fsr1l	equ	0xFE1
  3725                           indf2	equ	0xFDF
  3726                           fsr2h	equ	0xFDA
  3727                           fsr2l	equ	0xFD9
  3728                           
  3729 ;; *************** function ___lbmod *****************
  3730 ;; Defined at:
  3731 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lbmod.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  dividend        1    wreg     unsigned char 
  3734 ;;  divisor         1   28[COMRAM] unsigned char 
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  dividend        1   29[COMRAM] unsigned char 
  3737 ;;  rem             1   31[COMRAM] unsigned char 
  3738 ;;  counter         1   30[COMRAM] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      unsigned char 
  3741 ;; Registers used:
  3742 ;;		wreg, status,2, status,0
  3743 ;; Tracked objects:
  3744 ;;		On entry : F/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3748 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3749 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;Total ram usage:        4 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    4
  3755 ;; This function calls:
  3756 ;;		Nothing
  3757 ;; This function is called by:
  3758 ;;		_run_star_demo
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text8
  3763  003A5A                     __ptext8:
  3764                           	opt stack 0
  3765  003A5A                     ___lbmod:
  3766                           	opt stack 24
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;incstack = 0
  3770                           ;___lbmod@dividend stored from wreg
  3771  003A5A  6E1E               	movwf	___lbmod@dividend,c
  3772  003A5C  0E08               	movlw	8
  3773  003A5E  6E1F               	movwf	___lbmod@counter,c
  3774  003A60  6A20               	clrf	___lbmod@rem,c
  3775  003A62                     l13323:
  3776  003A62  90D8               	bcf	status,0,c
  3777  003A64  341E               	rlcf	___lbmod@dividend,w,c
  3778  003A66  3420               	rlcf	___lbmod@rem,w,c
  3779  003A68  6E20               	movwf	___lbmod@rem,c
  3780  003A6A  90D8               	bcf	status,0,c
  3781  003A6C  361E               	rlcf	___lbmod@dividend,f,c
  3782  003A6E  501D               	movf	___lbmod@divisor,w,c
  3783  003A70  5C20               	subwf	___lbmod@rem,w,c
  3784  003A72  E302               	bnc	l13331
  3785  003A74  501D               	movf	___lbmod@divisor,w,c
  3786  003A76  5E20               	subwf	___lbmod@rem,f,c
  3787  003A78                     l13331:
  3788  003A78  2E1F               	decfsz	___lbmod@counter,f,c
  3789  003A7A  D7F3               	goto	l13323
  3790  003A7C  5020               	movf	___lbmod@rem,w,c
  3791  003A7E  0012               	return		;funcret
  3792  003A80                     __end_of___lbmod:
  3793                           	opt stack 0
  3794                           tblptru	equ	0xFF8
  3795                           tblptrh	equ	0xFF7
  3796                           tblptrl	equ	0xFF6
  3797                           tablat	equ	0xFF5
  3798                           prodh	equ	0xFF4
  3799                           prodl	equ	0xFF3
  3800                           intcon	equ	0xFF2
  3801                           intcon2	equ	0xFF1
  3802                           intcon3	equ	0xFF0
  3803                           postinc0	equ	0xFEE
  3804                           wreg	equ	0xFE8
  3805                           indf1	equ	0xFE7
  3806                           postdec1	equ	0xFE5
  3807                           fsr1h	equ	0xFE2
  3808                           fsr1l	equ	0xFE1
  3809                           indf2	equ	0xFDF
  3810                           fsr2h	equ	0xFDA
  3811                           fsr2l	equ	0xFD9
  3812                           status	equ	0xFD8
  3813                           
  3814 ;; *************** function _Process_RxMessage *****************
  3815 ;; Defined at:
  3816 ;;		line 66 in file "../src/star_demo.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  User_data_st    1  101[BANK0 ] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  1    wreg      unsigned char 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3825 ;; Tracked objects:
  3826 ;;		On entry : E/0
  3827 ;;		On exit  : F/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3833 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3834 ;;Total ram usage:        1 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:   15
  3837 ;; This function calls:
  3838 ;;		_DELAY_ms
  3839 ;;		_DemoOutput_UpdateTxRx
  3840 ;;		_MiApp_DiscardMessage
  3841 ;;		_MiApp_MessageAvailable
  3842 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  3843 ;;		_Source_END_DEVICE_INFO
  3844 ;; This function is called by:
  3845 ;;		_run_star_demo
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text9
  3850  003594                     __ptext9:
  3851                           	opt stack 0
  3852  003594                     _Process_RxMessage:
  3853                           	opt stack 13
  3854                           
  3855                           ;star_demo.c: 75: User_data_status = MiApp_MessageAvailable();
  3856                           
  3857                           ;incstack = 0
  3858  003594  EC15  F01E         	call	_MiApp_MessageAvailable	;wreg free
  3859  003598  6FC5               	movwf	Process_RxMessage@User_data_status& (0+255),b
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;star_demo.c: 76: if(User_data_status)
  3863  00359A  51C5               	movf	Process_RxMessage@User_data_status& (0+255),w,b
  3864  00359C  E01E               	bz	l13315
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;star_demo.c: 77: {
  3868                           ;star_demo.c: 87: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  3869  00359E  2BE4               	incf	_RxNum& (0+255),f,b
  3870  0035A0  C0E4  F089         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3871  0035A4  51E6               	movf	_TxNum& (0+255),w,b
  3872  0035A6  EC0E  F01E         	call	_DemoOutput_UpdateTxRx
  3873                           
  3874                           ;star_demo.c: 88: DELAY_ms(2000);
  3875  0035AA  0E07               	movlw	7
  3876  0035AC  6E1E               	movwf	DELAY_ms@ms+1,c
  3877  0035AE  0ED0               	movlw	208
  3878  0035B0  6E1D               	movwf	DELAY_ms@ms,c
  3879  0035B2  EC3A  F014         	call	_DELAY_ms	;wreg free
  3880                           
  3881                           ;star_demo.c: 90: LATAbits.LATA3 ^= 1;
  3882  0035B6  7689               	btg	3977,3,c	;volatile
  3883                           
  3884                           ;star_demo.c: 94: if (!role && !rxMessage.flags.bits.broadcast)
  3885  0035B8  5041               	movf	_role,w,c
  3886  0035BA  E10A               	bnz	l13311
  3887  0035BC  0100               	movlb	0	; () banked
  3888  0035BE  51C7               	movf	_rxMessage& (0+255),w,b
  3889  0035C0  0B03               	andlw	3
  3890  0035C2  E106               	bnz	l13311
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;star_demo.c: 95: {
  3894                           ;star_demo.c: 96: Source_END_DEVICE_INFO(rxMessage.Payload);
  3895  0035C4  C0CC  F087         	movff	_rxMessage+5,Source_END_DEVICE_INFO@SrAddr
  3896  0035C8  C0CD  F088         	movff	_rxMessage+6,Source_END_DEVICE_INFO@SrAddr+1
  3897  0035CC  ECEF  F018         	call	_Source_END_DEVICE_INFO	;wreg free
  3898  0035D0                     l13311:
  3899                           
  3900                           ;star_demo.c: 97: }
  3901                           ;star_demo.c: 105: MiApp_DiscardMessage();
  3902  0035D0  EC1B  F01E         	call	_MiApp_DiscardMessage	;wreg free
  3903                           
  3904                           ;star_demo.c: 106: STAR_DEMO_OPTIONS_MESSAGE (role);
  3905  0035D4  5041               	movf	_role,w,c
  3906  0035D6  EC63  F01D         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3907  0035DA                     l13315:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;star_demo.c: 108: }
  3911                           ;star_demo.c: 109: return User_data_status;
  3912  0035DA  51C5               	movf	Process_RxMessage@User_data_status& (0+255),w,b
  3913                           
  3914                           ; BSR set to: 0
  3915  0035DC  0012               	return		;funcret
  3916  0035DE                     __end_of_Process_RxMessage:
  3917                           	opt stack 0
  3918                           tblptru	equ	0xFF8
  3919                           tblptrh	equ	0xFF7
  3920                           tblptrl	equ	0xFF6
  3921                           tablat	equ	0xFF5
  3922                           prodh	equ	0xFF4
  3923                           prodl	equ	0xFF3
  3924                           intcon	equ	0xFF2
  3925                           intcon2	equ	0xFF1
  3926                           intcon3	equ	0xFF0
  3927                           postinc0	equ	0xFEE
  3928                           wreg	equ	0xFE8
  3929                           indf1	equ	0xFE7
  3930                           postdec1	equ	0xFE5
  3931                           fsr1h	equ	0xFE2
  3932                           fsr1l	equ	0xFE1
  3933                           indf2	equ	0xFDF
  3934                           fsr2h	equ	0xFDA
  3935                           fsr2l	equ	0xFD9
  3936                           status	equ	0xFD8
  3937                           
  3938 ;; *************** function _Source_END_DEVICE_INFO *****************
  3939 ;; Defined at:
  3940 ;;		line 234 in file "../src/demo_ouput.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;  SrAddr          2   39[BANK0 ] PTR unsigned char 
  3943 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : F/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3955 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3958 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3959 ;;Total ram usage:        2 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    6
  3962 ;; This function calls:
  3963 ;;		_DELAY_ms
  3964 ;;		_LCD_Erase
  3965 ;;		_LCD_Update
  3966 ;;		_sprintf
  3967 ;; This function is called by:
  3968 ;;		_Process_RxMessage
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text10
  3973  0031DE                     __ptext10:
  3974                           	opt stack 0
  3975  0031DE                     _Source_END_DEVICE_INFO:
  3976                           	opt stack 21
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;demo_ouput.c: 236: LCD_Erase();
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;incstack = 0
  3983  0031DE  ECAD  F01D         	call	_LCD_Erase	;wreg free
  3984                           
  3985                           ;demo_ouput.c: 237: sprintf((char *)&(LCDText), (char*)"Data Packet from");
  3986  0031E2  0E40               	movlw	low _LCDText
  3987  0031E4  0100               	movlb	0	; () banked
  3988  0031E6  6F64               	movwf	sprintf@sp& (0+255),b
  3989  0031E8  0E01               	movlw	high _LCDText
  3990  0031EA  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  3991  0031EC  0EB4               	movlw	low STR_10
  3992  0031EE  6F66               	movwf	sprintf@f& (0+255),b
  3993  0031F0  0EFF               	movlw	high STR_10
  3994  0031F2  6F67               	movwf	(sprintf@f+1)& (0+255),b
  3995  0031F4  EC95  F004         	call	_sprintf	;wreg free
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;demo_ouput.c: 238: sprintf((char *)&(LCDText[16]), (char*)" Address:%02x%02x%02x",SrAdd
      +                          r[0],SrAddr[1],SrAddr[2]);
  3999  0031F8  0E50               	movlw	low (_LCDText+16)
  4000  0031FA  6F64               	movwf	sprintf@sp& (0+255),b
  4001  0031FC  0E01               	movlw	high (_LCDText+16)
  4002  0031FE  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  4003  003200  0E45               	movlw	low STR_11
  4004  003202  6F66               	movwf	sprintf@f& (0+255),b
  4005  003204  0EFF               	movlw	high STR_11
  4006  003206  6F67               	movwf	(sprintf@f+1)& (0+255),b
  4007  003208  C087  FFD9         	movff	Source_END_DEVICE_INFO@SrAddr,fsr2l
  4008  00320C  C088  FFDA         	movff	Source_END_DEVICE_INFO@SrAddr+1,fsr2h
  4009  003210  50DF               	movf	indf2,w,c
  4010  003212  6F68               	movwf	(?_sprintf+4)& (0+255),b
  4011  003214  6B69               	clrf	(?_sprintf+5)& (0+255),b
  4012  003216  EE20 F001          	lfsr	2,1
  4013  00321A  5187               	movf	Source_END_DEVICE_INFO@SrAddr& (0+255),w,b
  4014  00321C  26D9               	addwf	fsr2l,f,c
  4015  00321E  5188               	movf	(Source_END_DEVICE_INFO@SrAddr+1)& (0+255),w,b
  4016  003220  22DA               	addwfc	fsr2h,f,c
  4017  003222  50DF               	movf	indf2,w,c
  4018  003224  6F6A               	movwf	(?_sprintf+6)& (0+255),b
  4019  003226  6B6B               	clrf	(?_sprintf+7)& (0+255),b
  4020  003228  EE20 F002          	lfsr	2,2
  4021  00322C  5187               	movf	Source_END_DEVICE_INFO@SrAddr& (0+255),w,b
  4022  00322E  26D9               	addwf	fsr2l,f,c
  4023  003230  5188               	movf	(Source_END_DEVICE_INFO@SrAddr+1)& (0+255),w,b
  4024  003232  22DA               	addwfc	fsr2h,f,c
  4025  003234  50DF               	movf	indf2,w,c
  4026  003236  6F6C               	movwf	(?_sprintf+8)& (0+255),b
  4027  003238  6B6D               	clrf	(?_sprintf+9)& (0+255),b
  4028  00323A  EC95  F004         	call	_sprintf	;wreg free
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;demo_ouput.c: 239: LCD_Update();
  4032  00323E  ECD5  F01D         	call	_LCD_Update	;wreg free
  4033                           
  4034                           ;demo_ouput.c: 240: DELAY_ms(1200);
  4035  003242  0E04               	movlw	4
  4036  003244  6E1E               	movwf	DELAY_ms@ms+1,c
  4037  003246  0EB0               	movlw	176
  4038  003248  6E1D               	movwf	DELAY_ms@ms,c
  4039  00324A  EF3A  F014         	goto	_DELAY_ms	;wreg free
  4040  00324E                     __end_of_Source_END_DEVICE_INFO:
  4041                           	opt stack 0
  4042                           tblptru	equ	0xFF8
  4043                           tblptrh	equ	0xFF7
  4044                           tblptrl	equ	0xFF6
  4045                           tablat	equ	0xFF5
  4046                           prodh	equ	0xFF4
  4047                           prodl	equ	0xFF3
  4048                           intcon	equ	0xFF2
  4049                           intcon2	equ	0xFF1
  4050                           intcon3	equ	0xFF0
  4051                           postinc0	equ	0xFEE
  4052                           wreg	equ	0xFE8
  4053                           indf1	equ	0xFE7
  4054                           postdec1	equ	0xFE5
  4055                           fsr1h	equ	0xFE2
  4056                           fsr1l	equ	0xFE1
  4057                           indf2	equ	0xFDF
  4058                           fsr2h	equ	0xFDA
  4059                           fsr2l	equ	0xFD9
  4060                           status	equ	0xFD8
  4061                           
  4062 ;; *************** function _DemoOutput_UpdateTxRx *****************
  4063 ;; Defined at:
  4064 ;;		line 188 in file "../src/demo_ouput.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  TxNum           1    wreg     unsigned char 
  4067 ;;  RxNum           1   41[BANK0 ] unsigned char 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;  TxNum           1   42[BANK0 ] unsigned char 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : F/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4079 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4083 ;;Total ram usage:        2 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    7
  4086 ;; This function calls:
  4087 ;;		_LCDTRXCount
  4088 ;; This function is called by:
  4089 ;;		_Process_RxMessage
  4090 ;;		_run_star_demo
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text11
  4095  003C1C                     __ptext11:
  4096                           	opt stack 0
  4097  003C1C                     _DemoOutput_UpdateTxRx:
  4098                           	opt stack 20
  4099                           
  4100                           ;incstack = 0
  4101                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  4102  003C1C  6F8A               	movwf	DemoOutput_UpdateTxRx@TxNum& (0+255),b
  4103                           
  4104                           ;demo_ouput.c: 190: LCDTRXCount(TxNum, RxNum);
  4105  003C1E  C089  F087         	movff	DemoOutput_UpdateTxRx@RxNum,LCDTRXCount@rxCount
  4106  003C22  0100               	movlb	0	; () banked
  4107  003C24  518A               	movf	DemoOutput_UpdateTxRx@TxNum& (0+255),w,b
  4108  003C26  EF78  F01B         	goto	_LCDTRXCount
  4109  003C2A                     __end_of_DemoOutput_UpdateTxRx:
  4110                           	opt stack 0
  4111                           tblptru	equ	0xFF8
  4112                           tblptrh	equ	0xFF7
  4113                           tblptrl	equ	0xFF6
  4114                           tablat	equ	0xFF5
  4115                           prodh	equ	0xFF4
  4116                           prodl	equ	0xFF3
  4117                           intcon	equ	0xFF2
  4118                           intcon2	equ	0xFF1
  4119                           intcon3	equ	0xFF0
  4120                           postinc0	equ	0xFEE
  4121                           wreg	equ	0xFE8
  4122                           indf1	equ	0xFE7
  4123                           postdec1	equ	0xFE5
  4124                           fsr1h	equ	0xFE2
  4125                           fsr1l	equ	0xFE1
  4126                           indf2	equ	0xFDF
  4127                           fsr2h	equ	0xFDA
  4128                           fsr2l	equ	0xFD9
  4129                           status	equ	0xFD8
  4130                           
  4131 ;; *************** function _LCDTRXCount *****************
  4132 ;; Defined at:
  4133 ;;		line 293 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  txCount         1    wreg     unsigned char 
  4136 ;;  rxCount         1   39[BANK0 ] unsigned char 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  txCount         1   40[BANK0 ] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  1    wreg      void 
  4141 ;; Registers used:
  4142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4143 ;; Tracked objects:
  4144 ;;		On entry : F/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4148 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4151 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4152 ;;Total ram usage:        2 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; Hardware stack levels required when called:    6
  4155 ;; This function calls:
  4156 ;;		_LCD_Erase
  4157 ;;		_LCD_Update
  4158 ;;		_sprintf
  4159 ;; This function is called by:
  4160 ;;		_DemoOutput_UpdateTxRx
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text12
  4165  0036F0                     __ptext12:
  4166                           	opt stack 0
  4167  0036F0                     _LCDTRXCount:
  4168                           	opt stack 20
  4169                           
  4170                           ;incstack = 0
  4171                           ;LCDTRXCount@txCount stored from wreg
  4172  0036F0  6F88               	movwf	LCDTRXCount@txCount& (0+255),b
  4173                           
  4174                           ;lcd.c: 296: LCD_Erase();
  4175  0036F2  ECAD  F01D         	call	_LCD_Erase	;wreg free
  4176                           
  4177                           ;lcd.c: 297: sprintf((char *)LCDText, (char*)"TX Messages: %3d", txCount);
  4178  0036F6  0E40               	movlw	low _LCDText
  4179  0036F8  0100               	movlb	0	; () banked
  4180  0036FA  6F64               	movwf	sprintf@sp& (0+255),b
  4181  0036FC  0E01               	movlw	high _LCDText
  4182  0036FE  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  4183  003700  0ED6               	movlw	low STR_1
  4184  003702  6F66               	movwf	sprintf@f& (0+255),b
  4185  003704  0EFF               	movlw	high STR_1
  4186  003706  6F67               	movwf	(sprintf@f+1)& (0+255),b
  4187  003708  C088  F068         	movff	LCDTRXCount@txCount,?_sprintf+4
  4188  00370C  6B69               	clrf	(?_sprintf+5)& (0+255),b
  4189  00370E  EC95  F004         	call	_sprintf	;wreg free
  4190                           
  4191                           ; BSR set to: 0
  4192                           ;lcd.c: 298: sprintf((char *)&(LCDText[16]), (char*)"RX Messages: %3d", rxCount);
  4193  003712  0E50               	movlw	low (_LCDText+16)
  4194  003714  6F64               	movwf	sprintf@sp& (0+255),b
  4195  003716  0E01               	movlw	high (_LCDText+16)
  4196  003718  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  4197  00371A  0EC5               	movlw	low STR_2
  4198  00371C  6F66               	movwf	sprintf@f& (0+255),b
  4199  00371E  0EFF               	movlw	high STR_2
  4200  003720  6F67               	movwf	(sprintf@f+1)& (0+255),b
  4201  003722  C087  F068         	movff	LCDTRXCount@rxCount,?_sprintf+4
  4202  003726  6B69               	clrf	(?_sprintf+5)& (0+255),b
  4203  003728  EC95  F004         	call	_sprintf	;wreg free
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;lcd.c: 299: LCD_Update();
  4207  00372C  EFD5  F01D         	goto	_LCD_Update	;wreg free
  4208  003730                     __end_of_LCDTRXCount:
  4209                           	opt stack 0
  4210                           tblptru	equ	0xFF8
  4211                           tblptrh	equ	0xFF7
  4212                           tblptrl	equ	0xFF6
  4213                           tablat	equ	0xFF5
  4214                           prodh	equ	0xFF4
  4215                           prodl	equ	0xFF3
  4216                           intcon	equ	0xFF2
  4217                           intcon2	equ	0xFF1
  4218                           intcon3	equ	0xFF0
  4219                           postinc0	equ	0xFEE
  4220                           wreg	equ	0xFE8
  4221                           indf1	equ	0xFE7
  4222                           postdec1	equ	0xFE5
  4223                           fsr1h	equ	0xFE2
  4224                           fsr1l	equ	0xFE1
  4225                           indf2	equ	0xFDF
  4226                           fsr2h	equ	0xFDA
  4227                           fsr2l	equ	0xFD9
  4228                           status	equ	0xFD8
  4229                           
  4230 ;; *************** function _MiApp_UnicastStar *****************
  4231 ;; Defined at:
  4232 ;;		line 1974 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  SecEn           1    wreg     unsigned char 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;  SecEn           1    4[BANK1 ] unsigned char 
  4237 ;;  t2              4    9[BANK1 ] struct _MIWI_TICK
  4238 ;;  t1              4    5[BANK1 ] struct _MIWI_TICK
  4239 ;;  status          1    0        unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  1    wreg      unsigned char 
  4242 ;; Registers used:
  4243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4244 ;; Tracked objects:
  4245 ;;		On entry : F/0
  4246 ;;		On exit  : F/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4250 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4251 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4252 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4253 ;;Total ram usage:       13 bytes
  4254 ;; Hardware stack levels used:    1
  4255 ;; Hardware stack levels required when called:   15
  4256 ;; This function calls:
  4257 ;;		_MiApp_MessageAvailable
  4258 ;;		_MiWi_TickGet
  4259 ;;		_SendPacket
  4260 ;; This function is called by:
  4261 ;;		_run_star_demo
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text13
  4266  002DC0                     __ptext13:
  4267                           	opt stack 0
  4268  002DC0                     _MiApp_UnicastStar:
  4269                           	opt stack 13
  4270                           
  4271                           ;incstack = 0
  4272                           ;MiApp_UnicastStar@SecEn stored from wreg
  4273  002DC0  0101               	movlb	1	; () banked
  4274  002DC2  6F6D               	movwf	MiApp_UnicastStar@SecEn& (0+255),b
  4275                           
  4276                           ;miwi_p2p.c: 1976: rec_ack = 0;
  4277  002DC4  0100               	movlb	0	; () banked
  4278  002DC6  6BEB               	clrf	_rec_ack& (0+255),b
  4279                           
  4280                           ; BSR set to: 0
  4281                           ;miwi_p2p.c: 1977: bool status;
  4282                           ;miwi_p2p.c: 1982: status = SendPacket(0, myPANID, ConnectionTable[0].Address, 1, SecEn)
      +                          ;
  4283  002DC8  C0EC  F090         	movff	_myPANID,SendPacket@DestinationPANID
  4284  002DCC  C0ED  F091         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  4285  002DD0  0E54               	movlw	low (_ConnectionTable+4)
  4286  002DD2  6F92               	movwf	SendPacket@DestinationAddress& (0+255),b
  4287  002DD4  0E03               	movlw	high (_ConnectionTable+4)
  4288  002DD6  6F93               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  4289  002DD8  0E01               	movlw	1
  4290  002DDA  6F94               	movwf	SendPacket@isCommand& (0+255),b
  4291  002DDC  C16D  F095         	movff	MiApp_UnicastStar@SecEn,SendPacket@SecurityEnabled
  4292  002DE0  0E00               	movlw	0
  4293  002DE2  EC09  F015         	call	_SendPacket
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;miwi_p2p.c: 1987: MIWI_TICK t1, t2;
  4297                           ;miwi_p2p.c: 1989: t1 = MiWi_TickGet();
  4298  002DE6  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  4299  002DEA  C01D  F16E         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t1
  4300  002DEE  C01E  F16F         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t1+1
  4301  002DF2  C01F  F170         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t1+2
  4302  002DF6  C020  F171         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t1+3
  4303                           
  4304                           ;miwi_p2p.c: 1990: while (!rec_ack)
  4305  002DFA  D024               	goto	l13157
  4306  002DFC                     l13147:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;miwi_p2p.c: 1991: {
  4310                           ;miwi_p2p.c: 1992: t2 = MiWi_TickGet();
  4311  002DFC  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  4312  002E00  C01D  F172         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t2
  4313  002E04  C01E  F173         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t2+1
  4314  002E08  C01F  F174         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t2+2
  4315  002E0C  C020  F175         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t2+3
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;miwi_p2p.c: 1993: MiApp_MessageAvailable();
  4319  002E10  EC15  F01E         	call	_MiApp_MessageAvailable	;wreg free
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;miwi_p2p.c: 1996: if((t2.Val - t1.Val) > ((((uint32_t)(8000000)/32)/10)*2))
  4323  002E14  0101               	movlb	1	; () banked
  4324  002E16  516E               	movf	MiApp_UnicastStar@t1& (0+255),w,b
  4325  002E18  5D72               	subwf	MiApp_UnicastStar@t2& (0+255),w,b
  4326  002E1A  6F69               	movwf	??_MiApp_UnicastStar& (0+255),b
  4327  002E1C  516F               	movf	(MiApp_UnicastStar@t1+1)& (0+255),w,b
  4328  002E1E  5973               	subwfb	(MiApp_UnicastStar@t2+1)& (0+255),w,b
  4329  002E20  6F6A               	movwf	(??_MiApp_UnicastStar+1)& (0+255),b
  4330  002E22  5170               	movf	(MiApp_UnicastStar@t1+2)& (0+255),w,b
  4331  002E24  5974               	subwfb	(MiApp_UnicastStar@t2+2)& (0+255),w,b
  4332  002E26  6F6B               	movwf	(??_MiApp_UnicastStar+2)& (0+255),b
  4333  002E28  5171               	movf	(MiApp_UnicastStar@t1+3)& (0+255),w,b
  4334  002E2A  5975               	subwfb	(MiApp_UnicastStar@t2+3)& (0+255),w,b
  4335  002E2C  6F6C               	movwf	(??_MiApp_UnicastStar+3)& (0+255),b
  4336  002E2E  516C               	movf	(??_MiApp_UnicastStar+3)& (0+255),w,b
  4337  002E30  116B               	iorwf	(??_MiApp_UnicastStar+2)& (0+255),w,b
  4338  002E32  E105               	bnz	u13930
  4339  002E34  0E51               	movlw	81
  4340  002E36  5D69               	subwf	??_MiApp_UnicastStar& (0+255),w,b
  4341  002E38  0EC3               	movlw	195
  4342  002E3A  596A               	subwfb	(??_MiApp_UnicastStar+1)& (0+255),w,b
  4343  002E3C  E303               	bnc	l13157
  4344  002E3E                     u13930:
  4345                           
  4346                           ; BSR set to: 1
  4347                           ;miwi_p2p.c: 1997: {
  4348                           ;miwi_p2p.c: 1998: if (rec_ack != 1)
  4349  002E3E  0100               	movlb	0	; () banked
  4350  002E40  05EB               	decf	_rec_ack& (0+255),w,b
  4351  002E42  E103               	bnz	l13159
  4352  002E44                     l13157:
  4353  002E44  0100               	movlb	0	; () banked
  4354  002E46  51EB               	movf	_rec_ack& (0+255),w,b
  4355  002E48  E0D9               	bz	l13147
  4356  002E4A                     l13159:
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;miwi_p2p.c: 2001: }
  4360                           ;miwi_p2p.c: 2002: }
  4361                           ;miwi_p2p.c: 2003: }
  4362                           ;miwi_p2p.c: 2006: return rec_ack;
  4363  002E4A  51EB               	movf	_rec_ack& (0+255),w,b
  4364                           
  4365                           ; BSR set to: 0
  4366  002E4C  0012               	return		;funcret
  4367  002E4E                     __end_of_MiApp_UnicastStar:
  4368                           	opt stack 0
  4369                           tblptru	equ	0xFF8
  4370                           tblptrh	equ	0xFF7
  4371                           tblptrl	equ	0xFF6
  4372                           tablat	equ	0xFF5
  4373                           prodh	equ	0xFF4
  4374                           prodl	equ	0xFF3
  4375                           intcon	equ	0xFF2
  4376                           intcon2	equ	0xFF1
  4377                           intcon3	equ	0xFF0
  4378                           postinc0	equ	0xFEE
  4379                           wreg	equ	0xFE8
  4380                           indf1	equ	0xFE7
  4381                           postdec1	equ	0xFE5
  4382                           fsr1h	equ	0xFE2
  4383                           fsr1l	equ	0xFE1
  4384                           indf2	equ	0xFDF
  4385                           fsr2h	equ	0xFDA
  4386                           fsr2l	equ	0xFD9
  4387                           status	equ	0xFD8
  4388                           
  4389 ;; *************** function _MiApp_BroadcastPacket *****************
  4390 ;; Defined at:
  4391 ;;		line 1693 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  SecEn           1    wreg     unsigned char 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  SecEn           1   64[BANK0 ] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      unsigned char 
  4398 ;; Registers used:
  4399 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : F/0
  4402 ;;		On exit  : F/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4406 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4408 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4409 ;;Total ram usage:        1 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:   10
  4412 ;; This function calls:
  4413 ;;		_SendPacket
  4414 ;; This function is called by:
  4415 ;;		_run_star_demo
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text14
  4420  003B06                     __ptext14:
  4421                           	opt stack 0
  4422  003B06                     _MiApp_BroadcastPacket:
  4423                           	opt stack 18
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;incstack = 0
  4427                           ;MiApp_BroadcastPacket@SecEn stored from wreg
  4428  003B06  6FA0               	movwf	MiApp_BroadcastPacket@SecEn& (0+255),b
  4429                           
  4430                           ;miwi_p2p.c: 1721: return SendPacket(1, myPANID, (0), 0, SecEn);
  4431                           ;	Return value of _MiApp_BroadcastPacket is never used
  4432  003B08  C0EC  F090         	movff	_myPANID,SendPacket@DestinationPANID
  4433  003B0C  C0ED  F091         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  4434  003B10  0100               	movlb	0	; () banked
  4435  003B12  6B92               	clrf	SendPacket@DestinationAddress& (0+255),b
  4436  003B14  6B93               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  4437  003B16  6B94               	clrf	SendPacket@isCommand& (0+255),b
  4438  003B18  C0A0  F095         	movff	MiApp_BroadcastPacket@SecEn,SendPacket@SecurityEnabled
  4439  003B1C  0E01               	movlw	1
  4440  003B1E  EF09  F015         	goto	_SendPacket
  4441  003B22                     __end_of_MiApp_BroadcastPacket:
  4442                           	opt stack 0
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           prodh	equ	0xFF4
  4448                           prodl	equ	0xFF3
  4449                           intcon	equ	0xFF2
  4450                           intcon2	equ	0xFF1
  4451                           intcon3	equ	0xFF0
  4452                           postinc0	equ	0xFEE
  4453                           wreg	equ	0xFE8
  4454                           indf1	equ	0xFE7
  4455                           postdec1	equ	0xFE5
  4456                           fsr1h	equ	0xFE2
  4457                           fsr1l	equ	0xFE1
  4458                           indf2	equ	0xFDF
  4459                           fsr2h	equ	0xFDA
  4460                           fsr2l	equ	0xFD9
  4461                           status	equ	0xFD8
  4462                           
  4463 ;; *************** function _ButtonPressed *****************
  4464 ;; Defined at:
  4465 ;;		line 260 in file "../src/demo_ouput.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  t               4    9[BANK0 ] struct _MIWI_TICK
  4470 ;;  tickDifferen    4    5[BANK0 ] struct _MIWI_TICK
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      unsigned char 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : F/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4481 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4483 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4484 ;;Total ram usage:        8 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    5
  4487 ;; This function calls:
  4488 ;;		_MiWi_TickGet
  4489 ;; This function is called by:
  4490 ;;		_freezer_feature
  4491 ;;		_run_star_demo
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text15
  4496  002C98                     __ptext15:
  4497                           	opt stack 0
  4498  002C98                     _ButtonPressed:
  4499                           	opt stack 24
  4500                           
  4501                           ;demo_ouput.c: 262: MIWI_TICK tickDifference;
  4502                           ;demo_ouput.c: 264: if(PORTBbits.RB0 == 0)
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;incstack = 0
  4506  002C98  B081               	btfsc	3969,0,c	;volatile
  4507  002C9A  D010               	goto	l1039
  4508                           
  4509                           ;demo_ouput.c: 265: {
  4510                           ;demo_ouput.c: 267: if(PUSH_BUTTON_pressed == 0)
  4511  002C9C  0100               	movlb	0	; () banked
  4512  002C9E  51E3               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  4513  002CA0  E144               	bnz	l13289
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;demo_ouput.c: 268: {
  4517                           ;demo_ouput.c: 269: PUSH_BUTTON_pressed = 1;
  4518  002CA2  0E01               	movlw	1
  4519  002CA4  6FE3               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;demo_ouput.c: 270: PUSH_BUTTON_press_time = MiWi_TickGet();
  4523  002CA6  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  4524  002CAA  C01D  F100         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4525  002CAE  C01E  F101         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4526  002CB2  C01F  F102         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4527  002CB6  C020  F103         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;demo_ouput.c: 271: return 1;
  4531  002CBA  0C01               	retlw	1
  4532  002CBC                     l1039:
  4533                           
  4534                           ;demo_ouput.c: 274: else if(PORTBbits.RB2 == 0)
  4535  002CBC  B481               	btfsc	3969,2,c	;volatile
  4536  002CBE  D010               	goto	l13281
  4537                           
  4538                           ;demo_ouput.c: 275: {
  4539                           ;demo_ouput.c: 277: if(PUSH_BUTTON_pressed == 0)
  4540  002CC0  0100               	movlb	0	; () banked
  4541  002CC2  51E3               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  4542  002CC4  E132               	bnz	l13289
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;demo_ouput.c: 278: {
  4546                           ;demo_ouput.c: 279: PUSH_BUTTON_pressed = 1;
  4547  002CC6  0E01               	movlw	1
  4548  002CC8  6FE3               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;demo_ouput.c: 280: PUSH_BUTTON_press_time = MiWi_TickGet();
  4552  002CCA  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  4553  002CCE  C01D  F100         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4554  002CD2  C01E  F101         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4555  002CD6  C01F  F102         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4556  002CDA  C020  F103         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;demo_ouput.c: 281: return 2;
  4560  002CDE  0C02               	retlw	2
  4561  002CE0                     l13281:
  4562                           
  4563                           ;demo_ouput.c: 284: else
  4564                           ;demo_ouput.c: 285: {
  4565                           ;demo_ouput.c: 287: MIWI_TICK t = MiWi_TickGet();
  4566  002CE0  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  4567  002CE4  C01D  F069         	movff	?_MiWi_TickGet,ButtonPressed@t
  4568  002CE8  C01E  F06A         	movff	?_MiWi_TickGet+1,ButtonPressed@t+1
  4569  002CEC  C01F  F06B         	movff	?_MiWi_TickGet+2,ButtonPressed@t+2
  4570  002CF0  C020  F06C         	movff	?_MiWi_TickGet+3,ButtonPressed@t+3
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;demo_ouput.c: 290: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  4574  002CF4  0101               	movlb	1	; () banked
  4575  002CF6  5100               	movf	_PUSH_BUTTON_press_time& (0+255),w,b
  4576  002CF8  0100               	movlb	0	; () banked
  4577  002CFA  5D69               	subwf	ButtonPressed@t& (0+255),w,b
  4578  002CFC  6F65               	movwf	ButtonPressed@tickDifference& (0+255),b
  4579  002CFE  0101               	movlb	1	; () banked
  4580  002D00  5101               	movf	(_PUSH_BUTTON_press_time+1)& (0+255),w,b
  4581  002D02  0100               	movlb	0	; () banked
  4582  002D04  596A               	subwfb	(ButtonPressed@t+1)& (0+255),w,b
  4583  002D06  6F66               	movwf	(ButtonPressed@tickDifference+1)& (0+255),b
  4584  002D08  0101               	movlb	1	; () banked
  4585  002D0A  5102               	movf	(_PUSH_BUTTON_press_time+2)& (0+255),w,b
  4586  002D0C  0100               	movlb	0	; () banked
  4587  002D0E  596B               	subwfb	(ButtonPressed@t+2)& (0+255),w,b
  4588  002D10  6F67               	movwf	(ButtonPressed@tickDifference+2)& (0+255),b
  4589  002D12  0101               	movlb	1	; () banked
  4590  002D14  5103               	movf	(_PUSH_BUTTON_press_time+3)& (0+255),w,b
  4591  002D16  0100               	movlb	0	; () banked
  4592  002D18  596C               	subwfb	(ButtonPressed@t+3)& (0+255),w,b
  4593  002D1A  6F68               	movwf	(ButtonPressed@tickDifference+3)& (0+255),b
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;demo_ouput.c: 293: if(tickDifference.Val > 0x00003FFF)
  4597  002D1C  5168               	movf	(ButtonPressed@tickDifference+3)& (0+255),w,b
  4598  002D1E  1167               	iorwf	(ButtonPressed@tickDifference+2)& (0+255),w,b
  4599  002D20  E103               	bnz	u14090
  4600  002D22  0E40               	movlw	64
  4601  002D24  5D66               	subwf	(ButtonPressed@tickDifference+1)& (0+255),w,b
  4602  002D26  E301               	bnc	l13289
  4603  002D28                     u14090:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;demo_ouput.c: 294: {
  4607                           ;demo_ouput.c: 295: PUSH_BUTTON_pressed = 0;
  4608  002D28  6BE3               	clrf	_PUSH_BUTTON_pressed& (0+255),b
  4609  002D2A                     l13289:
  4610                           
  4611                           ; BSR set to: 0
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;demo_ouput.c: 296: }
  4615                           ;demo_ouput.c: 297: }
  4616                           ;demo_ouput.c: 299: return 0;
  4617  002D2A  0C00               	retlw	0	;funcret
  4618  002D2C                     __end_of_ButtonPressed:
  4619                           	opt stack 0
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           prodh	equ	0xFF4
  4625                           prodl	equ	0xFF3
  4626                           intcon	equ	0xFF2
  4627                           intcon2	equ	0xFF1
  4628                           intcon3	equ	0xFF0
  4629                           postinc0	equ	0xFEE
  4630                           wreg	equ	0xFE8
  4631                           indf1	equ	0xFE7
  4632                           postdec1	equ	0xFE5
  4633                           fsr1h	equ	0xFE2
  4634                           fsr1l	equ	0xFE1
  4635                           indf2	equ	0xFDF
  4636                           fsr2h	equ	0xFDA
  4637                           fsr2l	equ	0xFD9
  4638                           status	equ	0xFD8
  4639                           
  4640 ;; *************** function _Initialize_Demo *****************
  4641 ;; Defined at:
  4642 ;;		line 134 in file "../src/task.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  freezer_enab    1    wreg     unsigned char 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  freezer_enab    1  102[BANK0 ] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  1    wreg      void 
  4649 ;; Registers used:
  4650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4651 ;; Tracked objects:
  4652 ;;		On entry : F/1
  4653 ;;		On exit  : F/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4657 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4659 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4660 ;;Total ram usage:        1 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:   16
  4663 ;; This function calls:
  4664 ;;		_DemoOutput_Channel
  4665 ;;		_DemoOutput_ChannelError
  4666 ;;		_MiApp_ConnectionMode
  4667 ;;		_MiApp_EstablishConnection
  4668 ;;		_MiApp_ProtocolInit
  4669 ;;		_MiApp_SetChannel
  4670 ;;		_MiApp_StartConnection
  4671 ;;		_NVMWrite
  4672 ;;		_Read_MAC_Address
  4673 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  4674 ;; This function is called by:
  4675 ;;		_main
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text16
  4680  002ACC                     __ptext16:
  4681                           	opt stack 0
  4682  002ACC                     _Initialize_Demo:
  4683                           	opt stack 14
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;incstack = 0
  4687                           ;Initialize_Demo@freezer_enable stored from wreg
  4688  002ACC  0100               	movlb	0	; () banked
  4689  002ACE  6FC6               	movwf	Initialize_Demo@freezer_enable& (0+255),b
  4690                           
  4691                           ;task.c: 138: Read_MAC_Address(&myLongAddress);
  4692  002AD0  0E61               	movlw	low _myLongAddress
  4693  002AD2  6E23               	movwf	Read_MAC_Address@myAddress,c
  4694  002AD4  0E01               	movlw	high _myLongAddress
  4695  002AD6  6E24               	movwf	Read_MAC_Address@myAddress+1,c
  4696  002AD8  ECF5  F017         	call	_Read_MAC_Address	;wreg free
  4697                           
  4698                           ; BSR set to: 0
  4699                           ;task.c: 141: if (freezer_enable)
  4700  002ADC  51C6               	movf	Initialize_Demo@freezer_enable& (0+255),w,b
  4701  002ADE  E004               	bz	l1116
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;task.c: 142: {
  4705                           ;task.c: 153: MiApp_ProtocolInit(1);
  4706  002AE0  0E01               	movlw	1
  4707  002AE2  ECDA  F00F         	call	_MiApp_ProtocolInit
  4708  002AE6  D03C               	goto	L23
  4709  002AE8                     l1116:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;task.c: 161: else
  4713                           ;task.c: 162: {
  4714                           ;task.c: 163: LATAbits.LATA2 = 0;
  4715  002AE8  9489               	bcf	3977,2,c	;volatile
  4716                           
  4717                           ;task.c: 164: LATAbits.LATA3 = 0;
  4718  002AEA  9689               	bcf	3977,3,c	;volatile
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;task.c: 176: MiApp_ProtocolInit(0);
  4722  002AEC  0E00               	movlw	0
  4723  002AEE  ECDA  F00F         	call	_MiApp_ProtocolInit
  4724  002AF2  0E19               	movlw	25
  4725  002AF4  EC69  F01C         	call	_MiApp_SetChannel
  4726  002AF8  0900               	iorlw	0
  4727  002AFA  E103               	bnz	l13819
  4728  002AFC  0E19               	movlw	25
  4729  002AFE  EC26  F01E         	call	_DemoOutput_ChannelError
  4730  002B02                     l13819:
  4731                           
  4732                           ;task.c: 182: }
  4733                           ;task.c: 193: MiApp_ConnectionMode(0x00);
  4734  002B02  0E00               	movlw	0
  4735  002B04  EC32  F01C         	call	_MiApp_ConnectionMode
  4736  002B08  0E00               	movlw	0
  4737  002B0A  0100               	movlb	0	; () banked
  4738  002B0C  6F8C               	movwf	DemoOutput_Channel@Step& (0+255),b
  4739  002B0E  0E19               	movlw	25
  4740  002B10  ECD7  F01B         	call	_DemoOutput_Channel
  4741                           
  4742                           ;task.c: 208: i = MiApp_EstablishConnection(0xFF, 0x00);
  4743  002B14  0100               	movlb	0	; () banked
  4744  002B16  6BC5               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  4745  002B18  EC82  F012         	call	_MiApp_EstablishConnection
  4746  002B1C  6E37               	movwf	_i,c
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;task.c: 213: if( i != 0xFF )
  4750  002B1E  2837               	incf	_i,w,c
  4751  002B20  E007               	bz	l13831
  4752                           
  4753                           ; BSR set to: 0
  4754  002B22  0E01               	movlw	1
  4755  002B24  6F8C               	movwf	DemoOutput_Channel@Step& (0+255),b
  4756  002B26  0E19               	movlw	25
  4757  002B28  ECD7  F01B         	call	_DemoOutput_Channel
  4758                           
  4759                           ;task.c: 216: role = 0;
  4760  002B2C  6A41               	clrf	_role,c
  4761                           
  4762                           ;task.c: 217: }
  4763  002B2E  D00B               	goto	l13835
  4764  002B30                     l13831:
  4765                           
  4766                           ; BSR set to: 0
  4767                           ;task.c: 218: else
  4768                           ;task.c: 219: {
  4769                           ;task.c: 250: MiApp_StartConnection(0x00, 10, 0);
  4770  002B30  0E0A               	movlw	10
  4771  002B32  6F65               	movwf	MiApp_StartConnection@ScanDuration& (0+255),b
  4772  002B34  0E00               	movlw	0
  4773  002B36  6B66               	clrf	MiApp_StartConnection@ChannelMap& (0+255),b
  4774  002B38  6B67               	clrf	(MiApp_StartConnection@ChannelMap+1)& (0+255),b
  4775  002B3A  6B68               	clrf	(MiApp_StartConnection@ChannelMap+2)& (0+255),b
  4776  002B3C  6B69               	clrf	(MiApp_StartConnection@ChannelMap+3)& (0+255),b
  4777  002B3E  ECB2  F019         	call	_MiApp_StartConnection
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;task.c: 251: role = 1;
  4781  002B42  0E01               	movlw	1
  4782  002B44  6E41               	movwf	_role,c
  4783  002B46                     l13835:
  4784                           
  4785                           ;task.c: 252: }
  4786                           ;task.c: 254: NVMWrite((uint8_t *)&role, nvmRole, 1);
  4787  002B46  0E41               	movlw	low _role
  4788  002B48  6E1E               	movwf	NVMWrite@source,c
  4789  002B4A  6A1F               	clrf	NVMWrite@source+1,c
  4790  002B4C  C0F8  F020         	movff	_nvmRole,NVMWrite@addr
  4791  002B50  C0F9  F021         	movff	_nvmRole+1,NVMWrite@addr+1
  4792  002B54  6A23               	clrf	NVMWrite@count+1,c
  4793  002B56  0E01               	movlw	1
  4794  002B58  6E22               	movwf	NVMWrite@count,c
  4795  002B5A  ECB3  F015         	call	_NVMWrite	;wreg free
  4796                           
  4797                           ;task.c: 271: LATAbits.LATA2 = 1;
  4798  002B5E  8489               	bsf	3977,2,c	;volatile
  4799  002B60                     L23:
  4800                           
  4801                           ;task.c: 275: STAR_DEMO_OPTIONS_MESSAGE (role);
  4802  002B60  5041               	movf	_role,w,c
  4803  002B62  EF63  F01D         	goto	_STAR_DEMO_OPTIONS_MESSAGE
  4804  002B66                     __end_of_Initialize_Demo:
  4805                           	opt stack 0
  4806                           tblptru	equ	0xFF8
  4807                           tblptrh	equ	0xFF7
  4808                           tblptrl	equ	0xFF6
  4809                           tablat	equ	0xFF5
  4810                           prodh	equ	0xFF4
  4811                           prodl	equ	0xFF3
  4812                           intcon	equ	0xFF2
  4813                           intcon2	equ	0xFF1
  4814                           intcon3	equ	0xFF0
  4815                           postinc0	equ	0xFEE
  4816                           wreg	equ	0xFE8
  4817                           indf1	equ	0xFE7
  4818                           postdec1	equ	0xFE5
  4819                           fsr1h	equ	0xFE2
  4820                           fsr1l	equ	0xFE1
  4821                           indf2	equ	0xFDF
  4822                           fsr2h	equ	0xFDA
  4823                           fsr2l	equ	0xFD9
  4824                           status	equ	0xFD8
  4825                           
  4826 ;; *************** function _STAR_DEMO_OPTIONS_MESSAGE *****************
  4827 ;; Defined at:
  4828 ;;		line 212 in file "../src/demo_ouput.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  NetworkRole     1    wreg     unsigned char 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  NetworkRole     1   44[BANK0 ] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : F/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4843 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4845 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4846 ;;Total ram usage:        1 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    7
  4849 ;; This function calls:
  4850 ;;		_LCDDisplay
  4851 ;; This function is called by:
  4852 ;;		_Initialize_Demo
  4853 ;;		_Process_RxMessage
  4854 ;;		_run_star_demo
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           	psect	text17
  4859  003AC6                     __ptext17:
  4860                           	opt stack 0
  4861  003AC6                     _STAR_DEMO_OPTIONS_MESSAGE:
  4862                           	opt stack 21
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;incstack = 0
  4866                           ;STAR_DEMO_OPTIONS_MESSAGE@NetworkRole stored from wreg
  4867  003AC6  0100               	movlb	0	; () banked
  4868  003AC8  6F8C               	movwf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),b
  4869                           
  4870                           ;demo_ouput.c: 214: if (NetworkRole)
  4871  003ACA  518C               	movf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),w,b
  4872  003ACC  E004               	bz	l13049
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;demo_ouput.c: 215: {
  4876                           ;demo_ouput.c: 217: LCDDisplay((char *)"PC :RB0 or RB2  to Broadcast", 0, 0);
  4877  003ACE  0EC0               	movlw	low STR_8
  4878  003AD0  6F87               	movwf	LCDDisplay@text& (0+255),b
  4879  003AD2  0EFE               	movlw	high STR_8
  4880  003AD4  D003               	goto	L24
  4881  003AD6                     l13049:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;demo_ouput.c: 222: else
  4885                           ;demo_ouput.c: 223: {
  4886                           ;demo_ouput.c: 225: LCDDisplay((char *)"RB0 : Unicast   RB2 : Next Node", 0, 0);
  4887  003AD6  0E63               	movlw	low STR_9
  4888  003AD8  6F87               	movwf	LCDDisplay@text& (0+255),b
  4889  003ADA  0EFE               	movlw	high STR_9
  4890  003ADC                     L24:
  4891  003ADC  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
  4892  003ADE  6B89               	clrf	LCDDisplay@value& (0+255),b
  4893  003AE0  6B8A               	clrf	LCDDisplay@delay& (0+255),b
  4894  003AE2  EF14  F01B         	goto	_LCDDisplay	;wreg free
  4895  003AE6                     __end_of_STAR_DEMO_OPTIONS_MESSAGE:
  4896                           	opt stack 0
  4897                           tblptru	equ	0xFF8
  4898                           tblptrh	equ	0xFF7
  4899                           tblptrl	equ	0xFF6
  4900                           tablat	equ	0xFF5
  4901                           prodh	equ	0xFF4
  4902                           prodl	equ	0xFF3
  4903                           intcon	equ	0xFF2
  4904                           intcon2	equ	0xFF1
  4905                           intcon3	equ	0xFF0
  4906                           postinc0	equ	0xFEE
  4907                           wreg	equ	0xFE8
  4908                           indf1	equ	0xFE7
  4909                           postdec1	equ	0xFE5
  4910                           fsr1h	equ	0xFE2
  4911                           fsr1l	equ	0xFE1
  4912                           indf2	equ	0xFDF
  4913                           fsr2h	equ	0xFDA
  4914                           fsr2l	equ	0xFD9
  4915                           status	equ	0xFD8
  4916                           
  4917 ;; *************** function _Read_MAC_Address *****************
  4918 ;; Defined at:
  4919 ;;		line 79 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/eeprom.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  myAddress       2   34[COMRAM] PTR unsigned char 
  4922 ;;		 -> myLongAddress(8), 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  i               1    2[BANK0 ] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      void 
  4927 ;; Registers used:
  4928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : F/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4937 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4938 ;;Total ram usage:        5 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    6
  4941 ;; This function calls:
  4942 ;;		_EEPROM_Read
  4943 ;; This function is called by:
  4944 ;;		_Initialize_Demo
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text18
  4949  002FEA                     __ptext18:
  4950                           	opt stack 0
  4951  002FEA                     _Read_MAC_Address:
  4952                           	opt stack 23
  4953                           
  4954                           ;eeprom.c: 84: {
  4955                           ;eeprom.c: 85: for(i = 0; i < 3; i++)
  4956                           
  4957                           ; BSR set to: 0
  4958                           ;incstack = 0
  4959  002FEA  0100               	movlb	0	; () banked
  4960  002FEC  6B62               	clrf	Read_MAC_Address@i& (0+255),b
  4961  002FEE                     l13447:
  4962                           
  4963                           ; BSR set to: 0
  4964                           ;eeprom.c: 86: {
  4965                           ;eeprom.c: 87: EEPROM_Read(&(myAddress[8-1-i]), 0xFA+i, 1);
  4966  002FEE  5162               	movf	Read_MAC_Address@i& (0+255),w,b
  4967  002FF0  5C23               	subwf	Read_MAC_Address@myAddress,w,c
  4968  002FF2  6F60               	movwf	??_Read_MAC_Address& (0+255),b
  4969  002FF4  0E00               	movlw	0
  4970  002FF6  5824               	subwfb	Read_MAC_Address@myAddress+1,w,c
  4971  002FF8  6F61               	movwf	(??_Read_MAC_Address+1)& (0+255),b
  4972  002FFA  0E07               	movlw	7
  4973  002FFC  2560               	addwf	??_Read_MAC_Address& (0+255),w,b
  4974  002FFE  6E1E               	movwf	EEPROM_Read@dest,c
  4975  003000  0E00               	movlw	0
  4976  003002  2161               	addwfc	(??_Read_MAC_Address+1)& (0+255),w,b
  4977  003004  6E1F               	movwf	EEPROM_Read@dest+1,c
  4978  003006  5162               	movf	Read_MAC_Address@i& (0+255),w,b
  4979  003008  0FFA               	addlw	250
  4980  00300A  6E20               	movwf	EEPROM_Read@addr,c
  4981  00300C  0E01               	movlw	1
  4982  00300E  6E21               	movwf	EEPROM_Read@count,c
  4983  003010  EC57  F01B         	call	_EEPROM_Read	;wreg free
  4984  003014  0100               	movlb	0	; () banked
  4985  003016  2B62               	incf	Read_MAC_Address@i& (0+255),f,b
  4986                           
  4987                           ; BSR set to: 0
  4988  003018  0E02               	movlw	2
  4989  00301A  6562               	cpfsgt	Read_MAC_Address@i& (0+255),b
  4990  00301C  D7E8               	goto	l13447
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;eeprom.c: 91: {
  4994                           ;eeprom.c: 92: myAddress[4] = 0xFF;
  4995  00301E  EE20 F004          	lfsr	2,4
  4996  003022  5023               	movf	Read_MAC_Address@myAddress,w,c
  4997  003024  26D9               	addwf	fsr2l,f,c
  4998  003026  5024               	movf	Read_MAC_Address@myAddress+1,w,c
  4999  003028  22DA               	addwfc	fsr2h,f,c
  5000  00302A  68DF               	setf	indf2,c
  5001                           
  5002                           ; BSR set to: 0
  5003                           ;eeprom.c: 94: }
  5004                           ;eeprom.c: 95: myAddress[3] = 0xFE;
  5005  00302C  EE20 F003          	lfsr	2,3
  5006  003030  5023               	movf	Read_MAC_Address@myAddress,w,c
  5007  003032  26D9               	addwf	fsr2l,f,c
  5008  003034  5024               	movf	Read_MAC_Address@myAddress+1,w,c
  5009  003036  22DA               	addwfc	fsr2h,f,c
  5010  003038  0EFE               	movlw	254
  5011  00303A  6EDF               	movwf	indf2,c
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;eeprom.c: 97: for(i = 0; i < 3; i++)
  5015  00303C  6B62               	clrf	Read_MAC_Address@i& (0+255),b
  5016  00303E                     l13461:
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;eeprom.c: 98: {
  5020                           ;eeprom.c: 99: EEPROM_Read(&(myAddress[2-i]), 0xFA+3+i, 1);
  5021  00303E  5162               	movf	Read_MAC_Address@i& (0+255),w,b
  5022  003040  5C23               	subwf	Read_MAC_Address@myAddress,w,c
  5023  003042  6F60               	movwf	??_Read_MAC_Address& (0+255),b
  5024  003044  0E00               	movlw	0
  5025  003046  5824               	subwfb	Read_MAC_Address@myAddress+1,w,c
  5026  003048  6F61               	movwf	(??_Read_MAC_Address+1)& (0+255),b
  5027  00304A  0E02               	movlw	2
  5028  00304C  2560               	addwf	??_Read_MAC_Address& (0+255),w,b
  5029  00304E  6E1E               	movwf	EEPROM_Read@dest,c
  5030  003050  0E00               	movlw	0
  5031  003052  2161               	addwfc	(??_Read_MAC_Address+1)& (0+255),w,b
  5032  003054  6E1F               	movwf	EEPROM_Read@dest+1,c
  5033  003056  5162               	movf	Read_MAC_Address@i& (0+255),w,b
  5034  003058  0FFD               	addlw	253
  5035  00305A  6E20               	movwf	EEPROM_Read@addr,c
  5036  00305C  0E01               	movlw	1
  5037  00305E  6E21               	movwf	EEPROM_Read@count,c
  5038  003060  EC57  F01B         	call	_EEPROM_Read	;wreg free
  5039  003064  0100               	movlb	0	; () banked
  5040  003066  2B62               	incf	Read_MAC_Address@i& (0+255),f,b
  5041                           
  5042                           ; BSR set to: 0
  5043  003068  0E02               	movlw	2
  5044  00306A  6562               	cpfsgt	Read_MAC_Address@i& (0+255),b
  5045  00306C  D7E8               	goto	l13461
  5046  00306E  0C02               	retlw	2
  5047  003070                     __end_of_Read_MAC_Address:
  5048                           	opt stack 0
  5049                           tblptru	equ	0xFF8
  5050                           tblptrh	equ	0xFF7
  5051                           tblptrl	equ	0xFF6
  5052                           tablat	equ	0xFF5
  5053                           prodh	equ	0xFF4
  5054                           prodl	equ	0xFF3
  5055                           intcon	equ	0xFF2
  5056                           intcon2	equ	0xFF1
  5057                           intcon3	equ	0xFF0
  5058                           postinc0	equ	0xFEE
  5059                           wreg	equ	0xFE8
  5060                           indf1	equ	0xFE7
  5061                           postdec1	equ	0xFE5
  5062                           fsr1h	equ	0xFE2
  5063                           fsr1l	equ	0xFE1
  5064                           indf2	equ	0xFDF
  5065                           fsr2h	equ	0xFDA
  5066                           fsr2l	equ	0xFD9
  5067                           status	equ	0xFD8
  5068                           
  5069 ;; *************** function _EEPROM_Read *****************
  5070 ;; Defined at:
  5071 ;;		line 43 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/eeprom.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  dest            2   29[COMRAM] PTR unsigned char 
  5074 ;;		 -> myLongAddress(8), 
  5075 ;;  addr            1   31[COMRAM] unsigned char 
  5076 ;;  count           1   32[COMRAM] unsigned char 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  oldGIEH         1   33[COMRAM] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : F/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5091 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5092 ;;Total ram usage:        5 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    5
  5095 ;; This function calls:
  5096 ;;		_SPI1_Exchange8bit
  5097 ;; This function is called by:
  5098 ;;		_Read_MAC_Address
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text19
  5103  0036AE                     __ptext19:
  5104                           	opt stack 0
  5105  0036AE                     _EEPROM_Read:
  5106                           	opt stack 23
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;eeprom.c: 46: uint8_t oldGIEH = INTCONbits.GIEH;
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;incstack = 0
  5113  0036AE  0E00               	movlw	0
  5114  0036B0  BEF2               	btfsc	intcon,7,c	;volatile
  5115  0036B2  0E01               	movlw	1
  5116  0036B4  6E22               	movwf	EEPROM_Read@oldGIEH,c
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;eeprom.c: 48: INTCONbits.GIEH = 0;
  5120  0036B6  9EF2               	bcf	intcon,7,c	;volatile
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;eeprom.c: 51: LATCbits.LATC2 = 0;
  5124  0036B8  948B               	bcf	3979,2,c	;volatile
  5125                           
  5126                           ; BSR set to: 0
  5127                           ;eeprom.c: 52: SPI1_Exchange8bit(0x03);
  5128  0036BA  0E03               	movlw	3
  5129  0036BC  ECFE  F01D         	call	_SPI1_Exchange8bit
  5130                           
  5131                           ;eeprom.c: 53: SPI1_Exchange8bit(addr);
  5132  0036C0  5020               	movf	EEPROM_Read@addr,w,c
  5133  0036C2  ECFE  F01D         	call	_SPI1_Exchange8bit
  5134                           
  5135                           ;eeprom.c: 54: while( count )
  5136  0036C6  D00B               	goto	l13257
  5137  0036C8                     l13251:
  5138                           
  5139                           ;eeprom.c: 55: {
  5140                           ;eeprom.c: 57: *dest++ = SPI1_Exchange8bit(0x00);
  5141  0036C8  0E00               	movlw	0
  5142  0036CA  ECFE  F01D         	call	_SPI1_Exchange8bit
  5143  0036CE  C01E  FFD9         	movff	EEPROM_Read@dest,fsr2l
  5144  0036D2  C01F  FFDA         	movff	EEPROM_Read@dest+1,fsr2h
  5145  0036D6  6EDF               	movwf	indf2,c
  5146  0036D8  4A1E               	infsnz	EEPROM_Read@dest,f,c
  5147  0036DA  2A1F               	incf	EEPROM_Read@dest+1,f,c
  5148                           
  5149                           ;eeprom.c: 58: count--;
  5150  0036DC  0621               	decf	EEPROM_Read@count,f,c
  5151  0036DE                     l13257:
  5152  0036DE  5021               	movf	EEPROM_Read@count,w,c
  5153  0036E0  E1F3               	bnz	l13251
  5154                           
  5155                           ;eeprom.c: 59: }
  5156                           ;eeprom.c: 60: LATCbits.LATC2 = 1;
  5157  0036E2  848B               	bsf	3979,2,c	;volatile
  5158                           
  5159                           ;eeprom.c: 63: INTCONbits.GIEH = oldGIEH;
  5160  0036E4  B022               	btfsc	EEPROM_Read@oldGIEH,0,c
  5161  0036E6  D002               	bra	u14045
  5162  0036E8  9EF2               	bcf	intcon,7,c	;volatile
  5163  0036EA  D001               	bra	u14046
  5164  0036EC                     u14045:
  5165  0036EC  8EF2               	bsf	intcon,7,c	;volatile
  5166  0036EE                     u14046:
  5167  0036EE  0012               	return		;funcret
  5168  0036F0                     __end_of_EEPROM_Read:
  5169                           	opt stack 0
  5170                           tblptru	equ	0xFF8
  5171                           tblptrh	equ	0xFF7
  5172                           tblptrl	equ	0xFF6
  5173                           tablat	equ	0xFF5
  5174                           prodh	equ	0xFF4
  5175                           prodl	equ	0xFF3
  5176                           intcon	equ	0xFF2
  5177                           intcon2	equ	0xFF1
  5178                           intcon3	equ	0xFF0
  5179                           postinc0	equ	0xFEE
  5180                           wreg	equ	0xFE8
  5181                           indf1	equ	0xFE7
  5182                           postdec1	equ	0xFE5
  5183                           fsr1h	equ	0xFE2
  5184                           fsr1l	equ	0xFE1
  5185                           indf2	equ	0xFDF
  5186                           fsr2h	equ	0xFDA
  5187                           fsr2l	equ	0xFD9
  5188                           status	equ	0xFD8
  5189                           
  5190 ;; *************** function _MiApp_StartConnection *****************
  5191 ;; Defined at:
  5192 ;;		line 2142 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  Mode            1    wreg     unsigned char 
  5195 ;;  ScanDuration    1    5[BANK0 ] unsigned char 
  5196 ;;  ChannelMap      4    6[BANK0 ] unsigned long 
  5197 ;; Auto vars:     Size  Location     Type
  5198 ;;  Mode            1   10[BANK0 ] unsigned char 
  5199 ;;  tmp             2   11[BANK0 ] unsigned int 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      unsigned char 
  5202 ;; Registers used:
  5203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : F/0
  5206 ;;		On exit  : F/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5209 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5210 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5212 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5213 ;;Total ram usage:        8 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    7
  5216 ;; This function calls:
  5217 ;;		_MiMAC_SetAltAddress
  5218 ;;		_MiWi_TickGet
  5219 ;; This function is called by:
  5220 ;;		_Initialize_Demo
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text20
  5225  003364                     __ptext20:
  5226                           	opt stack 0
  5227  003364                     _MiApp_StartConnection:
  5228                           	opt stack 22
  5229                           
  5230                           ;incstack = 0
  5231                           ;MiApp_StartConnection@Mode stored from wreg
  5232  003364  6F6A               	movwf	MiApp_StartConnection@Mode& (0+255),b
  5233                           
  5234                           ;miwi_p2p.c: 2144: switch(Mode)
  5235  003366  D020               	goto	l13431
  5236  003368                     l13417:
  5237                           
  5238                           ; BSR set to: 0
  5239                           ;miwi_p2p.c: 2152: myPANID.Val = 0x1234;
  5240  003368  0E12               	movlw	18
  5241  00336A  6FED               	movwf	(_myPANID+1)& (0+255),b
  5242  00336C  0E34               	movlw	52
  5243  00336E  6FEC               	movwf	_myPANID& (0+255),b
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;miwi_p2p.c: 2154: {
  5247                           ;miwi_p2p.c: 2155: uint16_t tmp = 0xFFFF;
  5248  003370  696B               	setf	MiApp_StartConnection@tmp& (0+255),b
  5249  003372  696C               	setf	(MiApp_StartConnection@tmp+1)& (0+255),b
  5250                           
  5251                           ; BSR set to: 0
  5252                           ;miwi_p2p.c: 2156: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
  5253  003374  0EEC               	movlw	low _myPANID
  5254  003376  6E21               	movwf	MiMAC_SetAltAddress@PANID,c
  5255  003378  0E6B               	movlw	MiApp_StartConnection@tmp& (0+255)
  5256  00337A  EC87  F019         	call	_MiMAC_SetAltAddress
  5257                           
  5258                           ;miwi_p2p.c: 2157: }
  5259                           ;miwi_p2p.c: 2162: tick1 = MiWi_TickGet();
  5260  00337E  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  5261  003382  C01D  F110         	movff	?_MiWi_TickGet,_tick1
  5262  003386  C01E  F111         	movff	?_MiWi_TickGet+1,_tick1+1
  5263  00338A  C01F  F112         	movff	?_MiWi_TickGet+2,_tick1+2
  5264  00338E  C020  F113         	movff	?_MiWi_TickGet+3,_tick1+3
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;miwi_p2p.c: 2163: tick4 = MiWi_TickGet();
  5268  003392  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  5269  003396  C01D  F114         	movff	?_MiWi_TickGet,_tick4
  5270  00339A  C01E  F115         	movff	?_MiWi_TickGet+1,_tick4+1
  5271  00339E  C01F  F116         	movff	?_MiWi_TickGet+2,_tick4+2
  5272  0033A2  C020  F117         	movff	?_MiWi_TickGet+3,_tick4+3
  5273  0033A6  0012               	return	
  5274  0033A8                     l13431:
  5275  0033A8  0100               	movlb	0	; () banked
  5276  0033AA  516A               	movf	MiApp_StartConnection@Mode& (0+255),w,b
  5277                           
  5278                           ; Switch size 1, requested type "speed"
  5279                           ; Number of cases is 3, Range of values is 0 to 2
  5280                           ; switch strategies available:
  5281                           ; Name         Instructions Cycles
  5282                           ; simple_byte           10     6 (average)
  5283                           ;	Chosen strategy is simple_byte
  5284  0033AC  E0DD               	bz	l13417
  5285  0033AE  0A01               	xorlw	1	; case 1
  5286  0033B0  A4D8               	btfss	status,2,c
  5287  0033B2  0A03               	xorlw	3	; case 2
  5288  0033B4  0012               	return	
  5289  0033B6                     __end_of_MiApp_StartConnection:
  5290                           	opt stack 0
  5291                           tblptru	equ	0xFF8
  5292                           tblptrh	equ	0xFF7
  5293                           tblptrl	equ	0xFF6
  5294                           tablat	equ	0xFF5
  5295                           prodh	equ	0xFF4
  5296                           prodl	equ	0xFF3
  5297                           intcon	equ	0xFF2
  5298                           intcon2	equ	0xFF1
  5299                           intcon3	equ	0xFF0
  5300                           postinc0	equ	0xFEE
  5301                           wreg	equ	0xFE8
  5302                           indf1	equ	0xFE7
  5303                           postdec1	equ	0xFE5
  5304                           fsr1h	equ	0xFE2
  5305                           fsr1l	equ	0xFE1
  5306                           indf2	equ	0xFDF
  5307                           fsr2h	equ	0xFDA
  5308                           fsr2l	equ	0xFD9
  5309                           status	equ	0xFD8
  5310                           
  5311 ;; *************** function _MiApp_ProtocolInit *****************
  5312 ;; Defined at:
  5313 ;;		line 1130 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;  bNetworkFree    1    wreg     unsigned char 
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  bNetworkFree    1   27[BANK0 ] unsigned char 
  5318 ;;  tmp             2   25[BANK0 ] unsigned int 
  5319 ;;  initValue       3   28[BANK0 ] struct .
  5320 ;;  i               1   31[BANK0 ] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      unsigned char 
  5323 ;; Registers used:
  5324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : F/0
  5327 ;;		On exit  : F/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5331 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5333 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;Total ram usage:        7 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:    9
  5337 ;; This function calls:
  5338 ;;		_MiApp_SetChannel
  5339 ;;		_MiMAC_Init
  5340 ;;		_MiMAC_SetAltAddress
  5341 ;;		_NVMInit
  5342 ;;		_NVMRead
  5343 ;;		_NVMWrite
  5344 ;; This function is called by:
  5345 ;;		_Initialize_Demo
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	text21
  5350  001FB4                     __ptext21:
  5351                           	opt stack 0
  5352  001FB4                     _MiApp_ProtocolInit:
  5353                           	opt stack 20
  5354                           
  5355                           ; BSR set to: 0
  5356                           ;incstack = 0
  5357                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  5358  001FB4  6F7B               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
  5359                           
  5360                           ;miwi_p2p.c: 1132: uint8_t i;
  5361                           ;miwi_p2p.c: 1134: MACINIT_PARAM initValue;
  5362                           ;miwi_p2p.c: 1137: NVMInit();
  5363  001FB6  EC27  F017         	call	_NVMInit	;wreg free
  5364                           
  5365                           ; BSR set to: 0
  5366                           ;miwi_p2p.c: 1141: P2PStatus.Val = 0;
  5367  001FBA  6BE2               	clrf	_P2PStatus& (0+255),b	;volatile
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;miwi_p2p.c: 1142: if (!bNetworkFreezer)
  5371  001FBC  517B               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5372  001FBE  E137               	bnz	l529
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;miwi_p2p.c: 1143: {
  5376                           ;miwi_p2p.c: 1144: for(i = 0; i < 20; i++)
  5377  001FC0  6B7F               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5378  001FC2                     l13349:
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;miwi_p2p.c: 1145: {
  5382                           ;miwi_p2p.c: 1146: ConnectionTable[i].status.Val = 0;
  5383  001FC2  517F               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5384  001FC4  0D0E               	mullw	14
  5385  001FC6  0E5C               	movlw	low (_ConnectionTable+12)
  5386  001FC8  24F3               	addwf	prodl,w,c
  5387  001FCA  6ED9               	movwf	fsr2l,c
  5388  001FCC  0E03               	movlw	high (_ConnectionTable+12)
  5389  001FCE  20F4               	addwfc	prodh,w,c
  5390  001FD0  6EDA               	movwf	fsr2h,c
  5391  001FD2  6ADF               	clrf	indf2,c
  5392                           
  5393                           ;miwi_p2p.c: 1147: ConnectionTable[i].Address[0] = 0x00;
  5394  001FD4  517F               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5395  001FD6  0D0E               	mullw	14
  5396  001FD8  0E54               	movlw	low (_ConnectionTable+4)
  5397  001FDA  24F3               	addwf	prodl,w,c
  5398  001FDC  6ED9               	movwf	fsr2l,c
  5399  001FDE  0E03               	movlw	high (_ConnectionTable+4)
  5400  001FE0  20F4               	addwfc	prodh,w,c
  5401  001FE2  6EDA               	movwf	fsr2h,c
  5402  001FE4  6ADF               	clrf	indf2,c
  5403                           
  5404                           ;miwi_p2p.c: 1148: ConnectionTable[i].Address[1] = 0x00;
  5405  001FE6  517F               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5406  001FE8  0D0E               	mullw	14
  5407  001FEA  0E55               	movlw	low (_ConnectionTable+5)
  5408  001FEC  24F3               	addwf	prodl,w,c
  5409  001FEE  6ED9               	movwf	fsr2l,c
  5410  001FF0  0E03               	movlw	high (_ConnectionTable+5)
  5411  001FF2  20F4               	addwfc	prodh,w,c
  5412  001FF4  6EDA               	movwf	fsr2h,c
  5413  001FF6  6ADF               	clrf	indf2,c
  5414                           
  5415                           ;miwi_p2p.c: 1149: ConnectionTable[i].Address[2] = 0x00;
  5416  001FF8  517F               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5417  001FFA  0D0E               	mullw	14
  5418  001FFC  0E56               	movlw	low (_ConnectionTable+6)
  5419  001FFE  24F3               	addwf	prodl,w,c
  5420  002000  6ED9               	movwf	fsr2l,c
  5421  002002  0E03               	movlw	high (_ConnectionTable+6)
  5422  002004  20F4               	addwfc	prodh,w,c
  5423  002006  6EDA               	movwf	fsr2h,c
  5424  002008  6ADF               	clrf	indf2,c
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;miwi_p2p.c: 1151: link_stat[i] = 0x00;
  5428  00200A  0E00               	movlw	low _link_stat
  5429  00200C  257F               	addwf	MiApp_ProtocolInit@i& (0+255),w,b
  5430  00200E  6ED9               	movwf	fsr2l,c
  5431  002010  6ADA               	clrf	fsr2h,c
  5432  002012  0E02               	movlw	high _link_stat
  5433  002014  22DA               	addwfc	fsr2h,f,c
  5434  002016  6ADF               	clrf	indf2,c
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;miwi_p2p.c: 1152: permanent_connections[i] = 0x00;
  5438  002018  0E14               	movlw	low _permanent_connections
  5439  00201A  257F               	addwf	MiApp_ProtocolInit@i& (0+255),w,b
  5440  00201C  6ED9               	movwf	fsr2l,c
  5441  00201E  6ADA               	clrf	fsr2h,c
  5442  002020  0E02               	movlw	high _permanent_connections
  5443  002022  22DA               	addwfc	fsr2h,f,c
  5444  002024  6ADF               	clrf	indf2,c
  5445                           
  5446                           ; BSR set to: 0
  5447  002026  2B7F               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5448                           
  5449                           ; BSR set to: 0
  5450  002028  0E13               	movlw	19
  5451  00202A  657F               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5452  00202C  D7CA               	goto	l13349
  5453  00202E                     l529:
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;miwi_p2p.c: 1154: }
  5457                           ;miwi_p2p.c: 1155: }
  5458                           ;miwi_p2p.c: 1157: TxData = 0;
  5459  00202E  6BE5               	clrf	_TxData& (0+255),b
  5460                           
  5461                           ;miwi_p2p.c: 1166: for (i=0;i<20;i++)
  5462  002030  6B7F               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5463  002032                     l13363:
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;miwi_p2p.c: 1167: {
  5467  002032  2B7F               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5468                           
  5469                           ; BSR set to: 0
  5470  002034  0E13               	movlw	19
  5471  002036  657F               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5472  002038  D7FC               	goto	l13363
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;miwi_p2p.c: 1170: }
  5476                           ;miwi_p2p.c: 1180: if( bNetworkFreezer )
  5477  00203A  517B               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5478  00203C  E05C               	bz	l13377
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;miwi_p2p.c: 1181: {
  5482                           ;miwi_p2p.c: 1182: NVMRead( (uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  5483  00203E  0EFC               	movlw	low _currentChannel
  5484  002040  6E1E               	movwf	NVMRead@dest,c
  5485  002042  6A1F               	clrf	NVMRead@dest+1,c
  5486  002044  C0F0  F020         	movff	_nvmCurrentChannel,NVMRead@addr
  5487  002048  C0F1  F021         	movff	_nvmCurrentChannel+1,NVMRead@addr+1
  5488  00204C  6A23               	clrf	NVMRead@count+1,c
  5489  00204E  0E01               	movlw	1
  5490  002050  6E22               	movwf	NVMRead@count,c
  5491  002052  EC55  F01A         	call	_NVMRead	;wreg free
  5492                           
  5493                           ;miwi_p2p.c: 1183: if( currentChannel >= 32 )
  5494  002056  0E1F               	movlw	31
  5495  002058  0100               	movlb	0	; () banked
  5496  00205A  65FC               	cpfsgt	_currentChannel& (0+255),b
  5497  00205C  D001               	goto	l13375
  5498  00205E  0C1F               	retlw	31
  5499  002060                     l13375:
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;miwi_p2p.c: 1186: }
  5503                           ;miwi_p2p.c: 1189: NVMRead( (uint8_t *)myPANID.v, nvmMyPANID, 2);
  5504  002060  0EEC               	movlw	low _myPANID
  5505  002062  6E1E               	movwf	NVMRead@dest,c
  5506  002064  6A1F               	clrf	NVMRead@dest+1,c
  5507  002066  C0F4  F020         	movff	_nvmMyPANID,NVMRead@addr
  5508  00206A  C0F5  F021         	movff	_nvmMyPANID+1,NVMRead@addr+1
  5509  00206E  6A23               	clrf	NVMRead@count+1,c
  5510  002070  0E02               	movlw	2
  5511  002072  6E22               	movwf	NVMRead@count,c
  5512  002074  EC55  F01A         	call	_NVMRead	;wreg free
  5513                           
  5514                           ;miwi_p2p.c: 1191: NVMRead( (uint8_t *)&ConnMode, nvmConnMode, 1);
  5515  002078  0EFF               	movlw	low _ConnMode
  5516  00207A  6E1E               	movwf	NVMRead@dest,c
  5517  00207C  6A1F               	clrf	NVMRead@dest+1,c
  5518  00207E  C0EE  F020         	movff	_nvmConnMode,NVMRead@addr
  5519  002082  C0EF  F021         	movff	_nvmConnMode+1,NVMRead@addr+1
  5520  002086  6A23               	clrf	NVMRead@count+1,c
  5521  002088  0E01               	movlw	1
  5522  00208A  6E22               	movwf	NVMRead@count,c
  5523  00208C  EC55  F01A         	call	_NVMRead	;wreg free
  5524                           
  5525                           ;miwi_p2p.c: 1192: NVMRead( (uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)20
      +                           * sizeof(CONNECTION_ENTRY));
  5526  002090  0E50               	movlw	low _ConnectionTable
  5527  002092  6E1E               	movwf	NVMRead@dest,c
  5528  002094  0E03               	movlw	high _ConnectionTable
  5529  002096  6E1F               	movwf	NVMRead@dest+1,c
  5530  002098  C03E  F020         	movff	_nvmConnectionTable,NVMRead@addr
  5531  00209C  C03F  F021         	movff	_nvmConnectionTable+1,NVMRead@addr+1
  5532  0020A0  0E01               	movlw	1
  5533  0020A2  6E23               	movwf	NVMRead@count+1,c
  5534  0020A4  0E18               	movlw	24
  5535  0020A6  6E22               	movwf	NVMRead@count,c
  5536  0020A8  EC55  F01A         	call	_NVMRead	;wreg free
  5537                           
  5538                           ;miwi_p2p.c: 1195: NVMRead( (uint8_t *)&role, nvmRole, 1);
  5539  0020AC  0E41               	movlw	low _role
  5540  0020AE  6E1E               	movwf	NVMRead@dest,c
  5541  0020B0  6A1F               	clrf	NVMRead@dest+1,c
  5542  0020B2  C0F8  F020         	movff	_nvmRole,NVMRead@addr
  5543  0020B6  C0F9  F021         	movff	_nvmRole+1,NVMRead@addr+1
  5544  0020BA  6A23               	clrf	NVMRead@count+1,c
  5545  0020BC  0E01               	movlw	1
  5546  0020BE  6E22               	movwf	NVMRead@count,c
  5547  0020C0  EC55  F01A         	call	_NVMRead	;wreg free
  5548                           
  5549                           ;miwi_p2p.c: 1196: NVMRead( (uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
  5550  0020C4  0EFD               	movlw	low _myConnectionIndex_in_PanCo
  5551  0020C6  6E1E               	movwf	NVMRead@dest,c
  5552  0020C8  6A1F               	clrf	NVMRead@dest+1,c
  5553  0020CA  C0FA  F020         	movff	_nvmmyIndex,NVMRead@addr
  5554  0020CE  C0FB  F021         	movff	_nvmmyIndex+1,NVMRead@addr+1
  5555  0020D2  6A23               	clrf	NVMRead@count+1,c
  5556  0020D4  0E01               	movlw	1
  5557  0020D6  6E22               	movwf	NVMRead@count,c
  5558  0020D8  EC55  F01A         	call	_NVMRead	;wreg free
  5559                           
  5560                           ;miwi_p2p.c: 1198: NVMRead( (uint8_t *)&conn_size, nvmEdc, 1);
  5561  0020DC  0E40               	movlw	low _conn_size
  5562  0020DE  6E1E               	movwf	NVMRead@dest,c
  5563  0020E0  6A1F               	clrf	NVMRead@dest+1,c
  5564  0020E2  C0F2  F020         	movff	_nvmEdc,NVMRead@addr
  5565  0020E6  C0F3  F021         	movff	_nvmEdc+1,NVMRead@addr+1
  5566  0020EA  6A23               	clrf	NVMRead@count+1,c
  5567  0020EC  0E01               	movlw	1
  5568  0020EE  6E22               	movwf	NVMRead@count,c
  5569  0020F0  EC55  F01A         	call	_NVMRead	;wreg free
  5570                           
  5571                           ;miwi_p2p.c: 1202: ;
  5572                           ;miwi_p2p.c: 1203: ;
  5573                           ;miwi_p2p.c: 1204: ;
  5574                           ;miwi_p2p.c: 1205: ;
  5575                           ;miwi_p2p.c: 1206: ;
  5576                           ;miwi_p2p.c: 1210: }
  5577  0020F4  D036               	goto	l13387
  5578  0020F6                     l13377:
  5579                           
  5580                           ; BSR set to: 0
  5581                           ;miwi_p2p.c: 1211: else
  5582                           ;miwi_p2p.c: 1212: {
  5583                           ;miwi_p2p.c: 1214: myPANID.Val = 0x1234;
  5584  0020F6  0E12               	movlw	18
  5585  0020F8  6FED               	movwf	(_myPANID+1)& (0+255),b
  5586  0020FA  0E34               	movlw	52
  5587  0020FC  6FEC               	movwf	_myPANID& (0+255),b
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;miwi_p2p.c: 1215: NVMWrite((uint8_t *)myPANID.v, nvmMyPANID, 2);
  5591  0020FE  0EEC               	movlw	low _myPANID
  5592  002100  6E1E               	movwf	NVMWrite@source,c
  5593  002102  6A1F               	clrf	NVMWrite@source+1,c
  5594  002104  C0F4  F020         	movff	_nvmMyPANID,NVMWrite@addr
  5595  002108  C0F5  F021         	movff	_nvmMyPANID+1,NVMWrite@addr+1
  5596  00210C  6A23               	clrf	NVMWrite@count+1,c
  5597  00210E  0E02               	movlw	2
  5598  002110  6E22               	movwf	NVMWrite@count,c
  5599  002112  ECB3  F015         	call	_NVMWrite	;wreg free
  5600                           
  5601                           ;miwi_p2p.c: 1217: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  5602  002116  0EFC               	movlw	low _currentChannel
  5603  002118  6E1E               	movwf	NVMWrite@source,c
  5604  00211A  6A1F               	clrf	NVMWrite@source+1,c
  5605  00211C  C0F0  F020         	movff	_nvmCurrentChannel,NVMWrite@addr
  5606  002120  C0F1  F021         	movff	_nvmCurrentChannel+1,NVMWrite@addr+1
  5607  002124  6A23               	clrf	NVMWrite@count+1,c
  5608  002126  0E01               	movlw	1
  5609  002128  6E22               	movwf	NVMWrite@count,c
  5610  00212A  ECB3  F015         	call	_NVMWrite	;wreg free
  5611                           
  5612                           ;miwi_p2p.c: 1218: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
  5613  00212E  0EFF               	movlw	low _ConnMode
  5614  002130  6E1E               	movwf	NVMWrite@source,c
  5615  002132  6A1F               	clrf	NVMWrite@source+1,c
  5616  002134  C0EE  F020         	movff	_nvmConnMode,NVMWrite@addr
  5617  002138  C0EF  F021         	movff	_nvmConnMode+1,NVMWrite@addr+1
  5618  00213C  6A23               	clrf	NVMWrite@count+1,c
  5619  00213E  0E01               	movlw	1
  5620  002140  6E22               	movwf	NVMWrite@count,c
  5621  002142  ECB3  F015         	call	_NVMWrite	;wreg free
  5622                           
  5623                           ;miwi_p2p.c: 1219: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)20
      +                           * sizeof(CONNECTION_ENTRY));
  5624  002146  0E50               	movlw	low _ConnectionTable
  5625  002148  6E1E               	movwf	NVMWrite@source,c
  5626  00214A  0E03               	movlw	high _ConnectionTable
  5627  00214C  6E1F               	movwf	NVMWrite@source+1,c
  5628  00214E  C03E  F020         	movff	_nvmConnectionTable,NVMWrite@addr
  5629  002152  C03F  F021         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  5630  002156  0E01               	movlw	1
  5631  002158  6E23               	movwf	NVMWrite@count+1,c
  5632  00215A  0E18               	movlw	24
  5633  00215C  6E22               	movwf	NVMWrite@count,c
  5634  00215E  ECB3  F015         	call	_NVMWrite	;wreg free
  5635  002162                     l13387:
  5636                           
  5637                           ;miwi_p2p.c: 1221: }
  5638                           ;miwi_p2p.c: 1228: initValue.PAddress = myLongAddress;
  5639  002162  0E61               	movlw	low _myLongAddress
  5640  002164  0100               	movlb	0	; () banked
  5641  002166  6F7D               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
  5642  002168  0E01               	movlw	high _myLongAddress
  5643  00216A  6F7E               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;miwi_p2p.c: 1229: initValue.actionFlags.bits.CCAEnable = 1;
  5647  00216C  837C               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
  5648                           
  5649                           ; BSR set to: 0
  5650                           ;miwi_p2p.c: 1230: initValue.actionFlags.bits.PAddrLength = 8;
  5651  00216E  517C               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
  5652  002170  0B87               	andlw	-121
  5653  002172  0940               	iorlw	64
  5654  002174  6F7C               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;miwi_p2p.c: 1231: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
  5658  002176  B17B               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
  5659  002178  D002               	bra	u14195
  5660  00217A  957C               	bcf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5661  00217C  D002               	bra	u14196
  5662  00217E                     u14195:
  5663  00217E  0100               	movlb	0	; () banked
  5664  002180  857C               	bsf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5665  002182                     u14196:
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;miwi_p2p.c: 1232: initValue.actionFlags.bits.RepeaterMode = 0;
  5669  002182  917C               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;miwi_p2p.c: 1234: MiMAC_Init(initValue);
  5673  002184  C07C  F075         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
  5674  002188  C07D  F076         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
  5675  00218C  C07E  F077         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
  5676  002190  EC15  F01C         	call	_MiMAC_Init	;wreg free
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;miwi_p2p.c: 1237: {
  5680                           ;miwi_p2p.c: 1238: uint16_t tmp = 0xFFFF;
  5681  002194  6979               	setf	MiApp_ProtocolInit@tmp& (0+255),b
  5682  002196  697A               	setf	(MiApp_ProtocolInit@tmp+1)& (0+255),b
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;miwi_p2p.c: 1239: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
  5686  002198  0EEC               	movlw	low _myPANID
  5687  00219A  6E21               	movwf	MiMAC_SetAltAddress@PANID,c
  5688  00219C  0E79               	movlw	MiApp_ProtocolInit@tmp& (0+255)
  5689  00219E  EC87  F019         	call	_MiMAC_SetAltAddress
  5690                           
  5691                           ;miwi_p2p.c: 1240: }
  5692                           ;miwi_p2p.c: 1243: MiApp_SetChannel(currentChannel);
  5693  0021A2  0100               	movlb	0	; () banked
  5694  0021A4  51FC               	movf	_currentChannel& (0+255),w,b
  5695  0021A6  EC69  F01C         	call	_MiApp_SetChannel
  5696                           
  5697                           ;miwi_p2p.c: 1254: P2PCapacityInfo = 0;
  5698  0021AA  0100               	movlb	0	; () banked
  5699  0021AC  6BE1               	clrf	_P2PCapacityInfo& (0+255),b
  5700                           
  5701                           ; BSR set to: 0
  5702                           ;miwi_p2p.c: 1256: P2PCapacityInfo |= 0x01;
  5703  0021AE  81E1               	bsf	_P2PCapacityInfo& (0+255),0,b
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;miwi_p2p.c: 1261: P2PCapacityInfo |= (ConnMode << 4);
  5707  0021B0  39FF               	swapf	_ConnMode& (0+255),w,b
  5708  0021B2  0BF0               	andlw	240
  5709  0021B4  13E1               	iorwf	_P2PCapacityInfo& (0+255),f,b
  5710                           
  5711                           ; BSR set to: 0
  5712                           ;miwi_p2p.c: 1263: INTCON3bits.INT1IE = 1;
  5713  0021B6  86F0               	bsf	intcon3,3,c	;volatile
  5714                           
  5715                           ; BSR set to: 0
  5716  0021B8  0012               	return		;funcret
  5717  0021BA                     __end_of_MiApp_ProtocolInit:
  5718                           	opt stack 0
  5719                           tblptru	equ	0xFF8
  5720                           tblptrh	equ	0xFF7
  5721                           tblptrl	equ	0xFF6
  5722                           tablat	equ	0xFF5
  5723                           prodh	equ	0xFF4
  5724                           prodl	equ	0xFF3
  5725                           intcon	equ	0xFF2
  5726                           intcon2	equ	0xFF1
  5727                           intcon3	equ	0xFF0
  5728                           postinc0	equ	0xFEE
  5729                           wreg	equ	0xFE8
  5730                           indf1	equ	0xFE7
  5731                           postdec1	equ	0xFE5
  5732                           fsr1h	equ	0xFE2
  5733                           fsr1l	equ	0xFE1
  5734                           indf2	equ	0xFDF
  5735                           fsr2h	equ	0xFDA
  5736                           fsr2l	equ	0xFD9
  5737                           status	equ	0xFD8
  5738                           
  5739 ;; *************** function _NVMRead *****************
  5740 ;; Defined at:
  5741 ;;		line 129 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  dest            2   29[COMRAM] PTR unsigned char 
  5744 ;;		 -> myConnectionIndex_in_PanCo(1), myPANID(2), ConnMode(1), currentChannel(1), 
  5745 ;;		 -> role(1), conn_size(1), ConnectionTable(280), 
  5746 ;;  addr            2   31[COMRAM] unsigned int 
  5747 ;;  count           2   33[COMRAM] unsigned int 
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;  oldRFIE         1   35[COMRAM] unsigned char 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5759 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;Total ram usage:        7 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    5
  5766 ;; This function calls:
  5767 ;;		_SPI1_Exchange8bit
  5768 ;; This function is called by:
  5769 ;;		_MiApp_ProtocolInit
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text22
  5774  0034AA                     __ptext22:
  5775                           	opt stack 0
  5776  0034AA                     _NVMRead:
  5777                           	opt stack 23
  5778                           
  5779                           ;miwi_nvm.c: 136: uint8_t oldRFIE = INTCON3bits.INT1IE;
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;incstack = 0
  5783  0034AA  0E00               	movlw	0
  5784  0034AC  B6F0               	btfsc	intcon3,3,c	;volatile
  5785  0034AE  0E01               	movlw	1
  5786  0034B0  6E24               	movwf	NVMRead@oldRFIE,c
  5787                           
  5788                           ;miwi_nvm.c: 138: INTCON3bits.INT1IE = 0;
  5789  0034B2  96F0               	bcf	intcon3,3,c	;volatile
  5790                           
  5791                           ;miwi_nvm.c: 141: LATDbits.LATD5 = 0;
  5792  0034B4  9A8C               	bcf	3980,5,c	;volatile
  5793                           
  5794                           ;miwi_nvm.c: 160: SPI1_Exchange8bit(0x03);
  5795  0034B6  0E03               	movlw	3
  5796  0034B8  ECFE  F01D         	call	_SPI1_Exchange8bit
  5797                           
  5798                           ;miwi_nvm.c: 161: SPI1_Exchange8bit(addr>>8);
  5799  0034BC  5021               	movf	NVMRead@addr+1,w,c
  5800  0034BE  ECFE  F01D         	call	_SPI1_Exchange8bit
  5801                           
  5802                           ;miwi_nvm.c: 162: SPI1_Exchange8bit(addr);
  5803  0034C2  5020               	movf	NVMRead@addr,w,c
  5804  0034C4  ECFE  F01D         	call	_SPI1_Exchange8bit
  5805                           
  5806                           ;miwi_nvm.c: 165: while( count > 0 )
  5807  0034C8  D00D               	goto	l13099
  5808  0034CA                     l13093:
  5809                           
  5810                           ;miwi_nvm.c: 166: {
  5811                           ;miwi_nvm.c: 167: *dest++ = SPI1_Exchange8bit(0x00);
  5812  0034CA  0E00               	movlw	0
  5813  0034CC  ECFE  F01D         	call	_SPI1_Exchange8bit
  5814  0034D0  C01E  FFD9         	movff	NVMRead@dest,fsr2l
  5815  0034D4  C01F  FFDA         	movff	NVMRead@dest+1,fsr2h
  5816  0034D8  6EDF               	movwf	indf2,c
  5817  0034DA  4A1E               	infsnz	NVMRead@dest,f,c
  5818  0034DC  2A1F               	incf	NVMRead@dest+1,f,c
  5819                           
  5820                           ;miwi_nvm.c: 168: count--;
  5821  0034DE  0622               	decf	NVMRead@count,f,c
  5822  0034E0  A0D8               	btfss	status,0,c
  5823  0034E2  0623               	decf	NVMRead@count+1,f,c
  5824  0034E4                     l13099:
  5825  0034E4  5022               	movf	NVMRead@count,w,c
  5826  0034E6  1023               	iorwf	NVMRead@count+1,w,c
  5827  0034E8  E1F0               	bnz	l13093
  5828                           
  5829                           ;miwi_nvm.c: 169: }
  5830                           ;miwi_nvm.c: 170: LATDbits.LATD5 = 1;
  5831  0034EA  8A8C               	bsf	3980,5,c	;volatile
  5832                           
  5833                           ;miwi_nvm.c: 175: INTCON3bits.INT1IE = oldRFIE;
  5834  0034EC  B024               	btfsc	NVMRead@oldRFIE,0,c
  5835  0034EE  D002               	bra	u13915
  5836  0034F0  96F0               	bcf	intcon3,3,c	;volatile
  5837  0034F2  D001               	bra	u13916
  5838  0034F4                     u13915:
  5839  0034F4  86F0               	bsf	intcon3,3,c	;volatile
  5840  0034F6                     u13916:
  5841  0034F6  0012               	return		;funcret
  5842  0034F8                     __end_of_NVMRead:
  5843                           	opt stack 0
  5844                           tblptru	equ	0xFF8
  5845                           tblptrh	equ	0xFF7
  5846                           tblptrl	equ	0xFF6
  5847                           tablat	equ	0xFF5
  5848                           prodh	equ	0xFF4
  5849                           prodl	equ	0xFF3
  5850                           intcon	equ	0xFF2
  5851                           intcon2	equ	0xFF1
  5852                           intcon3	equ	0xFF0
  5853                           postinc0	equ	0xFEE
  5854                           wreg	equ	0xFE8
  5855                           indf1	equ	0xFE7
  5856                           postdec1	equ	0xFE5
  5857                           fsr1h	equ	0xFE2
  5858                           fsr1l	equ	0xFE1
  5859                           indf2	equ	0xFDF
  5860                           fsr2h	equ	0xFDA
  5861                           fsr2l	equ	0xFD9
  5862                           status	equ	0xFD8
  5863                           
  5864 ;; *************** function _NVMInit *****************
  5865 ;; Defined at:
  5866 ;;		line 631 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;		None
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  result          1   33[COMRAM] unsigned char 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      unsigned char 
  5873 ;; Registers used:
  5874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : F/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5884 ;;Total ram usage:        1 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    5
  5887 ;; This function calls:
  5888 ;;		_NVMalloc
  5889 ;; This function is called by:
  5890 ;;		_MiApp_ProtocolInit
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           	psect	text23
  5895  002E4E                     __ptext23:
  5896                           	opt stack 0
  5897  002E4E                     _NVMInit:
  5898                           	opt stack 23
  5899                           
  5900                           ;miwi_nvm.c: 633: bool result = 1;
  5901                           
  5902                           ;incstack = 0
  5903  002E4E  0E01               	movlw	1
  5904  002E50  6E22               	movwf	NVMInit@result,c
  5905                           
  5906                           ;miwi_nvm.c: 635: nextEEPosition = 0;
  5907  002E52  0100               	movlb	0	; () banked
  5908  002E54  6BDA               	clrf	_nextEEPosition& (0+255),b
  5909  002E56  6BDB               	clrf	(_nextEEPosition+1)& (0+255),b
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;miwi_nvm.c: 637: result &= NVMalloc(2, &nvmMyPANID);
  5913  002E58  6A1E               	clrf	NVMalloc@size+1,c
  5914  002E5A  0E02               	movlw	2
  5915  002E5C  6E1D               	movwf	NVMalloc@size,c
  5916  002E5E  0EF4               	movlw	low _nvmMyPANID
  5917  002E60  6E1F               	movwf	NVMalloc@location,c
  5918  002E62  EC99  F01C         	call	_NVMalloc	;wreg free
  5919  002E66  1622               	andwf	NVMInit@result,f,c
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;miwi_nvm.c: 638: result &= NVMalloc(1, &nvmCurrentChannel);
  5923  002E68  6A1E               	clrf	NVMalloc@size+1,c
  5924  002E6A  0E01               	movlw	1
  5925  002E6C  6E1D               	movwf	NVMalloc@size,c
  5926  002E6E  0EF0               	movlw	low _nvmCurrentChannel
  5927  002E70  6E1F               	movwf	NVMalloc@location,c
  5928  002E72  EC99  F01C         	call	_NVMalloc	;wreg free
  5929  002E76  1622               	andwf	NVMInit@result,f,c
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;miwi_nvm.c: 639: result &= NVMalloc(1, &nvmConnMode);
  5933  002E78  6A1E               	clrf	NVMalloc@size+1,c
  5934  002E7A  0E01               	movlw	1
  5935  002E7C  6E1D               	movwf	NVMalloc@size,c
  5936  002E7E  0EEE               	movlw	low _nvmConnMode
  5937  002E80  6E1F               	movwf	NVMalloc@location,c
  5938  002E82  EC99  F01C         	call	_NVMalloc	;wreg free
  5939  002E86  1622               	andwf	NVMInit@result,f,c
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;miwi_nvm.c: 640: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 20, &nvmConnectionTable)
      +                          ;
  5943  002E88  0E01               	movlw	1
  5944  002E8A  6E1E               	movwf	NVMalloc@size+1,c
  5945  002E8C  0E18               	movlw	24
  5946  002E8E  6E1D               	movwf	NVMalloc@size,c
  5947  002E90  0E3E               	movlw	low _nvmConnectionTable
  5948  002E92  6E1F               	movwf	NVMalloc@location,c
  5949  002E94  EC99  F01C         	call	_NVMalloc	;wreg free
  5950  002E98  1622               	andwf	NVMInit@result,f,c
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;miwi_nvm.c: 641: result &= NVMalloc(4, &nvmOutFrameCounter);
  5954  002E9A  6A1E               	clrf	NVMalloc@size+1,c
  5955  002E9C  0E04               	movlw	4
  5956  002E9E  6E1D               	movwf	NVMalloc@size,c
  5957  002EA0  0EF6               	movlw	low _nvmOutFrameCounter
  5958  002EA2  6E1F               	movwf	NVMalloc@location,c
  5959  002EA4  EC99  F01C         	call	_NVMalloc	;wreg free
  5960  002EA8  1622               	andwf	NVMInit@result,f,c
  5961                           
  5962                           ; BSR set to: 0
  5963                           ;miwi_nvm.c: 642: result &= NVMalloc(1,&nvmEdc);
  5964  002EAA  6A1E               	clrf	NVMalloc@size+1,c
  5965  002EAC  0E01               	movlw	1
  5966  002EAE  6E1D               	movwf	NVMalloc@size,c
  5967  002EB0  0EF2               	movlw	low _nvmEdc
  5968  002EB2  6E1F               	movwf	NVMalloc@location,c
  5969  002EB4  EC99  F01C         	call	_NVMalloc	;wreg free
  5970  002EB8  1622               	andwf	NVMInit@result,f,c
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;miwi_nvm.c: 645: result &= NVMalloc(1,&nvmRole);
  5974  002EBA  6A1E               	clrf	NVMalloc@size+1,c
  5975  002EBC  0E01               	movlw	1
  5976  002EBE  6E1D               	movwf	NVMalloc@size,c
  5977  002EC0  0EF8               	movlw	low _nvmRole
  5978  002EC2  6E1F               	movwf	NVMalloc@location,c
  5979  002EC4  EC99  F01C         	call	_NVMalloc	;wreg free
  5980  002EC8  1622               	andwf	NVMInit@result,f,c
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;miwi_nvm.c: 646: result &= NVMalloc(1,&nvmmyIndex);
  5984  002ECA  6A1E               	clrf	NVMalloc@size+1,c
  5985  002ECC  0E01               	movlw	1
  5986  002ECE  6E1D               	movwf	NVMalloc@size,c
  5987  002ED0  0EFA               	movlw	low _nvmmyIndex
  5988  002ED2  6E1F               	movwf	NVMalloc@location,c
  5989  002ED4  EC99  F01C         	call	_NVMalloc	;wreg free
  5990  002ED8  1622               	andwf	NVMInit@result,f,c
  5991                           
  5992                           ; BSR set to: 0
  5993  002EDA  0012               	return		;funcret
  5994  002EDC                     __end_of_NVMInit:
  5995                           	opt stack 0
  5996                           tblptru	equ	0xFF8
  5997                           tblptrh	equ	0xFF7
  5998                           tblptrl	equ	0xFF6
  5999                           tablat	equ	0xFF5
  6000                           prodh	equ	0xFF4
  6001                           prodl	equ	0xFF3
  6002                           intcon	equ	0xFF2
  6003                           intcon2	equ	0xFF1
  6004                           intcon3	equ	0xFF0
  6005                           postinc0	equ	0xFEE
  6006                           wreg	equ	0xFE8
  6007                           indf1	equ	0xFE7
  6008                           postdec1	equ	0xFE5
  6009                           fsr1h	equ	0xFE2
  6010                           fsr1l	equ	0xFE1
  6011                           indf2	equ	0xFDF
  6012                           fsr2h	equ	0xFDA
  6013                           fsr2l	equ	0xFD9
  6014                           status	equ	0xFD8
  6015                           
  6016 ;; *************** function _NVMalloc *****************
  6017 ;; Defined at:
  6018 ;;		line 616 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  size            2   28[COMRAM] unsigned int 
  6021 ;;  location        1   30[COMRAM] PTR unsigned int 
  6022 ;;		 -> nvmmyIndex(2), nvmRole(2), nvmEdc(2), nvmOutFrameCounter(2), 
  6023 ;;		 -> nvmConnectionTable(2), nvmConnMode(2), nvmCurrentChannel(2), nvmMyPANID(2), 
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;		None
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  1    wreg      unsigned char 
  6028 ;; Registers used:
  6029 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6030 ;; Tracked objects:
  6031 ;;		On entry : F/0
  6032 ;;		On exit  : F/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6035 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6038 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6039 ;;Total ram usage:        5 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; Hardware stack levels required when called:    4
  6042 ;; This function calls:
  6043 ;;		Nothing
  6044 ;; This function is called by:
  6045 ;;		_NVMInit
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text24
  6050  003932                     __ptext24:
  6051                           	opt stack 0
  6052  003932                     _NVMalloc:
  6053                           	opt stack 23
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;miwi_nvm.c: 620: if ((nextEEPosition + size) > 32768)
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;incstack = 0
  6060  003932  501D               	movf	NVMalloc@size,w,c
  6061  003934  25DA               	addwf	_nextEEPosition& (0+255),w,b
  6062  003936  6E20               	movwf	??_NVMalloc& (0+255),c
  6063  003938  501E               	movf	NVMalloc@size+1,w,c
  6064  00393A  21DB               	addwfc	(_nextEEPosition+1)& (0+255),w,b
  6065  00393C  6E21               	movwf	(??_NVMalloc+1)& (0+255),c
  6066  00393E  0420               	decf	??_NVMalloc,w,c
  6067  003940  0E80               	movlw	128
  6068  003942  5821               	subwfb	??_NVMalloc+1,w,c
  6069  003944  E301               	bnc	l13025
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;miwi_nvm.c: 621: {
  6073                           ;miwi_nvm.c: 622: return 0;
  6074  003946  0C00               	retlw	0
  6075  003948                     l13025:
  6076                           
  6077                           ; BSR set to: 0
  6078                           ;miwi_nvm.c: 623: }
  6079                           ;miwi_nvm.c: 625: *location = nextEEPosition;
  6080  003948  501F               	movf	NVMalloc@location,w,c
  6081  00394A  6ED9               	movwf	fsr2l,c
  6082  00394C  6ADA               	clrf	fsr2h,c
  6083  00394E  C0DA  FFDE         	movff	_nextEEPosition,postinc2
  6084  003952  C0DB  FFDD         	movff	_nextEEPosition+1,postdec2
  6085                           
  6086                           ; BSR set to: 0
  6087                           ;miwi_nvm.c: 626: nextEEPosition += size;
  6088  003956  501D               	movf	NVMalloc@size,w,c
  6089  003958  27DA               	addwf	_nextEEPosition& (0+255),f,b
  6090  00395A  501E               	movf	NVMalloc@size+1,w,c
  6091  00395C  23DB               	addwfc	(_nextEEPosition+1)& (0+255),f,b
  6092                           
  6093                           ; BSR set to: 0
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;miwi_nvm.c: 627: return 1;
  6097  00395E  0C01               	retlw	1	;funcret
  6098  003960                     __end_of_NVMalloc:
  6099                           	opt stack 0
  6100                           tblptru	equ	0xFF8
  6101                           tblptrh	equ	0xFF7
  6102                           tblptrl	equ	0xFF6
  6103                           tablat	equ	0xFF5
  6104                           prodh	equ	0xFF4
  6105                           prodl	equ	0xFF3
  6106                           intcon	equ	0xFF2
  6107                           intcon2	equ	0xFF1
  6108                           intcon3	equ	0xFF0
  6109                           postinc0	equ	0xFEE
  6110                           wreg	equ	0xFE8
  6111                           indf1	equ	0xFE7
  6112                           postdec1	equ	0xFE5
  6113                           fsr1h	equ	0xFE2
  6114                           fsr1l	equ	0xFE1
  6115                           indf2	equ	0xFDF
  6116                           postinc2	equ	0xFDE
  6117                           postdec2	equ	0xFDD
  6118                           fsr2h	equ	0xFDA
  6119                           fsr2l	equ	0xFD9
  6120                           status	equ	0xFD8
  6121                           
  6122 ;; *************** function _MiMAC_Init *****************
  6123 ;; Defined at:
  6124 ;;		line 1465 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;  initValue       3   21[BANK0 ] struct .
  6127 ;; Auto vars:     Size  Location     Type
  6128 ;;  i               1   24[BANK0 ] unsigned char 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  1    wreg      unsigned char 
  6131 ;; Registers used:
  6132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6133 ;; Tracked objects:
  6134 ;;		On entry : F/0
  6135 ;;		On exit  : F/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6138 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6141 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6142 ;;Total ram usage:        4 bytes
  6143 ;; Hardware stack levels used:    1
  6144 ;; Hardware stack levels required when called:    8
  6145 ;; This function calls:
  6146 ;;		_InitMRF24J40
  6147 ;; This function is called by:
  6148 ;;		_MiApp_ProtocolInit
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text25
  6153  00382A                     __ptext25:
  6154                           	opt stack 0
  6155  00382A                     _MiMAC_Init:
  6156                           	opt stack 20
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;drv_mrf_miwi_24j40.c: 1467: uint8_t i;
  6160                           ;drv_mrf_miwi_24j40.c: 1469: MACInitParams = initValue;
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;incstack = 0
  6164  00382A  C075  F0D5         	movff	MiMAC_Init@initValue,_MACInitParams
  6165  00382E  C076  F0D6         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
  6166  003832  C077  F0D7         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
  6167                           
  6168                           ;drv_mrf_miwi_24j40.c: 1471: IEEESeqNum = TMR0L;
  6169  003836  CFD6 F032          	movff	4054,_IEEESeqNum	;volatile
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;drv_mrf_miwi_24j40.c: 1473: MACCurrentChannel = 11;
  6173  00383A  0E0B               	movlw	11
  6174  00383C  6FDF               	movwf	_MACCurrentChannel& (0+255),b
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;drv_mrf_miwi_24j40.c: 1475: InitMRF24J40();
  6178  00383E  ECDD  F010         	call	_InitMRF24J40	;wreg free
  6179                           
  6180                           ;drv_mrf_miwi_24j40.c: 1477: MRF24J40Status.Val = 0;
  6181  003842  6A33               	clrf	_MRF24J40Status,c	;volatile
  6182                           
  6183                           ;drv_mrf_miwi_24j40.c: 1479: for (i = 0; i < 2; i++)
  6184  003844  0100               	movlb	0	; () banked
  6185  003846  6B78               	clrf	MiMAC_Init@i& (0+255),b
  6186  003848                     l13075:
  6187                           
  6188                           ; BSR set to: 0
  6189                           ;drv_mrf_miwi_24j40.c: 1480: {
  6190                           ;drv_mrf_miwi_24j40.c: 1481: RxBuffer[i].PayloadLen = 0;
  6191  003848  5178               	movf	MiMAC_Init@i& (0+255),w,b
  6192  00384A  0D45               	mullw	69
  6193  00384C  0E28               	movlw	low _RxBuffer
  6194  00384E  24F3               	addwf	prodl,w,c
  6195  003850  6ED9               	movwf	fsr2l,c
  6196  003852  0E02               	movlw	high _RxBuffer
  6197  003854  20F4               	addwfc	prodh,w,c
  6198  003856  6EDA               	movwf	fsr2h,c
  6199  003858  6ADF               	clrf	indf2,c
  6200                           
  6201                           ; BSR set to: 0
  6202  00385A  2B78               	incf	MiMAC_Init@i& (0+255),f,b
  6203                           
  6204                           ; BSR set to: 0
  6205  00385C  0E01               	movlw	1
  6206  00385E  6578               	cpfsgt	MiMAC_Init@i& (0+255),b
  6207  003860  D7F3               	goto	l13075
  6208  003862  0C01               	retlw	1
  6209  003864                     __end_of_MiMAC_Init:
  6210                           	opt stack 0
  6211                           tblptru	equ	0xFF8
  6212                           tblptrh	equ	0xFF7
  6213                           tblptrl	equ	0xFF6
  6214                           tablat	equ	0xFF5
  6215                           prodh	equ	0xFF4
  6216                           prodl	equ	0xFF3
  6217                           intcon	equ	0xFF2
  6218                           intcon2	equ	0xFF1
  6219                           intcon3	equ	0xFF0
  6220                           postinc0	equ	0xFEE
  6221                           wreg	equ	0xFE8
  6222                           indf1	equ	0xFE7
  6223                           postdec1	equ	0xFE5
  6224                           fsr1h	equ	0xFE2
  6225                           fsr1l	equ	0xFE1
  6226                           indf2	equ	0xFDF
  6227                           postinc2	equ	0xFDE
  6228                           postdec2	equ	0xFDD
  6229                           fsr2h	equ	0xFDA
  6230                           fsr2l	equ	0xFD9
  6231                           status	equ	0xFD8
  6232                           
  6233 ;; *************** function _MiApp_SetChannel *****************
  6234 ;; Defined at:
  6235 ;;		line 2378 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  channel         1    wreg     unsigned char 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  channel         1    2[BANK0 ] unsigned char 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      unsigned char 
  6242 ;; Registers used:
  6243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : F/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6250 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6252 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;Total ram usage:        1 bytes
  6254 ;; Hardware stack levels used:    1
  6255 ;; Hardware stack levels required when called:    7
  6256 ;; This function calls:
  6257 ;;		_MiMAC_SetChannel
  6258 ;;		_NVMWrite
  6259 ;; This function is called by:
  6260 ;;		_MiApp_ProtocolInit
  6261 ;;		_Initialize_Demo
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text26
  6266  0038D2                     __ptext26:
  6267                           	opt stack 0
  6268  0038D2                     _MiApp_SetChannel:
  6269                           	opt stack 22
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;incstack = 0
  6273                           ;MiApp_SetChannel@channel stored from wreg
  6274  0038D2  6F62               	movwf	MiApp_SetChannel@channel& (0+255),b
  6275                           
  6276                           ;miwi_p2p.c: 2380: if( MiMAC_SetChannel(channel, 0) )
  6277  0038D4  6A24               	clrf	MiMAC_SetChannel@offsetFreq,c
  6278  0038D6  0100               	movlb	0	; () banked
  6279  0038D8  5162               	movf	MiApp_SetChannel@channel& (0+255),w,b
  6280  0038DA  EC98  F01B         	call	_MiMAC_SetChannel
  6281  0038DE  0900               	iorlw	0
  6282  0038E0  E00F               	bz	l13133
  6283                           
  6284                           ;miwi_p2p.c: 2381: {
  6285                           ;miwi_p2p.c: 2382: currentChannel = channel;
  6286  0038E2  C062  F0FC         	movff	MiApp_SetChannel@channel,_currentChannel
  6287                           
  6288                           ;miwi_p2p.c: 2384: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  6289  0038E6  0EFC               	movlw	low _currentChannel
  6290  0038E8  6E1E               	movwf	NVMWrite@source,c
  6291  0038EA  6A1F               	clrf	NVMWrite@source+1,c
  6292  0038EC  C0F0  F020         	movff	_nvmCurrentChannel,NVMWrite@addr
  6293  0038F0  C0F1  F021         	movff	_nvmCurrentChannel+1,NVMWrite@addr+1
  6294  0038F4  6A23               	clrf	NVMWrite@count+1,c
  6295  0038F6  0E01               	movlw	1
  6296  0038F8  6E22               	movwf	NVMWrite@count,c
  6297  0038FA  ECB3  F015         	call	_NVMWrite	;wreg free
  6298                           
  6299                           ;miwi_p2p.c: 2386: return 1;
  6300  0038FE  0C01               	retlw	1
  6301  003900                     l13133:
  6302                           
  6303                           ;miwi_p2p.c: 2387: }
  6304                           ;miwi_p2p.c: 2388: return 0;
  6305  003900  0C00               	retlw	0	;funcret
  6306  003902                     __end_of_MiApp_SetChannel:
  6307                           	opt stack 0
  6308                           tblptru	equ	0xFF8
  6309                           tblptrh	equ	0xFF7
  6310                           tblptrl	equ	0xFF6
  6311                           tablat	equ	0xFF5
  6312                           prodh	equ	0xFF4
  6313                           prodl	equ	0xFF3
  6314                           intcon	equ	0xFF2
  6315                           intcon2	equ	0xFF1
  6316                           intcon3	equ	0xFF0
  6317                           postinc0	equ	0xFEE
  6318                           wreg	equ	0xFE8
  6319                           indf1	equ	0xFE7
  6320                           postdec1	equ	0xFE5
  6321                           fsr1h	equ	0xFE2
  6322                           fsr1l	equ	0xFE1
  6323                           indf2	equ	0xFDF
  6324                           postinc2	equ	0xFDE
  6325                           postdec2	equ	0xFDD
  6326                           fsr2h	equ	0xFDA
  6327                           fsr2l	equ	0xFD9
  6328                           status	equ	0xFD8
  6329                           
  6330 ;; *************** function _MiApp_EstablishConnection *****************
  6331 ;; Defined at:
  6332 ;;		line 2260 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6333 ;; Parameters:    Size  Location     Type
  6334 ;;  ActiveScanIn    1    wreg     unsigned char 
  6335 ;;  Mode            1  101[BANK0 ] unsigned char 
  6336 ;; Auto vars:     Size  Location     Type
  6337 ;;  ActiveScanIn    1    0[COMRAM] unsigned char 
  6338 ;;  i               1   15[BANK1 ] unsigned char 
  6339 ;;  t2              4   11[BANK1 ] struct _MIWI_TICK
  6340 ;;  t1              4    7[BANK1 ] struct _MIWI_TICK
  6341 ;;  connectionIn    1    6[BANK1 ] unsigned char 
  6342 ;;  retry           1    5[BANK1 ] unsigned char 
  6343 ;;  tmpConnectio    1    4[BANK1 ] unsigned char 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  1    wreg      unsigned char 
  6346 ;; Registers used:
  6347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6348 ;; Tracked objects:
  6349 ;;		On entry : F/0
  6350 ;;		On exit  : F/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6353 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6354 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6355 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6356 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6357 ;;Total ram usage:       17 bytes
  6358 ;; Hardware stack levels used:    1
  6359 ;; Hardware stack levels required when called:   15
  6360 ;; This function calls:
  6361 ;;		_MiApp_DiscardMessage
  6362 ;;		_MiApp_MessageAvailable
  6363 ;;		_MiWi_TickGet
  6364 ;;		_SendPacket
  6365 ;; This function is called by:
  6366 ;;		_Initialize_Demo
  6367 ;;		_run_star_demo
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text27
  6372  002504                     __ptext27:
  6373                           	opt stack 0
  6374  002504                     _MiApp_EstablishConnection:
  6375                           	opt stack 13
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;miwi_p2p.c: 2262: uint8_t tmpConnectionMode = ConnMode;
  6379                           
  6380                           ;incstack = 0
  6381  002504  C0FF  F16D         	movff	_ConnMode,MiApp_EstablishConnection@tmpConnectionMode
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;miwi_p2p.c: 2263: uint8_t retry = 3;
  6385  002508  0E03               	movlw	3
  6386  00250A  0101               	movlb	1	; () banked
  6387  00250C  6F6E               	movwf	MiApp_EstablishConnection@retry& (0+255),b
  6388                           
  6389                           ; BSR set to: 1
  6390                           ;miwi_p2p.c: 2264: uint8_t connectionInterval = 0;
  6391  00250E  6B6F               	clrf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6392                           
  6393                           ; BSR set to: 1
  6394                           ;miwi_p2p.c: 2265: MIWI_TICK t1, t2;
  6395                           ;miwi_p2p.c: 2266: tick1 = MiWi_TickGet();
  6396  002510  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  6397  002514  C01D  F110         	movff	?_MiWi_TickGet,_tick1
  6398  002518  C01E  F111         	movff	?_MiWi_TickGet+1,_tick1+1
  6399  00251C  C01F  F112         	movff	?_MiWi_TickGet+2,_tick1+2
  6400  002520  C020  F113         	movff	?_MiWi_TickGet+3,_tick1+3
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;miwi_p2p.c: 2267: if( Mode == 0x01 )
  6404  002524  05C5               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
  6405  002526  E101               	bnz	l13177
  6406                           
  6407                           ; BSR set to: 0
  6408                           ;miwi_p2p.c: 2268: {
  6409                           ;miwi_p2p.c: 2269: return 0xFF;
  6410  002528  0CFF               	retlw	255
  6411  00252A                     l13177:
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;miwi_p2p.c: 2270: }
  6415                           ;miwi_p2p.c: 2272: t1 = MiWi_TickGet();
  6416  00252A  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  6417  00252E  C01D  F170         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
  6418  002532  C01E  F171         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
  6419  002536  C01F  F172         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
  6420  00253A  C020  F173         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
  6421                           
  6422                           ; BSR set to: 0
  6423                           ;miwi_p2p.c: 2274: t1.Val -= (((uint32_t)(8000000)/32));
  6424  00253E  0E90               	movlw	144
  6425  002540  0101               	movlb	1	; () banked
  6426  002542  5F70               	subwf	MiApp_EstablishConnection@t1& (0+255),f,b
  6427  002544  0ED0               	movlw	208
  6428  002546  5B71               	subwfb	(MiApp_EstablishConnection@t1+1)& (0+255),f,b
  6429  002548  0E03               	movlw	3
  6430  00254A  5B72               	subwfb	(MiApp_EstablishConnection@t1+2)& (0+255),f,b
  6431  00254C  0E00               	movlw	0
  6432  00254E  5B73               	subwfb	(MiApp_EstablishConnection@t1+3)& (0+255),f,b
  6433                           
  6434                           ; BSR set to: 1
  6435                           ;miwi_p2p.c: 2275: ConnMode = 0x00;
  6436  002550  0100               	movlb	0	; () banked
  6437  002552  6BFF               	clrf	_ConnMode& (0+255),b
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;miwi_p2p.c: 2276: P2PStatus.bits.SearchConnection = 1;
  6441  002554  89E2               	bsf	_P2PStatus& (0+255),4,b	;volatile
  6442                           
  6443                           ;miwi_p2p.c: 2277: while( P2PStatus.bits.SearchConnection )
  6444  002556  D076               	goto	l13235
  6445  002558                     l13185:
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;miwi_p2p.c: 2278: {
  6449                           ;miwi_p2p.c: 2279: t2 = MiWi_TickGet();
  6450  002558  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  6451  00255C  C01D  F174         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
  6452  002560  C01E  F175         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
  6453  002564  C01F  F176         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
  6454  002568  C020  F177         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;miwi_p2p.c: 2280: if( (t2.Val - t1.Val) > (((uint32_t)(8000000)/32)) )
  6458  00256C  0101               	movlb	1	; () banked
  6459  00256E  5170               	movf	MiApp_EstablishConnection@t1& (0+255),w,b
  6460  002570  5D74               	subwf	MiApp_EstablishConnection@t2& (0+255),w,b
  6461  002572  6F69               	movwf	??_MiApp_EstablishConnection& (0+255),b
  6462  002574  5171               	movf	(MiApp_EstablishConnection@t1+1)& (0+255),w,b
  6463  002576  5975               	subwfb	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
  6464  002578  6F6A               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
  6465  00257A  5172               	movf	(MiApp_EstablishConnection@t1+2)& (0+255),w,b
  6466  00257C  5976               	subwfb	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
  6467  00257E  6F6B               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
  6468  002580  5173               	movf	(MiApp_EstablishConnection@t1+3)& (0+255),w,b
  6469  002582  5977               	subwfb	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
  6470  002584  6F6C               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
  6471  002586  516C               	movf	(??_MiApp_EstablishConnection+3)& (0+255),w,b
  6472  002588  E107               	bnz	u13970
  6473  00258A  0E91               	movlw	145
  6474  00258C  5D69               	subwf	??_MiApp_EstablishConnection& (0+255),w,b
  6475  00258E  0ED0               	movlw	208
  6476  002590  596A               	subwfb	(??_MiApp_EstablishConnection+1)& (0+255),w,b
  6477  002592  0E03               	movlw	3
  6478  002594  596B               	subwfb	(??_MiApp_EstablishConnection+2)& (0+255),w,b
  6479  002596  E350               	bnc	l13231
  6480  002598                     u13970:
  6481                           
  6482                           ; BSR set to: 1
  6483                           ;miwi_p2p.c: 2281: {
  6484                           ;miwi_p2p.c: 2282: t1.Val = t2.Val;
  6485  002598  C174  F170         	movff	MiApp_EstablishConnection@t2,MiApp_EstablishConnection@t1
  6486  00259C  C175  F171         	movff	MiApp_EstablishConnection@t2+1,MiApp_EstablishConnection@t1+1
  6487  0025A0  C176  F172         	movff	MiApp_EstablishConnection@t2+2,MiApp_EstablishConnection@t1+2
  6488  0025A4  C177  F173         	movff	MiApp_EstablishConnection@t2+3,MiApp_EstablishConnection@t1+3
  6489                           
  6490                           ; BSR set to: 1
  6491                           ;miwi_p2p.c: 2284: if( connectionInterval-- > 0 )
  6492  0025A8  076F               	decf	MiApp_EstablishConnection@connectionInterval& (0+255),f,b
  6493  0025AA  296F               	incf	MiApp_EstablishConnection@connectionInterval& (0+255),w,b
  6494  0025AC  E14B               	bnz	l13235
  6495                           
  6496                           ; BSR set to: 1
  6497                           ;miwi_p2p.c: 2287: }
  6498                           ;miwi_p2p.c: 2288: connectionInterval = 2-1;
  6499  0025AE  0E01               	movlw	1
  6500  0025B0  6F6F               	movwf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6501                           
  6502                           ; BSR set to: 1
  6503                           ;miwi_p2p.c: 2289: if( retry-- == 0 )
  6504  0025B2  076E               	decf	MiApp_EstablishConnection@retry& (0+255),f,b
  6505  0025B4  296E               	incf	MiApp_EstablishConnection@retry& (0+255),w,b
  6506  0025B6  E103               	bnz	l617
  6507                           
  6508                           ; BSR set to: 1
  6509                           ;miwi_p2p.c: 2290: {
  6510                           ;miwi_p2p.c: 2292: P2PStatus.bits.SearchConnection = 0;
  6511  0025B8  0100               	movlb	0	; () banked
  6512  0025BA  99E2               	bcf	_P2PStatus& (0+255),4,b	;volatile
  6513  0025BC  0CFF               	retlw	255
  6514  0025BE                     l617:
  6515                           
  6516                           ; BSR set to: 1
  6517                           ;miwi_p2p.c: 2294: }
  6518                           ;miwi_p2p.c: 2295: {TxData = 0;};
  6519  0025BE  0100               	movlb	0	; () banked
  6520  0025C0  6BE5               	clrf	_TxData& (0+255),b
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;miwi_p2p.c: 2296: TxBuffer[TxData++] = 0x81;
  6524  0025C2  0E18               	movlw	low _TxBuffer
  6525  0025C4  25E5               	addwf	_TxData& (0+255),w,b
  6526  0025C6  6ED9               	movwf	fsr2l,c
  6527  0025C8  6ADA               	clrf	fsr2h,c
  6528  0025CA  0E01               	movlw	high _TxBuffer
  6529  0025CC  22DA               	addwfc	fsr2h,f,c
  6530  0025CE  0E81               	movlw	129
  6531  0025D0  6EDF               	movwf	indf2,c
  6532                           
  6533                           ; BSR set to: 0
  6534  0025D2  2BE5               	incf	_TxData& (0+255),f,b
  6535                           
  6536                           ; BSR set to: 0
  6537                           ;miwi_p2p.c: 2297: TxBuffer[TxData++] = currentChannel;
  6538  0025D4  0E18               	movlw	low _TxBuffer
  6539  0025D6  25E5               	addwf	_TxData& (0+255),w,b
  6540  0025D8  6ED9               	movwf	fsr2l,c
  6541  0025DA  6ADA               	clrf	fsr2h,c
  6542  0025DC  0E01               	movlw	high _TxBuffer
  6543  0025DE  22DA               	addwfc	fsr2h,f,c
  6544  0025E0  C0FC  FFDF         	movff	_currentChannel,indf2
  6545  0025E4  2BE5               	incf	_TxData& (0+255),f,b
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;miwi_p2p.c: 2298: TxBuffer[TxData++] = P2PCapacityInfo;
  6549  0025E6  0E18               	movlw	low _TxBuffer
  6550  0025E8  25E5               	addwf	_TxData& (0+255),w,b
  6551  0025EA  6ED9               	movwf	fsr2l,c
  6552  0025EC  6ADA               	clrf	fsr2h,c
  6553  0025EE  0E01               	movlw	high _TxBuffer
  6554  0025F0  22DA               	addwfc	fsr2h,f,c
  6555  0025F2  C0E1  FFDF         	movff	_P2PCapacityInfo,indf2
  6556                           
  6557                           ; BSR set to: 0
  6558  0025F6  2BE5               	incf	_TxData& (0+255),f,b
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;miwi_p2p.c: 2305: {
  6562                           ;miwi_p2p.c: 2306: uint8_t i;
  6563                           ;miwi_p2p.c: 2308: for(i = 0; i < 1; i++)
  6564  0025F8  0101               	movlb	1	; () banked
  6565  0025FA  6B78               	clrf	MiApp_EstablishConnection@i& (0+255),b
  6566  0025FC                     l13221:
  6567                           
  6568                           ; BSR set to: 1
  6569                           ;miwi_p2p.c: 2309: {
  6570                           ;miwi_p2p.c: 2310: TxBuffer[TxData++] = AdditionalNodeID[i];
  6571  0025FC  5178               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6572  0025FE  0FFE               	addlw	low _AdditionalNodeID
  6573  002600  6ED9               	movwf	fsr2l,c
  6574  002602  6ADA               	clrf	fsr2h,c
  6575  002604  0E18               	movlw	low _TxBuffer
  6576  002606  0100               	movlb	0	; () banked
  6577  002608  25E5               	addwf	_TxData& (0+255),w,b
  6578  00260A  6EE1               	movwf	fsr1l,c
  6579  00260C  6AE2               	clrf	fsr1h,c
  6580  00260E  0E01               	movlw	high _TxBuffer
  6581  002610  22E2               	addwfc	fsr1h,f,c
  6582  002612  CFDF FFE7          	movff	indf2,indf1
  6583                           
  6584                           ; BSR set to: 0
  6585  002616  2BE5               	incf	_TxData& (0+255),f,b
  6586                           
  6587                           ; BSR set to: 0
  6588  002618  0101               	movlb	1	; () banked
  6589  00261A  2B78               	incf	MiApp_EstablishConnection@i& (0+255),f,b
  6590                           
  6591                           ; BSR set to: 1
  6592  00261C  5178               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6593  00261E  E0EE               	bz	l13221
  6594                           
  6595                           ; BSR set to: 1
  6596                           ;miwi_p2p.c: 2311: }
  6597                           ;miwi_p2p.c: 2312: }
  6598                           ;miwi_p2p.c: 2327: SendPacket(1, myPANID, (0), 1, 0);
  6599  002620  C0EC  F090         	movff	_myPANID,SendPacket@DestinationPANID
  6600  002624  C0ED  F091         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  6601  002628  0100               	movlb	0	; () banked
  6602  00262A  6B92               	clrf	SendPacket@DestinationAddress& (0+255),b
  6603  00262C  6B93               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  6604  00262E  0E01               	movlw	1
  6605  002630  6F94               	movwf	SendPacket@isCommand& (0+255),b
  6606  002632  6B95               	clrf	SendPacket@SecurityEnabled& (0+255),b
  6607  002634  EC09  F015         	call	_SendPacket
  6608  002638                     l13231:
  6609                           
  6610                           ;miwi_p2p.c: 2344: }
  6611                           ;miwi_p2p.c: 2346: if( MiApp_MessageAvailable())
  6612  002638  EC15  F01E         	call	_MiApp_MessageAvailable	;wreg free
  6613  00263C  0900               	iorlw	0
  6614  00263E  E002               	bz	l13235
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;miwi_p2p.c: 2347: {
  6618                           ;miwi_p2p.c: 2348: MiApp_DiscardMessage();
  6619  002640  EC1B  F01E         	call	_MiApp_DiscardMessage	;wreg free
  6620  002644                     l13235:
  6621  002644  0100               	movlb	0	; () banked
  6622  002646  B9E2               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  6623  002648  D787               	goto	l13185
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;miwi_p2p.c: 2349: }
  6627                           ;miwi_p2p.c: 2351: }
  6628                           ;miwi_p2p.c: 2353: ConnMode = tmpConnectionMode;
  6629  00264A  C16D  F0FF         	movff	MiApp_EstablishConnection@tmpConnectionMode,_ConnMode
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;miwi_p2p.c: 2360: return LatestConnection;
  6633  00264E  51DE               	movf	_LatestConnection& (0+255),w,b
  6634                           
  6635                           ; BSR set to: 0
  6636  002650  0012               	return		;funcret
  6637  002652                     __end_of_MiApp_EstablishConnection:
  6638                           	opt stack 0
  6639                           tblptru	equ	0xFF8
  6640                           tblptrh	equ	0xFF7
  6641                           tblptrl	equ	0xFF6
  6642                           tablat	equ	0xFF5
  6643                           prodh	equ	0xFF4
  6644                           prodl	equ	0xFF3
  6645                           intcon	equ	0xFF2
  6646                           intcon2	equ	0xFF1
  6647                           intcon3	equ	0xFF0
  6648                           postinc0	equ	0xFEE
  6649                           wreg	equ	0xFE8
  6650                           indf1	equ	0xFE7
  6651                           postdec1	equ	0xFE5
  6652                           fsr1h	equ	0xFE2
  6653                           fsr1l	equ	0xFE1
  6654                           indf2	equ	0xFDF
  6655                           postinc2	equ	0xFDE
  6656                           postdec2	equ	0xFDD
  6657                           fsr2h	equ	0xFDA
  6658                           fsr2l	equ	0xFD9
  6659                           status	equ	0xFD8
  6660                           
  6661 ;; *************** function _MiApp_MessageAvailable *****************
  6662 ;; Defined at:
  6663 ;;		line 2392 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;		None
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;		None
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  1    wreg      unsigned char 
  6670 ;; Registers used:
  6671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6672 ;; Tracked objects:
  6673 ;;		On entry : E/0
  6674 ;;		On exit  : F/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6681 ;;Total ram usage:        0 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:   14
  6684 ;; This function calls:
  6685 ;;		_P2PTasks
  6686 ;; This function is called by:
  6687 ;;		_MiApp_UnicastStar
  6688 ;;		_MiApp_EstablishConnection
  6689 ;;		_Process_RxMessage
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           	psect	text28
  6694  003C2A                     __ptext28:
  6695                           	opt stack 0
  6696  003C2A                     _MiApp_MessageAvailable:
  6697                           	opt stack 13
  6698                           
  6699                           ;miwi_p2p.c: 2394: P2PTasks();
  6700                           
  6701                           ; BSR set to: 0
  6702                           ;incstack = 0
  6703  003C2A  ECC8  F000         	call	_P2PTasks	;wreg free
  6704                           
  6705                           ;miwi_p2p.c: 2396: return P2PStatus.bits.RxHasUserData;
  6706  003C2E  0100               	movlb	0	; () banked
  6707  003C30  B7E2               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  6708  003C32  0C01               	retlw	1
  6709                           
  6710                           ; BSR set to: 0
  6711  003C34  0C00               	retlw	0	;funcret
  6712  003C36                     __end_of_MiApp_MessageAvailable:
  6713                           	opt stack 0
  6714                           tblptru	equ	0xFF8
  6715                           tblptrh	equ	0xFF7
  6716                           tblptrl	equ	0xFF6
  6717                           tablat	equ	0xFF5
  6718                           prodh	equ	0xFF4
  6719                           prodl	equ	0xFF3
  6720                           intcon	equ	0xFF2
  6721                           intcon2	equ	0xFF1
  6722                           intcon3	equ	0xFF0
  6723                           postinc0	equ	0xFEE
  6724                           wreg	equ	0xFE8
  6725                           indf1	equ	0xFE7
  6726                           postdec1	equ	0xFE5
  6727                           fsr1h	equ	0xFE2
  6728                           fsr1l	equ	0xFE1
  6729                           indf2	equ	0xFDF
  6730                           postinc2	equ	0xFDE
  6731                           postdec2	equ	0xFDD
  6732                           fsr2h	equ	0xFDA
  6733                           fsr2l	equ	0xFD9
  6734                           status	equ	0xFD8
  6735                           
  6736 ;; *************** function _P2PTasks *****************
  6737 ;; Defined at:
  6738 ;;		line 344 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;		None
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;  tmp             2   86[BANK0 ] unsigned int 
  6743 ;;  p               1   98[BANK0 ] unsigned char 
  6744 ;;  final_index     1   92[BANK0 ] unsigned char 
  6745 ;;  status          1   99[BANK0 ] unsigned char 
  6746 ;;  p               1   97[BANK0 ] unsigned char 
  6747 ;;  FW_Stat         1   85[BANK0 ] unsigned char 
  6748 ;;  tick3           4   93[BANK0 ] struct _MIWI_TICK
  6749 ;;  tick2           4   88[BANK0 ] struct _MIWI_TICK
  6750 ;;  tmpTick         4   81[BANK0 ] struct _MIWI_TICK
  6751 ;;  i               1  100[BANK0 ] unsigned char 
  6752 ;;  broadcast_st    1    0        unsigned char 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : E/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6763 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6764 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6765 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6766 ;;Total ram usage:       24 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:   13
  6769 ;; This function calls:
  6770 ;;		_AddConnection
  6771 ;;		_Find_InActiveDevices
  6772 ;;		_Find_Index
  6773 ;;		_Forward_Packet_PANCr_to_EDy
  6774 ;;		_MiApp_BroadcastConnectionTable
  6775 ;;		_MiMAC_DiscardPacket
  6776 ;;		_MiMAC_ReceivedPacket
  6777 ;;		_MiMAC_SetAltAddress
  6778 ;;		_MiWi_TickGet
  6779 ;;		_NVMWrite
  6780 ;;		_SW_Ack_SrED
  6781 ;;		_SendPacket
  6782 ;;		_isSameAddress
  6783 ;;		_send_link_status
  6784 ;;		_store_connection_tb
  6785 ;; This function is called by:
  6786 ;;		_MiApp_MessageAvailable
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text29
  6791  000190                     __ptext29:
  6792                           	opt stack 0
  6793  000190                     _P2PTasks:
  6794                           	opt stack 13
  6795                           
  6796                           ;miwi_p2p.c: 346: uint8_t i;
  6797                           ;miwi_p2p.c: 347: MIWI_TICK tmpTick ,tick2 , tick3 ;
  6798                           ;miwi_p2p.c: 348: bool broadcast_status;
  6799                           ;miwi_p2p.c: 351: tick2 = MiWi_TickGet();
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;incstack = 0
  6803  000190  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  6804  000194  C01D  F0B8         	movff	?_MiWi_TickGet,P2PTasks@tick2
  6805  000198  C01E  F0B9         	movff	?_MiWi_TickGet+1,P2PTasks@tick2+1
  6806  00019C  C01F  F0BA         	movff	?_MiWi_TickGet+2,P2PTasks@tick2+2
  6807  0001A0  C020  F0BB         	movff	?_MiWi_TickGet+3,P2PTasks@tick2+3
  6808                           
  6809                           ;miwi_p2p.c: 352: tick3 = MiWi_TickGet();
  6810  0001A4  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  6811  0001A8  C01D  F0BD         	movff	?_MiWi_TickGet,P2PTasks@tick3
  6812  0001AC  C01E  F0BE         	movff	?_MiWi_TickGet+1,P2PTasks@tick3+1
  6813  0001B0  C01F  F0BF         	movff	?_MiWi_TickGet+2,P2PTasks@tick3+2
  6814  0001B4  C020  F0C0         	movff	?_MiWi_TickGet+3,P2PTasks@tick3+3
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;miwi_p2p.c: 354: if (role)
  6818  0001B8  5041               	movf	_role,w,c
  6819  0001BA  E028               	bz	l12673
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;miwi_p2p.c: 355: {
  6823                           ;miwi_p2p.c: 356: if( (tick3.Val - tick4.Val) > ((((uint32_t)(8000000)/32)*60)*10))
  6824  0001BC  0101               	movlb	1	; () banked
  6825  0001BE  5114               	movf	_tick4& (0+255),w,b
  6826  0001C0  0100               	movlb	0	; () banked
  6827  0001C2  5DBD               	subwf	P2PTasks@tick3& (0+255),w,b
  6828  0001C4  6FAD               	movwf	??_P2PTasks& (0+255),b
  6829  0001C6  0101               	movlb	1	; () banked
  6830  0001C8  5115               	movf	(_tick4+1)& (0+255),w,b
  6831  0001CA  0100               	movlb	0	; () banked
  6832  0001CC  59BE               	subwfb	(P2PTasks@tick3+1)& (0+255),w,b
  6833  0001CE  6FAE               	movwf	(??_P2PTasks+1)& (0+255),b
  6834  0001D0  0101               	movlb	1	; () banked
  6835  0001D2  5116               	movf	(_tick4+2)& (0+255),w,b
  6836  0001D4  0100               	movlb	0	; () banked
  6837  0001D6  59BF               	subwfb	(P2PTasks@tick3+2)& (0+255),w,b
  6838  0001D8  6FAF               	movwf	(??_P2PTasks+2)& (0+255),b
  6839  0001DA  0101               	movlb	1	; () banked
  6840  0001DC  5117               	movf	(_tick4+3)& (0+255),w,b
  6841  0001DE  0100               	movlb	0	; () banked
  6842  0001E0  59C0               	subwfb	(P2PTasks@tick3+3)& (0+255),w,b
  6843  0001E2  6FB0               	movwf	(??_P2PTasks+3)& (0+255),b
  6844  0001E4  0E81               	movlw	129
  6845  0001E6  5DAD               	subwf	??_P2PTasks& (0+255),w,b
  6846  0001E8  0ED1               	movlw	209
  6847  0001EA  59AE               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  6848  0001EC  0EF0               	movlw	240
  6849  0001EE  59AF               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  6850  0001F0  0E08               	movlw	8
  6851  0001F2  59B0               	subwfb	(??_P2PTasks+3)& (0+255),w,b
  6852  0001F4  E332               	bnc	l12679
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;miwi_p2p.c: 357: {
  6856                           ;miwi_p2p.c: 358: Find_InActiveDevices ();
  6857  0001F6  EC5B  F019         	call	_Find_InActiveDevices	;wreg free
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;miwi_p2p.c: 359: tick4 = tick3;
  6861  0001FA  C0BD  F114         	movff	P2PTasks@tick3,_tick4
  6862  0001FE  C0BE  F115         	movff	P2PTasks@tick3+1,_tick4+1
  6863  000202  C0BF  F116         	movff	P2PTasks@tick3+2,_tick4+2
  6864  000206  C0C0  F117         	movff	P2PTasks@tick3+3,_tick4+3
  6865  00020A  D027               	goto	l12679
  6866  00020C                     l12673:
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;miwi_p2p.c: 363: else
  6870                           ;miwi_p2p.c: 364: {
  6871                           ;miwi_p2p.c: 365: if( (tick3.Val - tick1.Val) > (((uint32_t)(8000000)/32)*15) )
  6872  00020C  0101               	movlb	1	; () banked
  6873  00020E  5110               	movf	_tick1& (0+255),w,b
  6874  000210  0100               	movlb	0	; () banked
  6875  000212  5DBD               	subwf	P2PTasks@tick3& (0+255),w,b
  6876  000214  6FAD               	movwf	??_P2PTasks& (0+255),b
  6877  000216  0101               	movlb	1	; () banked
  6878  000218  5111               	movf	(_tick1+1)& (0+255),w,b
  6879  00021A  0100               	movlb	0	; () banked
  6880  00021C  59BE               	subwfb	(P2PTasks@tick3+1)& (0+255),w,b
  6881  00021E  6FAE               	movwf	(??_P2PTasks+1)& (0+255),b
  6882  000220  0101               	movlb	1	; () banked
  6883  000222  5112               	movf	(_tick1+2)& (0+255),w,b
  6884  000224  0100               	movlb	0	; () banked
  6885  000226  59BF               	subwfb	(P2PTasks@tick3+2)& (0+255),w,b
  6886  000228  6FAF               	movwf	(??_P2PTasks+2)& (0+255),b
  6887  00022A  0101               	movlb	1	; () banked
  6888  00022C  5113               	movf	(_tick1+3)& (0+255),w,b
  6889  00022E  0100               	movlb	0	; () banked
  6890  000230  59C0               	subwfb	(P2PTasks@tick3+3)& (0+255),w,b
  6891  000232  6FB0               	movwf	(??_P2PTasks+3)& (0+255),b
  6892  000234  51B0               	movf	(??_P2PTasks+3)& (0+255),w,b
  6893  000236  E107               	bnz	u13300
  6894  000238  0E71               	movlw	113
  6895  00023A  5DAD               	subwf	??_P2PTasks& (0+255),w,b
  6896  00023C  0E38               	movlw	56
  6897  00023E  59AE               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  6898  000240  0E39               	movlw	57
  6899  000242  59AF               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  6900  000244  E30A               	bnc	l12679
  6901  000246                     u13300:
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;miwi_p2p.c: 366: {
  6905                           ;miwi_p2p.c: 367: send_link_status ();
  6906  000246  ECB8  F01B         	call	_send_link_status	;wreg free
  6907                           
  6908                           ; BSR set to: 0
  6909                           ;miwi_p2p.c: 368: tick1 = tick3;
  6910  00024A  C0BD  F110         	movff	P2PTasks@tick3,_tick1
  6911  00024E  C0BE  F111         	movff	P2PTasks@tick3+1,_tick1+1
  6912  000252  C0BF  F112         	movff	P2PTasks@tick3+2,_tick1+2
  6913  000256  C0C0  F113         	movff	P2PTasks@tick3+3,_tick1+3
  6914  00025A                     l12679:
  6915                           
  6916                           ; BSR set to: 0
  6917                           ;miwi_p2p.c: 369: }
  6918                           ;miwi_p2p.c: 370: }
  6919                           ;miwi_p2p.c: 374: if( (tick2.Val - tick1.Val) > (((uint32_t)(8000000)/32)*15) && role)
  6920  00025A  0101               	movlb	1	; () banked
  6921  00025C  5110               	movf	_tick1& (0+255),w,b
  6922  00025E  0100               	movlb	0	; () banked
  6923  000260  5DB8               	subwf	P2PTasks@tick2& (0+255),w,b
  6924  000262  6FAD               	movwf	??_P2PTasks& (0+255),b
  6925  000264  0101               	movlb	1	; () banked
  6926  000266  5111               	movf	(_tick1+1)& (0+255),w,b
  6927  000268  0100               	movlb	0	; () banked
  6928  00026A  59B9               	subwfb	(P2PTasks@tick2+1)& (0+255),w,b
  6929  00026C  6FAE               	movwf	(??_P2PTasks+1)& (0+255),b
  6930  00026E  0101               	movlb	1	; () banked
  6931  000270  5112               	movf	(_tick1+2)& (0+255),w,b
  6932  000272  0100               	movlb	0	; () banked
  6933  000274  59BA               	subwfb	(P2PTasks@tick2+2)& (0+255),w,b
  6934  000276  6FAF               	movwf	(??_P2PTasks+2)& (0+255),b
  6935  000278  0101               	movlb	1	; () banked
  6936  00027A  5113               	movf	(_tick1+3)& (0+255),w,b
  6937  00027C  0100               	movlb	0	; () banked
  6938  00027E  59BB               	subwfb	(P2PTasks@tick2+3)& (0+255),w,b
  6939  000280  6FB0               	movwf	(??_P2PTasks+3)& (0+255),b
  6940  000282  51B0               	movf	(??_P2PTasks+3)& (0+255),w,b
  6941  000284  E107               	bnz	u13310
  6942  000286  0E71               	movlw	113
  6943  000288  5DAD               	subwf	??_P2PTasks& (0+255),w,b
  6944  00028A  0E38               	movlw	56
  6945  00028C  59AE               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  6946  00028E  0E39               	movlw	57
  6947  000290  59AF               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  6948  000292  E30C               	bnc	l12687
  6949  000294                     u13310:
  6950                           
  6951                           ; BSR set to: 0
  6952  000294  5041               	movf	_role,w,c
  6953  000296  E00A               	bz	l12687
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;miwi_p2p.c: 375: {
  6957                           ;miwi_p2p.c: 376: MiApp_BroadcastConnectionTable ();
  6958  000298  ECCF  F00E         	call	_MiApp_BroadcastConnectionTable	;wreg free
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;miwi_p2p.c: 377: tick1 = tick2;
  6962  00029C  C0B8  F110         	movff	P2PTasks@tick2,_tick1
  6963  0002A0  C0B9  F111         	movff	P2PTasks@tick2+1,_tick1+1
  6964  0002A4  C0BA  F112         	movff	P2PTasks@tick2+2,_tick1+2
  6965  0002A8  C0BB  F113         	movff	P2PTasks@tick2+3,_tick1+3
  6966  0002AC                     l12687:
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;miwi_p2p.c: 378: }
  6970                           ;miwi_p2p.c: 429: if( P2PStatus.bits.SaveConnection )
  6971  0002AC  A3E2               	btfss	_P2PStatus& (0+255),1,b	;volatile
  6972  0002AE  D036               	goto	l12697
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;miwi_p2p.c: 430: {
  6976                           ;miwi_p2p.c: 431: tmpTick = MiWi_TickGet();
  6977  0002B0  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  6978  0002B4  C01D  F0B1         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  6979  0002B8  C01E  F0B2         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  6980  0002BC  C01F  F0B3         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  6981  0002C0  C020  F0B4         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;miwi_p2p.c: 433: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(8000000)/32)) )
  6985  0002C4  0101               	movlb	1	; () banked
  6986  0002C6  5104               	movf	_nvmDelayTick& (0+255),w,b
  6987  0002C8  0100               	movlb	0	; () banked
  6988  0002CA  5DB1               	subwf	P2PTasks@tmpTick& (0+255),w,b
  6989  0002CC  6FAD               	movwf	??_P2PTasks& (0+255),b
  6990  0002CE  0101               	movlb	1	; () banked
  6991  0002D0  5105               	movf	(_nvmDelayTick+1)& (0+255),w,b
  6992  0002D2  0100               	movlb	0	; () banked
  6993  0002D4  59B2               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  6994  0002D6  6FAE               	movwf	(??_P2PTasks+1)& (0+255),b
  6995  0002D8  0101               	movlb	1	; () banked
  6996  0002DA  5106               	movf	(_nvmDelayTick+2)& (0+255),w,b
  6997  0002DC  0100               	movlb	0	; () banked
  6998  0002DE  59B3               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  6999  0002E0  6FAF               	movwf	(??_P2PTasks+2)& (0+255),b
  7000  0002E2  0101               	movlb	1	; () banked
  7001  0002E4  5107               	movf	(_nvmDelayTick+3)& (0+255),w,b
  7002  0002E6  0100               	movlb	0	; () banked
  7003  0002E8  59B4               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  7004  0002EA  6FB0               	movwf	(??_P2PTasks+3)& (0+255),b
  7005  0002EC  51B0               	movf	(??_P2PTasks+3)& (0+255),w,b
  7006  0002EE  E107               	bnz	u13340
  7007  0002F0  0E91               	movlw	145
  7008  0002F2  5DAD               	subwf	??_P2PTasks& (0+255),w,b
  7009  0002F4  0ED0               	movlw	208
  7010  0002F6  59AE               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7011  0002F8  0E03               	movlw	3
  7012  0002FA  59AF               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7013  0002FC  E30F               	bnc	l12697
  7014  0002FE                     u13340:
  7015                           
  7016                           ; BSR set to: 0
  7017                           ;miwi_p2p.c: 434: {
  7018                           ;miwi_p2p.c: 435: P2PStatus.bits.SaveConnection = 0;
  7019  0002FE  93E2               	bcf	_P2PStatus& (0+255),1,b	;volatile
  7020                           
  7021                           ; BSR set to: 0
  7022                           ;miwi_p2p.c: 436: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)20 
      +                          * sizeof(CONNECTION_ENTRY));
  7023  000300  0E50               	movlw	low _ConnectionTable
  7024  000302  6E1E               	movwf	NVMWrite@source,c
  7025  000304  0E03               	movlw	high _ConnectionTable
  7026  000306  6E1F               	movwf	NVMWrite@source+1,c
  7027  000308  C03E  F020         	movff	_nvmConnectionTable,NVMWrite@addr
  7028  00030C  C03F  F021         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  7029  000310  0E01               	movlw	1
  7030  000312  6E23               	movwf	NVMWrite@count+1,c
  7031  000314  0E18               	movlw	24
  7032  000316  6E22               	movwf	NVMWrite@count,c
  7033  000318  ECB3  F015         	call	_NVMWrite	;wreg free
  7034  00031C                     l12697:
  7035                           
  7036                           ;miwi_p2p.c: 438: }
  7037                           ;miwi_p2p.c: 439: }
  7038                           ;miwi_p2p.c: 457: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
  7039  00031C  0100               	movlb	0	; () banked
  7040  00031E  B7E2               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  7041  000320  0012               	return	
  7042                           
  7043                           ; BSR set to: 0
  7044  000322  EC29  F008         	call	_MiMAC_ReceivedPacket	;wreg free
  7045  000326  0900               	iorlw	0
  7046  000328  B4D8               	btfsc	status,2,c
  7047  00032A  0012               	return	
  7048                           
  7049                           ;miwi_p2p.c: 458: {
  7050                           ;miwi_p2p.c: 459: bool FW_Stat = 0;
  7051  00032C  0100               	movlb	0	; () banked
  7052  00032E  6BB5               	clrf	P2PTasks@FW_Stat& (0+255),b
  7053                           
  7054                           ;miwi_p2p.c: 460: rxMessage.flags.Val = 0;
  7055  000330  6BC7               	clrf	_rxMessage& (0+255),b
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;miwi_p2p.c: 461: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
  7059  000332  A425               	btfss	_MACRxPacket,2,c
  7060  000334  D003               	goto	u13370
  7061  000336  6BAD               	clrf	??_P2PTasks& (0+255),b
  7062  000338  2BAD               	incf	??_P2PTasks& (0+255),f,b
  7063  00033A  D002               	goto	u13378
  7064  00033C                     u13370:
  7065  00033C  0100               	movlb	0	; () banked
  7066  00033E  6BAD               	clrf	??_P2PTasks& (0+255),b
  7067  000340                     u13378:
  7068  000340  51C7               	movf	_rxMessage& (0+255),w,b
  7069  000342  19AD               	xorwf	??_P2PTasks& (0+255),w,b
  7070  000344  0BFC               	andlw	-4
  7071  000346  19AD               	xorwf	??_P2PTasks& (0+255),w,b
  7072  000348  6FC7               	movwf	_rxMessage& (0+255),b
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;miwi_p2p.c: 462: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
  7076  00034A  A625               	btfss	_MACRxPacket,3,c
  7077  00034C  D002               	bra	u13385
  7078  00034E  87C7               	bsf	_rxMessage& (0+255),3,b
  7079  000350  D002               	bra	u13387
  7080  000352                     u13385:
  7081  000352  0100               	movlb	0	; () banked
  7082  000354  97C7               	bcf	_rxMessage& (0+255),3,b
  7083  000356                     u13387:
  7084                           
  7085                           ;miwi_p2p.c: 463: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
  7086  000356  5025               	movf	_MACRxPacket,w,c
  7087  000358  0B03               	andlw	3
  7088  00035A  06E8               	decf	wreg,f,c
  7089  00035C  E103               	bnz	u13390
  7090  00035E  6BAD               	clrf	??_P2PTasks& (0+255),b
  7091  000360  2BAD               	incf	??_P2PTasks& (0+255),f,b
  7092  000362  D002               	goto	u13408
  7093  000364                     u13390:
  7094  000364  0100               	movlb	0	; () banked
  7095  000366  6BAD               	clrf	??_P2PTasks& (0+255),b
  7096  000368                     u13408:
  7097  000368  3BAD               	swapf	??_P2PTasks& (0+255),f,b
  7098  00036A  47AD               	rlncf	??_P2PTasks& (0+255),f,b
  7099  00036C  51C7               	movf	_rxMessage& (0+255),w,b
  7100  00036E  19AD               	xorwf	??_P2PTasks& (0+255),w,b
  7101  000370  0BDF               	andlw	-33
  7102  000372  19AD               	xorwf	??_P2PTasks& (0+255),w,b
  7103  000374  6FC7               	movwf	_rxMessage& (0+255),b
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;miwi_p2p.c: 464: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
  7107  000376  AE25               	btfss	_MACRxPacket,7,c
  7108  000378  D002               	bra	u13415
  7109  00037A  8DC7               	bsf	_rxMessage& (0+255),6,b
  7110  00037C  D002               	bra	u13417
  7111  00037E                     u13415:
  7112  00037E  0100               	movlb	0	; () banked
  7113  000380  9DC7               	bcf	_rxMessage& (0+255),6,b
  7114  000382                     u13417:
  7115                           
  7116                           ; BSR set to: 0
  7117                           ;miwi_p2p.c: 465: if( MACRxPacket.flags.bits.sourcePrsnt )
  7118  000382  AE25               	btfss	_MACRxPacket,7,c
  7119  000384  D004               	goto	l12713
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;miwi_p2p.c: 466: {
  7123                           ;miwi_p2p.c: 467: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
  7124  000386  C026  F0CA         	movff	_MACRxPacket+1,_rxMessage+3
  7125  00038A  C027  F0CB         	movff	_MACRxPacket+2,_rxMessage+4
  7126  00038E                     l12713:
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;miwi_p2p.c: 468: }
  7130                           ;miwi_p2p.c: 470: rxMessage.SourcePANID.Val = MACRxPacket.SourcePANID.Val;
  7131  00038E  C02E  F0C8         	movff	_MACRxPacket+9,_rxMessage+1
  7132  000392  C02F  F0C9         	movff	_MACRxPacket+10,_rxMessage+2
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;miwi_p2p.c: 473: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
  7136  000396  C02A  F0CE         	movff	_MACRxPacket+5,_rxMessage+7
  7137                           
  7138                           ;miwi_p2p.c: 474: rxMessage.Payload = MACRxPacket.Payload;
  7139  00039A  C028  F0CC         	movff	_MACRxPacket+3,_rxMessage+5
  7140  00039E  C029  F0CD         	movff	_MACRxPacket+4,_rxMessage+6
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;miwi_p2p.c: 483: rxMessage.PacketLQI = MACRxPacket.LQIValue;
  7144  0003A2  C02C  F0D0         	movff	_MACRxPacket+7,_rxMessage+9
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;miwi_p2p.c: 484: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
  7148  0003A6  C02B  F0CF         	movff	_MACRxPacket+6,_rxMessage+8
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;miwi_p2p.c: 487: if( rxMessage.flags.bits.command )
  7152  0003AA  ABC7               	btfss	_rxMessage& (0+255),5,b
  7153  0003AC  D2B3               	goto	l454
  7154  0003AE  D290               	goto	l13001
  7155  0003B0                     l12725:
  7156                           
  7157                           ; BSR set to: 0
  7158                           ;miwi_p2p.c: 495: {
  7159                           ;miwi_p2p.c: 497: if(role)
  7160  0003B0  5041               	movf	_role,w,c
  7161  0003B2  E00A               	bz	l12731
  7162                           
  7163                           ; BSR set to: 0
  7164                           ;miwi_p2p.c: 498: {
  7165                           ;miwi_p2p.c: 509: uint8_t status = 0x00;
  7166  0003B4  6BC3               	clrf	P2PTasks@status& (0+255),b
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;miwi_p2p.c: 513: if( currentChannel != rxMessage.Payload[1] )
  7170  0003B6  EE20 F001          	lfsr	2,1
  7171  0003BA  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  7172  0003BC  26D9               	addwf	fsr2l,f,c
  7173  0003BE  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  7174  0003C0  22DA               	addwfc	fsr2h,f,c
  7175  0003C2  51FC               	movf	_currentChannel& (0+255),w,b
  7176  0003C4  18DE               	xorwf	postinc2,w,c
  7177  0003C6  E003               	bz	l12733
  7178  0003C8                     l12731:
  7179                           
  7180                           ;miwi_p2p.c: 514: {
  7181                           ;miwi_p2p.c: 515: MiMAC_DiscardPacket();
  7182  0003C8  ECC8  F01D         	call	_MiMAC_DiscardPacket	;wreg free
  7183                           
  7184                           ;miwi_p2p.c: 516: break;
  7185  0003CC  D2A4               	goto	l13003
  7186  0003CE                     l12733:
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;miwi_p2p.c: 517: }
  7190                           ;miwi_p2p.c: 521: if( ConnMode == 0x03 )
  7191  0003CE  0E03               	movlw	3
  7192  0003D0  19FF               	xorwf	_ConnMode& (0+255),w,b
  7193  0003D2  E0FA               	bz	l12731
  7194                           
  7195                           ; BSR set to: 0
  7196                           ;miwi_p2p.c: 525: }
  7197                           ;miwi_p2p.c: 529: if( rxMessage.SourcePANID.Val != 0xFFFF &&
  7198                           ;miwi_p2p.c: 530: rxMessage.SourcePANID.Val != myPANID.Val &&
  7199                           ;miwi_p2p.c: 531: rxMessage.PayloadSize > 2)
  7200  0003D4  29C8               	incf	(_rxMessage+1)& (0+255),w,b
  7201  0003D6  E102               	bnz	u13470
  7202  0003D8  29C9               	incf	(_rxMessage+2)& (0+255),w,b
  7203  0003DA  E00B               	bz	l12745
  7204  0003DC                     u13470:
  7205                           
  7206                           ; BSR set to: 0
  7207  0003DC  51EC               	movf	_myPANID& (0+255),w,b
  7208  0003DE  19C8               	xorwf	(_rxMessage+1)& (0+255),w,b
  7209  0003E0  E103               	bnz	u13480
  7210  0003E2  51ED               	movf	(_myPANID+1)& (0+255),w,b
  7211  0003E4  19C9               	xorwf	(_rxMessage+2)& (0+255),w,b
  7212  0003E6  E005               	bz	l12745
  7213  0003E8                     u13480:
  7214                           
  7215                           ; BSR set to: 0
  7216  0003E8  0E02               	movlw	2
  7217  0003EA  65CE               	cpfsgt	(_rxMessage+7)& (0+255),b
  7218  0003EC  D002               	goto	l12745
  7219                           
  7220                           ; BSR set to: 0
  7221                           ;miwi_p2p.c: 532: {
  7222                           ;miwi_p2p.c: 533: status = 0xF2;
  7223  0003EE  0EF2               	movlw	242
  7224  0003F0  D002               	goto	L1
  7225  0003F2                     l12745:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;miwi_p2p.c: 535: else
  7229                           ;miwi_p2p.c: 537: {
  7230                           ;miwi_p2p.c: 540: status = AddConnection();
  7231  0003F2  ECD3  F011         	call	_AddConnection	;wreg free
  7232  0003F6                     L1:
  7233  0003F6  6FC3               	movwf	P2PTasks@status& (0+255),b
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;miwi_p2p.c: 541: }
  7237                           ;miwi_p2p.c: 543: uint8_t p;
  7238                           ;miwi_p2p.c: 544: if (rxMessage.Payload[3] == 0xAA)
  7239  0003F8  EE20 F003          	lfsr	2,3
  7240  0003FC  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  7241  0003FE  26D9               	addwf	fsr2l,f,c
  7242  000400  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  7243  000402  22DA               	addwfc	fsr2h,f,c
  7244  000404  0EAA               	movlw	170
  7245  000406  18DE               	xorwf	postinc2,w,c
  7246  000408  E11E               	bnz	l12763
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;miwi_p2p.c: 545: {
  7250                           ;miwi_p2p.c: 547: for (p = 0 ;p <20;p++)
  7251  00040A  6BC1               	clrf	P2PTasks@p& (0+255),b
  7252  00040C                     l12751:
  7253                           
  7254                           ; BSR set to: 0
  7255  00040C  0E13               	movlw	19
  7256  00040E  65C1               	cpfsgt	P2PTasks@p& (0+255),b
  7257  000410  D001               	goto	l12755
  7258  000412  D019               	goto	l12763
  7259  000414                     l12755:
  7260                           
  7261                           ; BSR set to: 0
  7262                           ;miwi_p2p.c: 548: {
  7263                           ;miwi_p2p.c: 549: if (isSameAddress(rxMessage.SourceAddress, ConnectionTable[p].Address)
      +                           )
  7264  000414  C0CA  F01D         	movff	_rxMessage+3,isSameAddress@Address1
  7265  000418  C0CB  F01E         	movff	_rxMessage+4,isSameAddress@Address1+1
  7266  00041C  51C1               	movf	P2PTasks@p& (0+255),w,b
  7267  00041E  0D0E               	mullw	14
  7268  000420  0E54               	movlw	low (_ConnectionTable+4)
  7269  000422  24F3               	addwf	prodl,w,c
  7270  000424  6E1F               	movwf	isSameAddress@Address2,c
  7271  000426  0E03               	movlw	high (_ConnectionTable+4)
  7272  000428  20F4               	addwfc	prodh,w,c
  7273  00042A  6E20               	movwf	isSameAddress@Address2+1,c
  7274  00042C  ECC6  F01C         	call	_isSameAddress	;wreg free
  7275  000430  0900               	iorlw	0
  7276  000432  E007               	bz	l12759
  7277                           
  7278                           ; BSR set to: 0
  7279                           ;miwi_p2p.c: 550: {
  7280                           ;miwi_p2p.c: 551: permanent_connections[p] = 0xFF;
  7281  000434  0E14               	movlw	low _permanent_connections
  7282  000436  25C1               	addwf	P2PTasks@p& (0+255),w,b
  7283  000438  6ED9               	movwf	fsr2l,c
  7284  00043A  6ADA               	clrf	fsr2h,c
  7285  00043C  0E02               	movlw	high _permanent_connections
  7286  00043E  22DA               	addwfc	fsr2h,f,c
  7287  000440  68DF               	setf	indf2,c
  7288  000442                     l12759:
  7289                           
  7290                           ; BSR set to: 0
  7291  000442  2BC1               	incf	P2PTasks@p& (0+255),f,b
  7292  000444  D7E3               	goto	l12751
  7293  000446                     l12763:
  7294                           
  7295                           ; BSR set to: 0
  7296                           ;miwi_p2p.c: 553: }
  7297                           ;miwi_p2p.c: 555: }
  7298                           ;miwi_p2p.c: 556: }
  7299                           ;miwi_p2p.c: 558: if( (ConnMode == 0x01) && (status != 0x01 && status != 0x02) )
  7300  000446  05FF               	decf	_ConnMode& (0+255),w,b
  7301  000448  E107               	bnz	l12777
  7302                           
  7303                           ; BSR set to: 0
  7304  00044A  05C3               	decf	P2PTasks@status& (0+255),w,b
  7305  00044C  E005               	bz	l12777
  7306                           
  7307                           ; BSR set to: 0
  7308  00044E  0E02               	movlw	2
  7309  000450  19C3               	xorwf	P2PTasks@status& (0+255),w,b
  7310  000452  E002               	bz	l12777
  7311                           
  7312                           ; BSR set to: 0
  7313                           ;miwi_p2p.c: 559: {
  7314                           ;miwi_p2p.c: 560: status = 0xF3;
  7315  000454  0EF3               	movlw	243
  7316  000456  6FC3               	movwf	P2PTasks@status& (0+255),b
  7317  000458                     l12777:
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;miwi_p2p.c: 568: }
  7321                           ;miwi_p2p.c: 572: {TxData = 0;};
  7322  000458  6BE5               	clrf	_TxData& (0+255),b
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;miwi_p2p.c: 573: TxBuffer[TxData++] = 0x91;
  7326  00045A  0E18               	movlw	low _TxBuffer
  7327  00045C  25E5               	addwf	_TxData& (0+255),w,b
  7328  00045E  6ED9               	movwf	fsr2l,c
  7329  000460  6ADA               	clrf	fsr2h,c
  7330  000462  0E01               	movlw	high _TxBuffer
  7331  000464  22DA               	addwfc	fsr2h,f,c
  7332  000466  0E91               	movlw	145
  7333  000468  6EDF               	movwf	indf2,c
  7334                           
  7335                           ; BSR set to: 0
  7336  00046A  2BE5               	incf	_TxData& (0+255),f,b
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;miwi_p2p.c: 574: TxBuffer[TxData++] = status;
  7340  00046C  0E18               	movlw	low _TxBuffer
  7341  00046E  25E5               	addwf	_TxData& (0+255),w,b
  7342  000470  6ED9               	movwf	fsr2l,c
  7343  000472  6ADA               	clrf	fsr2h,c
  7344  000474  0E01               	movlw	high _TxBuffer
  7345  000476  22DA               	addwfc	fsr2h,f,c
  7346  000478  C0C3  FFDF         	movff	P2PTasks@status,indf2
  7347                           
  7348                           ; BSR set to: 0
  7349  00047C  2BE5               	incf	_TxData& (0+255),f,b
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;miwi_p2p.c: 575: TxBuffer[TxData++] = MyindexinPC;
  7353  00047E  0E18               	movlw	low _TxBuffer
  7354  000480  25E5               	addwf	_TxData& (0+255),w,b
  7355  000482  6ED9               	movwf	fsr2l,c
  7356  000484  6ADA               	clrf	fsr2h,c
  7357  000486  0E01               	movlw	high _TxBuffer
  7358  000488  22DA               	addwfc	fsr2h,f,c
  7359  00048A  C0E0  FFDF         	movff	_MyindexinPC,indf2
  7360                           
  7361                           ; BSR set to: 0
  7362  00048E  2BE5               	incf	_TxData& (0+255),f,b
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;miwi_p2p.c: 576: if( status == 0x00 ||
  7366                           ;miwi_p2p.c: 577: status == 0x01 )
  7367  000490  51C3               	movf	P2PTasks@status& (0+255),w,b
  7368  000492  E002               	bz	l12795
  7369                           
  7370                           ; BSR set to: 0
  7371  000494  05C3               	decf	P2PTasks@status& (0+255),w,b
  7372  000496  E11B               	bnz	l12813
  7373  000498                     l12795:
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;miwi_p2p.c: 578: {
  7377                           ;miwi_p2p.c: 579: TxBuffer[TxData++] = P2PCapacityInfo;
  7378  000498  0E18               	movlw	low _TxBuffer
  7379  00049A  25E5               	addwf	_TxData& (0+255),w,b
  7380  00049C  6ED9               	movwf	fsr2l,c
  7381  00049E  6ADA               	clrf	fsr2h,c
  7382  0004A0  0E01               	movlw	high _TxBuffer
  7383  0004A2  22DA               	addwfc	fsr2h,f,c
  7384  0004A4  C0E1  FFDF         	movff	_P2PCapacityInfo,indf2
  7385                           
  7386                           ; BSR set to: 0
  7387  0004A8  2BE5               	incf	_TxData& (0+255),f,b
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;miwi_p2p.c: 581: for(i = 0; i < 1; i++)
  7391  0004AA  6BC4               	clrf	P2PTasks@i& (0+255),b
  7392  0004AC                     l12801:
  7393                           
  7394                           ; BSR set to: 0
  7395  0004AC  51C4               	movf	P2PTasks@i& (0+255),w,b
  7396  0004AE  E10F               	bnz	l12813
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;miwi_p2p.c: 582: {
  7400                           ;miwi_p2p.c: 583: TxBuffer[TxData++] = AdditionalNodeID[i];
  7401  0004B0  51C4               	movf	P2PTasks@i& (0+255),w,b
  7402  0004B2  0FFE               	addlw	low _AdditionalNodeID
  7403  0004B4  6ED9               	movwf	fsr2l,c
  7404  0004B6  6ADA               	clrf	fsr2h,c
  7405  0004B8  0E18               	movlw	low _TxBuffer
  7406  0004BA  25E5               	addwf	_TxData& (0+255),w,b
  7407  0004BC  6EE1               	movwf	fsr1l,c
  7408  0004BE  6AE2               	clrf	fsr1h,c
  7409  0004C0  0E01               	movlw	high _TxBuffer
  7410  0004C2  22E2               	addwfc	fsr1h,f,c
  7411  0004C4  CFDF FFE7          	movff	indf2,indf1
  7412                           
  7413                           ; BSR set to: 0
  7414  0004C8  2BE5               	incf	_TxData& (0+255),f,b
  7415                           
  7416                           ; BSR set to: 0
  7417  0004CA  2BC4               	incf	P2PTasks@i& (0+255),f,b
  7418  0004CC  D7EF               	goto	l12801
  7419  0004CE                     l12813:
  7420                           
  7421                           ; BSR set to: 0
  7422                           ;miwi_p2p.c: 584: }
  7423                           ;miwi_p2p.c: 586: }
  7424                           ;miwi_p2p.c: 588: MiMAC_DiscardPacket();
  7425  0004CE  ECC8  F01D         	call	_MiMAC_DiscardPacket	;wreg free
  7426                           
  7427                           ;miwi_p2p.c: 600: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
  7428  0004D2  C0C8  F090         	movff	_rxMessage+1,SendPacket@DestinationPANID
  7429  0004D6  C0C9  F091         	movff	_rxMessage+2,SendPacket@DestinationPANID+1
  7430  0004DA  C0CA  F092         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7431  0004DE  C0CB  F093         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7432  0004E2  0E01               	movlw	1
  7433  0004E4  0100               	movlb	0	; () banked
  7434  0004E6  6F94               	movwf	SendPacket@isCommand& (0+255),b
  7435  0004E8  0E00               	movlw	0
  7436  0004EA  B7C7               	btfsc	_rxMessage& (0+255),3,b
  7437  0004EC  0E01               	movlw	1
  7438  0004EE  6F95               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7439  0004F0  0E00               	movlw	0
  7440  0004F2  EC09  F015         	call	_SendPacket
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;miwi_p2p.c: 607: MiApp_BroadcastConnectionTable ();
  7444  0004F6  ECCF  F00E         	call	_MiApp_BroadcastConnectionTable	;wreg free
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;miwi_p2p.c: 610: if( status == 0x00 )
  7448  0004FA  51C3               	movf	P2PTasks@status& (0+255),w,b
  7449  0004FC  E001 D20B          	bnz	l13003
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;miwi_p2p.c: 611: {
  7453                           ;miwi_p2p.c: 612: NVMWrite((uint8_t *)&(ConnectionTable[LatestConnection]), nvmConnectio
      +                          nTable+((uint16_t)LatestConnection * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY)
      +                          );
  7454  000500  51DE               	movf	_LatestConnection& (0+255),w,b
  7455  000502  0D0E               	mullw	14
  7456  000504  0E50               	movlw	low _ConnectionTable
  7457  000506  24F3               	addwf	prodl,w,c
  7458  000508  6E1E               	movwf	NVMWrite@source,c
  7459  00050A  0E03               	movlw	high _ConnectionTable
  7460  00050C  20F4               	addwfc	prodh,w,c
  7461  00050E  6E1F               	movwf	NVMWrite@source+1,c
  7462  000510  51DE               	movf	_LatestConnection& (0+255),w,b
  7463  000512  0D0E               	mullw	14
  7464  000514  503E               	movf	_nvmConnectionTable,w,c
  7465  000516  24F3               	addwf	prodl,w,c
  7466  000518  6E20               	movwf	NVMWrite@addr,c
  7467  00051A  503F               	movf	_nvmConnectionTable+1,w,c
  7468  00051C  20F4               	addwfc	prodh,w,c
  7469  00051E  6E21               	movwf	NVMWrite@addr+1,c
  7470  000520  6A23               	clrf	NVMWrite@count+1,c
  7471  000522  0E0E               	movlw	14
  7472  000524  6E22               	movwf	NVMWrite@count,c
  7473  000526  ECB3  F015         	call	_NVMWrite	;wreg free
  7474  00052A  D1F5               	goto	l13003
  7475  00052C                     l12825:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;miwi_p2p.c: 631: {
  7479                           ;miwi_p2p.c: 632: if(ConnMode > 0x02)
  7480  00052C  0E02               	movlw	2
  7481  00052E  65FF               	cpfsgt	_ConnMode& (0+255),b
  7482  000530  D001               	goto	l12829
  7483  000532  D74A               	goto	l12731
  7484  000534                     l12829:
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;miwi_p2p.c: 636: }
  7488                           ;miwi_p2p.c: 637: if( currentChannel != rxMessage.Payload[1] )
  7489  000534  EE20 F001          	lfsr	2,1
  7490  000538  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  7491  00053A  26D9               	addwf	fsr2l,f,c
  7492  00053C  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  7493  00053E  22DA               	addwfc	fsr2h,f,c
  7494  000540  51FC               	movf	_currentChannel& (0+255),w,b
  7495  000542  18DE               	xorwf	postinc2,w,c
  7496  000544  E001 D740          	bnz	l12731
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;miwi_p2p.c: 641: }
  7500                           ;miwi_p2p.c: 643: {TxData = 0;};
  7501  000548  6BE5               	clrf	_TxData& (0+255),b
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;miwi_p2p.c: 644: TxBuffer[TxData++] = 0x97;
  7505  00054A  0E18               	movlw	low _TxBuffer
  7506  00054C  25E5               	addwf	_TxData& (0+255),w,b
  7507  00054E  6ED9               	movwf	fsr2l,c
  7508  000550  6ADA               	clrf	fsr2h,c
  7509  000552  0E01               	movlw	high _TxBuffer
  7510  000554  22DA               	addwfc	fsr2h,f,c
  7511  000556  0E97               	movlw	151
  7512  000558  6EDF               	movwf	indf2,c
  7513                           
  7514                           ; BSR set to: 0
  7515  00055A  2BE5               	incf	_TxData& (0+255),f,b
  7516                           
  7517                           ; BSR set to: 0
  7518                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = P2PCapacityInfo;
  7519  00055C  0E18               	movlw	low _TxBuffer
  7520  00055E  25E5               	addwf	_TxData& (0+255),w,b
  7521  000560  6ED9               	movwf	fsr2l,c
  7522  000562  6ADA               	clrf	fsr2h,c
  7523  000564  0E01               	movlw	high _TxBuffer
  7524  000566  22DA               	addwfc	fsr2h,f,c
  7525  000568  C0E1  FFDF         	movff	_P2PCapacityInfo,indf2
  7526  00056C  2BE5               	incf	_TxData& (0+255),f,b
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;miwi_p2p.c: 647: for(i = 0; i < 1; i++)
  7530  00056E  6BC4               	clrf	P2PTasks@i& (0+255),b
  7531  000570                     l12841:
  7532                           
  7533                           ; BSR set to: 0
  7534  000570  51C4               	movf	P2PTasks@i& (0+255),w,b
  7535  000572  E10F               	bnz	l12853
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;miwi_p2p.c: 648: {
  7539                           ;miwi_p2p.c: 649: TxBuffer[TxData++] = AdditionalNodeID[i];
  7540  000574  51C4               	movf	P2PTasks@i& (0+255),w,b
  7541  000576  0FFE               	addlw	low _AdditionalNodeID
  7542  000578  6ED9               	movwf	fsr2l,c
  7543  00057A  6ADA               	clrf	fsr2h,c
  7544  00057C  0E18               	movlw	low _TxBuffer
  7545  00057E  25E5               	addwf	_TxData& (0+255),w,b
  7546  000580  6EE1               	movwf	fsr1l,c
  7547  000582  6AE2               	clrf	fsr1h,c
  7548  000584  0E01               	movlw	high _TxBuffer
  7549  000586  22E2               	addwfc	fsr1h,f,c
  7550  000588  CFDF FFE7          	movff	indf2,indf1
  7551                           
  7552                           ; BSR set to: 0
  7553  00058C  2BE5               	incf	_TxData& (0+255),f,b
  7554                           
  7555                           ; BSR set to: 0
  7556  00058E  2BC4               	incf	P2PTasks@i& (0+255),f,b
  7557  000590  D7EF               	goto	l12841
  7558  000592                     l12853:
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;miwi_p2p.c: 650: }
  7562                           ;miwi_p2p.c: 652: MiMAC_DiscardPacket();
  7563  000592  ECC8  F01D         	call	_MiMAC_DiscardPacket	;wreg free
  7564                           
  7565                           ;miwi_p2p.c: 663: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
  7566  000596  C0C8  F090         	movff	_rxMessage+1,SendPacket@DestinationPANID
  7567  00059A  C0C9  F091         	movff	_rxMessage+2,SendPacket@DestinationPANID+1
  7568  00059E  C0CA  F092         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7569  0005A2  C0CB  F093         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7570  0005A6  0E01               	movlw	1
  7571  0005A8  0100               	movlb	0	; () banked
  7572  0005AA  6F94               	movwf	SendPacket@isCommand& (0+255),b
  7573  0005AC  0E00               	movlw	0
  7574  0005AE  B7C7               	btfsc	_rxMessage& (0+255),3,b
  7575  0005B0  0E01               	movlw	1
  7576  0005B2  6F95               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7577  0005B4  0E00               	movlw	0
  7578  0005B6  EC09  F015         	call	_SendPacket
  7579                           
  7580                           ;miwi_p2p.c: 668: }
  7581                           ;miwi_p2p.c: 669: break;
  7582  0005BA  D1AD               	goto	l13003
  7583  0005BC                     l483:
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;miwi_p2p.c: 677: {
  7587                           ;miwi_p2p.c: 678: {TxData = 0;};
  7588  0005BC  6BE5               	clrf	_TxData& (0+255),b
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;miwi_p2p.c: 679: TxBuffer[TxData++] = 0x92;
  7592  0005BE  0E18               	movlw	low _TxBuffer
  7593  0005C0  25E5               	addwf	_TxData& (0+255),w,b
  7594  0005C2  6ED9               	movwf	fsr2l,c
  7595  0005C4  6ADA               	clrf	fsr2h,c
  7596  0005C6  0E01               	movlw	high _TxBuffer
  7597  0005C8  22DA               	addwfc	fsr2h,f,c
  7598  0005CA  0E92               	movlw	146
  7599  0005CC  6EDF               	movwf	indf2,c
  7600                           
  7601                           ; BSR set to: 0
  7602  0005CE  2BE5               	incf	_TxData& (0+255),f,b
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;miwi_p2p.c: 681: for(i = 0; i < 20; i++)
  7606  0005D0  6BC4               	clrf	P2PTasks@i& (0+255),b
  7607  0005D2                     l12863:
  7608                           
  7609                           ; BSR set to: 0
  7610  0005D2  0E13               	movlw	19
  7611  0005D4  65C4               	cpfsgt	P2PTasks@i& (0+255),b
  7612  0005D6  D001               	goto	l12867
  7613  0005D8  D044               	goto	l12883
  7614  0005DA                     l12867:
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;miwi_p2p.c: 682: {
  7618                           ;miwi_p2p.c: 684: if( ConnectionTable[i].status.bits.isValid )
  7619  0005DA  51C4               	movf	P2PTasks@i& (0+255),w,b
  7620  0005DC  0D0E               	mullw	14
  7621  0005DE  0E5C               	movlw	low (_ConnectionTable+12)
  7622  0005E0  24F3               	addwf	prodl,w,c
  7623  0005E2  6ED9               	movwf	fsr2l,c
  7624  0005E4  0E03               	movlw	high (_ConnectionTable+12)
  7625  0005E6  20F4               	addwfc	prodh,w,c
  7626  0005E8  6EDA               	movwf	fsr2h,c
  7627  0005EA  AEDF               	btfss	indf2,7,c
  7628  0005EC  D038               	goto	l12879
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;miwi_p2p.c: 685: {
  7632                           ;miwi_p2p.c: 687: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7633  0005EE  C0CA  F01D         	movff	_rxMessage+3,isSameAddress@Address1
  7634  0005F2  C0CB  F01E         	movff	_rxMessage+4,isSameAddress@Address1+1
  7635  0005F6  51C4               	movf	P2PTasks@i& (0+255),w,b
  7636  0005F8  0D0E               	mullw	14
  7637  0005FA  0E54               	movlw	low (_ConnectionTable+4)
  7638  0005FC  24F3               	addwf	prodl,w,c
  7639  0005FE  6E1F               	movwf	isSameAddress@Address2,c
  7640  000600  0E03               	movlw	high (_ConnectionTable+4)
  7641  000602  20F4               	addwfc	prodh,w,c
  7642  000604  6E20               	movwf	isSameAddress@Address2+1,c
  7643  000606  ECC6  F01C         	call	_isSameAddress	;wreg free
  7644  00060A  0900               	iorlw	0
  7645  00060C  E028               	bz	l12879
  7646                           
  7647                           ; BSR set to: 0
  7648                           ;miwi_p2p.c: 688: {
  7649                           ;miwi_p2p.c: 691: ConnectionTable[i].status.Val = 0;
  7650  00060E  51C4               	movf	P2PTasks@i& (0+255),w,b
  7651  000610  0D0E               	mullw	14
  7652  000612  0E5C               	movlw	low (_ConnectionTable+12)
  7653  000614  24F3               	addwf	prodl,w,c
  7654  000616  6ED9               	movwf	fsr2l,c
  7655  000618  0E03               	movlw	high (_ConnectionTable+12)
  7656  00061A  20F4               	addwfc	prodh,w,c
  7657  00061C  6EDA               	movwf	fsr2h,c
  7658  00061E  6ADF               	clrf	indf2,c
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;miwi_p2p.c: 693: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7662  000620  51C4               	movf	P2PTasks@i& (0+255),w,b
  7663  000622  0D0E               	mullw	14
  7664  000624  0E50               	movlw	low _ConnectionTable
  7665  000626  24F3               	addwf	prodl,w,c
  7666  000628  6E1E               	movwf	NVMWrite@source,c
  7667  00062A  0E03               	movlw	high _ConnectionTable
  7668  00062C  20F4               	addwfc	prodh,w,c
  7669  00062E  6E1F               	movwf	NVMWrite@source+1,c
  7670  000630  51C4               	movf	P2PTasks@i& (0+255),w,b
  7671  000632  0D0E               	mullw	14
  7672  000634  503E               	movf	_nvmConnectionTable,w,c
  7673  000636  24F3               	addwf	prodl,w,c
  7674  000638  6E20               	movwf	NVMWrite@addr,c
  7675  00063A  503F               	movf	_nvmConnectionTable+1,w,c
  7676  00063C  20F4               	addwfc	prodh,w,c
  7677  00063E  6E21               	movwf	NVMWrite@addr+1,c
  7678  000640  6A23               	clrf	NVMWrite@count+1,c
  7679  000642  0E0E               	movlw	14
  7680  000644  6E22               	movwf	NVMWrite@count,c
  7681  000646  ECB3  F015         	call	_NVMWrite	;wreg free
  7682                           
  7683                           ;miwi_p2p.c: 695: TxBuffer[TxData++] = 0x00;
  7684  00064A  0E18               	movlw	low _TxBuffer
  7685  00064C  0100               	movlb	0	; () banked
  7686  00064E  25E5               	addwf	_TxData& (0+255),w,b
  7687  000650  6ED9               	movwf	fsr2l,c
  7688  000652  6ADA               	clrf	fsr2h,c
  7689  000654  0E01               	movlw	high _TxBuffer
  7690  000656  22DA               	addwfc	fsr2h,f,c
  7691  000658  6ADF               	clrf	indf2,c
  7692                           
  7693                           ; BSR set to: 0
  7694  00065A  2BE5               	incf	_TxData& (0+255),f,b
  7695                           
  7696                           ;miwi_p2p.c: 697: break;
  7697  00065C  D002               	goto	l12883
  7698  00065E                     l12879:
  7699                           
  7700                           ; BSR set to: 0
  7701  00065E  2BC4               	incf	P2PTasks@i& (0+255),f,b
  7702  000660  D7B8               	goto	l12863
  7703  000662                     l12883:
  7704                           
  7705                           ; BSR set to: 0
  7706                           ;miwi_p2p.c: 698: }
  7707                           ;miwi_p2p.c: 699: }
  7708                           ;miwi_p2p.c: 700: }
  7709                           ;miwi_p2p.c: 702: MiMAC_DiscardPacket();
  7710  000662  ECC8  F01D         	call	_MiMAC_DiscardPacket	;wreg free
  7711                           
  7712                           ;miwi_p2p.c: 704: if( i == 20 )
  7713  000666  0E14               	movlw	20
  7714  000668  0100               	movlb	0	; () banked
  7715  00066A  19C4               	xorwf	P2PTasks@i& (0+255),w,b
  7716  00066C  E109               	bnz	l12891
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;miwi_p2p.c: 705: {
  7720                           ;miwi_p2p.c: 707: TxBuffer[TxData++] = 0xF0;
  7721  00066E  0E18               	movlw	low _TxBuffer
  7722  000670  25E5               	addwf	_TxData& (0+255),w,b
  7723  000672  6ED9               	movwf	fsr2l,c
  7724  000674  6ADA               	clrf	fsr2h,c
  7725  000676  0E01               	movlw	high _TxBuffer
  7726  000678  22DA               	addwfc	fsr2h,f,c
  7727  00067A  0EF0               	movlw	240
  7728  00067C  6EDF               	movwf	indf2,c
  7729                           
  7730                           ; BSR set to: 0
  7731  00067E  2BE5               	incf	_TxData& (0+255),f,b
  7732  000680                     l12891:
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;miwi_p2p.c: 708: }
  7736                           ;miwi_p2p.c: 717: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
  7737  000680  C0C8  F090         	movff	_rxMessage+1,SendPacket@DestinationPANID
  7738  000684  C0C9  F091         	movff	_rxMessage+2,SendPacket@DestinationPANID+1
  7739  000688  C0CA  F092         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7740  00068C  C0CB  F093         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7741  000690  0E01               	movlw	1
  7742  000692  6F94               	movwf	SendPacket@isCommand& (0+255),b
  7743  000694  0E00               	movlw	0
  7744  000696  B7C7               	btfsc	_rxMessage& (0+255),3,b
  7745  000698  0E01               	movlw	1
  7746  00069A  6F95               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7747  00069C  0E00               	movlw	0
  7748  00069E  EC09  F015         	call	_SendPacket
  7749                           
  7750                           ;miwi_p2p.c: 723: }
  7751                           ;miwi_p2p.c: 724: break;
  7752  0006A2  D139               	goto	l13003
  7753  0006A4                     l12893:
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;miwi_p2p.c: 732: case 0x01:
  7757                           ;miwi_p2p.c: 734: if( myPANID.Val == 0xFFFF )
  7758  0006A4  29EC               	incf	_myPANID& (0+255),w,b
  7759  0006A6  E119               	bnz	l12899
  7760  0006A8  29ED               	incf	(_myPANID+1)& (0+255),w,b
  7761  0006AA  E117               	bnz	l12899
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;miwi_p2p.c: 735: {
  7765                           ;miwi_p2p.c: 736: myPANID.Val = rxMessage.SourcePANID.Val;
  7766  0006AC  C0C8  F0EC         	movff	_rxMessage+1,_myPANID
  7767  0006B0  C0C9  F0ED         	movff	_rxMessage+2,_myPANID+1
  7768                           
  7769                           ;miwi_p2p.c: 737: {
  7770                           ;miwi_p2p.c: 738: uint16_t tmp = 0xFFFF;
  7771  0006B4  69B6               	setf	P2PTasks@tmp& (0+255),b
  7772  0006B6  69B7               	setf	(P2PTasks@tmp+1)& (0+255),b
  7773                           
  7774                           ; BSR set to: 0
  7775                           ;miwi_p2p.c: 739: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
  7776  0006B8  0EEC               	movlw	low _myPANID
  7777  0006BA  6E21               	movwf	MiMAC_SetAltAddress@PANID,c
  7778  0006BC  0EB6               	movlw	P2PTasks@tmp& (0+255)
  7779  0006BE  EC87  F019         	call	_MiMAC_SetAltAddress
  7780                           
  7781                           ;miwi_p2p.c: 740: }
  7782                           ;miwi_p2p.c: 742: NVMWrite((uint8_t *)myPANID.v, nvmMyPANID, 2);
  7783  0006C2  0EEC               	movlw	low _myPANID
  7784  0006C4  6E1E               	movwf	NVMWrite@source,c
  7785  0006C6  6A1F               	clrf	NVMWrite@source+1,c
  7786  0006C8  C0F4  F020         	movff	_nvmMyPANID,NVMWrite@addr
  7787  0006CC  C0F5  F021         	movff	_nvmMyPANID+1,NVMWrite@addr+1
  7788  0006D0  6A23               	clrf	NVMWrite@count+1,c
  7789  0006D2  0E02               	movlw	2
  7790  0006D4  6E22               	movwf	NVMWrite@count,c
  7791  0006D6  ECB3  F015         	call	_NVMWrite	;wreg free
  7792  0006DA                     l12899:
  7793                           
  7794                           ;miwi_p2p.c: 744: }
  7795                           ;miwi_p2p.c: 746: AddConnection();
  7796  0006DA  ECD3  F011         	call	_AddConnection	;wreg free
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;miwi_p2p.c: 748: myConnectionIndex_in_PanCo = rxMessage.Payload[2];
  7800  0006DE  EE20 F002          	lfsr	2,2
  7801  0006E2  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  7802  0006E4  26D9               	addwf	fsr2l,f,c
  7803  0006E6  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  7804  0006E8  22DA               	addwfc	fsr2h,f,c
  7805  0006EA  50DF               	movf	indf2,w,c
  7806  0006EC  6FFD               	movwf	_myConnectionIndex_in_PanCo& (0+255),b
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;miwi_p2p.c: 749: NVMWrite((uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
  7810  0006EE  0EFD               	movlw	low _myConnectionIndex_in_PanCo
  7811  0006F0  6E1E               	movwf	NVMWrite@source,c
  7812  0006F2  6A1F               	clrf	NVMWrite@source+1,c
  7813  0006F4  C0FA  F020         	movff	_nvmmyIndex,NVMWrite@addr
  7814  0006F8  C0FB  F021         	movff	_nvmmyIndex+1,NVMWrite@addr+1
  7815  0006FC  6A23               	clrf	NVMWrite@count+1,c
  7816  0006FE  0E01               	movlw	1
  7817  000700  6E22               	movwf	NVMWrite@count,c
  7818  000702  ECB3  F015         	call	_NVMWrite	;wreg free
  7819                           
  7820                           ;miwi_p2p.c: 753: P2PStatus.bits.SaveConnection = 1;
  7821  000706  0100               	movlb	0	; () banked
  7822  000708  83E2               	bsf	_P2PStatus& (0+255),1,b	;volatile
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;miwi_p2p.c: 754: nvmDelayTick = MiWi_TickGet();
  7826  00070A  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
  7827  00070E  C01D  F104         	movff	?_MiWi_TickGet,_nvmDelayTick
  7828  000712  C01E  F105         	movff	?_MiWi_TickGet+1,_nvmDelayTick+1
  7829  000716  C01F  F106         	movff	?_MiWi_TickGet+2,_nvmDelayTick+2
  7830  00071A  C020  F107         	movff	?_MiWi_TickGet+3,_nvmDelayTick+3
  7831                           
  7832                           ;miwi_p2p.c: 756: break;
  7833  00071E  D654               	goto	l12731
  7834  000720                     l12911:
  7835                           
  7836                           ; BSR set to: 0
  7837  000720  EE20 F001          	lfsr	2,1
  7838  000724  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  7839  000726  26D9               	addwf	fsr2l,f,c
  7840  000728  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  7841  00072A  22DA               	addwfc	fsr2h,f,c
  7842  00072C  50DF               	movf	indf2,w,c
  7843                           
  7844                           ; Switch size 1, requested type "speed"
  7845                           ; Number of cases is 2, Range of values is 0 to 1
  7846                           ; switch strategies available:
  7847                           ; Name         Instructions Cycles
  7848                           ; simple_byte            7     4 (average)
  7849                           ;	Chosen strategy is simple_byte
  7850  00072E  E0BA               	bz	l12893
  7851  000730  0A01               	xorlw	1	; case 1
  7852  000732  E0B8               	bz	l12893
  7853  000734  D649               	goto	l12731
  7854  000736                     l496:
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;miwi_p2p.c: 766: {
  7858                           ;miwi_p2p.c: 767: if( P2PStatus.bits.Resync )
  7859  000736  BBE2               	btfsc	_P2PStatus& (0+255),5,b	;volatile
  7860                           
  7861                           ; BSR set to: 0
  7862                           ;miwi_p2p.c: 768: {
  7863                           ;miwi_p2p.c: 769: P2PStatus.bits.Resync = 0;
  7864  000738  9BE2               	bcf	_P2PStatus& (0+255),5,b	;volatile
  7865  00073A  D646               	goto	l12731
  7866  00073C                     l12919:
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;miwi_p2p.c: 817: {
  7870                           ;miwi_p2p.c: 818: if( rxMessage.Payload[1] == 0x00 )
  7871  00073C  EE20 F001          	lfsr	2,1
  7872  000740  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  7873  000742  26D9               	addwf	fsr2l,f,c
  7874  000744  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  7875  000746  22DA               	addwfc	fsr2h,f,c
  7876  000748  50DF               	movf	indf2,w,c
  7877  00074A  E001 D63D          	bnz	l12731
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;miwi_p2p.c: 819: {
  7881                           ;miwi_p2p.c: 820: for(i = 0; i < 20; i++)
  7882  00074E  6BC4               	clrf	P2PTasks@i& (0+255),b
  7883  000750                     l12923:
  7884                           
  7885                           ; BSR set to: 0
  7886  000750  0E13               	movlw	19
  7887  000752  65C4               	cpfsgt	P2PTasks@i& (0+255),b
  7888  000754  D001               	goto	l12927
  7889  000756  D638               	goto	l12731
  7890  000758                     l12927:
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;miwi_p2p.c: 821: {
  7894                           ;miwi_p2p.c: 823: if( ConnectionTable[i].status.bits.isValid )
  7895  000758  51C4               	movf	P2PTasks@i& (0+255),w,b
  7896  00075A  0D0E               	mullw	14
  7897  00075C  0E5C               	movlw	low (_ConnectionTable+12)
  7898  00075E  24F3               	addwf	prodl,w,c
  7899  000760  6ED9               	movwf	fsr2l,c
  7900  000762  0E03               	movlw	high (_ConnectionTable+12)
  7901  000764  20F4               	addwfc	prodh,w,c
  7902  000766  6EDA               	movwf	fsr2h,c
  7903  000768  AEDF               	btfss	indf2,7,c
  7904  00076A  D02F               	goto	l12935
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;miwi_p2p.c: 824: {
  7908                           ;miwi_p2p.c: 826: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7909  00076C  C0CA  F01D         	movff	_rxMessage+3,isSameAddress@Address1
  7910  000770  C0CB  F01E         	movff	_rxMessage+4,isSameAddress@Address1+1
  7911  000774  51C4               	movf	P2PTasks@i& (0+255),w,b
  7912  000776  0D0E               	mullw	14
  7913  000778  0E54               	movlw	low (_ConnectionTable+4)
  7914  00077A  24F3               	addwf	prodl,w,c
  7915  00077C  6E1F               	movwf	isSameAddress@Address2,c
  7916  00077E  0E03               	movlw	high (_ConnectionTable+4)
  7917  000780  20F4               	addwfc	prodh,w,c
  7918  000782  6E20               	movwf	isSameAddress@Address2+1,c
  7919  000784  ECC6  F01C         	call	_isSameAddress	;wreg free
  7920  000788  0900               	iorlw	0
  7921  00078A  E01F               	bz	l12935
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;miwi_p2p.c: 827: {
  7925                           ;miwi_p2p.c: 829: ConnectionTable[i].status.Val = 0;
  7926  00078C  51C4               	movf	P2PTasks@i& (0+255),w,b
  7927  00078E  0D0E               	mullw	14
  7928  000790  0E5C               	movlw	low (_ConnectionTable+12)
  7929  000792  24F3               	addwf	prodl,w,c
  7930  000794  6ED9               	movwf	fsr2l,c
  7931  000796  0E03               	movlw	high (_ConnectionTable+12)
  7932  000798  20F4               	addwfc	prodh,w,c
  7933  00079A  6EDA               	movwf	fsr2h,c
  7934  00079C  6ADF               	clrf	indf2,c
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;miwi_p2p.c: 831: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7938  00079E  51C4               	movf	P2PTasks@i& (0+255),w,b
  7939  0007A0  0D0E               	mullw	14
  7940  0007A2  0E50               	movlw	low _ConnectionTable
  7941  0007A4  24F3               	addwf	prodl,w,c
  7942  0007A6  6E1E               	movwf	NVMWrite@source,c
  7943  0007A8  0E03               	movlw	high _ConnectionTable
  7944  0007AA  20F4               	addwfc	prodh,w,c
  7945  0007AC  6E1F               	movwf	NVMWrite@source+1,c
  7946  0007AE  51C4               	movf	P2PTasks@i& (0+255),w,b
  7947  0007B0  0D0E               	mullw	14
  7948  0007B2  503E               	movf	_nvmConnectionTable,w,c
  7949  0007B4  24F3               	addwf	prodl,w,c
  7950  0007B6  6E20               	movwf	NVMWrite@addr,c
  7951  0007B8  503F               	movf	_nvmConnectionTable+1,w,c
  7952  0007BA  20F4               	addwfc	prodh,w,c
  7953  0007BC  6E21               	movwf	NVMWrite@addr+1,c
  7954  0007BE  6A23               	clrf	NVMWrite@count+1,c
  7955  0007C0  0E0E               	movlw	14
  7956  0007C2  6E22               	movwf	NVMWrite@count,c
  7957  0007C4  ECB3  F015         	call	_NVMWrite	;wreg free
  7958                           
  7959                           ;miwi_p2p.c: 833: break;
  7960  0007C8  D5FF               	goto	l12731
  7961  0007CA                     l12935:
  7962                           
  7963                           ; BSR set to: 0
  7964  0007CA  2BC4               	incf	P2PTasks@i& (0+255),f,b
  7965  0007CC  D7C1               	goto	l12923
  7966  0007CE                     l12941:
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;miwi_p2p.c: 1016: {
  7970                           ;miwi_p2p.c: 1017: if (!role)
  7971  0007CE  5041               	movf	_role,w,c
  7972  0007D0  E001 D5FA          	bnz	l12731
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;miwi_p2p.c: 1018: {
  7976                           ;miwi_p2p.c: 1019: rec_ack = 1;
  7977  0007D4  0E01               	movlw	1
  7978  0007D6  6FEB               	movwf	_rec_ack& (0+255),b
  7979  0007D8  D5F7               	goto	l12731
  7980  0007DA                     l12949:
  7981                           
  7982                           ; BSR set to: 0
  7983                           ;miwi_p2p.c: 1029: {
  7984                           ;miwi_p2p.c: 1030: if (!role)
  7985  0007DA  5041               	movf	_role,w,c
  7986  0007DC  E001 D5F4          	bnz	l12731
  7987                           
  7988                           ; BSR set to: 0
  7989                           ;miwi_p2p.c: 1031: {
  7990                           ;miwi_p2p.c: 1033: end_nodes = rxMessage.Payload[1]-1;
  7991  0007E0  EE20 F001          	lfsr	2,1
  7992  0007E4  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  7993  0007E6  26D9               	addwf	fsr2l,f,c
  7994  0007E8  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  7995  0007EA  22DA               	addwfc	fsr2h,f,c
  7996  0007EC  50DF               	movf	indf2,w,c
  7997  0007EE  6FAD               	movwf	??_P2PTasks& (0+255),b
  7998  0007F0  05AD               	decf	??_P2PTasks& (0+255),w,b
  7999  0007F2  6E36               	movwf	_end_nodes,c
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;miwi_p2p.c: 1034: store_connection_tb(rxMessage.Payload);
  8003  0007F4  C0CC  F060         	movff	_rxMessage+5,store_connection_tb@payload
  8004  0007F8  C0CD  F061         	movff	_rxMessage+6,store_connection_tb@payload+1
  8005  0007FC  ECCC  F013         	call	_store_connection_tb	;wreg free
  8006  000800  D5E3               	goto	l12731
  8007  000802                     l12959:
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;miwi_p2p.c: 1043: {
  8011                           ;miwi_p2p.c: 1044: if (role)
  8012  000802  5041               	movf	_role,w,c
  8013  000804  E101 D5E0          	bz	l12731
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;miwi_p2p.c: 1045: {
  8017                           ;miwi_p2p.c: 1047: uint8_t final_index;
  8018                           ;miwi_p2p.c: 1048: final_index = Find_Index(rxMessage.Payload);
  8019  000808  C0CC  F01D         	movff	_rxMessage+5,Find_Index@DestAddr
  8020  00080C  C0CD  F01E         	movff	_rxMessage+6,Find_Index@DestAddr+1
  8021  000810  EC96  F016         	call	_Find_Index	;wreg free
  8022  000814  0100               	movlb	0	; () banked
  8023  000816  6FBC               	movwf	P2PTasks@final_index& (0+255),b
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;miwi_p2p.c: 1049: if (final_index != 0xFF)
  8027  000818  29BC               	incf	P2PTasks@final_index& (0+255),w,b
  8028  00081A  E00D               	bz	l12967
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;miwi_p2p.c: 1050: {
  8032                           ;miwi_p2p.c: 1051: FW_Stat = Forward_Packet_PANCr_to_EDy (rxMessage.Payload , final_inde
      +                          x , rxMessage.SourceAddress);
  8033  00081C  C0CC  F0A6         	movff	_rxMessage+5,Forward_Packet_PANCr_to_EDy@fw_payload
  8034  000820  C0CD  F0A7         	movff	_rxMessage+6,Forward_Packet_PANCr_to_EDy@fw_payload+1
  8035  000824  C0BC  F0A8         	movff	P2PTasks@final_index,Forward_Packet_PANCr_to_EDy@index
  8036  000828  C0CA  F0A9         	movff	_rxMessage+3,Forward_Packet_PANCr_to_EDy@EDxAddress
  8037  00082C  C0CB  F0AA         	movff	_rxMessage+4,Forward_Packet_PANCr_to_EDy@EDxAddress+1
  8038  000830  EC00  F016         	call	_Forward_Packet_PANCr_to_EDy	;wreg free
  8039  000834  6FB5               	movwf	P2PTasks@FW_Stat& (0+255),b
  8040  000836                     l12967:
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;miwi_p2p.c: 1052: }
  8044                           ;miwi_p2p.c: 1054: if (FW_Stat)
  8045  000836  51B5               	movf	P2PTasks@FW_Stat& (0+255),w,b
  8046  000838  E101 D5C6          	bz	l12731
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;miwi_p2p.c: 1055: {
  8050                           ;miwi_p2p.c: 1056: SW_Ack_SrED (rxMessage.SourceAddress);
  8051  00083C  C0CA  F0A0         	movff	_rxMessage+3,SW_Ack_SrED@Dest_Addr
  8052  000840  C0CB  F0A1         	movff	_rxMessage+4,SW_Ack_SrED@Dest_Addr+1
  8053  000844  EC81  F01C         	call	_SW_Ack_SrED	;wreg free
  8054  000848  D5BF               	goto	l12731
  8055  00084A                     l12975:
  8056                           
  8057                           ; BSR set to: 0
  8058                           ;miwi_p2p.c: 1068: {
  8059                           ;miwi_p2p.c: 1069: if (role)
  8060  00084A  5041               	movf	_role,w,c
  8061  00084C  E101 D5BC          	bz	l12731
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;miwi_p2p.c: 1070: {
  8065                           ;miwi_p2p.c: 1072: uint8_t p;
  8066                           ;miwi_p2p.c: 1073: for (p=0 ; p < 20 ; p++)
  8067  000850  6BC2               	clrf	P2PTasks@p_1345& (0+255),b
  8068  000852                     l12979:
  8069                           
  8070                           ; BSR set to: 0
  8071  000852  0E13               	movlw	19
  8072  000854  65C2               	cpfsgt	P2PTasks@p_1345& (0+255),b
  8073  000856  D001               	goto	l12983
  8074  000858  D5B7               	goto	l12731
  8075  00085A                     l12983:
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;miwi_p2p.c: 1074: {
  8079                           ;miwi_p2p.c: 1075: if (ConnectionTable[p].Address[0] == rxMessage.SourceAddress[0] && Co
      +                          nnectionTable[p].Address[1] == rxMessage.SourceAddress[1]
  8080                           ;miwi_p2p.c: 1076: && ConnectionTable[p].Address[2] == rxMessage.SourceAddress[2])
  8081  00085A  C0CA  FFD9         	movff	_rxMessage+3,fsr2l
  8082  00085E  C0CB  FFDA         	movff	_rxMessage+4,fsr2h
  8083  000862  51C2               	movf	P2PTasks@p_1345& (0+255),w,b
  8084  000864  0D0E               	mullw	14
  8085  000866  0E54               	movlw	low (_ConnectionTable+4)
  8086  000868  24F3               	addwf	prodl,w,c
  8087  00086A  6EE1               	movwf	fsr1l,c
  8088  00086C  0E03               	movlw	high (_ConnectionTable+4)
  8089  00086E  20F4               	addwfc	prodh,w,c
  8090  000870  6EE2               	movwf	fsr1h,c
  8091  000872  50DE               	movf	postinc2,w,c
  8092  000874  18E6               	xorwf	postinc1,w,c
  8093  000876  E12A               	bnz	l12991
  8094                           
  8095                           ; BSR set to: 0
  8096  000878  EE20 F001          	lfsr	2,1
  8097  00087C  51CA               	movf	(_rxMessage+3)& (0+255),w,b
  8098  00087E  26D9               	addwf	fsr2l,f,c
  8099  000880  51CB               	movf	(_rxMessage+4)& (0+255),w,b
  8100  000882  22DA               	addwfc	fsr2h,f,c
  8101  000884  51C2               	movf	P2PTasks@p_1345& (0+255),w,b
  8102  000886  0D0E               	mullw	14
  8103  000888  0E55               	movlw	low (_ConnectionTable+5)
  8104  00088A  24F3               	addwf	prodl,w,c
  8105  00088C  6EE1               	movwf	fsr1l,c
  8106  00088E  0E03               	movlw	high (_ConnectionTable+5)
  8107  000890  20F4               	addwfc	prodh,w,c
  8108  000892  6EE2               	movwf	fsr1h,c
  8109  000894  50DE               	movf	postinc2,w,c
  8110  000896  18E6               	xorwf	postinc1,w,c
  8111  000898  E119               	bnz	l12991
  8112                           
  8113                           ; BSR set to: 0
  8114  00089A  EE20 F002          	lfsr	2,2
  8115  00089E  51CA               	movf	(_rxMessage+3)& (0+255),w,b
  8116  0008A0  26D9               	addwf	fsr2l,f,c
  8117  0008A2  51CB               	movf	(_rxMessage+4)& (0+255),w,b
  8118  0008A4  22DA               	addwfc	fsr2h,f,c
  8119  0008A6  51C2               	movf	P2PTasks@p_1345& (0+255),w,b
  8120  0008A8  0D0E               	mullw	14
  8121  0008AA  0E56               	movlw	low (_ConnectionTable+6)
  8122  0008AC  24F3               	addwf	prodl,w,c
  8123  0008AE  6EE1               	movwf	fsr1l,c
  8124  0008B0  0E03               	movlw	high (_ConnectionTable+6)
  8125  0008B2  20F4               	addwfc	prodh,w,c
  8126  0008B4  6EE2               	movwf	fsr1h,c
  8127  0008B6  50DE               	movf	postinc2,w,c
  8128  0008B8  18E6               	xorwf	postinc1,w,c
  8129  0008BA  E108               	bnz	l12991
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;miwi_p2p.c: 1077: {
  8133                           ;miwi_p2p.c: 1078: link_stat[p]++;
  8134  0008BC  0E00               	movlw	low _link_stat
  8135  0008BE  25C2               	addwf	P2PTasks@p_1345& (0+255),w,b
  8136  0008C0  6ED9               	movwf	fsr2l,c
  8137  0008C2  6ADA               	clrf	fsr2h,c
  8138  0008C4  0E02               	movlw	high _link_stat
  8139  0008C6  22DA               	addwfc	fsr2h,f,c
  8140  0008C8  2ADF               	incf	indf2,f,c
  8141                           
  8142                           ;miwi_p2p.c: 1079: break;
  8143  0008CA  D57E               	goto	l12731
  8144  0008CC                     l12991:
  8145                           
  8146                           ; BSR set to: 0
  8147  0008CC  2BC2               	incf	P2PTasks@p_1345& (0+255),f,b
  8148  0008CE  D7C1               	goto	l12979
  8149  0008D0                     l13001:
  8150                           
  8151                           ; BSR set to: 0
  8152  0008D0  C0CC  FFD9         	movff	_rxMessage+5,fsr2l
  8153  0008D4  C0CD  FFDA         	movff	_rxMessage+6,fsr2h
  8154  0008D8  50DF               	movf	indf2,w,c
  8155                           
  8156                           ; Switch size 1, requested type "speed"
  8157                           ; Number of cases is 10, Range of values is 119 to 218
  8158                           ; switch strategies available:
  8159                           ; Name         Instructions Cycles
  8160                           ; simple_byte           31    16 (average)
  8161                           ;	Chosen strategy is simple_byte
  8162  0008DA  0A77               	xorlw	119	; case 119
  8163  0008DC  E101 D77D          	bz	l12949
  8164  0008E0  0A0D               	xorlw	13	; case 122
  8165  0008E2  E0B3               	bz	l12975
  8166  0008E4  0AFB               	xorlw	251	; case 129
  8167  0008E6  E101 D563          	bz	l12725
  8168  0008EA  0A03               	xorlw	3	; case 130
  8169  0008EC  E101 D666          	bz	l483
  8170  0008F0  0A05               	xorlw	5	; case 135
  8171  0008F2  E101 D61B          	bz	l12825
  8172  0008F6  0A16               	xorlw	22	; case 145
  8173  0008F8  E101 D712          	bz	l12911
  8174  0008FC  0A03               	xorlw	3	; case 146
  8175  0008FE  E101 D71D          	bz	l12919
  8176  000902  0A05               	xorlw	5	; case 151
  8177  000904  E101 D717          	bz	l496
  8178  000908  0A5B               	xorlw	91	; case 204
  8179  00090A  E101 D77A          	bz	l12959
  8180  00090E  0A16               	xorlw	22	; case 218
  8181  000910  E101 D75D          	bz	l12941
  8182  000914                     l454:
  8183                           
  8184                           ; BSR set to: 0
  8185                           ;miwi_p2p.c: 1101: else
  8186                           ;miwi_p2p.c: 1102: {
  8187                           ;miwi_p2p.c: 1103: P2PStatus.bits.RxHasUserData = 1;
  8188  000914  87E2               	bsf	_P2PStatus& (0+255),3,b	;volatile
  8189  000916                     l13003:
  8190                           
  8191                           ;miwi_p2p.c: 1104: }
  8192                           ;miwi_p2p.c: 1113: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
  8193  000916  0100               	movlb	0	; () banked
  8194  000918  51CE               	movf	(_rxMessage+7)& (0+255),w,b
  8195  00091A  E004               	bz	l525
  8196                           
  8197                           ; BSR set to: 0
  8198  00091C  B9E2               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  8199  00091E  D002               	goto	l525
  8200                           
  8201                           ; BSR set to: 0
  8202  000920  ABE2               	btfss	_P2PStatus& (0+255),5,b	;volatile
  8203  000922  0012               	return	
  8204  000924                     l525:
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;miwi_p2p.c: 1114: {
  8208                           ;miwi_p2p.c: 1115: P2PStatus.bits.RxHasUserData = 0;
  8209  000924  97E2               	bcf	_P2PStatus& (0+255),3,b	;volatile
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;miwi_p2p.c: 1116: MiMAC_DiscardPacket();
  8213  000926  EFC8  F01D         	goto	_MiMAC_DiscardPacket	;wreg free
  8214  00092A                     __end_of_P2PTasks:
  8215                           	opt stack 0
  8216                           tblptru	equ	0xFF8
  8217                           tblptrh	equ	0xFF7
  8218                           tblptrl	equ	0xFF6
  8219                           tablat	equ	0xFF5
  8220                           prodh	equ	0xFF4
  8221                           prodl	equ	0xFF3
  8222                           intcon	equ	0xFF2
  8223                           intcon2	equ	0xFF1
  8224                           intcon3	equ	0xFF0
  8225                           postinc0	equ	0xFEE
  8226                           wreg	equ	0xFE8
  8227                           indf1	equ	0xFE7
  8228                           postinc1	equ	0xFE6
  8229                           postdec1	equ	0xFE5
  8230                           fsr1h	equ	0xFE2
  8231                           fsr1l	equ	0xFE1
  8232                           indf2	equ	0xFDF
  8233                           postinc2	equ	0xFDE
  8234                           postdec2	equ	0xFDD
  8235                           fsr2h	equ	0xFDA
  8236                           fsr2l	equ	0xFD9
  8237                           status	equ	0xFD8
  8238                           
  8239 ;; *************** function _store_connection_tb *****************
  8240 ;; Defined at:
  8241 ;;		line 150 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  payload         2    0[BANK0 ] PTR unsigned char 
  8244 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;  i               1    5[BANK0 ] unsigned char 
  8247 ;;  j               1    4[BANK0 ] unsigned char 
  8248 ;;  connections_    1    0        unsigned char 
  8249 ;;  k               1    0        unsigned char 
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  1    wreg      void 
  8252 ;; Registers used:
  8253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8254 ;; Tracked objects:
  8255 ;;		On entry : F/0
  8256 ;;		On exit  : E/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8259 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8260 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8261 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8262 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8263 ;;Total ram usage:        6 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:    5
  8266 ;; This function calls:
  8267 ;;		_handle_lost_connection
  8268 ;; This function is called by:
  8269 ;;		_P2PTasks
  8270 ;; This function uses a non-reentrant model
  8271 ;;
  8272                           
  8273                           	psect	text30
  8274  002798                     __ptext30:
  8275                           	opt stack 0
  8276  002798                     _store_connection_tb:
  8277                           	opt stack 20
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;miwi_p2p.c: 154: for (i=4; i < 40; i++)
  8281                           
  8282                           ;incstack = 0
  8283  002798  0E04               	movlw	4
  8284  00279A  6F65               	movwf	store_connection_tb@i& (0+255),b
  8285  00279C                     l12413:
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;miwi_p2p.c: 155: {
  8289                           ;miwi_p2p.c: 156: if (i % 4 == 0 && (i+3) < 40)
  8290  00279C  C065  F062         	movff	store_connection_tb@i,??_store_connection_tb
  8291  0027A0  0E03               	movlw	3
  8292  0027A2  1762               	andwf	??_store_connection_tb& (0+255),f,b
  8293  0027A4  E161               	bnz	l12427
  8294                           
  8295                           ; BSR set to: 0
  8296  0027A6  5165               	movf	store_connection_tb@i& (0+255),w,b
  8297  0027A8  6F62               	movwf	??_store_connection_tb& (0+255),b
  8298  0027AA  6B63               	clrf	(??_store_connection_tb+1)& (0+255),b
  8299  0027AC  0E03               	movlw	3
  8300  0027AE  2762               	addwf	??_store_connection_tb& (0+255),f,b
  8301  0027B0  0E00               	movlw	0
  8302  0027B2  2363               	addwfc	(??_store_connection_tb+1)& (0+255),f,b
  8303  0027B4  BF63               	btfsc	(??_store_connection_tb+1)& (0+255),7,b
  8304  0027B6  D005               	goto	l12417
  8305  0027B8  5163               	movf	(??_store_connection_tb+1)& (0+255),w,b
  8306  0027BA  E156               	bnz	l12427
  8307  0027BC  0E28               	movlw	40
  8308  0027BE  5D62               	subwf	??_store_connection_tb& (0+255),w,b
  8309  0027C0  E253               	bc	l12427
  8310  0027C2                     l12417:
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;miwi_p2p.c: 157: {
  8314                           ;miwi_p2p.c: 158: j = payload[i+3];
  8315  0027C2  5165               	movf	store_connection_tb@i& (0+255),w,b
  8316  0027C4  2560               	addwf	store_connection_tb@payload& (0+255),w,b
  8317  0027C6  6F62               	movwf	??_store_connection_tb& (0+255),b
  8318  0027C8  0E00               	movlw	0
  8319  0027CA  2161               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8320  0027CC  6F63               	movwf	(??_store_connection_tb+1)& (0+255),b
  8321  0027CE  0E03               	movlw	3
  8322  0027D0  2562               	addwf	??_store_connection_tb& (0+255),w,b
  8323  0027D2  6ED9               	movwf	fsr2l,c
  8324  0027D4  0E00               	movlw	0
  8325  0027D6  2163               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  8326  0027D8  6EDA               	movwf	fsr2h,c
  8327  0027DA  50DF               	movf	indf2,w,c
  8328  0027DC  6F64               	movwf	store_connection_tb@j& (0+255),b
  8329                           
  8330                           ; BSR set to: 0
  8331                           ;miwi_p2p.c: 159: END_DEVICES_Short_Address[j].connection_slot = j;
  8332  0027DE  5164               	movf	store_connection_tb@j& (0+255),w,b
  8333  0027E0  0D04               	mullw	4
  8334  0027E2  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  8335  0027E4  24F3               	addwf	prodl,w,c
  8336  0027E6  6ED9               	movwf	fsr2l,c
  8337  0027E8  0E03               	movlw	high (_END_DEVICES_Short_Address+3)
  8338  0027EA  20F4               	addwfc	prodh,w,c
  8339  0027EC  6EDA               	movwf	fsr2h,c
  8340  0027EE  C064  FFDF         	movff	store_connection_tb@j,indf2
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;miwi_p2p.c: 160: END_DEVICES_Short_Address[j].Address[0] = payload[i];
  8344  0027F2  5165               	movf	store_connection_tb@i& (0+255),w,b
  8345  0027F4  2560               	addwf	store_connection_tb@payload& (0+255),w,b
  8346  0027F6  6ED9               	movwf	fsr2l,c
  8347  0027F8  0E00               	movlw	0
  8348  0027FA  2161               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8349  0027FC  6EDA               	movwf	fsr2h,c
  8350  0027FE  5164               	movf	store_connection_tb@j& (0+255),w,b
  8351  002800  0D04               	mullw	4
  8352  002802  0E00               	movlw	low _END_DEVICES_Short_Address
  8353  002804  24F3               	addwf	prodl,w,c
  8354  002806  6EE1               	movwf	fsr1l,c
  8355  002808  0E03               	movlw	high _END_DEVICES_Short_Address
  8356  00280A  20F4               	addwfc	prodh,w,c
  8357  00280C  6EE2               	movwf	fsr1h,c
  8358  00280E  CFDF FFE7          	movff	indf2,indf1
  8359                           
  8360                           ; BSR set to: 0
  8361                           ;miwi_p2p.c: 161: END_DEVICES_Short_Address[j].Address[1] = payload[i+1];
  8362  002812  5165               	movf	store_connection_tb@i& (0+255),w,b
  8363  002814  2560               	addwf	store_connection_tb@payload& (0+255),w,b
  8364  002816  6F62               	movwf	??_store_connection_tb& (0+255),b
  8365  002818  0E00               	movlw	0
  8366  00281A  2161               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8367  00281C  6F63               	movwf	(??_store_connection_tb+1)& (0+255),b
  8368  00281E  2962               	incf	??_store_connection_tb& (0+255),w,b
  8369  002820  6ED9               	movwf	fsr2l,c
  8370  002822  0E00               	movlw	0
  8371  002824  2163               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  8372  002826  6EDA               	movwf	fsr2h,c
  8373  002828  5164               	movf	store_connection_tb@j& (0+255),w,b
  8374  00282A  0D04               	mullw	4
  8375  00282C  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  8376  00282E  24F3               	addwf	prodl,w,c
  8377  002830  6EE1               	movwf	fsr1l,c
  8378  002832  0E03               	movlw	high (_END_DEVICES_Short_Address+1)
  8379  002834  20F4               	addwfc	prodh,w,c
  8380  002836  6EE2               	movwf	fsr1h,c
  8381  002838  CFDF FFE7          	movff	indf2,indf1
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;miwi_p2p.c: 162: END_DEVICES_Short_Address[j].Address[2] = payload[i+2];
  8385  00283C  5165               	movf	store_connection_tb@i& (0+255),w,b
  8386  00283E  2560               	addwf	store_connection_tb@payload& (0+255),w,b
  8387  002840  6F62               	movwf	??_store_connection_tb& (0+255),b
  8388  002842  0E00               	movlw	0
  8389  002844  2161               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8390  002846  6F63               	movwf	(??_store_connection_tb+1)& (0+255),b
  8391  002848  0E02               	movlw	2
  8392  00284A  2562               	addwf	??_store_connection_tb& (0+255),w,b
  8393  00284C  6ED9               	movwf	fsr2l,c
  8394  00284E  0E00               	movlw	0
  8395  002850  2163               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  8396  002852  6EDA               	movwf	fsr2h,c
  8397  002854  5164               	movf	store_connection_tb@j& (0+255),w,b
  8398  002856  0D04               	mullw	4
  8399  002858  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  8400  00285A  24F3               	addwf	prodl,w,c
  8401  00285C  6EE1               	movwf	fsr1l,c
  8402  00285E  0E03               	movlw	high (_END_DEVICES_Short_Address+2)
  8403  002860  20F4               	addwfc	prodh,w,c
  8404  002862  6EE2               	movwf	fsr1h,c
  8405  002864  CFDF FFE7          	movff	indf2,indf1
  8406  002868                     l12427:
  8407                           
  8408                           ; BSR set to: 0
  8409  002868  2B65               	incf	store_connection_tb@i& (0+255),f,b
  8410                           
  8411                           ; BSR set to: 0
  8412  00286A  0E27               	movlw	39
  8413  00286C  6565               	cpfsgt	store_connection_tb@i& (0+255),b
  8414  00286E  D796               	goto	l12413
  8415  002870  EFB6  F018         	goto	_handle_lost_connection
  8416  002874                     __end_of_store_connection_tb:
  8417                           	opt stack 0
  8418                           tblptru	equ	0xFF8
  8419                           tblptrh	equ	0xFF7
  8420                           tblptrl	equ	0xFF6
  8421                           tablat	equ	0xFF5
  8422                           prodh	equ	0xFF4
  8423                           prodl	equ	0xFF3
  8424                           intcon	equ	0xFF2
  8425                           intcon2	equ	0xFF1
  8426                           intcon3	equ	0xFF0
  8427                           postinc0	equ	0xFEE
  8428                           wreg	equ	0xFE8
  8429                           indf1	equ	0xFE7
  8430                           postinc1	equ	0xFE6
  8431                           postdec1	equ	0xFE5
  8432                           fsr1h	equ	0xFE2
  8433                           fsr1l	equ	0xFE1
  8434                           indf2	equ	0xFDF
  8435                           postinc2	equ	0xFDE
  8436                           postdec2	equ	0xFDD
  8437                           fsr2h	equ	0xFDA
  8438                           fsr2l	equ	0xFD9
  8439                           status	equ	0xFD8
  8440                           
  8441 ;; *************** function _handle_lost_connection *****************
  8442 ;; Defined at:
  8443 ;;		line 127 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;		None
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  i               1   34[COMRAM] unsigned char 
  8448 ;;  stat            1   33[COMRAM] unsigned char 
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8453 ;; Tracked objects:
  8454 ;;		On entry : F/0
  8455 ;;		On exit  : E/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8460 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8461 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8462 ;;Total ram usage:        7 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    4
  8465 ;; This function calls:
  8466 ;;		Nothing
  8467 ;; This function is called by:
  8468 ;;		_store_connection_tb
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           	psect	text31
  8473  00316C                     __ptext31:
  8474                           	opt stack 0
  8475  00316C                     _handle_lost_connection:
  8476                           	opt stack 20
  8477                           
  8478                           ; BSR set to: 0
  8479                           ;miwi_p2p.c: 129: uint8_t i ;
  8480                           ;miwi_p2p.c: 130: bool stat = 0;
  8481                           
  8482                           ;incstack = 0
  8483  00316C  6A22               	clrf	handle_lost_connection@stat,c
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;miwi_p2p.c: 131: if (!role)
  8487  00316E  5041               	movf	_role,w,c
  8488  003170  A4D8               	btfss	status,2,c
  8489  003172  0012               	return	
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;miwi_p2p.c: 132: {
  8493                           ;miwi_p2p.c: 133: for (i=0;i<end_nodes+1;i++)
  8494  003174  6A23               	clrf	handle_lost_connection@i,c
  8495  003176  D01A               	goto	l12023
  8496  003178                     l12015:
  8497                           
  8498                           ;miwi_p2p.c: 134: {
  8499                           ;miwi_p2p.c: 135: if (myLongAddress[0] == END_DEVICES_Short_Address[i].Address[0] && myL
      +                          ongAddress[1] == END_DEVICES_Short_Address[i].Address[1])
  8500  003178  5023               	movf	handle_lost_connection@i,w,c
  8501  00317A  0D04               	mullw	4
  8502  00317C  0E00               	movlw	low _END_DEVICES_Short_Address
  8503  00317E  24F3               	addwf	prodl,w,c
  8504  003180  6ED9               	movwf	fsr2l,c
  8505  003182  0E03               	movlw	high _END_DEVICES_Short_Address
  8506  003184  20F4               	addwfc	prodh,w,c
  8507  003186  6EDA               	movwf	fsr2h,c
  8508  003188  0101               	movlb	1	; () banked
  8509  00318A  5161               	movf	_myLongAddress& (0+255),w,b
  8510  00318C  18DE               	xorwf	postinc2,w,c
  8511  00318E  E10D               	bnz	l12021
  8512                           
  8513                           ; BSR set to: 1
  8514  003190  5023               	movf	handle_lost_connection@i,w,c
  8515  003192  0D04               	mullw	4
  8516  003194  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  8517  003196  24F3               	addwf	prodl,w,c
  8518  003198  6ED9               	movwf	fsr2l,c
  8519  00319A  0E03               	movlw	high (_END_DEVICES_Short_Address+1)
  8520  00319C  20F4               	addwfc	prodh,w,c
  8521  00319E  6EDA               	movwf	fsr2h,c
  8522  0031A0  50DE               	movf	postinc2,w,c
  8523  0031A2  1962               	xorwf	(_myLongAddress+1)& (0+255),w,b
  8524  0031A4  E102               	bnz	l12021
  8525                           
  8526                           ; BSR set to: 1
  8527                           ;miwi_p2p.c: 136: {
  8528                           ;miwi_p2p.c: 137: stat = 1;
  8529  0031A6  0E01               	movlw	1
  8530  0031A8  6E22               	movwf	handle_lost_connection@stat,c
  8531  0031AA                     l12021:
  8532                           
  8533                           ; BSR set to: 1
  8534  0031AA  2A23               	incf	handle_lost_connection@i,f,c
  8535  0031AC                     l12023:
  8536  0031AC  5036               	movf	_end_nodes,w,c
  8537  0031AE  6E1D               	movwf	??_handle_lost_connection& (0+255),c
  8538  0031B0  6A1E               	clrf	(??_handle_lost_connection+1)& (0+255),c
  8539  0031B2  2A1D               	incf	??_handle_lost_connection,f,c
  8540  0031B4  0E00               	movlw	0
  8541  0031B6  221E               	addwfc	??_handle_lost_connection+1,f,c
  8542  0031B8  5023               	movf	handle_lost_connection@i,w,c
  8543  0031BA  6E1F               	movwf	(??_handle_lost_connection+2)& (0+255),c
  8544  0031BC  6A20               	clrf	(??_handle_lost_connection+3)& (0+255),c
  8545  0031BE  501D               	movf	??_handle_lost_connection,w,c
  8546  0031C0  5C1F               	subwf	??_handle_lost_connection+2,w,c
  8547  0031C2  5020               	movf	??_handle_lost_connection+3,w,c
  8548  0031C4  0A80               	xorlw	128
  8549  0031C6  6E21               	movwf	(??_handle_lost_connection+4)& (0+255),c
  8550  0031C8  501E               	movf	??_handle_lost_connection+1,w,c
  8551  0031CA  0A80               	xorlw	128
  8552  0031CC  5821               	subwfb	(??_handle_lost_connection+4)& (0+255),w,c
  8553  0031CE  E3D4               	bnc	l12015
  8554                           
  8555                           ;miwi_p2p.c: 138: }
  8556                           ;miwi_p2p.c: 139: }
  8557                           ;miwi_p2p.c: 140: if (!stat)
  8558  0031D0  5022               	movf	handle_lost_connection@stat,w,c
  8559  0031D2  A4D8               	btfss	status,2,c
  8560  0031D4  0012               	return	
  8561                           
  8562                           ;miwi_p2p.c: 141: {
  8563                           ;miwi_p2p.c: 142: lost_connection = 1;
  8564  0031D6  0E01               	movlw	1
  8565  0031D8  0100               	movlb	0	; () banked
  8566  0031DA  6FEA               	movwf	_lost_connection& (0+255),b
  8567  0031DC  0C01               	retlw	1	;funcret
  8568  0031DE                     __end_of_handle_lost_connection:
  8569                           	opt stack 0
  8570                           tblptru	equ	0xFF8
  8571                           tblptrh	equ	0xFF7
  8572                           tblptrl	equ	0xFF6
  8573                           tablat	equ	0xFF5
  8574                           prodh	equ	0xFF4
  8575                           prodl	equ	0xFF3
  8576                           intcon	equ	0xFF2
  8577                           intcon2	equ	0xFF1
  8578                           intcon3	equ	0xFF0
  8579                           postinc0	equ	0xFEE
  8580                           wreg	equ	0xFE8
  8581                           indf1	equ	0xFE7
  8582                           postinc1	equ	0xFE6
  8583                           postdec1	equ	0xFE5
  8584                           fsr1h	equ	0xFE2
  8585                           fsr1l	equ	0xFE1
  8586                           indf2	equ	0xFDF
  8587                           postinc2	equ	0xFDE
  8588                           postdec2	equ	0xFDD
  8589                           fsr2h	equ	0xFDA
  8590                           fsr2l	equ	0xFD9
  8591                           status	equ	0xFD8
  8592                           
  8593 ;; *************** function _send_link_status *****************
  8594 ;; Defined at:
  8595 ;;		line 2027 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;		None
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;  send_status     1   64[BANK0 ] unsigned char 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      void 
  8602 ;; Registers used:
  8603 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8604 ;; Tracked objects:
  8605 ;;		On entry : F/0
  8606 ;;		On exit  : F/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8612 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8613 ;;Total ram usage:        1 bytes
  8614 ;; Hardware stack levels used:    1
  8615 ;; Hardware stack levels required when called:   10
  8616 ;; This function calls:
  8617 ;;		_SendPacket
  8618 ;; This function is called by:
  8619 ;;		_P2PTasks
  8620 ;; This function uses a non-reentrant model
  8621 ;;
  8622                           
  8623                           	psect	text32
  8624  003770                     __ptext32:
  8625                           	opt stack 0
  8626  003770                     _send_link_status:
  8627                           	opt stack 15
  8628                           
  8629                           ; BSR set to: 0
  8630                           ;miwi_p2p.c: 2029: bool send_status;
  8631                           ;miwi_p2p.c: 2030: {TxData = 0;};
  8632                           
  8633                           ;incstack = 0
  8634  003770  6BE5               	clrf	_TxData& (0+255),b
  8635                           
  8636                           ; BSR set to: 0
  8637                           ;miwi_p2p.c: 2031: TxBuffer[TxData++] = 0x7A;
  8638  003772  0E18               	movlw	low _TxBuffer
  8639  003774  25E5               	addwf	_TxData& (0+255),w,b
  8640  003776  6ED9               	movwf	fsr2l,c
  8641  003778  6ADA               	clrf	fsr2h,c
  8642  00377A  0E01               	movlw	high _TxBuffer
  8643  00377C  22DA               	addwfc	fsr2h,f,c
  8644  00377E  0E7A               	movlw	122
  8645  003780  6EDF               	movwf	indf2,c
  8646                           
  8647                           ; BSR set to: 0
  8648  003782  2BE5               	incf	_TxData& (0+255),f,b
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;miwi_p2p.c: 2035: send_status = SendPacket(0, myPANID, ConnectionTable[0].Address, 1, 0
      +                          );
  8652  003784  C0EC  F090         	movff	_myPANID,SendPacket@DestinationPANID
  8653  003788  C0ED  F091         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  8654  00378C  0E54               	movlw	low (_ConnectionTable+4)
  8655  00378E  6F92               	movwf	SendPacket@DestinationAddress& (0+255),b
  8656  003790  0E03               	movlw	high (_ConnectionTable+4)
  8657  003792  6F93               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  8658  003794  0E01               	movlw	1
  8659  003796  6F94               	movwf	SendPacket@isCommand& (0+255),b
  8660  003798  0E00               	movlw	0
  8661  00379A  6B95               	clrf	SendPacket@SecurityEnabled& (0+255),b
  8662  00379C  EC09  F015         	call	_SendPacket
  8663  0037A0  6FA0               	movwf	send_link_status@send_status& (0+255),b
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;miwi_p2p.c: 2039: if(!send_status)
  8667  0037A2  51A0               	movf	send_link_status@send_status& (0+255),w,b
  8668  0037A4  A4D8               	btfss	status,2,c
  8669  0037A6  0012               	return	
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;miwi_p2p.c: 2040: {
  8673                           ;miwi_p2p.c: 2041: lost_connection = 1;
  8674  0037A8  0E01               	movlw	1
  8675  0037AA  6FEA               	movwf	_lost_connection& (0+255),b
  8676                           
  8677                           ; BSR set to: 0
  8678  0037AC  0C01               	retlw	1	;funcret
  8679  0037AE                     __end_of_send_link_status:
  8680                           	opt stack 0
  8681                           tblptru	equ	0xFF8
  8682                           tblptrh	equ	0xFF7
  8683                           tblptrl	equ	0xFF6
  8684                           tablat	equ	0xFF5
  8685                           prodh	equ	0xFF4
  8686                           prodl	equ	0xFF3
  8687                           intcon	equ	0xFF2
  8688                           intcon2	equ	0xFF1
  8689                           intcon3	equ	0xFF0
  8690                           postinc0	equ	0xFEE
  8691                           wreg	equ	0xFE8
  8692                           indf1	equ	0xFE7
  8693                           postinc1	equ	0xFE6
  8694                           postdec1	equ	0xFE5
  8695                           fsr1h	equ	0xFE2
  8696                           fsr1l	equ	0xFE1
  8697                           indf2	equ	0xFDF
  8698                           postinc2	equ	0xFDE
  8699                           postdec2	equ	0xFDD
  8700                           fsr2h	equ	0xFDA
  8701                           fsr2l	equ	0xFD9
  8702                           status	equ	0xFD8
  8703                           
  8704 ;; *************** function _SW_Ack_SrED *****************
  8705 ;; Defined at:
  8706 ;;		line 2092 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  Dest_Addr       2   64[BANK0 ] PTR unsigned char 
  8709 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;		None
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  1    wreg      unsigned char 
  8714 ;; Registers used:
  8715 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8716 ;; Tracked objects:
  8717 ;;		On entry : F/0
  8718 ;;		On exit  : F/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8721 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8724 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8725 ;;Total ram usage:        2 bytes
  8726 ;; Hardware stack levels used:    1
  8727 ;; Hardware stack levels required when called:   10
  8728 ;; This function calls:
  8729 ;;		_SendPacket
  8730 ;; This function is called by:
  8731 ;;		_P2PTasks
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text33
  8736  003902                     __ptext33:
  8737                           	opt stack 0
  8738  003902                     _SW_Ack_SrED:
  8739                           	opt stack 15
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;miwi_p2p.c: 2094: {TxData = 0;};
  8743                           
  8744                           ; BSR set to: 0
  8745                           ;incstack = 0
  8746  003902  6BE5               	clrf	_TxData& (0+255),b
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;miwi_p2p.c: 2095: TxBuffer[TxData++] = 0xDA;
  8750  003904  0E18               	movlw	low _TxBuffer
  8751  003906  25E5               	addwf	_TxData& (0+255),w,b
  8752  003908  6ED9               	movwf	fsr2l,c
  8753  00390A  6ADA               	clrf	fsr2h,c
  8754  00390C  0E01               	movlw	high _TxBuffer
  8755  00390E  22DA               	addwfc	fsr2h,f,c
  8756  003910  0EDA               	movlw	218
  8757  003912  6EDF               	movwf	indf2,c
  8758                           
  8759                           ; BSR set to: 0
  8760  003914  2BE5               	incf	_TxData& (0+255),f,b
  8761                           
  8762                           ; BSR set to: 0
  8763                           ;miwi_p2p.c: 2099: return SendPacket(0, myPANID, Dest_Addr, 1, 0);
  8764                           ;	Return value of _SW_Ack_SrED is never used
  8765  003916  C0EC  F090         	movff	_myPANID,SendPacket@DestinationPANID
  8766  00391A  C0ED  F091         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  8767  00391E  C0A0  F092         	movff	SW_Ack_SrED@Dest_Addr,SendPacket@DestinationAddress
  8768  003922  C0A1  F093         	movff	SW_Ack_SrED@Dest_Addr+1,SendPacket@DestinationAddress+1
  8769  003926  0E01               	movlw	1
  8770  003928  6F94               	movwf	SendPacket@isCommand& (0+255),b
  8771  00392A  0E00               	movlw	0
  8772  00392C  6B95               	clrf	SendPacket@SecurityEnabled& (0+255),b
  8773  00392E  EF09  F015         	goto	_SendPacket
  8774  003932                     __end_of_SW_Ack_SrED:
  8775                           	opt stack 0
  8776                           tblptru	equ	0xFF8
  8777                           tblptrh	equ	0xFF7
  8778                           tblptrl	equ	0xFF6
  8779                           tablat	equ	0xFF5
  8780                           prodh	equ	0xFF4
  8781                           prodl	equ	0xFF3
  8782                           intcon	equ	0xFF2
  8783                           intcon2	equ	0xFF1
  8784                           intcon3	equ	0xFF0
  8785                           postinc0	equ	0xFEE
  8786                           wreg	equ	0xFE8
  8787                           indf1	equ	0xFE7
  8788                           postinc1	equ	0xFE6
  8789                           postdec1	equ	0xFE5
  8790                           fsr1h	equ	0xFE2
  8791                           fsr1l	equ	0xFE1
  8792                           indf2	equ	0xFDF
  8793                           postinc2	equ	0xFDE
  8794                           postdec2	equ	0xFDD
  8795                           fsr2h	equ	0xFDA
  8796                           fsr2l	equ	0xFD9
  8797                           status	equ	0xFD8
  8798                           
  8799 ;; *************** function _MiMAC_ReceivedPacket *****************
  8800 ;; Defined at:
  8801 ;;		line 366 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;  bIntraPAN       1   35[COMRAM] unsigned char 
  8806 ;;  addrMode        1   33[COMRAM] unsigned char 
  8807 ;;  i               1   34[COMRAM] unsigned char 
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  1    wreg      unsigned char 
  8810 ;; Registers used:
  8811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8812 ;; Tracked objects:
  8813 ;;		On entry : F/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8818 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8819 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8820 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8821 ;;Total ram usage:        8 bytes
  8822 ;; Hardware stack levels used:    1
  8823 ;; Hardware stack levels required when called:    5
  8824 ;; This function calls:
  8825 ;;		_MiMAC_DiscardPacket
  8826 ;; This function is called by:
  8827 ;;		_P2PTasks
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text34
  8832  001052                     __ptext34:
  8833                           	opt stack 0
  8834  001052                     _MiMAC_ReceivedPacket:
  8835                           	opt stack 20
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;drv_mrf_miwi_24j40.c: 368: uint8_t i;
  8839                           ;drv_mrf_miwi_24j40.c: 371: if (PORTBbits.RB1 == 0)
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;incstack = 0
  8843  001052  A281               	btfss	3969,1,c	;volatile
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;drv_mrf_miwi_24j40.c: 372: {
  8847                           ;drv_mrf_miwi_24j40.c: 373: INTCON3bits.INT1IF = 1;
  8848  001054  80F0               	bsf	intcon3,0,c	;volatile
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;drv_mrf_miwi_24j40.c: 374: }
  8852                           ;drv_mrf_miwi_24j40.c: 379: if (MRF24J40Status.bits.TX_BUSY)
  8853  001056  A033               	btfss	_MRF24J40Status,0,c	;volatile
  8854  001058  D00B               	goto	l12211
  8855                           
  8856                           ; BSR set to: 0
  8857                           ;drv_mrf_miwi_24j40.c: 380: {
  8858                           ;drv_mrf_miwi_24j40.c: 381: if (failureCounter >= ((uint16_t)0x20 * (((8000000)/4)/10000
      +                          00)))
  8859  00105A  51D9               	movf	(_failureCounter+1)& (0+255),w,b	;volatile
  8860  00105C  E103               	bnz	u12810
  8861  00105E  0E40               	movlw	64
  8862  001060  5DD8               	subwf	_failureCounter& (0+255),w,b	;volatile
  8863  001062  E304               	bnc	l12209
  8864  001064                     u12810:
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;drv_mrf_miwi_24j40.c: 382: {
  8868                           ;drv_mrf_miwi_24j40.c: 383: failureCounter = 0;
  8869  001064  6BD8               	clrf	_failureCounter& (0+255),b	;volatile
  8870  001066  6BD9               	clrf	(_failureCounter+1)& (0+255),b	;volatile
  8871                           
  8872                           ;drv_mrf_miwi_24j40.c: 384: MRF24J40Status.bits.TX_BUSY = 0;
  8873  001068  9033               	bcf	_MRF24J40Status,0,c	;volatile
  8874                           
  8875                           ;drv_mrf_miwi_24j40.c: 385: } else
  8876  00106A  D002               	goto	l12211
  8877  00106C                     l12209:
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;drv_mrf_miwi_24j40.c: 386: {
  8881                           ;drv_mrf_miwi_24j40.c: 387: failureCounter++;
  8882  00106C  4BD8               	infsnz	_failureCounter& (0+255),f,b	;volatile
  8883  00106E  2BD9               	incf	(_failureCounter+1)& (0+255),f,b	;volatile
  8884  001070                     l12211:
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;drv_mrf_miwi_24j40.c: 388: }
  8888                           ;drv_mrf_miwi_24j40.c: 389: }
  8889                           ;drv_mrf_miwi_24j40.c: 391: BankIndex = 0xFF;
  8890  001070  6842               	setf	_BankIndex,c
  8891                           
  8892                           ; BSR set to: 0
  8893                           ;drv_mrf_miwi_24j40.c: 392: for (i = 0; i < 2; i++)
  8894  001072  6A23               	clrf	MiMAC_ReceivedPacket@i,c
  8895  001074                     l12219:
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;drv_mrf_miwi_24j40.c: 393: {
  8899                           ;drv_mrf_miwi_24j40.c: 394: if (RxBuffer[i].PayloadLen > 0)
  8900  001074  5023               	movf	MiMAC_ReceivedPacket@i,w,c
  8901  001076  0D45               	mullw	69
  8902  001078  0E28               	movlw	low _RxBuffer
  8903  00107A  24F3               	addwf	prodl,w,c
  8904  00107C  6ED9               	movwf	fsr2l,c
  8905  00107E  0E02               	movlw	high _RxBuffer
  8906  001080  20F4               	addwfc	prodh,w,c
  8907  001082  6EDA               	movwf	fsr2h,c
  8908  001084  50DF               	movf	indf2,w,c
  8909  001086  E003               	bz	l12223
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;drv_mrf_miwi_24j40.c: 395: {
  8913                           ;drv_mrf_miwi_24j40.c: 396: BankIndex = i;
  8914  001088  C023  F042         	movff	MiMAC_ReceivedPacket@i,_BankIndex
  8915                           
  8916                           ;drv_mrf_miwi_24j40.c: 397: break;
  8917  00108C  D004               	goto	l12227
  8918  00108E                     l12223:
  8919                           
  8920                           ; BSR set to: 0
  8921  00108E  2A23               	incf	MiMAC_ReceivedPacket@i,f,c
  8922                           
  8923                           ; BSR set to: 0
  8924  001090  0E01               	movlw	1
  8925  001092  6423               	cpfsgt	MiMAC_ReceivedPacket@i,c
  8926  001094  D7EF               	goto	l12219
  8927  001096                     l12227:
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;drv_mrf_miwi_24j40.c: 398: }
  8931                           ;drv_mrf_miwi_24j40.c: 399: }
  8932                           ;drv_mrf_miwi_24j40.c: 402: if (BankIndex < 2)
  8933  001096  0E02               	movlw	2
  8934  001098  6042               	cpfslt	_BankIndex,c
  8935  00109A  0C00               	retlw	0
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;drv_mrf_miwi_24j40.c: 403: {
  8939                           ;drv_mrf_miwi_24j40.c: 404: uint8_t addrMode;
  8940                           ;drv_mrf_miwi_24j40.c: 406: bool bIntraPAN = 1;
  8941  00109C  0E01               	movlw	1
  8942  00109E  6E24               	movwf	MiMAC_ReceivedPacket@bIntraPAN,c
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;drv_mrf_miwi_24j40.c: 408: if ((RxBuffer[BankIndex].Payload[0] & 0x40) == 0)
  8946  0010A0  5042               	movf	_BankIndex,w,c
  8947  0010A2  0D45               	mullw	69
  8948  0010A4  0E29               	movlw	low (_RxBuffer+1)
  8949  0010A6  24F3               	addwf	prodl,w,c
  8950  0010A8  6ED9               	movwf	fsr2l,c
  8951  0010AA  0E02               	movlw	high (_RxBuffer+1)
  8952  0010AC  20F4               	addwfc	prodh,w,c
  8953  0010AE  6EDA               	movwf	fsr2h,c
  8954  0010B0  0102               	movlb	2	; () banked
  8955  0010B2  ACDF               	btfss	indf2,6,c
  8956                           
  8957                           ; BSR set to: 2
  8958                           ;drv_mrf_miwi_24j40.c: 409: {
  8959                           ;drv_mrf_miwi_24j40.c: 410: bIntraPAN = 0;
  8960  0010B4  6A24               	clrf	MiMAC_ReceivedPacket@bIntraPAN,c
  8961                           
  8962                           ; BSR set to: 2
  8963                           ;drv_mrf_miwi_24j40.c: 411: }
  8964                           ;drv_mrf_miwi_24j40.c: 413: MACRxPacket.flags.Val = 0;
  8965  0010B6  6A25               	clrf	_MACRxPacket,c
  8966                           
  8967                           ;drv_mrf_miwi_24j40.c: 414: MACRxPacket.altSourceAddress = 0;
  8968  0010B8  6A2D               	clrf	_MACRxPacket+8,c
  8969                           
  8970                           ; BSR set to: 2
  8971                           ;drv_mrf_miwi_24j40.c: 417: addrMode = RxBuffer[BankIndex].Payload[1] & 0xCC;
  8972  0010BA  5042               	movf	_BankIndex,w,c
  8973  0010BC  0D45               	mullw	69
  8974  0010BE  0E2A               	movlw	low (_RxBuffer+2)
  8975  0010C0  24F3               	addwf	prodl,w,c
  8976  0010C2  6ED9               	movwf	fsr2l,c
  8977  0010C4  0E02               	movlw	high (_RxBuffer+2)
  8978  0010C6  20F4               	addwfc	prodh,w,c
  8979  0010C8  6EDA               	movwf	fsr2h,c
  8980  0010CA  50DF               	movf	indf2,w,c
  8981  0010CC  0BCC               	andlw	204
  8982  0010CE  6E22               	movwf	MiMAC_ReceivedPacket@addrMode,c
  8983                           
  8984                           ;drv_mrf_miwi_24j40.c: 418: switch (addrMode)
  8985  0010D0  D1DB               	goto	l12335
  8986  0010D2                     l12237:
  8987                           
  8988                           ; BSR set to: 2
  8989                           ;drv_mrf_miwi_24j40.c: 422: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  8990  0010D2  5042               	movf	_BankIndex,w,c
  8991  0010D4  0D45               	mullw	69
  8992  0010D6  0E2E               	movlw	low (_RxBuffer+6)
  8993  0010D8  24F3               	addwf	prodl,w,c
  8994  0010DA  6ED9               	movwf	fsr2l,c
  8995  0010DC  0E02               	movlw	high (_RxBuffer+6)
  8996  0010DE  20F4               	addwfc	prodh,w,c
  8997  0010E0  6EDA               	movwf	fsr2h,c
  8998  0010E2  28DE               	incf	postinc2,w,c
  8999  0010E4  E10B               	bnz	l99
  9000                           
  9001                           ; BSR set to: 2
  9002  0010E6  5042               	movf	_BankIndex,w,c
  9003  0010E8  0D45               	mullw	69
  9004  0010EA  0E2F               	movlw	low (_RxBuffer+7)
  9005  0010EC  24F3               	addwf	prodl,w,c
  9006  0010EE  6ED9               	movwf	fsr2l,c
  9007  0010F0  0E02               	movlw	high (_RxBuffer+7)
  9008  0010F2  20F4               	addwfc	prodh,w,c
  9009  0010F4  6EDA               	movwf	fsr2h,c
  9010  0010F6  28DE               	incf	postinc2,w,c
  9011  0010F8  E101               	bnz	l99
  9012                           
  9013                           ; BSR set to: 2
  9014                           ;drv_mrf_miwi_24j40.c: 423: {
  9015                           ;drv_mrf_miwi_24j40.c: 424: MACRxPacket.flags.bits.broadcast = 1;
  9016  0010FA  8425               	bsf	_MACRxPacket,2,c
  9017  0010FC                     l99:
  9018                           
  9019                           ; BSR set to: 2
  9020                           ;drv_mrf_miwi_24j40.c: 425: }
  9021                           ;drv_mrf_miwi_24j40.c: 426: MACRxPacket.flags.bits.sourcePrsnt = 1;
  9022  0010FC  8E25               	bsf	_MACRxPacket,7,c
  9023                           
  9024                           ; BSR set to: 2
  9025                           ;drv_mrf_miwi_24j40.c: 429: if (bIntraPAN)
  9026  0010FE  5024               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  9027  001100  E02E               	bz	l12251
  9028                           
  9029                           ; BSR set to: 2
  9030                           ;drv_mrf_miwi_24j40.c: 431: {
  9031                           ;drv_mrf_miwi_24j40.c: 433: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  9032  001102  5042               	movf	_BankIndex,w,c
  9033  001104  0D45               	mullw	69
  9034  001106  0E2C               	movlw	low (_RxBuffer+4)
  9035  001108  24F3               	addwf	prodl,w,c
  9036  00110A  6ED9               	movwf	fsr2l,c
  9037  00110C  0E02               	movlw	high (_RxBuffer+4)
  9038  00110E  20F4               	addwfc	prodh,w,c
  9039  001110  6EDA               	movwf	fsr2h,c
  9040  001112  50DF               	movf	indf2,w,c
  9041  001114  6E2E               	movwf	_MACRxPacket+9,c
  9042                           
  9043                           ;drv_mrf_miwi_24j40.c: 434: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  9044  001116  5042               	movf	_BankIndex,w,c
  9045  001118  0D45               	mullw	69
  9046  00111A  0E2D               	movlw	low (_RxBuffer+5)
  9047  00111C  24F3               	addwf	prodl,w,c
  9048  00111E  6ED9               	movwf	fsr2l,c
  9049  001120  0E02               	movlw	high (_RxBuffer+5)
  9050  001122  20F4               	addwfc	prodh,w,c
  9051  001124  6EDA               	movwf	fsr2h,c
  9052  001126  50DF               	movf	indf2,w,c
  9053  001128  6E2F               	movwf	_MACRxPacket+10,c
  9054                           
  9055                           ; BSR set to: 2
  9056                           ;drv_mrf_miwi_24j40.c: 436: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
  9057  00112A  5042               	movf	_BankIndex,w,c
  9058  00112C  0D45               	mullw	69
  9059  00112E  0E30               	movlw	low (_RxBuffer+8)
  9060  001130  24F3               	addwf	prodl,w,c
  9061  001132  6E26               	movwf	_MACRxPacket+1,c
  9062  001134  0E02               	movlw	high (_RxBuffer+8)
  9063  001136  20F4               	addwfc	prodh,w,c
  9064  001138  6E27               	movwf	_MACRxPacket+2,c
  9065                           
  9066                           ; BSR set to: 2
  9067                           ;drv_mrf_miwi_24j40.c: 438: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 19
      +                          ;
  9068  00113A  5042               	movf	_BankIndex,w,c
  9069  00113C  0D45               	mullw	69
  9070  00113E  0E28               	movlw	low _RxBuffer
  9071  001140  24F3               	addwf	prodl,w,c
  9072  001142  6ED9               	movwf	fsr2l,c
  9073  001144  0E02               	movlw	high _RxBuffer
  9074  001146  20F4               	addwfc	prodh,w,c
  9075  001148  6EDA               	movwf	fsr2h,c
  9076  00114A  50DF               	movf	indf2,w,c
  9077  00114C  0FED               	addlw	237
  9078  00114E  6E2A               	movwf	_MACRxPacket+5,c
  9079                           
  9080                           ;drv_mrf_miwi_24j40.c: 439: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[15]);
  9081  001150  5042               	movf	_BankIndex,w,c
  9082  001152  0D45               	mullw	69
  9083  001154  0E38               	movlw	low (_RxBuffer+16)
  9084  001156  24F3               	addwf	prodl,w,c
  9085  001158  6E28               	movwf	_MACRxPacket+3,c
  9086  00115A  0E02               	movlw	high (_RxBuffer+16)
  9087  00115C  D134               	goto	L7
  9088  00115E                     l12251:
  9089                           
  9090                           ; BSR set to: 2
  9091                           ;drv_mrf_miwi_24j40.c: 442: else
  9092                           ;drv_mrf_miwi_24j40.c: 443: {
  9093                           ;drv_mrf_miwi_24j40.c: 444: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
  9094  00115E  5042               	movf	_BankIndex,w,c
  9095  001160  0D45               	mullw	69
  9096  001162  0E30               	movlw	low (_RxBuffer+8)
  9097  001164  24F3               	addwf	prodl,w,c
  9098  001166  6ED9               	movwf	fsr2l,c
  9099  001168  0E02               	movlw	high (_RxBuffer+8)
  9100  00116A  20F4               	addwfc	prodh,w,c
  9101  00116C  6EDA               	movwf	fsr2h,c
  9102  00116E  50DF               	movf	indf2,w,c
  9103  001170  6E2E               	movwf	_MACRxPacket+9,c
  9104                           
  9105                           ;drv_mrf_miwi_24j40.c: 445: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
  9106  001172  5042               	movf	_BankIndex,w,c
  9107  001174  0D45               	mullw	69
  9108  001176  0E31               	movlw	low (_RxBuffer+9)
  9109  001178  24F3               	addwf	prodl,w,c
  9110  00117A  6ED9               	movwf	fsr2l,c
  9111  00117C  0E02               	movlw	high (_RxBuffer+9)
  9112  00117E  20F4               	addwfc	prodh,w,c
  9113  001180  6EDA               	movwf	fsr2h,c
  9114  001182  50DF               	movf	indf2,w,c
  9115  001184  6E2F               	movwf	_MACRxPacket+10,c
  9116                           
  9117                           ; BSR set to: 2
  9118                           ;drv_mrf_miwi_24j40.c: 446: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
  9119  001186  5042               	movf	_BankIndex,w,c
  9120  001188  0D45               	mullw	69
  9121  00118A  0E32               	movlw	low (_RxBuffer+10)
  9122  00118C  24F3               	addwf	prodl,w,c
  9123  00118E  6E26               	movwf	_MACRxPacket+1,c
  9124  001190  0E02               	movlw	high (_RxBuffer+10)
  9125  001192  20F4               	addwfc	prodh,w,c
  9126  001194  6E27               	movwf	_MACRxPacket+2,c
  9127                           
  9128                           ; BSR set to: 2
  9129                           ;drv_mrf_miwi_24j40.c: 447: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 21
      +                          ;
  9130  001196  5042               	movf	_BankIndex,w,c
  9131  001198  0D45               	mullw	69
  9132  00119A  0E28               	movlw	low _RxBuffer
  9133  00119C  24F3               	addwf	prodl,w,c
  9134  00119E  6ED9               	movwf	fsr2l,c
  9135  0011A0  0E02               	movlw	high _RxBuffer
  9136  0011A2  20F4               	addwfc	prodh,w,c
  9137  0011A4  6EDA               	movwf	fsr2h,c
  9138  0011A6  50DF               	movf	indf2,w,c
  9139  0011A8  0FEB               	addlw	235
  9140  0011AA  6E2A               	movwf	_MACRxPacket+5,c
  9141                           
  9142                           ;drv_mrf_miwi_24j40.c: 448: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[17]);
  9143  0011AC  5042               	movf	_BankIndex,w,c
  9144  0011AE  0D45               	mullw	69
  9145  0011B0  0E3A               	movlw	low (_RxBuffer+18)
  9146  0011B2  24F3               	addwf	prodl,w,c
  9147  0011B4  6E28               	movwf	_MACRxPacket+3,c
  9148  0011B6  0E02               	movlw	high (_RxBuffer+18)
  9149  0011B8  D106               	goto	L7
  9150  0011BA                     l103:
  9151                           
  9152                           ; BSR set to: 2
  9153                           ;drv_mrf_miwi_24j40.c: 455: MACRxPacket.flags.bits.sourcePrsnt = 1;
  9154  0011BA  8E25               	bsf	_MACRxPacket,7,c
  9155                           
  9156                           ; BSR set to: 2
  9157                           ;drv_mrf_miwi_24j40.c: 457: if (bIntraPAN)
  9158  0011BC  5024               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  9159  0011BE  E02E               	bz	l12265
  9160                           
  9161                           ; BSR set to: 2
  9162                           ;drv_mrf_miwi_24j40.c: 459: {
  9163                           ;drv_mrf_miwi_24j40.c: 462: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  9164  0011C0  5042               	movf	_BankIndex,w,c
  9165  0011C2  0D45               	mullw	69
  9166  0011C4  0E2C               	movlw	low (_RxBuffer+4)
  9167  0011C6  24F3               	addwf	prodl,w,c
  9168  0011C8  6ED9               	movwf	fsr2l,c
  9169  0011CA  0E02               	movlw	high (_RxBuffer+4)
  9170  0011CC  20F4               	addwfc	prodh,w,c
  9171  0011CE  6EDA               	movwf	fsr2h,c
  9172  0011D0  50DF               	movf	indf2,w,c
  9173  0011D2  6E2E               	movwf	_MACRxPacket+9,c
  9174                           
  9175                           ;drv_mrf_miwi_24j40.c: 463: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  9176  0011D4  5042               	movf	_BankIndex,w,c
  9177  0011D6  0D45               	mullw	69
  9178  0011D8  0E2D               	movlw	low (_RxBuffer+5)
  9179  0011DA  24F3               	addwf	prodl,w,c
  9180  0011DC  6ED9               	movwf	fsr2l,c
  9181  0011DE  0E02               	movlw	high (_RxBuffer+5)
  9182  0011E0  20F4               	addwfc	prodh,w,c
  9183  0011E2  6EDA               	movwf	fsr2h,c
  9184  0011E4  50DF               	movf	indf2,w,c
  9185  0011E6  6E2F               	movwf	_MACRxPacket+10,c
  9186                           
  9187                           ; BSR set to: 2
  9188                           ;drv_mrf_miwi_24j40.c: 465: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[13
      +                          ]);
  9189  0011E8  5042               	movf	_BankIndex,w,c
  9190  0011EA  0D45               	mullw	69
  9191  0011EC  0E36               	movlw	low (_RxBuffer+14)
  9192  0011EE  24F3               	addwf	prodl,w,c
  9193  0011F0  6E26               	movwf	_MACRxPacket+1,c
  9194  0011F2  0E02               	movlw	high (_RxBuffer+14)
  9195  0011F4  20F4               	addwfc	prodh,w,c
  9196  0011F6  6E27               	movwf	_MACRxPacket+2,c
  9197                           
  9198                           ; BSR set to: 2
  9199                           ;drv_mrf_miwi_24j40.c: 466: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 25
      +                          ;
  9200  0011F8  5042               	movf	_BankIndex,w,c
  9201  0011FA  0D45               	mullw	69
  9202  0011FC  0E28               	movlw	low _RxBuffer
  9203  0011FE  24F3               	addwf	prodl,w,c
  9204  001200  6ED9               	movwf	fsr2l,c
  9205  001202  0E02               	movlw	high _RxBuffer
  9206  001204  20F4               	addwfc	prodh,w,c
  9207  001206  6EDA               	movwf	fsr2h,c
  9208  001208  50DF               	movf	indf2,w,c
  9209  00120A  0FE7               	addlw	231
  9210  00120C  6E2A               	movwf	_MACRxPacket+5,c
  9211                           
  9212                           ;drv_mrf_miwi_24j40.c: 467: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[21]);
  9213  00120E  5042               	movf	_BankIndex,w,c
  9214  001210  0D45               	mullw	69
  9215  001212  0E3E               	movlw	low (_RxBuffer+22)
  9216  001214  24F3               	addwf	prodl,w,c
  9217  001216  6E28               	movwf	_MACRxPacket+3,c
  9218  001218  0E02               	movlw	high (_RxBuffer+22)
  9219  00121A  D0D5               	goto	L7
  9220  00121C                     l12265:
  9221                           
  9222                           ; BSR set to: 2
  9223                           ;drv_mrf_miwi_24j40.c: 470: else
  9224                           ;drv_mrf_miwi_24j40.c: 471: {
  9225                           ;drv_mrf_miwi_24j40.c: 472: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          3];
  9226  00121C  5042               	movf	_BankIndex,w,c
  9227  00121E  0D45               	mullw	69
  9228  001220  0E36               	movlw	low (_RxBuffer+14)
  9229  001222  24F3               	addwf	prodl,w,c
  9230  001224  6ED9               	movwf	fsr2l,c
  9231  001226  0E02               	movlw	high (_RxBuffer+14)
  9232  001228  20F4               	addwfc	prodh,w,c
  9233  00122A  6EDA               	movwf	fsr2h,c
  9234  00122C  50DF               	movf	indf2,w,c
  9235  00122E  6E2E               	movwf	_MACRxPacket+9,c
  9236                           
  9237                           ;drv_mrf_miwi_24j40.c: 473: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          4];
  9238  001230  5042               	movf	_BankIndex,w,c
  9239  001232  0D45               	mullw	69
  9240  001234  0E37               	movlw	low (_RxBuffer+15)
  9241  001236  24F3               	addwf	prodl,w,c
  9242  001238  6ED9               	movwf	fsr2l,c
  9243  00123A  0E02               	movlw	high (_RxBuffer+15)
  9244  00123C  20F4               	addwfc	prodh,w,c
  9245  00123E  6EDA               	movwf	fsr2h,c
  9246  001240  50DF               	movf	indf2,w,c
  9247  001242  6E2F               	movwf	_MACRxPacket+10,c
  9248                           
  9249                           ; BSR set to: 2
  9250                           ;drv_mrf_miwi_24j40.c: 474: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[15
      +                          ]);
  9251  001244  5042               	movf	_BankIndex,w,c
  9252  001246  0D45               	mullw	69
  9253  001248  0E38               	movlw	low (_RxBuffer+16)
  9254  00124A  24F3               	addwf	prodl,w,c
  9255  00124C  6E26               	movwf	_MACRxPacket+1,c
  9256  00124E  0E02               	movlw	high (_RxBuffer+16)
  9257  001250  20F4               	addwfc	prodh,w,c
  9258  001252  6E27               	movwf	_MACRxPacket+2,c
  9259                           
  9260                           ; BSR set to: 2
  9261                           ;drv_mrf_miwi_24j40.c: 475: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 27
      +                          ;
  9262  001254  5042               	movf	_BankIndex,w,c
  9263  001256  0D45               	mullw	69
  9264  001258  0E28               	movlw	low _RxBuffer
  9265  00125A  24F3               	addwf	prodl,w,c
  9266  00125C  6ED9               	movwf	fsr2l,c
  9267  00125E  0E02               	movlw	high _RxBuffer
  9268  001260  20F4               	addwfc	prodh,w,c
  9269  001262  6EDA               	movwf	fsr2h,c
  9270  001264  50DF               	movf	indf2,w,c
  9271  001266  0FE5               	addlw	229
  9272  001268  6E2A               	movwf	_MACRxPacket+5,c
  9273                           
  9274                           ;drv_mrf_miwi_24j40.c: 476: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[23]);
  9275  00126A  5042               	movf	_BankIndex,w,c
  9276  00126C  0D45               	mullw	69
  9277  00126E  0E40               	movlw	low (_RxBuffer+24)
  9278  001270  24F3               	addwf	prodl,w,c
  9279  001272  6E28               	movwf	_MACRxPacket+3,c
  9280  001274  0E02               	movlw	high (_RxBuffer+24)
  9281  001276  D0A7               	goto	L7
  9282  001278                     l106:
  9283                           
  9284                           ; BSR set to: 2
  9285                           ;drv_mrf_miwi_24j40.c: 482: {
  9286                           ;drv_mrf_miwi_24j40.c: 483: MACRxPacket.flags.bits.broadcast = 1;
  9287  001278  8425               	bsf	_MACRxPacket,2,c
  9288                           
  9289                           ;drv_mrf_miwi_24j40.c: 484: MACRxPacket.flags.bits.sourcePrsnt = 1;
  9290  00127A  8E25               	bsf	_MACRxPacket,7,c
  9291                           
  9292                           ; BSR set to: 2
  9293                           ;drv_mrf_miwi_24j40.c: 485: MACRxPacket.altSourceAddress = 1;
  9294  00127C  0E01               	movlw	1
  9295  00127E  6E2D               	movwf	_MACRxPacket+8,c
  9296                           
  9297                           ; BSR set to: 2
  9298                           ;drv_mrf_miwi_24j40.c: 486: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  9299  001280  5042               	movf	_BankIndex,w,c
  9300  001282  0D45               	mullw	69
  9301  001284  0E2C               	movlw	low (_RxBuffer+4)
  9302  001286  24F3               	addwf	prodl,w,c
  9303  001288  6ED9               	movwf	fsr2l,c
  9304  00128A  0E02               	movlw	high (_RxBuffer+4)
  9305  00128C  20F4               	addwfc	prodh,w,c
  9306  00128E  6EDA               	movwf	fsr2h,c
  9307  001290  50DF               	movf	indf2,w,c
  9308  001292  6E2E               	movwf	_MACRxPacket+9,c
  9309                           
  9310                           ; BSR set to: 2
  9311                           ;drv_mrf_miwi_24j40.c: 487: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  9312  001294  5042               	movf	_BankIndex,w,c
  9313  001296  0D45               	mullw	69
  9314  001298  0E2D               	movlw	low (_RxBuffer+5)
  9315  00129A  24F3               	addwf	prodl,w,c
  9316  00129C  6ED9               	movwf	fsr2l,c
  9317  00129E  0E02               	movlw	high (_RxBuffer+5)
  9318  0012A0  20F4               	addwfc	prodh,w,c
  9319  0012A2  6EDA               	movwf	fsr2h,c
  9320  0012A4  50DF               	movf	indf2,w,c
  9321  0012A6  6E2F               	movwf	_MACRxPacket+10,c
  9322                           
  9323                           ; BSR set to: 2
  9324                           ;drv_mrf_miwi_24j40.c: 488: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[5]
      +                          );
  9325  0012A8  5042               	movf	_BankIndex,w,c
  9326  0012AA  0D45               	mullw	69
  9327  0012AC  0E2E               	movlw	low (_RxBuffer+6)
  9328  0012AE  24F3               	addwf	prodl,w,c
  9329  0012B0  6E26               	movwf	_MACRxPacket+1,c
  9330  0012B2  0E02               	movlw	high (_RxBuffer+6)
  9331  0012B4  20F4               	addwfc	prodh,w,c
  9332  0012B6  6E27               	movwf	_MACRxPacket+2,c
  9333                           
  9334                           ; BSR set to: 2
  9335                           ;drv_mrf_miwi_24j40.c: 489: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 11
      +                          ;
  9336  0012B8  5042               	movf	_BankIndex,w,c
  9337  0012BA  0D45               	mullw	69
  9338  0012BC  0E28               	movlw	low _RxBuffer
  9339  0012BE  24F3               	addwf	prodl,w,c
  9340  0012C0  6ED9               	movwf	fsr2l,c
  9341  0012C2  0E02               	movlw	high _RxBuffer
  9342  0012C4  20F4               	addwfc	prodh,w,c
  9343  0012C6  6EDA               	movwf	fsr2h,c
  9344  0012C8  50DF               	movf	indf2,w,c
  9345  0012CA  0FF5               	addlw	245
  9346  0012CC  6E2A               	movwf	_MACRxPacket+5,c
  9347                           
  9348                           ; BSR set to: 2
  9349                           ;drv_mrf_miwi_24j40.c: 490: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[7]);
  9350  0012CE  5042               	movf	_BankIndex,w,c
  9351  0012D0  0D45               	mullw	69
  9352  0012D2  0E30               	movlw	low (_RxBuffer+8)
  9353  0012D4  24F3               	addwf	prodl,w,c
  9354  0012D6  6E28               	movwf	_MACRxPacket+3,c
  9355  0012D8  0E02               	movlw	high (_RxBuffer+8)
  9356  0012DA  D075               	goto	L7
  9357  0012DC                     l12283:
  9358                           
  9359                           ; BSR set to: 2
  9360                           ;drv_mrf_miwi_24j40.c: 495: {
  9361                           ;drv_mrf_miwi_24j40.c: 496: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  9362  0012DC  5042               	movf	_BankIndex,w,c
  9363  0012DE  0D45               	mullw	69
  9364  0012E0  0E2E               	movlw	low (_RxBuffer+6)
  9365  0012E2  24F3               	addwf	prodl,w,c
  9366  0012E4  6ED9               	movwf	fsr2l,c
  9367  0012E6  0E02               	movlw	high (_RxBuffer+6)
  9368  0012E8  20F4               	addwfc	prodh,w,c
  9369  0012EA  6EDA               	movwf	fsr2h,c
  9370  0012EC  28DE               	incf	postinc2,w,c
  9371  0012EE  E10B               	bnz	l108
  9372                           
  9373                           ; BSR set to: 2
  9374  0012F0  5042               	movf	_BankIndex,w,c
  9375  0012F2  0D45               	mullw	69
  9376  0012F4  0E2F               	movlw	low (_RxBuffer+7)
  9377  0012F6  24F3               	addwf	prodl,w,c
  9378  0012F8  6ED9               	movwf	fsr2l,c
  9379  0012FA  0E02               	movlw	high (_RxBuffer+7)
  9380  0012FC  20F4               	addwfc	prodh,w,c
  9381  0012FE  6EDA               	movwf	fsr2h,c
  9382  001300  28DE               	incf	postinc2,w,c
  9383  001302  E101               	bnz	l108
  9384                           
  9385                           ; BSR set to: 2
  9386                           ;drv_mrf_miwi_24j40.c: 497: {
  9387                           ;drv_mrf_miwi_24j40.c: 498: MACRxPacket.flags.bits.broadcast = 1;
  9388  001304  8425               	bsf	_MACRxPacket,2,c
  9389  001306                     l108:
  9390                           
  9391                           ; BSR set to: 2
  9392                           ;drv_mrf_miwi_24j40.c: 499: }
  9393                           ;drv_mrf_miwi_24j40.c: 500: MACRxPacket.flags.bits.sourcePrsnt = 1;
  9394  001306  8E25               	bsf	_MACRxPacket,7,c
  9395                           
  9396                           ; BSR set to: 2
  9397                           ;drv_mrf_miwi_24j40.c: 501: MACRxPacket.altSourceAddress = 1;
  9398  001308  0E01               	movlw	1
  9399  00130A  6E2D               	movwf	_MACRxPacket+8,c
  9400                           
  9401                           ;drv_mrf_miwi_24j40.c: 503: if (bIntraPAN == 0)
  9402  00130C  5024               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  9403  00130E  E12E               	bnz	l12297
  9404                           
  9405                           ; BSR set to: 2
  9406                           ;drv_mrf_miwi_24j40.c: 504: {
  9407                           ;drv_mrf_miwi_24j40.c: 505: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
  9408  001310  5042               	movf	_BankIndex,w,c
  9409  001312  0D45               	mullw	69
  9410  001314  0E30               	movlw	low (_RxBuffer+8)
  9411  001316  24F3               	addwf	prodl,w,c
  9412  001318  6ED9               	movwf	fsr2l,c
  9413  00131A  0E02               	movlw	high (_RxBuffer+8)
  9414  00131C  20F4               	addwfc	prodh,w,c
  9415  00131E  6EDA               	movwf	fsr2h,c
  9416  001320  50DF               	movf	indf2,w,c
  9417  001322  6E2E               	movwf	_MACRxPacket+9,c
  9418                           
  9419                           ;drv_mrf_miwi_24j40.c: 506: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
  9420  001324  5042               	movf	_BankIndex,w,c
  9421  001326  0D45               	mullw	69
  9422  001328  0E31               	movlw	low (_RxBuffer+9)
  9423  00132A  24F3               	addwf	prodl,w,c
  9424  00132C  6ED9               	movwf	fsr2l,c
  9425  00132E  0E02               	movlw	high (_RxBuffer+9)
  9426  001330  20F4               	addwfc	prodh,w,c
  9427  001332  6EDA               	movwf	fsr2h,c
  9428  001334  50DF               	movf	indf2,w,c
  9429  001336  6E2F               	movwf	_MACRxPacket+10,c
  9430                           
  9431                           ; BSR set to: 2
  9432                           ;drv_mrf_miwi_24j40.c: 507: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
  9433  001338  5042               	movf	_BankIndex,w,c
  9434  00133A  0D45               	mullw	69
  9435  00133C  0E32               	movlw	low (_RxBuffer+10)
  9436  00133E  24F3               	addwf	prodl,w,c
  9437  001340  6E26               	movwf	_MACRxPacket+1,c
  9438  001342  0E02               	movlw	high (_RxBuffer+10)
  9439  001344  20F4               	addwfc	prodh,w,c
  9440  001346  6E27               	movwf	_MACRxPacket+2,c
  9441                           
  9442                           ; BSR set to: 2
  9443                           ;drv_mrf_miwi_24j40.c: 508: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 15
      +                          ;
  9444  001348  5042               	movf	_BankIndex,w,c
  9445  00134A  0D45               	mullw	69
  9446  00134C  0E28               	movlw	low _RxBuffer
  9447  00134E  24F3               	addwf	prodl,w,c
  9448  001350  6ED9               	movwf	fsr2l,c
  9449  001352  0E02               	movlw	high _RxBuffer
  9450  001354  20F4               	addwfc	prodh,w,c
  9451  001356  6EDA               	movwf	fsr2h,c
  9452  001358  50DF               	movf	indf2,w,c
  9453  00135A  0FF1               	addlw	241
  9454  00135C  6E2A               	movwf	_MACRxPacket+5,c
  9455                           
  9456                           ;drv_mrf_miwi_24j40.c: 509: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[11]);
  9457  00135E  5042               	movf	_BankIndex,w,c
  9458  001360  0D45               	mullw	69
  9459  001362  0E34               	movlw	low (_RxBuffer+12)
  9460  001364  24F3               	addwf	prodl,w,c
  9461  001366  6E28               	movwf	_MACRxPacket+3,c
  9462  001368  0E02               	movlw	high (_RxBuffer+12)
  9463  00136A  D02D               	goto	L7
  9464  00136C                     l12297:
  9465                           
  9466                           ; BSR set to: 2
  9467                           ;drv_mrf_miwi_24j40.c: 512: {
  9468                           ;drv_mrf_miwi_24j40.c: 513: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  9469  00136C  5042               	movf	_BankIndex,w,c
  9470  00136E  0D45               	mullw	69
  9471  001370  0E2C               	movlw	low (_RxBuffer+4)
  9472  001372  24F3               	addwf	prodl,w,c
  9473  001374  6ED9               	movwf	fsr2l,c
  9474  001376  0E02               	movlw	high (_RxBuffer+4)
  9475  001378  20F4               	addwfc	prodh,w,c
  9476  00137A  6EDA               	movwf	fsr2h,c
  9477  00137C  50DF               	movf	indf2,w,c
  9478  00137E  6E2E               	movwf	_MACRxPacket+9,c
  9479                           
  9480                           ;drv_mrf_miwi_24j40.c: 514: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  9481  001380  5042               	movf	_BankIndex,w,c
  9482  001382  0D45               	mullw	69
  9483  001384  0E2D               	movlw	low (_RxBuffer+5)
  9484  001386  24F3               	addwf	prodl,w,c
  9485  001388  6ED9               	movwf	fsr2l,c
  9486  00138A  0E02               	movlw	high (_RxBuffer+5)
  9487  00138C  20F4               	addwfc	prodh,w,c
  9488  00138E  6EDA               	movwf	fsr2h,c
  9489  001390  50DF               	movf	indf2,w,c
  9490  001392  6E2F               	movwf	_MACRxPacket+10,c
  9491                           
  9492                           ; BSR set to: 2
  9493                           ;drv_mrf_miwi_24j40.c: 515: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
  9494  001394  5042               	movf	_BankIndex,w,c
  9495  001396  0D45               	mullw	69
  9496  001398  0E30               	movlw	low (_RxBuffer+8)
  9497  00139A  24F3               	addwf	prodl,w,c
  9498  00139C  6E26               	movwf	_MACRxPacket+1,c
  9499  00139E  0E02               	movlw	high (_RxBuffer+8)
  9500  0013A0  20F4               	addwfc	prodh,w,c
  9501  0013A2  6E27               	movwf	_MACRxPacket+2,c
  9502                           
  9503                           ; BSR set to: 2
  9504                           ;drv_mrf_miwi_24j40.c: 516: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 13
      +                          ;
  9505  0013A4  5042               	movf	_BankIndex,w,c
  9506  0013A6  0D45               	mullw	69
  9507  0013A8  0E28               	movlw	low _RxBuffer
  9508  0013AA  24F3               	addwf	prodl,w,c
  9509  0013AC  6ED9               	movwf	fsr2l,c
  9510  0013AE  0E02               	movlw	high _RxBuffer
  9511  0013B0  20F4               	addwfc	prodh,w,c
  9512  0013B2  6EDA               	movwf	fsr2h,c
  9513  0013B4  50DF               	movf	indf2,w,c
  9514  0013B6  0FF3               	addlw	243
  9515  0013B8  6E2A               	movwf	_MACRxPacket+5,c
  9516                           
  9517                           ;drv_mrf_miwi_24j40.c: 517: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[9]);
  9518  0013BA  5042               	movf	_BankIndex,w,c
  9519  0013BC  0D45               	mullw	69
  9520  0013BE  0E32               	movlw	low (_RxBuffer+10)
  9521  0013C0  24F3               	addwf	prodl,w,c
  9522  0013C2  6E28               	movwf	_MACRxPacket+3,c
  9523  0013C4  0E02               	movlw	high (_RxBuffer+10)
  9524  0013C6                     L7:
  9525  0013C6  20F4               	addwfc	prodh,w,c
  9526  0013C8  6E29               	movwf	_MACRxPacket+4,c
  9527  0013CA  D070               	goto	l12337
  9528  0013CC                     l111:
  9529                           
  9530                           ; BSR set to: 2
  9531                           ;drv_mrf_miwi_24j40.c: 523: {
  9532                           ;drv_mrf_miwi_24j40.c: 524: MACRxPacket.flags.bits.sourcePrsnt = 1;
  9533  0013CC  8E25               	bsf	_MACRxPacket,7,c
  9534                           
  9535                           ; BSR set to: 2
  9536                           ;drv_mrf_miwi_24j40.c: 525: MACRxPacket.altSourceAddress = 1;
  9537  0013CE  0E01               	movlw	1
  9538  0013D0  6E2D               	movwf	_MACRxPacket+8,c
  9539                           
  9540                           ;drv_mrf_miwi_24j40.c: 527: if (bIntraPAN)
  9541  0013D2  5024               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  9542  0013D4  E01B               	bz	l12311
  9543                           
  9544                           ; BSR set to: 2
  9545                           ;drv_mrf_miwi_24j40.c: 529: {
  9546                           ;drv_mrf_miwi_24j40.c: 531: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  9547  0013D6  5042               	movf	_BankIndex,w,c
  9548  0013D8  0D45               	mullw	69
  9549  0013DA  0E2C               	movlw	low (_RxBuffer+4)
  9550  0013DC  24F3               	addwf	prodl,w,c
  9551  0013DE  6ED9               	movwf	fsr2l,c
  9552  0013E0  0E02               	movlw	high (_RxBuffer+4)
  9553  0013E2  20F4               	addwfc	prodh,w,c
  9554  0013E4  6EDA               	movwf	fsr2h,c
  9555  0013E6  50DF               	movf	indf2,w,c
  9556  0013E8  6E2E               	movwf	_MACRxPacket+9,c
  9557                           
  9558                           ;drv_mrf_miwi_24j40.c: 532: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  9559  0013EA  5042               	movf	_BankIndex,w,c
  9560  0013EC  0D45               	mullw	69
  9561  0013EE  0E2D               	movlw	low (_RxBuffer+5)
  9562  0013F0  24F3               	addwf	prodl,w,c
  9563  0013F2  6ED9               	movwf	fsr2l,c
  9564  0013F4  0E02               	movlw	high (_RxBuffer+5)
  9565  0013F6  20F4               	addwfc	prodh,w,c
  9566  0013F8  6EDA               	movwf	fsr2h,c
  9567  0013FA  50DF               	movf	indf2,w,c
  9568  0013FC  6E2F               	movwf	_MACRxPacket+10,c
  9569                           
  9570                           ; BSR set to: 2
  9571                           ;drv_mrf_miwi_24j40.c: 534: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[12
      +                          ]);
  9572  0013FE  5042               	movf	_BankIndex,w,c
  9573  001400  0D45               	mullw	69
  9574  001402  0E35               	movlw	low (_RxBuffer+13)
  9575  001404  24F3               	addwf	prodl,w,c
  9576  001406  6E26               	movwf	_MACRxPacket+1,c
  9577  001408  0E02               	movlw	high (_RxBuffer+13)
  9578  00140A  D695               	goto	L8
  9579  00140C                     l12311:
  9580                           
  9581                           ; BSR set to: 2
  9582                           ;drv_mrf_miwi_24j40.c: 540: else
  9583                           ;drv_mrf_miwi_24j40.c: 541: {
  9584                           ;drv_mrf_miwi_24j40.c: 542: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          2];
  9585  00140C  5042               	movf	_BankIndex,w,c
  9586  00140E  0D45               	mullw	69
  9587  001410  0E35               	movlw	low (_RxBuffer+13)
  9588  001412  24F3               	addwf	prodl,w,c
  9589  001414  6ED9               	movwf	fsr2l,c
  9590  001416  0E02               	movlw	high (_RxBuffer+13)
  9591  001418  20F4               	addwfc	prodh,w,c
  9592  00141A  6EDA               	movwf	fsr2h,c
  9593  00141C  50DF               	movf	indf2,w,c
  9594  00141E  6E2E               	movwf	_MACRxPacket+9,c
  9595                           
  9596                           ;drv_mrf_miwi_24j40.c: 543: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          3];
  9597  001420  5042               	movf	_BankIndex,w,c
  9598  001422  0D45               	mullw	69
  9599  001424  0E36               	movlw	low (_RxBuffer+14)
  9600  001426  24F3               	addwf	prodl,w,c
  9601  001428  6ED9               	movwf	fsr2l,c
  9602  00142A  0E02               	movlw	high (_RxBuffer+14)
  9603  00142C  20F4               	addwfc	prodh,w,c
  9604  00142E  6EDA               	movwf	fsr2h,c
  9605  001430  50DF               	movf	indf2,w,c
  9606  001432  6E2F               	movwf	_MACRxPacket+10,c
  9607                           
  9608                           ; BSR set to: 2
  9609                           ;drv_mrf_miwi_24j40.c: 544: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[14
      +                          ]);
  9610  001434  5042               	movf	_BankIndex,w,c
  9611  001436  0D45               	mullw	69
  9612  001438  0E37               	movlw	low (_RxBuffer+15)
  9613  00143A  24F3               	addwf	prodl,w,c
  9614  00143C  6E26               	movwf	_MACRxPacket+1,c
  9615  00143E  0E02               	movlw	high (_RxBuffer+15)
  9616  001440  D6A8               	goto	L9
  9617  001442                     l12317:
  9618                           
  9619                           ; BSR set to: 2
  9620                           ;drv_mrf_miwi_24j40.c: 554: {
  9621                           ;drv_mrf_miwi_24j40.c: 555: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  9622  001442  5042               	movf	_BankIndex,w,c
  9623  001444  0D45               	mullw	69
  9624  001446  0E2E               	movlw	low (_RxBuffer+6)
  9625  001448  24F3               	addwf	prodl,w,c
  9626  00144A  6ED9               	movwf	fsr2l,c
  9627  00144C  0E02               	movlw	high (_RxBuffer+6)
  9628  00144E  20F4               	addwfc	prodh,w,c
  9629  001450  6EDA               	movwf	fsr2h,c
  9630  001452  28DE               	incf	postinc2,w,c
  9631  001454  E10B               	bnz	l12323
  9632                           
  9633                           ; BSR set to: 2
  9634  001456  5042               	movf	_BankIndex,w,c
  9635  001458  0D45               	mullw	69
  9636  00145A  0E2F               	movlw	low (_RxBuffer+7)
  9637  00145C  24F3               	addwf	prodl,w,c
  9638  00145E  6ED9               	movwf	fsr2l,c
  9639  001460  0E02               	movlw	high (_RxBuffer+7)
  9640  001462  20F4               	addwfc	prodh,w,c
  9641  001464  6EDA               	movwf	fsr2h,c
  9642  001466  28DE               	incf	postinc2,w,c
  9643  001468  E101               	bnz	l12323
  9644                           
  9645                           ; BSR set to: 2
  9646                           ;drv_mrf_miwi_24j40.c: 556: {
  9647                           ;drv_mrf_miwi_24j40.c: 557: MACRxPacket.flags.bits.broadcast = 1;
  9648  00146A  8425               	bsf	_MACRxPacket,2,c
  9649  00146C                     l12323:
  9650                           
  9651                           ; BSR set to: 2
  9652                           ;drv_mrf_miwi_24j40.c: 558: }
  9653                           ;drv_mrf_miwi_24j40.c: 559: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 10
      +                          ;
  9654  00146C  5042               	movf	_BankIndex,w,c
  9655  00146E  0D45               	mullw	69
  9656  001470  0E28               	movlw	low _RxBuffer
  9657  001472  24F3               	addwf	prodl,w,c
  9658  001474  6ED9               	movwf	fsr2l,c
  9659  001476  0E02               	movlw	high _RxBuffer
  9660  001478  20F4               	addwfc	prodh,w,c
  9661  00147A  6EDA               	movwf	fsr2h,c
  9662  00147C  50DF               	movf	indf2,w,c
  9663  00147E  0FF6               	addlw	246
  9664  001480  D725               	goto	L10
  9665  001482                     l12327:
  9666                           
  9667                           ; BSR set to: 2
  9668                           ;drv_mrf_miwi_24j40.c: 567: MiMAC_DiscardPacket();
  9669  001482  ECC8  F01D         	call	_MiMAC_DiscardPacket	;wreg free
  9670                           
  9671                           ;drv_mrf_miwi_24j40.c: 568: return 0;
  9672  001486  0C00               	retlw	0
  9673  001488                     l12335:
  9674                           
  9675                           ; BSR set to: 2
  9676  001488  5022               	movf	MiMAC_ReceivedPacket@addrMode,w,c
  9677                           
  9678                           ; Switch size 1, requested type "speed"
  9679                           ; Number of cases is 6, Range of values is 8 to 204
  9680                           ; switch strategies available:
  9681                           ; Name         Instructions Cycles
  9682                           ; simple_byte           19    10 (average)
  9683                           ;	Chosen strategy is simple_byte
  9684  00148A  0A08               	xorlw	8	; case 8
  9685  00148C  E0DA               	bz	l12317
  9686  00148E  0A88               	xorlw	136	; case 128
  9687  001490  E101 D6F2          	bz	l106
  9688  001494  0A08               	xorlw	8	; case 136
  9689  001496  E101 D721          	bz	l12283
  9690  00149A  0A04               	xorlw	4	; case 140
  9691  00149C  E097               	bz	l111
  9692  00149E  0A44               	xorlw	68	; case 200
  9693  0014A0  E101 D617          	bz	l12237
  9694  0014A4  0A04               	xorlw	4	; case 204
  9695  0014A6  E101 D688          	bz	l103
  9696  0014AA  D7EB               	goto	l12327
  9697  0014AC                     l12337:
  9698                           
  9699                           ; BSR set to: 2
  9700                           ;drv_mrf_miwi_24j40.c: 622: if (RxBuffer[BankIndex].Payload[0] & 0x08)
  9701  0014AC  5042               	movf	_BankIndex,w,c
  9702  0014AE  0D45               	mullw	69
  9703  0014B0  0E29               	movlw	low (_RxBuffer+1)
  9704  0014B2  24F3               	addwf	prodl,w,c
  9705  0014B4  6ED9               	movwf	fsr2l,c
  9706  0014B6  0E02               	movlw	high (_RxBuffer+1)
  9707  0014B8  20F4               	addwfc	prodh,w,c
  9708  0014BA  6EDA               	movwf	fsr2h,c
  9709  0014BC  A6DF               	btfss	indf2,3,c
  9710  0014BE  D00C               	goto	l12359
  9711  0014C0  D7E0               	goto	l12327
  9712  0014C2                     l12345:
  9713                           
  9714                           ; BSR set to: 2
  9715                           ;drv_mrf_miwi_24j40.c: 635: MACRxPacket.flags.bits.packetType = 0x00;
  9716  0014C2  0EFC               	movlw	-4
  9717  0014C4  1625               	andwf	_MACRxPacket,f,c
  9718                           
  9719                           ;drv_mrf_miwi_24j40.c: 636: break;
  9720  0014C6  D01D               	goto	l12361
  9721  0014C8                     l12347:
  9722                           
  9723                           ; BSR set to: 2
  9724                           ;drv_mrf_miwi_24j40.c: 638: MACRxPacket.flags.bits.packetType = 0x01;
  9725  0014C8  5025               	movf	_MACRxPacket,w,c
  9726  0014CA  0BFC               	andlw	-4
  9727  0014CC  0901               	iorlw	1
  9728  0014CE  6E25               	movwf	_MACRxPacket,c
  9729                           
  9730                           ;drv_mrf_miwi_24j40.c: 639: break;
  9731  0014D0  D018               	goto	l12361
  9732  0014D2                     l12349:
  9733                           
  9734                           ; BSR set to: 2
  9735                           ;drv_mrf_miwi_24j40.c: 642: MACRxPacket.flags.bits.packetType = 0x03;
  9736  0014D2  0E03               	movlw	3
  9737  0014D4  1225               	iorwf	_MACRxPacket,f,c
  9738                           
  9739                           ;drv_mrf_miwi_24j40.c: 643: break;
  9740  0014D6  D015               	goto	l12361
  9741  0014D8                     l12359:
  9742                           
  9743                           ; BSR set to: 2
  9744  0014D8  5042               	movf	_BankIndex,w,c
  9745  0014DA  0D45               	mullw	69
  9746  0014DC  0E29               	movlw	low (_RxBuffer+1)
  9747  0014DE  24F3               	addwf	prodl,w,c
  9748  0014E0  6ED9               	movwf	fsr2l,c
  9749  0014E2  0E02               	movlw	high (_RxBuffer+1)
  9750  0014E4  20F4               	addwfc	prodh,w,c
  9751  0014E6  6EDA               	movwf	fsr2h,c
  9752  0014E8  50DF               	movf	indf2,w,c
  9753  0014EA  0B07               	andlw	7
  9754  0014EC  6E1D               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  9755  0014EE  6A1E               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  9756                           
  9757                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9758                           ; Switch size 1, requested type "speed"
  9759                           ; Number of cases is 1, Range of values is 0 to 0
  9760                           ; switch strategies available:
  9761                           ; Name         Instructions Cycles
  9762                           ; simple_byte            4     3 (average)
  9763                           ;	Chosen strategy is simple_byte
  9764  0014F0  501E               	movf	??_MiMAC_ReceivedPacket+1,w,c
  9765  0014F2  E1C7               	bnz	l12327
  9766                           
  9767                           ; BSR set to: 2
  9768                           ; Switch size 1, requested type "speed"
  9769                           ; Number of cases is 3, Range of values is 0 to 3
  9770                           ; switch strategies available:
  9771                           ; Name         Instructions Cycles
  9772                           ; simple_byte           10     6 (average)
  9773                           ;	Chosen strategy is simple_byte
  9774  0014F4  501D               	movf	??_MiMAC_ReceivedPacket,w,c
  9775  0014F6  E0ED               	bz	l12349
  9776  0014F8  0A01               	xorlw	1	; case 1
  9777  0014FA  E0E3               	bz	l12345
  9778  0014FC  0A02               	xorlw	2	; case 3
  9779  0014FE  E0E4               	bz	l12347
  9780  001500  D7C0               	goto	l12327
  9781  001502                     l12361:
  9782                           
  9783                           ; BSR set to: 2
  9784                           ;drv_mrf_miwi_24j40.c: 649: MACRxPacket.LQIValue = RxBuffer[BankIndex].Payload[RxBuffer[
      +                          BankIndex].PayloadLen - 2];
  9785  001502  5042               	movf	_BankIndex,w,c
  9786  001504  0D45               	mullw	69
  9787  001506  0E28               	movlw	low _RxBuffer
  9788  001508  24F3               	addwf	prodl,w,c
  9789  00150A  6ED9               	movwf	fsr2l,c
  9790  00150C  0E02               	movlw	high _RxBuffer
  9791  00150E  20F4               	addwfc	prodh,w,c
  9792  001510  6EDA               	movwf	fsr2h,c
  9793  001512  50DF               	movf	indf2,w,c
  9794  001514  6E1D               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  9795  001516  5042               	movf	_BankIndex,w,c
  9796  001518  0D45               	mullw	69
  9797  00151A  681E               	setf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  9798  00151C  681F               	setf	(??_MiMAC_ReceivedPacket+2)& (0+255),c
  9799  00151E  0E28               	movlw	low _RxBuffer
  9800  001520  6E20               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),c
  9801  001522  0E02               	movlw	high _RxBuffer
  9802  001524  6E21               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),c
  9803  001526  501E               	movf	??_MiMAC_ReceivedPacket+1,w,c
  9804  001528  2620               	addwf	??_MiMAC_ReceivedPacket+3,f,c
  9805  00152A  501F               	movf	??_MiMAC_ReceivedPacket+2,w,c
  9806  00152C  2221               	addwfc	??_MiMAC_ReceivedPacket+4,f,c
  9807  00152E  50F3               	movf	prodl,w,c
  9808  001530  2620               	addwf	??_MiMAC_ReceivedPacket+3,f,c
  9809  001532  50F4               	movf	prodh,w,c
  9810  001534  2221               	addwfc	??_MiMAC_ReceivedPacket+4,f,c
  9811  001536  501D               	movf	??_MiMAC_ReceivedPacket,w,c
  9812  001538  2420               	addwf	??_MiMAC_ReceivedPacket+3,w,c
  9813  00153A  6ED9               	movwf	fsr2l,c
  9814  00153C  0E00               	movlw	0
  9815  00153E  2021               	addwfc	??_MiMAC_ReceivedPacket+4,w,c
  9816  001540  6EDA               	movwf	fsr2h,c
  9817  001542  50DF               	movf	indf2,w,c
  9818  001544  6E2C               	movwf	_MACRxPacket+7,c
  9819                           
  9820                           ;drv_mrf_miwi_24j40.c: 650: MACRxPacket.RSSIValue = RxBuffer[BankIndex].Payload[RxBuffer
      +                          [BankIndex].PayloadLen - 1];
  9821  001546  5042               	movf	_BankIndex,w,c
  9822  001548  0D45               	mullw	69
  9823  00154A  0E28               	movlw	low _RxBuffer
  9824  00154C  24F3               	addwf	prodl,w,c
  9825  00154E  6ED9               	movwf	fsr2l,c
  9826  001550  0E02               	movlw	high _RxBuffer
  9827  001552  20F4               	addwfc	prodh,w,c
  9828  001554  6EDA               	movwf	fsr2h,c
  9829  001556  50DF               	movf	indf2,w,c
  9830  001558  6E1D               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  9831  00155A  5042               	movf	_BankIndex,w,c
  9832  00155C  0D45               	mullw	69
  9833  00155E  0E28               	movlw	low _RxBuffer
  9834  001560  6E1E               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  9835  001562  0E02               	movlw	high _RxBuffer
  9836  001564  6E1F               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),c
  9837  001566  50F3               	movf	prodl,w,c
  9838  001568  261E               	addwf	??_MiMAC_ReceivedPacket+1,f,c
  9839  00156A  50F4               	movf	prodh,w,c
  9840  00156C  221F               	addwfc	??_MiMAC_ReceivedPacket+2,f,c
  9841  00156E  501D               	movf	??_MiMAC_ReceivedPacket,w,c
  9842  001570  241E               	addwf	??_MiMAC_ReceivedPacket+1,w,c
  9843  001572  6ED9               	movwf	fsr2l,c
  9844  001574  0E00               	movlw	0
  9845  001576  201F               	addwfc	??_MiMAC_ReceivedPacket+2,w,c
  9846  001578  6EDA               	movwf	fsr2h,c
  9847  00157A  50DF               	movf	indf2,w,c
  9848  00157C  6E2B               	movwf	_MACRxPacket+6,c
  9849                           
  9850                           ; BSR set to: 2
  9851                           ;drv_mrf_miwi_24j40.c: 653: return 1;
  9852  00157E  0C01               	retlw	1	;funcret
  9853  001580                     __end_of_MiMAC_ReceivedPacket:
  9854                           	opt stack 0
  9855                           tblptru	equ	0xFF8
  9856                           tblptrh	equ	0xFF7
  9857                           tblptrl	equ	0xFF6
  9858                           tablat	equ	0xFF5
  9859                           prodh	equ	0xFF4
  9860                           prodl	equ	0xFF3
  9861                           intcon	equ	0xFF2
  9862                           intcon2	equ	0xFF1
  9863                           intcon3	equ	0xFF0
  9864                           postinc0	equ	0xFEE
  9865                           wreg	equ	0xFE8
  9866                           indf1	equ	0xFE7
  9867                           postinc1	equ	0xFE6
  9868                           postdec1	equ	0xFE5
  9869                           fsr1h	equ	0xFE2
  9870                           fsr1l	equ	0xFE1
  9871                           indf2	equ	0xFDF
  9872                           postinc2	equ	0xFDE
  9873                           postdec2	equ	0xFDD
  9874                           fsr2h	equ	0xFDA
  9875                           fsr2l	equ	0xFD9
  9876                           status	equ	0xFD8
  9877                           
  9878 ;; *************** function _MiApp_BroadcastConnectionTable *****************
  9879 ;; Defined at:
  9880 ;;		line 1902 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9881 ;; Parameters:    Size  Location     Type
  9882 ;;		None
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;  j               1   75[BANK0 ] unsigned char 
  9885 ;;  i               1   74[BANK0 ] unsigned char 
  9886 ;;  k               1   73[BANK0 ] unsigned char 
  9887 ;;  broadcast_co    1   72[BANK0 ] unsigned char 
  9888 ;;  count           1   71[BANK0 ] unsigned char 
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9893 ;; Tracked objects:
  9894 ;;		On entry : F/0
  9895 ;;		On exit  : F/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9899 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9900 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9901 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9902 ;;Total ram usage:       12 bytes
  9903 ;; Hardware stack levels used:    1
  9904 ;; Hardware stack levels required when called:   10
  9905 ;; This function calls:
  9906 ;;		_SendPacket
  9907 ;;		___awdiv
  9908 ;;		___awmod
  9909 ;; This function is called by:
  9910 ;;		_P2PTasks
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914                           	psect	text35
  9915  001D9E                     __ptext35:
  9916                           	opt stack 0
  9917  001D9E                     _MiApp_BroadcastConnectionTable:
  9918                           	opt stack 15
  9919                           
  9920                           ; BSR set to: 0
  9921                           ;miwi_p2p.c: 1909: if ((conn_size * 4 ) + 4 < 40)
  9922                           
  9923                           ; BSR set to: 0
  9924                           
  9925                           ;incstack = 0
  9926  001D9E  5040               	movf	_conn_size,w,c
  9927  001DA0  0D04               	mullw	4
  9928  001DA2  0E04               	movlw	4
  9929  001DA4  26F3               	addwf	prodl,f,c
  9930  001DA6  0E00               	movlw	0
  9931  001DA8  22F4               	addwfc	prodh,f,c
  9932  001DAA  BEF4               	btfsc	prodh,7,c
  9933  001DAC  D005               	goto	l12505
  9934  001DAE  50F4               	movf	prodh,w,c
  9935  001DB0  E106               	bnz	l12507
  9936  001DB2  0E28               	movlw	40
  9937  001DB4  5CF3               	subwf	prodl,w,c
  9938  001DB6  E203               	bc	l12507
  9939  001DB8                     l12505:
  9940                           
  9941                           ; BSR set to: 0
  9942                           ;miwi_p2p.c: 1910: {
  9943                           ;miwi_p2p.c: 1911: broadcast_count = 1;
  9944  001DB8  0E01               	movlw	1
  9945  001DBA  6FA8               	movwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),b
  9946                           
  9947                           ;miwi_p2p.c: 1912: }
  9948  001DBC  D027               	goto	l12513
  9949  001DBE                     l12507:
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;miwi_p2p.c: 1913: else
  9953                           ;miwi_p2p.c: 1914: {
  9954                           ;miwi_p2p.c: 1915: broadcast_count = ((conn_size * 4) + 4 )/ 40;
  9955  001DBE  5040               	movf	_conn_size,w,c
  9956  001DC0  0D04               	mullw	4
  9957  001DC2  0E04               	movlw	4
  9958  001DC4  24F3               	addwf	prodl,w,c
  9959  001DC6  6E1D               	movwf	___awdiv@dividend,c
  9960  001DC8  0E00               	movlw	0
  9961  001DCA  20F4               	addwfc	prodh,w,c
  9962  001DCC  6E1E               	movwf	___awdiv@dividend+1,c
  9963  001DCE  6A20               	clrf	___awdiv@divisor+1,c
  9964  001DD0  0E28               	movlw	40
  9965  001DD2  6E1F               	movwf	___awdiv@divisor,c
  9966  001DD4  EC7A  F018         	call	___awdiv	;wreg free
  9967  001DD8  501D               	movf	?___awdiv,w,c
  9968  001DDA  6FA8               	movwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),b
  9969                           
  9970                           ; BSR set to: 0
  9971                           ;miwi_p2p.c: 1916: if ((conn_size *4) + 4 % 40 != 0)
  9972  001DDC  5040               	movf	_conn_size,w,c
  9973  001DDE  0D04               	mullw	4
  9974  001DE0  0E04               	movlw	4
  9975  001DE2  26F3               	addwf	prodl,f,c
  9976  001DE4  0E00               	movlw	0
  9977  001DE6  22F4               	addwfc	prodh,f,c
  9978  001DE8  50F3               	movf	prodl,w,c
  9979  001DEA  10F4               	iorwf	prodh,w,c
  9980  001DEC  E00F               	bz	l12513
  9981                           
  9982                           ; BSR set to: 0
  9983                           ;miwi_p2p.c: 1917: {
  9984                           ;miwi_p2p.c: 1918: broadcast_count = broadcast_count + ((conn_size *4) + 4 )% 40;
  9985  001DEE  5040               	movf	_conn_size,w,c
  9986  001DF0  0D04               	mullw	4
  9987  001DF2  0E04               	movlw	4
  9988  001DF4  24F3               	addwf	prodl,w,c
  9989  001DF6  6E1D               	movwf	___awmod@dividend,c
  9990  001DF8  0E00               	movlw	0
  9991  001DFA  20F4               	addwfc	prodh,w,c
  9992  001DFC  6E1E               	movwf	___awmod@dividend+1,c
  9993  001DFE  6A20               	clrf	___awmod@divisor+1,c
  9994  001E00  0E28               	movlw	40
  9995  001E02  6E1F               	movwf	___awmod@divisor,c
  9996  001E04  EC27  F019         	call	___awmod	;wreg free
  9997  001E08  501D               	movf	?___awmod,w,c
  9998  001E0A  27A8               	addwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),f,b
  9999  001E0C                     l12513:
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;miwi_p2p.c: 1919: }
 10003                           ;miwi_p2p.c: 1921: }
 10004                           ;miwi_p2p.c: 1923: for (i = 0 ; i < broadcast_count ; i++)
 10005  001E0C  6BAA               	clrf	MiApp_BroadcastConnectionTable@i& (0+255),b
 10006  001E0E  D0CD               	goto	l12583
 10007  001E10                     l557:
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;miwi_p2p.c: 1924: {
 10011                           ;miwi_p2p.c: 1925: {TxData = 0;};
 10012  001E10  6BE5               	clrf	_TxData& (0+255),b
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;miwi_p2p.c: 1926: TxBuffer[TxData++] = 0x77;
 10016  001E12  0E18               	movlw	low _TxBuffer
 10017  001E14  25E5               	addwf	_TxData& (0+255),w,b
 10018  001E16  6ED9               	movwf	fsr2l,c
 10019  001E18  6ADA               	clrf	fsr2h,c
 10020  001E1A  0E01               	movlw	high _TxBuffer
 10021  001E1C  22DA               	addwfc	fsr2h,f,c
 10022  001E1E  0E77               	movlw	119
 10023  001E20  6EDF               	movwf	indf2,c
 10024                           
 10025                           ; BSR set to: 0
 10026  001E22  2BE5               	incf	_TxData& (0+255),f,b
 10027                           
 10028                           ; BSR set to: 0
 10029                           ;miwi_p2p.c: 1927: TxBuffer[TxData++] = conn_size;
 10030  001E24  0E18               	movlw	low _TxBuffer
 10031  001E26  25E5               	addwf	_TxData& (0+255),w,b
 10032  001E28  6ED9               	movwf	fsr2l,c
 10033  001E2A  6ADA               	clrf	fsr2h,c
 10034  001E2C  0E01               	movlw	high _TxBuffer
 10035  001E2E  22DA               	addwfc	fsr2h,f,c
 10036  001E30  C040  FFDF         	movff	_conn_size,indf2
 10037  001E34  2BE5               	incf	_TxData& (0+255),f,b
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;miwi_p2p.c: 1928: TxBuffer[TxData++] = ((40-4)/4)*i;
 10041  001E36  51AA               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10042  001E38  0D09               	mullw	9
 10043  001E3A  0E18               	movlw	low _TxBuffer
 10044  001E3C  25E5               	addwf	_TxData& (0+255),w,b
 10045  001E3E  6ED9               	movwf	fsr2l,c
 10046  001E40  6ADA               	clrf	fsr2h,c
 10047  001E42  0E01               	movlw	high _TxBuffer
 10048  001E44  22DA               	addwfc	fsr2h,f,c
 10049  001E46  CFF3 FFDF          	movff	prodl,indf2
 10050                           
 10051                           ; BSR set to: 0
 10052  001E4A  2BE5               	incf	_TxData& (0+255),f,b
 10053                           
 10054                           ;miwi_p2p.c: 1929: TxBuffer[TxData++] = ((40-4)/4)*(i+1);
 10055  001E4C  29AA               	incf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10056  001E4E  0D09               	mullw	9
 10057  001E50  0E18               	movlw	low _TxBuffer
 10058  001E52  25E5               	addwf	_TxData& (0+255),w,b
 10059  001E54  6ED9               	movwf	fsr2l,c
 10060  001E56  6ADA               	clrf	fsr2h,c
 10061  001E58  0E01               	movlw	high _TxBuffer
 10062  001E5A  22DA               	addwfc	fsr2h,f,c
 10063  001E5C  CFF3 FFDF          	movff	prodl,indf2
 10064                           
 10065                           ; BSR set to: 0
 10066  001E60  2BE5               	incf	_TxData& (0+255),f,b
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;miwi_p2p.c: 1930: count = 4;
 10070  001E62  0E04               	movlw	4
 10071  001E64  6FA7               	movwf	MiApp_BroadcastConnectionTable@count& (0+255),b
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;miwi_p2p.c: 1931: for (j= ((40-4)/4)*i ;j<((40-4)/4)*(i+1);j++)
 10075  001E66  51AA               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10076  001E68  0D09               	mullw	9
 10077  001E6A  CFF3 F0AB          	movff	prodl,MiApp_BroadcastConnectionTable@j
 10078  001E6E  D065               	goto	l12565
 10079  001E70                     l12531:
 10080                           
 10081                           ; BSR set to: 0
 10082                           ;miwi_p2p.c: 1932: {
 10083                           ;miwi_p2p.c: 1933: if (j < conn_size)
 10084  001E70  5040               	movf	_conn_size,w,c
 10085  001E72  5DAB               	subwf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10086  001E74  E261               	bc	l12563
 10087                           
 10088                           ; BSR set to: 0
 10089                           ;miwi_p2p.c: 1934: {
 10090                           ;miwi_p2p.c: 1935: if (ConnectionTable[j].status.bits.isValid)
 10091  001E76  51AB               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10092  001E78  0D0E               	mullw	14
 10093  001E7A  0E5C               	movlw	low (_ConnectionTable+12)
 10094  001E7C  24F3               	addwf	prodl,w,c
 10095  001E7E  6ED9               	movwf	fsr2l,c
 10096  001E80  0E03               	movlw	high (_ConnectionTable+12)
 10097  001E82  20F4               	addwfc	prodh,w,c
 10098  001E84  6EDA               	movwf	fsr2h,c
 10099  001E86  AEDF               	btfss	indf2,7,c
 10100  001E88  D03D               	goto	l12549
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;miwi_p2p.c: 1936: {
 10104                           ;miwi_p2p.c: 1938: TxBuffer[TxData++] = ConnectionTable[j].Address[0];
 10105  001E8A  51AB               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10106  001E8C  0D0E               	mullw	14
 10107  001E8E  0E54               	movlw	low (_ConnectionTable+4)
 10108  001E90  24F3               	addwf	prodl,w,c
 10109  001E92  6ED9               	movwf	fsr2l,c
 10110  001E94  0E03               	movlw	high (_ConnectionTable+4)
 10111  001E96  20F4               	addwfc	prodh,w,c
 10112  001E98  6EDA               	movwf	fsr2h,c
 10113  001E9A  0E18               	movlw	low _TxBuffer
 10114  001E9C  25E5               	addwf	_TxData& (0+255),w,b
 10115  001E9E  6EE1               	movwf	fsr1l,c
 10116  001EA0  6AE2               	clrf	fsr1h,c
 10117  001EA2  0E01               	movlw	high _TxBuffer
 10118  001EA4  22E2               	addwfc	fsr1h,f,c
 10119  001EA6  CFDF FFE7          	movff	indf2,indf1
 10120                           
 10121                           ; BSR set to: 0
 10122  001EAA  2BE5               	incf	_TxData& (0+255),f,b
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;miwi_p2p.c: 1939: TxBuffer[TxData++] = ConnectionTable[j].Address[1];
 10126  001EAC  51AB               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10127  001EAE  0D0E               	mullw	14
 10128  001EB0  0E55               	movlw	low (_ConnectionTable+5)
 10129  001EB2  24F3               	addwf	prodl,w,c
 10130  001EB4  6ED9               	movwf	fsr2l,c
 10131  001EB6  0E03               	movlw	high (_ConnectionTable+5)
 10132  001EB8  20F4               	addwfc	prodh,w,c
 10133  001EBA  6EDA               	movwf	fsr2h,c
 10134  001EBC  0E18               	movlw	low _TxBuffer
 10135  001EBE  25E5               	addwf	_TxData& (0+255),w,b
 10136  001EC0  6EE1               	movwf	fsr1l,c
 10137  001EC2  6AE2               	clrf	fsr1h,c
 10138  001EC4  0E01               	movlw	high _TxBuffer
 10139  001EC6  22E2               	addwfc	fsr1h,f,c
 10140  001EC8  CFDF FFE7          	movff	indf2,indf1
 10141  001ECC  2BE5               	incf	_TxData& (0+255),f,b
 10142                           
 10143                           ; BSR set to: 0
 10144                           ;miwi_p2p.c: 1940: TxBuffer[TxData++] = ConnectionTable[j].Address[2];
 10145  001ECE  51AB               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10146  001ED0  0D0E               	mullw	14
 10147  001ED2  0E56               	movlw	low (_ConnectionTable+6)
 10148  001ED4  24F3               	addwf	prodl,w,c
 10149  001ED6  6ED9               	movwf	fsr2l,c
 10150  001ED8  0E03               	movlw	high (_ConnectionTable+6)
 10151  001EDA  20F4               	addwfc	prodh,w,c
 10152  001EDC  6EDA               	movwf	fsr2h,c
 10153  001EDE  0E18               	movlw	low _TxBuffer
 10154  001EE0  25E5               	addwf	_TxData& (0+255),w,b
 10155  001EE2  6EE1               	movwf	fsr1l,c
 10156  001EE4  6AE2               	clrf	fsr1h,c
 10157  001EE6  0E01               	movlw	high _TxBuffer
 10158  001EE8  22E2               	addwfc	fsr1h,f,c
 10159  001EEA  CFDF FFE7          	movff	indf2,indf1
 10160  001EEE                     l12543:
 10161                           
 10162                           ; BSR set to: 0
 10163  001EEE  2BE5               	incf	_TxData& (0+255),f,b
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;miwi_p2p.c: 1941: TxBuffer[TxData++] = j;
 10167  001EF0  0E18               	movlw	low _TxBuffer
 10168  001EF2  25E5               	addwf	_TxData& (0+255),w,b
 10169  001EF4  6ED9               	movwf	fsr2l,c
 10170  001EF6  6ADA               	clrf	fsr2h,c
 10171  001EF8  0E01               	movlw	high _TxBuffer
 10172  001EFA  22DA               	addwfc	fsr2h,f,c
 10173  001EFC  C0AB  FFDF         	movff	MiApp_BroadcastConnectionTable@j,indf2
 10174                           
 10175                           ; BSR set to: 0
 10176  001F00  2BE5               	incf	_TxData& (0+255),f,b
 10177                           
 10178                           ;miwi_p2p.c: 1943: }
 10179  001F02  D018               	goto	l12561
 10180  001F04                     l12549:
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;miwi_p2p.c: 1945: else
 10184                           ;miwi_p2p.c: 1946: {
 10185                           ;miwi_p2p.c: 1948: TxBuffer[TxData++] = 0xff;
 10186  001F04  0E18               	movlw	low _TxBuffer
 10187  001F06  25E5               	addwf	_TxData& (0+255),w,b
 10188  001F08  6ED9               	movwf	fsr2l,c
 10189  001F0A  6ADA               	clrf	fsr2h,c
 10190  001F0C  0E01               	movlw	high _TxBuffer
 10191  001F0E  22DA               	addwfc	fsr2h,f,c
 10192  001F10  68DF               	setf	indf2,c
 10193                           
 10194                           ; BSR set to: 0
 10195  001F12  2BE5               	incf	_TxData& (0+255),f,b
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;miwi_p2p.c: 1949: TxBuffer[TxData++] = 0xff;
 10199  001F14  0E18               	movlw	low _TxBuffer
 10200  001F16  25E5               	addwf	_TxData& (0+255),w,b
 10201  001F18  6ED9               	movwf	fsr2l,c
 10202  001F1A  6ADA               	clrf	fsr2h,c
 10203  001F1C  0E01               	movlw	high _TxBuffer
 10204  001F1E  22DA               	addwfc	fsr2h,f,c
 10205  001F20  68DF               	setf	indf2,c
 10206  001F22  2BE5               	incf	_TxData& (0+255),f,b
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;miwi_p2p.c: 1950: TxBuffer[TxData++] = 0xff;
 10210  001F24  0E18               	movlw	low _TxBuffer
 10211  001F26  25E5               	addwf	_TxData& (0+255),w,b
 10212  001F28  6ED9               	movwf	fsr2l,c
 10213  001F2A  6ADA               	clrf	fsr2h,c
 10214  001F2C  0E01               	movlw	high _TxBuffer
 10215  001F2E  22DA               	addwfc	fsr2h,f,c
 10216  001F30  68DF               	setf	indf2,c
 10217  001F32  D7DD               	goto	l12543
 10218  001F34                     l12561:
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;miwi_p2p.c: 1952: }
 10222                           ;miwi_p2p.c: 1953: count = count + 4;
 10223  001F34  0E04               	movlw	4
 10224  001F36  27A7               	addwf	MiApp_BroadcastConnectionTable@count& (0+255),f,b
 10225  001F38                     l12563:
 10226                           
 10227                           ; BSR set to: 0
 10228  001F38  2BAB               	incf	MiApp_BroadcastConnectionTable@j& (0+255),f,b
 10229  001F3A                     l12565:
 10230                           
 10231                           ; BSR set to: 0
 10232  001F3A  51AA               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10233  001F3C  6FA0               	movwf	??_MiApp_BroadcastConnectionTable& (0+255),b
 10234  001F3E  6BA1               	clrf	(??_MiApp_BroadcastConnectionTable+1)& (0+255),b
 10235  001F40  2BA0               	incf	??_MiApp_BroadcastConnectionTable& (0+255),f,b
 10236  001F42  0E00               	movlw	0
 10237  001F44  23A1               	addwfc	(??_MiApp_BroadcastConnectionTable+1)& (0+255),f,b
 10238  001F46  0E09               	movlw	9
 10239  001F48  03A0               	mulwf	??_MiApp_BroadcastConnectionTable& (0+255),b
 10240  001F4A  CFF3 F0A2          	movff	prodl,??_MiApp_BroadcastConnectionTable+2
 10241  001F4E  CFF4 F0A3          	movff	prodh,??_MiApp_BroadcastConnectionTable+3
 10242  001F52  03A1               	mulwf	(??_MiApp_BroadcastConnectionTable+1)& (0+255),b
 10243  001F54  50F3               	movf	prodl,w,c
 10244  001F56  27A3               	addwf	(??_MiApp_BroadcastConnectionTable+3)& (0+255),f,b
 10245  001F58  51AB               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10246  001F5A  6FA4               	movwf	(??_MiApp_BroadcastConnectionTable+4)& (0+255),b
 10247  001F5C  6BA5               	clrf	(??_MiApp_BroadcastConnectionTable+5)& (0+255),b
 10248  001F5E  51A2               	movf	(??_MiApp_BroadcastConnectionTable+2)& (0+255),w,b
 10249  001F60  5DA4               	subwf	(??_MiApp_BroadcastConnectionTable+4)& (0+255),w,b
 10250  001F62  51A5               	movf	(??_MiApp_BroadcastConnectionTable+5)& (0+255),w,b
 10251  001F64  0A80               	xorlw	128
 10252  001F66  6FA6               	movwf	(??_MiApp_BroadcastConnectionTable+6)& (0+255),b
 10253  001F68  51A3               	movf	(??_MiApp_BroadcastConnectionTable+3)& (0+255),w,b
 10254  001F6A  0A80               	xorlw	128
 10255  001F6C  59A6               	subwfb	(??_MiApp_BroadcastConnectionTable+6)& (0+255),w,b
 10256  001F6E  E380               	bnc	l12531
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;miwi_p2p.c: 1954: }
 10260                           ;miwi_p2p.c: 1955: }
 10261                           ;miwi_p2p.c: 1957: for (k=count;k<40;k++)
 10262  001F70  C0A7  F0A9         	movff	MiApp_BroadcastConnectionTable@count,MiApp_BroadcastConnectionTable@k
 10263  001F74                     l12567:
 10264                           
 10265                           ; BSR set to: 0
 10266  001F74  0E27               	movlw	39
 10267  001F76  65A9               	cpfsgt	MiApp_BroadcastConnectionTable@k& (0+255),b
 10268  001F78  D001               	goto	l12571
 10269  001F7A  D00B               	goto	l12579
 10270  001F7C                     l12571:
 10271                           
 10272                           ; BSR set to: 0
 10273                           ;miwi_p2p.c: 1958: {
 10274                           ;miwi_p2p.c: 1959: TxBuffer[TxData++] = 0x11;
 10275  001F7C  0E18               	movlw	low _TxBuffer
 10276  001F7E  25E5               	addwf	_TxData& (0+255),w,b
 10277  001F80  6ED9               	movwf	fsr2l,c
 10278  001F82  6ADA               	clrf	fsr2h,c
 10279  001F84  0E01               	movlw	high _TxBuffer
 10280  001F86  22DA               	addwfc	fsr2h,f,c
 10281  001F88  0E11               	movlw	17
 10282  001F8A  6EDF               	movwf	indf2,c
 10283                           
 10284                           ; BSR set to: 0
 10285  001F8C  2BE5               	incf	_TxData& (0+255),f,b
 10286                           
 10287                           ; BSR set to: 0
 10288  001F8E  2BA9               	incf	MiApp_BroadcastConnectionTable@k& (0+255),f,b
 10289  001F90  D7F1               	goto	l12567
 10290  001F92                     l12579:
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;miwi_p2p.c: 1960: }
 10294                           ;miwi_p2p.c: 1967: SendPacket(1, myPANID, (0), 1, 0);
 10295  001F92  C0EC  F090         	movff	_myPANID,SendPacket@DestinationPANID
 10296  001F96  C0ED  F091         	movff	_myPANID+1,SendPacket@DestinationPANID+1
 10297  001F9A  6B92               	clrf	SendPacket@DestinationAddress& (0+255),b
 10298  001F9C  6B93               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
 10299  001F9E  0E01               	movlw	1
 10300  001FA0  6F94               	movwf	SendPacket@isCommand& (0+255),b
 10301  001FA2  6B95               	clrf	SendPacket@SecurityEnabled& (0+255),b
 10302  001FA4  EC09  F015         	call	_SendPacket
 10303                           
 10304                           ; BSR set to: 0
 10305  001FA8  2BAA               	incf	MiApp_BroadcastConnectionTable@i& (0+255),f,b
 10306  001FAA                     l12583:
 10307                           
 10308                           ; BSR set to: 0
 10309  001FAA  51A8               	movf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),w,b
 10310  001FAC  5DAA               	subwf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10311  001FAE  E201 D72F          	bnc	l557
 10312                           
 10313                           ; BSR set to: 0
 10314  001FB2  0012               	return		;funcret
 10315  001FB4                     __end_of_MiApp_BroadcastConnectionTable:
 10316                           	opt stack 0
 10317                           tblptru	equ	0xFF8
 10318                           tblptrh	equ	0xFF7
 10319                           tblptrl	equ	0xFF6
 10320                           tablat	equ	0xFF5
 10321                           prodh	equ	0xFF4
 10322                           prodl	equ	0xFF3
 10323                           intcon	equ	0xFF2
 10324                           intcon2	equ	0xFF1
 10325                           intcon3	equ	0xFF0
 10326                           postinc0	equ	0xFEE
 10327                           wreg	equ	0xFE8
 10328                           indf1	equ	0xFE7
 10329                           postinc1	equ	0xFE6
 10330                           postdec1	equ	0xFE5
 10331                           fsr1h	equ	0xFE2
 10332                           fsr1l	equ	0xFE1
 10333                           indf2	equ	0xFDF
 10334                           postinc2	equ	0xFDE
 10335                           postdec2	equ	0xFDD
 10336                           fsr2h	equ	0xFDA
 10337                           fsr2l	equ	0xFD9
 10338                           status	equ	0xFD8
 10339                           
 10340 ;; *************** function ___awmod *****************
 10341 ;; Defined at:
 10342 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  dividend        2   28[COMRAM] int 
 10345 ;;  divisor         2   30[COMRAM] int 
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;  sign            1   33[COMRAM] unsigned char 
 10348 ;;  counter         1   32[COMRAM] unsigned char 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  2   28[COMRAM] int 
 10351 ;; Registers used:
 10352 ;;		wreg, status,2, status,0
 10353 ;; Tracked objects:
 10354 ;;		On entry : F/0
 10355 ;;		On exit  : F/0
 10356 ;;		Unchanged: F/0
 10357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10362 ;;Total ram usage:        6 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:    4
 10365 ;; This function calls:
 10366 ;;		Nothing
 10367 ;; This function is called by:
 10368 ;;		_MiApp_BroadcastConnectionTable
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           	psect	text36
 10373  00324E                     __ptext36:
 10374                           	opt stack 0
 10375  00324E                     ___awmod:
 10376                           	opt stack 20
 10377                           
 10378                           ; BSR set to: 0
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;incstack = 0
 10382  00324E  6A22               	clrf	___awmod@sign,c
 10383                           
 10384                           ; BSR set to: 0
 10385  003250  AE1E               	btfss	___awmod@dividend+1,7,c
 10386  003252  D006               	goto	l12173
 10387                           
 10388                           ; BSR set to: 0
 10389  003254  6C1D               	negf	___awmod@dividend,c
 10390  003256  1E1E               	comf	___awmod@dividend+1,f,c
 10391  003258  B0D8               	btfsc	status,0,c
 10392  00325A  2A1E               	incf	___awmod@dividend+1,f,c
 10393                           
 10394                           ; BSR set to: 0
 10395  00325C  0E01               	movlw	1
 10396  00325E  6E22               	movwf	___awmod@sign,c
 10397  003260                     l12173:
 10398                           
 10399                           ; BSR set to: 0
 10400  003260  AE20               	btfss	___awmod@divisor+1,7,c
 10401  003262  D004               	goto	l12177
 10402                           
 10403                           ; BSR set to: 0
 10404  003264  6C1F               	negf	___awmod@divisor,c
 10405  003266  1E20               	comf	___awmod@divisor+1,f,c
 10406  003268  B0D8               	btfsc	status,0,c
 10407  00326A  2A20               	incf	___awmod@divisor+1,f,c
 10408  00326C                     l12177:
 10409                           
 10410                           ; BSR set to: 0
 10411  00326C  501F               	movf	___awmod@divisor,w,c
 10412  00326E  1020               	iorwf	___awmod@divisor+1,w,c
 10413  003270  E017               	bz	l12193
 10414                           
 10415                           ; BSR set to: 0
 10416  003272  0E01               	movlw	1
 10417  003274  6E21               	movwf	___awmod@counter,c
 10418  003276  D004               	goto	l12183
 10419  003278                     l12181:
 10420                           
 10421                           ; BSR set to: 0
 10422  003278  90D8               	bcf	status,0,c
 10423  00327A  361F               	rlcf	___awmod@divisor,f,c
 10424  00327C  3620               	rlcf	___awmod@divisor+1,f,c
 10425  00327E  2A21               	incf	___awmod@counter,f,c
 10426  003280                     l12183:
 10427                           
 10428                           ; BSR set to: 0
 10429  003280  AE20               	btfss	___awmod@divisor+1,7,c
 10430  003282  D7FA               	goto	l12181
 10431  003284                     l12185:
 10432                           
 10433                           ; BSR set to: 0
 10434  003284  501F               	movf	___awmod@divisor,w,c
 10435  003286  5C1D               	subwf	___awmod@dividend,w,c
 10436  003288  5020               	movf	___awmod@divisor+1,w,c
 10437  00328A  581E               	subwfb	___awmod@dividend+1,w,c
 10438  00328C  E304               	bnc	l12189
 10439                           
 10440                           ; BSR set to: 0
 10441  00328E  501F               	movf	___awmod@divisor,w,c
 10442  003290  5E1D               	subwf	___awmod@dividend,f,c
 10443  003292  5020               	movf	___awmod@divisor+1,w,c
 10444  003294  5A1E               	subwfb	___awmod@dividend+1,f,c
 10445  003296                     l12189:
 10446                           
 10447                           ; BSR set to: 0
 10448  003296  90D8               	bcf	status,0,c
 10449  003298  3220               	rrcf	___awmod@divisor+1,f,c
 10450  00329A  321F               	rrcf	___awmod@divisor,f,c
 10451                           
 10452                           ; BSR set to: 0
 10453  00329C  2E21               	decfsz	___awmod@counter,f,c
 10454  00329E  D7F2               	goto	l12185
 10455  0032A0                     l12193:
 10456                           
 10457                           ; BSR set to: 0
 10458  0032A0  5022               	movf	___awmod@sign,w,c
 10459  0032A2  E004               	bz	l12197
 10460                           
 10461                           ; BSR set to: 0
 10462  0032A4  6C1D               	negf	___awmod@dividend,c
 10463  0032A6  1E1E               	comf	___awmod@dividend+1,f,c
 10464  0032A8  B0D8               	btfsc	status,0,c
 10465  0032AA  2A1E               	incf	___awmod@dividend+1,f,c
 10466  0032AC                     l12197:
 10467                           
 10468                           ; BSR set to: 0
 10469  0032AC  C01D  F01D         	movff	___awmod@dividend,?___awmod
 10470  0032B0  C01E  F01E         	movff	___awmod@dividend+1,?___awmod+1
 10471                           
 10472                           ; BSR set to: 0
 10473  0032B4  0012               	return		;funcret
 10474  0032B6                     __end_of___awmod:
 10475                           	opt stack 0
 10476                           tblptru	equ	0xFF8
 10477                           tblptrh	equ	0xFF7
 10478                           tblptrl	equ	0xFF6
 10479                           tablat	equ	0xFF5
 10480                           prodh	equ	0xFF4
 10481                           prodl	equ	0xFF3
 10482                           intcon	equ	0xFF2
 10483                           intcon2	equ	0xFF1
 10484                           intcon3	equ	0xFF0
 10485                           postinc0	equ	0xFEE
 10486                           wreg	equ	0xFE8
 10487                           indf1	equ	0xFE7
 10488                           postinc1	equ	0xFE6
 10489                           postdec1	equ	0xFE5
 10490                           fsr1h	equ	0xFE2
 10491                           fsr1l	equ	0xFE1
 10492                           indf2	equ	0xFDF
 10493                           postinc2	equ	0xFDE
 10494                           postdec2	equ	0xFDD
 10495                           fsr2h	equ	0xFDA
 10496                           fsr2l	equ	0xFD9
 10497                           status	equ	0xFD8
 10498                           
 10499 ;; *************** function ___awdiv *****************
 10500 ;; Defined at:
 10501 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;  dividend        2   28[COMRAM] int 
 10504 ;;  divisor         2   30[COMRAM] int 
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;  quotient        2   34[COMRAM] int 
 10507 ;;  sign            1   33[COMRAM] unsigned char 
 10508 ;;  counter         1   32[COMRAM] unsigned char 
 10509 ;; Return value:  Size  Location     Type
 10510 ;;                  2   28[COMRAM] int 
 10511 ;; Registers used:
 10512 ;;		wreg, status,2, status,0
 10513 ;; Tracked objects:
 10514 ;;		On entry : F/0
 10515 ;;		On exit  : F/0
 10516 ;;		Unchanged: F/0
 10517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10518 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10519 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10521 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10522 ;;Total ram usage:        8 bytes
 10523 ;; Hardware stack levels used:    1
 10524 ;; Hardware stack levels required when called:    4
 10525 ;; This function calls:
 10526 ;;		Nothing
 10527 ;; This function is called by:
 10528 ;;		_MiApp_BroadcastConnectionTable
 10529 ;; This function uses a non-reentrant model
 10530 ;;
 10531                           
 10532                           	psect	text37
 10533  0030F4                     __ptext37:
 10534                           	opt stack 0
 10535  0030F4                     ___awdiv:
 10536                           	opt stack 20
 10537                           
 10538                           ; BSR set to: 0
 10539                           
 10540                           ; BSR set to: 0
 10541                           ;incstack = 0
 10542  0030F4  6A22               	clrf	___awdiv@sign,c
 10543                           
 10544                           ; BSR set to: 0
 10545  0030F6  AE20               	btfss	___awdiv@divisor+1,7,c
 10546  0030F8  D006               	goto	l12129
 10547                           
 10548                           ; BSR set to: 0
 10549  0030FA  6C1F               	negf	___awdiv@divisor,c
 10550  0030FC  1E20               	comf	___awdiv@divisor+1,f,c
 10551  0030FE  B0D8               	btfsc	status,0,c
 10552  003100  2A20               	incf	___awdiv@divisor+1,f,c
 10553                           
 10554                           ; BSR set to: 0
 10555  003102  0E01               	movlw	1
 10556  003104  6E22               	movwf	___awdiv@sign,c
 10557  003106                     l12129:
 10558                           
 10559                           ; BSR set to: 0
 10560  003106  AE1E               	btfss	___awdiv@dividend+1,7,c
 10561  003108  D006               	goto	l12135
 10562                           
 10563                           ; BSR set to: 0
 10564  00310A  6C1D               	negf	___awdiv@dividend,c
 10565  00310C  1E1E               	comf	___awdiv@dividend+1,f,c
 10566  00310E  B0D8               	btfsc	status,0,c
 10567  003110  2A1E               	incf	___awdiv@dividend+1,f,c
 10568                           
 10569                           ; BSR set to: 0
 10570  003112  0E01               	movlw	1
 10571  003114  1A22               	xorwf	___awdiv@sign,f,c
 10572  003116                     l12135:
 10573                           
 10574                           ; BSR set to: 0
 10575  003116  6A23               	clrf	___awdiv@quotient,c
 10576  003118  6A24               	clrf	___awdiv@quotient+1,c
 10577                           
 10578                           ; BSR set to: 0
 10579  00311A  501F               	movf	___awdiv@divisor,w,c
 10580  00311C  1020               	iorwf	___awdiv@divisor+1,w,c
 10581  00311E  E01B               	bz	l12157
 10582                           
 10583                           ; BSR set to: 0
 10584  003120  0E01               	movlw	1
 10585  003122  6E21               	movwf	___awdiv@counter,c
 10586  003124  D004               	goto	l12143
 10587  003126                     l12141:
 10588                           
 10589                           ; BSR set to: 0
 10590  003126  90D8               	bcf	status,0,c
 10591  003128  361F               	rlcf	___awdiv@divisor,f,c
 10592  00312A  3620               	rlcf	___awdiv@divisor+1,f,c
 10593  00312C  2A21               	incf	___awdiv@counter,f,c
 10594  00312E                     l12143:
 10595                           
 10596                           ; BSR set to: 0
 10597  00312E  AE20               	btfss	___awdiv@divisor+1,7,c
 10598  003130  D7FA               	goto	l12141
 10599  003132                     l12145:
 10600                           
 10601                           ; BSR set to: 0
 10602  003132  90D8               	bcf	status,0,c
 10603  003134  3623               	rlcf	___awdiv@quotient,f,c
 10604  003136  3624               	rlcf	___awdiv@quotient+1,f,c
 10605                           
 10606                           ; BSR set to: 0
 10607  003138  501F               	movf	___awdiv@divisor,w,c
 10608  00313A  5C1D               	subwf	___awdiv@dividend,w,c
 10609  00313C  5020               	movf	___awdiv@divisor+1,w,c
 10610  00313E  581E               	subwfb	___awdiv@dividend+1,w,c
 10611  003140  E305               	bnc	l12153
 10612                           
 10613                           ; BSR set to: 0
 10614  003142  501F               	movf	___awdiv@divisor,w,c
 10615  003144  5E1D               	subwf	___awdiv@dividend,f,c
 10616  003146  5020               	movf	___awdiv@divisor+1,w,c
 10617  003148  5A1E               	subwfb	___awdiv@dividend+1,f,c
 10618                           
 10619                           ; BSR set to: 0
 10620  00314A  8023               	bsf	___awdiv@quotient,0,c
 10621  00314C                     l12153:
 10622                           
 10623                           ; BSR set to: 0
 10624  00314C  90D8               	bcf	status,0,c
 10625  00314E  3220               	rrcf	___awdiv@divisor+1,f,c
 10626  003150  321F               	rrcf	___awdiv@divisor,f,c
 10627                           
 10628                           ; BSR set to: 0
 10629  003152  2E21               	decfsz	___awdiv@counter,f,c
 10630  003154  D7EE               	goto	l12145
 10631  003156                     l12157:
 10632                           
 10633                           ; BSR set to: 0
 10634  003156  5022               	movf	___awdiv@sign,w,c
 10635  003158  E004               	bz	l12161
 10636                           
 10637                           ; BSR set to: 0
 10638  00315A  6C23               	negf	___awdiv@quotient,c
 10639  00315C  1E24               	comf	___awdiv@quotient+1,f,c
 10640  00315E  B0D8               	btfsc	status,0,c
 10641  003160  2A24               	incf	___awdiv@quotient+1,f,c
 10642  003162                     l12161:
 10643                           
 10644                           ; BSR set to: 0
 10645  003162  C023  F01D         	movff	___awdiv@quotient,?___awdiv
 10646  003166  C024  F01E         	movff	___awdiv@quotient+1,?___awdiv+1
 10647                           
 10648                           ; BSR set to: 0
 10649  00316A  0012               	return		;funcret
 10650  00316C                     __end_of___awdiv:
 10651                           	opt stack 0
 10652                           tblptru	equ	0xFF8
 10653                           tblptrh	equ	0xFF7
 10654                           tblptrl	equ	0xFF6
 10655                           tablat	equ	0xFF5
 10656                           prodh	equ	0xFF4
 10657                           prodl	equ	0xFF3
 10658                           intcon	equ	0xFF2
 10659                           intcon2	equ	0xFF1
 10660                           intcon3	equ	0xFF0
 10661                           postinc0	equ	0xFEE
 10662                           wreg	equ	0xFE8
 10663                           indf1	equ	0xFE7
 10664                           postinc1	equ	0xFE6
 10665                           postdec1	equ	0xFE5
 10666                           fsr1h	equ	0xFE2
 10667                           fsr1l	equ	0xFE1
 10668                           indf2	equ	0xFDF
 10669                           postinc2	equ	0xFDE
 10670                           postdec2	equ	0xFDD
 10671                           fsr2h	equ	0xFDA
 10672                           fsr2l	equ	0xFD9
 10673                           status	equ	0xFD8
 10674                           
 10675 ;; *************** function _Forward_Packet_PANCr_to_EDy *****************
 10676 ;; Defined at:
 10677 ;;		line 178 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 10678 ;; Parameters:    Size  Location     Type
 10679 ;;  fw_payload      2   70[BANK0 ] PTR unsigned char 
 10680 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 10681 ;;  index           1   72[BANK0 ] unsigned char 
 10682 ;;  EDxAddress      2   73[BANK0 ] PTR unsigned char 
 10683 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 10684 ;; Auto vars:     Size  Location     Type
 10685 ;;  i               1   76[BANK0 ] unsigned char 
 10686 ;;  status          1   75[BANK0 ] unsigned char 
 10687 ;; Return value:  Size  Location     Type
 10688 ;;                  1    wreg      unsigned char 
 10689 ;; Registers used:
 10690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10691 ;; Tracked objects:
 10692 ;;		On entry : F/0
 10693 ;;		On exit  : F/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10696 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10697 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10699 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10700 ;;Total ram usage:        7 bytes
 10701 ;; Hardware stack levels used:    1
 10702 ;; Hardware stack levels required when called:   12
 10703 ;; This function calls:
 10704 ;;		_DemoOutput_UnicastFail
 10705 ;;		_MiApp_UnicastConnection
 10706 ;; This function is called by:
 10707 ;;		_P2PTasks
 10708 ;; This function uses a non-reentrant model
 10709 ;;
 10710                           
 10711                           	psect	text38
 10712  002C00                     __ptext38:
 10713                           	opt stack 0
 10714  002C00                     _Forward_Packet_PANCr_to_EDy:
 10715                           	opt stack 13
 10716                           
 10717                           ; BSR set to: 0
 10718                           ;miwi_p2p.c: 180: uint8_t i;
 10719                           ;miwi_p2p.c: 181: bool status;
 10720                           ;miwi_p2p.c: 182: {TxData = 0;};
 10721                           
 10722                           ; BSR set to: 0
 10723                           ;incstack = 0
 10724  002C00  6BE5               	clrf	_TxData& (0+255),b
 10725                           
 10726                           ; BSR set to: 0
 10727                           ;miwi_p2p.c: 183: TxBuffer[TxData++] = EDxAddress[0];
 10728  002C02  C0A9  FFD9         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress,fsr2l
 10729  002C06  C0AA  FFDA         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress+1,fsr2h
 10730  002C0A  0E18               	movlw	low _TxBuffer
 10731  002C0C  25E5               	addwf	_TxData& (0+255),w,b
 10732  002C0E  6EE1               	movwf	fsr1l,c
 10733  002C10  6AE2               	clrf	fsr1h,c
 10734  002C12  0E01               	movlw	high _TxBuffer
 10735  002C14  22E2               	addwfc	fsr1h,f,c
 10736  002C16  CFDF FFE7          	movff	indf2,indf1
 10737                           
 10738                           ; BSR set to: 0
 10739  002C1A  2BE5               	incf	_TxData& (0+255),f,b
 10740                           
 10741                           ; BSR set to: 0
 10742                           ;miwi_p2p.c: 184: TxBuffer[TxData++] = EDxAddress[1];
 10743  002C1C  EE20 F001          	lfsr	2,1
 10744  002C20  51A9               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
 10745  002C22  26D9               	addwf	fsr2l,f,c
 10746  002C24  51AA               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
 10747  002C26  22DA               	addwfc	fsr2h,f,c
 10748  002C28  0E18               	movlw	low _TxBuffer
 10749  002C2A  25E5               	addwf	_TxData& (0+255),w,b
 10750  002C2C  6EE1               	movwf	fsr1l,c
 10751  002C2E  6AE2               	clrf	fsr1h,c
 10752  002C30  0E01               	movlw	high _TxBuffer
 10753  002C32  22E2               	addwfc	fsr1h,f,c
 10754  002C34  CFDF FFE7          	movff	indf2,indf1
 10755  002C38  2BE5               	incf	_TxData& (0+255),f,b
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;miwi_p2p.c: 185: TxBuffer[TxData++] = EDxAddress[2];
 10759  002C3A  EE20 F002          	lfsr	2,2
 10760  002C3E  51A9               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
 10761  002C40  26D9               	addwf	fsr2l,f,c
 10762  002C42  51AA               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
 10763  002C44  22DA               	addwfc	fsr2h,f,c
 10764  002C46  0E18               	movlw	low _TxBuffer
 10765  002C48  25E5               	addwf	_TxData& (0+255),w,b
 10766  002C4A  6EE1               	movwf	fsr1l,c
 10767  002C4C  6AE2               	clrf	fsr1h,c
 10768  002C4E  0E01               	movlw	high _TxBuffer
 10769  002C50  22E2               	addwfc	fsr1h,f,c
 10770  002C52  CFDF FFE7          	movff	indf2,indf1
 10771                           
 10772                           ; BSR set to: 0
 10773  002C56  2BE5               	incf	_TxData& (0+255),f,b
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;miwi_p2p.c: 186: for(i = 3; i < 40; i++)
 10777  002C58  0E03               	movlw	3
 10778  002C5A  6FAC               	movwf	Forward_Packet_PANCr_to_EDy@i& (0+255),b
 10779  002C5C                     l12451:
 10780                           
 10781                           ; BSR set to: 0
 10782                           ;miwi_p2p.c: 187: {
 10783                           ;miwi_p2p.c: 188: TxBuffer[TxData++] = fw_payload[i];
 10784  002C5C  51AC               	movf	Forward_Packet_PANCr_to_EDy@i& (0+255),w,b
 10785  002C5E  25A6               	addwf	Forward_Packet_PANCr_to_EDy@fw_payload& (0+255),w,b
 10786  002C60  6ED9               	movwf	fsr2l,c
 10787  002C62  0E00               	movlw	0
 10788  002C64  21A7               	addwfc	(Forward_Packet_PANCr_to_EDy@fw_payload+1)& (0+255),w,b
 10789  002C66  6EDA               	movwf	fsr2h,c
 10790  002C68  0E18               	movlw	low _TxBuffer
 10791  002C6A  25E5               	addwf	_TxData& (0+255),w,b
 10792  002C6C  6EE1               	movwf	fsr1l,c
 10793  002C6E  6AE2               	clrf	fsr1h,c
 10794  002C70  0E01               	movlw	high _TxBuffer
 10795  002C72  22E2               	addwfc	fsr1h,f,c
 10796  002C74  CFDF FFE7          	movff	indf2,indf1
 10797                           
 10798                           ; BSR set to: 0
 10799  002C78  2BE5               	incf	_TxData& (0+255),f,b
 10800                           
 10801                           ; BSR set to: 0
 10802  002C7A  2BAC               	incf	Forward_Packet_PANCr_to_EDy@i& (0+255),f,b
 10803                           
 10804                           ; BSR set to: 0
 10805  002C7C  0E27               	movlw	39
 10806  002C7E  65AC               	cpfsgt	Forward_Packet_PANCr_to_EDy@i& (0+255),b
 10807  002C80  D7ED               	goto	l12451
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;miwi_p2p.c: 189: }
 10811                           ;miwi_p2p.c: 193: status = MiApp_UnicastConnection (index,0) ;
 10812  002C82  6BA4               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
 10813  002C84  51A8               	movf	Forward_Packet_PANCr_to_EDy@index& (0+255),w,b
 10814  002C86  EC4F  F01C         	call	_MiApp_UnicastConnection
 10815  002C8A  6FAB               	movwf	Forward_Packet_PANCr_to_EDy@status& (0+255),b
 10816                           
 10817                           ; BSR set to: 0
 10818                           ;miwi_p2p.c: 196: if(!status)
 10819  002C8C  51AB               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
 10820  002C8E  E102               	bnz	l12465
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;miwi_p2p.c: 197: {
 10824                           ;miwi_p2p.c: 198: DemoOutput_UnicastFail();
 10825  002C90  ECF5  F01D         	call	_DemoOutput_UnicastFail	;wreg free
 10826  002C94                     l12465:
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;miwi_p2p.c: 199: }
 10830                           ;miwi_p2p.c: 200: return status;
 10831  002C94  51AB               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
 10832                           
 10833                           ; BSR set to: 0
 10834  002C96  0012               	return		;funcret
 10835  002C98                     __end_of_Forward_Packet_PANCr_to_EDy:
 10836                           	opt stack 0
 10837                           tblptru	equ	0xFF8
 10838                           tblptrh	equ	0xFF7
 10839                           tblptrl	equ	0xFF6
 10840                           tablat	equ	0xFF5
 10841                           prodh	equ	0xFF4
 10842                           prodl	equ	0xFF3
 10843                           intcon	equ	0xFF2
 10844                           intcon2	equ	0xFF1
 10845                           intcon3	equ	0xFF0
 10846                           postinc0	equ	0xFEE
 10847                           wreg	equ	0xFE8
 10848                           indf1	equ	0xFE7
 10849                           postinc1	equ	0xFE6
 10850                           postdec1	equ	0xFE5
 10851                           fsr1h	equ	0xFE2
 10852                           fsr1l	equ	0xFE1
 10853                           indf2	equ	0xFDF
 10854                           postinc2	equ	0xFDE
 10855                           postdec2	equ	0xFDD
 10856                           fsr2h	equ	0xFDA
 10857                           fsr2l	equ	0xFD9
 10858                           status	equ	0xFD8
 10859                           
 10860 ;; *************** function _MiApp_UnicastConnection *****************
 10861 ;; Defined at:
 10862 ;;		line 1764 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  ConnectionIn    1    wreg     unsigned char 
 10865 ;;  SecEn           1   68[BANK0 ] unsigned char 
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;  ConnectionIn    1   69[BANK0 ] unsigned char 
 10868 ;; Return value:  Size  Location     Type
 10869 ;;                  1    wreg      unsigned char 
 10870 ;; Registers used:
 10871 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10872 ;; Tracked objects:
 10873 ;;		On entry : F/0
 10874 ;;		On exit  : F/0
 10875 ;;		Unchanged: 0/0
 10876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10877 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10880 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10881 ;;Total ram usage:        2 bytes
 10882 ;; Hardware stack levels used:    1
 10883 ;; Hardware stack levels required when called:   11
 10884 ;; This function calls:
 10885 ;;		_MiApp_UnicastAddress
 10886 ;; This function is called by:
 10887 ;;		_Forward_Packet_PANCr_to_EDy
 10888 ;;		_run_star_demo
 10889 ;; This function uses a non-reentrant model
 10890 ;;
 10891                           
 10892                           	psect	text39
 10893  00389E                     __ptext39:
 10894                           	opt stack 0
 10895  00389E                     _MiApp_UnicastConnection:
 10896                           	opt stack 13
 10897                           
 10898                           ; BSR set to: 0
 10899                           ;incstack = 0
 10900                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
 10901  00389E  6FA5               	movwf	MiApp_UnicastConnection@ConnectionIndex& (0+255),b
 10902                           
 10903                           ;miwi_p2p.c: 1767: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 10904  0038A0  0100               	movlb	0	; () banked
 10905  0038A2  51A5               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
 10906  0038A4  0D0E               	mullw	14
 10907  0038A6  0E5C               	movlw	low (_ConnectionTable+12)
 10908  0038A8  24F3               	addwf	prodl,w,c
 10909  0038AA  6ED9               	movwf	fsr2l,c
 10910  0038AC  0E03               	movlw	high (_ConnectionTable+12)
 10911  0038AE  20F4               	addwfc	prodh,w,c
 10912  0038B0  6EDA               	movwf	fsr2h,c
 10913  0038B2  AEDF               	btfss	indf2,7,c
 10914  0038B4  0C00               	retlw	0
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;miwi_p2p.c: 1768: {
 10918                           ;miwi_p2p.c: 1801: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
 10919  0038B6  51A5               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
 10920  0038B8  0D0E               	mullw	14
 10921  0038BA  0E54               	movlw	low (_ConnectionTable+4)
 10922  0038BC  24F3               	addwf	prodl,w,c
 10923  0038BE  6FA0               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
 10924  0038C0  0E03               	movlw	high (_ConnectionTable+4)
 10925  0038C2  20F4               	addwfc	prodh,w,c
 10926  0038C4  6FA1               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
 10927  0038C6  0E01               	movlw	1
 10928  0038C8  6FA2               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 10929  0038CA  C0A4  F0A3         	movff	MiApp_UnicastConnection@SecEn,MiApp_UnicastAddress@SecEn
 10930  0038CE  EF91  F01D         	goto	_MiApp_UnicastAddress	;wreg free
 10931  0038D2                     __end_of_MiApp_UnicastConnection:
 10932                           	opt stack 0
 10933                           tblptru	equ	0xFF8
 10934                           tblptrh	equ	0xFF7
 10935                           tblptrl	equ	0xFF6
 10936                           tablat	equ	0xFF5
 10937                           prodh	equ	0xFF4
 10938                           prodl	equ	0xFF3
 10939                           intcon	equ	0xFF2
 10940                           intcon2	equ	0xFF1
 10941                           intcon3	equ	0xFF0
 10942                           postinc0	equ	0xFEE
 10943                           wreg	equ	0xFE8
 10944                           indf1	equ	0xFE7
 10945                           postinc1	equ	0xFE6
 10946                           postdec1	equ	0xFE5
 10947                           fsr1h	equ	0xFE2
 10948                           fsr1l	equ	0xFE1
 10949                           indf2	equ	0xFDF
 10950                           postinc2	equ	0xFDE
 10951                           postdec2	equ	0xFDD
 10952                           fsr2h	equ	0xFDA
 10953                           fsr2l	equ	0xFD9
 10954                           status	equ	0xFD8
 10955                           
 10956 ;; *************** function _MiApp_UnicastAddress *****************
 10957 ;; Defined at:
 10958 ;;		line 1843 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;  DestinationA    2   64[BANK0 ] PTR unsigned char 
 10961 ;;		 -> ConnectionTable(280), 
 10962 ;;  PermanentAdd    1   66[BANK0 ] unsigned char 
 10963 ;;  SecEn           1   67[BANK0 ] unsigned char 
 10964 ;; Auto vars:     Size  Location     Type
 10965 ;;		None
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  1    wreg      unsigned char 
 10968 ;; Registers used:
 10969 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10970 ;; Tracked objects:
 10971 ;;		On entry : F/0
 10972 ;;		On exit  : F/0
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10975 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10978 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10979 ;;Total ram usage:        4 bytes
 10980 ;; Hardware stack levels used:    1
 10981 ;; Hardware stack levels required when called:   10
 10982 ;; This function calls:
 10983 ;;		_SendPacket
 10984 ;; This function is called by:
 10985 ;;		_MiApp_UnicastConnection
 10986 ;; This function uses a non-reentrant model
 10987 ;;
 10988                           
 10989                           	psect	text40
 10990  003B22                     __ptext40:
 10991                           	opt stack 0
 10992  003B22                     _MiApp_UnicastAddress:
 10993                           	opt stack 13
 10994                           
 10995                           ; BSR set to: 0
 10996                           ;miwi_p2p.c: 1874: return SendPacket(0, myPANID, DestinationAddress, 0, SecEn);
 10997                           
 10998                           ; BSR set to: 0
 10999                           ;incstack = 0
 11000  003B22  C0EC  F090         	movff	_myPANID,SendPacket@DestinationPANID
 11001  003B26  C0ED  F091         	movff	_myPANID+1,SendPacket@DestinationPANID+1
 11002  003B2A  C0A0  F092         	movff	MiApp_UnicastAddress@DestinationAddress,SendPacket@DestinationAddress
 11003  003B2E  C0A1  F093         	movff	MiApp_UnicastAddress@DestinationAddress+1,SendPacket@DestinationAddress+1
 11004  003B32  0E00               	movlw	0
 11005  003B34  6B94               	clrf	SendPacket@isCommand& (0+255),b
 11006  003B36  C0A3  F095         	movff	MiApp_UnicastAddress@SecEn,SendPacket@SecurityEnabled
 11007  003B3A  EF09  F015         	goto	_SendPacket
 11008  003B3E                     __end_of_MiApp_UnicastAddress:
 11009                           	opt stack 0
 11010                           tblptru	equ	0xFF8
 11011                           tblptrh	equ	0xFF7
 11012                           tblptrl	equ	0xFF6
 11013                           tablat	equ	0xFF5
 11014                           prodh	equ	0xFF4
 11015                           prodl	equ	0xFF3
 11016                           intcon	equ	0xFF2
 11017                           intcon2	equ	0xFF1
 11018                           intcon3	equ	0xFF0
 11019                           postinc0	equ	0xFEE
 11020                           wreg	equ	0xFE8
 11021                           indf1	equ	0xFE7
 11022                           postinc1	equ	0xFE6
 11023                           postdec1	equ	0xFE5
 11024                           fsr1h	equ	0xFE2
 11025                           fsr1l	equ	0xFE1
 11026                           indf2	equ	0xFDF
 11027                           postinc2	equ	0xFDE
 11028                           postdec2	equ	0xFDD
 11029                           fsr2h	equ	0xFDA
 11030                           fsr2l	equ	0xFD9
 11031                           status	equ	0xFD8
 11032                           
 11033 ;; *************** function _DemoOutput_UnicastFail *****************
 11034 ;; Defined at:
 11035 ;;		line 203 in file "../src/demo_ouput.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;		None
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      void 
 11042 ;; Registers used:
 11043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11044 ;; Tracked objects:
 11045 ;;		On entry : F/0
 11046 ;;		On exit  : F/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11053 ;;Total ram usage:        0 bytes
 11054 ;; Hardware stack levels used:    1
 11055 ;; Hardware stack levels required when called:    7
 11056 ;; This function calls:
 11057 ;;		_LCDDisplay
 11058 ;; This function is called by:
 11059 ;;		_Forward_Packet_PANCr_to_EDy
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text41
 11064  003BEA                     __ptext41:
 11065                           	opt stack 0
 11066  003BEA                     _DemoOutput_UnicastFail:
 11067                           	opt stack 17
 11068                           
 11069                           ; BSR set to: 0
 11070                           ;demo_ouput.c: 206: ;
 11071                           ;demo_ouput.c: 209: LCDDisplay((char *)" Unicast Failed", 0, 1);
 11072                           
 11073                           ; BSR set to: 0
 11074                           ;incstack = 0
 11075  003BEA  0EE7               	movlw	low STR_7
 11076  003BEC  6F87               	movwf	LCDDisplay@text& (0+255),b
 11077  003BEE  0EFF               	movlw	high STR_7
 11078  003BF0  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
 11079  003BF2  6B89               	clrf	LCDDisplay@value& (0+255),b
 11080  003BF4  0E01               	movlw	1
 11081  003BF6  6F8A               	movwf	LCDDisplay@delay& (0+255),b
 11082  003BF8  EF14  F01B         	goto	_LCDDisplay	;wreg free
 11083  003BFC                     __end_of_DemoOutput_UnicastFail:
 11084                           	opt stack 0
 11085                           tblptru	equ	0xFF8
 11086                           tblptrh	equ	0xFF7
 11087                           tblptrl	equ	0xFF6
 11088                           tablat	equ	0xFF5
 11089                           prodh	equ	0xFF4
 11090                           prodl	equ	0xFF3
 11091                           intcon	equ	0xFF2
 11092                           intcon2	equ	0xFF1
 11093                           intcon3	equ	0xFF0
 11094                           postinc0	equ	0xFEE
 11095                           wreg	equ	0xFE8
 11096                           indf1	equ	0xFE7
 11097                           postinc1	equ	0xFE6
 11098                           postdec1	equ	0xFE5
 11099                           fsr1h	equ	0xFE2
 11100                           fsr1l	equ	0xFE1
 11101                           indf2	equ	0xFDF
 11102                           postinc2	equ	0xFDE
 11103                           postdec2	equ	0xFDD
 11104                           fsr2h	equ	0xFDA
 11105                           fsr2l	equ	0xFD9
 11106                           status	equ	0xFD8
 11107                           
 11108 ;; *************** function _Find_Index *****************
 11109 ;; Defined at:
 11110 ;;		line 105 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11111 ;; Parameters:    Size  Location     Type
 11112 ;;  DestAddr        2   28[COMRAM] PTR unsigned char 
 11113 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 11114 ;; Auto vars:     Size  Location     Type
 11115 ;;  i               1   32[COMRAM] unsigned char 
 11116 ;; Return value:  Size  Location     Type
 11117 ;;                  1    wreg      unsigned char 
 11118 ;; Registers used:
 11119 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11120 ;; Tracked objects:
 11121 ;;		On entry : E/0
 11122 ;;		On exit  : E/0
 11123 ;;		Unchanged: E/0
 11124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11128 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11129 ;;Total ram usage:        5 bytes
 11130 ;; Hardware stack levels used:    1
 11131 ;; Hardware stack levels required when called:    4
 11132 ;; This function calls:
 11133 ;;		Nothing
 11134 ;; This function is called by:
 11135 ;;		_P2PTasks
 11136 ;; This function uses a non-reentrant model
 11137 ;;
 11138                           
 11139                           	psect	text42
 11140  002D2C                     __ptext42:
 11141                           	opt stack 0
 11142  002D2C                     _Find_Index:
 11143                           	opt stack 21
 11144                           
 11145                           ;miwi_p2p.c: 107: uint8_t i;
 11146                           ;miwi_p2p.c: 108: for (i=0;i<conn_size;i++)
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;incstack = 0
 11150  002D2C  6A21               	clrf	Find_Index@i,c
 11151  002D2E  D040               	goto	l12395
 11152  002D30                     l12381:
 11153                           
 11154                           ;miwi_p2p.c: 109: {
 11155                           ;miwi_p2p.c: 110: if (ConnectionTable[i].status.bits.isValid)
 11156  002D30  5021               	movf	Find_Index@i,w,c
 11157  002D32  0D0E               	mullw	14
 11158  002D34  0E5C               	movlw	low (_ConnectionTable+12)
 11159  002D36  24F3               	addwf	prodl,w,c
 11160  002D38  6ED9               	movwf	fsr2l,c
 11161  002D3A  0E03               	movlw	high (_ConnectionTable+12)
 11162  002D3C  20F4               	addwfc	prodh,w,c
 11163  002D3E  6EDA               	movwf	fsr2h,c
 11164  002D40  AEDF               	btfss	indf2,7,c
 11165  002D42  D035               	goto	l12393
 11166                           
 11167                           ;miwi_p2p.c: 111: {
 11168                           ;miwi_p2p.c: 112: if (DestAddr[1] == ConnectionTable[i].Address[0] && DestAddr[2] == Con
      +                          nectionTable[i].Address[1] && DestAddr[3] == ConnectionTable[i].Address[2] )
 11169  002D44  5021               	movf	Find_Index@i,w,c
 11170  002D46  0D0E               	mullw	14
 11171  002D48  0E54               	movlw	low (_ConnectionTable+4)
 11172  002D4A  24F3               	addwf	prodl,w,c
 11173  002D4C  6ED9               	movwf	fsr2l,c
 11174  002D4E  0E03               	movlw	high (_ConnectionTable+4)
 11175  002D50  20F4               	addwfc	prodh,w,c
 11176  002D52  6EDA               	movwf	fsr2h,c
 11177  002D54  EE10 F001          	lfsr	1,1
 11178  002D58  501D               	movf	Find_Index@DestAddr,w,c
 11179  002D5A  26E1               	addwf	fsr1l,f,c
 11180  002D5C  501E               	movf	Find_Index@DestAddr+1,w,c
 11181  002D5E  22E2               	addwfc	fsr1h,f,c
 11182  002D60  50DE               	movf	postinc2,w,c
 11183  002D62  18E6               	xorwf	postinc1,w,c
 11184  002D64  E124               	bnz	l12393
 11185  002D66  5021               	movf	Find_Index@i,w,c
 11186  002D68  0D0E               	mullw	14
 11187  002D6A  0E55               	movlw	low (_ConnectionTable+5)
 11188  002D6C  24F3               	addwf	prodl,w,c
 11189  002D6E  6ED9               	movwf	fsr2l,c
 11190  002D70  0E03               	movlw	high (_ConnectionTable+5)
 11191  002D72  20F4               	addwfc	prodh,w,c
 11192  002D74  6EDA               	movwf	fsr2h,c
 11193  002D76  EE10 F002          	lfsr	1,2
 11194  002D7A  501D               	movf	Find_Index@DestAddr,w,c
 11195  002D7C  26E1               	addwf	fsr1l,f,c
 11196  002D7E  501E               	movf	Find_Index@DestAddr+1,w,c
 11197  002D80  22E2               	addwfc	fsr1h,f,c
 11198  002D82  50DE               	movf	postinc2,w,c
 11199  002D84  18E6               	xorwf	postinc1,w,c
 11200  002D86  E113               	bnz	l12393
 11201  002D88  5021               	movf	Find_Index@i,w,c
 11202  002D8A  0D0E               	mullw	14
 11203  002D8C  0E56               	movlw	low (_ConnectionTable+6)
 11204  002D8E  24F3               	addwf	prodl,w,c
 11205  002D90  6ED9               	movwf	fsr2l,c
 11206  002D92  0E03               	movlw	high (_ConnectionTable+6)
 11207  002D94  20F4               	addwfc	prodh,w,c
 11208  002D96  6EDA               	movwf	fsr2h,c
 11209  002D98  EE10 F003          	lfsr	1,3
 11210  002D9C  501D               	movf	Find_Index@DestAddr,w,c
 11211  002D9E  26E1               	addwf	fsr1l,f,c
 11212  002DA0  501E               	movf	Find_Index@DestAddr+1,w,c
 11213  002DA2  22E2               	addwfc	fsr1h,f,c
 11214  002DA4  50DE               	movf	postinc2,w,c
 11215  002DA6  18E6               	xorwf	postinc1,w,c
 11216  002DA8  E102               	bnz	l12393
 11217                           
 11218                           ;miwi_p2p.c: 113: {
 11219                           ;miwi_p2p.c: 114: return i;
 11220  002DAA  5021               	movf	Find_Index@i,w,c
 11221  002DAC  0012               	return	
 11222  002DAE                     l12393:
 11223  002DAE  2A21               	incf	Find_Index@i,f,c
 11224  002DB0                     l12395:
 11225  002DB0  5040               	movf	_conn_size,w,c
 11226  002DB2  5C21               	subwf	Find_Index@i,w,c
 11227  002DB4  E3BD               	bnc	l12381
 11228                           
 11229                           ;miwi_p2p.c: 115: }
 11230                           ;miwi_p2p.c: 117: }
 11231                           ;miwi_p2p.c: 118: }
 11232                           ;miwi_p2p.c: 119: if (i==conn_size)
 11233  002DB6  5040               	movf	_conn_size,w,c
 11234  002DB8  1821               	xorwf	Find_Index@i,w,c
 11235  002DBA  E101               	bnz	l12403
 11236                           
 11237                           ;miwi_p2p.c: 120: {
 11238                           ;miwi_p2p.c: 121: return 0xff;
 11239  002DBC  0CFF               	retlw	255
 11240  002DBE                     l12403:
 11241                           
 11242                           ;miwi_p2p.c: 122: }
 11243                           ;miwi_p2p.c: 123: return 0;
 11244  002DBE  0C00               	retlw	0	;funcret
 11245  002DC0                     __end_of_Find_Index:
 11246                           	opt stack 0
 11247                           tblptru	equ	0xFF8
 11248                           tblptrh	equ	0xFF7
 11249                           tblptrl	equ	0xFF6
 11250                           tablat	equ	0xFF5
 11251                           prodh	equ	0xFF4
 11252                           prodl	equ	0xFF3
 11253                           intcon	equ	0xFF2
 11254                           intcon2	equ	0xFF1
 11255                           intcon3	equ	0xFF0
 11256                           postinc0	equ	0xFEE
 11257                           wreg	equ	0xFE8
 11258                           indf1	equ	0xFE7
 11259                           postinc1	equ	0xFE6
 11260                           postdec1	equ	0xFE5
 11261                           fsr1h	equ	0xFE2
 11262                           fsr1l	equ	0xFE1
 11263                           indf2	equ	0xFDF
 11264                           postinc2	equ	0xFDE
 11265                           postdec2	equ	0xFDD
 11266                           fsr2h	equ	0xFDA
 11267                           fsr2l	equ	0xFD9
 11268                           status	equ	0xFD8
 11269                           
 11270 ;; *************** function _Find_InActiveDevices *****************
 11271 ;; Defined at:
 11272 ;;		line 2046 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11273 ;; Parameters:    Size  Location     Type
 11274 ;;		None
 11275 ;; Auto vars:     Size  Location     Type
 11276 ;;  i               1   71[BANK0 ] unsigned char 
 11277 ;; Return value:  Size  Location     Type
 11278 ;;                  1    wreg      void 
 11279 ;; Registers used:
 11280 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11281 ;; Tracked objects:
 11282 ;;		On entry : F/0
 11283 ;;		On exit  : F/0
 11284 ;;		Unchanged: 0/0
 11285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11288 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11289 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11290 ;;Total ram usage:        2 bytes
 11291 ;; Hardware stack levels used:    1
 11292 ;; Hardware stack levels required when called:   11
 11293 ;; This function calls:
 11294 ;;		_MiApp_RemoveConnection
 11295 ;; This function is called by:
 11296 ;;		_P2PTasks
 11297 ;; This function uses a non-reentrant model
 11298 ;;
 11299                           
 11300                           	psect	text43
 11301  0032B6                     __ptext43:
 11302                           	opt stack 0
 11303  0032B6                     _Find_InActiveDevices:
 11304                           	opt stack 14
 11305                           
 11306                           ; BSR set to: 0
 11307                           ;miwi_p2p.c: 2048: uint8_t i;
 11308                           ;miwi_p2p.c: 2049: for (i=0;i<20;i++)
 11309                           
 11310                           ;incstack = 0
 11311  0032B6  6BA7               	clrf	Find_InActiveDevices@i& (0+255),b
 11312  0032B8                     l12475:
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;miwi_p2p.c: 2050: {
 11316                           ;miwi_p2p.c: 2051: if (ConnectionTable[i].status.bits.isValid)
 11317  0032B8  51A7               	movf	Find_InActiveDevices@i& (0+255),w,b
 11318  0032BA  0D0E               	mullw	14
 11319  0032BC  0E5C               	movlw	low (_ConnectionTable+12)
 11320  0032BE  24F3               	addwf	prodl,w,c
 11321  0032C0  6ED9               	movwf	fsr2l,c
 11322  0032C2  0E03               	movlw	high (_ConnectionTable+12)
 11323  0032C4  20F4               	addwfc	prodh,w,c
 11324  0032C6  6EDA               	movwf	fsr2h,c
 11325  0032C8  AEDF               	btfss	indf2,7,c
 11326  0032CA  D01B               	goto	l12485
 11327                           
 11328                           ; BSR set to: 0
 11329                           ;miwi_p2p.c: 2052: {
 11330                           ;miwi_p2p.c: 2053: if (link_stat[i] == 0 && permanent_connections[i] != 0xFF)
 11331  0032CC  0E00               	movlw	low _link_stat
 11332  0032CE  25A7               	addwf	Find_InActiveDevices@i& (0+255),w,b
 11333  0032D0  6ED9               	movwf	fsr2l,c
 11334  0032D2  6ADA               	clrf	fsr2h,c
 11335  0032D4  0E02               	movlw	high _link_stat
 11336  0032D6  22DA               	addwfc	fsr2h,f,c
 11337  0032D8  50DF               	movf	indf2,w,c
 11338  0032DA  E10C               	bnz	l12483
 11339                           
 11340                           ; BSR set to: 0
 11341  0032DC  0E14               	movlw	low _permanent_connections
 11342  0032DE  25A7               	addwf	Find_InActiveDevices@i& (0+255),w,b
 11343  0032E0  6ED9               	movwf	fsr2l,c
 11344  0032E2  6ADA               	clrf	fsr2h,c
 11345  0032E4  0E02               	movlw	high _permanent_connections
 11346  0032E6  22DA               	addwfc	fsr2h,f,c
 11347  0032E8  28DE               	incf	postinc2,w,c
 11348  0032EA  E004               	bz	l12483
 11349                           
 11350                           ; BSR set to: 0
 11351                           ;miwi_p2p.c: 2054: {
 11352                           ;miwi_p2p.c: 2055: MiApp_RemoveConnection(i);
 11353  0032EC  51A7               	movf	Find_InActiveDevices@i& (0+255),w,b
 11354  0032EE  EC29  F013         	call	_MiApp_RemoveConnection
 11355                           
 11356                           ;miwi_p2p.c: 2056: }
 11357  0032F2  D007               	goto	l12485
 11358  0032F4                     l12483:
 11359                           
 11360                           ; BSR set to: 0
 11361                           ;miwi_p2p.c: 2057: else
 11362                           ;miwi_p2p.c: 2058: {
 11363                           ;miwi_p2p.c: 2059: link_stat[i] = 0;
 11364  0032F4  0E00               	movlw	low _link_stat
 11365  0032F6  25A7               	addwf	Find_InActiveDevices@i& (0+255),w,b
 11366  0032F8  6ED9               	movwf	fsr2l,c
 11367  0032FA  6ADA               	clrf	fsr2h,c
 11368  0032FC  0E02               	movlw	high _link_stat
 11369  0032FE  22DA               	addwfc	fsr2h,f,c
 11370  003300  6ADF               	clrf	indf2,c
 11371  003302                     l12485:
 11372  003302  0100               	movlb	0	; () banked
 11373  003304  2BA7               	incf	Find_InActiveDevices@i& (0+255),f,b
 11374                           
 11375                           ; BSR set to: 0
 11376  003306  0E13               	movlw	19
 11377  003308  65A7               	cpfsgt	Find_InActiveDevices@i& (0+255),b
 11378  00330A  D7D6               	goto	l12475
 11379  00330C  0C13               	retlw	19
 11380  00330E                     __end_of_Find_InActiveDevices:
 11381                           	opt stack 0
 11382                           tblptru	equ	0xFF8
 11383                           tblptrh	equ	0xFF7
 11384                           tblptrl	equ	0xFF6
 11385                           tablat	equ	0xFF5
 11386                           prodh	equ	0xFF4
 11387                           prodl	equ	0xFF3
 11388                           intcon	equ	0xFF2
 11389                           intcon2	equ	0xFF1
 11390                           intcon3	equ	0xFF0
 11391                           postinc0	equ	0xFEE
 11392                           wreg	equ	0xFE8
 11393                           indf1	equ	0xFE7
 11394                           postinc1	equ	0xFE6
 11395                           postdec1	equ	0xFE5
 11396                           fsr1h	equ	0xFE2
 11397                           fsr1l	equ	0xFE1
 11398                           indf2	equ	0xFDF
 11399                           postinc2	equ	0xFDE
 11400                           postdec2	equ	0xFDD
 11401                           fsr2h	equ	0xFDA
 11402                           fsr2l	equ	0xFD9
 11403                           status	equ	0xFD8
 11404                           
 11405 ;; *************** function _MiApp_RemoveConnection *****************
 11406 ;; Defined at:
 11407 ;;		line 2877 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11408 ;; Parameters:    Size  Location     Type
 11409 ;;  ConnectionIn    1    wreg     unsigned char 
 11410 ;; Auto vars:     Size  Location     Type
 11411 ;;  ConnectionIn    1   68[BANK0 ] unsigned char 
 11412 ;;  j               2   64[BANK0 ] unsigned int 
 11413 ;;  j               2   66[BANK0 ] unsigned int 
 11414 ;;  i               1   69[BANK0 ] unsigned char 
 11415 ;; Return value:  Size  Location     Type
 11416 ;;                  1    wreg      void 
 11417 ;; Registers used:
 11418 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11419 ;; Tracked objects:
 11420 ;;		On entry : F/0
 11421 ;;		On exit  : 0/0
 11422 ;;		Unchanged: 0/0
 11423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11425 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11427 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11428 ;;Total ram usage:        6 bytes
 11429 ;; Hardware stack levels used:    1
 11430 ;; Hardware stack levels required when called:   10
 11431 ;; This function calls:
 11432 ;;		_NVMWrite
 11433 ;;		_SendPacket
 11434 ;; This function is called by:
 11435 ;;		_Find_InActiveDevices
 11436 ;; This function uses a non-reentrant model
 11437 ;;
 11438                           
 11439                           	psect	text44
 11440  002652                     __ptext44:
 11441                           	opt stack 0
 11442  002652                     _MiApp_RemoveConnection:
 11443                           	opt stack 14
 11444                           
 11445                           ; BSR set to: 0
 11446                           ;incstack = 0
 11447                           ;MiApp_RemoveConnection@ConnectionIndex stored from wreg
 11448  002652  6FA4               	movwf	MiApp_RemoveConnection@ConnectionIndex& (0+255),b
 11449                           
 11450                           ;miwi_p2p.c: 2879: if( ConnectionIndex == 0xFF )
 11451  002654  0100               	movlb	0	; () banked
 11452  002656  29A4               	incf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11453  002658  E153               	bnz	l12097
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;miwi_p2p.c: 2880: {
 11457                           ;miwi_p2p.c: 2881: uint8_t i;
 11458                           ;miwi_p2p.c: 2882: for(i = 0; i < 20; i++)
 11459  00265A  6BA5               	clrf	MiApp_RemoveConnection@i& (0+255),b
 11460  00265C                     l12069:
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;miwi_p2p.c: 2883: {
 11464                           ;miwi_p2p.c: 2884: uint16_t j;
 11465                           ;miwi_p2p.c: 2885: if( ConnectionTable[i].status.bits.isValid )
 11466  00265C  51A5               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11467  00265E  0D0E               	mullw	14
 11468  002660  0E5C               	movlw	low (_ConnectionTable+12)
 11469  002662  24F3               	addwf	prodl,w,c
 11470  002664  6ED9               	movwf	fsr2l,c
 11471  002666  0E03               	movlw	high (_ConnectionTable+12)
 11472  002668  20F4               	addwfc	prodh,w,c
 11473  00266A  6EDA               	movwf	fsr2h,c
 11474  00266C  AEDF               	btfss	indf2,7,c
 11475  00266E  D024               	goto	l12089
 11476                           
 11477                           ; BSR set to: 0
 11478                           ;miwi_p2p.c: 2886: {
 11479                           ;miwi_p2p.c: 2887: {TxData = 0;};
 11480  002670  6BE5               	clrf	_TxData& (0+255),b
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;miwi_p2p.c: 2888: TxBuffer[TxData++] = 0x82;
 11484  002672  0E18               	movlw	low _TxBuffer
 11485  002674  25E5               	addwf	_TxData& (0+255),w,b
 11486  002676  6ED9               	movwf	fsr2l,c
 11487  002678  6ADA               	clrf	fsr2h,c
 11488  00267A  0E01               	movlw	high _TxBuffer
 11489  00267C  22DA               	addwfc	fsr2h,f,c
 11490  00267E  0E82               	movlw	130
 11491  002680  6EDF               	movwf	indf2,c
 11492                           
 11493                           ; BSR set to: 0
 11494  002682  2BE5               	incf	_TxData& (0+255),f,b
 11495                           
 11496                           ; BSR set to: 0
 11497                           ;miwi_p2p.c: 2890: SendPacket(0, myPANID, ConnectionTable[i].Address, 1, 0);
 11498  002684  C0EC  F090         	movff	_myPANID,SendPacket@DestinationPANID
 11499  002688  C0ED  F091         	movff	_myPANID+1,SendPacket@DestinationPANID+1
 11500  00268C  51A5               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11501  00268E  0D0E               	mullw	14
 11502  002690  0E54               	movlw	low (_ConnectionTable+4)
 11503  002692  24F3               	addwf	prodl,w,c
 11504  002694  6F92               	movwf	SendPacket@DestinationAddress& (0+255),b
 11505  002696  0E03               	movlw	high (_ConnectionTable+4)
 11506  002698  20F4               	addwfc	prodh,w,c
 11507  00269A  6F93               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 11508  00269C  0E01               	movlw	1
 11509  00269E  6F94               	movwf	SendPacket@isCommand& (0+255),b
 11510  0026A0  0E00               	movlw	0
 11511  0026A2  6B95               	clrf	SendPacket@SecurityEnabled& (0+255),b
 11512  0026A4  EC09  F015         	call	_SendPacket
 11513                           
 11514                           ; BSR set to: 0
 11515                           ;miwi_p2p.c: 2894: for(j = 0; j < 0xFFF; j++) {}
 11516  0026A8  6BA0               	clrf	MiApp_RemoveConnection@j& (0+255),b
 11517  0026AA  6BA1               	clrf	(MiApp_RemoveConnection@j+1)& (0+255),b
 11518  0026AC                     l12085:
 11519                           
 11520                           ; BSR set to: 0
 11521  0026AC  4BA0               	infsnz	MiApp_RemoveConnection@j& (0+255),f,b
 11522  0026AE  2BA1               	incf	(MiApp_RemoveConnection@j+1)& (0+255),f,b
 11523                           
 11524                           ; BSR set to: 0
 11525  0026B0  29A0               	incf	MiApp_RemoveConnection@j& (0+255),w,b
 11526  0026B2  0E0F               	movlw	15
 11527  0026B4  59A1               	subwfb	(MiApp_RemoveConnection@j+1)& (0+255),w,b
 11528  0026B6  E3FA               	bnc	l12085
 11529  0026B8                     l12089:
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;miwi_p2p.c: 2895: }
 11533                           ;miwi_p2p.c: 2896: ConnectionTable[i].status.Val = 0;
 11534  0026B8  51A5               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11535  0026BA  0D0E               	mullw	14
 11536  0026BC  0E5C               	movlw	low (_ConnectionTable+12)
 11537  0026BE  24F3               	addwf	prodl,w,c
 11538  0026C0  6ED9               	movwf	fsr2l,c
 11539  0026C2  0E03               	movlw	high (_ConnectionTable+12)
 11540  0026C4  20F4               	addwfc	prodh,w,c
 11541  0026C6  6EDA               	movwf	fsr2h,c
 11542  0026C8  6ADF               	clrf	indf2,c
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;miwi_p2p.c: 2898: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint1
      +                          6_t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 11546  0026CA  51A5               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11547  0026CC  0D0E               	mullw	14
 11548  0026CE  0E50               	movlw	low _ConnectionTable
 11549  0026D0  24F3               	addwf	prodl,w,c
 11550  0026D2  6E1E               	movwf	NVMWrite@source,c
 11551  0026D4  0E03               	movlw	high _ConnectionTable
 11552  0026D6  20F4               	addwfc	prodh,w,c
 11553  0026D8  6E1F               	movwf	NVMWrite@source+1,c
 11554  0026DA  51A5               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11555  0026DC  0D0E               	mullw	14
 11556  0026DE  503E               	movf	_nvmConnectionTable,w,c
 11557  0026E0  24F3               	addwf	prodl,w,c
 11558  0026E2  6E20               	movwf	NVMWrite@addr,c
 11559  0026E4  503F               	movf	_nvmConnectionTable+1,w,c
 11560  0026E6  20F4               	addwfc	prodh,w,c
 11561  0026E8  6E21               	movwf	NVMWrite@addr+1,c
 11562  0026EA  6A23               	clrf	NVMWrite@count+1,c
 11563  0026EC  0E0E               	movlw	14
 11564  0026EE  6E22               	movwf	NVMWrite@count,c
 11565  0026F0  ECB3  F015         	call	_NVMWrite	;wreg free
 11566  0026F4  0100               	movlb	0	; () banked
 11567  0026F6  2BA5               	incf	MiApp_RemoveConnection@i& (0+255),f,b
 11568                           
 11569                           ; BSR set to: 0
 11570  0026F8  0E13               	movlw	19
 11571  0026FA  65A5               	cpfsgt	MiApp_RemoveConnection@i& (0+255),b
 11572  0026FC  D7AF               	goto	l12069
 11573  0026FE  0C13               	retlw	19
 11574  002700                     l12097:
 11575                           
 11576                           ; BSR set to: 0
 11577                           ;miwi_p2p.c: 2902: else if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 11578  002700  51A4               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11579  002702  0D0E               	mullw	14
 11580  002704  0E5C               	movlw	low (_ConnectionTable+12)
 11581  002706  24F3               	addwf	prodl,w,c
 11582  002708  6ED9               	movwf	fsr2l,c
 11583  00270A  0E03               	movlw	high (_ConnectionTable+12)
 11584  00270C  20F4               	addwfc	prodh,w,c
 11585  00270E  6EDA               	movwf	fsr2h,c
 11586  002710  AEDF               	btfss	indf2,7,c
 11587  002712  0012               	return	
 11588                           
 11589                           ; BSR set to: 0
 11590                           ;miwi_p2p.c: 2903: {
 11591                           ;miwi_p2p.c: 2904: uint16_t j;
 11592                           ;miwi_p2p.c: 2906: {TxData = 0;};
 11593  002714  6BE5               	clrf	_TxData& (0+255),b
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;miwi_p2p.c: 2907: TxBuffer[TxData++] = 0x82;
 11597  002716  0E18               	movlw	low _TxBuffer
 11598  002718  25E5               	addwf	_TxData& (0+255),w,b
 11599  00271A  6ED9               	movwf	fsr2l,c
 11600  00271C  6ADA               	clrf	fsr2h,c
 11601  00271E  0E01               	movlw	high _TxBuffer
 11602  002720  22DA               	addwfc	fsr2h,f,c
 11603  002722  0E82               	movlw	130
 11604  002724  6EDF               	movwf	indf2,c
 11605                           
 11606                           ; BSR set to: 0
 11607  002726  2BE5               	incf	_TxData& (0+255),f,b
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;miwi_p2p.c: 2909: SendPacket(0, myPANID, ConnectionTable[ConnectionIndex].Address, 1, 0
      +                          );
 11611  002728  C0EC  F090         	movff	_myPANID,SendPacket@DestinationPANID
 11612  00272C  C0ED  F091         	movff	_myPANID+1,SendPacket@DestinationPANID+1
 11613  002730  51A4               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11614  002732  0D0E               	mullw	14
 11615  002734  0E54               	movlw	low (_ConnectionTable+4)
 11616  002736  24F3               	addwf	prodl,w,c
 11617  002738  6F92               	movwf	SendPacket@DestinationAddress& (0+255),b
 11618  00273A  0E03               	movlw	high (_ConnectionTable+4)
 11619  00273C  20F4               	addwfc	prodh,w,c
 11620  00273E  6F93               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 11621  002740  0E01               	movlw	1
 11622  002742  6F94               	movwf	SendPacket@isCommand& (0+255),b
 11623  002744  0E00               	movlw	0
 11624  002746  6B95               	clrf	SendPacket@SecurityEnabled& (0+255),b
 11625  002748  EC09  F015         	call	_SendPacket
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;miwi_p2p.c: 2913: for(j = 0; j < 0xFFF; j++) {}
 11629  00274C  6BA2               	clrf	MiApp_RemoveConnection@j_1504& (0+255),b
 11630  00274E  6BA3               	clrf	(MiApp_RemoveConnection@j_1504+1)& (0+255),b
 11631  002750                     l12113:
 11632                           
 11633                           ; BSR set to: 0
 11634  002750  4BA2               	infsnz	MiApp_RemoveConnection@j_1504& (0+255),f,b
 11635  002752  2BA3               	incf	(MiApp_RemoveConnection@j_1504+1)& (0+255),f,b
 11636                           
 11637                           ; BSR set to: 0
 11638  002754  29A2               	incf	MiApp_RemoveConnection@j_1504& (0+255),w,b
 11639  002756  0E0F               	movlw	15
 11640  002758  59A3               	subwfb	(MiApp_RemoveConnection@j_1504+1)& (0+255),w,b
 11641  00275A  E3FA               	bnc	l12113
 11642                           
 11643                           ; BSR set to: 0
 11644                           ;miwi_p2p.c: 2914: ConnectionTable[ConnectionIndex].status.Val = 0;
 11645  00275C  51A4               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11646  00275E  0D0E               	mullw	14
 11647  002760  0E5C               	movlw	low (_ConnectionTable+12)
 11648  002762  24F3               	addwf	prodl,w,c
 11649  002764  6ED9               	movwf	fsr2l,c
 11650  002766  0E03               	movlw	high (_ConnectionTable+12)
 11651  002768  20F4               	addwfc	prodh,w,c
 11652  00276A  6EDA               	movwf	fsr2h,c
 11653  00276C  6ADF               	clrf	indf2,c
 11654                           
 11655                           ; BSR set to: 0
 11656                           ;miwi_p2p.c: 2916: NVMWrite((uint8_t *)&(ConnectionTable[ConnectionIndex]), nvmConnectio
      +                          nTable+((uint16_t)ConnectionIndex * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY))
      +                          ;
 11657  00276E  51A4               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11658  002770  0D0E               	mullw	14
 11659  002772  0E50               	movlw	low _ConnectionTable
 11660  002774  24F3               	addwf	prodl,w,c
 11661  002776  6E1E               	movwf	NVMWrite@source,c
 11662  002778  0E03               	movlw	high _ConnectionTable
 11663  00277A  20F4               	addwfc	prodh,w,c
 11664  00277C  6E1F               	movwf	NVMWrite@source+1,c
 11665  00277E  51A4               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11666  002780  0D0E               	mullw	14
 11667  002782  503E               	movf	_nvmConnectionTable,w,c
 11668  002784  24F3               	addwf	prodl,w,c
 11669  002786  6E20               	movwf	NVMWrite@addr,c
 11670  002788  503F               	movf	_nvmConnectionTable+1,w,c
 11671  00278A  20F4               	addwfc	prodh,w,c
 11672  00278C  6E21               	movwf	NVMWrite@addr+1,c
 11673  00278E  6A23               	clrf	NVMWrite@count+1,c
 11674  002790  0E0E               	movlw	14
 11675  002792  6E22               	movwf	NVMWrite@count,c
 11676  002794  EFB3  F015         	goto	_NVMWrite	;wreg free
 11677  002798                     __end_of_MiApp_RemoveConnection:
 11678                           	opt stack 0
 11679                           tblptru	equ	0xFF8
 11680                           tblptrh	equ	0xFF7
 11681                           tblptrl	equ	0xFF6
 11682                           tablat	equ	0xFF5
 11683                           prodh	equ	0xFF4
 11684                           prodl	equ	0xFF3
 11685                           intcon	equ	0xFF2
 11686                           intcon2	equ	0xFF1
 11687                           intcon3	equ	0xFF0
 11688                           postinc0	equ	0xFEE
 11689                           wreg	equ	0xFE8
 11690                           indf1	equ	0xFE7
 11691                           postinc1	equ	0xFE6
 11692                           postdec1	equ	0xFE5
 11693                           fsr1h	equ	0xFE2
 11694                           fsr1l	equ	0xFE1
 11695                           indf2	equ	0xFDF
 11696                           postinc2	equ	0xFDE
 11697                           postdec2	equ	0xFDD
 11698                           fsr2h	equ	0xFDA
 11699                           fsr2l	equ	0xFD9
 11700                           status	equ	0xFD8
 11701                           
 11702 ;; *************** function _SendPacket *****************
 11703 ;; Defined at:
 11704 ;;		line 1605 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11705 ;; Parameters:    Size  Location     Type
 11706 ;;  Broadcast       1    wreg     unsigned char 
 11707 ;;  DestinationP    2   48[BANK0 ] struct .
 11708 ;;  DestinationA    2   50[BANK0 ] PTR unsigned char 
 11709 ;;		 -> NULL(0), ConnectionTable(280), RxBuffer.Payload(68), RxBuffer(138), 
 11710 ;;  isCommand       1   52[BANK0 ] unsigned char 
 11711 ;;  SecurityEnab    1   53[BANK0 ] unsigned char 
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;  Broadcast       1   56[BANK0 ] unsigned char 
 11714 ;;  tParam          7   57[BANK0 ] struct .
 11715 ;;  status          1   55[BANK0 ] unsigned char 
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  1    wreg      unsigned char 
 11718 ;; Registers used:
 11719 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11720 ;; Tracked objects:
 11721 ;;		On entry : F/0
 11722 ;;		On exit  : F/0
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11725 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11726 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11727 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11728 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11729 ;;Total ram usage:       16 bytes
 11730 ;; Hardware stack levels used:    1
 11731 ;; Hardware stack levels required when called:    9
 11732 ;; This function calls:
 11733 ;;		_MiMAC_SendPacket
 11734 ;; This function is called by:
 11735 ;;		_P2PTasks
 11736 ;;		_MiApp_BroadcastPacket
 11737 ;;		_MiApp_UnicastAddress
 11738 ;;		_MiApp_BroadcastConnectionTable
 11739 ;;		_MiApp_UnicastStar
 11740 ;;		_send_link_status
 11741 ;;		_SW_Ack_SrED
 11742 ;;		_MiApp_EstablishConnection
 11743 ;;		_MiApp_RemoveConnection
 11744 ;; This function uses a non-reentrant model
 11745 ;;
 11746                           
 11747                           	psect	text45
 11748  002A12                     __ptext45:
 11749                           	opt stack 0
 11750  002A12                     _SendPacket:
 11751                           	opt stack 15
 11752                           
 11753                           ;incstack = 0
 11754                           ;SendPacket@Broadcast stored from wreg
 11755  002A12  6F98               	movwf	SendPacket@Broadcast& (0+255),b
 11756                           
 11757                           ;miwi_p2p.c: 1617: MAC_TRANS_PARAM tParam;
 11758                           ;miwi_p2p.c: 1618: bool status;
 11759                           ;miwi_p2p.c: 1620: tParam.flags.Val = 0;
 11760  002A14  0100               	movlb	0	; () banked
 11761  002A16  6B99               	clrf	SendPacket@tParam& (0+255),b
 11762                           
 11763                           ; BSR set to: 0
 11764                           ;miwi_p2p.c: 1621: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 11765  002A18  5194               	movf	SendPacket@isCommand& (0+255),w,b
 11766  002A1A  E003               	bz	u11700
 11767  002A1C  6B96               	clrf	??_SendPacket& (0+255),b
 11768  002A1E  2B96               	incf	??_SendPacket& (0+255),f,b
 11769  002A20  D002               	goto	u11718
 11770  002A22                     u11700:
 11771  002A22  0100               	movlb	0	; () banked
 11772  002A24  6B96               	clrf	??_SendPacket& (0+255),b
 11773  002A26                     u11718:
 11774  002A26  5199               	movf	SendPacket@tParam& (0+255),w,b
 11775  002A28  1996               	xorwf	??_SendPacket& (0+255),w,b
 11776  002A2A  0BFC               	andlw	-4
 11777  002A2C  1996               	xorwf	??_SendPacket& (0+255),w,b
 11778  002A2E  6F99               	movwf	SendPacket@tParam& (0+255),b
 11779                           
 11780                           ;miwi_p2p.c: 1622: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 11781  002A30  5198               	movf	SendPacket@Broadcast& (0+255),w,b
 11782  002A32  E103               	bnz	u11720
 11783  002A34  6B96               	clrf	??_SendPacket& (0+255),b
 11784  002A36  2B96               	incf	??_SendPacket& (0+255),f,b
 11785  002A38  D002               	goto	u11738
 11786  002A3A                     u11720:
 11787  002A3A  0100               	movlb	0	; () banked
 11788  002A3C  6B96               	clrf	??_SendPacket& (0+255),b
 11789  002A3E                     u11738:
 11790  002A3E  3B96               	swapf	??_SendPacket& (0+255),f,b
 11791  002A40  4796               	rlncf	??_SendPacket& (0+255),f,b
 11792  002A42  5199               	movf	SendPacket@tParam& (0+255),w,b
 11793  002A44  1996               	xorwf	??_SendPacket& (0+255),w,b
 11794  002A46  0BDF               	andlw	-33
 11795  002A48  1996               	xorwf	??_SendPacket& (0+255),w,b
 11796  002A4A  6F99               	movwf	SendPacket@tParam& (0+255),b
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;miwi_p2p.c: 1623: tParam.flags.bits.broadcast = Broadcast;
 11800  002A4C  B198               	btfsc	SendPacket@Broadcast& (0+255),0,b
 11801  002A4E  D002               	bra	u11745
 11802  002A50  9599               	bcf	SendPacket@tParam& (0+255),2,b
 11803  002A52  D002               	bra	u11746
 11804  002A54                     u11745:
 11805  002A54  0100               	movlb	0	; () banked
 11806  002A56  8599               	bsf	SendPacket@tParam& (0+255),2,b
 11807  002A58                     u11746:
 11808                           
 11809                           ; BSR set to: 0
 11810                           ;miwi_p2p.c: 1624: tParam.flags.bits.secEn = SecurityEnabled;
 11811  002A58  B195               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
 11812  002A5A  D002               	bra	u11755
 11813  002A5C  9799               	bcf	SendPacket@tParam& (0+255),3,b
 11814  002A5E  D002               	bra	u11756
 11815  002A60                     u11755:
 11816  002A60  0100               	movlb	0	; () banked
 11817  002A62  8799               	bsf	SendPacket@tParam& (0+255),3,b
 11818  002A64                     u11756:
 11819                           
 11820                           ; BSR set to: 0
 11821                           ;miwi_p2p.c: 1626: tParam.altSrcAddr = 0;
 11822  002A64  6B9D               	clrf	(SendPacket@tParam+4)& (0+255),b
 11823                           
 11824                           ; BSR set to: 0
 11825                           ;miwi_p2p.c: 1627: tParam.altDestAddr = (Broadcast) ? 1 : 0;
 11826  002A66  5198               	movf	SendPacket@Broadcast& (0+255),w,b
 11827  002A68  0E01               	movlw	1
 11828  002A6A  B4D8               	btfsc	status,2,c
 11829  002A6C  0E00               	movlw	0
 11830  002A6E  6F9C               	movwf	(SendPacket@tParam+3)& (0+255),b
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;miwi_p2p.c: 1633: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
 11834  002A70  5198               	movf	SendPacket@Broadcast& (0+255),w,b
 11835  002A72  E103               	bnz	u11780
 11836  002A74  6B96               	clrf	??_SendPacket& (0+255),b
 11837  002A76  2B96               	incf	??_SendPacket& (0+255),f,b
 11838  002A78  D002               	goto	u11798
 11839  002A7A                     u11780:
 11840  002A7A  0100               	movlb	0	; () banked
 11841  002A7C  6B96               	clrf	??_SendPacket& (0+255),b
 11842  002A7E                     u11798:
 11843  002A7E  3B96               	swapf	??_SendPacket& (0+255),f,b
 11844  002A80  4796               	rlncf	??_SendPacket& (0+255),f,b
 11845  002A82  4796               	rlncf	??_SendPacket& (0+255),f,b
 11846  002A84  5199               	movf	SendPacket@tParam& (0+255),w,b
 11847  002A86  1996               	xorwf	??_SendPacket& (0+255),w,b
 11848  002A88  0BBF               	andlw	-65
 11849  002A8A  1996               	xorwf	??_SendPacket& (0+255),w,b
 11850  002A8C  6F99               	movwf	SendPacket@tParam& (0+255),b
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;miwi_p2p.c: 1646: tParam.flags.bits.sourcePrsnt = 1;
 11854  002A8E  8F99               	bsf	SendPacket@tParam& (0+255),7,b
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;miwi_p2p.c: 1649: tParam.DestAddress = DestinationAddress;
 11858  002A90  C092  F09A         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
 11859  002A94  C093  F09B         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;miwi_p2p.c: 1652: tParam.DestPANID.Val = DestinationPANID.Val;
 11863  002A98  C090  F09E         	movff	SendPacket@DestinationPANID,SendPacket@tParam+5
 11864  002A9C  C091  F09F         	movff	SendPacket@DestinationPANID+1,SendPacket@tParam+6
 11865                           
 11866                           ; BSR set to: 0
 11867                           ;miwi_p2p.c: 1655: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
 11868  002AA0  EE20  F099         	lfsr	2,SendPacket@tParam
 11869  002AA4  EE00  F075         	lfsr	0,MiMAC_SendPacket@transParam
 11870  002AA8  0E06               	movlw	6
 11871  002AAA                     u11801:
 11872  002AAA  CFDB FFEB          	movff	plusw2,plusw0
 11873  002AAE  06E8               	decf	wreg,f,c
 11874  002AB0  E2FC               	bc	u11801
 11875  002AB2  0E18               	movlw	low _TxBuffer
 11876  002AB4  6F7C               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 11877  002AB6  0E01               	movlw	high _TxBuffer
 11878  002AB8  6F7D               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 11879  002ABA  C0E5  F07E         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 11880  002ABE  EC37  F00D         	call	_MiMAC_SendPacket	;wreg free
 11881  002AC2  0100               	movlb	0	; () banked
 11882  002AC4  6F97               	movwf	SendPacket@status& (0+255),b
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;miwi_p2p.c: 1656: TxData = 0;
 11886  002AC6  6BE5               	clrf	_TxData& (0+255),b
 11887                           
 11888                           ; BSR set to: 0
 11889                           ;miwi_p2p.c: 1658: return status;
 11890  002AC8  5197               	movf	SendPacket@status& (0+255),w,b
 11891                           
 11892                           ; BSR set to: 0
 11893  002ACA  0012               	return		;funcret
 11894  002ACC                     __end_of_SendPacket:
 11895                           	opt stack 0
 11896                           tblptru	equ	0xFF8
 11897                           tblptrh	equ	0xFF7
 11898                           tblptrl	equ	0xFF6
 11899                           tablat	equ	0xFF5
 11900                           prodh	equ	0xFF4
 11901                           prodl	equ	0xFF3
 11902                           intcon	equ	0xFF2
 11903                           intcon2	equ	0xFF1
 11904                           intcon3	equ	0xFF0
 11905                           postinc0	equ	0xFEE
 11906                           plusw0	equ	0xFEB
 11907                           wreg	equ	0xFE8
 11908                           indf1	equ	0xFE7
 11909                           postinc1	equ	0xFE6
 11910                           postdec1	equ	0xFE5
 11911                           fsr1h	equ	0xFE2
 11912                           fsr1l	equ	0xFE1
 11913                           indf2	equ	0xFDF
 11914                           postinc2	equ	0xFDE
 11915                           postdec2	equ	0xFDD
 11916                           plusw2	equ	0xFDB
 11917                           fsr2h	equ	0xFDA
 11918                           fsr2l	equ	0xFD9
 11919                           status	equ	0xFD8
 11920                           
 11921 ;; *************** function _MiMAC_SendPacket *****************
 11922 ;; Defined at:
 11923 ;;		line 736 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11924 ;; Parameters:    Size  Location     Type
 11925 ;;  transParam      7   21[BANK0 ] struct .
 11926 ;;  MACPayload      2   28[BANK0 ] PTR unsigned char 
 11927 ;;		 -> TxBuffer(40), 
 11928 ;;  MACPayloadLe    1   30[BANK0 ] unsigned char 
 11929 ;; Auto vars:     Size  Location     Type
 11930 ;;  t2              4   39[BANK0 ] struct _MIWI_TICK
 11931 ;;  t1              4   35[BANK0 ] struct _MIWI_TICK
 11932 ;;  loc             1   47[BANK0 ] unsigned char 
 11933 ;;  i               1   46[BANK0 ] unsigned char 
 11934 ;;  headerLength    1   45[BANK0 ] unsigned char 
 11935 ;;  frameControl    1   44[BANK0 ] unsigned char 
 11936 ;;  IntraPAN        1   43[BANK0 ] unsigned char 
 11937 ;; Return value:  Size  Location     Type
 11938 ;;                  1    wreg      unsigned char 
 11939 ;; Registers used:
 11940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11941 ;; Tracked objects:
 11942 ;;		On entry : F/0
 11943 ;;		On exit  : 0/0
 11944 ;;		Unchanged: 0/0
 11945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11946 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11947 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11948 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11949 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11950 ;;Total ram usage:       27 bytes
 11951 ;; Hardware stack levels used:    1
 11952 ;; Hardware stack levels required when called:    8
 11953 ;; This function calls:
 11954 ;;		_InitMRF24J40
 11955 ;;		_MiMAC_SetAltAddress
 11956 ;;		_MiWi_TickGet
 11957 ;;		_PHYSetLongRAMAddr
 11958 ;;		_PHYSetShortRAMAddr
 11959 ;; This function is called by:
 11960 ;;		_SendPacket
 11961 ;; This function uses a non-reentrant model
 11962 ;;
 11963                           
 11964                           	psect	text46
 11965  001A6E                     __ptext46:
 11966                           	opt stack 0
 11967  001A6E                     _MiMAC_SendPacket:
 11968                           	opt stack 15
 11969                           
 11970                           ; BSR set to: 0
 11971                           ;drv_mrf_miwi_24j40.c: 740: uint8_t headerLength;
 11972                           ;drv_mrf_miwi_24j40.c: 741: uint8_t loc = 0;
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;incstack = 0
 11976  001A6E  6B8F               	clrf	MiMAC_SendPacket@loc& (0+255),b
 11977                           
 11978                           ;drv_mrf_miwi_24j40.c: 744: bool IntraPAN;
 11979                           ;drv_mrf_miwi_24j40.c: 746: MIWI_TICK t1, t2;
 11980                           ;drv_mrf_miwi_24j40.c: 747: uint8_t frameControl;
 11981                           ;drv_mrf_miwi_24j40.c: 749: if (transParam.flags.bits.broadcast)
 11982  001A70  A575               	btfss	MiMAC_SendPacket@transParam& (0+255),2,b
 11983  001A72  D002               	goto	l11239
 11984                           
 11985                           ; BSR set to: 0
 11986                           ;drv_mrf_miwi_24j40.c: 750: {
 11987                           ;drv_mrf_miwi_24j40.c: 751: transParam.altDestAddr = 1;
 11988  001A74  0E01               	movlw	1
 11989  001A76  6F78               	movwf	(MiMAC_SendPacket@transParam+3)& (0+255),b
 11990  001A78                     l11239:
 11991                           
 11992                           ; BSR set to: 0
 11993                           ;drv_mrf_miwi_24j40.c: 752: }
 11994                           ;drv_mrf_miwi_24j40.c: 754: if (transParam.flags.bits.secEn)
 11995  001A78  B775               	btfsc	MiMAC_SendPacket@transParam& (0+255),3,b
 11996                           
 11997                           ; BSR set to: 0
 11998                           ;drv_mrf_miwi_24j40.c: 755: {
 11999                           ;drv_mrf_miwi_24j40.c: 756: transParam.altSrcAddr = 0;
 12000  001A7A  6B79               	clrf	(MiMAC_SendPacket@transParam+4)& (0+255),b
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;drv_mrf_miwi_24j40.c: 757: }
 12004                           ;drv_mrf_miwi_24j40.c: 783: if (transParam.flags.bits.packetType == 0x01)
 12005  001A7C  5175               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 12006  001A7E  0B03               	andlw	3
 12007  001A80  06E8               	decf	wreg,f,c
 12008  001A82  E102               	bnz	l11247
 12009                           
 12010                           ; BSR set to: 0
 12011                           ;drv_mrf_miwi_24j40.c: 784: {
 12012                           ;drv_mrf_miwi_24j40.c: 785: frameControl = 0x03;
 12013  001A84  0E03               	movlw	3
 12014  001A86  D004               	goto	L11
 12015  001A88                     l11247:
 12016                           
 12017                           ; BSR set to: 0
 12018  001A88  5175               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 12019  001A8A  0B03               	andlw	3
 12020  001A8C  E102               	bnz	l11251
 12021                           
 12022                           ; BSR set to: 0
 12023                           ;drv_mrf_miwi_24j40.c: 787: {
 12024                           ;drv_mrf_miwi_24j40.c: 788: frameControl = 0x01;
 12025  001A8E  0E01               	movlw	1
 12026  001A90                     L11:
 12027  001A90  6F8C               	movwf	MiMAC_SendPacket@frameControl& (0+255),b
 12028  001A92                     l11251:
 12029                           
 12030                           ; BSR set to: 0
 12031                           ;drv_mrf_miwi_24j40.c: 789: }
 12032                           ;drv_mrf_miwi_24j40.c: 794: if ((transParam.DestPANID.Val == MAC_PANID.Val) && (MAC_PANI
      +                          D.Val != 0xFFFF))
 12033  001A92  503A               	movf	_MAC_PANID,w,c
 12034  001A94  197A               	xorwf	(MiMAC_SendPacket@transParam+5)& (0+255),w,b
 12035  001A96  E10D               	bnz	l11261
 12036  001A98  503B               	movf	_MAC_PANID+1,w,c
 12037  001A9A  197B               	xorwf	(MiMAC_SendPacket@transParam+6)& (0+255),w,b
 12038  001A9C  E10A               	bnz	l11261
 12039                           
 12040                           ; BSR set to: 0
 12041  001A9E  283A               	incf	_MAC_PANID,w,c
 12042  001AA0  E102               	bnz	u11350
 12043  001AA2  283B               	incf	_MAC_PANID+1,w,c
 12044  001AA4  E006               	bz	l11261
 12045  001AA6                     u11350:
 12046                           
 12047                           ; BSR set to: 0
 12048                           ;drv_mrf_miwi_24j40.c: 796: {
 12049                           ;drv_mrf_miwi_24j40.c: 797: headerLength = 5;
 12050  001AA6  0E05               	movlw	5
 12051  001AA8  6F8D               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;drv_mrf_miwi_24j40.c: 798: frameControl |= 0x40;
 12055  001AAA  8D8C               	bsf	MiMAC_SendPacket@frameControl& (0+255),6,b
 12056                           
 12057                           ; BSR set to: 0
 12058                           ;drv_mrf_miwi_24j40.c: 800: IntraPAN = 1;
 12059  001AAC  0E01               	movlw	1
 12060  001AAE  6F8B               	movwf	MiMAC_SendPacket@IntraPAN& (0+255),b
 12061                           
 12062                           ;drv_mrf_miwi_24j40.c: 802: }
 12063  001AB0  D003               	goto	l137
 12064  001AB2                     l11261:
 12065                           
 12066                           ; BSR set to: 0
 12067                           ;drv_mrf_miwi_24j40.c: 804: else
 12068                           ;drv_mrf_miwi_24j40.c: 805: {
 12069                           ;drv_mrf_miwi_24j40.c: 806: headerLength = 7;
 12070  001AB2  0E07               	movlw	7
 12071  001AB4  6F8D               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;drv_mrf_miwi_24j40.c: 807: IntraPAN = 0;
 12075  001AB6  6B8B               	clrf	MiMAC_SendPacket@IntraPAN& (0+255),b
 12076  001AB8                     l137:
 12077                           
 12078                           ; BSR set to: 0
 12079                           ;drv_mrf_miwi_24j40.c: 808: }
 12080                           ;drv_mrf_miwi_24j40.c: 811: if (transParam.altDestAddr)
 12081  001AB8  5178               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 12082                           
 12083                           ; BSR set to: 0
 12084                           ;drv_mrf_miwi_24j40.c: 812: {
 12085                           ;drv_mrf_miwi_24j40.c: 813: headerLength += 2;
 12086  001ABA  0E02               	movlw	2
 12087  001ABC  B4D8               	btfsc	status,2,c
 12088                           
 12089                           ; BSR set to: 0
 12090                           ;drv_mrf_miwi_24j40.c: 815: {
 12091                           ;drv_mrf_miwi_24j40.c: 816: headerLength += 8;
 12092  001ABE  0E08               	movlw	8
 12093                           
 12094                           ;drv_mrf_miwi_24j40.c: 814: } else
 12095  001AC0  278D               	addwf	MiMAC_SendPacket@headerLength& (0+255),f,b
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;drv_mrf_miwi_24j40.c: 817: }
 12099                           ;drv_mrf_miwi_24j40.c: 819: if (transParam.altSrcAddr)
 12100  001AC2  5179               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;drv_mrf_miwi_24j40.c: 820: {
 12104                           ;drv_mrf_miwi_24j40.c: 821: headerLength += 2;
 12105  001AC4  0E02               	movlw	2
 12106  001AC6  B4D8               	btfsc	status,2,c
 12107                           
 12108                           ; BSR set to: 0
 12109                           ;drv_mrf_miwi_24j40.c: 823: {
 12110                           ;drv_mrf_miwi_24j40.c: 824: headerLength += 8;
 12111  001AC8  0E08               	movlw	8
 12112                           
 12113                           ;drv_mrf_miwi_24j40.c: 822: } else
 12114  001ACA  278D               	addwf	MiMAC_SendPacket@headerLength& (0+255),f,b
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;drv_mrf_miwi_24j40.c: 825: }
 12118                           ;drv_mrf_miwi_24j40.c: 827: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
 12119  001ACC  BB75               	btfsc	MiMAC_SendPacket@transParam& (0+255),5,b
 12120                           
 12121                           ; BSR set to: 0
 12122  001ACE  B575               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 12123  001AD0  D001               	goto	l11281
 12124                           
 12125                           ; BSR set to: 0
 12126                           ;drv_mrf_miwi_24j40.c: 828: {
 12127                           ;drv_mrf_miwi_24j40.c: 829: frameControl |= 0x20;
 12128  001AD2  8B8C               	bsf	MiMAC_SendPacket@frameControl& (0+255),5,b
 12129  001AD4                     l11281:
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;drv_mrf_miwi_24j40.c: 830: }
 12133                           ;drv_mrf_miwi_24j40.c: 833: if (transParam.flags.bits.packetType == 0x03)
 12134  001AD4  5175               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 12135  001AD6  0B03               	andlw	3
 12136  001AD8  0A03               	xorlw	3
 12137  001ADA  E107               	bnz	l11291
 12138                           
 12139                           ; BSR set to: 0
 12140                           ;drv_mrf_miwi_24j40.c: 834: {
 12141                           ;drv_mrf_miwi_24j40.c: 835: frameControl = 0x00;
 12142  001ADC  6B8C               	clrf	MiMAC_SendPacket@frameControl& (0+255),b
 12143                           
 12144                           ; BSR set to: 0
 12145                           ;drv_mrf_miwi_24j40.c: 836: headerLength = 7;
 12146  001ADE  0E07               	movlw	7
 12147  001AE0  6F8D               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
 12148                           
 12149                           ; BSR set to: 0
 12150                           ;drv_mrf_miwi_24j40.c: 838: IntraPAN = 0;
 12151  001AE2  6B8B               	clrf	MiMAC_SendPacket@IntraPAN& (0+255),b
 12152                           
 12153                           ;drv_mrf_miwi_24j40.c: 840: transParam.altSrcAddr = 1;
 12154  001AE4  0E01               	movlw	1
 12155  001AE6  6F79               	movwf	(MiMAC_SendPacket@transParam+4)& (0+255),b
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;drv_mrf_miwi_24j40.c: 841: transParam.flags.bits.ackReq = 0;
 12159  001AE8  9B75               	bcf	MiMAC_SendPacket@transParam& (0+255),5,b
 12160  001AEA                     l11291:
 12161                           
 12162                           ; BSR set to: 0
 12163                           ;drv_mrf_miwi_24j40.c: 842: }
 12164                           ;drv_mrf_miwi_24j40.c: 853: PHYSetLongRAMAddr(loc++, headerLength);
 12165  001AEA  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12166  001AEC  6A1E               	clrf	PHYSetLongRAMAddr@address,c
 12167  001AEE  C08D  F020         	movff	MiMAC_SendPacket@headerLength,PHYSetLongRAMAddr@value
 12168  001AF2  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12169  001AF6  0100               	movlb	0	; () banked
 12170  001AF8  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;drv_mrf_miwi_24j40.c: 861: {
 12174                           ;drv_mrf_miwi_24j40.c: 862: PHYSetLongRAMAddr(loc++, headerLength + MACPayloadLen);
 12175  001AFA  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12176  001AFE  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12177  001B00  518D               	movf	MiMAC_SendPacket@headerLength& (0+255),w,b
 12178  001B02  257E               	addwf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 12179  001B04  6E20               	movwf	PHYSetLongRAMAddr@value,c
 12180  001B06  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12181  001B0A  0100               	movlb	0	; () banked
 12182  001B0C  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;drv_mrf_miwi_24j40.c: 863: }
 12186                           ;drv_mrf_miwi_24j40.c: 866: PHYSetLongRAMAddr(loc++, frameControl);
 12187  001B0E  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12188  001B12  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12189  001B14  C08C  F020         	movff	MiMAC_SendPacket@frameControl,PHYSetLongRAMAddr@value
 12190  001B18  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12191  001B1C  0100               	movlb	0	; () banked
 12192  001B1E  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12193                           
 12194                           ; BSR set to: 0
 12195                           ;drv_mrf_miwi_24j40.c: 869: if (transParam.flags.bits.packetType == 0x03)
 12196  001B20  5175               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 12197  001B22  0B03               	andlw	3
 12198  001B24  0A03               	xorlw	3
 12199  001B26  E112               	bnz	l11311
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;drv_mrf_miwi_24j40.c: 870: {
 12203                           ;drv_mrf_miwi_24j40.c: 871: PHYSetLongRAMAddr(loc++, 0x80);
 12204  001B28  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12205  001B2C  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12206  001B2E  0E80               	movlw	128
 12207  001B30  6E20               	movwf	PHYSetLongRAMAddr@value,c
 12208  001B32  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12209  001B36  0100               	movlb	0	; () banked
 12210  001B38  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;drv_mrf_miwi_24j40.c: 873: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 12214  001B3A  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12215  001B3E  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12216  001B40  C032  F020         	movff	_IEEESeqNum,PHYSetLongRAMAddr@value
 12217  001B44  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12218  001B48  2A32               	incf	_IEEESeqNum,f,c
 12219  001B4A  D077               	goto	L15
 12220  001B4C                     l11311:
 12221                           
 12222                           ; BSR set to: 0
 12223                           ;drv_mrf_miwi_24j40.c: 875: {
 12224                           ;drv_mrf_miwi_24j40.c: 876: if (transParam.altDestAddr && transParam.altSrcAddr)
 12225  001B4C  5178               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 12226  001B4E  E00C               	bz	l11319
 12227                           
 12228                           ; BSR set to: 0
 12229  001B50  5179               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 12230  001B52  E00A               	bz	l11319
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;drv_mrf_miwi_24j40.c: 877: {
 12234                           ;drv_mrf_miwi_24j40.c: 878: PHYSetLongRAMAddr(loc++, 0x88);
 12235  001B54  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12236  001B58  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12237  001B5A  0E88               	movlw	136
 12238  001B5C  6E20               	movwf	PHYSetLongRAMAddr@value,c
 12239  001B5E  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12240  001B62                     l11317:
 12241  001B62  0100               	movlb	0	; () banked
 12242  001B64  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12243                           
 12244                           ;drv_mrf_miwi_24j40.c: 879: } else if (transParam.altDestAddr && transParam.altSrcAddr =
      +                          = 0)
 12245  001B66  D020               	goto	l11339
 12246  001B68                     l11319:
 12247                           
 12248                           ; BSR set to: 0
 12249  001B68  5178               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 12250  001B6A  E00A               	bz	l11327
 12251                           
 12252                           ; BSR set to: 0
 12253  001B6C  5179               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 12254  001B6E  E108               	bnz	l11327
 12255                           
 12256                           ; BSR set to: 0
 12257                           ;drv_mrf_miwi_24j40.c: 880: {
 12258                           ;drv_mrf_miwi_24j40.c: 881: PHYSetLongRAMAddr(loc++, 0xC8);
 12259  001B70  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12260  001B74  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12261  001B76  0EC8               	movlw	200
 12262  001B78  6E20               	movwf	PHYSetLongRAMAddr@value,c
 12263  001B7A  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12264  001B7E  D7F1               	goto	l11317
 12265  001B80                     l11327:
 12266                           
 12267                           ; BSR set to: 0
 12268  001B80  5178               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 12269  001B82  E10A               	bnz	l11335
 12270                           
 12271                           ; BSR set to: 0
 12272  001B84  0579               	decf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 12273  001B86  E108               	bnz	l11335
 12274                           
 12275                           ; BSR set to: 0
 12276                           ;drv_mrf_miwi_24j40.c: 883: {
 12277                           ;drv_mrf_miwi_24j40.c: 884: PHYSetLongRAMAddr(loc++, 0x8C);
 12278  001B88  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12279  001B8C  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12280  001B8E  0E8C               	movlw	140
 12281  001B90  6E20               	movwf	PHYSetLongRAMAddr@value,c
 12282  001B92  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12283  001B96  D7E5               	goto	l11317
 12284  001B98                     l11335:
 12285                           
 12286                           ; BSR set to: 0
 12287                           ;drv_mrf_miwi_24j40.c: 886: {
 12288                           ;drv_mrf_miwi_24j40.c: 887: PHYSetLongRAMAddr(loc++, 0xCC);
 12289  001B98  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12290  001B9C  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12291  001B9E  0ECC               	movlw	204
 12292  001BA0  6E20               	movwf	PHYSetLongRAMAddr@value,c
 12293  001BA2  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12294  001BA6  D7DD               	goto	l11317
 12295  001BA8                     l11339:
 12296                           
 12297                           ; BSR set to: 0
 12298                           ;drv_mrf_miwi_24j40.c: 888: }
 12299                           ;drv_mrf_miwi_24j40.c: 891: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 12300  001BA8  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12301  001BAC  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12302  001BAE  C032  F020         	movff	_IEEESeqNum,PHYSetLongRAMAddr@value
 12303  001BB2  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12304  001BB6  2A32               	incf	_IEEESeqNum,f,c
 12305  001BB8  0100               	movlb	0	; () banked
 12306  001BBA  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12307                           
 12308                           ; BSR set to: 0
 12309                           ;drv_mrf_miwi_24j40.c: 894: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[0]);
 12310  001BBC  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12311  001BC0  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12312  001BC2  C07A  F020         	movff	MiMAC_SendPacket@transParam+5,PHYSetLongRAMAddr@value
 12313  001BC6  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12314  001BCA  0100               	movlb	0	; () banked
 12315  001BCC  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12316                           
 12317                           ;drv_mrf_miwi_24j40.c: 895: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[1]);
 12318  001BCE  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12319  001BD2  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12320  001BD4  C07B  F020         	movff	MiMAC_SendPacket@transParam+6,PHYSetLongRAMAddr@value
 12321  001BD8  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12322  001BDC  0100               	movlb	0	; () banked
 12323  001BDE  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12324                           
 12325                           ; BSR set to: 0
 12326                           ;drv_mrf_miwi_24j40.c: 898: if (transParam.flags.bits.broadcast)
 12327  001BE0  A575               	btfss	MiMAC_SendPacket@transParam& (0+255),2,b
 12328  001BE2  D00F               	goto	l11355
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;drv_mrf_miwi_24j40.c: 899: {
 12332                           ;drv_mrf_miwi_24j40.c: 900: PHYSetLongRAMAddr(loc++, 0xFF);
 12333  001BE4  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12334  001BE8  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12335  001BEA  6820               	setf	PHYSetLongRAMAddr@value,c
 12336  001BEC  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12337  001BF0  0100               	movlb	0	; () banked
 12338  001BF2  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12339                           
 12340                           ; BSR set to: 0
 12341                           ;drv_mrf_miwi_24j40.c: 901: PHYSetLongRAMAddr(loc++, 0xFF);
 12342  001BF4  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12343  001BF8  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12344  001BFA  6820               	setf	PHYSetLongRAMAddr@value,c
 12345  001BFC  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12346  001C00  D01C               	goto	L15
 12347  001C02                     l11355:
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;drv_mrf_miwi_24j40.c: 903: {
 12351                           ;drv_mrf_miwi_24j40.c: 904: if (transParam.altDestAddr)
 12352  001C02  5178               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 12353  001C04  E01D               	bz	l154
 12354                           
 12355                           ; BSR set to: 0
 12356                           ;drv_mrf_miwi_24j40.c: 905: {
 12357                           ;drv_mrf_miwi_24j40.c: 906: PHYSetLongRAMAddr(loc++, transParam.DestAddress[0]);
 12358  001C06  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12359  001C0A  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12360  001C0C  C076  FFD9         	movff	MiMAC_SendPacket@transParam+1,fsr2l
 12361  001C10  C077  FFDA         	movff	MiMAC_SendPacket@transParam+2,fsr2h
 12362  001C14  50DF               	movf	indf2,w,c
 12363  001C16  6E20               	movwf	PHYSetLongRAMAddr@value,c
 12364  001C18  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12365  001C1C  0100               	movlb	0	; () banked
 12366  001C1E  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;drv_mrf_miwi_24j40.c: 907: PHYSetLongRAMAddr(loc++, transParam.DestAddress[1]);
 12370  001C20  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12371  001C24  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12372  001C26  EE20 F001          	lfsr	2,1
 12373  001C2A  5176               	movf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 12374  001C2C  26D9               	addwf	fsr2l,f,c
 12375  001C2E  5177               	movf	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 12376  001C30  22DA               	addwfc	fsr2h,f,c
 12377  001C32  50DF               	movf	indf2,w,c
 12378  001C34  6E20               	movwf	PHYSetLongRAMAddr@value,c
 12379  001C36  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12380  001C3A                     L15:
 12381  001C3A  0100               	movlb	0	; () banked
 12382  001C3C  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12383                           
 12384                           ;drv_mrf_miwi_24j40.c: 908: } else
 12385  001C3E  D014               	goto	l11375
 12386  001C40                     l154:
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;drv_mrf_miwi_24j40.c: 909: {
 12390                           ;drv_mrf_miwi_24j40.c: 910: for (i = 0; i < 8; i++)
 12391  001C40  6B8E               	clrf	MiMAC_SendPacket@i& (0+255),b
 12392  001C42                     l11367:
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;drv_mrf_miwi_24j40.c: 911: {
 12396                           ;drv_mrf_miwi_24j40.c: 912: PHYSetLongRAMAddr(loc++, transParam.DestAddress[i]);
 12397  001C42  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12398  001C46  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12399  001C48  518E               	movf	MiMAC_SendPacket@i& (0+255),w,b
 12400  001C4A  2576               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 12401  001C4C  6ED9               	movwf	fsr2l,c
 12402  001C4E  0E00               	movlw	0
 12403  001C50  2177               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 12404  001C52  6EDA               	movwf	fsr2h,c
 12405  001C54  50DF               	movf	indf2,w,c
 12406  001C56  6E20               	movwf	PHYSetLongRAMAddr@value,c
 12407  001C58  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12408  001C5C  0100               	movlb	0	; () banked
 12409  001C5E  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12410                           
 12411                           ; BSR set to: 0
 12412  001C60  2B8E               	incf	MiMAC_SendPacket@i& (0+255),f,b
 12413                           
 12414                           ; BSR set to: 0
 12415  001C62  0E07               	movlw	7
 12416  001C64  658E               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 12417  001C66  D7ED               	goto	l11367
 12418  001C68                     l11375:
 12419                           
 12420                           ; BSR set to: 0
 12421                           ;drv_mrf_miwi_24j40.c: 913: }
 12422                           ;drv_mrf_miwi_24j40.c: 914: }
 12423                           ;drv_mrf_miwi_24j40.c: 915: }
 12424                           ;drv_mrf_miwi_24j40.c: 916: }
 12425                           ;drv_mrf_miwi_24j40.c: 920: if (IntraPAN == 0)
 12426  001C68  518B               	movf	MiMAC_SendPacket@IntraPAN& (0+255),w,b
 12427  001C6A  E112               	bnz	l11383
 12428                           
 12429                           ; BSR set to: 0
 12430                           ;drv_mrf_miwi_24j40.c: 921: {
 12431                           ;drv_mrf_miwi_24j40.c: 922: PHYSetLongRAMAddr(loc++, MAC_PANID.v[0]);
 12432  001C6C  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12433  001C70  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12434  001C72  C03A  F020         	movff	_MAC_PANID,PHYSetLongRAMAddr@value
 12435  001C76  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12436  001C7A  0100               	movlb	0	; () banked
 12437  001C7C  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12438                           
 12439                           ; BSR set to: 0
 12440                           ;drv_mrf_miwi_24j40.c: 923: PHYSetLongRAMAddr(loc++, MAC_PANID.v[1]);
 12441  001C7E  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12442  001C82  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12443  001C84  C03B  F020         	movff	_MAC_PANID+1,PHYSetLongRAMAddr@value
 12444  001C88  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12445  001C8C  0100               	movlb	0	; () banked
 12446  001C8E  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12447  001C90                     l11383:
 12448                           
 12449                           ; BSR set to: 0
 12450                           ;drv_mrf_miwi_24j40.c: 924: }
 12451                           ;drv_mrf_miwi_24j40.c: 928: if (transParam.altSrcAddr)
 12452  001C90  5179               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 12453  001C92  E013               	bz	l159
 12454                           
 12455                           ; BSR set to: 0
 12456                           ;drv_mrf_miwi_24j40.c: 929: {
 12457                           ;drv_mrf_miwi_24j40.c: 930: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[0]);
 12458  001C94  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12459  001C98  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12460  001C9A  C03C  F020         	movff	_myNetworkAddress,PHYSetLongRAMAddr@value
 12461  001C9E  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12462  001CA2  0100               	movlb	0	; () banked
 12463  001CA4  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;drv_mrf_miwi_24j40.c: 931: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[1]);
 12467  001CA6  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12468  001CAA  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12469  001CAC  C03D  F020         	movff	_myNetworkAddress+1,PHYSetLongRAMAddr@value
 12470  001CB0  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12471  001CB4  0100               	movlb	0	; () banked
 12472  001CB6  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12473                           
 12474                           ;drv_mrf_miwi_24j40.c: 932: } else
 12475  001CB8  D014               	goto	l160
 12476  001CBA                     l159:
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;drv_mrf_miwi_24j40.c: 933: {
 12480                           ;drv_mrf_miwi_24j40.c: 934: for (i = 0; i < 8; i++)
 12481  001CBA  6B8E               	clrf	MiMAC_SendPacket@i& (0+255),b
 12482  001CBC                     l11395:
 12483                           
 12484                           ; BSR set to: 0
 12485                           ;drv_mrf_miwi_24j40.c: 935: {
 12486                           ;drv_mrf_miwi_24j40.c: 936: PHYSetLongRAMAddr(loc++, MACInitParams.PAddress[i]);
 12487  001CBC  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12488  001CC0  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12489  001CC2  518E               	movf	MiMAC_SendPacket@i& (0+255),w,b
 12490  001CC4  25D6               	addwf	(_MACInitParams+1)& (0+255),w,b
 12491  001CC6  6ED9               	movwf	fsr2l,c
 12492  001CC8  0E00               	movlw	0
 12493  001CCA  21D7               	addwfc	(_MACInitParams+2)& (0+255),w,b
 12494  001CCC  6EDA               	movwf	fsr2h,c
 12495  001CCE  50DF               	movf	indf2,w,c
 12496  001CD0  6E20               	movwf	PHYSetLongRAMAddr@value,c
 12497  001CD2  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12498  001CD6  0100               	movlb	0	; () banked
 12499  001CD8  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12500                           
 12501                           ; BSR set to: 0
 12502  001CDA  2B8E               	incf	MiMAC_SendPacket@i& (0+255),f,b
 12503                           
 12504                           ; BSR set to: 0
 12505  001CDC  0E07               	movlw	7
 12506  001CDE  658E               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 12507  001CE0  D7ED               	goto	l11395
 12508  001CE2                     l160:
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;drv_mrf_miwi_24j40.c: 937: }
 12512                           ;drv_mrf_miwi_24j40.c: 938: }
 12513                           ;drv_mrf_miwi_24j40.c: 964: for (i = 0; i < MACPayloadLen; i++)
 12514  001CE2  6B8E               	clrf	MiMAC_SendPacket@i& (0+255),b
 12515  001CE4  D010               	goto	l11409
 12516  001CE6                     l11403:
 12517                           
 12518                           ; BSR set to: 0
 12519                           ;drv_mrf_miwi_24j40.c: 965: {
 12520                           ;drv_mrf_miwi_24j40.c: 966: PHYSetLongRAMAddr(loc++, MACPayload[i]);
 12521  001CE6  C08F  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12522  001CEA  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 12523  001CEC  518E               	movf	MiMAC_SendPacket@i& (0+255),w,b
 12524  001CEE  257C               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 12525  001CF0  6ED9               	movwf	fsr2l,c
 12526  001CF2  0E00               	movlw	0
 12527  001CF4  217D               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 12528  001CF6  6EDA               	movwf	fsr2h,c
 12529  001CF8  50DF               	movf	indf2,w,c
 12530  001CFA  6E20               	movwf	PHYSetLongRAMAddr@value,c
 12531  001CFC  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 12532  001D00  0100               	movlb	0	; () banked
 12533  001D02  2B8F               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12534                           
 12535                           ; BSR set to: 0
 12536  001D04  2B8E               	incf	MiMAC_SendPacket@i& (0+255),f,b
 12537  001D06                     l11409:
 12538                           
 12539                           ; BSR set to: 0
 12540  001D06  517E               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 12541  001D08  5D8E               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 12542  001D0A  E3ED               	bnc	l11403
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;drv_mrf_miwi_24j40.c: 967: }
 12546                           ;drv_mrf_miwi_24j40.c: 969: MRF24J40Status.bits.TX_BUSY = 1;
 12547  001D0C  8033               	bsf	_MRF24J40Status,0,c	;volatile
 12548                           
 12549                           ;drv_mrf_miwi_24j40.c: 972: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
 12550  001D0E  BB75               	btfsc	MiMAC_SendPacket@transParam& (0+255),5,b
 12551                           
 12552                           ; BSR set to: 0
 12553  001D10  B575               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 12554  001D12  D004               	goto	l11417
 12555                           
 12556                           ; BSR set to: 0
 12557                           ;drv_mrf_miwi_24j40.c: 973: {
 12558                           ;drv_mrf_miwi_24j40.c: 974: i = 0x05;
 12559  001D14  0E05               	movlw	5
 12560  001D16  6F8E               	movwf	MiMAC_SendPacket@i& (0+255),b
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;drv_mrf_miwi_24j40.c: 976: MRF24J40Status.bits.TX_PENDING_ACK = 1;
 12564  001D18  8233               	bsf	_MRF24J40Status,1,c	;volatile
 12565                           
 12566                           ;drv_mrf_miwi_24j40.c: 978: } else
 12567  001D1A  D003               	goto	l11421
 12568  001D1C                     l11417:
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;drv_mrf_miwi_24j40.c: 979: {
 12572                           ;drv_mrf_miwi_24j40.c: 980: i = 0x01;
 12573  001D1C  0E01               	movlw	1
 12574  001D1E  6F8E               	movwf	MiMAC_SendPacket@i& (0+255),b
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;drv_mrf_miwi_24j40.c: 982: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 12578  001D20  9233               	bcf	_MRF24J40Status,1,c	;volatile
 12579  001D22                     l11421:
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;drv_mrf_miwi_24j40.c: 984: }
 12583                           ;drv_mrf_miwi_24j40.c: 988: PHYSetShortRAMAddr((0x37), i);
 12584  001D22  C08E  F01E         	movff	MiMAC_SendPacket@i,PHYSetShortRAMAddr@value
 12585  001D26  0E37               	movlw	55
 12586  001D28  ECF2  F01C         	call	_PHYSetShortRAMAddr
 12587                           
 12588                           ;drv_mrf_miwi_24j40.c: 991: t1 = MiWi_TickGet();
 12589  001D2C  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
 12590  001D30  C01D  F083         	movff	?_MiWi_TickGet,MiMAC_SendPacket@t1
 12591  001D34  C01E  F084         	movff	?_MiWi_TickGet+1,MiMAC_SendPacket@t1+1
 12592  001D38  C01F  F085         	movff	?_MiWi_TickGet+2,MiMAC_SendPacket@t1+2
 12593  001D3C  C020  F086         	movff	?_MiWi_TickGet+3,MiMAC_SendPacket@t1+3
 12594  001D40                     l11425:
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;drv_mrf_miwi_24j40.c: 993: {
 12598                           ;drv_mrf_miwi_24j40.c: 994: if (PORTBbits.RB1 == 0)
 12599  001D40  A281               	btfss	3969,1,c	;volatile
 12600                           
 12601                           ; BSR set to: 0
 12602                           ;drv_mrf_miwi_24j40.c: 995: {
 12603                           ;drv_mrf_miwi_24j40.c: 996: INTCON3bits.INT1IF = 1;
 12604  001D42  80F0               	bsf	intcon3,0,c	;volatile
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;drv_mrf_miwi_24j40.c: 997: }
 12608                           ;drv_mrf_miwi_24j40.c: 998: if (MRF24J40Status.bits.TX_BUSY == 0)
 12609  001D44  B033               	btfsc	_MRF24J40Status,0,c	;volatile
 12610  001D46  D004               	goto	l11437
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;drv_mrf_miwi_24j40.c: 999: {
 12614                           ;drv_mrf_miwi_24j40.c: 1000: if (MRF24J40Status.bits.TX_FAIL)
 12615  001D48  A433               	btfss	_MRF24J40Status,2,c	;volatile
 12616  001D4A  0C01               	retlw	1
 12617                           
 12618                           ; BSR set to: 0
 12619                           ;drv_mrf_miwi_24j40.c: 1001: {
 12620                           ;drv_mrf_miwi_24j40.c: 1002: MRF24J40Status.bits.TX_FAIL = 0;
 12621  001D4C  9433               	bcf	_MRF24J40Status,2,c	;volatile
 12622                           
 12623                           ;drv_mrf_miwi_24j40.c: 1003: return 0;
 12624  001D4E  0C00               	retlw	0
 12625  001D50                     l11437:
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;drv_mrf_miwi_24j40.c: 1006: }
 12629                           ;drv_mrf_miwi_24j40.c: 1007: t2 = MiWi_TickGet();
 12630  001D50  EC7C  F01A         	call	_MiWi_TickGet	;wreg free
 12631  001D54  C01D  F087         	movff	?_MiWi_TickGet,MiMAC_SendPacket@t2
 12632  001D58  C01E  F088         	movff	?_MiWi_TickGet+1,MiMAC_SendPacket@t2+1
 12633  001D5C  C01F  F089         	movff	?_MiWi_TickGet+2,MiMAC_SendPacket@t2+2
 12634  001D60  C020  F08A         	movff	?_MiWi_TickGet+3,MiMAC_SendPacket@t2+3
 12635                           
 12636                           ; BSR set to: 0
 12637                           ;drv_mrf_miwi_24j40.c: 1008: if ((t2.Val - t1.Val) > (((uint32_t)(8000000)/32)/25))
 12638  001D64  5183               	movf	MiMAC_SendPacket@t1& (0+255),w,b
 12639  001D66  5D87               	subwf	MiMAC_SendPacket@t2& (0+255),w,b
 12640  001D68  6F7F               	movwf	??_MiMAC_SendPacket& (0+255),b
 12641  001D6A  5184               	movf	(MiMAC_SendPacket@t1+1)& (0+255),w,b
 12642  001D6C  5988               	subwfb	(MiMAC_SendPacket@t2+1)& (0+255),w,b
 12643  001D6E  6F80               	movwf	(??_MiMAC_SendPacket+1)& (0+255),b
 12644  001D70  5185               	movf	(MiMAC_SendPacket@t1+2)& (0+255),w,b
 12645  001D72  5989               	subwfb	(MiMAC_SendPacket@t2+2)& (0+255),w,b
 12646  001D74  6F81               	movwf	(??_MiMAC_SendPacket+2)& (0+255),b
 12647  001D76  5186               	movf	(MiMAC_SendPacket@t1+3)& (0+255),w,b
 12648  001D78  598A               	subwfb	(MiMAC_SendPacket@t2+3)& (0+255),w,b
 12649  001D7A  6F82               	movwf	(??_MiMAC_SendPacket+3)& (0+255),b
 12650  001D7C  5182               	movf	(??_MiMAC_SendPacket+3)& (0+255),w,b
 12651  001D7E  1181               	iorwf	(??_MiMAC_SendPacket+2)& (0+255),w,b
 12652  001D80  E105               	bnz	u11600
 12653  001D82  0E11               	movlw	17
 12654  001D84  5D7F               	subwf	??_MiMAC_SendPacket& (0+255),w,b
 12655  001D86  0E27               	movlw	39
 12656  001D88  5980               	subwfb	(??_MiMAC_SendPacket+1)& (0+255),w,b
 12657  001D8A  E3DA               	bnc	l11425
 12658  001D8C                     u11600:
 12659                           
 12660                           ; BSR set to: 0
 12661                           ;drv_mrf_miwi_24j40.c: 1009: {
 12662                           ;drv_mrf_miwi_24j40.c: 1010: InitMRF24J40();
 12663  001D8C  ECDD  F010         	call	_InitMRF24J40	;wreg free
 12664                           
 12665                           ;drv_mrf_miwi_24j40.c: 1011: MiMAC_SetAltAddress(myNetworkAddress.v, MAC_PANID.v);
 12666  001D90  0E3A               	movlw	low _MAC_PANID
 12667  001D92  6E21               	movwf	MiMAC_SetAltAddress@PANID,c
 12668  001D94  0E3C               	movlw	_myNetworkAddress& (0+255)
 12669  001D96  EC87  F019         	call	_MiMAC_SetAltAddress
 12670                           
 12671                           ;drv_mrf_miwi_24j40.c: 1012: MRF24J40Status.bits.TX_BUSY = 0;
 12672  001D9A  9033               	bcf	_MRF24J40Status,0,c	;volatile
 12673  001D9C  0C00               	retlw	0
 12674  001D9E                     __end_of_MiMAC_SendPacket:
 12675                           	opt stack 0
 12676                           tblptru	equ	0xFF8
 12677                           tblptrh	equ	0xFF7
 12678                           tblptrl	equ	0xFF6
 12679                           tablat	equ	0xFF5
 12680                           prodh	equ	0xFF4
 12681                           prodl	equ	0xFF3
 12682                           intcon	equ	0xFF2
 12683                           intcon2	equ	0xFF1
 12684                           intcon3	equ	0xFF0
 12685                           postinc0	equ	0xFEE
 12686                           plusw0	equ	0xFEB
 12687                           wreg	equ	0xFE8
 12688                           indf1	equ	0xFE7
 12689                           postinc1	equ	0xFE6
 12690                           postdec1	equ	0xFE5
 12691                           fsr1h	equ	0xFE2
 12692                           fsr1l	equ	0xFE1
 12693                           indf2	equ	0xFDF
 12694                           postinc2	equ	0xFDE
 12695                           postdec2	equ	0xFDD
 12696                           plusw2	equ	0xFDB
 12697                           fsr2h	equ	0xFDA
 12698                           fsr2l	equ	0xFD9
 12699                           status	equ	0xFD8
 12700                           
 12701 ;; *************** function _MiWi_TickGet *****************
 12702 ;; Defined at:
 12703 ;;		line 114 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/symbol.c"
 12704 ;; Parameters:    Size  Location     Type
 12705 ;;		None
 12706 ;; Auto vars:     Size  Location     Type
 12707 ;;  currentTime     4    1[BANK0 ] struct _MIWI_TICK
 12708 ;;  failureCount    1    0[BANK0 ] unsigned char 
 12709 ;; Return value:  Size  Location     Type
 12710 ;;                  4   28[COMRAM] struct _MIWI_TICK
 12711 ;; Registers used:
 12712 ;;		wreg, status,2, status,0
 12713 ;; Tracked objects:
 12714 ;;		On entry : 0/0
 12715 ;;		On exit  : F/0
 12716 ;;		Unchanged: 0/0
 12717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12719 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12721 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12722 ;;Total ram usage:       10 bytes
 12723 ;; Hardware stack levels used:    1
 12724 ;; Hardware stack levels required when called:    4
 12725 ;; This function calls:
 12726 ;;		Nothing
 12727 ;; This function is called by:
 12728 ;;		_MiMAC_SendPacket
 12729 ;;		_P2PTasks
 12730 ;;		_MiApp_UnicastStar
 12731 ;;		_MiApp_StartConnection
 12732 ;;		_MiApp_EstablishConnection
 12733 ;;		_ButtonPressed
 12734 ;;		_run_star_demo
 12735 ;; This function uses a non-reentrant model
 12736 ;;
 12737                           
 12738                           	psect	text47
 12739  0034F8                     __ptext47:
 12740                           	opt stack 0
 12741  0034F8                     _MiWi_TickGet:
 12742                           	opt stack 24
 12743                           
 12744                           ;symbol.c: 116: MIWI_TICK currentTime;
 12745                           ;symbol.c: 119: uint8_t failureCounter;
 12746                           ;symbol.c: 122: PIE1bits.TMR1IE = 0;
 12747                           
 12748                           ;incstack = 0
 12749  0034F8  909D               	bcf	3997,0,c	;volatile
 12750                           
 12751                           ;symbol.c: 125: currentTime.byte.b2 = 0;
 12752  0034FA  0100               	movlb	0	; () banked
 12753  0034FC  6B63               	clrf	(MiWi_TickGet@currentTime+2)& (0+255),b
 12754                           
 12755                           ;symbol.c: 126: currentTime.byte.b3 = 0;
 12756  0034FE  6B64               	clrf	(MiWi_TickGet@currentTime+3)& (0+255),b
 12757                           
 12758                           ;symbol.c: 128: failureCounter = 0;
 12759  003500  6B60               	clrf	MiWi_TickGet@failureCounter& (0+255),b
 12760  003502                     l881:
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;symbol.c: 131: {
 12764                           ;symbol.c: 132: currentTime.byte.b0 = TMR1L;
 12765  003502  CFCE F061          	movff	4046,MiWi_TickGet@currentTime	;volatile
 12766                           
 12767                           ;symbol.c: 133: currentTime.byte.b1 = TMR1H;
 12768  003506  CFCF F062          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 12769                           
 12770                           ; BSR set to: 0
 12771                           ;symbol.c: 134: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 12772  00350A  2961               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 12773  00350C  E108               	bnz	l884
 12774  00350E  2962               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 12775  003510  E106               	bnz	l884
 12776                           
 12777                           ; BSR set to: 0
 12778  003512  2B60               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 12779  003514  0560               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 12780  003516  6E21               	movwf	??_MiWi_TickGet& (0+255),c
 12781  003518  0E02               	movlw	2
 12782  00351A  6421               	cpfsgt	??_MiWi_TickGet,c
 12783  00351C  D7F2               	goto	l881
 12784  00351E                     l884:
 12785                           
 12786                           ; BSR set to: 0
 12787                           ;symbol.c: 138: if(PIR1bits.TMR1IF)
 12788  00351E  A09E               	btfss	3998,0,c	;volatile
 12789  003520  D004               	goto	l11207
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;symbol.c: 139: {
 12793                           ;symbol.c: 141: {
 12794                           ;symbol.c: 144: currentTime.byte.b2++;
 12795  003522  2B63               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 12796                           
 12797                           ; BSR set to: 0
 12798                           ;symbol.c: 145: if(timerExtension1 == 0xFF)
 12799  003524  2838               	incf	_timerExtension1,w,c	;volatile
 12800  003526  E101               	bnz	l11207
 12801                           
 12802                           ; BSR set to: 0
 12803                           ;symbol.c: 146: {
 12804                           ;symbol.c: 147: currentTime.byte.b3++;
 12805  003528  2B64               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 12806  00352A                     l11207:
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;symbol.c: 148: }
 12810                           ;symbol.c: 149: }
 12811                           ;symbol.c: 150: }
 12812                           ;symbol.c: 153: currentTime.byte.b2 += timerExtension1;
 12813  00352A  5038               	movf	_timerExtension1,w,c	;volatile
 12814  00352C  2763               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 12815                           
 12816                           ; BSR set to: 0
 12817                           ;symbol.c: 154: currentTime.byte.b3 += timerExtension2;
 12818  00352E  5039               	movf	_timerExtension2,w,c	;volatile
 12819  003530  2764               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 12820                           
 12821                           ; BSR set to: 0
 12822                           ;symbol.c: 157: PIE1bits.TMR1IE = 1;
 12823  003532  809D               	bsf	3997,0,c	;volatile
 12824                           
 12825                           ; BSR set to: 0
 12826                           ;symbol.c: 159: return currentTime;
 12827  003534  C061  F01D         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 12828  003538  C062  F01E         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 12829  00353C  C063  F01F         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 12830  003540  C064  F020         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 12831                           
 12832                           ; BSR set to: 0
 12833  003544  0012               	return		;funcret
 12834  003546                     __end_of_MiWi_TickGet:
 12835                           	opt stack 0
 12836                           tblptru	equ	0xFF8
 12837                           tblptrh	equ	0xFF7
 12838                           tblptrl	equ	0xFF6
 12839                           tablat	equ	0xFF5
 12840                           prodh	equ	0xFF4
 12841                           prodl	equ	0xFF3
 12842                           intcon	equ	0xFF2
 12843                           intcon2	equ	0xFF1
 12844                           intcon3	equ	0xFF0
 12845                           postinc0	equ	0xFEE
 12846                           plusw0	equ	0xFEB
 12847                           wreg	equ	0xFE8
 12848                           indf1	equ	0xFE7
 12849                           postinc1	equ	0xFE6
 12850                           postdec1	equ	0xFE5
 12851                           fsr1h	equ	0xFE2
 12852                           fsr1l	equ	0xFE1
 12853                           indf2	equ	0xFDF
 12854                           postinc2	equ	0xFDE
 12855                           postdec2	equ	0xFDD
 12856                           plusw2	equ	0xFDB
 12857                           fsr2h	equ	0xFDA
 12858                           fsr2l	equ	0xFD9
 12859                           status	equ	0xFD8
 12860                           
 12861 ;; *************** function _MiMAC_SetAltAddress *****************
 12862 ;; Defined at:
 12863 ;;		line 1421 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 12864 ;; Parameters:    Size  Location     Type
 12865 ;;  Address         1    wreg     PTR unsigned char 
 12866 ;;		 -> MiApp_StartConnection@tmp(2), MiApp_ProtocolInit@tmp(2), P2PTasks@tmp(2), myNetworkAddress(2), 
 12867 ;;  PANID           1   32[COMRAM] PTR unsigned char 
 12868 ;;		 -> myPANID(2), MAC_PANID(2), 
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;  Address         1   33[COMRAM] PTR unsigned char 
 12871 ;;		 -> MiApp_StartConnection@tmp(2), MiApp_ProtocolInit@tmp(2), P2PTasks@tmp(2), myNetworkAddress(2), 
 12872 ;; Return value:  Size  Location     Type
 12873 ;;                  1    wreg      unsigned char 
 12874 ;; Registers used:
 12875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12876 ;; Tracked objects:
 12877 ;;		On entry : 0/0
 12878 ;;		On exit  : 0/0
 12879 ;;		Unchanged: 0/0
 12880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12881 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12882 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12884 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12885 ;;Total ram usage:        2 bytes
 12886 ;; Hardware stack levels used:    1
 12887 ;; Hardware stack levels required when called:    6
 12888 ;; This function calls:
 12889 ;;		_PHYSetShortRAMAddr
 12890 ;; This function is called by:
 12891 ;;		_MiMAC_SendPacket
 12892 ;;		_P2PTasks
 12893 ;;		_MiApp_ProtocolInit
 12894 ;;		_MiApp_StartConnection
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           
 12898                           	psect	text48
 12899  00330E                     __ptext48:
 12900                           	opt stack 0
 12901  00330E                     _MiMAC_SetAltAddress:
 12902                           	opt stack 16
 12903                           
 12904                           ; BSR set to: 0
 12905                           ;incstack = 0
 12906                           ;MiMAC_SetAltAddress@Address stored from wreg
 12907  00330E  6E22               	movwf	MiMAC_SetAltAddress@Address,c
 12908                           
 12909                           ;drv_mrf_miwi_24j40.c: 1423: myNetworkAddress.v[0] = Address[0];
 12910  003310  5022               	movf	MiMAC_SetAltAddress@Address,w,c
 12911  003312  6ED9               	movwf	fsr2l,c
 12912  003314  6ADA               	clrf	fsr2h,c
 12913  003316  50DF               	movf	indf2,w,c
 12914  003318  6E3C               	movwf	_myNetworkAddress,c
 12915                           
 12916                           ;drv_mrf_miwi_24j40.c: 1424: myNetworkAddress.v[1] = Address[1];
 12917  00331A  5022               	movf	MiMAC_SetAltAddress@Address,w,c
 12918  00331C  6ED9               	movwf	fsr2l,c
 12919  00331E  6ADA               	clrf	fsr2h,c
 12920  003320  2AD9               	incf	fsr2l,f,c
 12921  003322  50DF               	movf	indf2,w,c
 12922  003324  6E3D               	movwf	_myNetworkAddress+1,c
 12923                           
 12924                           ;drv_mrf_miwi_24j40.c: 1425: MAC_PANID.v[0] = PANID[0];
 12925  003326  5021               	movf	MiMAC_SetAltAddress@PANID,w,c
 12926  003328  6ED9               	movwf	fsr2l,c
 12927  00332A  6ADA               	clrf	fsr2h,c
 12928  00332C  50DF               	movf	indf2,w,c
 12929  00332E  6E3A               	movwf	_MAC_PANID,c
 12930                           
 12931                           ;drv_mrf_miwi_24j40.c: 1426: MAC_PANID.v[1] = PANID[1];
 12932  003330  5021               	movf	MiMAC_SetAltAddress@PANID,w,c
 12933  003332  6ED9               	movwf	fsr2l,c
 12934  003334  6ADA               	clrf	fsr2h,c
 12935  003336  2AD9               	incf	fsr2l,f,c
 12936  003338  50DF               	movf	indf2,w,c
 12937  00333A  6E3B               	movwf	_MAC_PANID+1,c
 12938                           
 12939                           ;drv_mrf_miwi_24j40.c: 1428: PHYSetShortRAMAddr((0x07), myNetworkAddress.v[0]);
 12940  00333C  C03C  F01E         	movff	_myNetworkAddress,PHYSetShortRAMAddr@value
 12941  003340  0E07               	movlw	7
 12942  003342  ECF2  F01C         	call	_PHYSetShortRAMAddr
 12943                           
 12944                           ;drv_mrf_miwi_24j40.c: 1429: PHYSetShortRAMAddr((0x09), myNetworkAddress.v[1]);
 12945  003346  C03D  F01E         	movff	_myNetworkAddress+1,PHYSetShortRAMAddr@value
 12946  00334A  0E09               	movlw	9
 12947  00334C  ECF2  F01C         	call	_PHYSetShortRAMAddr
 12948                           
 12949                           ;drv_mrf_miwi_24j40.c: 1430: PHYSetShortRAMAddr((0x03), MAC_PANID.v[0]);
 12950  003350  C03A  F01E         	movff	_MAC_PANID,PHYSetShortRAMAddr@value
 12951  003354  0E03               	movlw	3
 12952  003356  ECF2  F01C         	call	_PHYSetShortRAMAddr
 12953                           
 12954                           ;drv_mrf_miwi_24j40.c: 1431: PHYSetShortRAMAddr((0x05), MAC_PANID.v[1]);
 12955  00335A  C03B  F01E         	movff	_MAC_PANID+1,PHYSetShortRAMAddr@value
 12956  00335E  0E05               	movlw	5
 12957  003360  EFF2  F01C         	goto	_PHYSetShortRAMAddr
 12958  003364                     __end_of_MiMAC_SetAltAddress:
 12959                           	opt stack 0
 12960                           tblptru	equ	0xFF8
 12961                           tblptrh	equ	0xFF7
 12962                           tblptrl	equ	0xFF6
 12963                           tablat	equ	0xFF5
 12964                           prodh	equ	0xFF4
 12965                           prodl	equ	0xFF3
 12966                           intcon	equ	0xFF2
 12967                           intcon2	equ	0xFF1
 12968                           intcon3	equ	0xFF0
 12969                           postinc0	equ	0xFEE
 12970                           plusw0	equ	0xFEB
 12971                           wreg	equ	0xFE8
 12972                           indf1	equ	0xFE7
 12973                           postinc1	equ	0xFE6
 12974                           postdec1	equ	0xFE5
 12975                           fsr1h	equ	0xFE2
 12976                           fsr1l	equ	0xFE1
 12977                           indf2	equ	0xFDF
 12978                           postinc2	equ	0xFDE
 12979                           postdec2	equ	0xFDD
 12980                           plusw2	equ	0xFDB
 12981                           fsr2h	equ	0xFDA
 12982                           fsr2l	equ	0xFD9
 12983                           status	equ	0xFD8
 12984                           
 12985 ;; *************** function _InitMRF24J40 *****************
 12986 ;; Defined at:
 12987 ;;		line 201 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 12988 ;; Parameters:    Size  Location     Type
 12989 ;;		None
 12990 ;; Auto vars:     Size  Location     Type
 12991 ;;  _ms             4   14[BANK0 ] unsigned long 
 12992 ;;  _dcnt           4    6[BANK0 ] unsigned long 
 12993 ;;  _ms             4   10[BANK0 ] unsigned long 
 12994 ;;  _dcnt           4    2[BANK0 ] unsigned long 
 12995 ;;  j               2   18[BANK0 ] unsigned int 
 12996 ;;  i               1   20[BANK0 ] unsigned char 
 12997 ;; Return value:  Size  Location     Type
 12998 ;;                  1    wreg      void 
 12999 ;; Registers used:
 13000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13001 ;; Tracked objects:
 13002 ;;		On entry : F/0
 13003 ;;		On exit  : 0/0
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13007 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13008 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13009 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13010 ;;Total ram usage:       20 bytes
 13011 ;; Hardware stack levels used:    1
 13012 ;; Hardware stack levels required when called:    7
 13013 ;; This function calls:
 13014 ;;		_MiMAC_SetChannel
 13015 ;;		_PHYGetLongRAMAddr
 13016 ;;		_PHYGetShortRAMAddr
 13017 ;;		_PHYSetLongRAMAddr
 13018 ;;		_PHYSetShortRAMAddr
 13019 ;; This function is called by:
 13020 ;;		_MiMAC_SendPacket
 13021 ;;		_MiMAC_Init
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025                           	psect	text49
 13026  0021BA                     __ptext49:
 13027                           	opt stack 0
 13028  0021BA                     _InitMRF24J40:
 13029                           	opt stack 15
 13030                           
 13031                           ; BSR set to: 0
 13032                           ;drv_mrf_miwi_24j40.c: 203: uint8_t i;
 13033                           ;drv_mrf_miwi_24j40.c: 204: uint16_t j;
 13034                           ;drv_mrf_miwi_24j40.c: 207: LATDbits.LATD7 = 0;
 13035                           
 13036                           ;incstack = 0
 13037  0021BA  9E8C               	bcf	3980,7,c	;volatile
 13038                           
 13039                           ; BSR set to: 0
 13040                           ;drv_mrf_miwi_24j40.c: 208: { unsigned long _dcnt; unsigned long _ms; _ms = 3; while(_ms
      +                          ) { _dcnt=((unsigned long)(0.001/(1.0/((8000000)/4))/6)); while(_dcnt--); _ms--; } };
 13041  0021BC  0E03               	movlw	3
 13042  0021BE  6F6A               	movwf	InitMRF24J40@_ms& (0+255),b
 13043  0021C0  6B6B               	clrf	(InitMRF24J40@_ms+1)& (0+255),b
 13044  0021C2  6B6C               	clrf	(InitMRF24J40@_ms+2)& (0+255),b
 13045  0021C4  6B6D               	clrf	(InitMRF24J40@_ms+3)& (0+255),b
 13046  0021C6  D018               	goto	l65
 13047  0021C8                     l11131:
 13048                           
 13049                           ; BSR set to: 0
 13050  0021C8  0E4D               	movlw	77
 13051  0021CA  6F62               	movwf	InitMRF24J40@_dcnt& (0+255),b
 13052  0021CC  0E01               	movlw	1
 13053  0021CE  6F63               	movwf	(InitMRF24J40@_dcnt+1)& (0+255),b
 13054  0021D0  6B64               	clrf	(InitMRF24J40@_dcnt+2)& (0+255),b
 13055  0021D2  6B65               	clrf	(InitMRF24J40@_dcnt+3)& (0+255),b
 13056  0021D4                     l11133:
 13057                           
 13058                           ; BSR set to: 0
 13059  0021D4  0762               	decf	InitMRF24J40@_dcnt& (0+255),f,b
 13060  0021D6  0E00               	movlw	0
 13061  0021D8  5B63               	subwfb	(InitMRF24J40@_dcnt+1)& (0+255),f,b
 13062  0021DA  5B64               	subwfb	(InitMRF24J40@_dcnt+2)& (0+255),f,b
 13063  0021DC  5B65               	subwfb	(InitMRF24J40@_dcnt+3)& (0+255),f,b
 13064  0021DE  2962               	incf	InitMRF24J40@_dcnt& (0+255),w,b
 13065  0021E0  E1F9               	bnz	l11133
 13066  0021E2  2963               	incf	(InitMRF24J40@_dcnt+1)& (0+255),w,b
 13067  0021E4  E1F7               	bnz	l11133
 13068  0021E6  2964               	incf	(InitMRF24J40@_dcnt+2)& (0+255),w,b
 13069  0021E8  E1F5               	bnz	l11133
 13070  0021EA  2965               	incf	(InitMRF24J40@_dcnt+3)& (0+255),w,b
 13071  0021EC  E1F3               	bnz	l11133
 13072                           
 13073                           ; BSR set to: 0
 13074  0021EE  076A               	decf	InitMRF24J40@_ms& (0+255),f,b
 13075  0021F0  0E00               	movlw	0
 13076  0021F2  5B6B               	subwfb	(InitMRF24J40@_ms+1)& (0+255),f,b
 13077  0021F4  5B6C               	subwfb	(InitMRF24J40@_ms+2)& (0+255),f,b
 13078  0021F6  5B6D               	subwfb	(InitMRF24J40@_ms+3)& (0+255),f,b
 13079  0021F8                     l65:
 13080                           
 13081                           ; BSR set to: 0
 13082  0021F8  516A               	movf	InitMRF24J40@_ms& (0+255),w,b
 13083  0021FA  116B               	iorwf	(InitMRF24J40@_ms+1)& (0+255),w,b
 13084  0021FC  116C               	iorwf	(InitMRF24J40@_ms+2)& (0+255),w,b
 13085  0021FE  116D               	iorwf	(InitMRF24J40@_ms+3)& (0+255),w,b
 13086  002200  E1E3               	bnz	l11131
 13087                           
 13088                           ; BSR set to: 0
 13089                           ;drv_mrf_miwi_24j40.c: 210: LATDbits.LATD7 = 1;
 13090  002202  8E8C               	bsf	3980,7,c	;volatile
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;drv_mrf_miwi_24j40.c: 211: { unsigned long _dcnt; unsigned long _ms; _ms = 10; while(_m
      +                          s) { _dcnt=((unsigned long)(0.001/(1.0/((8000000)/4))/6)); while(_dcnt--); _ms--; } };
 13094  002204  0E0A               	movlw	10
 13095  002206  6F6E               	movwf	InitMRF24J40@_ms_636& (0+255),b
 13096  002208  6B6F               	clrf	(InitMRF24J40@_ms_636+1)& (0+255),b
 13097  00220A  6B70               	clrf	(InitMRF24J40@_ms_636+2)& (0+255),b
 13098  00220C  6B71               	clrf	(InitMRF24J40@_ms_636+3)& (0+255),b
 13099  00220E  D018               	goto	l71
 13100  002210                     l11139:
 13101                           
 13102                           ; BSR set to: 0
 13103  002210  0E4D               	movlw	77
 13104  002212  6F66               	movwf	InitMRF24J40@_dcnt_635& (0+255),b
 13105  002214  0E01               	movlw	1
 13106  002216  6F67               	movwf	(InitMRF24J40@_dcnt_635+1)& (0+255),b
 13107  002218  6B68               	clrf	(InitMRF24J40@_dcnt_635+2)& (0+255),b
 13108  00221A  6B69               	clrf	(InitMRF24J40@_dcnt_635+3)& (0+255),b
 13109  00221C                     l11141:
 13110                           
 13111                           ; BSR set to: 0
 13112  00221C  0766               	decf	InitMRF24J40@_dcnt_635& (0+255),f,b
 13113  00221E  0E00               	movlw	0
 13114  002220  5B67               	subwfb	(InitMRF24J40@_dcnt_635+1)& (0+255),f,b
 13115  002222  5B68               	subwfb	(InitMRF24J40@_dcnt_635+2)& (0+255),f,b
 13116  002224  5B69               	subwfb	(InitMRF24J40@_dcnt_635+3)& (0+255),f,b
 13117  002226  2966               	incf	InitMRF24J40@_dcnt_635& (0+255),w,b
 13118  002228  E1F9               	bnz	l11141
 13119  00222A  2967               	incf	(InitMRF24J40@_dcnt_635+1)& (0+255),w,b
 13120  00222C  E1F7               	bnz	l11141
 13121  00222E  2968               	incf	(InitMRF24J40@_dcnt_635+2)& (0+255),w,b
 13122  002230  E1F5               	bnz	l11141
 13123  002232  2969               	incf	(InitMRF24J40@_dcnt_635+3)& (0+255),w,b
 13124  002234  E1F3               	bnz	l11141
 13125                           
 13126                           ; BSR set to: 0
 13127  002236  076E               	decf	InitMRF24J40@_ms_636& (0+255),f,b
 13128  002238  0E00               	movlw	0
 13129  00223A  5B6F               	subwfb	(InitMRF24J40@_ms_636+1)& (0+255),f,b
 13130  00223C  5B70               	subwfb	(InitMRF24J40@_ms_636+2)& (0+255),f,b
 13131  00223E  5B71               	subwfb	(InitMRF24J40@_ms_636+3)& (0+255),f,b
 13132  002240                     l71:
 13133                           
 13134                           ; BSR set to: 0
 13135  002240  516E               	movf	InitMRF24J40@_ms_636& (0+255),w,b
 13136  002242  116F               	iorwf	(InitMRF24J40@_ms_636+1)& (0+255),w,b
 13137  002244  1170               	iorwf	(InitMRF24J40@_ms_636+2)& (0+255),w,b
 13138  002246  1171               	iorwf	(InitMRF24J40@_ms_636+3)& (0+255),w,b
 13139  002248  E1E3               	bnz	l11139
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;drv_mrf_miwi_24j40.c: 214: PHYSetShortRAMAddr((0x55), 0x07);
 13143  00224A  0E07               	movlw	7
 13144  00224C  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 13145  00224E  0E55               	movlw	85
 13146  002250  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13147  002254                     l77:
 13148                           
 13149                           ;drv_mrf_miwi_24j40.c: 216: {
 13150                           ;drv_mrf_miwi_24j40.c: 217: i = PHYGetShortRAMAddr((0x54));
 13151  002254  0E54               	movlw	84
 13152  002256  ECB0  F01C         	call	_PHYGetShortRAMAddr
 13153  00225A  0100               	movlb	0	; () banked
 13154  00225C  6F74               	movwf	InitMRF24J40@i& (0+255),b
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;drv_mrf_miwi_24j40.c: 218: } while ((i & 0x07) != (uint8_t) 0x00);
 13158  00225E  C074  F061         	movff	InitMRF24J40@i,??_InitMRF24J40
 13159  002262  0E07               	movlw	7
 13160  002264  1761               	andwf	??_InitMRF24J40& (0+255),f,b
 13161  002266  E1F6               	bnz	l77
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;drv_mrf_miwi_24j40.c: 220: for (j = 0; j < (uint16_t) 1000; j++)
 13165  002268  6B72               	clrf	InitMRF24J40@j& (0+255),b
 13166  00226A  6B73               	clrf	(InitMRF24J40@j+1)& (0+255),b
 13167  00226C                     l11153:
 13168                           
 13169                           ; BSR set to: 0
 13170                           ;drv_mrf_miwi_24j40.c: 221: {
 13171  00226C  4B72               	infsnz	InitMRF24J40@j& (0+255),f,b
 13172  00226E  2B73               	incf	(InitMRF24J40@j+1)& (0+255),f,b
 13173                           
 13174                           ; BSR set to: 0
 13175  002270  0EE8               	movlw	232
 13176  002272  5D72               	subwf	InitMRF24J40@j& (0+255),w,b
 13177  002274  0E03               	movlw	3
 13178  002276  5973               	subwfb	(InitMRF24J40@j+1)& (0+255),w,b
 13179  002278  E3F9               	bnc	l11153
 13180                           
 13181                           ; BSR set to: 0
 13182                           ;drv_mrf_miwi_24j40.c: 222: }
 13183                           ;drv_mrf_miwi_24j40.c: 225: PHYSetShortRAMAddr((0x1B), 0x01);
 13184  00227A  0E01               	movlw	1
 13185  00227C  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 13186  00227E  0E1B               	movlw	27
 13187  002280  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13188                           
 13189                           ;drv_mrf_miwi_24j40.c: 228: PHYSetShortRAMAddr((0x07), 0xFF);
 13190  002284  681E               	setf	PHYSetShortRAMAddr@value,c
 13191  002286  0E07               	movlw	7
 13192  002288  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13193                           
 13194                           ;drv_mrf_miwi_24j40.c: 229: PHYSetShortRAMAddr((0x09), 0xFF);
 13195  00228C  681E               	setf	PHYSetShortRAMAddr@value,c
 13196  00228E  0E09               	movlw	9
 13197  002290  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13198                           
 13199                           ;drv_mrf_miwi_24j40.c: 230: PHYSetShortRAMAddr((0x03), 0xFF);
 13200  002294  681E               	setf	PHYSetShortRAMAddr@value,c
 13201  002296  0E03               	movlw	3
 13202  002298  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13203                           
 13204                           ;drv_mrf_miwi_24j40.c: 231: PHYSetShortRAMAddr((0x05), 0xFF);
 13205  00229C  681E               	setf	PHYSetShortRAMAddr@value,c
 13206  00229E  0E05               	movlw	5
 13207  0022A0  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13208                           
 13209                           ;drv_mrf_miwi_24j40.c: 234: for (i = 0; i < (uint8_t) 8; i++)
 13210  0022A4  0100               	movlb	0	; () banked
 13211  0022A6  6B74               	clrf	InitMRF24J40@i& (0+255),b
 13212  0022A8                     l11165:
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;drv_mrf_miwi_24j40.c: 235: {
 13216                           ;drv_mrf_miwi_24j40.c: 236: PHYSetShortRAMAddr((0x0B) + i * 2, MACInitParams.PAddress[i]
      +                          );
 13217  0022A8  5174               	movf	InitMRF24J40@i& (0+255),w,b
 13218  0022AA  25D6               	addwf	(_MACInitParams+1)& (0+255),w,b
 13219  0022AC  6ED9               	movwf	fsr2l,c
 13220  0022AE  0E00               	movlw	0
 13221  0022B0  21D7               	addwfc	(_MACInitParams+2)& (0+255),w,b
 13222  0022B2  6EDA               	movwf	fsr2h,c
 13223  0022B4  50DF               	movf	indf2,w,c
 13224  0022B6  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 13225  0022B8  5174               	movf	InitMRF24J40@i& (0+255),w,b
 13226  0022BA  0D02               	mullw	2
 13227  0022BC  50F3               	movf	prodl,w,c
 13228  0022BE  0F0B               	addlw	11
 13229  0022C0  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13230  0022C4  0100               	movlb	0	; () banked
 13231  0022C6  2B74               	incf	InitMRF24J40@i& (0+255),f,b
 13232                           
 13233                           ; BSR set to: 0
 13234  0022C8  0E07               	movlw	7
 13235  0022CA  6574               	cpfsgt	InitMRF24J40@i& (0+255),b
 13236  0022CC  D7ED               	goto	l11165
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;drv_mrf_miwi_24j40.c: 237: }
 13240                           ;drv_mrf_miwi_24j40.c: 240: PHYSetLongRAMAddr((0x202), 0x80);
 13241  0022CE  0E02               	movlw	2
 13242  0022D0  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 13243  0022D2  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 13244  0022D4  0E80               	movlw	128
 13245  0022D6  6E20               	movwf	PHYSetLongRAMAddr@value,c
 13246  0022D8  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 13247                           
 13248                           ;drv_mrf_miwi_24j40.c: 263: PHYSetLongRAMAddr((0x203), 0x00);
 13249  0022DC  0E02               	movlw	2
 13250  0022DE  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 13251  0022E0  0E03               	movlw	3
 13252  0022E2  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 13253  0022E4  6A20               	clrf	PHYSetLongRAMAddr@value,c
 13254  0022E6  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 13255                           
 13256                           ;drv_mrf_miwi_24j40.c: 267: PHYSetLongRAMAddr((0x206), 0x90);
 13257  0022EA  0E02               	movlw	2
 13258  0022EC  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 13259  0022EE  0E06               	movlw	6
 13260  0022F0  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 13261  0022F2  0E90               	movlw	144
 13262  0022F4  6E20               	movwf	PHYSetLongRAMAddr@value,c
 13263  0022F6  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 13264                           
 13265                           ;drv_mrf_miwi_24j40.c: 269: PHYSetLongRAMAddr((0x207), 0x80);
 13266  0022FA  0E02               	movlw	2
 13267  0022FC  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 13268  0022FE  0E07               	movlw	7
 13269  002300  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 13270  002302  0E80               	movlw	128
 13271  002304  6E20               	movwf	PHYSetLongRAMAddr@value,c
 13272  002306  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 13273                           
 13274                           ;drv_mrf_miwi_24j40.c: 271: PHYSetLongRAMAddr((0x208), 0x10);
 13275  00230A  0E02               	movlw	2
 13276  00230C  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 13277  00230E  0E08               	movlw	8
 13278  002310  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 13279  002312  0E10               	movlw	16
 13280  002314  6E20               	movwf	PHYSetLongRAMAddr@value,c
 13281  002316  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 13282                           
 13283                           ;drv_mrf_miwi_24j40.c: 273: PHYSetLongRAMAddr((0x220), 0x21);
 13284  00231A  0E02               	movlw	2
 13285  00231C  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 13286  00231E  0E20               	movlw	32
 13287  002320  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 13288  002322  0E21               	movlw	33
 13289  002324  6E20               	movwf	PHYSetLongRAMAddr@value,c
 13290  002326  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 13291                           
 13292                           ;drv_mrf_miwi_24j40.c: 276: PHYSetShortRAMAddr((0x75), 0x80);
 13293  00232A  0E80               	movlw	128
 13294  00232C  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 13295  00232E  0E75               	movlw	117
 13296  002330  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13297                           
 13298                           ;drv_mrf_miwi_24j40.c: 278: PHYSetShortRAMAddr((0x7D), 0x40);
 13299  002334  0E40               	movlw	64
 13300  002336  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 13301  002338  0E7D               	movlw	125
 13302  00233A  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13303                           
 13304                           ;drv_mrf_miwi_24j40.c: 280: PHYSetShortRAMAddr((0x7F), 0x60);
 13305  00233E  0E60               	movlw	96
 13306  002340  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 13307  002342  0E7F               	movlw	127
 13308  002344  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13309                           
 13310                           ;drv_mrf_miwi_24j40.c: 291: PHYSetShortRAMAddr((0x31), 0x98);
 13311  002348  0E98               	movlw	152
 13312  00234A  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 13313  00234C  0E31               	movlw	49
 13314  00234E  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13315                           
 13316                           ;drv_mrf_miwi_24j40.c: 292: PHYSetShortRAMAddr((0x5D), 0x95);
 13317  002352  0E95               	movlw	149
 13318  002354  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 13319  002356  0E5D               	movlw	93
 13320  002358  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13321  00235C                     l11183:
 13322                           
 13323                           ;drv_mrf_miwi_24j40.c: 296: {
 13324                           ;drv_mrf_miwi_24j40.c: 297: i = PHYGetLongRAMAddr((0x20f));
 13325  00235C  0E02               	movlw	2
 13326  00235E  6E1F               	movwf	PHYGetLongRAMAddr@address+1,c
 13327  002360  0E0F               	movlw	15
 13328  002362  6E1E               	movwf	PHYGetLongRAMAddr@address,c
 13329  002364  ECDB  F019         	call	_PHYGetLongRAMAddr	;wreg free
 13330  002368  0100               	movlb	0	; () banked
 13331  00236A  6F74               	movwf	InitMRF24J40@i& (0+255),b
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;drv_mrf_miwi_24j40.c: 298: }
 13335                           ;drv_mrf_miwi_24j40.c: 299: while ((i&0xA0) != 0xA0);
 13336  00236C  5174               	movf	InitMRF24J40@i& (0+255),w,b
 13337  00236E  0BA0               	andlw	160
 13338  002370  0AA0               	xorlw	160
 13339  002372  E1F4               	bnz	l11183
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;drv_mrf_miwi_24j40.c: 301: PHYSetShortRAMAddr((0x65), 0xE6);
 13343  002374  0EE6               	movlw	230
 13344  002376  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 13345  002378  0E65               	movlw	101
 13346  00237A  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13347                           
 13348                           ;drv_mrf_miwi_24j40.c: 308: PHYSetLongRAMAddr((0x200), 0x03);
 13349  00237E  0E02               	movlw	2
 13350  002380  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 13351  002382  6A1E               	clrf	PHYSetLongRAMAddr@address,c
 13352  002384  0E03               	movlw	3
 13353  002386  6E20               	movwf	PHYSetLongRAMAddr@value,c
 13354  002388  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 13355                           
 13356                           ;drv_mrf_miwi_24j40.c: 309: PHYSetLongRAMAddr((0x201), 0x02);
 13357  00238C  0E02               	movlw	2
 13358  00238E  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 13359  002390  0E01               	movlw	1
 13360  002392  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 13361  002394  0E02               	movlw	2
 13362  002396  6E20               	movwf	PHYSetLongRAMAddr@value,c
 13363  002398  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 13364                           
 13365                           ;drv_mrf_miwi_24j40.c: 311: MiMAC_SetChannel(MACCurrentChannel, 0);
 13366  00239C  6A24               	clrf	MiMAC_SetChannel@offsetFreq,c
 13367  00239E  0100               	movlb	0	; () banked
 13368  0023A0  51DF               	movf	_MACCurrentChannel& (0+255),w,b
 13369  0023A2  EF98  F01B         	goto	_MiMAC_SetChannel
 13370  0023A6                     __end_of_InitMRF24J40:
 13371                           	opt stack 0
 13372                           tblptru	equ	0xFF8
 13373                           tblptrh	equ	0xFF7
 13374                           tblptrl	equ	0xFF6
 13375                           tablat	equ	0xFF5
 13376                           prodh	equ	0xFF4
 13377                           prodl	equ	0xFF3
 13378                           intcon	equ	0xFF2
 13379                           intcon2	equ	0xFF1
 13380                           intcon3	equ	0xFF0
 13381                           postinc0	equ	0xFEE
 13382                           plusw0	equ	0xFEB
 13383                           wreg	equ	0xFE8
 13384                           indf1	equ	0xFE7
 13385                           postinc1	equ	0xFE6
 13386                           postdec1	equ	0xFE5
 13387                           fsr1h	equ	0xFE2
 13388                           fsr1l	equ	0xFE1
 13389                           indf2	equ	0xFDF
 13390                           postinc2	equ	0xFDE
 13391                           postdec2	equ	0xFDD
 13392                           plusw2	equ	0xFDB
 13393                           fsr2h	equ	0xFDA
 13394                           fsr2l	equ	0xFD9
 13395                           status	equ	0xFD8
 13396                           
 13397 ;; *************** function _PHYGetShortRAMAddr *****************
 13398 ;; Defined at:
 13399 ;;		line 154 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;  address         1    wreg     unsigned char 
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;  address         1   29[COMRAM] unsigned char 
 13404 ;;  tmpRFIE         1   31[COMRAM] volatile unsigned char 
 13405 ;;  toReturn        1   30[COMRAM] unsigned char 
 13406 ;; Return value:  Size  Location     Type
 13407 ;;                  1    wreg      unsigned char 
 13408 ;; Registers used:
 13409 ;;		wreg, status,2, cstack
 13410 ;; Tracked objects:
 13411 ;;		On entry : 0/0
 13412 ;;		On exit  : 0/0
 13413 ;;		Unchanged: 0/0
 13414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13416 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13418 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13419 ;;Total ram usage:        3 bytes
 13420 ;; Hardware stack levels used:    1
 13421 ;; Hardware stack levels required when called:    5
 13422 ;; This function calls:
 13423 ;;		_SPI1_Exchange8bit
 13424 ;; This function is called by:
 13425 ;;		_InitMRF24J40
 13426 ;; This function uses a non-reentrant model
 13427 ;;
 13428                           
 13429                           	psect	text50
 13430  003960                     __ptext50:
 13431                           	opt stack 0
 13432  003960                     _PHYGetShortRAMAddr:
 13433                           	opt stack 16
 13434                           
 13435                           ;incstack = 0
 13436                           ;PHYGetShortRAMAddr@address stored from wreg
 13437  003960  6E1E               	movwf	PHYGetShortRAMAddr@address,c
 13438                           
 13439                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 13440                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 13441  003962  0E00               	movlw	0
 13442  003964  B6F0               	btfsc	intcon3,3,c	;volatile
 13443  003966  0E01               	movlw	1
 13444  003968  6E20               	movwf	PHYGetShortRAMAddr@tmpRFIE,c	;volatile
 13445                           
 13446                           ;drv_mrf_miwi_24j40.c: 159: INTCON3bits.INT1IE = 0;
 13447  00396A  96F0               	bcf	intcon3,3,c	;volatile
 13448                           
 13449                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
 13450  00396C  968A               	bcf	3978,3,c	;volatile
 13451                           
 13452                           ;drv_mrf_miwi_24j40.c: 161: SPI1_Exchange8bit(address);
 13453  00396E  501E               	movf	PHYGetShortRAMAddr@address,w,c
 13454  003970  ECFE  F01D         	call	_SPI1_Exchange8bit
 13455                           
 13456                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPI1_Exchange8bit(0x00);
 13457  003974  0E00               	movlw	0
 13458  003976  ECFE  F01D         	call	_SPI1_Exchange8bit
 13459  00397A  6E1F               	movwf	PHYGetShortRAMAddr@toReturn,c
 13460                           
 13461                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
 13462  00397C  868A               	bsf	3978,3,c	;volatile
 13463                           
 13464                           ;drv_mrf_miwi_24j40.c: 164: INTCON3bits.INT1IE = tmpRFIE;
 13465  00397E  B020               	btfsc	PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
 13466  003980  D002               	bra	u11145
 13467  003982  96F0               	bcf	intcon3,3,c	;volatile
 13468  003984  D001               	bra	u11146
 13469  003986                     u11145:
 13470  003986  86F0               	bsf	intcon3,3,c	;volatile
 13471  003988                     u11146:
 13472                           
 13473                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 13474  003988  501F               	movf	PHYGetShortRAMAddr@toReturn,w,c
 13475  00398A  0012               	return		;funcret
 13476  00398C                     __end_of_PHYGetShortRAMAddr:
 13477                           	opt stack 0
 13478                           tblptru	equ	0xFF8
 13479                           tblptrh	equ	0xFF7
 13480                           tblptrl	equ	0xFF6
 13481                           tablat	equ	0xFF5
 13482                           prodh	equ	0xFF4
 13483                           prodl	equ	0xFF3
 13484                           intcon	equ	0xFF2
 13485                           intcon2	equ	0xFF1
 13486                           intcon3	equ	0xFF0
 13487                           postinc0	equ	0xFEE
 13488                           plusw0	equ	0xFEB
 13489                           wreg	equ	0xFE8
 13490                           indf1	equ	0xFE7
 13491                           postinc1	equ	0xFE6
 13492                           postdec1	equ	0xFE5
 13493                           fsr1h	equ	0xFE2
 13494                           fsr1l	equ	0xFE1
 13495                           indf2	equ	0xFDF
 13496                           postinc2	equ	0xFDE
 13497                           postdec2	equ	0xFDD
 13498                           plusw2	equ	0xFDB
 13499                           fsr2h	equ	0xFDA
 13500                           fsr2l	equ	0xFD9
 13501                           status	equ	0xFD8
 13502                           
 13503 ;; *************** function _PHYGetLongRAMAddr *****************
 13504 ;; Defined at:
 13505 ;;		line 185 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;  address         2   29[COMRAM] unsigned int 
 13508 ;; Auto vars:     Size  Location     Type
 13509 ;;  tmpRFIE         1   34[COMRAM] volatile unsigned char 
 13510 ;;  toReturn        1   33[COMRAM] unsigned char 
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  1    wreg      unsigned char 
 13513 ;; Registers used:
 13514 ;;		wreg, status,2, status,0, cstack
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 0/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13521 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13523 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13524 ;;Total ram usage:        6 bytes
 13525 ;; Hardware stack levels used:    1
 13526 ;; Hardware stack levels required when called:    5
 13527 ;; This function calls:
 13528 ;;		_SPI1_Exchange8bit
 13529 ;; This function is called by:
 13530 ;;		_InitMRF24J40
 13531 ;; This function uses a non-reentrant model
 13532 ;;
 13533                           
 13534                           	psect	text51
 13535  0033B6                     __ptext51:
 13536                           	opt stack 0
 13537  0033B6                     _PHYGetLongRAMAddr:
 13538                           	opt stack 16
 13539                           
 13540                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 13541                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 13542                           
 13543                           ;incstack = 0
 13544  0033B6  0E00               	movlw	0
 13545  0033B8  B6F0               	btfsc	intcon3,3,c	;volatile
 13546  0033BA  0E01               	movlw	1
 13547  0033BC  6E23               	movwf	PHYGetLongRAMAddr@tmpRFIE,c	;volatile
 13548                           
 13549                           ;drv_mrf_miwi_24j40.c: 190: INTCON3bits.INT1IE = 0;
 13550  0033BE  96F0               	bcf	intcon3,3,c	;volatile
 13551                           
 13552                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
 13553  0033C0  968A               	bcf	3978,3,c	;volatile
 13554                           
 13555                           ;drv_mrf_miwi_24j40.c: 192: SPI1_Exchange8bit(((address >> 3)&0x7F) | 0x80);
 13556  0033C2  C01E  F020         	movff	PHYGetLongRAMAddr@address,??_PHYGetLongRAMAddr
 13557  0033C6  C01F  F021         	movff	PHYGetLongRAMAddr@address+1,??_PHYGetLongRAMAddr+1
 13558  0033CA  90D8               	bcf	status,0,c
 13559  0033CC  3221               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 13560  0033CE  3220               	rrcf	??_PHYGetLongRAMAddr,f,c
 13561  0033D0  90D8               	bcf	status,0,c
 13562  0033D2  3221               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 13563  0033D4  3220               	rrcf	??_PHYGetLongRAMAddr,f,c
 13564  0033D6  90D8               	bcf	status,0,c
 13565  0033D8  3221               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 13566  0033DA  3220               	rrcf	??_PHYGetLongRAMAddr,f,c
 13567  0033DC  5020               	movf	??_PHYGetLongRAMAddr,w,c
 13568  0033DE  0B7F               	andlw	127
 13569  0033E0  0980               	iorlw	128
 13570  0033E2  ECFE  F01D         	call	_SPI1_Exchange8bit
 13571                           
 13572                           ;drv_mrf_miwi_24j40.c: 193: SPI1_Exchange8bit(((address << 5)&0xE0));
 13573  0033E6  381E               	swapf	PHYGetLongRAMAddr@address,w,c
 13574  0033E8  46E8               	rlncf	wreg,f,c
 13575  0033EA  0BE0               	andlw	224
 13576  0033EC  ECFE  F01D         	call	_SPI1_Exchange8bit
 13577                           
 13578                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPI1_Exchange8bit(0x00);
 13579  0033F0  0E00               	movlw	0
 13580  0033F2  ECFE  F01D         	call	_SPI1_Exchange8bit
 13581  0033F6  6E22               	movwf	PHYGetLongRAMAddr@toReturn,c
 13582                           
 13583                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
 13584  0033F8  868A               	bsf	3978,3,c	;volatile
 13585                           
 13586                           ;drv_mrf_miwi_24j40.c: 196: INTCON3bits.INT1IE = tmpRFIE;
 13587  0033FA  B023               	btfsc	PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
 13588  0033FC  D002               	bra	u11155
 13589  0033FE  96F0               	bcf	intcon3,3,c	;volatile
 13590  003400  D001               	bra	u11156
 13591  003402                     u11155:
 13592  003402  86F0               	bsf	intcon3,3,c	;volatile
 13593  003404                     u11156:
 13594                           
 13595                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 13596  003404  5022               	movf	PHYGetLongRAMAddr@toReturn,w,c
 13597  003406  0012               	return		;funcret
 13598  003408                     __end_of_PHYGetLongRAMAddr:
 13599                           	opt stack 0
 13600                           tblptru	equ	0xFF8
 13601                           tblptrh	equ	0xFF7
 13602                           tblptrl	equ	0xFF6
 13603                           tablat	equ	0xFF5
 13604                           prodh	equ	0xFF4
 13605                           prodl	equ	0xFF3
 13606                           intcon	equ	0xFF2
 13607                           intcon2	equ	0xFF1
 13608                           intcon3	equ	0xFF0
 13609                           postinc0	equ	0xFEE
 13610                           plusw0	equ	0xFEB
 13611                           wreg	equ	0xFE8
 13612                           indf1	equ	0xFE7
 13613                           postinc1	equ	0xFE6
 13614                           postdec1	equ	0xFE5
 13615                           fsr1h	equ	0xFE2
 13616                           fsr1l	equ	0xFE1
 13617                           indf2	equ	0xFDF
 13618                           postinc2	equ	0xFDE
 13619                           postdec2	equ	0xFDD
 13620                           plusw2	equ	0xFDB
 13621                           fsr2h	equ	0xFDA
 13622                           fsr2l	equ	0xFD9
 13623                           status	equ	0xFD8
 13624                           
 13625 ;; *************** function _MiMAC_SetChannel *****************
 13626 ;; Defined at:
 13627 ;;		line 1302 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 13628 ;; Parameters:    Size  Location     Type
 13629 ;;  channel         1    wreg     unsigned char 
 13630 ;;  offsetFreq      1   35[COMRAM] unsigned char 
 13631 ;; Auto vars:     Size  Location     Type
 13632 ;;  channel         1    0[BANK0 ] unsigned char 
 13633 ;; Return value:  Size  Location     Type
 13634 ;;                  1    wreg      unsigned char 
 13635 ;; Registers used:
 13636 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13637 ;; Tracked objects:
 13638 ;;		On entry : F/0
 13639 ;;		On exit  : 0/0
 13640 ;;		Unchanged: 0/0
 13641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13642 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13643 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13645 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13646 ;;Total ram usage:        2 bytes
 13647 ;; Hardware stack levels used:    1
 13648 ;; Hardware stack levels required when called:    6
 13649 ;; This function calls:
 13650 ;;		_PHYSetLongRAMAddr
 13651 ;;		_PHYSetShortRAMAddr
 13652 ;; This function is called by:
 13653 ;;		_InitMRF24J40
 13654 ;;		_MiApp_SetChannel
 13655 ;; This function uses a non-reentrant model
 13656 ;;
 13657                           
 13658                           	psect	text52
 13659  003730                     __ptext52:
 13660                           	opt stack 0
 13661  003730                     _MiMAC_SetChannel:
 13662                           	opt stack 15
 13663                           
 13664                           ;incstack = 0
 13665                           ;MiMAC_SetChannel@channel stored from wreg
 13666  003730  6F60               	movwf	MiMAC_SetChannel@channel& (0+255),b
 13667                           
 13668                           ;drv_mrf_miwi_24j40.c: 1304: if (channel < 11 || channel > 26)
 13669  003732  0E0A               	movlw	10
 13670  003734  0100               	movlb	0	; () banked
 13671  003736  6560               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 13672  003738  0C00               	retlw	0
 13673                           
 13674                           ; BSR set to: 0
 13675  00373A  0E1A               	movlw	26
 13676  00373C  6560               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
 13677  00373E  D001               	goto	l178
 13678  003740  0C00               	retlw	0
 13679  003742                     l178:
 13680                           
 13681                           ; BSR set to: 0
 13682                           ;drv_mrf_miwi_24j40.c: 1307: }
 13683                           ;drv_mrf_miwi_24j40.c: 1316: MACCurrentChannel = channel;
 13684  003742  C060  F0DF         	movff	MiMAC_SetChannel@channel,_MACCurrentChannel
 13685                           
 13686                           ; BSR set to: 0
 13687                           ;drv_mrf_miwi_24j40.c: 1317: PHYSetLongRAMAddr((0x200), ((channel - 11) << 4) | 0x03);
 13688  003746  0E02               	movlw	2
 13689  003748  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 13690  00374A  6A1E               	clrf	PHYSetLongRAMAddr@address,c
 13691  00374C  5160               	movf	MiMAC_SetChannel@channel& (0+255),w,b
 13692  00374E  0D10               	mullw	16
 13693  003750  50F3               	movf	prodl,w,c
 13694  003752  0F50               	addlw	80
 13695  003754  0903               	iorlw	3
 13696  003756  6E20               	movwf	PHYSetLongRAMAddr@value,c
 13697  003758  EC2D  F01A         	call	_PHYSetLongRAMAddr	;wreg free
 13698                           
 13699                           ;drv_mrf_miwi_24j40.c: 1318: PHYSetShortRAMAddr((0x6D), 0x04);
 13700  00375C  0E04               	movlw	4
 13701  00375E  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 13702  003760  0E6D               	movlw	109
 13703  003762  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13704                           
 13705                           ;drv_mrf_miwi_24j40.c: 1319: PHYSetShortRAMAddr((0x6D), 0x00);
 13706  003766  6A1E               	clrf	PHYSetShortRAMAddr@value,c
 13707  003768  0E6D               	movlw	109
 13708  00376A  ECF2  F01C         	call	_PHYSetShortRAMAddr
 13709                           
 13710                           ;drv_mrf_miwi_24j40.c: 1320: return 1;
 13711  00376E  0C01               	retlw	1	;funcret
 13712  003770                     __end_of_MiMAC_SetChannel:
 13713                           	opt stack 0
 13714                           tblptru	equ	0xFF8
 13715                           tblptrh	equ	0xFF7
 13716                           tblptrl	equ	0xFF6
 13717                           tablat	equ	0xFF5
 13718                           prodh	equ	0xFF4
 13719                           prodl	equ	0xFF3
 13720                           intcon	equ	0xFF2
 13721                           intcon2	equ	0xFF1
 13722                           intcon3	equ	0xFF0
 13723                           postinc0	equ	0xFEE
 13724                           plusw0	equ	0xFEB
 13725                           wreg	equ	0xFE8
 13726                           indf1	equ	0xFE7
 13727                           postinc1	equ	0xFE6
 13728                           postdec1	equ	0xFE5
 13729                           fsr1h	equ	0xFE2
 13730                           fsr1l	equ	0xFE1
 13731                           indf2	equ	0xFDF
 13732                           postinc2	equ	0xFDE
 13733                           postdec2	equ	0xFDD
 13734                           plusw2	equ	0xFDB
 13735                           fsr2h	equ	0xFDA
 13736                           fsr2l	equ	0xFD9
 13737                           status	equ	0xFD8
 13738                           
 13739 ;; *************** function _PHYSetShortRAMAddr *****************
 13740 ;; Defined at:
 13741 ;;		line 124 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 13742 ;; Parameters:    Size  Location     Type
 13743 ;;  address         1    wreg     unsigned char 
 13744 ;;  value           1   29[COMRAM] unsigned char 
 13745 ;; Auto vars:     Size  Location     Type
 13746 ;;  address         1   30[COMRAM] unsigned char 
 13747 ;;  tmpRFIE         1   31[COMRAM] volatile unsigned char 
 13748 ;; Return value:  Size  Location     Type
 13749 ;;                  1    wreg      void 
 13750 ;; Registers used:
 13751 ;;		wreg, status,2, cstack
 13752 ;; Tracked objects:
 13753 ;;		On entry : 0/0
 13754 ;;		On exit  : 0/0
 13755 ;;		Unchanged: 0/0
 13756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13757 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13760 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13761 ;;Total ram usage:        3 bytes
 13762 ;; Hardware stack levels used:    1
 13763 ;; Hardware stack levels required when called:    5
 13764 ;; This function calls:
 13765 ;;		_SPI1_Exchange8bit
 13766 ;; This function is called by:
 13767 ;;		_InitMRF24J40
 13768 ;;		_MiMAC_SendPacket
 13769 ;;		_MiMAC_SetChannel
 13770 ;;		_MiMAC_SetAltAddress
 13771 ;; This function uses a non-reentrant model
 13772 ;;
 13773                           
 13774                           	psect	text53
 13775  0039E4                     __ptext53:
 13776                           	opt stack 0
 13777  0039E4                     _PHYSetShortRAMAddr:
 13778                           	opt stack 17
 13779                           
 13780                           ;incstack = 0
 13781                           ;PHYSetShortRAMAddr@address stored from wreg
 13782  0039E4  6E1F               	movwf	PHYSetShortRAMAddr@address,c
 13783                           
 13784                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 13785  0039E6  0E00               	movlw	0
 13786  0039E8  B6F0               	btfsc	intcon3,3,c	;volatile
 13787  0039EA  0E01               	movlw	1
 13788  0039EC  6E20               	movwf	PHYSetShortRAMAddr@tmpRFIE,c	;volatile
 13789                           
 13790                           ;drv_mrf_miwi_24j40.c: 128: INTCON3bits.INT1IE = 0;
 13791  0039EE  96F0               	bcf	intcon3,3,c	;volatile
 13792                           
 13793                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
 13794  0039F0  968A               	bcf	3978,3,c	;volatile
 13795                           
 13796                           ;drv_mrf_miwi_24j40.c: 130: SPI1_Exchange8bit(address);
 13797  0039F2  501F               	movf	PHYSetShortRAMAddr@address,w,c
 13798  0039F4  ECFE  F01D         	call	_SPI1_Exchange8bit
 13799                           
 13800                           ;drv_mrf_miwi_24j40.c: 131: SPI1_Exchange8bit(value);
 13801  0039F8  501E               	movf	PHYSetShortRAMAddr@value,w,c
 13802  0039FA  ECFE  F01D         	call	_SPI1_Exchange8bit
 13803                           
 13804                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
 13805  0039FE  868A               	bsf	3978,3,c	;volatile
 13806                           
 13807                           ;drv_mrf_miwi_24j40.c: 133: INTCON3bits.INT1IE = tmpRFIE;
 13808  003A00  B020               	btfsc	PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
 13809  003A02  D002               	bra	u11135
 13810  003A04  96F0               	bcf	intcon3,3,c	;volatile
 13811  003A06  D001               	bra	u11136
 13812  003A08                     u11135:
 13813  003A08  86F0               	bsf	intcon3,3,c	;volatile
 13814  003A0A                     u11136:
 13815  003A0A  0012               	return		;funcret
 13816  003A0C                     __end_of_PHYSetShortRAMAddr:
 13817                           	opt stack 0
 13818                           tblptru	equ	0xFF8
 13819                           tblptrh	equ	0xFF7
 13820                           tblptrl	equ	0xFF6
 13821                           tablat	equ	0xFF5
 13822                           prodh	equ	0xFF4
 13823                           prodl	equ	0xFF3
 13824                           intcon	equ	0xFF2
 13825                           intcon2	equ	0xFF1
 13826                           intcon3	equ	0xFF0
 13827                           postinc0	equ	0xFEE
 13828                           plusw0	equ	0xFEB
 13829                           wreg	equ	0xFE8
 13830                           indf1	equ	0xFE7
 13831                           postinc1	equ	0xFE6
 13832                           postdec1	equ	0xFE5
 13833                           fsr1h	equ	0xFE2
 13834                           fsr1l	equ	0xFE1
 13835                           indf2	equ	0xFDF
 13836                           postinc2	equ	0xFDE
 13837                           postdec2	equ	0xFDD
 13838                           plusw2	equ	0xFDB
 13839                           fsr2h	equ	0xFDA
 13840                           fsr2l	equ	0xFD9
 13841                           status	equ	0xFD8
 13842                           
 13843 ;; *************** function _PHYSetLongRAMAddr *****************
 13844 ;; Defined at:
 13845 ;;		line 90 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 13846 ;; Parameters:    Size  Location     Type
 13847 ;;  address         2   29[COMRAM] unsigned int 
 13848 ;;  value           1   31[COMRAM] unsigned char 
 13849 ;; Auto vars:     Size  Location     Type
 13850 ;;  tmpRFIE         1   34[COMRAM] volatile unsigned char 
 13851 ;; Return value:  Size  Location     Type
 13852 ;;                  1    wreg      void 
 13853 ;; Registers used:
 13854 ;;		wreg, status,2, status,0, cstack
 13855 ;; Tracked objects:
 13856 ;;		On entry : 0/0
 13857 ;;		On exit  : 0/0
 13858 ;;		Unchanged: 0/0
 13859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13860 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13863 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13864 ;;Total ram usage:        6 bytes
 13865 ;; Hardware stack levels used:    1
 13866 ;; Hardware stack levels required when called:    5
 13867 ;; This function calls:
 13868 ;;		_SPI1_Exchange8bit
 13869 ;; This function is called by:
 13870 ;;		_InitMRF24J40
 13871 ;;		_MiMAC_SendPacket
 13872 ;;		_MiMAC_SetChannel
 13873 ;; This function uses a non-reentrant model
 13874 ;;
 13875                           
 13876                           	psect	text54
 13877  00345A                     __ptext54:
 13878                           	opt stack 0
 13879  00345A                     _PHYSetLongRAMAddr:
 13880                           	opt stack 17
 13881                           
 13882                           ;drv_mrf_miwi_24j40.c: 92: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 13883                           
 13884                           ;incstack = 0
 13885  00345A  0E00               	movlw	0
 13886  00345C  B6F0               	btfsc	intcon3,3,c	;volatile
 13887  00345E  0E01               	movlw	1
 13888  003460  6E23               	movwf	PHYSetLongRAMAddr@tmpRFIE,c	;volatile
 13889                           
 13890                           ;drv_mrf_miwi_24j40.c: 94: INTCON3bits.INT1IE = 0;
 13891  003462  96F0               	bcf	intcon3,3,c	;volatile
 13892                           
 13893                           ;drv_mrf_miwi_24j40.c: 95: LATBbits.LATB3 = 0;
 13894  003464  968A               	bcf	3978,3,c	;volatile
 13895                           
 13896                           ;drv_mrf_miwi_24j40.c: 96: SPI1_Exchange8bit((((uint8_t) (address >> 3))&0x7F) | 0x80);
 13897  003466  C01E  F021         	movff	PHYSetLongRAMAddr@address,??_PHYSetLongRAMAddr
 13898  00346A  C01F  F022         	movff	PHYSetLongRAMAddr@address+1,??_PHYSetLongRAMAddr+1
 13899  00346E  90D8               	bcf	status,0,c
 13900  003470  3222               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 13901  003472  3221               	rrcf	??_PHYSetLongRAMAddr,f,c
 13902  003474  90D8               	bcf	status,0,c
 13903  003476  3222               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 13904  003478  3221               	rrcf	??_PHYSetLongRAMAddr,f,c
 13905  00347A  90D8               	bcf	status,0,c
 13906  00347C  3222               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 13907  00347E  3221               	rrcf	??_PHYSetLongRAMAddr,f,c
 13908  003480  5021               	movf	??_PHYSetLongRAMAddr,w,c
 13909  003482  0B7F               	andlw	127
 13910  003484  0980               	iorlw	128
 13911  003486  ECFE  F01D         	call	_SPI1_Exchange8bit
 13912                           
 13913                           ;drv_mrf_miwi_24j40.c: 97: SPI1_Exchange8bit((((uint8_t) (address << 5))&0xE0) | 0x10);
 13914  00348A  381E               	swapf	PHYSetLongRAMAddr@address,w,c
 13915  00348C  46E8               	rlncf	wreg,f,c
 13916  00348E  0BE0               	andlw	224
 13917  003490  0910               	iorlw	16
 13918  003492  ECFE  F01D         	call	_SPI1_Exchange8bit
 13919                           
 13920                           ;drv_mrf_miwi_24j40.c: 98: SPI1_Exchange8bit(value);
 13921  003496  5020               	movf	PHYSetLongRAMAddr@value,w,c
 13922  003498  ECFE  F01D         	call	_SPI1_Exchange8bit
 13923                           
 13924                           ;drv_mrf_miwi_24j40.c: 99: LATBbits.LATB3 = 1;
 13925  00349C  868A               	bsf	3978,3,c	;volatile
 13926                           
 13927                           ;drv_mrf_miwi_24j40.c: 100: INTCON3bits.INT1IE = tmpRFIE;
 13928  00349E  B023               	btfsc	PHYSetLongRAMAddr@tmpRFIE,0,c	;volatile
 13929  0034A0  D002               	bra	u11125
 13930  0034A2  96F0               	bcf	intcon3,3,c	;volatile
 13931  0034A4  D001               	bra	u11126
 13932  0034A6                     u11125:
 13933  0034A6  86F0               	bsf	intcon3,3,c	;volatile
 13934  0034A8                     u11126:
 13935  0034A8  0012               	return		;funcret
 13936  0034AA                     __end_of_PHYSetLongRAMAddr:
 13937                           	opt stack 0
 13938                           tblptru	equ	0xFF8
 13939                           tblptrh	equ	0xFF7
 13940                           tblptrl	equ	0xFF6
 13941                           tablat	equ	0xFF5
 13942                           prodh	equ	0xFF4
 13943                           prodl	equ	0xFF3
 13944                           intcon	equ	0xFF2
 13945                           intcon2	equ	0xFF1
 13946                           intcon3	equ	0xFF0
 13947                           postinc0	equ	0xFEE
 13948                           plusw0	equ	0xFEB
 13949                           wreg	equ	0xFE8
 13950                           indf1	equ	0xFE7
 13951                           postinc1	equ	0xFE6
 13952                           postdec1	equ	0xFE5
 13953                           fsr1h	equ	0xFE2
 13954                           fsr1l	equ	0xFE1
 13955                           indf2	equ	0xFDF
 13956                           postinc2	equ	0xFDE
 13957                           postdec2	equ	0xFDD
 13958                           plusw2	equ	0xFDB
 13959                           fsr2h	equ	0xFDA
 13960                           fsr2l	equ	0xFD9
 13961                           status	equ	0xFD8
 13962                           
 13963 ;; *************** function _AddConnection *****************
 13964 ;; Defined at:
 13965 ;;		line 2525 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 13966 ;; Parameters:    Size  Location     Type
 13967 ;;		None
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;  i               1    8[BANK0 ] unsigned char 
 13970 ;;  connectionSl    1    7[BANK0 ] unsigned char 
 13971 ;;  status          1    6[BANK0 ] unsigned char 
 13972 ;; Return value:  Size  Location     Type
 13973 ;;                  1    wreg      unsigned char 
 13974 ;; Registers used:
 13975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13976 ;; Tracked objects:
 13977 ;;		On entry : 0/0
 13978 ;;		On exit  : F/0
 13979 ;;		Unchanged: 0/0
 13980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13982 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13983 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13984 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13985 ;;Total ram usage:        7 bytes
 13986 ;; Hardware stack levels used:    1
 13987 ;; Hardware stack levels required when called:    6
 13988 ;; This function calls:
 13989 ;;		_NVMWrite
 13990 ;;		_Total_Connections
 13991 ;;		_isSameAddress
 13992 ;; This function is called by:
 13993 ;;		_P2PTasks
 13994 ;; This function uses a non-reentrant model
 13995 ;;
 13996                           
 13997                           	psect	text55
 13998  0023A6                     __ptext55:
 13999                           	opt stack 0
 14000  0023A6                     _AddConnection:
 14001                           	opt stack 19
 14002                           
 14003                           ;miwi_p2p.c: 2529: uint8_t i;
 14004                           ;miwi_p2p.c: 2530: uint8_t status = 0x00;
 14005                           
 14006                           ;incstack = 0
 14007  0023A6  0100               	movlb	0	; () banked
 14008  0023A8  6B66               	clrf	AddConnection@status& (0+255),b
 14009                           
 14010                           ;miwi_p2p.c: 2531: uint8_t connectionSlot = 0xFF;
 14011  0023AA  6967               	setf	AddConnection@connectionSlot& (0+255),b
 14012                           
 14013                           ;miwi_p2p.c: 2542: for(i = 0; i < 20; i++)
 14014  0023AC  6B68               	clrf	AddConnection@i& (0+255),b
 14015  0023AE                     l12591:
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;miwi_p2p.c: 2543: {
 14019                           ;miwi_p2p.c: 2545: if( ConnectionTable[i].status.bits.isValid )
 14020  0023AE  5168               	movf	AddConnection@i& (0+255),w,b
 14021  0023B0  0D0E               	mullw	14
 14022  0023B2  0E5C               	movlw	low (_ConnectionTable+12)
 14023  0023B4  24F3               	addwf	prodl,w,c
 14024  0023B6  6ED9               	movwf	fsr2l,c
 14025  0023B8  0E03               	movlw	high (_ConnectionTable+12)
 14026  0023BA  20F4               	addwfc	prodh,w,c
 14027  0023BC  6EDA               	movwf	fsr2h,c
 14028  0023BE  AEDF               	btfss	indf2,7,c
 14029  0023C0  D015               	goto	l12599
 14030                           
 14031                           ; BSR set to: 0
 14032                           ;miwi_p2p.c: 2546: {
 14033                           ;miwi_p2p.c: 2548: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 14034  0023C2  C0CA  F01D         	movff	_rxMessage+3,isSameAddress@Address1
 14035  0023C6  C0CB  F01E         	movff	_rxMessage+4,isSameAddress@Address1+1
 14036  0023CA  5168               	movf	AddConnection@i& (0+255),w,b
 14037  0023CC  0D0E               	mullw	14
 14038  0023CE  0E54               	movlw	low (_ConnectionTable+4)
 14039  0023D0  24F3               	addwf	prodl,w,c
 14040  0023D2  6E1F               	movwf	isSameAddress@Address2,c
 14041  0023D4  0E03               	movlw	high (_ConnectionTable+4)
 14042  0023D6  20F4               	addwfc	prodh,w,c
 14043  0023D8  6E20               	movwf	isSameAddress@Address2+1,c
 14044  0023DA  ECC6  F01C         	call	_isSameAddress	;wreg free
 14045  0023DE  0900               	iorlw	0
 14046  0023E0  E009               	bz	l12603
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;miwi_p2p.c: 2549: {
 14050                           ;miwi_p2p.c: 2550: connectionSlot = i;
 14051  0023E2  C068  F067         	movff	AddConnection@i,AddConnection@connectionSlot
 14052                           
 14053                           ; BSR set to: 0
 14054                           ;miwi_p2p.c: 2551: status = 0x01;
 14055  0023E6  0E01               	movlw	1
 14056  0023E8  6F66               	movwf	AddConnection@status& (0+255),b
 14057                           
 14058                           ;miwi_p2p.c: 2552: break;
 14059  0023EA  D008               	goto	l12607
 14060  0023EC                     l12599:
 14061                           
 14062                           ; BSR set to: 0
 14063                           ;miwi_p2p.c: 2556: else if( connectionSlot == 0xFF )
 14064  0023EC  2967               	incf	AddConnection@connectionSlot& (0+255),w,b
 14065  0023EE  E102               	bnz	l12603
 14066                           
 14067                           ; BSR set to: 0
 14068                           ;miwi_p2p.c: 2557: {
 14069                           ;miwi_p2p.c: 2559: connectionSlot = i;
 14070  0023F0  C068  F067         	movff	AddConnection@i,AddConnection@connectionSlot
 14071  0023F4                     l12603:
 14072                           
 14073                           ; BSR set to: 0
 14074  0023F4  2B68               	incf	AddConnection@i& (0+255),f,b
 14075                           
 14076                           ; BSR set to: 0
 14077  0023F6  0E13               	movlw	19
 14078  0023F8  6568               	cpfsgt	AddConnection@i& (0+255),b
 14079  0023FA  D7D9               	goto	l12591
 14080  0023FC                     l12607:
 14081                           
 14082                           ; BSR set to: 0
 14083                           ;miwi_p2p.c: 2561: }
 14084                           ;miwi_p2p.c: 2562: }
 14085                           ;miwi_p2p.c: 2564: if( connectionSlot == 0xFF )
 14086  0023FC  2967               	incf	AddConnection@connectionSlot& (0+255),w,b
 14087  0023FE  E101               	bnz	l12615
 14088                           
 14089                           ; BSR set to: 0
 14090                           ;miwi_p2p.c: 2565: {
 14091                           ;miwi_p2p.c: 2566: return 0xF1;
 14092  002400  0CF1               	retlw	241
 14093  002402                     l12615:
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;miwi_p2p.c: 2568: else
 14097                           ;miwi_p2p.c: 2569: {
 14098                           ;miwi_p2p.c: 2570: if( ConnMode >= 0x01 )
 14099  002402  51FF               	movf	_ConnMode& (0+255),w,b
 14100  002404  E003               	bz	l667
 14101  002406                     l12617:
 14102                           
 14103                           ;miwi_p2p.c: 2571: {
 14104                           ;miwi_p2p.c: 2572: return status;
 14105  002406  0100               	movlb	0	; () banked
 14106  002408  5166               	movf	AddConnection@status& (0+255),w,b
 14107  00240A  0012               	return	
 14108  00240C                     l667:
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;miwi_p2p.c: 2573: }
 14112                           ;miwi_p2p.c: 2576: MyindexinPC = connectionSlot;
 14113  00240C  C067  F0E0         	movff	AddConnection@connectionSlot,_MyindexinPC
 14114                           
 14115                           ;miwi_p2p.c: 2578: for(i = 0; i < 8; i++)
 14116  002410  6B68               	clrf	AddConnection@i& (0+255),b
 14117  002412                     l12625:
 14118                           
 14119                           ; BSR set to: 0
 14120                           ;miwi_p2p.c: 2579: {
 14121                           ;miwi_p2p.c: 2580: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 14122  002412  5168               	movf	AddConnection@i& (0+255),w,b
 14123  002414  25CA               	addwf	(_rxMessage+3)& (0+255),w,b
 14124  002416  6ED9               	movwf	fsr2l,c
 14125  002418  0E00               	movlw	0
 14126  00241A  21CB               	addwfc	(_rxMessage+4)& (0+255),w,b
 14127  00241C  6EDA               	movwf	fsr2h,c
 14128  00241E  5167               	movf	AddConnection@connectionSlot& (0+255),w,b
 14129  002420  0D0E               	mullw	14
 14130  002422  0E50               	movlw	low _ConnectionTable
 14131  002424  6F62               	movwf	??_AddConnection& (0+255),b
 14132  002426  0E03               	movlw	high _ConnectionTable
 14133  002428  6F63               	movwf	(??_AddConnection+1)& (0+255),b
 14134  00242A  0E04               	movlw	4
 14135  00242C  2762               	addwf	??_AddConnection& (0+255),f,b
 14136  00242E  0E00               	movlw	0
 14137  002430  2363               	addwfc	(??_AddConnection+1)& (0+255),f,b
 14138  002432  50F3               	movf	prodl,w,c
 14139  002434  2762               	addwf	??_AddConnection& (0+255),f,b
 14140  002436  50F4               	movf	prodh,w,c
 14141  002438  2363               	addwfc	(??_AddConnection+1)& (0+255),f,b
 14142  00243A  5168               	movf	AddConnection@i& (0+255),w,b
 14143  00243C  2562               	addwf	??_AddConnection& (0+255),w,b
 14144  00243E  6EE1               	movwf	fsr1l,c
 14145  002440  0E00               	movlw	0
 14146  002442  2163               	addwfc	(??_AddConnection+1)& (0+255),w,b
 14147  002444  6EE2               	movwf	fsr1h,c
 14148  002446  CFDF FFE7          	movff	indf2,indf1
 14149                           
 14150                           ; BSR set to: 0
 14151  00244A  2B68               	incf	AddConnection@i& (0+255),f,b
 14152                           
 14153                           ; BSR set to: 0
 14154  00244C  0E07               	movlw	7
 14155  00244E  6568               	cpfsgt	AddConnection@i& (0+255),b
 14156  002450  D7E0               	goto	l12625
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;miwi_p2p.c: 2583: }
 14160                           ;miwi_p2p.c: 2588: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 14161  002452  5167               	movf	AddConnection@connectionSlot& (0+255),w,b
 14162  002454  0D0E               	mullw	14
 14163  002456  0E5C               	movlw	low (_ConnectionTable+12)
 14164  002458  24F3               	addwf	prodl,w,c
 14165  00245A  6ED9               	movwf	fsr2l,c
 14166  00245C  0E03               	movlw	high (_ConnectionTable+12)
 14167  00245E  20F4               	addwfc	prodh,w,c
 14168  002460  6EDA               	movwf	fsr2h,c
 14169  002462  8EDF               	bsf	indf2,7,c
 14170                           
 14171                           ;miwi_p2p.c: 2589: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 14172  002464  EE20 F002          	lfsr	2,2
 14173  002468  51CC               	movf	(_rxMessage+5)& (0+255),w,b
 14174  00246A  26D9               	addwf	fsr2l,f,c
 14175  00246C  51CD               	movf	(_rxMessage+6)& (0+255),w,b
 14176  00246E  22DA               	addwfc	fsr2h,f,c
 14177  002470  50DF               	movf	indf2,w,c
 14178  002472  6F62               	movwf	??_AddConnection& (0+255),b
 14179  002474  0E01               	movlw	1
 14180  002476  1762               	andwf	??_AddConnection& (0+255),f,b
 14181  002478  5167               	movf	AddConnection@connectionSlot& (0+255),w,b
 14182  00247A  0D0E               	mullw	14
 14183  00247C  0E5C               	movlw	low (_ConnectionTable+12)
 14184  00247E  24F3               	addwf	prodl,w,c
 14185  002480  6ED9               	movwf	fsr2l,c
 14186  002482  0E03               	movlw	high (_ConnectionTable+12)
 14187  002484  20F4               	addwfc	prodh,w,c
 14188  002486  6EDA               	movwf	fsr2h,c
 14189  002488  50DF               	movf	223,w,c
 14190  00248A  1962               	xorwf	??_AddConnection& (0+255),w,b
 14191  00248C  0BFE               	andlw	-2
 14192  00248E  1962               	xorwf	??_AddConnection& (0+255),w,b
 14193  002490  6EDF               	movwf	223,c
 14194                           
 14195                           ; BSR set to: 0
 14196                           ;miwi_p2p.c: 2593: for(i = 0; i < 1; i++)
 14197  002492  6B68               	clrf	AddConnection@i& (0+255),b
 14198  002494                     l12639:
 14199                           
 14200                           ; BSR set to: 0
 14201                           ;miwi_p2p.c: 2594: {
 14202                           ;miwi_p2p.c: 2595: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 14203  002494  5168               	movf	AddConnection@i& (0+255),w,b
 14204  002496  25CC               	addwf	(_rxMessage+5)& (0+255),w,b
 14205  002498  6F62               	movwf	??_AddConnection& (0+255),b
 14206  00249A  0E00               	movlw	0
 14207  00249C  21CD               	addwfc	(_rxMessage+6)& (0+255),w,b
 14208  00249E  6F63               	movwf	(??_AddConnection+1)& (0+255),b
 14209  0024A0  0E03               	movlw	3
 14210  0024A2  2562               	addwf	??_AddConnection& (0+255),w,b
 14211  0024A4  6ED9               	movwf	fsr2l,c
 14212  0024A6  0E00               	movlw	0
 14213  0024A8  2163               	addwfc	(??_AddConnection+1)& (0+255),w,b
 14214  0024AA  6EDA               	movwf	fsr2h,c
 14215  0024AC  5167               	movf	AddConnection@connectionSlot& (0+255),w,b
 14216  0024AE  0D0E               	mullw	14
 14217  0024B0  0E50               	movlw	low _ConnectionTable
 14218  0024B2  6F64               	movwf	(??_AddConnection+2)& (0+255),b
 14219  0024B4  0E03               	movlw	high _ConnectionTable
 14220  0024B6  6F65               	movwf	(??_AddConnection+3)& (0+255),b
 14221  0024B8  0E0D               	movlw	13
 14222  0024BA  2764               	addwf	(??_AddConnection+2)& (0+255),f,b
 14223  0024BC  0E00               	movlw	0
 14224  0024BE  2365               	addwfc	(??_AddConnection+3)& (0+255),f,b
 14225  0024C0  50F3               	movf	prodl,w,c
 14226  0024C2  2764               	addwf	(??_AddConnection+2)& (0+255),f,b
 14227  0024C4  50F4               	movf	prodh,w,c
 14228  0024C6  2365               	addwfc	(??_AddConnection+3)& (0+255),f,b
 14229  0024C8  5168               	movf	AddConnection@i& (0+255),w,b
 14230  0024CA  2564               	addwf	(??_AddConnection+2)& (0+255),w,b
 14231  0024CC  6EE1               	movwf	fsr1l,c
 14232  0024CE  0E00               	movlw	0
 14233  0024D0  2165               	addwfc	(??_AddConnection+3)& (0+255),w,b
 14234  0024D2  6EE2               	movwf	fsr1h,c
 14235  0024D4  CFDF FFE7          	movff	indf2,indf1
 14236                           
 14237                           ; BSR set to: 0
 14238  0024D8  2B68               	incf	AddConnection@i& (0+255),f,b
 14239                           
 14240                           ; BSR set to: 0
 14241  0024DA  5168               	movf	AddConnection@i& (0+255),w,b
 14242  0024DC  E0DB               	bz	l12639
 14243                           
 14244                           ; BSR set to: 0
 14245                           ;miwi_p2p.c: 2596: }
 14246                           ;miwi_p2p.c: 2603: LatestConnection = connectionSlot;
 14247  0024DE  C067  F0DE         	movff	AddConnection@connectionSlot,_LatestConnection
 14248                           
 14249                           ;miwi_p2p.c: 2605: P2PStatus.bits.SearchConnection = 0;
 14250  0024E2  99E2               	bcf	_P2PStatus& (0+255),4,b	;volatile
 14251                           
 14252                           ; BSR set to: 0
 14253                           ;miwi_p2p.c: 2606: }
 14254                           ;miwi_p2p.c: 2607: conn_size = Total_Connections();
 14255  0024E4  ECA3  F01A         	call	_Total_Connections	;wreg free
 14256  0024E8  6E40               	movwf	_conn_size,c
 14257                           
 14258                           ; BSR set to: 0
 14259                           ;miwi_p2p.c: 2608: NVMWrite((uint8_t *)&conn_size, nvmEdc, 1);
 14260  0024EA  0E40               	movlw	low _conn_size
 14261  0024EC  6E1E               	movwf	NVMWrite@source,c
 14262  0024EE  6A1F               	clrf	NVMWrite@source+1,c
 14263  0024F0  C0F2  F020         	movff	_nvmEdc,NVMWrite@addr
 14264  0024F4  C0F3  F021         	movff	_nvmEdc+1,NVMWrite@addr+1
 14265  0024F8  6A23               	clrf	NVMWrite@count+1,c
 14266  0024FA  0E01               	movlw	1
 14267  0024FC  6E22               	movwf	NVMWrite@count,c
 14268  0024FE  ECB3  F015         	call	_NVMWrite	;wreg free
 14269  002502  D781               	goto	l12617
 14270  002504                     __end_of_AddConnection:
 14271                           	opt stack 0
 14272                           tblptru	equ	0xFF8
 14273                           tblptrh	equ	0xFF7
 14274                           tblptrl	equ	0xFF6
 14275                           tablat	equ	0xFF5
 14276                           prodh	equ	0xFF4
 14277                           prodl	equ	0xFF3
 14278                           intcon	equ	0xFF2
 14279                           intcon2	equ	0xFF1
 14280                           intcon3	equ	0xFF0
 14281                           postinc0	equ	0xFEE
 14282                           plusw0	equ	0xFEB
 14283                           wreg	equ	0xFE8
 14284                           indf1	equ	0xFE7
 14285                           postinc1	equ	0xFE6
 14286                           postdec1	equ	0xFE5
 14287                           fsr1h	equ	0xFE2
 14288                           fsr1l	equ	0xFE1
 14289                           indf2	equ	0xFDF
 14290                           postinc2	equ	0xFDE
 14291                           postdec2	equ	0xFDD
 14292                           plusw2	equ	0xFDB
 14293                           fsr2h	equ	0xFDA
 14294                           fsr2l	equ	0xFD9
 14295                           status	equ	0xFD8
 14296                           
 14297 ;; *************** function _isSameAddress *****************
 14298 ;; Defined at:
 14299 ;;		line 2126 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 14300 ;; Parameters:    Size  Location     Type
 14301 ;;  Address1        2   28[COMRAM] PTR unsigned char 
 14302 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 14303 ;;  Address2        2   30[COMRAM] PTR unsigned char 
 14304 ;;		 -> ConnectionTable(280), 
 14305 ;; Auto vars:     Size  Location     Type
 14306 ;;  i               1   34[COMRAM] unsigned char 
 14307 ;; Return value:  Size  Location     Type
 14308 ;;                  1    wreg      unsigned char 
 14309 ;; Registers used:
 14310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14311 ;; Tracked objects:
 14312 ;;		On entry : F/0
 14313 ;;		On exit  : F/0
 14314 ;;		Unchanged: F/0
 14315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14318 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14319 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14320 ;;Total ram usage:        7 bytes
 14321 ;; Hardware stack levels used:    1
 14322 ;; Hardware stack levels required when called:    4
 14323 ;; This function calls:
 14324 ;;		Nothing
 14325 ;; This function is called by:
 14326 ;;		_P2PTasks
 14327 ;;		_AddConnection
 14328 ;; This function uses a non-reentrant model
 14329 ;;
 14330                           
 14331                           	psect	text56
 14332  00398C                     __ptext56:
 14333                           	opt stack 0
 14334  00398C                     _isSameAddress:
 14335                           	opt stack 21
 14336                           
 14337                           ; BSR set to: 0
 14338                           ;miwi_p2p.c: 2128: uint8_t i;
 14339                           ;miwi_p2p.c: 2130: for(i = 0; i < 8; i++)
 14340                           
 14341                           ; BSR set to: 0
 14342                           ;incstack = 0
 14343  00398C  6A23               	clrf	isSameAddress@i,c
 14344  00398E                     l12047:
 14345                           
 14346                           ; BSR set to: 0
 14347                           ;miwi_p2p.c: 2131: {
 14348                           ;miwi_p2p.c: 2132: if( Address1[i] != Address2[i] )
 14349  00398E  5023               	movf	isSameAddress@i,w,c
 14350  003990  241F               	addwf	isSameAddress@Address2,w,c
 14351  003992  6ED9               	movwf	fsr2l,c
 14352  003994  0E00               	movlw	0
 14353  003996  2020               	addwfc	isSameAddress@Address2+1,w,c
 14354  003998  6EDA               	movwf	fsr2h,c
 14355  00399A  5023               	movf	isSameAddress@i,w,c
 14356  00399C  241D               	addwf	isSameAddress@Address1,w,c
 14357  00399E  6EE1               	movwf	fsr1l,c
 14358  0039A0  0E00               	movlw	0
 14359  0039A2  201E               	addwfc	isSameAddress@Address1+1,w,c
 14360  0039A4  6EE2               	movwf	fsr1h,c
 14361  0039A6  50DE               	movf	postinc2,w,c
 14362  0039A8  18E6               	xorwf	postinc1,w,c
 14363  0039AA  E001               	bz	l12053
 14364                           
 14365                           ; BSR set to: 0
 14366                           ;miwi_p2p.c: 2133: {
 14367                           ;miwi_p2p.c: 2134: return 0;
 14368  0039AC  0C00               	retlw	0
 14369  0039AE                     l12053:
 14370                           
 14371                           ; BSR set to: 0
 14372  0039AE  2A23               	incf	isSameAddress@i,f,c
 14373                           
 14374                           ; BSR set to: 0
 14375  0039B0  0E07               	movlw	7
 14376  0039B2  6423               	cpfsgt	isSameAddress@i,c
 14377  0039B4  D7EC               	goto	l12047
 14378  0039B6  0C01               	retlw	1
 14379  0039B8                     __end_of_isSameAddress:
 14380                           	opt stack 0
 14381                           tblptru	equ	0xFF8
 14382                           tblptrh	equ	0xFF7
 14383                           tblptrl	equ	0xFF6
 14384                           tablat	equ	0xFF5
 14385                           prodh	equ	0xFF4
 14386                           prodl	equ	0xFF3
 14387                           intcon	equ	0xFF2
 14388                           intcon2	equ	0xFF1
 14389                           intcon3	equ	0xFF0
 14390                           postinc0	equ	0xFEE
 14391                           plusw0	equ	0xFEB
 14392                           wreg	equ	0xFE8
 14393                           indf1	equ	0xFE7
 14394                           postinc1	equ	0xFE6
 14395                           postdec1	equ	0xFE5
 14396                           fsr1h	equ	0xFE2
 14397                           fsr1l	equ	0xFE1
 14398                           indf2	equ	0xFDF
 14399                           postinc2	equ	0xFDE
 14400                           postdec2	equ	0xFDD
 14401                           plusw2	equ	0xFDB
 14402                           fsr2h	equ	0xFDA
 14403                           fsr2l	equ	0xFD9
 14404                           status	equ	0xFD8
 14405                           
 14406 ;; *************** function _Total_Connections *****************
 14407 ;; Defined at:
 14408 ;;		line 62 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 14409 ;; Parameters:    Size  Location     Type
 14410 ;;		None
 14411 ;; Auto vars:     Size  Location     Type
 14412 ;;  i               1   29[COMRAM] unsigned char 
 14413 ;;  count           1   28[COMRAM] unsigned char 
 14414 ;; Return value:  Size  Location     Type
 14415 ;;                  1    wreg      unsigned char 
 14416 ;; Registers used:
 14417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14418 ;; Tracked objects:
 14419 ;;		On entry : F/0
 14420 ;;		On exit  : F/0
 14421 ;;		Unchanged: F/0
 14422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14426 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14427 ;;Total ram usage:        2 bytes
 14428 ;; Hardware stack levels used:    1
 14429 ;; Hardware stack levels required when called:    4
 14430 ;; This function calls:
 14431 ;;		Nothing
 14432 ;; This function is called by:
 14433 ;;		_AddConnection
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437                           	psect	text57
 14438  003546                     __ptext57:
 14439                           	opt stack 0
 14440  003546                     _Total_Connections:
 14441                           	opt stack 20
 14442                           
 14443                           ; BSR set to: 0
 14444                           ;miwi_p2p.c: 64: uint8_t count=0 , i;
 14445                           
 14446                           ; BSR set to: 0
 14447                           ;incstack = 0
 14448  003546  6A1D               	clrf	Total_Connections@count,c
 14449                           
 14450                           ;miwi_p2p.c: 65: for (i=0;i<20;i++)
 14451  003548  6A1E               	clrf	Total_Connections@i,c
 14452  00354A                     l11995:
 14453                           
 14454                           ; BSR set to: 0
 14455                           ;miwi_p2p.c: 66: {
 14456                           ;miwi_p2p.c: 68: if (ConnectionTable[i].Address[0] != 0x00 || ConnectionTable[i].Address
      +                          [1] != 0x00 || ConnectionTable[i].Address[2] != 0x00)
 14457  00354A  501E               	movf	Total_Connections@i,w,c
 14458  00354C  0D0E               	mullw	14
 14459  00354E  0E54               	movlw	low (_ConnectionTable+4)
 14460  003550  24F3               	addwf	prodl,w,c
 14461  003552  6ED9               	movwf	fsr2l,c
 14462  003554  0E03               	movlw	high (_ConnectionTable+4)
 14463  003556  20F4               	addwfc	prodh,w,c
 14464  003558  6EDA               	movwf	fsr2h,c
 14465  00355A  50DF               	movf	indf2,w,c
 14466  00355C  E114               	bnz	l12001
 14467                           
 14468                           ; BSR set to: 0
 14469  00355E  501E               	movf	Total_Connections@i,w,c
 14470  003560  0D0E               	mullw	14
 14471  003562  0E55               	movlw	low (_ConnectionTable+5)
 14472  003564  24F3               	addwf	prodl,w,c
 14473  003566  6ED9               	movwf	fsr2l,c
 14474  003568  0E03               	movlw	high (_ConnectionTable+5)
 14475  00356A  20F4               	addwfc	prodh,w,c
 14476  00356C  6EDA               	movwf	fsr2h,c
 14477  00356E  50DF               	movf	indf2,w,c
 14478  003570  E10A               	bnz	l12001
 14479                           
 14480                           ; BSR set to: 0
 14481  003572  501E               	movf	Total_Connections@i,w,c
 14482  003574  0D0E               	mullw	14
 14483  003576  0E56               	movlw	low (_ConnectionTable+6)
 14484  003578  24F3               	addwf	prodl,w,c
 14485  00357A  6ED9               	movwf	fsr2l,c
 14486  00357C  0E03               	movlw	high (_ConnectionTable+6)
 14487  00357E  20F4               	addwfc	prodh,w,c
 14488  003580  6EDA               	movwf	fsr2h,c
 14489  003582  50DF               	movf	indf2,w,c
 14490  003584  E001               	bz	l368
 14491  003586                     l12001:
 14492                           
 14493                           ; BSR set to: 0
 14494                           ;miwi_p2p.c: 69: {
 14495                           ;miwi_p2p.c: 70: count++;
 14496  003586  2A1D               	incf	Total_Connections@count,f,c
 14497  003588                     l368:
 14498                           
 14499                           ; BSR set to: 0
 14500  003588  2A1E               	incf	Total_Connections@i,f,c
 14501                           
 14502                           ; BSR set to: 0
 14503  00358A  0E13               	movlw	19
 14504  00358C  641E               	cpfsgt	Total_Connections@i,c
 14505  00358E  D7DD               	goto	l11995
 14506                           
 14507                           ; BSR set to: 0
 14508                           ;miwi_p2p.c: 71: }
 14509                           ;miwi_p2p.c: 78: }
 14510                           ;miwi_p2p.c: 79: return count;
 14511  003590  501D               	movf	Total_Connections@count,w,c
 14512                           
 14513                           ; BSR set to: 0
 14514  003592  0012               	return		;funcret
 14515  003594                     __end_of_Total_Connections:
 14516                           	opt stack 0
 14517                           tblptru	equ	0xFF8
 14518                           tblptrh	equ	0xFF7
 14519                           tblptrl	equ	0xFF6
 14520                           tablat	equ	0xFF5
 14521                           prodh	equ	0xFF4
 14522                           prodl	equ	0xFF3
 14523                           intcon	equ	0xFF2
 14524                           intcon2	equ	0xFF1
 14525                           intcon3	equ	0xFF0
 14526                           postinc0	equ	0xFEE
 14527                           plusw0	equ	0xFEB
 14528                           wreg	equ	0xFE8
 14529                           indf1	equ	0xFE7
 14530                           postinc1	equ	0xFE6
 14531                           postdec1	equ	0xFE5
 14532                           fsr1h	equ	0xFE2
 14533                           fsr1l	equ	0xFE1
 14534                           indf2	equ	0xFDF
 14535                           postinc2	equ	0xFDE
 14536                           postdec2	equ	0xFDD
 14537                           plusw2	equ	0xFDB
 14538                           fsr2h	equ	0xFDA
 14539                           fsr2l	equ	0xFD9
 14540                           status	equ	0xFD8
 14541                           
 14542 ;; *************** function _MiApp_DiscardMessage *****************
 14543 ;; Defined at:
 14544 ;;		line 2370 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 14545 ;; Parameters:    Size  Location     Type
 14546 ;;		None
 14547 ;; Auto vars:     Size  Location     Type
 14548 ;;		None
 14549 ;; Return value:  Size  Location     Type
 14550 ;;                  1    wreg      void 
 14551 ;; Registers used:
 14552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14553 ;; Tracked objects:
 14554 ;;		On entry : 0/0
 14555 ;;		On exit  : 0/0
 14556 ;;		Unchanged: 0/0
 14557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14562 ;;Total ram usage:        0 bytes
 14563 ;; Hardware stack levels used:    1
 14564 ;; Hardware stack levels required when called:    5
 14565 ;; This function calls:
 14566 ;;		_MiMAC_DiscardPacket
 14567 ;; This function is called by:
 14568 ;;		_MiApp_EstablishConnection
 14569 ;;		_Process_RxMessage
 14570 ;; This function uses a non-reentrant model
 14571 ;;
 14572                           
 14573                           	psect	text58
 14574  003C36                     __ptext58:
 14575                           	opt stack 0
 14576  003C36                     _MiApp_DiscardMessage:
 14577                           	opt stack 22
 14578                           
 14579                           ;miwi_p2p.c: 2372: P2PStatus.bits.RxHasUserData = 0;
 14580                           
 14581                           ; BSR set to: 0
 14582                           ;incstack = 0
 14583  003C36  0100               	movlb	0	; () banked
 14584  003C38  97E2               	bcf	_P2PStatus& (0+255),3,b	;volatile
 14585                           
 14586                           ; BSR set to: 0
 14587                           ;miwi_p2p.c: 2373: MiMAC_DiscardPacket();
 14588  003C3A  EFC8  F01D         	goto	_MiMAC_DiscardPacket	;wreg free
 14589  003C3E                     __end_of_MiApp_DiscardMessage:
 14590                           	opt stack 0
 14591                           tblptru	equ	0xFF8
 14592                           tblptrh	equ	0xFF7
 14593                           tblptrl	equ	0xFF6
 14594                           tablat	equ	0xFF5
 14595                           prodh	equ	0xFF4
 14596                           prodl	equ	0xFF3
 14597                           intcon	equ	0xFF2
 14598                           intcon2	equ	0xFF1
 14599                           intcon3	equ	0xFF0
 14600                           postinc0	equ	0xFEE
 14601                           plusw0	equ	0xFEB
 14602                           wreg	equ	0xFE8
 14603                           indf1	equ	0xFE7
 14604                           postinc1	equ	0xFE6
 14605                           postdec1	equ	0xFE5
 14606                           fsr1h	equ	0xFE2
 14607                           fsr1l	equ	0xFE1
 14608                           indf2	equ	0xFDF
 14609                           postinc2	equ	0xFDE
 14610                           postdec2	equ	0xFDD
 14611                           plusw2	equ	0xFDB
 14612                           fsr2h	equ	0xFDA
 14613                           fsr2l	equ	0xFD9
 14614                           status	equ	0xFD8
 14615                           
 14616 ;; *************** function _MiMAC_DiscardPacket *****************
 14617 ;; Defined at:
 14618 ;;		line 693 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 14619 ;; Parameters:    Size  Location     Type
 14620 ;;		None
 14621 ;; Auto vars:     Size  Location     Type
 14622 ;;		None
 14623 ;; Return value:  Size  Location     Type
 14624 ;;                  1    wreg      void 
 14625 ;; Registers used:
 14626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14627 ;; Tracked objects:
 14628 ;;		On entry : 0/0
 14629 ;;		On exit  : 0/0
 14630 ;;		Unchanged: 0/0
 14631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14636 ;;Total ram usage:        0 bytes
 14637 ;; Hardware stack levels used:    1
 14638 ;; Hardware stack levels required when called:    4
 14639 ;; This function calls:
 14640 ;;		Nothing
 14641 ;; This function is called by:
 14642 ;;		_MiMAC_ReceivedPacket
 14643 ;;		_P2PTasks
 14644 ;;		_MiApp_DiscardMessage
 14645 ;; This function uses a non-reentrant model
 14646 ;;
 14647                           
 14648                           	psect	text59
 14649  003B90                     __ptext59:
 14650                           	opt stack 0
 14651  003B90                     _MiMAC_DiscardPacket:
 14652                           	opt stack 20
 14653                           
 14654                           ;drv_mrf_miwi_24j40.c: 697: if (BankIndex < 2)
 14655                           
 14656                           ;incstack = 0
 14657  003B90  0E02               	movlw	2
 14658  003B92  6042               	cpfslt	_BankIndex,c
 14659  003B94  0C02               	retlw	2
 14660                           
 14661                           ;drv_mrf_miwi_24j40.c: 698: {
 14662                           ;drv_mrf_miwi_24j40.c: 699: RxBuffer[BankIndex].PayloadLen = 0;
 14663  003B96  5042               	movf	_BankIndex,w,c
 14664  003B98  0D45               	mullw	69
 14665  003B9A  0E28               	movlw	low _RxBuffer
 14666  003B9C  24F3               	addwf	prodl,w,c
 14667  003B9E  6ED9               	movwf	fsr2l,c
 14668  003BA0  0E02               	movlw	high _RxBuffer
 14669  003BA2  20F4               	addwfc	prodh,w,c
 14670  003BA4  6EDA               	movwf	fsr2h,c
 14671  003BA6  6ADF               	clrf	indf2,c
 14672  003BA8  0C00               	retlw	0	;funcret
 14673  003BAA                     __end_of_MiMAC_DiscardPacket:
 14674                           	opt stack 0
 14675                           tblptru	equ	0xFF8
 14676                           tblptrh	equ	0xFF7
 14677                           tblptrl	equ	0xFF6
 14678                           tablat	equ	0xFF5
 14679                           prodh	equ	0xFF4
 14680                           prodl	equ	0xFF3
 14681                           intcon	equ	0xFF2
 14682                           intcon2	equ	0xFF1
 14683                           intcon3	equ	0xFF0
 14684                           postinc0	equ	0xFEE
 14685                           plusw0	equ	0xFEB
 14686                           wreg	equ	0xFE8
 14687                           indf1	equ	0xFE7
 14688                           postinc1	equ	0xFE6
 14689                           postdec1	equ	0xFE5
 14690                           fsr1h	equ	0xFE2
 14691                           fsr1l	equ	0xFE1
 14692                           indf2	equ	0xFDF
 14693                           postinc2	equ	0xFDE
 14694                           postdec2	equ	0xFDD
 14695                           plusw2	equ	0xFDB
 14696                           fsr2h	equ	0xFDA
 14697                           fsr2l	equ	0xFD9
 14698                           status	equ	0xFD8
 14699                           
 14700 ;; *************** function _MiApp_ConnectionMode *****************
 14701 ;; Defined at:
 14702 ;;		line 2962 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 14703 ;; Parameters:    Size  Location     Type
 14704 ;;  Mode            1    wreg     unsigned char 
 14705 ;; Auto vars:     Size  Location     Type
 14706 ;;  Mode            1    3[BANK0 ] unsigned char 
 14707 ;; Return value:  Size  Location     Type
 14708 ;;                  1    wreg      void 
 14709 ;; Registers used:
 14710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14711 ;; Tracked objects:
 14712 ;;		On entry : 0/0
 14713 ;;		On exit  : 0/0
 14714 ;;		Unchanged: 0/0
 14715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14718 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14719 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14720 ;;Total ram usage:        2 bytes
 14721 ;; Hardware stack levels used:    1
 14722 ;; Hardware stack levels required when called:    6
 14723 ;; This function calls:
 14724 ;;		_NVMWrite
 14725 ;; This function is called by:
 14726 ;;		_Initialize_Demo
 14727 ;; This function uses a non-reentrant model
 14728 ;;
 14729                           
 14730                           	psect	text60
 14731  003864                     __ptext60:
 14732                           	opt stack 0
 14733  003864                     _MiApp_ConnectionMode:
 14734                           	opt stack 23
 14735                           
 14736                           ;incstack = 0
 14737                           ;MiApp_ConnectionMode@Mode stored from wreg
 14738  003864  0100               	movlb	0	; () banked
 14739  003866  6F63               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 14740                           
 14741                           ;miwi_p2p.c: 2964: if( Mode > 3 )
 14742  003868  0E03               	movlw	3
 14743  00386A  6563               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 14744  00386C  D001               	goto	l687
 14745  00386E  0C03               	retlw	3
 14746  003870                     l687:
 14747                           
 14748                           ; BSR set to: 0
 14749                           ;miwi_p2p.c: 2967: }
 14750                           ;miwi_p2p.c: 2968: ConnMode = Mode;
 14751  003870  C063  F0FF         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 14752                           
 14753                           ; BSR set to: 0
 14754                           ;miwi_p2p.c: 2969: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 14755  003874  C0FF  F062         	movff	_ConnMode,??_MiApp_ConnectionMode
 14756  003878  3B62               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 14757  00387A  0EF0               	movlw	240
 14758  00387C  1762               	andwf	??_MiApp_ConnectionMode& (0+255),f,b
 14759  00387E  51E1               	movf	_P2PCapacityInfo& (0+255),w,b
 14760  003880  0B0F               	andlw	15
 14761  003882  1162               	iorwf	??_MiApp_ConnectionMode& (0+255),w,b
 14762  003884  6FE1               	movwf	_P2PCapacityInfo& (0+255),b
 14763                           
 14764                           ; BSR set to: 0
 14765                           ;miwi_p2p.c: 2972: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
 14766  003886  0EFF               	movlw	low _ConnMode
 14767  003888  6E1E               	movwf	NVMWrite@source,c
 14768  00388A  6A1F               	clrf	NVMWrite@source+1,c
 14769  00388C  C0EE  F020         	movff	_nvmConnMode,NVMWrite@addr
 14770  003890  C0EF  F021         	movff	_nvmConnMode+1,NVMWrite@addr+1
 14771  003894  6A23               	clrf	NVMWrite@count+1,c
 14772  003896  0E01               	movlw	1
 14773  003898  6E22               	movwf	NVMWrite@count,c
 14774  00389A  EFB3  F015         	goto	_NVMWrite	;wreg free
 14775  00389E                     __end_of_MiApp_ConnectionMode:
 14776                           	opt stack 0
 14777                           tblptru	equ	0xFF8
 14778                           tblptrh	equ	0xFF7
 14779                           tblptrl	equ	0xFF6
 14780                           tablat	equ	0xFF5
 14781                           prodh	equ	0xFF4
 14782                           prodl	equ	0xFF3
 14783                           intcon	equ	0xFF2
 14784                           intcon2	equ	0xFF1
 14785                           intcon3	equ	0xFF0
 14786                           postinc0	equ	0xFEE
 14787                           plusw0	equ	0xFEB
 14788                           wreg	equ	0xFE8
 14789                           indf1	equ	0xFE7
 14790                           postinc1	equ	0xFE6
 14791                           postdec1	equ	0xFE5
 14792                           fsr1h	equ	0xFE2
 14793                           fsr1l	equ	0xFE1
 14794                           indf2	equ	0xFDF
 14795                           postinc2	equ	0xFDE
 14796                           postdec2	equ	0xFDD
 14797                           plusw2	equ	0xFDB
 14798                           fsr2h	equ	0xFDA
 14799                           fsr2l	equ	0xFD9
 14800                           status	equ	0xFD8
 14801                           
 14802 ;; *************** function _NVMWrite *****************
 14803 ;; Defined at:
 14804 ;;		line 179 in file "../../../../../framework/miwi/src/miwi_nvm.c"
 14805 ;; Parameters:    Size  Location     Type
 14806 ;;  source          2   29[COMRAM] PTR unsigned char 
 14807 ;;		 -> myConnectionIndex_in_PanCo(1), myPANID(2), ConnMode(1), currentChannel(1), 
 14808 ;;		 -> role(1), conn_size(1), ConnectionTable(280), 
 14809 ;;  addr            2   31[COMRAM] unsigned int 
 14810 ;;  count           2   33[COMRAM] unsigned int 
 14811 ;; Auto vars:     Size  Location     Type
 14812 ;;  PageCounter     1    1[BANK0 ] unsigned char 
 14813 ;;  oldRFIE         1    0[BANK0 ] unsigned char 
 14814 ;; Return value:  Size  Location     Type
 14815 ;;                  1    wreg      void 
 14816 ;; Registers used:
 14817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14818 ;; Tracked objects:
 14819 ;;		On entry : 0/0
 14820 ;;		On exit  : 0/0
 14821 ;;		Unchanged: 0/0
 14822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14823 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14824 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14826 ;;      Totals:         7       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14827 ;;Total ram usage:        9 bytes
 14828 ;; Hardware stack levels used:    1
 14829 ;; Hardware stack levels required when called:    5
 14830 ;; This function calls:
 14831 ;;		_MacroNop
 14832 ;;		_SPI1_Exchange8bit
 14833 ;; This function is called by:
 14834 ;;		_P2PTasks
 14835 ;;		_MiApp_ProtocolInit
 14836 ;;		_MiApp_SetChannel
 14837 ;;		_AddConnection
 14838 ;;		_MiApp_RemoveConnection
 14839 ;;		_MiApp_ConnectionMode
 14840 ;;		_Initialize_Demo
 14841 ;; This function uses a non-reentrant model
 14842 ;;
 14843                           
 14844                           	psect	text61
 14845  002B66                     __ptext61:
 14846                           	opt stack 0
 14847  002B66                     _NVMWrite:
 14848                           	opt stack 20
 14849                           
 14850                           ;miwi_nvm.c: 187: uint8_t oldRFIE = INTCON3bits.INT1IE;
 14851                           
 14852                           ;incstack = 0
 14853  002B66  0E00               	movlw	0
 14854  002B68  B6F0               	btfsc	intcon3,3,c	;volatile
 14855  002B6A  0E01               	movlw	1
 14856  002B6C  0100               	movlb	0	; () banked
 14857  002B6E  6F60               	movwf	NVMWrite@oldRFIE& (0+255),b
 14858                           
 14859                           ; BSR set to: 0
 14860                           ;miwi_nvm.c: 188: INTCON3bits.INT1IE = 0;
 14861  002B70  96F0               	bcf	intcon3,3,c	;volatile
 14862  002B72                     l11917:
 14863                           
 14864                           ; BSR set to: 0
 14865                           ;miwi_nvm.c: 194: {
 14866                           ;miwi_nvm.c: 195: LATDbits.LATD5 = 0;
 14867  002B72  9A8C               	bcf	3980,5,c	;volatile
 14868                           
 14869                           ; BSR set to: 0
 14870                           ;miwi_nvm.c: 196: SPI1_Exchange8bit(0x05);
 14871  002B74  0E05               	movlw	5
 14872  002B76  ECFE  F01D         	call	_SPI1_Exchange8bit
 14873                           
 14874                           ;miwi_nvm.c: 197: PageCounter = SPI1_Exchange8bit(0x00);
 14875  002B7A  0E00               	movlw	0
 14876  002B7C  ECFE  F01D         	call	_SPI1_Exchange8bit
 14877  002B80  0100               	movlb	0	; () banked
 14878  002B82  6F61               	movwf	NVMWrite@PageCounter& (0+255),b
 14879                           
 14880                           ; BSR set to: 0
 14881                           ;miwi_nvm.c: 198: LATDbits.LATD5 = 1;
 14882  002B84  8A8C               	bsf	3980,5,c	;volatile
 14883                           
 14884                           ; BSR set to: 0
 14885                           ;miwi_nvm.c: 199: MacroNop();
 14886  002B86  EC23  F01E         	call	_MacroNop	;wreg free
 14887                           
 14888                           ;miwi_nvm.c: 200: } while(PageCounter & 0x01 );
 14889  002B8A  0100               	movlb	0	; () banked
 14890  002B8C  B161               	btfsc	NVMWrite@PageCounter& (0+255),0,b
 14891  002B8E  D7F1               	goto	l11917
 14892                           
 14893                           ; BSR set to: 0
 14894                           ;miwi_nvm.c: 202: LATDbits.LATD5 = 0;
 14895  002B90  9A8C               	bcf	3980,5,c	;volatile
 14896                           
 14897                           ; BSR set to: 0
 14898                           ;miwi_nvm.c: 203: SPI1_Exchange8bit(0x06);
 14899  002B92  0E06               	movlw	6
 14900  002B94  ECFE  F01D         	call	_SPI1_Exchange8bit
 14901                           
 14902                           ;miwi_nvm.c: 204: LATDbits.LATD5 = 1;
 14903  002B98  8A8C               	bsf	3980,5,c	;volatile
 14904                           
 14905                           ;miwi_nvm.c: 205: MacroNop();
 14906  002B9A  EC23  F01E         	call	_MacroNop	;wreg free
 14907                           
 14908                           ;miwi_nvm.c: 206: LATDbits.LATD5 = 0;
 14909  002B9E  9A8C               	bcf	3980,5,c	;volatile
 14910                           
 14911                           ;miwi_nvm.c: 221: SPI1_Exchange8bit(0x02);
 14912  002BA0  0E02               	movlw	2
 14913  002BA2  ECFE  F01D         	call	_SPI1_Exchange8bit
 14914                           
 14915                           ;miwi_nvm.c: 222: SPI1_Exchange8bit(addr>>8);
 14916  002BA6  5021               	movf	NVMWrite@addr+1,w,c
 14917  002BA8  ECFE  F01D         	call	_SPI1_Exchange8bit
 14918                           
 14919                           ;miwi_nvm.c: 223: SPI1_Exchange8bit(addr);
 14920  002BAC  5020               	movf	NVMWrite@addr,w,c
 14921  002BAE  ECFE  F01D         	call	_SPI1_Exchange8bit
 14922                           
 14923                           ;miwi_nvm.c: 225: PageCounter = 0;
 14924  002BB2  0100               	movlb	0	; () banked
 14925  002BB4  6B61               	clrf	NVMWrite@PageCounter& (0+255),b
 14926                           
 14927                           ;miwi_nvm.c: 226: while( count > 0 )
 14928  002BB6  D01A               	goto	l11959
 14929  002BB8                     l11945:
 14930                           
 14931                           ; BSR set to: 0
 14932                           ;miwi_nvm.c: 227: {
 14933                           ;miwi_nvm.c: 228: SPI1_Exchange8bit(*source++);
 14934  002BB8  C01E  FFD9         	movff	NVMWrite@source,fsr2l
 14935  002BBC  C01F  FFDA         	movff	NVMWrite@source+1,fsr2h
 14936  002BC0  50DF               	movf	indf2,w,c
 14937  002BC2  ECFE  F01D         	call	_SPI1_Exchange8bit
 14938  002BC6  4A1E               	infsnz	NVMWrite@source,f,c
 14939  002BC8  2A1F               	incf	NVMWrite@source+1,f,c
 14940                           
 14941                           ;miwi_nvm.c: 229: count--;
 14942  002BCA  0622               	decf	NVMWrite@count,f,c
 14943  002BCC  A0D8               	btfss	status,0,c
 14944  002BCE  0623               	decf	NVMWrite@count+1,f,c
 14945                           
 14946                           ;miwi_nvm.c: 230: PageCounter++;
 14947  002BD0  0100               	movlb	0	; () banked
 14948  002BD2  2B61               	incf	NVMWrite@PageCounter& (0+255),f,b
 14949                           
 14950                           ; BSR set to: 0
 14951                           ;miwi_nvm.c: 231: if( ((addr + PageCounter) & (64-1)) == 0 )
 14952  002BD4  5161               	movf	NVMWrite@PageCounter& (0+255),w,b
 14953  002BD6  2420               	addwf	NVMWrite@addr,w,c
 14954  002BD8  6E24               	movwf	??_NVMWrite& (0+255),c
 14955  002BDA  0E3F               	movlw	63
 14956  002BDC  1624               	andwf	??_NVMWrite,f,c
 14957  002BDE  E106               	bnz	l11959
 14958                           
 14959                           ; BSR set to: 0
 14960                           ;miwi_nvm.c: 232: {
 14961                           ;miwi_nvm.c: 233: LATDbits.LATD5 = 1;
 14962  002BE0  8A8C               	bsf	3980,5,c	;volatile
 14963                           
 14964                           ; BSR set to: 0
 14965                           ;miwi_nvm.c: 234: addr += PageCounter;
 14966  002BE2  5161               	movf	NVMWrite@PageCounter& (0+255),w,b
 14967  002BE4  2620               	addwf	NVMWrite@addr,f,c
 14968  002BE6  0E00               	movlw	0
 14969  002BE8  2221               	addwfc	NVMWrite@addr+1,f,c
 14970                           
 14971                           ;miwi_nvm.c: 235: goto EEPROM_NEXT_PAGE;
 14972  002BEA  D7C3               	goto	l11917
 14973  002BEC                     l11959:
 14974                           
 14975                           ; BSR set to: 0
 14976  002BEC  5022               	movf	NVMWrite@count,w,c
 14977  002BEE  1023               	iorwf	NVMWrite@count+1,w,c
 14978  002BF0  E1E3               	bnz	l11945
 14979                           
 14980                           ; BSR set to: 0
 14981                           ;miwi_nvm.c: 236: }
 14982                           ;miwi_nvm.c: 237: }
 14983                           ;miwi_nvm.c: 238: LATDbits.LATD5 = 1;
 14984  002BF2  8A8C               	bsf	3980,5,c	;volatile
 14985                           
 14986                           ;miwi_nvm.c: 243: INTCON3bits.INT1IE = oldRFIE;
 14987  002BF4  B160               	btfsc	NVMWrite@oldRFIE& (0+255),0,b
 14988  002BF6  D002               	bra	u12455
 14989  002BF8  96F0               	bcf	intcon3,3,c	;volatile
 14990  002BFA  D001               	bra	u12456
 14991  002BFC                     u12455:
 14992  002BFC  86F0               	bsf	intcon3,3,c	;volatile
 14993  002BFE                     u12456:
 14994  002BFE  0012               	return		;funcret
 14995  002C00                     __end_of_NVMWrite:
 14996                           	opt stack 0
 14997                           tblptru	equ	0xFF8
 14998                           tblptrh	equ	0xFF7
 14999                           tblptrl	equ	0xFF6
 15000                           tablat	equ	0xFF5
 15001                           prodh	equ	0xFF4
 15002                           prodl	equ	0xFF3
 15003                           intcon	equ	0xFF2
 15004                           intcon2	equ	0xFF1
 15005                           intcon3	equ	0xFF0
 15006                           postinc0	equ	0xFEE
 15007                           plusw0	equ	0xFEB
 15008                           wreg	equ	0xFE8
 15009                           indf1	equ	0xFE7
 15010                           postinc1	equ	0xFE6
 15011                           postdec1	equ	0xFE5
 15012                           fsr1h	equ	0xFE2
 15013                           fsr1l	equ	0xFE1
 15014                           indf2	equ	0xFDF
 15015                           postinc2	equ	0xFDE
 15016                           postdec2	equ	0xFDD
 15017                           plusw2	equ	0xFDB
 15018                           fsr2h	equ	0xFDA
 15019                           fsr2l	equ	0xFD9
 15020                           status	equ	0xFD8
 15021                           
 15022 ;; *************** function _SPI1_Exchange8bit *****************
 15023 ;; Defined at:
 15024 ;;		line 52 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
 15025 ;; Parameters:    Size  Location     Type
 15026 ;;  data            1    wreg     unsigned char 
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;  data            1   28[COMRAM] unsigned char 
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  1    wreg      unsigned char 
 15031 ;; Registers used:
 15032 ;;		wreg, status,2
 15033 ;; Tracked objects:
 15034 ;;		On entry : 0/0
 15035 ;;		On exit  : 0/0
 15036 ;;		Unchanged: 0/0
 15037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15039 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15042 ;;Total ram usage:        1 bytes
 15043 ;; Hardware stack levels used:    1
 15044 ;; Hardware stack levels required when called:    4
 15045 ;; This function calls:
 15046 ;;		Nothing
 15047 ;; This function is called by:
 15048 ;;		_PHYSetLongRAMAddr
 15049 ;;		_PHYSetShortRAMAddr
 15050 ;;		_PHYGetShortRAMAddr
 15051 ;;		_PHYGetLongRAMAddr
 15052 ;;		_NVMRead
 15053 ;;		_NVMWrite
 15054 ;;		_EEPROM_Read
 15055 ;; This function uses a non-reentrant model
 15056 ;;
 15057                           
 15058                           	psect	text62
 15059  003BFC                     __ptext62:
 15060                           	opt stack 0
 15061  003BFC                     _SPI1_Exchange8bit:
 15062                           	opt stack 17
 15063                           
 15064                           ;incstack = 0
 15065                           ;SPI1_Exchange8bit@data stored from wreg
 15066  003BFC  6E1D               	movwf	SPI1_Exchange8bit@data,c
 15067                           
 15068                           ;spi.c: 54: SSP1CON1bits.WCOL = 0;
 15069  003BFE  9EC6               	bcf	4038,7,c	;volatile
 15070                           
 15071                           ;spi.c: 56: SSP1BUF = data;
 15072  003C00  C01D  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
 15073  003C04                     l837:
 15074  003C04  A0C7               	btfss	4039,0,c	;volatile
 15075  003C06  D7FE               	goto	l837
 15076                           
 15077                           ;spi.c: 59: }
 15078                           ;spi.c: 61: return (SSP1BUF);
 15079  003C08  50C9               	movf	4041,w,c	;volatile
 15080  003C0A  0012               	return		;funcret
 15081  003C0C                     __end_of_SPI1_Exchange8bit:
 15082                           	opt stack 0
 15083                           tblptru	equ	0xFF8
 15084                           tblptrh	equ	0xFF7
 15085                           tblptrl	equ	0xFF6
 15086                           tablat	equ	0xFF5
 15087                           prodh	equ	0xFF4
 15088                           prodl	equ	0xFF3
 15089                           intcon	equ	0xFF2
 15090                           intcon2	equ	0xFF1
 15091                           intcon3	equ	0xFF0
 15092                           postinc0	equ	0xFEE
 15093                           plusw0	equ	0xFEB
 15094                           wreg	equ	0xFE8
 15095                           indf1	equ	0xFE7
 15096                           postinc1	equ	0xFE6
 15097                           postdec1	equ	0xFE5
 15098                           fsr1h	equ	0xFE2
 15099                           fsr1l	equ	0xFE1
 15100                           indf2	equ	0xFDF
 15101                           postinc2	equ	0xFDE
 15102                           postdec2	equ	0xFDD
 15103                           plusw2	equ	0xFDB
 15104                           fsr2h	equ	0xFDA
 15105                           fsr2l	equ	0xFD9
 15106                           status	equ	0xFD8
 15107                           
 15108 ;; *************** function _MacroNop *****************
 15109 ;; Defined at:
 15110 ;;		line 322 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 15111 ;; Parameters:    Size  Location     Type
 15112 ;;		None
 15113 ;; Auto vars:     Size  Location     Type
 15114 ;;		None
 15115 ;; Return value:  Size  Location     Type
 15116 ;;                  1    wreg      void 
 15117 ;; Registers used:
 15118 ;;		None
 15119 ;; Tracked objects:
 15120 ;;		On entry : 0/0
 15121 ;;		On exit  : 0/0
 15122 ;;		Unchanged: 0/0
 15123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15128 ;;Total ram usage:        0 bytes
 15129 ;; Hardware stack levels used:    1
 15130 ;; Hardware stack levels required when called:    4
 15131 ;; This function calls:
 15132 ;;		Nothing
 15133 ;; This function is called by:
 15134 ;;		_NVMWrite
 15135 ;; This function uses a non-reentrant model
 15136 ;;
 15137                           
 15138                           	psect	text63
 15139  003C46                     __ptext63:
 15140                           	opt stack 0
 15141  003C46                     _MacroNop:
 15142                           	opt stack 20
 15143                           
 15144                           ;miwi_p2p.c: 324: __nop();
 15145                           
 15146                           ;incstack = 0
 15147  003C46  F000               	nop	
 15148  003C48  0012               	return		;funcret
 15149  003C4A                     __end_of_MacroNop:
 15150                           	opt stack 0
 15151                           tblptru	equ	0xFF8
 15152                           tblptrh	equ	0xFF7
 15153                           tblptrl	equ	0xFF6
 15154                           tablat	equ	0xFF5
 15155                           prodh	equ	0xFF4
 15156                           prodl	equ	0xFF3
 15157                           intcon	equ	0xFF2
 15158                           intcon2	equ	0xFF1
 15159                           intcon3	equ	0xFF0
 15160                           postinc0	equ	0xFEE
 15161                           plusw0	equ	0xFEB
 15162                           wreg	equ	0xFE8
 15163                           indf1	equ	0xFE7
 15164                           postinc1	equ	0xFE6
 15165                           postdec1	equ	0xFE5
 15166                           fsr1h	equ	0xFE2
 15167                           fsr1l	equ	0xFE1
 15168                           indf2	equ	0xFDF
 15169                           postinc2	equ	0xFDE
 15170                           postdec2	equ	0xFDD
 15171                           plusw2	equ	0xFDB
 15172                           fsr2h	equ	0xFDA
 15173                           fsr2l	equ	0xFD9
 15174                           status	equ	0xFD8
 15175                           
 15176 ;; *************** function _DemoOutput_ChannelError *****************
 15177 ;; Defined at:
 15178 ;;		line 193 in file "../src/demo_ouput.c"
 15179 ;; Parameters:    Size  Location     Type
 15180 ;;  channel         1    wreg     unsigned char 
 15181 ;; Auto vars:     Size  Location     Type
 15182 ;;  channel         1    0[COMRAM] unsigned char 
 15183 ;; Return value:  Size  Location     Type
 15184 ;;                  1    wreg      void 
 15185 ;; Registers used:
 15186 ;;		wreg
 15187 ;; Tracked objects:
 15188 ;;		On entry : 0/0
 15189 ;;		On exit  : 0/0
 15190 ;;		Unchanged: 0/0
 15191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15196 ;;Total ram usage:        0 bytes
 15197 ;; Hardware stack levels used:    1
 15198 ;; Hardware stack levels required when called:    4
 15199 ;; This function calls:
 15200 ;;		Nothing
 15201 ;; This function is called by:
 15202 ;;		_Initialize_Demo
 15203 ;; This function uses a non-reentrant model
 15204 ;;
 15205                           
 15206                           	psect	text64
 15207  003C4C                     __ptext64:
 15208                           	opt stack 0
 15209  003C4C                     _DemoOutput_ChannelError:
 15210                           	opt stack 25
 15211                           
 15212                           ;incstack = 0
 15213  003C4C  0012               	return		;funcret
 15214  003C4E                     __end_of_DemoOutput_ChannelError:
 15215                           	opt stack 0
 15216                           tblptru	equ	0xFF8
 15217                           tblptrh	equ	0xFF7
 15218                           tblptrl	equ	0xFF6
 15219                           tablat	equ	0xFF5
 15220                           prodh	equ	0xFF4
 15221                           prodl	equ	0xFF3
 15222                           intcon	equ	0xFF2
 15223                           intcon2	equ	0xFF1
 15224                           intcon3	equ	0xFF0
 15225                           postinc0	equ	0xFEE
 15226                           plusw0	equ	0xFEB
 15227                           wreg	equ	0xFE8
 15228                           indf1	equ	0xFE7
 15229                           postinc1	equ	0xFE6
 15230                           postdec1	equ	0xFE5
 15231                           fsr1h	equ	0xFE2
 15232                           fsr1l	equ	0xFE1
 15233                           indf2	equ	0xFDF
 15234                           postinc2	equ	0xFDE
 15235                           postdec2	equ	0xFDD
 15236                           plusw2	equ	0xFDB
 15237                           fsr2h	equ	0xFDA
 15238                           fsr2l	equ	0xFD9
 15239                           status	equ	0xFD8
 15240                           
 15241 ;; *************** function _DemoOutput_Channel *****************
 15242 ;; Defined at:
 15243 ;;		line 111 in file "../src/demo_ouput.c"
 15244 ;; Parameters:    Size  Location     Type
 15245 ;;  channel         1    wreg     unsigned char 
 15246 ;;  Step            1   44[BANK0 ] unsigned char 
 15247 ;; Auto vars:     Size  Location     Type
 15248 ;;  channel         1   45[BANK0 ] unsigned char 
 15249 ;; Return value:  Size  Location     Type
 15250 ;;                  1    wreg      void 
 15251 ;; Registers used:
 15252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15253 ;; Tracked objects:
 15254 ;;		On entry : F/0
 15255 ;;		On exit  : 0/0
 15256 ;;		Unchanged: 0/0
 15257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15258 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15261 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15262 ;;Total ram usage:        2 bytes
 15263 ;; Hardware stack levels used:    1
 15264 ;; Hardware stack levels required when called:    7
 15265 ;; This function calls:
 15266 ;;		_DELAY_ms
 15267 ;;		_LCDDisplay
 15268 ;; This function is called by:
 15269 ;;		_Initialize_Demo
 15270 ;; This function uses a non-reentrant model
 15271 ;;
 15272                           
 15273                           	psect	text65
 15274  0037AE                     __ptext65:
 15275                           	opt stack 0
 15276  0037AE                     _DemoOutput_Channel:
 15277                           	opt stack 22
 15278                           
 15279                           ;incstack = 0
 15280                           ;DemoOutput_Channel@channel stored from wreg
 15281  0037AE  6F8D               	movwf	DemoOutput_Channel@channel& (0+255),b
 15282                           
 15283                           ;demo_ouput.c: 113: if( Step == 0 )
 15284  0037B0  0100               	movlb	0	; () banked
 15285  0037B2  518C               	movf	DemoOutput_Channel@Step& (0+255),w,b
 15286  0037B4  E10B               	bnz	l13513
 15287                           
 15288                           ; BSR set to: 0
 15289                           ;demo_ouput.c: 114: {
 15290                           ;demo_ouput.c: 115: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 15291  0037B6  0E43               	movlw	low STR_4
 15292  0037B8  6F87               	movwf	LCDDisplay@text& (0+255),b
 15293  0037BA  0EFE               	movlw	high STR_4
 15294  0037BC  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
 15295  0037BE  C08D  F089         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 15296  0037C2  0E01               	movlw	1
 15297  0037C4  6F8A               	movwf	LCDDisplay@delay& (0+255),b
 15298  0037C6  EC14  F01B         	call	_LCDDisplay	;wreg free
 15299                           
 15300                           ;demo_ouput.c: 117: ;
 15301                           ;demo_ouput.c: 118: ;
 15302                           ;demo_ouput.c: 119: ;
 15303                           ;demo_ouput.c: 122: }
 15304  0037CA  D00A               	goto	l13515
 15305  0037CC                     l13513:
 15306                           
 15307                           ; BSR set to: 0
 15308                           ;demo_ouput.c: 123: else
 15309                           ;demo_ouput.c: 124: {
 15310                           ;demo_ouput.c: 125: LCDDisplay((char *)" Connected Peer  on Channel %d", channel, 1);
 15311  0037CC  0E83               	movlw	low STR_5
 15312  0037CE  6F87               	movwf	LCDDisplay@text& (0+255),b
 15313  0037D0  0EFE               	movlw	high STR_5
 15314  0037D2  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
 15315  0037D4  C08D  F089         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 15316  0037D8  0E01               	movlw	1
 15317  0037DA  6F8A               	movwf	LCDDisplay@delay& (0+255),b
 15318  0037DC  EC14  F01B         	call	_LCDDisplay	;wreg free
 15319  0037E0                     l13515:
 15320                           
 15321                           ; BSR set to: 0
 15322                           ;demo_ouput.c: 132: }
 15323                           ;demo_ouput.c: 133: DELAY_ms(1000);
 15324  0037E0  0E03               	movlw	3
 15325  0037E2  6E1E               	movwf	DELAY_ms@ms+1,c
 15326  0037E4  0EE8               	movlw	232
 15327  0037E6  6E1D               	movwf	DELAY_ms@ms,c
 15328  0037E8  EF3A  F014         	goto	_DELAY_ms	;wreg free
 15329  0037EC                     __end_of_DemoOutput_Channel:
 15330                           	opt stack 0
 15331                           tblptru	equ	0xFF8
 15332                           tblptrh	equ	0xFF7
 15333                           tblptrl	equ	0xFF6
 15334                           tablat	equ	0xFF5
 15335                           prodh	equ	0xFF4
 15336                           prodl	equ	0xFF3
 15337                           intcon	equ	0xFF2
 15338                           intcon2	equ	0xFF1
 15339                           intcon3	equ	0xFF0
 15340                           postinc0	equ	0xFEE
 15341                           plusw0	equ	0xFEB
 15342                           wreg	equ	0xFE8
 15343                           indf1	equ	0xFE7
 15344                           postinc1	equ	0xFE6
 15345                           postdec1	equ	0xFE5
 15346                           fsr1h	equ	0xFE2
 15347                           fsr1l	equ	0xFE1
 15348                           indf2	equ	0xFDF
 15349                           postinc2	equ	0xFDE
 15350                           postdec2	equ	0xFDD
 15351                           plusw2	equ	0xFDB
 15352                           fsr2h	equ	0xFDA
 15353                           fsr2l	equ	0xFD9
 15354                           status	equ	0xFD8
 15355                           
 15356 ;; *************** function _DemoOutput_Greeting *****************
 15357 ;; Defined at:
 15358 ;;		line 63 in file "../src/demo_ouput.c"
 15359 ;; Parameters:    Size  Location     Type
 15360 ;;		None
 15361 ;; Auto vars:     Size  Location     Type
 15362 ;;		None
 15363 ;; Return value:  Size  Location     Type
 15364 ;;                  1    wreg      void 
 15365 ;; Registers used:
 15366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15367 ;; Tracked objects:
 15368 ;;		On entry : 0/0
 15369 ;;		On exit  : 0/0
 15370 ;;		Unchanged: 0/0
 15371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15376 ;;Total ram usage:        0 bytes
 15377 ;; Hardware stack levels used:    1
 15378 ;; Hardware stack levels required when called:    7
 15379 ;; This function calls:
 15380 ;;		_DELAY_ms
 15381 ;;		_LCDDisplay
 15382 ;; This function is called by:
 15383 ;;		_main
 15384 ;; This function uses a non-reentrant model
 15385 ;;
 15386                           
 15387                           	psect	text66
 15388  003AE6                     __ptext66:
 15389                           	opt stack 0
 15390  003AE6                     _DemoOutput_Greeting:
 15391                           	opt stack 23
 15392                           
 15393                           ;demo_ouput.c: 70: LCDDisplay((char *)"Simple STAR     MRF24J40 Node", 0, 1);
 15394                           
 15395                           ;incstack = 0
 15396  003AE6  0EA2               	movlw	low STR_3
 15397  003AE8  0100               	movlb	0	; () banked
 15398  003AEA  6F87               	movwf	LCDDisplay@text& (0+255),b
 15399  003AEC  0EFE               	movlw	high STR_3
 15400  003AEE  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
 15401  003AF0  6B89               	clrf	LCDDisplay@value& (0+255),b
 15402  003AF2  0E01               	movlw	1
 15403  003AF4  6F8A               	movwf	LCDDisplay@delay& (0+255),b
 15404  003AF6  EC14  F01B         	call	_LCDDisplay	;wreg free
 15405                           
 15406                           ; BSR set to: 0
 15407                           ;demo_ouput.c: 86: ;
 15408                           ;demo_ouput.c: 87: ;
 15409                           ;demo_ouput.c: 88: ;
 15410                           ;demo_ouput.c: 89: ;
 15411                           ;demo_ouput.c: 90: ;
 15412                           ;demo_ouput.c: 91: ;
 15413                           ;demo_ouput.c: 96: ;
 15414                           ;demo_ouput.c: 100: ;
 15415                           ;demo_ouput.c: 101: ;
 15416                           ;demo_ouput.c: 102: ;
 15417                           ;demo_ouput.c: 103: ;
 15418                           ;demo_ouput.c: 104: ;
 15419                           ;demo_ouput.c: 105: ;
 15420                           ;demo_ouput.c: 106: ;
 15421                           ;demo_ouput.c: 108: DELAY_ms(2000);
 15422  003AFA  0E07               	movlw	7
 15423  003AFC  6E1E               	movwf	DELAY_ms@ms+1,c
 15424  003AFE  0ED0               	movlw	208
 15425  003B00  6E1D               	movwf	DELAY_ms@ms,c
 15426  003B02  EF3A  F014         	goto	_DELAY_ms	;wreg free
 15427  003B06                     __end_of_DemoOutput_Greeting:
 15428                           	opt stack 0
 15429                           tblptru	equ	0xFF8
 15430                           tblptrh	equ	0xFF7
 15431                           tblptrl	equ	0xFF6
 15432                           tablat	equ	0xFF5
 15433                           prodh	equ	0xFF4
 15434                           prodl	equ	0xFF3
 15435                           intcon	equ	0xFF2
 15436                           intcon2	equ	0xFF1
 15437                           intcon3	equ	0xFF0
 15438                           postinc0	equ	0xFEE
 15439                           plusw0	equ	0xFEB
 15440                           wreg	equ	0xFE8
 15441                           indf1	equ	0xFE7
 15442                           postinc1	equ	0xFE6
 15443                           postdec1	equ	0xFE5
 15444                           fsr1h	equ	0xFE2
 15445                           fsr1l	equ	0xFE1
 15446                           indf2	equ	0xFDF
 15447                           postinc2	equ	0xFDE
 15448                           postdec2	equ	0xFDD
 15449                           plusw2	equ	0xFDB
 15450                           fsr2h	equ	0xFDA
 15451                           fsr2l	equ	0xFD9
 15452                           status	equ	0xFD8
 15453                           
 15454 ;; *************** function _LCDDisplay *****************
 15455 ;; Defined at:
 15456 ;;		line 326 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 15457 ;; Parameters:    Size  Location     Type
 15458 ;;  text            2   39[BANK0 ] PTR unsigned char 
 15459 ;;		 -> STR_17(20), STR_12(28), STR_9(32), STR_8(29), 
 15460 ;;		 -> STR_7(16), STR_6(29), STR_5(31), STR_4(32), 
 15461 ;;		 -> STR_3(30), 
 15462 ;;  value           1   41[BANK0 ] unsigned char 
 15463 ;;  delay           1   42[BANK0 ] unsigned char 
 15464 ;; Auto vars:     Size  Location     Type
 15465 ;;  i               1   43[BANK0 ] unsigned char 
 15466 ;; Return value:  Size  Location     Type
 15467 ;;                  1    wreg      void 
 15468 ;; Registers used:
 15469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15470 ;; Tracked objects:
 15471 ;;		On entry : F/0
 15472 ;;		On exit  : F/0
 15473 ;;		Unchanged: 0/0
 15474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15475 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15478 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15479 ;;Total ram usage:        5 bytes
 15480 ;; Hardware stack levels used:    1
 15481 ;; Hardware stack levels required when called:    6
 15482 ;; This function calls:
 15483 ;;		_DELAY_ms
 15484 ;;		_LCD_Erase
 15485 ;;		_LCD_Update
 15486 ;;		_sprintf
 15487 ;; This function is called by:
 15488 ;;		_DemoOutput_Greeting
 15489 ;;		_DemoOutput_Channel
 15490 ;;		_DemoOutput_UnicastFail
 15491 ;;		_STAR_DEMO_OPTIONS_MESSAGE
 15492 ;;		_freezer_feature
 15493 ;;		_run_star_demo
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           	psect	text67
 15498  003628                     __ptext67:
 15499                           	opt stack 0
 15500  003628                     _LCDDisplay:
 15501                           	opt stack 23
 15502                           
 15503                           ; BSR set to: 0
 15504                           ;lcd.c: 329: LCD_Erase();
 15505                           
 15506                           ;incstack = 0
 15507  003628  ECAD  F01D         	call	_LCD_Erase	;wreg free
 15508                           
 15509                           ;lcd.c: 330: sprintf((char *)LCDText, (char*)text, value);
 15510  00362C  0E40               	movlw	low _LCDText
 15511  00362E  0100               	movlb	0	; () banked
 15512  003630  6F64               	movwf	sprintf@sp& (0+255),b
 15513  003632  0E01               	movlw	high _LCDText
 15514  003634  6F65               	movwf	(sprintf@sp+1)& (0+255),b
 15515  003636  C087  F066         	movff	LCDDisplay@text,sprintf@f
 15516  00363A  C088  F067         	movff	LCDDisplay@text+1,sprintf@f+1
 15517  00363E  C089  F068         	movff	LCDDisplay@value,?_sprintf+4
 15518  003642  6B69               	clrf	(?_sprintf+5)& (0+255),b
 15519  003644  EC95  F004         	call	_sprintf	;wreg free
 15520                           
 15521                           ; BSR set to: 0
 15522                           ;lcd.c: 331: LCD_Update();
 15523  003648  ECD5  F01D         	call	_LCD_Update	;wreg free
 15524                           
 15525                           ;lcd.c: 334: if( delay )
 15526  00364C  0100               	movlb	0	; () banked
 15527  00364E  518A               	movf	LCDDisplay@delay& (0+255),w,b
 15528  003650  B4D8               	btfsc	status,2,c
 15529  003652  0012               	return	
 15530                           
 15531                           ; BSR set to: 0
 15532                           ;lcd.c: 335: {
 15533                           ;lcd.c: 336: uint8_t i;
 15534                           ;lcd.c: 337: for(i = 0; i < 8; i++)
 15535  003654  6B8B               	clrf	LCDDisplay@i& (0+255),b
 15536  003656                     l11979:
 15537                           
 15538                           ; BSR set to: 0
 15539                           ;lcd.c: 338: {
 15540                           ;lcd.c: 339: DELAY_ms(250);
 15541  003656  6A1E               	clrf	DELAY_ms@ms+1,c
 15542  003658  0EFA               	movlw	250
 15543  00365A  6E1D               	movwf	DELAY_ms@ms,c
 15544  00365C  EC3A  F014         	call	_DELAY_ms	;wreg free
 15545  003660  0100               	movlb	0	; () banked
 15546  003662  2B8B               	incf	LCDDisplay@i& (0+255),f,b
 15547                           
 15548                           ; BSR set to: 0
 15549  003664  0E07               	movlw	7
 15550  003666  658B               	cpfsgt	LCDDisplay@i& (0+255),b
 15551  003668  D7F6               	goto	l11979
 15552  00366A  0C07               	retlw	7
 15553  00366C                     __end_of_LCDDisplay:
 15554                           	opt stack 0
 15555                           tblptru	equ	0xFF8
 15556                           tblptrh	equ	0xFF7
 15557                           tblptrl	equ	0xFF6
 15558                           tablat	equ	0xFF5
 15559                           prodh	equ	0xFF4
 15560                           prodl	equ	0xFF3
 15561                           intcon	equ	0xFF2
 15562                           intcon2	equ	0xFF1
 15563                           intcon3	equ	0xFF0
 15564                           postinc0	equ	0xFEE
 15565                           plusw0	equ	0xFEB
 15566                           wreg	equ	0xFE8
 15567                           indf1	equ	0xFE7
 15568                           postinc1	equ	0xFE6
 15569                           postdec1	equ	0xFE5
 15570                           fsr1h	equ	0xFE2
 15571                           fsr1l	equ	0xFE1
 15572                           indf2	equ	0xFDF
 15573                           postinc2	equ	0xFDE
 15574                           postdec2	equ	0xFDD
 15575                           plusw2	equ	0xFDB
 15576                           fsr2h	equ	0xFDA
 15577                           fsr2l	equ	0xFD9
 15578                           status	equ	0xFD8
 15579                           
 15580 ;; *************** function _sprintf *****************
 15581 ;; Defined at:
 15582 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\doprnt.c"
 15583 ;; Parameters:    Size  Location     Type
 15584 ;;  sp              2    4[BANK0 ] PTR unsigned char 
 15585 ;;		 -> LCDText(33), 
 15586 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 15587 ;;		 -> STR_18(18), STR_17(20), STR_16(17), STR_15(22), 
 15588 ;;		 -> STR_14(22), STR_13(25), STR_12(28), STR_11(22), 
 15589 ;;		 -> STR_10(17), STR_9(32), STR_8(29), STR_7(16), 
 15590 ;;		 -> STR_6(29), STR_5(31), STR_4(32), STR_3(30), 
 15591 ;;		 -> STR_2(17), STR_1(17), 
 15592 ;; Auto vars:     Size  Location     Type
 15593 ;;  idx             1   20[BANK0 ] unsigned char 
 15594 ;;  tmpval          4    0        struct .
 15595 ;;  flag            2   37[BANK0 ] unsigned short 
 15596 ;;  width           2   34[BANK0 ] int 
 15597 ;;  val             2   31[BANK0 ] unsigned int 
 15598 ;;  len             2   28[BANK0 ] unsigned int 
 15599 ;;  c               1   36[BANK0 ] char 
 15600 ;;  prec            1   33[BANK0 ] char 
 15601 ;;  ap              1   30[BANK0 ] PTR void [1]
 15602 ;;		 -> ?_sprintf(2), 
 15603 ;;  cp              1   27[BANK0 ] PTR const unsigned char 
 15604 ;;		 -> sprintf@c(1), 
 15605 ;; Return value:  Size  Location     Type
 15606 ;;                  2    4[BANK0 ] int 
 15607 ;; Registers used:
 15608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15609 ;; Tracked objects:
 15610 ;;		On entry : F/0
 15611 ;;		On exit  : F/0
 15612 ;;		Unchanged: 0/0
 15613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15614 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15615 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15616 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15617 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15618 ;;Total ram usage:       35 bytes
 15619 ;; Hardware stack levels used:    1
 15620 ;; Hardware stack levels required when called:    5
 15621 ;; This function calls:
 15622 ;;		___lwdiv
 15623 ;;		___lwmod
 15624 ;;		___wmul
 15625 ;;		_isdigit
 15626 ;; This function is called by:
 15627 ;;		_LCDTRXCount
 15628 ;;		_LCDDisplay
 15629 ;;		_Source_END_DEVICE_INFO
 15630 ;;		_run_star_demo
 15631 ;; This function uses a non-reentrant model
 15632 ;;
 15633                           
 15634                           	psect	text68
 15635  00092A                     __ptext68:
 15636                           	opt stack 0
 15637  00092A                     _sprintf:
 15638                           	opt stack 23
 15639                           
 15640                           ; BSR set to: 0
 15641                           ;doprnt.c: 494: va_list ap;
 15642                           ;doprnt.c: 499: signed char c;
 15643                           ;doprnt.c: 501: int width;
 15644                           ;doprnt.c: 506: signed char prec;
 15645                           ;doprnt.c: 508: unsigned short flag;
 15646                           ;doprnt.c: 523: union {
 15647                           ;doprnt.c: 524: unsigned long vd;
 15648                           ;doprnt.c: 525: double integ;
 15649                           ;doprnt.c: 526: } tmpval;
 15650                           ;doprnt.c: 528: unsigned int val;
 15651                           ;doprnt.c: 529: unsigned len;
 15652                           ;doprnt.c: 530: const char * cp;
 15653                           ;doprnt.c: 533: *ap = __va_start();
 15654                           
 15655                           ; BSR set to: 0
 15656                           ;incstack = 0
 15657  00092A  0E68               	movlw	low (?_sprintf+4)
 15658  00092C  6F7E               	movwf	sprintf@ap& (0+255),b
 15659                           
 15660                           ;doprnt.c: 536: while(c = *f++) {
 15661  00092E  D37F               	goto	l11905
 15662  000930                     l11583:
 15663                           
 15664                           ; BSR set to: 0
 15665                           ;doprnt.c: 538: if(c != '%')
 15666  000930  0E25               	movlw	37
 15667  000932  1984               	xorwf	sprintf@c& (0+255),w,b
 15668  000934  E009               	bz	l1260
 15669                           
 15670                           ; BSR set to: 0
 15671                           ;doprnt.c: 540: {
 15672                           ;doprnt.c: 541: ((*sp++ = (c)));
 15673  000936  C064  FFD9         	movff	sprintf@sp,fsr2l
 15674  00093A  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 15675  00093E  C084  FFDF         	movff	sprintf@c,indf2
 15676                           
 15677                           ; BSR set to: 0
 15678  000942  4B64               	infsnz	sprintf@sp& (0+255),f,b
 15679  000944  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 15680                           
 15681                           ;doprnt.c: 542: continue;
 15682  000946  D373               	goto	l11905
 15683  000948                     l1260:
 15684                           
 15685                           ; BSR set to: 0
 15686                           ;doprnt.c: 543: }
 15687                           ;doprnt.c: 546: width = 0;
 15688  000948  6B82               	clrf	sprintf@width& (0+255),b
 15689  00094A  6B83               	clrf	(sprintf@width+1)& (0+255),b
 15690                           
 15691                           ;doprnt.c: 548: flag = 0;
 15692  00094C  6B85               	clrf	sprintf@flag& (0+255),b
 15693  00094E  6B86               	clrf	(sprintf@flag+1)& (0+255),b
 15694  000950  D009               	goto	l11599
 15695  000952                     l11589:
 15696                           
 15697                           ; BSR set to: 0
 15698                           ;doprnt.c: 554: flag |= 0x08;
 15699  000952  8785               	bsf	sprintf@flag& (0+255),3,b
 15700  000954  D005               	goto	L16
 15701  000956                     l11591:
 15702                           
 15703                           ; BSR set to: 0
 15704                           ;doprnt.c: 561: flag |= 0x01;
 15705  000956  8185               	bsf	sprintf@flag& (0+255),0,b
 15706  000958  D003               	goto	L16
 15707  00095A                     l11593:
 15708                           
 15709                           ; BSR set to: 0
 15710                           ;doprnt.c: 574: flag |= 0x800;
 15711  00095A  8786               	bsf	(sprintf@flag+1)& (0+255),3,b
 15712  00095C  D001               	goto	L16
 15713  00095E                     l11595:
 15714                           
 15715                           ; BSR set to: 0
 15716                           ;doprnt.c: 580: flag |= 0x04;
 15717  00095E  8585               	bsf	sprintf@flag& (0+255),2,b
 15718  000960                     L16:
 15719                           
 15720                           ;doprnt.c: 581: f++;
 15721  000960  4B66               	infsnz	sprintf@f& (0+255),f,b
 15722  000962  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 15723  000964                     l11599:
 15724                           
 15725                           ; BSR set to: 0
 15726  000964  C066  FFF6         	movff	sprintf@f,tblptrl
 15727  000968  C067  FFF7         	movff	sprintf@f+1,tblptrh
 15728  00096C                     	if	0	;tblptru may be non-zero
 15729  00096C                     	endif
 15730  00096C                     	if	0	;tblptru may be non-zero
 15731  00096C                     	endif
 15732  00096C  0008               	tblrd		*
 15733  00096E  50F5               	movf	tablat,w,c
 15734                           
 15735                           ; Switch size 1, requested type "speed"
 15736                           ; Number of cases is 4, Range of values is 32 to 48
 15737                           ; switch strategies available:
 15738                           ; Name         Instructions Cycles
 15739                           ; simple_byte           13     7 (average)
 15740                           ;	Chosen strategy is simple_byte
 15741  000970  0A20               	xorlw	32	; case 32
 15742  000972  E0F1               	bz	l11591
 15743  000974  0A03               	xorlw	3	; case 35
 15744  000976  E0F1               	bz	l11593
 15745  000978  0A0E               	xorlw	14	; case 45
 15746  00097A  E0EB               	bz	l11589
 15747  00097C  0A1D               	xorlw	29	; case 48
 15748  00097E  E0EF               	bz	l11595
 15749                           
 15750                           ; BSR set to: 0
 15751                           ;doprnt.c: 593: if(flag & 0x08)
 15752  000980  B785               	btfsc	sprintf@flag& (0+255),3,b
 15753                           
 15754                           ; BSR set to: 0
 15755                           ;doprnt.c: 594: flag &= ~0x04;
 15756  000982  9585               	bcf	sprintf@flag& (0+255),2,b
 15757                           
 15758                           ; BSR set to: 0
 15759                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 15760  000984  C066  FFF6         	movff	sprintf@f,tblptrl
 15761  000988  C067  FFF7         	movff	sprintf@f+1,tblptrh
 15762  00098C                     	if	0	;tblptru may be non-zero
 15763  00098C                     	endif
 15764  00098C                     	if	0	;tblptru may be non-zero
 15765  00098C                     	endif
 15766  00098C  0008               	tblrd		*
 15767  00098E  50F5               	movf	tablat,w,c
 15768  000990  EC9F  F01D         	call	_isdigit
 15769  000994  E330               	bnc	l11615
 15770                           
 15771                           ;doprnt.c: 598: width = 0;
 15772  000996  0100               	movlb	0	; () banked
 15773  000998  6B82               	clrf	sprintf@width& (0+255),b
 15774  00099A  6B83               	clrf	(sprintf@width+1)& (0+255),b
 15775  00099C                     l11607:
 15776                           
 15777                           ;doprnt.c: 600: width *= 10;
 15778  00099C  C082  F01D         	movff	sprintf@width,___wmul@multiplier
 15779  0009A0  C083  F01E         	movff	sprintf@width+1,___wmul@multiplier+1
 15780  0009A4  6A20               	clrf	___wmul@multiplicand+1,c
 15781  0009A6  0E0A               	movlw	10
 15782  0009A8  6E1F               	movwf	___wmul@multiplicand,c
 15783  0009AA  EC40  F01D         	call	___wmul	;wreg free
 15784  0009AE  C01D  F082         	movff	?___wmul,sprintf@width
 15785  0009B2  C01E  F083         	movff	?___wmul+1,sprintf@width+1
 15786                           
 15787                           ;doprnt.c: 601: width += *f++ - '0';
 15788  0009B6  0ED0               	movlw	208
 15789  0009B8  0100               	movlb	0	; () banked
 15790  0009BA  6F70               	movwf	??_sprintf& (0+255),b
 15791  0009BC  6971               	setf	(??_sprintf+1)& (0+255),b
 15792  0009BE  C066  FFF6         	movff	sprintf@f,tblptrl
 15793  0009C2  C067  FFF7         	movff	sprintf@f+1,tblptrh
 15794  0009C6                     	if	0	;tblptru may be non-zero
 15795  0009C6                     	endif
 15796  0009C6                     	if	0	;tblptru may be non-zero
 15797  0009C6                     	endif
 15798  0009C6  0008               	tblrd		*
 15799  0009C8  50F5               	movf	tablat,w,c
 15800  0009CA  6F72               	movwf	(??_sprintf+2)& (0+255),b
 15801  0009CC  6B73               	clrf	(??_sprintf+3)& (0+255),b
 15802  0009CE  5170               	movf	??_sprintf& (0+255),w,b
 15803  0009D0  2772               	addwf	(??_sprintf+2)& (0+255),f,b
 15804  0009D2  5171               	movf	(??_sprintf+1)& (0+255),w,b
 15805  0009D4  2373               	addwfc	(??_sprintf+3)& (0+255),f,b
 15806  0009D6  5172               	movf	(??_sprintf+2)& (0+255),w,b
 15807  0009D8  2782               	addwf	sprintf@width& (0+255),f,b
 15808  0009DA  5173               	movf	(??_sprintf+3)& (0+255),w,b
 15809  0009DC  2383               	addwfc	(sprintf@width+1)& (0+255),f,b
 15810                           
 15811                           ; BSR set to: 0
 15812  0009DE  4B66               	infsnz	sprintf@f& (0+255),f,b
 15813  0009E0  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 15814                           
 15815                           ; BSR set to: 0
 15816                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 15817  0009E2  C066  FFF6         	movff	sprintf@f,tblptrl
 15818  0009E6  C067  FFF7         	movff	sprintf@f+1,tblptrh
 15819  0009EA                     	if	0	;tblptru may be non-zero
 15820  0009EA                     	endif
 15821  0009EA                     	if	0	;tblptru may be non-zero
 15822  0009EA                     	endif
 15823  0009EA  0008               	tblrd		*
 15824  0009EC  50F5               	movf	tablat,w,c
 15825  0009EE  EC9F  F01D         	call	_isdigit
 15826  0009F2  E315               	bnc	l11623
 15827  0009F4  D7D3               	goto	l11607
 15828  0009F6                     l11615:
 15829  0009F6  C066  FFF6         	movff	sprintf@f,tblptrl
 15830  0009FA  C067  FFF7         	movff	sprintf@f+1,tblptrh
 15831  0009FE                     	if	0	;tblptru may be non-zero
 15832  0009FE                     	endif
 15833  0009FE                     	if	0	;tblptru may be non-zero
 15834  0009FE                     	endif
 15835  0009FE  0008               	tblrd		*
 15836  000A00  50F5               	movf	tablat,w,c
 15837  000A02  0A2A               	xorlw	42
 15838  000A04  E10C               	bnz	l11623
 15839                           
 15840                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 15841  000A06  0100               	movlb	0	; () banked
 15842  000A08  517E               	movf	sprintf@ap& (0+255),w,b
 15843  000A0A  6ED9               	movwf	fsr2l,c
 15844  000A0C  6ADA               	clrf	fsr2h,c
 15845  000A0E  CFDE F082          	movff	postinc2,sprintf@width
 15846  000A12  CFDD F083          	movff	postdec2,sprintf@width+1
 15847                           
 15848                           ; BSR set to: 0
 15849  000A16  0E02               	movlw	2
 15850  000A18  277E               	addwf	sprintf@ap& (0+255),f,b
 15851                           
 15852                           ; BSR set to: 0
 15853                           ;doprnt.c: 606: f++;
 15854  000A1A  4B66               	infsnz	sprintf@f& (0+255),f,b
 15855  000A1C  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 15856  000A1E                     l11623:
 15857                           
 15858                           ;doprnt.c: 608: }
 15859                           ;doprnt.c: 611: if(*f == '.') {
 15860  000A1E  C066  FFF6         	movff	sprintf@f,tblptrl
 15861  000A22  C067  FFF7         	movff	sprintf@f+1,tblptrh
 15862  000A26                     	if	0	;tblptru may be non-zero
 15863  000A26                     	endif
 15864  000A26                     	if	0	;tblptru may be non-zero
 15865  000A26                     	endif
 15866  000A26  0008               	tblrd		*
 15867  000A28  50F5               	movf	tablat,w,c
 15868  000A2A  0A2E               	xorlw	46
 15869  000A2C  E132               	bnz	l1276
 15870                           
 15871                           ;doprnt.c: 612: flag |= 0x4000;
 15872  000A2E  0100               	movlb	0	; () banked
 15873  000A30  8D86               	bsf	(sprintf@flag+1)& (0+255),6,b
 15874                           
 15875                           ;doprnt.c: 613: f++;
 15876  000A32  4B66               	infsnz	sprintf@f& (0+255),f,b
 15877  000A34  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 15878                           
 15879                           ; BSR set to: 0
 15880                           ;doprnt.c: 615: if(*f == '*') {
 15881  000A36  C066  FFF6         	movff	sprintf@f,tblptrl
 15882  000A3A  C067  FFF7         	movff	sprintf@f+1,tblptrh
 15883  000A3E                     	if	0	;tblptru may be non-zero
 15884  000A3E                     	endif
 15885  000A3E                     	if	0	;tblptru may be non-zero
 15886  000A3E                     	endif
 15887  000A3E  0008               	tblrd		*
 15888  000A40  50F5               	movf	tablat,w,c
 15889  000A42  0A2A               	xorlw	42
 15890  000A44  E10A               	bnz	l1277
 15891                           
 15892                           ; BSR set to: 0
 15893                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 15894  000A46  517E               	movf	sprintf@ap& (0+255),w,b
 15895  000A48  6ED9               	movwf	fsr2l,c
 15896  000A4A  6ADA               	clrf	fsr2h,c
 15897  000A4C  50DF               	movf	indf2,w,c
 15898  000A4E  6F81               	movwf	sprintf@prec& (0+255),b
 15899                           
 15900                           ; BSR set to: 0
 15901  000A50  0E02               	movlw	2
 15902  000A52  277E               	addwf	sprintf@ap& (0+255),f,b
 15903                           
 15904                           ; BSR set to: 0
 15905                           ;doprnt.c: 617: f++;
 15906  000A54  4B66               	infsnz	sprintf@f& (0+255),f,b
 15907  000A56  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 15908                           
 15909                           ;doprnt.c: 618: } else
 15910  000A58  D08C               	goto	l11691
 15911  000A5A                     l1277:
 15912                           
 15913                           ; BSR set to: 0
 15914                           ;doprnt.c: 620: {
 15915                           ;doprnt.c: 621: prec = 0;
 15916  000A5A  6B81               	clrf	sprintf@prec& (0+255),b
 15917                           
 15918                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 15919  000A5C  D010               	goto	l11639
 15920  000A5E                     l11635:
 15921                           
 15922                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 15923  000A5E  C066  FFF6         	movff	sprintf@f,tblptrl
 15924  000A62  C067  FFF7         	movff	sprintf@f+1,tblptrh
 15925  000A66                     	if	0	;tblptru may be non-zero
 15926  000A66                     	endif
 15927  000A66                     	if	0	;tblptru may be non-zero
 15928  000A66                     	endif
 15929  000A66  0008               	tblrd		*
 15930  000A68  CFF5 F070          	movff	tablat,??_sprintf
 15931  000A6C  0100               	movlb	0	; () banked
 15932  000A6E  5181               	movf	sprintf@prec& (0+255),w,b
 15933  000A70  0D0A               	mullw	10
 15934  000A72  50F3               	movf	prodl,w,c
 15935  000A74  2570               	addwf	??_sprintf& (0+255),w,b
 15936  000A76  0FD0               	addlw	208
 15937  000A78  6F81               	movwf	sprintf@prec& (0+255),b
 15938                           
 15939                           ; BSR set to: 0
 15940  000A7A  4B66               	infsnz	sprintf@f& (0+255),f,b
 15941  000A7C  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 15942  000A7E                     l11639:
 15943                           
 15944                           ; BSR set to: 0
 15945  000A7E  C066  FFF6         	movff	sprintf@f,tblptrl
 15946  000A82  C067  FFF7         	movff	sprintf@f+1,tblptrh
 15947  000A86                     	if	0	;tblptru may be non-zero
 15948  000A86                     	endif
 15949  000A86                     	if	0	;tblptru may be non-zero
 15950  000A86                     	endif
 15951  000A86  0008               	tblrd		*
 15952  000A88  50F5               	movf	tablat,w,c
 15953  000A8A  EC9F  F01D         	call	_isdigit
 15954  000A8E  E371               	bnc	l11691
 15955  000A90  D7E6               	goto	l11635
 15956  000A92                     l1276:
 15957                           
 15958                           ;doprnt.c: 626: prec = 0;
 15959  000A92  0100               	movlb	0	; () banked
 15960  000A94  6B81               	clrf	sprintf@prec& (0+255),b
 15961  000A96  D06D               	goto	l11691
 15962  000A98                     l11641:
 15963                           
 15964                           ; BSR set to: 0
 15965                           ;doprnt.c: 691: flag |= 0x40;
 15966  000A98  8D85               	bsf	sprintf@flag& (0+255),6,b
 15967                           
 15968                           ;doprnt.c: 693: break;
 15969  000A9A  D089               	goto	l11693
 15970  000A9C                     l11643:
 15971                           
 15972                           ; BSR set to: 0
 15973                           ;doprnt.c: 714: flag |= 0x20;
 15974  000A9C  8B85               	bsf	sprintf@flag& (0+255),5,b
 15975  000A9E                     l1291:
 15976                           
 15977                           ; BSR set to: 0
 15978                           ;doprnt.c: 721: flag |= 0x80;
 15979  000A9E  8F85               	bsf	sprintf@flag& (0+255),7,b
 15980                           
 15981                           ;doprnt.c: 723: break;
 15982  000AA0  D086               	goto	l11693
 15983  000AA2                     l11645:
 15984                           
 15985                           ; BSR set to: 0
 15986                           ;doprnt.c: 753: if(prec && prec < len)
 15987  000AA2  5181               	movf	sprintf@prec& (0+255),w,b
 15988  000AA4  E00F               	bz	l11651
 15989                           
 15990                           ; BSR set to: 0
 15991  000AA6  C081  F070         	movff	sprintf@prec,??_sprintf
 15992  000AAA  6B71               	clrf	(??_sprintf+1)& (0+255),b
 15993  000AAC  BF70               	btfsc	??_sprintf& (0+255),7,b
 15994  000AAE  0771               	decf	(??_sprintf+1)& (0+255),f,b
 15995  000AB0  517C               	movf	sprintf@len& (0+255),w,b
 15996  000AB2  5D70               	subwf	??_sprintf& (0+255),w,b
 15997  000AB4  517D               	movf	(sprintf@len+1)& (0+255),w,b
 15998  000AB6  5971               	subwfb	(??_sprintf+1)& (0+255),w,b
 15999  000AB8  E205               	bc	l11651
 16000                           
 16001                           ; BSR set to: 0
 16002                           ;doprnt.c: 754: len = prec;
 16003  000ABA  5181               	movf	sprintf@prec& (0+255),w,b
 16004  000ABC  6F7C               	movwf	sprintf@len& (0+255),b
 16005  000ABE  6B7D               	clrf	(sprintf@len+1)& (0+255),b
 16006  000AC0  BF7C               	btfsc	sprintf@len& (0+255),7,b
 16007  000AC2  077D               	decf	(sprintf@len+1)& (0+255),f,b
 16008  000AC4                     l11651:
 16009                           
 16010                           ; BSR set to: 0
 16011                           ;doprnt.c: 757: if(width > len)
 16012  000AC4  5182               	movf	sprintf@width& (0+255),w,b
 16013  000AC6  5D7C               	subwf	sprintf@len& (0+255),w,b
 16014  000AC8  5183               	movf	(sprintf@width+1)& (0+255),w,b
 16015  000ACA  597D               	subwfb	(sprintf@len+1)& (0+255),w,b
 16016  000ACC  E205               	bc	l1294
 16017                           
 16018                           ; BSR set to: 0
 16019                           ;doprnt.c: 758: width -= len;
 16020  000ACE  517C               	movf	sprintf@len& (0+255),w,b
 16021  000AD0  5F82               	subwf	sprintf@width& (0+255),f,b
 16022  000AD2  517D               	movf	(sprintf@len+1)& (0+255),w,b
 16023  000AD4  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 16024  000AD6  D002               	goto	l1295
 16025  000AD8                     l1294:
 16026                           
 16027                           ; BSR set to: 0
 16028                           ;doprnt.c: 759: else
 16029                           ;doprnt.c: 760: width = 0;
 16030  000AD8  6B82               	clrf	sprintf@width& (0+255),b
 16031  000ADA  6B83               	clrf	(sprintf@width+1)& (0+255),b
 16032  000ADC                     l1295:
 16033                           
 16034                           ; BSR set to: 0
 16035                           ;doprnt.c: 762: if(!(flag & 0x08))
 16036  000ADC  B785               	btfsc	sprintf@flag& (0+255),3,b
 16037  000ADE  D01D               	goto	l11669
 16038  000AE0  D008               	goto	l11661
 16039  000AE2                     l11657:
 16040                           
 16041                           ; BSR set to: 0
 16042                           ;doprnt.c: 765: ((*sp++ = (' ')));
 16043  000AE2  C064  FFD9         	movff	sprintf@sp,fsr2l
 16044  000AE6  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16045  000AEA  0E20               	movlw	32
 16046  000AEC  6EDF               	movwf	indf2,c
 16047                           
 16048                           ; BSR set to: 0
 16049  000AEE  4B64               	infsnz	sprintf@sp& (0+255),f,b
 16050  000AF0  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 16051  000AF2                     l11661:
 16052                           
 16053                           ; BSR set to: 0
 16054  000AF2  0782               	decf	sprintf@width& (0+255),f,b
 16055  000AF4  A0D8               	btfss	status,0,c
 16056  000AF6  0783               	decf	(sprintf@width+1)& (0+255),f,b
 16057  000AF8  2982               	incf	sprintf@width& (0+255),w,b
 16058  000AFA  E1F3               	bnz	l11657
 16059  000AFC  2983               	incf	(sprintf@width+1)& (0+255),w,b
 16060  000AFE  E00D               	bz	l11669
 16061  000B00  D7F0               	goto	l11657
 16062  000B02                     l11663:
 16063                           
 16064                           ; BSR set to: 0
 16065                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 16066  000B02  517B               	movf	sprintf@cp& (0+255),w,b
 16067  000B04  6ED9               	movwf	fsr2l,c
 16068  000B06  6ADA               	clrf	fsr2h,c
 16069  000B08  C064  FFE1         	movff	sprintf@sp,fsr1l
 16070  000B0C  C065  FFE2         	movff	sprintf@sp+1,fsr1h
 16071  000B10  CFDF FFE7          	movff	indf2,indf1
 16072                           
 16073                           ; BSR set to: 0
 16074  000B14  2B7B               	incf	sprintf@cp& (0+255),f,b
 16075                           
 16076                           ; BSR set to: 0
 16077  000B16  4B64               	infsnz	sprintf@sp& (0+255),f,b
 16078  000B18  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 16079  000B1A                     l11669:
 16080                           
 16081                           ; BSR set to: 0
 16082  000B1A  077C               	decf	sprintf@len& (0+255),f,b
 16083  000B1C  A0D8               	btfss	status,0,c
 16084  000B1E  077D               	decf	(sprintf@len+1)& (0+255),f,b
 16085  000B20  297C               	incf	sprintf@len& (0+255),w,b
 16086  000B22  E1EF               	bnz	l11663
 16087  000B24  297D               	incf	(sprintf@len+1)& (0+255),w,b
 16088  000B26  E1ED               	bnz	l11663
 16089                           
 16090                           ; BSR set to: 0
 16091                           ;doprnt.c: 770: if(flag & 0x08)
 16092  000B28  A785               	btfss	sprintf@flag& (0+255),3,b
 16093  000B2A  D281               	goto	l11905
 16094  000B2C  D008               	goto	l11677
 16095  000B2E                     l11673:
 16096                           
 16097                           ; BSR set to: 0
 16098                           ;doprnt.c: 772: ((*sp++ = (' ')));
 16099  000B2E  C064  FFD9         	movff	sprintf@sp,fsr2l
 16100  000B32  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16101  000B36  0E20               	movlw	32
 16102  000B38  6EDF               	movwf	indf2,c
 16103                           
 16104                           ; BSR set to: 0
 16105  000B3A  4B64               	infsnz	sprintf@sp& (0+255),f,b
 16106  000B3C  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 16107  000B3E                     l11677:
 16108                           
 16109                           ; BSR set to: 0
 16110  000B3E  0782               	decf	sprintf@width& (0+255),f,b
 16111  000B40  A0D8               	btfss	status,0,c
 16112  000B42  0783               	decf	(sprintf@width+1)& (0+255),f,b
 16113  000B44  2982               	incf	sprintf@width& (0+255),w,b
 16114  000B46  E1F3               	bnz	l11673
 16115  000B48  2983               	incf	(sprintf@width+1)& (0+255),w,b
 16116  000B4A  E101 D270          	bz	l11905
 16117  000B4E  D7EF               	goto	l11673
 16118  000B50                     l11679:
 16119                           
 16120                           ; BSR set to: 0
 16121                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 16122  000B50  517E               	movf	sprintf@ap& (0+255),w,b
 16123  000B52  6ED9               	movwf	fsr2l,c
 16124  000B54  6ADA               	clrf	fsr2h,c
 16125  000B56  50DF               	movf	indf2,w,c
 16126  000B58  6F84               	movwf	sprintf@c& (0+255),b
 16127                           
 16128                           ; BSR set to: 0
 16129  000B5A  0E02               	movlw	2
 16130  000B5C  277E               	addwf	sprintf@ap& (0+255),f,b
 16131  000B5E                     l11683:
 16132                           
 16133                           ; BSR set to: 0
 16134                           ;doprnt.c: 805: cp = (char *)&c;
 16135  000B5E  0E84               	movlw	low sprintf@c
 16136  000B60  6F7B               	movwf	sprintf@cp& (0+255),b
 16137                           
 16138                           ; BSR set to: 0
 16139                           ;doprnt.c: 806: len = 1;
 16140  000B62  0E00               	movlw	0
 16141  000B64  6F7D               	movwf	(sprintf@len+1)& (0+255),b
 16142  000B66  0E01               	movlw	1
 16143  000B68  6F7C               	movwf	sprintf@len& (0+255),b
 16144                           
 16145                           ;doprnt.c: 807: goto dostring;
 16146  000B6A  D79B               	goto	l11645
 16147  000B6C                     l11687:
 16148                           
 16149                           ; BSR set to: 0
 16150                           ;doprnt.c: 818: flag |= 0xC0;
 16151  000B6C  0EC0               	movlw	192
 16152  000B6E  1385               	iorwf	sprintf@flag& (0+255),f,b
 16153                           
 16154                           ;doprnt.c: 819: break;
 16155  000B70  D01E               	goto	l11693
 16156  000B72                     l11691:
 16157  000B72  C066  FFF6         	movff	sprintf@f,tblptrl
 16158  000B76  C067  FFF7         	movff	sprintf@f+1,tblptrh
 16159  000B7A  0100               	movlb	0	; () banked
 16160  000B7C  4B66               	infsnz	sprintf@f& (0+255),f,b
 16161  000B7E  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 16162  000B80                     	if	0	;tblptru may be non-zero
 16163  000B80                     	endif
 16164  000B80                     	if	0	;tblptru may be non-zero
 16165  000B80                     	endif
 16166  000B80  0008               	tblrd		*
 16167  000B82  CFF5 F084          	movff	tablat,sprintf@c
 16168  000B86  5184               	movf	sprintf@c& (0+255),w,b
 16169                           
 16170                           ; Switch size 1, requested type "speed"
 16171                           ; Number of cases is 8, Range of values is 0 to 120
 16172                           ; switch strategies available:
 16173                           ; Name         Instructions Cycles
 16174                           ; simple_byte           25    13 (average)
 16175                           ;	Chosen strategy is simple_byte
 16176  000B88  E101 D25D          	bz	l11907
 16177  000B8C  0A58               	xorlw	88	; case 88
 16178  000B8E  E086               	bz	l11643
 16179  000B90  0A3B               	xorlw	59	; case 99
 16180  000B92  E0DE               	bz	l11679
 16181  000B94  0A07               	xorlw	7	; case 100
 16182  000B96  E00B               	bz	l11693
 16183  000B98  0A0D               	xorlw	13	; case 105
 16184  000B9A  E009               	bz	l11693
 16185  000B9C  0A06               	xorlw	6	; case 111
 16186  000B9E  E101 D77B          	bz	l11641
 16187  000BA2  0A1A               	xorlw	26	; case 117
 16188  000BA4  E0E3               	bz	l11687
 16189  000BA6  0A0D               	xorlw	13	; case 120
 16190  000BA8  E101 D779          	bz	l1291
 16191  000BAC  D7D8               	goto	l11683
 16192  000BAE                     l11693:
 16193                           
 16194                           ; BSR set to: 0
 16195                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 16196  000BAE  C085  F070         	movff	sprintf@flag,??_sprintf
 16197  000BB2  0EC0               	movlw	192
 16198  000BB4  1770               	andwf	??_sprintf& (0+255),f,b
 16199  000BB6  E112               	bnz	l11705
 16200                           
 16201                           ; BSR set to: 0
 16202                           ;doprnt.c: 1253: {
 16203                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 16204  000BB8  517E               	movf	sprintf@ap& (0+255),w,b
 16205  000BBA  6ED9               	movwf	fsr2l,c
 16206  000BBC  6ADA               	clrf	fsr2h,c
 16207  000BBE  CFDE F07F          	movff	postinc2,sprintf@val
 16208  000BC2  CFDD F080          	movff	postdec2,sprintf@val+1
 16209                           
 16210                           ; BSR set to: 0
 16211  000BC6  0E02               	movlw	2
 16212  000BC8  277E               	addwf	sprintf@ap& (0+255),f,b
 16213                           
 16214                           ; BSR set to: 0
 16215                           ;doprnt.c: 1261: if((int)val < 0) {
 16216  000BCA  AF80               	btfss	(sprintf@val+1)& (0+255),7,b
 16217  000BCC  D010               	goto	l11709
 16218                           
 16219                           ; BSR set to: 0
 16220                           ;doprnt.c: 1262: flag |= 0x03;
 16221  000BCE  0E03               	movlw	3
 16222  000BD0  1385               	iorwf	sprintf@flag& (0+255),f,b
 16223                           
 16224                           ; BSR set to: 0
 16225                           ;doprnt.c: 1263: val = -val;
 16226  000BD2  6D7F               	negf	sprintf@val& (0+255),b
 16227  000BD4  1F80               	comf	(sprintf@val+1)& (0+255),f,b
 16228  000BD6  B0D8               	btfsc	status,0,c
 16229  000BD8  2B80               	incf	(sprintf@val+1)& (0+255),f,b
 16230  000BDA  D009               	goto	l11709
 16231  000BDC                     l11705:
 16232                           
 16233                           ; BSR set to: 0
 16234                           ;doprnt.c: 1268: else
 16235                           ;doprnt.c: 1273: {
 16236                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16237  000BDC  517E               	movf	sprintf@ap& (0+255),w,b
 16238  000BDE  6ED9               	movwf	fsr2l,c
 16239  000BE0  6ADA               	clrf	fsr2h,c
 16240  000BE2  CFDE F07F          	movff	postinc2,sprintf@val
 16241  000BE6  CFDD F080          	movff	postdec2,sprintf@val+1
 16242                           
 16243                           ; BSR set to: 0
 16244  000BEA  0E02               	movlw	2
 16245  000BEC  277E               	addwf	sprintf@ap& (0+255),f,b
 16246  000BEE                     l11709:
 16247                           
 16248                           ; BSR set to: 0
 16249                           ;doprnt.c: 1287: }
 16250                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 16251  000BEE  5181               	movf	sprintf@prec& (0+255),w,b
 16252  000BF0  E147               	bnz	l11759
 16253                           
 16254                           ; BSR set to: 0
 16255  000BF2  517F               	movf	sprintf@val& (0+255),w,b
 16256  000BF4  1180               	iorwf	(sprintf@val+1)& (0+255),w,b
 16257  000BF6  E144               	bnz	l11759
 16258                           
 16259                           ; BSR set to: 0
 16260                           ;doprnt.c: 1291: prec++;
 16261  000BF8  2B81               	incf	sprintf@prec& (0+255),f,b
 16262  000BFA  D042               	goto	l11759
 16263  000BFC                     l11715:
 16264                           
 16265                           ; BSR set to: 0
 16266                           ;doprnt.c: 1302: case 0xC0:
 16267                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16268  000BFC  0E01               	movlw	1
 16269  000BFE  6F84               	movwf	sprintf@c& (0+255),b
 16270  000C00                     l11717:
 16271                           
 16272                           ; BSR set to: 0
 16273  000C00  0E05               	movlw	5
 16274  000C02  1984               	xorwf	sprintf@c& (0+255),w,b
 16275  000C04  E046               	bz	l11761
 16276                           
 16277                           ; BSR set to: 0
 16278                           ;doprnt.c: 1306: if(val < dpowers[c])
 16279  000C06  5184               	movf	sprintf@c& (0+255),w,b
 16280  000C08  0D02               	mullw	2
 16281  000C0A  0E31               	movlw	low _dpowers
 16282  000C0C  24F3               	addwf	prodl,w,c
 16283  000C0E  6EF6               	movwf	tblptrl,c
 16284  000C10  0EFE               	movlw	high _dpowers
 16285  000C12  20F4               	addwfc	prodh,w,c
 16286  000C14  6EF7               	movwf	tblptrh,c
 16287  000C16                     	if	0	;There are less than 3 active tblptr bytes
 16288  000C16                     	endif
 16289  000C16  0009               	tblrd		*+
 16290  000C18  50F5               	movf	tablat,w,c
 16291  000C1A  5D7F               	subwf	sprintf@val& (0+255),w,b
 16292  000C1C  0009               	tblrd		*+
 16293  000C1E  50F5               	movf	tablat,w,c
 16294  000C20  5980               	subwfb	(sprintf@val+1)& (0+255),w,b
 16295  000C22  E337               	bnc	l11761
 16296                           
 16297                           ; BSR set to: 0
 16298  000C24  2B84               	incf	sprintf@c& (0+255),f,b
 16299  000C26  D7EC               	goto	l11717
 16300  000C28                     l11729:
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16304  000C28  0E01               	movlw	1
 16305  000C2A  6F84               	movwf	sprintf@c& (0+255),b
 16306  000C2C                     l11731:
 16307                           
 16308                           ; BSR set to: 0
 16309  000C2C  0E04               	movlw	4
 16310  000C2E  1984               	xorwf	sprintf@c& (0+255),w,b
 16311  000C30  E030               	bz	l11761
 16312                           
 16313                           ; BSR set to: 0
 16314                           ;doprnt.c: 1317: if(val < hexpowers[c])
 16315  000C32  5184               	movf	sprintf@c& (0+255),w,b
 16316  000C34  0D02               	mullw	2
 16317  000C36  0E3B               	movlw	low _hexpowers
 16318  000C38  24F3               	addwf	prodl,w,c
 16319  000C3A  6EF6               	movwf	tblptrl,c
 16320  000C3C  0EFE               	movlw	high _hexpowers
 16321  000C3E  20F4               	addwfc	prodh,w,c
 16322  000C40  6EF7               	movwf	tblptrh,c
 16323  000C42                     	if	0	;There are less than 3 active tblptr bytes
 16324  000C42                     	endif
 16325  000C42  0009               	tblrd		*+
 16326  000C44  50F5               	movf	tablat,w,c
 16327  000C46  5D7F               	subwf	sprintf@val& (0+255),w,b
 16328  000C48  0009               	tblrd		*+
 16329  000C4A  50F5               	movf	tablat,w,c
 16330  000C4C  5980               	subwfb	(sprintf@val+1)& (0+255),w,b
 16331  000C4E  E321               	bnc	l11761
 16332                           
 16333                           ; BSR set to: 0
 16334  000C50  2B84               	incf	sprintf@c& (0+255),f,b
 16335  000C52  D7EC               	goto	l11731
 16336  000C54                     l11743:
 16337                           
 16338                           ; BSR set to: 0
 16339                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 16340  000C54  0E01               	movlw	1
 16341  000C56  6F84               	movwf	sprintf@c& (0+255),b
 16342  000C58                     l11745:
 16343                           
 16344                           ; BSR set to: 0
 16345  000C58  0E06               	movlw	6
 16346  000C5A  1984               	xorwf	sprintf@c& (0+255),w,b
 16347  000C5C  E01A               	bz	l11761
 16348                           
 16349                           ; BSR set to: 0
 16350                           ;doprnt.c: 1329: if(val < octpowers[c])
 16351  000C5E  5184               	movf	sprintf@c& (0+255),w,b
 16352  000C60  0D02               	mullw	2
 16353  000C62  0E25               	movlw	low _octpowers
 16354  000C64  24F3               	addwf	prodl,w,c
 16355  000C66  6EF6               	movwf	tblptrl,c
 16356  000C68  0EFE               	movlw	high _octpowers
 16357  000C6A  20F4               	addwfc	prodh,w,c
 16358  000C6C  6EF7               	movwf	tblptrh,c
 16359  000C6E                     	if	0	;There are less than 3 active tblptr bytes
 16360  000C6E                     	endif
 16361  000C6E  0009               	tblrd		*+
 16362  000C70  50F5               	movf	tablat,w,c
 16363  000C72  5D7F               	subwf	sprintf@val& (0+255),w,b
 16364  000C74  0009               	tblrd		*+
 16365  000C76  50F5               	movf	tablat,w,c
 16366  000C78  5980               	subwfb	(sprintf@val+1)& (0+255),w,b
 16367  000C7A  E30B               	bnc	l11761
 16368                           
 16369                           ; BSR set to: 0
 16370  000C7C  2B84               	incf	sprintf@c& (0+255),f,b
 16371  000C7E  D7EC               	goto	l11745
 16372  000C80                     l11759:
 16373                           
 16374                           ; BSR set to: 0
 16375  000C80  5185               	movf	sprintf@flag& (0+255),w,b
 16376  000C82  0BC0               	andlw	192
 16377                           
 16378                           ; Switch size 1, requested type "speed"
 16379                           ; Number of cases is 4, Range of values is 0 to 192
 16380                           ; switch strategies available:
 16381                           ; Name         Instructions Cycles
 16382                           ; simple_byte           13     7 (average)
 16383                           ;	Chosen strategy is simple_byte
 16384  000C84  E0BB               	bz	l11715
 16385  000C86  0A40               	xorlw	64	; case 64
 16386  000C88  E0E5               	bz	l11743
 16387  000C8A  0AC0               	xorlw	192	; case 128
 16388  000C8C  E0CD               	bz	l11729
 16389  000C8E  0A40               	xorlw	64	; case 192
 16390  000C90  E0B5               	bz	l11715
 16391  000C92                     l11761:
 16392                           
 16393                           ; BSR set to: 0
 16394                           ;doprnt.c: 1339: if(c < prec)
 16395  000C92  5184               	movf	sprintf@c& (0+255),w,b
 16396  000C94  0A80               	xorlw	128
 16397  000C96  6F70               	movwf	??_sprintf& (0+255),b
 16398  000C98  5181               	movf	sprintf@prec& (0+255),w,b
 16399  000C9A  0A80               	xorlw	128
 16400  000C9C  5D70               	subwf	??_sprintf& (0+255),w,b
 16401  000C9E  E203               	bc	l11765
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;doprnt.c: 1340: c = prec;
 16405  000CA0  C081  F084         	movff	sprintf@prec,sprintf@c
 16406  000CA4  D009               	goto	l11769
 16407  000CA6                     l11765:
 16408                           
 16409                           ; BSR set to: 0
 16410                           ;doprnt.c: 1341: else if(prec < c)
 16411  000CA6  5181               	movf	sprintf@prec& (0+255),w,b
 16412  000CA8  0A80               	xorlw	128
 16413  000CAA  6F70               	movwf	??_sprintf& (0+255),b
 16414  000CAC  5184               	movf	sprintf@c& (0+255),w,b
 16415  000CAE  0A80               	xorlw	128
 16416  000CB0  5D70               	subwf	??_sprintf& (0+255),w,b
 16417  000CB2  E202               	bc	l11769
 16418                           
 16419                           ; BSR set to: 0
 16420                           ;doprnt.c: 1342: prec = c;
 16421  000CB4  C084  F081         	movff	sprintf@c,sprintf@prec
 16422  000CB8                     l11769:
 16423                           
 16424                           ; BSR set to: 0
 16425                           ;doprnt.c: 1345: if(width && flag & 0x03)
 16426  000CB8  5182               	movf	sprintf@width& (0+255),w,b
 16427  000CBA  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 16428  000CBC  E008               	bz	l11775
 16429                           
 16430                           ; BSR set to: 0
 16431  000CBE  C085  F070         	movff	sprintf@flag,??_sprintf
 16432  000CC2  0E03               	movlw	3
 16433  000CC4  1770               	andwf	??_sprintf& (0+255),f,b
 16434  000CC6  E003               	bz	l11775
 16435                           
 16436                           ; BSR set to: 0
 16437                           ;doprnt.c: 1346: width--;
 16438  000CC8  0782               	decf	sprintf@width& (0+255),f,b
 16439  000CCA  A0D8               	btfss	status,0,c
 16440  000CCC  0783               	decf	(sprintf@width+1)& (0+255),f,b
 16441  000CCE                     l11775:
 16442                           
 16443                           ; BSR set to: 0
 16444                           ;doprnt.c: 1348: if(flag & 0x4000) {
 16445  000CCE  AD86               	btfss	(sprintf@flag+1)& (0+255),6,b
 16446  000CD0  D013               	goto	l11781
 16447                           
 16448                           ; BSR set to: 0
 16449                           ;doprnt.c: 1349: if(width > prec)
 16450  000CD2  0E80               	movlw	128
 16451  000CD4  BF81               	btfsc	sprintf@prec& (0+255),7,b
 16452  000CD6  0E7F               	movlw	127
 16453  000CD8  6F70               	movwf	??_sprintf& (0+255),b
 16454  000CDA  5182               	movf	sprintf@width& (0+255),w,b
 16455  000CDC  5D81               	subwf	sprintf@prec& (0+255),w,b
 16456  000CDE  5183               	movf	(sprintf@width+1)& (0+255),w,b
 16457  000CE0  0A80               	xorlw	128
 16458  000CE2  5970               	subwfb	??_sprintf& (0+255),w,b
 16459  000CE4  E207               	bc	l1334
 16460                           
 16461                           ; BSR set to: 0
 16462                           ;doprnt.c: 1350: width -= prec;
 16463  000CE6  5181               	movf	sprintf@prec& (0+255),w,b
 16464  000CE8  5F82               	subwf	sprintf@width& (0+255),f,b
 16465  000CEA  0E00               	movlw	0
 16466  000CEC  BF81               	btfsc	sprintf@prec& (0+255),7,b
 16467  000CEE  0EFF               	movlw	255
 16468  000CF0  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 16469  000CF2  D002               	goto	l11781
 16470  000CF4                     l1334:
 16471                           
 16472                           ; BSR set to: 0
 16473                           ;doprnt.c: 1351: else
 16474                           ;doprnt.c: 1352: width = 0;
 16475  000CF4  6B82               	clrf	sprintf@width& (0+255),b
 16476  000CF6  6B83               	clrf	(sprintf@width+1)& (0+255),b
 16477  000CF8                     l11781:
 16478                           
 16479                           ; BSR set to: 0
 16480                           ;doprnt.c: 1353: }
 16481                           ;doprnt.c: 1357: if((flag & (
 16482                           ;doprnt.c: 1359: 0x04|
 16483                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 16484  000CF8  0EC4               	movlw	196
 16485  000CFA  6F70               	movwf	??_sprintf& (0+255),b
 16486  000CFC  0E08               	movlw	8
 16487  000CFE  6F71               	movwf	(??_sprintf+1)& (0+255),b
 16488  000D00  C085  F072         	movff	sprintf@flag,??_sprintf+2
 16489  000D04  C086  F073         	movff	sprintf@flag+1,??_sprintf+3
 16490  000D08  5170               	movf	??_sprintf& (0+255),w,b
 16491  000D0A  1772               	andwf	(??_sprintf+2)& (0+255),f,b
 16492  000D0C  5171               	movf	(??_sprintf+1)& (0+255),w,b
 16493  000D0E  1773               	andwf	(??_sprintf+3)& (0+255),f,b
 16494  000D10  0E40               	movlw	64
 16495  000D12  1972               	xorwf	(??_sprintf+2)& (0+255),w,b
 16496  000D14  E10A               	bnz	l11787
 16497  000D16  0E08               	movlw	8
 16498  000D18  1973               	xorwf	(??_sprintf+3)& (0+255),w,b
 16499  000D1A  E107               	bnz	l11787
 16500                           
 16501                           ; BSR set to: 0
 16502                           ;doprnt.c: 1362: if(width)
 16503  000D1C  5182               	movf	sprintf@width& (0+255),w,b
 16504  000D1E  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 16505  000D20  E024               	bz	l11793
 16506                           
 16507                           ; BSR set to: 0
 16508                           ;doprnt.c: 1363: width--;
 16509  000D22  0782               	decf	sprintf@width& (0+255),f,b
 16510  000D24  A0D8               	btfss	status,0,c
 16511  000D26  0783               	decf	(sprintf@width+1)& (0+255),f,b
 16512  000D28  D020               	goto	l11793
 16513  000D2A                     l11787:
 16514                           
 16515                           ; BSR set to: 0
 16516                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 16517  000D2A  0EC0               	movlw	192
 16518  000D2C  6F70               	movwf	??_sprintf& (0+255),b
 16519  000D2E  0E08               	movlw	8
 16520  000D30  6F71               	movwf	(??_sprintf+1)& (0+255),b
 16521  000D32  C085  F072         	movff	sprintf@flag,??_sprintf+2
 16522  000D36  C086  F073         	movff	sprintf@flag+1,??_sprintf+3
 16523  000D3A  5170               	movf	??_sprintf& (0+255),w,b
 16524  000D3C  1772               	andwf	(??_sprintf+2)& (0+255),f,b
 16525  000D3E  5171               	movf	(??_sprintf+1)& (0+255),w,b
 16526  000D40  1773               	andwf	(??_sprintf+3)& (0+255),f,b
 16527  000D42  0E80               	movlw	128
 16528  000D44  1972               	xorwf	(??_sprintf+2)& (0+255),w,b
 16529  000D46  E111               	bnz	l11793
 16530  000D48  0E08               	movlw	8
 16531  000D4A  1973               	xorwf	(??_sprintf+3)& (0+255),w,b
 16532  000D4C  E10E               	bnz	l11793
 16533                           
 16534                           ; BSR set to: 0
 16535                           ;doprnt.c: 1372: if(width > 2)
 16536  000D4E  BF83               	btfsc	(sprintf@width+1)& (0+255),7,b
 16537  000D50  D00A               	goto	l1340
 16538  000D52  5183               	movf	(sprintf@width+1)& (0+255),w,b
 16539  000D54  E103               	bnz	u12190
 16540  000D56  0E03               	movlw	3
 16541  000D58  5D82               	subwf	sprintf@width& (0+255),w,b
 16542  000D5A  E305               	bnc	l1340
 16543  000D5C                     u12190:
 16544                           
 16545                           ; BSR set to: 0
 16546                           ;doprnt.c: 1373: width -= 2;
 16547  000D5C  0EFE               	movlw	254
 16548  000D5E  2782               	addwf	sprintf@width& (0+255),f,b
 16549  000D60  0EFF               	movlw	255
 16550  000D62  2383               	addwfc	(sprintf@width+1)& (0+255),f,b
 16551  000D64  D002               	goto	l11793
 16552  000D66                     l1340:
 16553                           
 16554                           ; BSR set to: 0
 16555                           ;doprnt.c: 1374: else
 16556                           ;doprnt.c: 1375: width = 0;
 16557  000D66  6B82               	clrf	sprintf@width& (0+255),b
 16558  000D68  6B83               	clrf	(sprintf@width+1)& (0+255),b
 16559  000D6A                     l11793:
 16560                           
 16561                           ; BSR set to: 0
 16562                           ;doprnt.c: 1376: }
 16563                           ;doprnt.c: 1381: if(width > c)
 16564  000D6A  0E80               	movlw	128
 16565  000D6C  BF84               	btfsc	sprintf@c& (0+255),7,b
 16566  000D6E  0E7F               	movlw	127
 16567  000D70  6F70               	movwf	??_sprintf& (0+255),b
 16568  000D72  5182               	movf	sprintf@width& (0+255),w,b
 16569  000D74  5D84               	subwf	sprintf@c& (0+255),w,b
 16570  000D76  5183               	movf	(sprintf@width+1)& (0+255),w,b
 16571  000D78  0A80               	xorlw	128
 16572  000D7A  5970               	subwfb	??_sprintf& (0+255),w,b
 16573  000D7C  E207               	bc	l1342
 16574                           
 16575                           ; BSR set to: 0
 16576                           ;doprnt.c: 1382: width -= c;
 16577  000D7E  5184               	movf	sprintf@c& (0+255),w,b
 16578  000D80  5F82               	subwf	sprintf@width& (0+255),f,b
 16579  000D82  0E00               	movlw	0
 16580  000D84  BF84               	btfsc	sprintf@c& (0+255),7,b
 16581  000D86  0EFF               	movlw	255
 16582  000D88  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 16583  000D8A  D002               	goto	l1343
 16584  000D8C                     l1342:
 16585                           
 16586                           ; BSR set to: 0
 16587                           ;doprnt.c: 1383: else
 16588                           ;doprnt.c: 1384: width = 0;
 16589  000D8C  6B82               	clrf	sprintf@width& (0+255),b
 16590  000D8E  6B83               	clrf	(sprintf@width+1)& (0+255),b
 16591  000D90                     l1343:
 16592                           
 16593                           ; BSR set to: 0
 16594                           ;doprnt.c: 1387: if(flag & 0x04) {
 16595  000D90  A585               	btfss	sprintf@flag& (0+255),2,b
 16596  000D92  D04F               	goto	l11831
 16597                           
 16598                           ; BSR set to: 0
 16599                           ;doprnt.c: 1392: if(flag & 0x03)
 16600  000D94  C085  F070         	movff	sprintf@flag,??_sprintf
 16601  000D98  0E03               	movlw	3
 16602  000D9A  1770               	andwf	??_sprintf& (0+255),f,b
 16603  000D9C  E009               	bz	l1345
 16604                           
 16605                           ; BSR set to: 0
 16606                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 16607  000D9E  C064  FFD9         	movff	sprintf@sp,fsr2l
 16608  000DA2  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16609  000DA6  0E2D               	movlw	45
 16610  000DA8  6EDF               	movwf	indf2,c
 16611  000DAA                     l11801:
 16612                           
 16613                           ; BSR set to: 0
 16614  000DAA  4B64               	infsnz	sprintf@sp& (0+255),f,b
 16615  000DAC  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 16616  000DAE  D031               	goto	l11823
 16617  000DB0                     l1345:
 16618                           
 16619                           ; BSR set to: 0
 16620                           ;doprnt.c: 1396: else
 16621                           ;doprnt.c: 1399: if(flag & 0x01)
 16622  000DB0  A185               	btfss	sprintf@flag& (0+255),0,b
 16623  000DB2  D006               	goto	l11807
 16624                           
 16625                           ; BSR set to: 0
 16626                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 16627  000DB4  C064  FFD9         	movff	sprintf@sp,fsr2l
 16628  000DB8  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16629  000DBC  0E20               	movlw	32
 16630  000DBE  D7F4               	goto	L17
 16631  000DC0                     l11807:
 16632                           
 16633                           ; BSR set to: 0
 16634                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 16635  000DC0  0EC0               	movlw	192
 16636  000DC2  6F70               	movwf	??_sprintf& (0+255),b
 16637  000DC4  0E08               	movlw	8
 16638  000DC6  6F71               	movwf	(??_sprintf+1)& (0+255),b
 16639  000DC8  C085  F072         	movff	sprintf@flag,??_sprintf+2
 16640  000DCC  C086  F073         	movff	sprintf@flag+1,??_sprintf+3
 16641  000DD0  5170               	movf	??_sprintf& (0+255),w,b
 16642  000DD2  1772               	andwf	(??_sprintf+2)& (0+255),f,b
 16643  000DD4  5171               	movf	(??_sprintf+1)& (0+255),w,b
 16644  000DD6  1773               	andwf	(??_sprintf+3)& (0+255),f,b
 16645  000DD8  0E80               	movlw	128
 16646  000DDA  1972               	xorwf	(??_sprintf+2)& (0+255),w,b
 16647  000DDC  E11A               	bnz	l11823
 16648  000DDE  0E08               	movlw	8
 16649  000DE0  1973               	xorwf	(??_sprintf+3)& (0+255),w,b
 16650  000DE2  E117               	bnz	l11823
 16651                           
 16652                           ; BSR set to: 0
 16653                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 16654  000DE4  C064  FFD9         	movff	sprintf@sp,fsr2l
 16655  000DE8  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16656  000DEC  0E30               	movlw	48
 16657  000DEE  6EDF               	movwf	indf2,c
 16658                           
 16659                           ; BSR set to: 0
 16660  000DF0  4B64               	infsnz	sprintf@sp& (0+255),f,b
 16661  000DF2  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 16662                           
 16663                           ; BSR set to: 0
 16664                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 16665  000DF4  BB85               	btfsc	sprintf@flag& (0+255),5,b
 16666  000DF6  D003               	goto	l11817
 16667                           
 16668                           ; BSR set to: 0
 16669  000DF8  6B76               	clrf	(_sprintf$3538+1)& (0+255),b
 16670  000DFA  0E78               	movlw	120
 16671  000DFC  D002               	goto	L18
 16672  000DFE                     l11817:
 16673                           
 16674                           ; BSR set to: 0
 16675  000DFE  6B76               	clrf	(_sprintf$3538+1)& (0+255),b
 16676  000E00  0E58               	movlw	88
 16677  000E02                     L18:
 16678  000E02  6F75               	movwf	_sprintf$3538& (0+255),b
 16679                           
 16680                           ; BSR set to: 0
 16681  000E04  C064  FFD9         	movff	sprintf@sp,fsr2l
 16682  000E08  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16683  000E0C  C075  FFDF         	movff	_sprintf$3538,indf2
 16684  000E10  D7CC               	goto	l11801
 16685  000E12                     l11823:
 16686                           
 16687                           ; BSR set to: 0
 16688                           ;doprnt.c: 1412: }
 16689                           ;doprnt.c: 1415: if(width)
 16690  000E12  5182               	movf	sprintf@width& (0+255),w,b
 16691  000E14  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 16692  000E16  E101 D0F2          	bz	l11895
 16693                           
 16694                           ; BSR set to: 0
 16695                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 16696  000E1A  C064  FFD9         	movff	sprintf@sp,fsr2l
 16697  000E1E  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16698  000E22  0E30               	movlw	48
 16699  000E24  6EDF               	movwf	indf2,c
 16700                           
 16701                           ; BSR set to: 0
 16702  000E26  4B64               	infsnz	sprintf@sp& (0+255),f,b
 16703  000E28  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 16704                           
 16705                           ; BSR set to: 0
 16706                           ;doprnt.c: 1418: while(--width);
 16707  000E2A  0782               	decf	sprintf@width& (0+255),f,b
 16708  000E2C  A0D8               	btfss	status,0,c
 16709  000E2E  0783               	decf	(sprintf@width+1)& (0+255),f,b
 16710  000E30  D7F0               	goto	l11823
 16711  000E32                     l11831:
 16712                           
 16713                           ; BSR set to: 0
 16714                           ;doprnt.c: 1422: {
 16715                           ;doprnt.c: 1424: if(width
 16716                           ;doprnt.c: 1426: && !(flag & 0x08)
 16717                           ;doprnt.c: 1428: )
 16718  000E32  5182               	movf	sprintf@width& (0+255),w,b
 16719  000E34  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 16720  000E36  E010               	bz	l11841
 16721                           
 16722                           ; BSR set to: 0
 16723  000E38  B785               	btfsc	sprintf@flag& (0+255),3,b
 16724  000E3A  D00E               	goto	l11841
 16725  000E3C                     l11835:
 16726                           
 16727                           ; BSR set to: 0
 16728                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 16729  000E3C  C064  FFD9         	movff	sprintf@sp,fsr2l
 16730  000E40  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16731  000E44  0E20               	movlw	32
 16732  000E46  6EDF               	movwf	indf2,c
 16733                           
 16734                           ; BSR set to: 0
 16735  000E48  4B64               	infsnz	sprintf@sp& (0+255),f,b
 16736  000E4A  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 16737                           
 16738                           ; BSR set to: 0
 16739                           ;doprnt.c: 1431: while(--width);
 16740  000E4C  0782               	decf	sprintf@width& (0+255),f,b
 16741  000E4E  A0D8               	btfss	status,0,c
 16742  000E50  0783               	decf	(sprintf@width+1)& (0+255),f,b
 16743  000E52  5182               	movf	sprintf@width& (0+255),w,b
 16744  000E54  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 16745  000E56  E1F2               	bnz	l11835
 16746  000E58                     l11841:
 16747                           
 16748                           ; BSR set to: 0
 16749                           ;doprnt.c: 1438: if(flag & 0x03)
 16750  000E58  C085  F070         	movff	sprintf@flag,??_sprintf
 16751  000E5C  0E03               	movlw	3
 16752  000E5E  1770               	andwf	??_sprintf& (0+255),f,b
 16753  000E60  E009               	bz	l1361
 16754                           
 16755                           ; BSR set to: 0
 16756                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 16757  000E62  C064  FFD9         	movff	sprintf@sp,fsr2l
 16758  000E66  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16759  000E6A  0E2D               	movlw	45
 16760  000E6C  6EDF               	movwf	indf2,c
 16761                           
 16762                           ; BSR set to: 0
 16763  000E6E  4B64               	infsnz	sprintf@sp& (0+255),f,b
 16764  000E70  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 16765  000E72  D008               	goto	l11851
 16766  000E74                     l1361:
 16767                           
 16768                           ; BSR set to: 0
 16769                           ;doprnt.c: 1443: else if(flag & 0x01)
 16770  000E74  A185               	btfss	sprintf@flag& (0+255),0,b
 16771  000E76  D006               	goto	l11851
 16772                           
 16773                           ; BSR set to: 0
 16774                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 16775  000E78  C064  FFD9         	movff	sprintf@sp,fsr2l
 16776  000E7C  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16777  000E80  0E20               	movlw	32
 16778  000E82  D7F4               	goto	L19
 16779  000E84                     l11851:
 16780                           
 16781                           ; BSR set to: 0
 16782                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 16783  000E84  0EC0               	movlw	192
 16784  000E86  6F70               	movwf	??_sprintf& (0+255),b
 16785  000E88  0E08               	movlw	8
 16786  000E8A  6F71               	movwf	(??_sprintf+1)& (0+255),b
 16787  000E8C  C085  F072         	movff	sprintf@flag,??_sprintf+2
 16788  000E90  C086  F073         	movff	sprintf@flag+1,??_sprintf+3
 16789  000E94  5170               	movf	??_sprintf& (0+255),w,b
 16790  000E96  1772               	andwf	(??_sprintf+2)& (0+255),f,b
 16791  000E98  5171               	movf	(??_sprintf+1)& (0+255),w,b
 16792  000E9A  1773               	andwf	(??_sprintf+3)& (0+255),f,b
 16793  000E9C  0E40               	movlw	64
 16794  000E9E  1972               	xorwf	(??_sprintf+2)& (0+255),w,b
 16795  000EA0  E10C               	bnz	l11857
 16796  000EA2  0E08               	movlw	8
 16797  000EA4  1973               	xorwf	(??_sprintf+3)& (0+255),w,b
 16798  000EA6  E109               	bnz	l11857
 16799                           
 16800                           ; BSR set to: 0
 16801                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 16802  000EA8  C064  FFD9         	movff	sprintf@sp,fsr2l
 16803  000EAC  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16804  000EB0  0E30               	movlw	48
 16805  000EB2  6EDF               	movwf	indf2,c
 16806  000EB4                     l11855:
 16807                           
 16808                           ; BSR set to: 0
 16809  000EB4  4B64               	infsnz	sprintf@sp& (0+255),f,b
 16810  000EB6  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 16811  000EB8  D0A2               	goto	l11895
 16812  000EBA                     l11857:
 16813                           
 16814                           ; BSR set to: 0
 16815                           ;doprnt.c: 1450: else
 16816                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 16817  000EBA  0EC0               	movlw	192
 16818  000EBC  6F70               	movwf	??_sprintf& (0+255),b
 16819  000EBE  0E08               	movlw	8
 16820  000EC0  6F71               	movwf	(??_sprintf+1)& (0+255),b
 16821  000EC2  C085  F072         	movff	sprintf@flag,??_sprintf+2
 16822  000EC6  C086  F073         	movff	sprintf@flag+1,??_sprintf+3
 16823  000ECA  5170               	movf	??_sprintf& (0+255),w,b
 16824  000ECC  1772               	andwf	(??_sprintf+2)& (0+255),f,b
 16825  000ECE  5171               	movf	(??_sprintf+1)& (0+255),w,b
 16826  000ED0  1773               	andwf	(??_sprintf+3)& (0+255),f,b
 16827  000ED2  0E80               	movlw	128
 16828  000ED4  1972               	xorwf	(??_sprintf+2)& (0+255),w,b
 16829  000ED6  E11B               	bnz	l1357
 16830  000ED8  0E08               	movlw	8
 16831  000EDA  1973               	xorwf	(??_sprintf+3)& (0+255),w,b
 16832  000EDC  E001 D08F          	bnz	l11895
 16833                           
 16834                           ; BSR set to: 0
 16835                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 16836  000EE0  C064  FFD9         	movff	sprintf@sp,fsr2l
 16837  000EE4  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16838  000EE8  0E30               	movlw	48
 16839  000EEA  6EDF               	movwf	indf2,c
 16840                           
 16841                           ; BSR set to: 0
 16842  000EEC  4B64               	infsnz	sprintf@sp& (0+255),f,b
 16843  000EEE  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 16844                           
 16845                           ; BSR set to: 0
 16846                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 16847  000EF0  BB85               	btfsc	sprintf@flag& (0+255),5,b
 16848  000EF2  D003               	goto	l11867
 16849                           
 16850                           ; BSR set to: 0
 16851  000EF4  6B78               	clrf	(_sprintf$3539+1)& (0+255),b
 16852  000EF6  0E78               	movlw	120
 16853  000EF8  D002               	goto	L20
 16854  000EFA                     l11867:
 16855                           
 16856                           ; BSR set to: 0
 16857  000EFA  6B78               	clrf	(_sprintf$3539+1)& (0+255),b
 16858  000EFC  0E58               	movlw	88
 16859  000EFE                     L20:
 16860  000EFE  6F77               	movwf	_sprintf$3539& (0+255),b
 16861                           
 16862                           ; BSR set to: 0
 16863  000F00  C064  FFD9         	movff	sprintf@sp,fsr2l
 16864  000F04  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 16865  000F08  C077  FFDF         	movff	_sprintf$3539,indf2
 16866  000F0C  D7D3               	goto	l11855
 16867  000F0E                     l1357:
 16868                           
 16869                           ; BSR set to: 0
 16870                           ;doprnt.c: 1466: }
 16871                           ;doprnt.c: 1469: }
 16872                           ;doprnt.c: 1474: while(prec--) {
 16873  000F0E  D077               	goto	l11895
 16874  000F10                     l11873:
 16875                           
 16876                           ; BSR set to: 0
 16877                           ;doprnt.c: 1486: case 0xC0:
 16878                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 16879  000F10  5181               	movf	sprintf@prec& (0+255),w,b
 16880  000F12  0D02               	mullw	2
 16881  000F14  0E31               	movlw	low _dpowers
 16882  000F16  24F3               	addwf	prodl,w,c
 16883  000F18  6EF6               	movwf	tblptrl,c
 16884  000F1A  0EFE               	movlw	high _dpowers
 16885  000F1C  20F4               	addwfc	prodh,w,c
 16886  000F1E  6EF7               	movwf	tblptrh,c
 16887  000F20                     	if	0	;There are less than 3 active tblptr bytes
 16888  000F20                     	endif
 16889  000F20  0009               	tblrd		*+
 16890  000F22  CFF5 F01F          	movff	tablat,___lwdiv@divisor
 16891  000F26  000A               	tblrd		*-
 16892  000F28  CFF5 F020          	movff	tablat,___lwdiv@divisor+1
 16893  000F2C  C07F  F01D         	movff	sprintf@val,___lwdiv@dividend
 16894  000F30  C080  F01E         	movff	sprintf@val+1,___lwdiv@dividend+1
 16895  000F34  ECEF  F01A         	call	___lwdiv	;wreg free
 16896  000F38  C01D  F060         	movff	?___lwdiv,___lwmod@dividend
 16897  000F3C  C01E  F061         	movff	?___lwdiv+1,___lwmod@dividend+1
 16898  000F40  6B63               	clrf	(___lwmod@divisor+1)& (0+255),b
 16899  000F42  0E0A               	movlw	10
 16900  000F44  6F62               	movwf	___lwmod@divisor& (0+255),b
 16901  000F46  ECF6  F01B         	call	___lwmod	;wreg free
 16902  000F4A  5160               	movf	?___lwmod& (0+255),w,b
 16903  000F4C  D045               	goto	L21
 16904  000F4E                     l11875:
 16905                           
 16906                           ; BSR set to: 0
 16907                           ;doprnt.c: 1499: {
 16908                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 16909  000F4E  C07F  F01D         	movff	sprintf@val,___lwdiv@dividend
 16910  000F52  C080  F01E         	movff	sprintf@val+1,___lwdiv@dividend+1
 16911  000F56  5181               	movf	sprintf@prec& (0+255),w,b
 16912  000F58  0D02               	mullw	2
 16913  000F5A  0E3B               	movlw	low _hexpowers
 16914  000F5C  24F3               	addwf	prodl,w,c
 16915  000F5E  6EF6               	movwf	tblptrl,c
 16916  000F60  0EFE               	movlw	high _hexpowers
 16917  000F62  20F4               	addwfc	prodh,w,c
 16918  000F64  6EF7               	movwf	tblptrh,c
 16919  000F66                     	if	0	;There are less than 3 active tblptr bytes
 16920  000F66                     	endif
 16921  000F66  0009               	tblrd		*+
 16922  000F68  CFF5 F01F          	movff	tablat,___lwdiv@divisor
 16923  000F6C  000A               	tblrd		*-
 16924  000F6E  CFF5 F020          	movff	tablat,___lwdiv@divisor+1
 16925  000F72  ECEF  F01A         	call	___lwdiv	;wreg free
 16926  000F76  501D               	movf	?___lwdiv,w,c
 16927  000F78  0B0F               	andlw	15
 16928  000F7A  6F74               	movwf	sprintf@idx& (0+255),b
 16929                           
 16930                           ; BSR set to: 0
 16931                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 16932  000F7C  BB85               	btfsc	sprintf@flag& (0+255),5,b
 16933  000F7E  D004               	goto	l11881
 16934                           
 16935                           ; BSR set to: 0
 16936  000F80  0E92               	movlw	low STR_20
 16937  000F82  6F79               	movwf	_sprintf$3545& (0+255),b
 16938  000F84  0EFF               	movlw	high STR_20
 16939  000F86  D003               	goto	L22
 16940  000F88                     l11881:
 16941                           
 16942                           ; BSR set to: 0
 16943  000F88  0E81               	movlw	low STR_19
 16944  000F8A  6F79               	movwf	_sprintf$3545& (0+255),b
 16945  000F8C  0EFF               	movlw	high STR_19
 16946  000F8E                     L22:
 16947  000F8E  6F7A               	movwf	(_sprintf$3545+1)& (0+255),b
 16948                           
 16949                           ; BSR set to: 0
 16950  000F90  5174               	movf	sprintf@idx& (0+255),w,b
 16951  000F92  2579               	addwf	_sprintf$3545& (0+255),w,b
 16952  000F94  6F70               	movwf	??_sprintf& (0+255),b
 16953  000F96  0E00               	movlw	0
 16954  000F98  217A               	addwfc	(_sprintf$3545+1)& (0+255),w,b
 16955  000F9A  6F71               	movwf	(??_sprintf+1)& (0+255),b
 16956  000F9C  C070  FFF6         	movff	??_sprintf,tblptrl
 16957  000FA0  C071  FFF7         	movff	??_sprintf+1,tblptrh
 16958  000FA4                     	if	0	;tblptru may be non-zero
 16959  000FA4                     	endif
 16960  000FA4                     	if	0	;tblptru may be non-zero
 16961  000FA4                     	endif
 16962  000FA4  0008               	tblrd		*
 16963  000FA6  CFF5 F084          	movff	tablat,sprintf@c
 16964                           
 16965                           ;doprnt.c: 1508: }
 16966                           ;doprnt.c: 1510: break;
 16967  000FAA  D022               	goto	l11891
 16968  000FAC                     l11885:
 16969                           
 16970                           ; BSR set to: 0
 16971                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 16972  000FAC  C07F  F01D         	movff	sprintf@val,___lwdiv@dividend
 16973  000FB0  C080  F01E         	movff	sprintf@val+1,___lwdiv@dividend+1
 16974  000FB4  5181               	movf	sprintf@prec& (0+255),w,b
 16975  000FB6  0D02               	mullw	2
 16976  000FB8  0E25               	movlw	low _octpowers
 16977  000FBA  24F3               	addwf	prodl,w,c
 16978  000FBC  6EF6               	movwf	tblptrl,c
 16979  000FBE  0EFE               	movlw	high _octpowers
 16980  000FC0  20F4               	addwfc	prodh,w,c
 16981  000FC2  6EF7               	movwf	tblptrh,c
 16982  000FC4                     	if	0	;There are less than 3 active tblptr bytes
 16983  000FC4                     	endif
 16984  000FC4  0009               	tblrd		*+
 16985  000FC6  CFF5 F01F          	movff	tablat,___lwdiv@divisor
 16986  000FCA  000A               	tblrd		*-
 16987  000FCC  CFF5 F020          	movff	tablat,___lwdiv@divisor+1
 16988  000FD0  ECEF  F01A         	call	___lwdiv	;wreg free
 16989  000FD4  501D               	movf	?___lwdiv,w,c
 16990  000FD6  0B07               	andlw	7
 16991  000FD8                     L21:
 16992  000FD8  0F30               	addlw	48
 16993  000FDA  6F84               	movwf	sprintf@c& (0+255),b
 16994                           
 16995                           ;doprnt.c: 1520: break;
 16996  000FDC  D009               	goto	l11891
 16997  000FDE                     l11889:
 16998                           
 16999                           ; BSR set to: 0
 17000  000FDE  5185               	movf	sprintf@flag& (0+255),w,b
 17001  000FE0  0BC0               	andlw	192
 17002                           
 17003                           ; Switch size 1, requested type "speed"
 17004                           ; Number of cases is 4, Range of values is 0 to 192
 17005                           ; switch strategies available:
 17006                           ; Name         Instructions Cycles
 17007                           ; simple_byte           13     7 (average)
 17008                           ;	Chosen strategy is simple_byte
 17009  000FE2  E096               	bz	l11873
 17010  000FE4  0A40               	xorlw	64	; case 64
 17011  000FE6  E0E2               	bz	l11885
 17012  000FE8  0AC0               	xorlw	192	; case 128
 17013  000FEA  E0B1               	bz	l11875
 17014  000FEC  0A40               	xorlw	64	; case 192
 17015  000FEE  E090               	bz	l11873
 17016  000FF0                     l11891:
 17017                           
 17018                           ; BSR set to: 0
 17019                           ;doprnt.c: 1524: ((*sp++ = (c)));
 17020  000FF0  C064  FFD9         	movff	sprintf@sp,fsr2l
 17021  000FF4  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 17022  000FF8  C084  FFDF         	movff	sprintf@c,indf2
 17023  000FFC  D75B               	goto	l11855
 17024  000FFE                     l11895:
 17025                           
 17026                           ; BSR set to: 0
 17027  000FFE  0781               	decf	sprintf@prec& (0+255),f,b
 17028  001000  2981               	incf	sprintf@prec& (0+255),w,b
 17029  001002  E1ED               	bnz	l11889
 17030                           
 17031                           ; BSR set to: 0
 17032                           ;doprnt.c: 1525: }
 17033                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 17034  001004  B785               	btfsc	sprintf@flag& (0+255),3,b
 17035                           
 17036                           ; BSR set to: 0
 17037  001006  BF83               	btfsc	(sprintf@width+1)& (0+255),7,b
 17038  001008  D012               	goto	l11905
 17039  00100A  5183               	movf	(sprintf@width+1)& (0+255),w,b
 17040  00100C  E102               	bnz	u12390
 17041  00100E  0582               	decf	sprintf@width& (0+255),w,b
 17042  001010  E30E               	bnc	l11905
 17043  001012                     u12390:
 17044  001012                     l11899:
 17045                           
 17046                           ; BSR set to: 0
 17047                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 17048  001012  C064  FFD9         	movff	sprintf@sp,fsr2l
 17049  001016  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 17050  00101A  0E20               	movlw	32
 17051  00101C  6EDF               	movwf	indf2,c
 17052                           
 17053                           ; BSR set to: 0
 17054  00101E  4B64               	infsnz	sprintf@sp& (0+255),f,b
 17055  001020  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 17056                           
 17057                           ; BSR set to: 0
 17058                           ;doprnt.c: 1531: while(--width);
 17059  001022  0782               	decf	sprintf@width& (0+255),f,b
 17060  001024  A0D8               	btfss	status,0,c
 17061  001026  0783               	decf	(sprintf@width+1)& (0+255),f,b
 17062  001028  5182               	movf	sprintf@width& (0+255),w,b
 17063  00102A  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 17064  00102C  E1F2               	bnz	l11899
 17065  00102E                     l11905:
 17066                           
 17067                           ; BSR set to: 0
 17068  00102E  C066  FFF6         	movff	sprintf@f,tblptrl
 17069  001032  C067  FFF7         	movff	sprintf@f+1,tblptrh
 17070  001036  4B66               	infsnz	sprintf@f& (0+255),f,b
 17071  001038  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 17072  00103A                     	if	0	;tblptru may be non-zero
 17073  00103A                     	endif
 17074  00103A                     	if	0	;tblptru may be non-zero
 17075  00103A                     	endif
 17076  00103A  0008               	tblrd		*
 17077  00103C  CFF5 F084          	movff	tablat,sprintf@c
 17078  001040  5184               	movf	sprintf@c& (0+255),w,b
 17079  001042  E001 D475          	bnz	l11583
 17080  001046                     l11907:
 17081                           
 17082                           ; BSR set to: 0
 17083                           ;doprnt.c: 1538: *sp = 0;
 17084  001046  C064  FFD9         	movff	sprintf@sp,fsr2l
 17085  00104A  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 17086  00104E  6ADF               	clrf	indf2,c
 17087                           
 17088                           ; BSR set to: 0
 17089  001050  0C00               	retlw	0	;funcret
 17090  001052                     __end_of_sprintf:
 17091                           	opt stack 0
 17092                           tblptru	equ	0xFF8
 17093                           tblptrh	equ	0xFF7
 17094                           tblptrl	equ	0xFF6
 17095                           tablat	equ	0xFF5
 17096                           prodh	equ	0xFF4
 17097                           prodl	equ	0xFF3
 17098                           intcon	equ	0xFF2
 17099                           intcon2	equ	0xFF1
 17100                           intcon3	equ	0xFF0
 17101                           postinc0	equ	0xFEE
 17102                           plusw0	equ	0xFEB
 17103                           wreg	equ	0xFE8
 17104                           indf1	equ	0xFE7
 17105                           postinc1	equ	0xFE6
 17106                           postdec1	equ	0xFE5
 17107                           fsr1h	equ	0xFE2
 17108                           fsr1l	equ	0xFE1
 17109                           indf2	equ	0xFDF
 17110                           postinc2	equ	0xFDE
 17111                           postdec2	equ	0xFDD
 17112                           plusw2	equ	0xFDB
 17113                           fsr2h	equ	0xFDA
 17114                           fsr2l	equ	0xFD9
 17115                           status	equ	0xFD8
 17116                           
 17117 ;; *************** function _isdigit *****************
 17118 ;; Defined at:
 17119 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\isdigit.c"
 17120 ;; Parameters:    Size  Location     Type
 17121 ;;  c               1    wreg     unsigned char 
 17122 ;; Auto vars:     Size  Location     Type
 17123 ;;  c               1   30[COMRAM] unsigned char 
 17124 ;; Return value:  Size  Location     Type
 17125 ;;		None               void
 17126 ;; Registers used:
 17127 ;;		wreg, status,2, status,0
 17128 ;; Tracked objects:
 17129 ;;		On entry : F/0
 17130 ;;		On exit  : 0/0
 17131 ;;		Unchanged: 0/0
 17132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17134 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17136 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17137 ;;Total ram usage:        3 bytes
 17138 ;; Hardware stack levels used:    1
 17139 ;; Hardware stack levels required when called:    4
 17140 ;; This function calls:
 17141 ;;		Nothing
 17142 ;; This function is called by:
 17143 ;;		_sprintf
 17144 ;; This function uses a non-reentrant model
 17145 ;;
 17146                           
 17147                           	psect	text69
 17148  003B3E                     __ptext69:
 17149                           	opt stack 0
 17150  003B3E                     _isdigit:
 17151                           	opt stack 23
 17152                           
 17153                           ; BSR set to: 0
 17154                           ;incstack = 0
 17155                           ;isdigit@c stored from wreg
 17156  003B3E  6E1F               	movwf	isdigit@c,c
 17157  003B40  6A1E               	clrf	_isdigit$3769,c
 17158  003B42  0E3A               	movlw	58
 17159  003B44  601F               	cpfslt	isdigit@c,c
 17160  003B46  D005               	goto	l11471
 17161  003B48  0E2F               	movlw	47
 17162  003B4A  641F               	cpfsgt	isdigit@c,c
 17163  003B4C  D002               	goto	l11471
 17164  003B4E  0E01               	movlw	1
 17165  003B50  6E1E               	movwf	_isdigit$3769,c
 17166  003B52                     l11471:
 17167  003B52  C01E  F01D         	movff	_isdigit$3769,??_isdigit
 17168  003B56  301D               	rrcf	??_isdigit,w,c
 17169  003B58  0012               	return		;funcret
 17170  003B5A                     __end_of_isdigit:
 17171                           	opt stack 0
 17172                           tblptru	equ	0xFF8
 17173                           tblptrh	equ	0xFF7
 17174                           tblptrl	equ	0xFF6
 17175                           tablat	equ	0xFF5
 17176                           prodh	equ	0xFF4
 17177                           prodl	equ	0xFF3
 17178                           intcon	equ	0xFF2
 17179                           intcon2	equ	0xFF1
 17180                           intcon3	equ	0xFF0
 17181                           postinc0	equ	0xFEE
 17182                           plusw0	equ	0xFEB
 17183                           wreg	equ	0xFE8
 17184                           indf1	equ	0xFE7
 17185                           postinc1	equ	0xFE6
 17186                           postdec1	equ	0xFE5
 17187                           fsr1h	equ	0xFE2
 17188                           fsr1l	equ	0xFE1
 17189                           indf2	equ	0xFDF
 17190                           postinc2	equ	0xFDE
 17191                           postdec2	equ	0xFDD
 17192                           plusw2	equ	0xFDB
 17193                           fsr2h	equ	0xFDA
 17194                           fsr2l	equ	0xFD9
 17195                           status	equ	0xFD8
 17196                           
 17197 ;; *************** function ___wmul *****************
 17198 ;; Defined at:
 17199 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
 17200 ;; Parameters:    Size  Location     Type
 17201 ;;  multiplier      2   28[COMRAM] unsigned int 
 17202 ;;  multiplicand    2   30[COMRAM] unsigned int 
 17203 ;; Auto vars:     Size  Location     Type
 17204 ;;  product         2   32[COMRAM] unsigned int 
 17205 ;; Return value:  Size  Location     Type
 17206 ;;                  2   28[COMRAM] unsigned int 
 17207 ;; Registers used:
 17208 ;;		wreg, status,2, status,0, prodl, prodh
 17209 ;; Tracked objects:
 17210 ;;		On entry : 0/0
 17211 ;;		On exit  : 0/0
 17212 ;;		Unchanged: 0/0
 17213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17214 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17217 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17218 ;;Total ram usage:        6 bytes
 17219 ;; Hardware stack levels used:    1
 17220 ;; Hardware stack levels required when called:    4
 17221 ;; This function calls:
 17222 ;;		Nothing
 17223 ;; This function is called by:
 17224 ;;		_sprintf
 17225 ;; This function uses a non-reentrant model
 17226 ;;
 17227                           
 17228                           	psect	text70
 17229  003A80                     __ptext70:
 17230                           	opt stack 0
 17231  003A80                     ___wmul:
 17232                           	opt stack 23
 17233                           
 17234                           ;incstack = 0
 17235  003A80  501D               	movf	___wmul@multiplier,w,c
 17236  003A82  021F               	mulwf	___wmul@multiplicand,c
 17237  003A84  CFF3 F021          	movff	prodl,___wmul@product
 17238  003A88  CFF4 F022          	movff	prodh,___wmul@product+1
 17239  003A8C  501D               	movf	___wmul@multiplier,w,c
 17240  003A8E  0220               	mulwf	___wmul@multiplicand+1,c
 17241  003A90  50F3               	movf	prodl,w,c
 17242  003A92  2622               	addwf	___wmul@product+1,f,c
 17243  003A94  501E               	movf	___wmul@multiplier+1,w,c
 17244  003A96  021F               	mulwf	___wmul@multiplicand,c
 17245  003A98  50F3               	movf	prodl,w,c
 17246  003A9A  2622               	addwf	___wmul@product+1,f,c
 17247  003A9C  C021  F01D         	movff	___wmul@product,?___wmul
 17248  003AA0  C022  F01E         	movff	___wmul@product+1,?___wmul+1
 17249  003AA4  0012               	return		;funcret
 17250  003AA6                     __end_of___wmul:
 17251                           	opt stack 0
 17252                           tblptru	equ	0xFF8
 17253                           tblptrh	equ	0xFF7
 17254                           tblptrl	equ	0xFF6
 17255                           tablat	equ	0xFF5
 17256                           prodh	equ	0xFF4
 17257                           prodl	equ	0xFF3
 17258                           intcon	equ	0xFF2
 17259                           intcon2	equ	0xFF1
 17260                           intcon3	equ	0xFF0
 17261                           postinc0	equ	0xFEE
 17262                           plusw0	equ	0xFEB
 17263                           wreg	equ	0xFE8
 17264                           indf1	equ	0xFE7
 17265                           postinc1	equ	0xFE6
 17266                           postdec1	equ	0xFE5
 17267                           fsr1h	equ	0xFE2
 17268                           fsr1l	equ	0xFE1
 17269                           indf2	equ	0xFDF
 17270                           postinc2	equ	0xFDE
 17271                           postdec2	equ	0xFDD
 17272                           plusw2	equ	0xFDB
 17273                           fsr2h	equ	0xFDA
 17274                           fsr2l	equ	0xFD9
 17275                           status	equ	0xFD8
 17276                           
 17277 ;; *************** function ___lwmod *****************
 17278 ;; Defined at:
 17279 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwmod.c"
 17280 ;; Parameters:    Size  Location     Type
 17281 ;;  dividend        2    0[BANK0 ] unsigned int 
 17282 ;;  divisor         2    2[BANK0 ] unsigned int 
 17283 ;; Auto vars:     Size  Location     Type
 17284 ;;  counter         1   35[COMRAM] unsigned char 
 17285 ;; Return value:  Size  Location     Type
 17286 ;;                  2    0[BANK0 ] unsigned int 
 17287 ;; Registers used:
 17288 ;;		wreg, status,2, status,0
 17289 ;; Tracked objects:
 17290 ;;		On entry : F/0
 17291 ;;		On exit  : F/0
 17292 ;;		Unchanged: 0/0
 17293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17297 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17298 ;;Total ram usage:        5 bytes
 17299 ;; Hardware stack levels used:    1
 17300 ;; Hardware stack levels required when called:    4
 17301 ;; This function calls:
 17302 ;;		Nothing
 17303 ;; This function is called by:
 17304 ;;		_sprintf
 17305 ;; This function uses a non-reentrant model
 17306 ;;
 17307                           
 17308                           	psect	text71
 17309  0037EC                     __ptext71:
 17310                           	opt stack 0
 17311  0037EC                     ___lwmod:
 17312                           	opt stack 23
 17313                           
 17314                           ; BSR set to: 0
 17315                           
 17316                           ;incstack = 0
 17317  0037EC  5162               	movf	___lwmod@divisor& (0+255),w,b
 17318  0037EE  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 17319  0037F0  E017               	bz	l1800
 17320                           
 17321                           ; BSR set to: 0
 17322  0037F2  0E01               	movlw	1
 17323  0037F4  6E24               	movwf	___lwmod@counter,c
 17324  0037F6  D004               	goto	l11509
 17325  0037F8                     l11507:
 17326                           
 17327                           ; BSR set to: 0
 17328  0037F8  90D8               	bcf	status,0,c
 17329  0037FA  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 17330  0037FC  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 17331  0037FE  2A24               	incf	___lwmod@counter,f,c
 17332  003800                     l11509:
 17333                           
 17334                           ; BSR set to: 0
 17335  003800  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 17336  003802  D7FA               	goto	l11507
 17337  003804                     l11511:
 17338                           
 17339                           ; BSR set to: 0
 17340  003804  5162               	movf	___lwmod@divisor& (0+255),w,b
 17341  003806  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 17342  003808  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17343  00380A  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 17344  00380C  E304               	bnc	l11515
 17345                           
 17346                           ; BSR set to: 0
 17347  00380E  5162               	movf	___lwmod@divisor& (0+255),w,b
 17348  003810  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 17349  003812  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 17350  003814  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 17351  003816                     l11515:
 17352                           
 17353                           ; BSR set to: 0
 17354  003816  90D8               	bcf	status,0,c
 17355  003818  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 17356  00381A  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 17357                           
 17358                           ; BSR set to: 0
 17359  00381C  2E24               	decfsz	___lwmod@counter,f,c
 17360  00381E  D7F2               	goto	l11511
 17361  003820                     l1800:
 17362                           
 17363                           ; BSR set to: 0
 17364  003820  C060  F060         	movff	___lwmod@dividend,?___lwmod
 17365  003824  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 17366                           
 17367                           ; BSR set to: 0
 17368  003828  0012               	return		;funcret
 17369  00382A                     __end_of___lwmod:
 17370                           	opt stack 0
 17371                           tblptru	equ	0xFF8
 17372                           tblptrh	equ	0xFF7
 17373                           tblptrl	equ	0xFF6
 17374                           tablat	equ	0xFF5
 17375                           prodh	equ	0xFF4
 17376                           prodl	equ	0xFF3
 17377                           intcon	equ	0xFF2
 17378                           intcon2	equ	0xFF1
 17379                           intcon3	equ	0xFF0
 17380                           postinc0	equ	0xFEE
 17381                           plusw0	equ	0xFEB
 17382                           wreg	equ	0xFE8
 17383                           indf1	equ	0xFE7
 17384                           postinc1	equ	0xFE6
 17385                           postdec1	equ	0xFE5
 17386                           fsr1h	equ	0xFE2
 17387                           fsr1l	equ	0xFE1
 17388                           indf2	equ	0xFDF
 17389                           postinc2	equ	0xFDE
 17390                           postdec2	equ	0xFDD
 17391                           plusw2	equ	0xFDB
 17392                           fsr2h	equ	0xFDA
 17393                           fsr2l	equ	0xFD9
 17394                           status	equ	0xFD8
 17395                           
 17396 ;; *************** function ___lwdiv *****************
 17397 ;; Defined at:
 17398 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lwdiv.c"
 17399 ;; Parameters:    Size  Location     Type
 17400 ;;  dividend        2   28[COMRAM] unsigned int 
 17401 ;;  divisor         2   30[COMRAM] unsigned int 
 17402 ;; Auto vars:     Size  Location     Type
 17403 ;;  quotient        2   33[COMRAM] unsigned int 
 17404 ;;  counter         1   32[COMRAM] unsigned char 
 17405 ;; Return value:  Size  Location     Type
 17406 ;;                  2   28[COMRAM] unsigned int 
 17407 ;; Registers used:
 17408 ;;		wreg, status,2, status,0
 17409 ;; Tracked objects:
 17410 ;;		On entry : F/0
 17411 ;;		On exit  : F/0
 17412 ;;		Unchanged: F/0
 17413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17414 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17415 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17417 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17418 ;;Total ram usage:        7 bytes
 17419 ;; Hardware stack levels used:    1
 17420 ;; Hardware stack levels required when called:    4
 17421 ;; This function calls:
 17422 ;;		Nothing
 17423 ;; This function is called by:
 17424 ;;		_sprintf
 17425 ;; This function uses a non-reentrant model
 17426 ;;
 17427                           
 17428                           	psect	text72
 17429  0035DE                     __ptext72:
 17430                           	opt stack 0
 17431  0035DE                     ___lwdiv:
 17432                           	opt stack 23
 17433                           
 17434                           ; BSR set to: 0
 17435                           
 17436                           ; BSR set to: 0
 17437                           ;incstack = 0
 17438  0035DE  6A22               	clrf	___lwdiv@quotient,c
 17439  0035E0  6A23               	clrf	___lwdiv@quotient+1,c
 17440                           
 17441                           ; BSR set to: 0
 17442  0035E2  501F               	movf	___lwdiv@divisor,w,c
 17443  0035E4  1020               	iorwf	___lwdiv@divisor+1,w,c
 17444  0035E6  E01B               	bz	l1790
 17445                           
 17446                           ; BSR set to: 0
 17447  0035E8  0E01               	movlw	1
 17448  0035EA  6E21               	movwf	___lwdiv@counter,c
 17449  0035EC  D004               	goto	l11489
 17450  0035EE                     l11487:
 17451                           
 17452                           ; BSR set to: 0
 17453  0035EE  90D8               	bcf	status,0,c
 17454  0035F0  361F               	rlcf	___lwdiv@divisor,f,c
 17455  0035F2  3620               	rlcf	___lwdiv@divisor+1,f,c
 17456  0035F4  2A21               	incf	___lwdiv@counter,f,c
 17457  0035F6                     l11489:
 17458                           
 17459                           ; BSR set to: 0
 17460  0035F6  AE20               	btfss	___lwdiv@divisor+1,7,c
 17461  0035F8  D7FA               	goto	l11487
 17462  0035FA                     l11491:
 17463                           
 17464                           ; BSR set to: 0
 17465  0035FA  90D8               	bcf	status,0,c
 17466  0035FC  3622               	rlcf	___lwdiv@quotient,f,c
 17467  0035FE  3623               	rlcf	___lwdiv@quotient+1,f,c
 17468                           
 17469                           ; BSR set to: 0
 17470  003600  501F               	movf	___lwdiv@divisor,w,c
 17471  003602  5C1D               	subwf	___lwdiv@dividend,w,c
 17472  003604  5020               	movf	___lwdiv@divisor+1,w,c
 17473  003606  581E               	subwfb	___lwdiv@dividend+1,w,c
 17474  003608  E305               	bnc	l11499
 17475                           
 17476                           ; BSR set to: 0
 17477  00360A  501F               	movf	___lwdiv@divisor,w,c
 17478  00360C  5E1D               	subwf	___lwdiv@dividend,f,c
 17479  00360E  5020               	movf	___lwdiv@divisor+1,w,c
 17480  003610  5A1E               	subwfb	___lwdiv@dividend+1,f,c
 17481                           
 17482                           ; BSR set to: 0
 17483  003612  8022               	bsf	___lwdiv@quotient,0,c
 17484  003614                     l11499:
 17485                           
 17486                           ; BSR set to: 0
 17487  003614  90D8               	bcf	status,0,c
 17488  003616  3220               	rrcf	___lwdiv@divisor+1,f,c
 17489  003618  321F               	rrcf	___lwdiv@divisor,f,c
 17490                           
 17491                           ; BSR set to: 0
 17492  00361A  2E21               	decfsz	___lwdiv@counter,f,c
 17493  00361C  D7EE               	goto	l11491
 17494  00361E                     l1790:
 17495                           
 17496                           ; BSR set to: 0
 17497  00361E  C022  F01D         	movff	___lwdiv@quotient,?___lwdiv
 17498  003622  C023  F01E         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17499                           
 17500                           ; BSR set to: 0
 17501  003626  0012               	return		;funcret
 17502  003628                     __end_of___lwdiv:
 17503                           	opt stack 0
 17504                           tblptru	equ	0xFF8
 17505                           tblptrh	equ	0xFF7
 17506                           tblptrl	equ	0xFF6
 17507                           tablat	equ	0xFF5
 17508                           prodh	equ	0xFF4
 17509                           prodl	equ	0xFF3
 17510                           intcon	equ	0xFF2
 17511                           intcon2	equ	0xFF1
 17512                           intcon3	equ	0xFF0
 17513                           postinc0	equ	0xFEE
 17514                           plusw0	equ	0xFEB
 17515                           wreg	equ	0xFE8
 17516                           indf1	equ	0xFE7
 17517                           postinc1	equ	0xFE6
 17518                           postdec1	equ	0xFE5
 17519                           fsr1h	equ	0xFE2
 17520                           fsr1l	equ	0xFE1
 17521                           indf2	equ	0xFDF
 17522                           postinc2	equ	0xFDE
 17523                           postdec2	equ	0xFDD
 17524                           plusw2	equ	0xFDB
 17525                           fsr2h	equ	0xFDA
 17526                           fsr2l	equ	0xFD9
 17527                           status	equ	0xFD8
 17528                           
 17529 ;; *************** function _LCD_Update *****************
 17530 ;; Defined at:
 17531 ;;		line 239 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;		None
 17534 ;; Auto vars:     Size  Location     Type
 17535 ;;		None
 17536 ;; Return value:  Size  Location     Type
 17537 ;;                  1    wreg      void 
 17538 ;; Registers used:
 17539 ;;		wreg, status,2, cstack
 17540 ;; Tracked objects:
 17541 ;;		On entry : F/0
 17542 ;;		On exit  : 0/0
 17543 ;;		Unchanged: 0/0
 17544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17549 ;;Total ram usage:        0 bytes
 17550 ;; Hardware stack levels used:    1
 17551 ;; Hardware stack levels required when called:    5
 17552 ;; This function calls:
 17553 ;;		_I2CWrite
 17554 ;; This function is called by:
 17555 ;;		_LCDTRXCount
 17556 ;;		_LCDDisplay
 17557 ;;		_Source_END_DEVICE_INFO
 17558 ;;		_run_star_demo
 17559 ;; This function uses a non-reentrant model
 17560 ;;
 17561                           
 17562                           	psect	text73
 17563  003BAA                     __ptext73:
 17564                           	opt stack 0
 17565  003BAA                     _LCD_Update:
 17566                           	opt stack 23
 17567                           
 17568                           ; BSR set to: 0
 17569                           ;lcd.c: 242: LCDCommand[0] = 0x3E<<1;
 17570                           
 17571                           ; BSR set to: 0
 17572                           ;incstack = 0
 17573  003BAA  0E7C               	movlw	124
 17574  003BAC  6FD1               	movwf	_LCDCommand& (0+255),b
 17575                           
 17576                           ;lcd.c: 243: LCDCommand[1] = 0x32;
 17577  003BAE  0E32               	movlw	50
 17578  003BB0  6FD2               	movwf	(_LCDCommand+1)& (0+255),b
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;lcd.c: 244: LCDCommand[2] = 0x00;
 17582  003BB2  6BD3               	clrf	(_LCDCommand+2)& (0+255),b
 17583                           
 17584                           ;lcd.c: 245: LCDCommand[3] = 32;
 17585  003BB4  0E20               	movlw	32
 17586  003BB6  6FD4               	movwf	(_LCDCommand+3)& (0+255),b
 17587                           
 17588                           ; BSR set to: 0
 17589                           ;lcd.c: 247: I2CWrite(4, 32);
 17590  003BB8  6E1D               	movwf	I2CWrite@BufferLen,c
 17591  003BBA  0E04               	movlw	4
 17592  003BBC  EFE0  F01D         	goto	_I2CWrite
 17593  003BC0                     __end_of_LCD_Update:
 17594                           	opt stack 0
 17595                           tblptru	equ	0xFF8
 17596                           tblptrh	equ	0xFF7
 17597                           tblptrl	equ	0xFF6
 17598                           tablat	equ	0xFF5
 17599                           prodh	equ	0xFF4
 17600                           prodl	equ	0xFF3
 17601                           intcon	equ	0xFF2
 17602                           intcon2	equ	0xFF1
 17603                           intcon3	equ	0xFF0
 17604                           postinc0	equ	0xFEE
 17605                           plusw0	equ	0xFEB
 17606                           wreg	equ	0xFE8
 17607                           indf1	equ	0xFE7
 17608                           postinc1	equ	0xFE6
 17609                           postdec1	equ	0xFE5
 17610                           fsr1h	equ	0xFE2
 17611                           fsr1l	equ	0xFE1
 17612                           indf2	equ	0xFDF
 17613                           postinc2	equ	0xFDE
 17614                           postdec2	equ	0xFDD
 17615                           plusw2	equ	0xFDB
 17616                           fsr2h	equ	0xFDA
 17617                           fsr2l	equ	0xFD9
 17618                           status	equ	0xFD8
 17619                           
 17620 ;; *************** function _I2CWrite *****************
 17621 ;; Defined at:
 17622 ;;		line 124 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 17623 ;; Parameters:    Size  Location     Type
 17624 ;;  Commandlen      1    wreg     unsigned char 
 17625 ;;  BufferLen       1   28[COMRAM] unsigned char 
 17626 ;; Auto vars:     Size  Location     Type
 17627 ;;  Commandlen      1   29[COMRAM] unsigned char 
 17628 ;; Return value:  Size  Location     Type
 17629 ;;                  1    wreg      void 
 17630 ;; Registers used:
 17631 ;;		wreg
 17632 ;; Tracked objects:
 17633 ;;		On entry : F/0
 17634 ;;		On exit  : 0/0
 17635 ;;		Unchanged: 0/0
 17636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17637 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17638 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17641 ;;Total ram usage:        2 bytes
 17642 ;; Hardware stack levels used:    1
 17643 ;; Hardware stack levels required when called:    4
 17644 ;; This function calls:
 17645 ;;		Nothing
 17646 ;; This function is called by:
 17647 ;;		_LCD_Initialize
 17648 ;;		_LCD_Update
 17649 ;; This function uses a non-reentrant model
 17650 ;;
 17651                           
 17652                           	psect	text74
 17653  003BC0                     __ptext74:
 17654                           	opt stack 0
 17655  003BC0                     _I2CWrite:
 17656                           	opt stack 23
 17657                           
 17658                           ;incstack = 0
 17659                           ;I2CWrite@Commandlen stored from wreg
 17660  003BC0  6E1E               	movwf	I2CWrite@Commandlen,c
 17661  003BC2                     l786:
 17662  003BC2  B471               	btfsc	3953,2,c	;volatile
 17663  003BC4  D7FE               	goto	l786
 17664                           
 17665                           ;lcd.c: 127: CommandPtr = 0;
 17666  003BC6  6A31               	clrf	_CommandPtr,c
 17667                           
 17668                           ;lcd.c: 128: TextPtr = 0;
 17669  003BC8  6A35               	clrf	_TextPtr,c
 17670                           
 17671                           ;lcd.c: 129: CommandLen = Commandlen;
 17672  003BCA  C01E  F030         	movff	I2CWrite@Commandlen,_CommandLen
 17673                           
 17674                           ;lcd.c: 130: TextLen = BufferLen;
 17675  003BCE  C01D  F034         	movff	I2CWrite@BufferLen,_TextLen
 17676                           
 17677                           ;lcd.c: 131: SSP2CON2bits.SEN = 1;
 17678  003BD2  8071               	bsf	3953,0,c	;volatile
 17679  003BD4  0012               	return		;funcret
 17680  003BD6                     __end_of_I2CWrite:
 17681                           	opt stack 0
 17682                           tblptru	equ	0xFF8
 17683                           tblptrh	equ	0xFF7
 17684                           tblptrl	equ	0xFF6
 17685                           tablat	equ	0xFF5
 17686                           prodh	equ	0xFF4
 17687                           prodl	equ	0xFF3
 17688                           intcon	equ	0xFF2
 17689                           intcon2	equ	0xFF1
 17690                           intcon3	equ	0xFF0
 17691                           postinc0	equ	0xFEE
 17692                           plusw0	equ	0xFEB
 17693                           wreg	equ	0xFE8
 17694                           indf1	equ	0xFE7
 17695                           postinc1	equ	0xFE6
 17696                           postdec1	equ	0xFE5
 17697                           fsr1h	equ	0xFE2
 17698                           fsr1l	equ	0xFE1
 17699                           indf2	equ	0xFDF
 17700                           postinc2	equ	0xFDE
 17701                           postdec2	equ	0xFDD
 17702                           plusw2	equ	0xFDB
 17703                           fsr2h	equ	0xFDA
 17704                           fsr2l	equ	0xFD9
 17705                           status	equ	0xFD8
 17706                           
 17707 ;; *************** function _LCD_Erase *****************
 17708 ;; Defined at:
 17709 ;;		line 215 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 17710 ;; Parameters:    Size  Location     Type
 17711 ;;		None
 17712 ;; Auto vars:     Size  Location     Type
 17713 ;;  i               1   28[COMRAM] unsigned char 
 17714 ;; Return value:  Size  Location     Type
 17715 ;;                  1    wreg      void 
 17716 ;; Registers used:
 17717 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17718 ;; Tracked objects:
 17719 ;;		On entry : 0/1
 17720 ;;		On exit  : 0/0
 17721 ;;		Unchanged: 0/0
 17722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17727 ;;Total ram usage:        1 bytes
 17728 ;; Hardware stack levels used:    1
 17729 ;; Hardware stack levels required when called:    4
 17730 ;; This function calls:
 17731 ;;		Nothing
 17732 ;; This function is called by:
 17733 ;;		_LCDTRXCount
 17734 ;;		_LCDDisplay
 17735 ;;		_Source_END_DEVICE_INFO
 17736 ;;		_run_star_demo
 17737 ;; This function uses a non-reentrant model
 17738 ;;
 17739                           
 17740                           	psect	text75
 17741  003B5A                     __ptext75:
 17742                           	opt stack 0
 17743  003B5A                     _LCD_Erase:
 17744                           	opt stack 24
 17745                           
 17746                           ;lcd.c: 217: uint8_t i;
 17747                           ;lcd.c: 219: for(i = 0; i < 32; i++)
 17748                           
 17749                           ;incstack = 0
 17750  003B5A  6A1D               	clrf	LCD_Erase@i,c
 17751  003B5C                     l11569:
 17752                           
 17753                           ;lcd.c: 220: {
 17754                           ;lcd.c: 221: LCDText[i] = ' ';
 17755  003B5C  0E40               	movlw	low _LCDText
 17756  003B5E  241D               	addwf	LCD_Erase@i,w,c
 17757  003B60  6ED9               	movwf	fsr2l,c
 17758  003B62  6ADA               	clrf	fsr2h,c
 17759  003B64  0E01               	movlw	high _LCDText
 17760  003B66  22DA               	addwfc	fsr2h,f,c
 17761  003B68  0E20               	movlw	32
 17762  003B6A  6EDF               	movwf	indf2,c
 17763  003B6C  2A1D               	incf	LCD_Erase@i,f,c
 17764  003B6E  0E1F               	movlw	31
 17765  003B70  641D               	cpfsgt	LCD_Erase@i,c
 17766  003B72  D7F4               	goto	l11569
 17767  003B74  0C1F               	retlw	31
 17768  003B76                     __end_of_LCD_Erase:
 17769                           	opt stack 0
 17770                           tblptru	equ	0xFF8
 17771                           tblptrh	equ	0xFF7
 17772                           tblptrl	equ	0xFF6
 17773                           tablat	equ	0xFF5
 17774                           prodh	equ	0xFF4
 17775                           prodl	equ	0xFF3
 17776                           intcon	equ	0xFF2
 17777                           intcon2	equ	0xFF1
 17778                           intcon3	equ	0xFF0
 17779                           postinc0	equ	0xFEE
 17780                           plusw0	equ	0xFEB
 17781                           wreg	equ	0xFE8
 17782                           indf1	equ	0xFE7
 17783                           postinc1	equ	0xFE6
 17784                           postdec1	equ	0xFE5
 17785                           fsr1h	equ	0xFE2
 17786                           fsr1l	equ	0xFE1
 17787                           indf2	equ	0xFDF
 17788                           postinc2	equ	0xFDE
 17789                           postdec2	equ	0xFDD
 17790                           plusw2	equ	0xFDB
 17791                           fsr2h	equ	0xFDA
 17792                           fsr2l	equ	0xFD9
 17793                           status	equ	0xFD8
 17794                           
 17795 ;; *************** function _DELAY_ms *****************
 17796 ;; Defined at:
 17797 ;;		line 108 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/delay.c"
 17798 ;; Parameters:    Size  Location     Type
 17799 ;;  ms              2   28[COMRAM] unsigned int 
 17800 ;; Auto vars:     Size  Location     Type
 17801 ;;  cyclesRequir    4   30[COMRAM] long 
 17802 ;; Return value:  Size  Location     Type
 17803 ;;                  1    wreg      void 
 17804 ;; Registers used:
 17805 ;;		wreg, status,2, status,0, prodl, prodh
 17806 ;; Tracked objects:
 17807 ;;		On entry : 0/F
 17808 ;;		On exit  : 0/0
 17809 ;;		Unchanged: 0/0
 17810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17812 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17813 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17814 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17815 ;;Total ram usage:       14 bytes
 17816 ;; Hardware stack levels used:    1
 17817 ;; Hardware stack levels required when called:    4
 17818 ;; This function calls:
 17819 ;;		Nothing
 17820 ;; This function is called by:
 17821 ;;		_LCD_Initialize
 17822 ;;		_LCDDisplay
 17823 ;;		_DemoOutput_Greeting
 17824 ;;		_DemoOutput_Channel
 17825 ;;		_Source_END_DEVICE_INFO
 17826 ;;		_Process_RxMessage
 17827 ;;		_run_star_demo
 17828 ;; This function uses a non-reentrant model
 17829 ;;
 17830                           
 17831                           	psect	text76
 17832  002874                     __ptext76:
 17833                           	opt stack 0
 17834  002874                     _DELAY_ms:
 17835                           	opt stack 24
 17836                           
 17837                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000)/4)/1000) * ms;
 17838                           
 17839                           ;incstack = 0
 17840  002874  501D               	movf	DELAY_ms@ms,w,c
 17841  002876  0100               	movlb	0	; () banked
 17842  002878  6F60               	movwf	??_DELAY_ms& (0+255),b
 17843  00287A  501E               	movf	DELAY_ms@ms+1,w,c
 17844  00287C  6F61               	movwf	(??_DELAY_ms+1)& (0+255),b
 17845  00287E  6B62               	clrf	(??_DELAY_ms+2)& (0+255),b
 17846  002880  6B63               	clrf	(??_DELAY_ms+3)& (0+255),b
 17847  002882  0ED0               	movlw	208
 17848  002884  0360               	mulwf	??_DELAY_ms& (0+255),b
 17849  002886  CFF3 F064          	movff	prodl,??_DELAY_ms+4
 17850  00288A  CFF4 F065          	movff	prodh,??_DELAY_ms+5
 17851  00288E  6B66               	clrf	(??_DELAY_ms+6)& (0+255),b
 17852  002890  6B67               	clrf	(??_DELAY_ms+7)& (0+255),b
 17853  002892  0361               	mulwf	(??_DELAY_ms+1)& (0+255),b
 17854  002894  50F3               	movf	prodl,w,c
 17855  002896  2765               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 17856  002898  50F4               	movf	prodh,w,c
 17857  00289A  2366               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 17858  00289C  0E00               	movlw	0
 17859  00289E  2367               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 17860  0028A0  0E07               	movlw	7
 17861  0028A2  0360               	mulwf	??_DELAY_ms& (0+255),b
 17862  0028A4  50F3               	movf	prodl,w,c
 17863  0028A6  2765               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 17864  0028A8  50F4               	movf	prodh,w,c
 17865  0028AA  2366               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 17866  0028AC  0E00               	movlw	0
 17867  0028AE  2367               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 17868  0028B0  0ED0               	movlw	208
 17869  0028B2  0362               	mulwf	(??_DELAY_ms+2)& (0+255),b
 17870  0028B4  50F3               	movf	prodl,w,c
 17871  0028B6  2766               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 17872  0028B8  50F4               	movf	prodh,w,c
 17873  0028BA  2367               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 17874  0028BC  0E07               	movlw	7
 17875  0028BE  0361               	mulwf	(??_DELAY_ms+1)& (0+255),b
 17876  0028C0  50F3               	movf	prodl,w,c
 17877  0028C2  2766               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 17878  0028C4  50F4               	movf	prodh,w,c
 17879  0028C6  2367               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 17880  0028C8  0E00               	movlw	0
 17881  0028CA  0360               	mulwf	??_DELAY_ms& (0+255),b
 17882  0028CC  50F3               	movf	prodl,w,c
 17883  0028CE  2766               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 17884  0028D0  50F4               	movf	prodh,w,c
 17885  0028D2  2367               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 17886  0028D4  0ED0               	movlw	208
 17887  0028D6  0363               	mulwf	(??_DELAY_ms+3)& (0+255),b
 17888  0028D8  50F3               	movf	prodl,w,c
 17889  0028DA  2767               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 17890  0028DC  0E07               	movlw	7
 17891  0028DE  0362               	mulwf	(??_DELAY_ms+2)& (0+255),b
 17892  0028E0  50F3               	movf	prodl,w,c
 17893  0028E2  2767               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 17894  0028E4  0E00               	movlw	0
 17895  0028E6  0361               	mulwf	(??_DELAY_ms+1)& (0+255),b
 17896  0028E8  50F3               	movf	prodl,w,c
 17897  0028EA  2767               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 17898  0028EC  0E00               	movlw	0
 17899  0028EE  0360               	mulwf	??_DELAY_ms& (0+255),b
 17900  0028F0  50F3               	movf	prodl,w,c
 17901  0028F2  2767               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 17902  0028F4  C064  F01F         	movff	??_DELAY_ms+4,DELAY_ms@cyclesRequiredForEntireDelay
 17903  0028F8  C065  F020         	movff	??_DELAY_ms+5,DELAY_ms@cyclesRequiredForEntireDelay+1
 17904  0028FC  C066  F021         	movff	??_DELAY_ms+6,DELAY_ms@cyclesRequiredForEntireDelay+2
 17905  002900  C067  F022         	movff	??_DELAY_ms+7,DELAY_ms@cyclesRequiredForEntireDelay+3
 17906                           
 17907                           ; BSR set to: 0
 17908                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 17909  002904  0E56               	movlw	86
 17910  002906  261F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
 17911  002908  0EFF               	movlw	255
 17912  00290A  2220               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 17913  00290C  2221               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 17914  00290E  2222               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 17915                           
 17916                           ; BSR set to: 0
 17917                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 17918  002910  BE22               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 17919  002912  0CFF               	retlw	255
 17920  002914  5022               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 17921  002916  1021               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 17922  002918  1020               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 17923  00291A  E10B               	bnz	l706
 17924  00291C  0EC4               	movlw	196
 17925  00291E  5C1F               	subwf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
 17926  002920  E208               	bc	l706
 17927  002922  0012               	return	
 17928  002924                     l707:
 17929                           
 17930                           ;delay.c: 128: {
 17931                           ;delay.c: 129: __nop();
 17932  002924  F000               	nop	
 17933                           
 17934                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 17935  002926  0ED9               	movlw	217
 17936  002928  261F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
 17937  00292A  0EFF               	movlw	255
 17938  00292C  2220               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 17939  00292E  2221               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 17940  002930  2222               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 17941  002932                     l706:
 17942  002932  BE22               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 17943  002934  0012               	return	
 17944  002936  5022               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 17945  002938  1021               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 17946  00293A  1020               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 17947  00293C  E1F3               	bnz	l707
 17948  00293E  041F               	decf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
 17949  002940  E2F1               	bc	l707
 17950  002942  0012               	return		;funcret
 17951  002944                     __end_of_DELAY_ms:
 17952                           	opt stack 0
 17953                           tblptru	equ	0xFF8
 17954                           tblptrh	equ	0xFF7
 17955                           tblptrl	equ	0xFF6
 17956                           tablat	equ	0xFF5
 17957                           prodh	equ	0xFF4
 17958                           prodl	equ	0xFF3
 17959                           intcon	equ	0xFF2
 17960                           intcon2	equ	0xFF1
 17961                           intcon3	equ	0xFF0
 17962                           postinc0	equ	0xFEE
 17963                           plusw0	equ	0xFEB
 17964                           wreg	equ	0xFE8
 17965                           indf1	equ	0xFE7
 17966                           postinc1	equ	0xFE6
 17967                           postdec1	equ	0xFE5
 17968                           fsr1h	equ	0xFE2
 17969                           fsr1l	equ	0xFE1
 17970                           indf2	equ	0xFDF
 17971                           postinc2	equ	0xFDE
 17972                           postdec2	equ	0xFDD
 17973                           plusw2	equ	0xFDB
 17974                           fsr2h	equ	0xFDA
 17975                           fsr2l	equ	0xFD9
 17976                           status	equ	0xFD8
 17977                           
 17978 ;; *************** function _high_isr *****************
 17979 ;; Defined at:
 17980 ;;		line 1852 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 17981 ;; Parameters:    Size  Location     Type
 17982 ;;		None
 17983 ;; Auto vars:     Size  Location     Type
 17984 ;;  results         1   23[COMRAM] struct _DRIVER_UINT8_UNI
 17985 ;;  RxBank          1   26[COMRAM] unsigned char 
 17986 ;;  flags           2   24[COMRAM] struct .
 17987 ;;  i               1   27[COMRAM] unsigned char 
 17988 ;; Return value:  Size  Location     Type
 17989 ;;                  1    wreg      void 
 17990 ;; Registers used:
 17991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17992 ;; Tracked objects:
 17993 ;;		On entry : 0/0
 17994 ;;		On exit  : 0/0
 17995 ;;		Unchanged: 0/0
 17996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17998 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17999 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18000 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18001 ;;Total ram usage:       14 bytes
 18002 ;; Hardware stack levels used:    1
 18003 ;; Hardware stack levels required when called:    3
 18004 ;; This function calls:
 18005 ;;		_UserInterruptHandler
 18006 ;;		i2_PHYGetLongRAMAddr
 18007 ;;		i2_PHYGetShortRAMAddr
 18008 ;;		i2_PHYSetShortRAMAddr
 18009 ;; This function is called by:
 18010 ;;		Interrupt level 2
 18011 ;; This function uses a non-reentrant model
 18012 ;;
 18013                           
 18014                           	psect	intcode
 18015  000008                     __pintcode:
 18016                           	opt stack 0
 18017  000008                     _high_isr:
 18018                           	opt stack 13
 18019                           
 18020                           ;incstack = 0
 18021  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18022  00000A  CFD9 F014          	movff	fsr2l,??_high_isr+5
 18023  00000E  CFDA F015          	movff	fsr2h,??_high_isr+6
 18024  000012  CFF3 F016          	movff	prodl,??_high_isr+7
 18025  000016  CFF4 F017          	movff	prodh,??_high_isr+8
 18026                           
 18027                           ;drv_mrf_miwi_24j40.c: 1867: if (INTCON3bits.INT1IE && INTCON3bits.INT1IF)
 18028  00001A  B6F0               	btfsc	intcon3,3,c	;volatile
 18029  00001C  A0F0               	btfss	intcon3,0,c	;volatile
 18030  00001E  D0A2               	goto	i2l10979
 18031                           
 18032                           ;drv_mrf_miwi_24j40.c: 1868: {
 18033                           ;drv_mrf_miwi_24j40.c: 1869: uint8_t i;
 18034                           ;drv_mrf_miwi_24j40.c: 1873: INTCON3bits.INT1IF = 0;
 18035  000020  90F0               	bcf	intcon3,0,c	;volatile
 18036                           
 18037                           ;drv_mrf_miwi_24j40.c: 1877: {
 18038                           ;drv_mrf_miwi_24j40.c: 1878: MRF24J40_IFREG flags;
 18039                           ;drv_mrf_miwi_24j40.c: 1881: flags.Val = PHYGetShortRAMAddr((0x62));
 18040  000022  0E62               	movlw	98
 18041  000024  ECDC  F01C         	call	i2_PHYGetShortRAMAddr
 18042  000028  6E19               	movwf	high_isr@flags,c
 18043                           
 18044                           ;drv_mrf_miwi_24j40.c: 1883: if (flags.bits.RF_TXIF)
 18045  00002A  A019               	btfss	high_isr@flags,0,c
 18046  00002C  D00F               	goto	i2l207
 18047                           
 18048                           ;drv_mrf_miwi_24j40.c: 1884: {
 18049                           ;drv_mrf_miwi_24j40.c: 1887: MRF24J40Status.bits.TX_BUSY = 0;
 18050  00002E  9033               	bcf	_MRF24J40Status,0,c	;volatile
 18051                           
 18052                           ;drv_mrf_miwi_24j40.c: 1889: if (MRF24J40Status.bits.SEC_IF)
 18053  000030  BC33               	btfsc	_MRF24J40Status,6,c	;volatile
 18054                           
 18055                           ;drv_mrf_miwi_24j40.c: 1890: {
 18056                           ;drv_mrf_miwi_24j40.c: 1891: MRF24J40Status.bits.SEC_IF = 0;
 18057  000032  9C33               	bcf	_MRF24J40Status,6,c	;volatile
 18058                           
 18059                           ;drv_mrf_miwi_24j40.c: 1892: }
 18060                           ;drv_mrf_miwi_24j40.c: 1894: failureCounter = 0;
 18061  000034  0100               	movlb	0	; () banked
 18062  000036  6BD8               	clrf	_failureCounter& (0+255),b	;volatile
 18063  000038  6BD9               	clrf	(_failureCounter+1)& (0+255),b	;volatile
 18064                           
 18065                           ;drv_mrf_miwi_24j40.c: 1898: if (MRF24J40Status.bits.TX_PENDING_ACK)
 18066  00003A  A233               	btfss	_MRF24J40Status,1,c	;volatile
 18067  00003C  D007               	goto	i2l207
 18068                           
 18069                           ; BSR set to: 0
 18070                           ;drv_mrf_miwi_24j40.c: 1899: {
 18071                           ;drv_mrf_miwi_24j40.c: 1900: DRIVER_UINT8_UNION results;
 18072                           ;drv_mrf_miwi_24j40.c: 1903: results.Val = PHYGetShortRAMAddr((0x48));
 18073  00003E  0E48               	movlw	72
 18074  000040  ECDC  F01C         	call	i2_PHYGetShortRAMAddr
 18075  000044  6E18               	movwf	high_isr@results,c
 18076                           
 18077                           ;drv_mrf_miwi_24j40.c: 1905: if (results.bits.b0 == 1)
 18078  000046  B018               	btfsc	high_isr@results,0,c
 18079                           
 18080                           ;drv_mrf_miwi_24j40.c: 1906: {
 18081                           ;drv_mrf_miwi_24j40.c: 1909: MRF24J40Status.bits.TX_FAIL = 1;
 18082  000048  8433               	bsf	_MRF24J40Status,2,c	;volatile
 18083                           
 18084                           ;drv_mrf_miwi_24j40.c: 1910: }
 18085                           ;drv_mrf_miwi_24j40.c: 1914: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 18086  00004A  9233               	bcf	_MRF24J40Status,1,c	;volatile
 18087  00004C                     i2l207:
 18088                           
 18089                           ;drv_mrf_miwi_24j40.c: 1916: }
 18090                           ;drv_mrf_miwi_24j40.c: 1918: }
 18091                           ;drv_mrf_miwi_24j40.c: 1920: if (flags.bits.RF_RXIF)
 18092  00004C  A619               	btfss	high_isr@flags,3,c
 18093  00004E  D083               	goto	i2l10975
 18094                           
 18095                           ;drv_mrf_miwi_24j40.c: 1921: {
 18096                           ;drv_mrf_miwi_24j40.c: 1922: uint8_t RxBank = 0xFF;
 18097  000050  681B               	setf	high_isr@RxBank,c
 18098                           
 18099                           ;drv_mrf_miwi_24j40.c: 1924: for (i = 0; i < 2; i++)
 18100  000052  6A1C               	clrf	high_isr@i,c
 18101  000054                     i2l10943:
 18102                           
 18103                           ;drv_mrf_miwi_24j40.c: 1925: {
 18104                           ;drv_mrf_miwi_24j40.c: 1926: if (RxBuffer[i].PayloadLen == 0)
 18105  000054  501C               	movf	high_isr@i,w,c
 18106  000056  0D45               	mullw	69
 18107  000058  0E28               	movlw	low _RxBuffer
 18108  00005A  24F3               	addwf	prodl,w,c
 18109  00005C  6ED9               	movwf	fsr2l,c
 18110  00005E  0E02               	movlw	high _RxBuffer
 18111  000060  20F4               	addwfc	prodh,w,c
 18112  000062  6EDA               	movwf	fsr2h,c
 18113  000064  50DF               	movf	indf2,w,c
 18114  000066  E103               	bnz	i2l10947
 18115                           
 18116                           ;drv_mrf_miwi_24j40.c: 1927: {
 18117                           ;drv_mrf_miwi_24j40.c: 1928: RxBank = i;
 18118  000068  C01C  F01B         	movff	high_isr@i,high_isr@RxBank
 18119                           
 18120                           ;drv_mrf_miwi_24j40.c: 1929: break;
 18121  00006C  D004               	goto	i2l10951
 18122  00006E                     i2l10947:
 18123  00006E  2A1C               	incf	high_isr@i,f,c
 18124  000070  0E01               	movlw	1
 18125  000072  641C               	cpfsgt	high_isr@i,c
 18126  000074  D7EF               	goto	i2l10943
 18127  000076                     i2l10951:
 18128                           
 18129                           ;drv_mrf_miwi_24j40.c: 1930: }
 18130                           ;drv_mrf_miwi_24j40.c: 1931: }
 18131                           ;drv_mrf_miwi_24j40.c: 1934: if (RxBank < 2)
 18132  000076  0E02               	movlw	2
 18133  000078  601B               	cpfslt	high_isr@RxBank,c
 18134  00007A  D068               	goto	i2l10973
 18135                           
 18136                           ;drv_mrf_miwi_24j40.c: 1935: {
 18137                           ;drv_mrf_miwi_24j40.c: 1941: PHYSetShortRAMAddr((0x73), 0x04);
 18138  00007C  0E04               	movlw	4
 18139  00007E  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 18140  000080  0E73               	movlw	115
 18141  000082  EC06  F01D         	call	i2_PHYSetShortRAMAddr
 18142                           
 18143                           ;drv_mrf_miwi_24j40.c: 1945: RxBuffer[RxBank].PayloadLen = PHYGetLongRAMAddr(0x300) + 2;
 18144  000086  501B               	movf	high_isr@RxBank,w,c
 18145  000088  0D45               	mullw	69
 18146  00008A  0E28               	movlw	low _RxBuffer
 18147  00008C  24F3               	addwf	prodl,w,c
 18148  00008E  6ED9               	movwf	fsr2l,c
 18149  000090  0E02               	movlw	high _RxBuffer
 18150  000092  20F4               	addwfc	prodh,w,c
 18151  000094  6EDA               	movwf	fsr2h,c
 18152  000096  0E03               	movlw	3
 18153  000098  6E03               	movwf	i2PHYGetLongRAMAddr@address+1,c
 18154  00009A  6A02               	clrf	i2PHYGetLongRAMAddr@address,c
 18155  00009C  EC04  F01A         	call	i2_PHYGetLongRAMAddr	;wreg free
 18156  0000A0  0F02               	addlw	2
 18157  0000A2  6EDF               	movwf	indf2,c
 18158                           
 18159                           ;drv_mrf_miwi_24j40.c: 1946: if (RxBuffer[RxBank].PayloadLen < (40+0+8+8+12))
 18160  0000A4  501B               	movf	high_isr@RxBank,w,c
 18161  0000A6  0D45               	mullw	69
 18162  0000A8  0E28               	movlw	low _RxBuffer
 18163  0000AA  24F3               	addwf	prodl,w,c
 18164  0000AC  6ED9               	movwf	fsr2l,c
 18165  0000AE  0E02               	movlw	high _RxBuffer
 18166  0000B0  20F4               	addwfc	prodh,w,c
 18167  0000B2  6EDA               	movwf	fsr2h,c
 18168  0000B4  0E44               	movlw	68
 18169  0000B6  60DF               	cpfslt	indf2,c
 18170  0000B8  D03F               	goto	i2l10971
 18171                           
 18172                           ;drv_mrf_miwi_24j40.c: 1947: {
 18173                           ;drv_mrf_miwi_24j40.c: 1949: MRF24J40Status.bits.RX_BUFFERED = 1;
 18174  0000BA  8A33               	bsf	_MRF24J40Status,5,c	;volatile
 18175                           
 18176                           ;drv_mrf_miwi_24j40.c: 1952: for (i = 1; i <= RxBuffer[RxBank].PayloadLen + 2; i++)
 18177  0000BC  0E01               	movlw	1
 18178  0000BE  6E1C               	movwf	high_isr@i,c
 18179  0000C0  D01A               	goto	i2l10967
 18180  0000C2                     i2l10963:
 18181                           
 18182                           ;drv_mrf_miwi_24j40.c: 1953: {
 18183                           ;drv_mrf_miwi_24j40.c: 1954: RxBuffer[RxBank].Payload[i - 1] = PHYGetLongRAMAddr(0x300 +
      +                           i);
 18184  0000C2  501B               	movf	high_isr@RxBank,w,c
 18185  0000C4  0D45               	mullw	69
 18186  0000C6  0E28               	movlw	low _RxBuffer
 18187  0000C8  6E0F               	movwf	??_high_isr& (0+255),c
 18188  0000CA  0E02               	movlw	high _RxBuffer
 18189  0000CC  6E10               	movwf	(??_high_isr+1)& (0+255),c
 18190  0000CE  50F3               	movf	prodl,w,c
 18191  0000D0  260F               	addwf	??_high_isr,f,c
 18192  0000D2  50F4               	movf	prodh,w,c
 18193  0000D4  2210               	addwfc	??_high_isr+1,f,c
 18194  0000D6  501C               	movf	high_isr@i,w,c
 18195  0000D8  240F               	addwf	??_high_isr,w,c
 18196  0000DA  6ED9               	movwf	fsr2l,c
 18197  0000DC  0E00               	movlw	0
 18198  0000DE  2010               	addwfc	??_high_isr+1,w,c
 18199  0000E0  6EDA               	movwf	fsr2h,c
 18200  0000E2  0E00               	movlw	0
 18201  0000E4  241C               	addwf	high_isr@i,w,c
 18202  0000E6  6E02               	movwf	i2PHYGetLongRAMAddr@address,c
 18203  0000E8  6A03               	clrf	i2PHYGetLongRAMAddr@address+1,c
 18204  0000EA  0E03               	movlw	3
 18205  0000EC  2203               	addwfc	i2PHYGetLongRAMAddr@address+1,f,c
 18206  0000EE  EC04  F01A         	call	i2_PHYGetLongRAMAddr	;wreg free
 18207  0000F2  6EDF               	movwf	indf2,c
 18208  0000F4  2A1C               	incf	high_isr@i,f,c
 18209  0000F6                     i2l10967:
 18210  0000F6  501C               	movf	high_isr@i,w,c
 18211  0000F8  6E0F               	movwf	??_high_isr& (0+255),c
 18212  0000FA  6A10               	clrf	(??_high_isr+1)& (0+255),c
 18213  0000FC  501B               	movf	high_isr@RxBank,w,c
 18214  0000FE  0D45               	mullw	69
 18215  000100  0E28               	movlw	low _RxBuffer
 18216  000102  24F3               	addwf	prodl,w,c
 18217  000104  6ED9               	movwf	fsr2l,c
 18218  000106  0E02               	movlw	high _RxBuffer
 18219  000108  20F4               	addwfc	prodh,w,c
 18220  00010A  6EDA               	movwf	fsr2h,c
 18221  00010C  50DF               	movf	indf2,w,c
 18222  00010E  6E11               	movwf	(??_high_isr+2)& (0+255),c
 18223  000110  6A12               	clrf	(??_high_isr+3)& (0+255),c
 18224  000112  0E02               	movlw	2
 18225  000114  2611               	addwf	??_high_isr+2,f,c
 18226  000116  0E00               	movlw	0
 18227  000118  2212               	addwfc	??_high_isr+3,f,c
 18228  00011A  500F               	movf	??_high_isr,w,c
 18229  00011C  5C11               	subwf	??_high_isr+2,w,c
 18230  00011E  5012               	movf	??_high_isr+3,w,c
 18231  000120  0A80               	xorlw	128
 18232  000122  6E13               	movwf	(??_high_isr+4)& (0+255),c
 18233  000124  5010               	movf	??_high_isr+1,w,c
 18234  000126  0A80               	xorlw	128
 18235  000128  5813               	subwfb	(??_high_isr+4)& (0+255),w,c
 18236  00012A  E2CB               	bc	i2l10963
 18237                           
 18238                           ;drv_mrf_miwi_24j40.c: 1955: }
 18239                           ;drv_mrf_miwi_24j40.c: 1956: PHYSetShortRAMAddr((0x1B), 0x01);
 18240  00012C  0E01               	movlw	1
 18241  00012E  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 18242  000130  0E1B               	movlw	27
 18243  000132  EC06  F01D         	call	i2_PHYSetShortRAMAddr
 18244                           
 18245                           ;drv_mrf_miwi_24j40.c: 1957: } else
 18246  000136  D005               	goto	i2l220
 18247  000138                     i2l10971:
 18248                           
 18249                           ;drv_mrf_miwi_24j40.c: 1958: {
 18250                           ;drv_mrf_miwi_24j40.c: 1961: PHYSetShortRAMAddr((0x1B), 0x01);
 18251  000138  0E01               	movlw	1
 18252  00013A  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 18253  00013C  0E1B               	movlw	27
 18254  00013E  EC06  F01D         	call	i2_PHYSetShortRAMAddr
 18255  000142                     i2l220:
 18256                           
 18257                           ;drv_mrf_miwi_24j40.c: 1962: }
 18258                           ;drv_mrf_miwi_24j40.c: 1965: PHYSetShortRAMAddr((0x73), 0x00);
 18259  000142  6A02               	clrf	i2PHYSetShortRAMAddr@value,c
 18260  000144  0E73               	movlw	115
 18261  000146  EC06  F01D         	call	i2_PHYSetShortRAMAddr
 18262                           
 18263                           ;drv_mrf_miwi_24j40.c: 1966: } else
 18264  00014A  D005               	goto	i2l10975
 18265  00014C                     i2l10973:
 18266                           
 18267                           ;drv_mrf_miwi_24j40.c: 1967: {
 18268                           ;drv_mrf_miwi_24j40.c: 1970: PHYSetShortRAMAddr((0x1B), 0x01);
 18269  00014C  0E01               	movlw	1
 18270  00014E  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 18271  000150  0E1B               	movlw	27
 18272  000152  EC06  F01D         	call	i2_PHYSetShortRAMAddr
 18273  000156                     i2l10975:
 18274                           
 18275                           ;drv_mrf_miwi_24j40.c: 1977: }
 18276                           ;drv_mrf_miwi_24j40.c: 1979: }
 18277                           ;drv_mrf_miwi_24j40.c: 1982: if (flags.bits.SECIF)
 18278  000156  A819               	btfss	high_isr@flags,4,c
 18279  000158  D005               	goto	i2l10979
 18280                           
 18281                           ;drv_mrf_miwi_24j40.c: 1983: {
 18282                           ;drv_mrf_miwi_24j40.c: 1984: PHYSetShortRAMAddr((0x59), 0x80);
 18283  00015A  0E80               	movlw	128
 18284  00015C  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 18285  00015E  0E59               	movlw	89
 18286  000160  EC06  F01D         	call	i2_PHYSetShortRAMAddr
 18287  000164                     i2l10979:
 18288                           
 18289                           ;drv_mrf_miwi_24j40.c: 1985: }
 18290                           ;drv_mrf_miwi_24j40.c: 1986: }
 18291                           ;drv_mrf_miwi_24j40.c: 1987: }
 18292                           ;drv_mrf_miwi_24j40.c: 1992: if (PIR1bits.TMR1IF)
 18293  000164  B09E               	btfsc	3998,0,c	;volatile
 18294                           
 18295                           ;drv_mrf_miwi_24j40.c: 1993: {
 18296                           ;drv_mrf_miwi_24j40.c: 1994: if (PIE1bits.TMR1IE)
 18297  000166  A09D               	btfss	3997,0,c	;volatile
 18298  000168  D005               	goto	i2l10991
 18299                           
 18300                           ;drv_mrf_miwi_24j40.c: 1995: {
 18301                           ;drv_mrf_miwi_24j40.c: 1997: PIR1bits.TMR1IF = 0;
 18302  00016A  909E               	bcf	3998,0,c	;volatile
 18303                           
 18304                           ;drv_mrf_miwi_24j40.c: 1998: timerExtension1++;
 18305  00016C  2A38               	incf	_timerExtension1,f,c	;volatile
 18306                           
 18307                           ;drv_mrf_miwi_24j40.c: 1999: if (timerExtension1 == 0)
 18308  00016E  5038               	movf	_timerExtension1,w,c	;volatile
 18309  000170  E101               	bnz	i2l10991
 18310                           
 18311                           ;drv_mrf_miwi_24j40.c: 2000: {
 18312                           ;drv_mrf_miwi_24j40.c: 2001: timerExtension2++;
 18313  000172  2A39               	incf	_timerExtension2,f,c	;volatile
 18314  000174                     i2l10991:
 18315                           
 18316                           ;drv_mrf_miwi_24j40.c: 2002: }
 18317                           ;drv_mrf_miwi_24j40.c: 2003: }
 18318                           ;drv_mrf_miwi_24j40.c: 2004: }
 18319                           ;drv_mrf_miwi_24j40.c: 2006: UserInterruptHandler();
 18320  000174  ECEB  F01D         	call	_UserInterruptHandler	;wreg free
 18321  000178  C017  FFF4         	movff	??_high_isr+8,prodh
 18322  00017C  C016  FFF3         	movff	??_high_isr+7,prodl
 18323  000180  C015  FFDA         	movff	??_high_isr+6,fsr2h
 18324  000184  C014  FFD9         	movff	??_high_isr+5,fsr2l
 18325  000188  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18326  00018A  0011               	retfie		f
 18327  00018C                     __end_of_high_isr:
 18328                           	opt stack 0
 18329                           tblptru	equ	0xFF8
 18330                           tblptrh	equ	0xFF7
 18331                           tblptrl	equ	0xFF6
 18332                           tablat	equ	0xFF5
 18333                           prodh	equ	0xFF4
 18334                           prodl	equ	0xFF3
 18335                           intcon	equ	0xFF2
 18336                           intcon2	equ	0xFF1
 18337                           intcon3	equ	0xFF0
 18338                           postinc0	equ	0xFEE
 18339                           plusw0	equ	0xFEB
 18340                           wreg	equ	0xFE8
 18341                           indf1	equ	0xFE7
 18342                           postinc1	equ	0xFE6
 18343                           postdec1	equ	0xFE5
 18344                           fsr1h	equ	0xFE2
 18345                           fsr1l	equ	0xFE1
 18346                           indf2	equ	0xFDF
 18347                           postinc2	equ	0xFDE
 18348                           postdec2	equ	0xFDD
 18349                           plusw2	equ	0xFDB
 18350                           fsr2h	equ	0xFDA
 18351                           fsr2l	equ	0xFD9
 18352                           status	equ	0xFD8
 18353                           
 18354 ;; *************** function i2_PHYSetShortRAMAddr *****************
 18355 ;; Defined at:
 18356 ;;		line 124 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 18357 ;; Parameters:    Size  Location     Type
 18358 ;;  address         1    wreg     unsigned char 
 18359 ;;  value           1    1[COMRAM] unsigned char 
 18360 ;; Auto vars:     Size  Location     Type
 18361 ;;  address         1    2[COMRAM] unsigned char 
 18362 ;;  PHYSetShortR    1    3[COMRAM] volatile unsigned char 
 18363 ;; Return value:  Size  Location     Type
 18364 ;;                  1    wreg      void 
 18365 ;; Registers used:
 18366 ;;		wreg, status,2, cstack
 18367 ;; Tracked objects:
 18368 ;;		On entry : 0/0
 18369 ;;		On exit  : 0/0
 18370 ;;		Unchanged: 0/0
 18371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18372 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18375 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18376 ;;Total ram usage:        3 bytes
 18377 ;; Hardware stack levels used:    1
 18378 ;; Hardware stack levels required when called:    1
 18379 ;; This function calls:
 18380 ;;		i2_SPI1_Exchange8bit
 18381 ;; This function is called by:
 18382 ;;		_high_isr
 18383 ;; This function uses a non-reentrant model
 18384 ;;
 18385                           
 18386                           	psect	text78
 18387  003A0C                     __ptext78:
 18388                           	opt stack 0
 18389  003A0C                     i2_PHYSetShortRAMAddr:
 18390                           	opt stack 14
 18391                           
 18392                           ;incstack = 0
 18393                           ;i2PHYSetShortRAMAddr@address stored from wreg
 18394  003A0C  6E03               	movwf	i2PHYSetShortRAMAddr@address,c
 18395                           
 18396                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 18397  003A0E  0E00               	movlw	0
 18398  003A10  B6F0               	btfsc	intcon3,3,c	;volatile
 18399  003A12  0E01               	movlw	1
 18400  003A14  6E04               	movwf	i2PHYSetShortRAMAddr@tmpRFIE,c	;volatile
 18401                           
 18402                           ;drv_mrf_miwi_24j40.c: 128: INTCON3bits.INT1IE = 0;
 18403  003A16  96F0               	bcf	intcon3,3,c	;volatile
 18404                           
 18405                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
 18406  003A18  968A               	bcf	3978,3,c	;volatile
 18407                           
 18408                           ;drv_mrf_miwi_24j40.c: 130: SPI1_Exchange8bit(address);
 18409  003A1A  5003               	movf	i2PHYSetShortRAMAddr@address,w,c
 18410  003A1C  EC06  F01E         	call	i2_SPI1_Exchange8bit
 18411                           
 18412                           ;drv_mrf_miwi_24j40.c: 131: SPI1_Exchange8bit(value);
 18413  003A20  5002               	movf	i2PHYSetShortRAMAddr@value,w,c
 18414  003A22  EC06  F01E         	call	i2_SPI1_Exchange8bit
 18415                           
 18416                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
 18417  003A26  868A               	bsf	3978,3,c	;volatile
 18418                           
 18419                           ;drv_mrf_miwi_24j40.c: 133: INTCON3bits.INT1IE = tmpRFIE;
 18420  003A28  B004               	btfsc	i2PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
 18421  003A2A  D002               	bra	i2u1092_45
 18422  003A2C  96F0               	bcf	intcon3,3,c	;volatile
 18423  003A2E  D001               	bra	i2u1092_46
 18424  003A30                     i2u1092_45:
 18425  003A30  86F0               	bsf	intcon3,3,c	;volatile
 18426  003A32                     i2u1092_46:
 18427  003A32  0012               	return		;funcret
 18428  003A34                     __end_ofi2_PHYSetShortRAMAddr:
 18429                           	opt stack 0
 18430                           tblptru	equ	0xFF8
 18431                           tblptrh	equ	0xFF7
 18432                           tblptrl	equ	0xFF6
 18433                           tablat	equ	0xFF5
 18434                           prodh	equ	0xFF4
 18435                           prodl	equ	0xFF3
 18436                           intcon	equ	0xFF2
 18437                           intcon2	equ	0xFF1
 18438                           intcon3	equ	0xFF0
 18439                           postinc0	equ	0xFEE
 18440                           plusw0	equ	0xFEB
 18441                           wreg	equ	0xFE8
 18442                           indf1	equ	0xFE7
 18443                           postinc1	equ	0xFE6
 18444                           postdec1	equ	0xFE5
 18445                           fsr1h	equ	0xFE2
 18446                           fsr1l	equ	0xFE1
 18447                           indf2	equ	0xFDF
 18448                           postinc2	equ	0xFDE
 18449                           postdec2	equ	0xFDD
 18450                           plusw2	equ	0xFDB
 18451                           fsr2h	equ	0xFDA
 18452                           fsr2l	equ	0xFD9
 18453                           status	equ	0xFD8
 18454                           
 18455 ;; *************** function i2_PHYGetShortRAMAddr *****************
 18456 ;; Defined at:
 18457 ;;		line 154 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 18458 ;; Parameters:    Size  Location     Type
 18459 ;;  address         1    wreg     unsigned char 
 18460 ;; Auto vars:     Size  Location     Type
 18461 ;;  address         1    1[COMRAM] unsigned char 
 18462 ;;  PHYGetShortR    1    3[COMRAM] volatile unsigned char 
 18463 ;;  PHYGetShortR    1    2[COMRAM] unsigned char 
 18464 ;; Return value:  Size  Location     Type
 18465 ;;                  1    wreg      unsigned char 
 18466 ;; Registers used:
 18467 ;;		wreg, status,2, cstack
 18468 ;; Tracked objects:
 18469 ;;		On entry : 0/0
 18470 ;;		On exit  : 0/0
 18471 ;;		Unchanged: 0/0
 18472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18474 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18476 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18477 ;;Total ram usage:        3 bytes
 18478 ;; Hardware stack levels used:    1
 18479 ;; Hardware stack levels required when called:    1
 18480 ;; This function calls:
 18481 ;;		i2_SPI1_Exchange8bit
 18482 ;; This function is called by:
 18483 ;;		_high_isr
 18484 ;; This function uses a non-reentrant model
 18485 ;;
 18486                           
 18487                           	psect	text79
 18488  0039B8                     __ptext79:
 18489                           	opt stack 0
 18490  0039B8                     i2_PHYGetShortRAMAddr:
 18491                           	opt stack 14
 18492                           
 18493                           ;incstack = 0
 18494                           ;i2PHYGetShortRAMAddr@address stored from wreg
 18495  0039B8  6E02               	movwf	i2PHYGetShortRAMAddr@address,c
 18496                           
 18497                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 18498                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 18499  0039BA  0E00               	movlw	0
 18500  0039BC  B6F0               	btfsc	intcon3,3,c	;volatile
 18501  0039BE  0E01               	movlw	1
 18502  0039C0  6E04               	movwf	i2PHYGetShortRAMAddr@tmpRFIE,c	;volatile
 18503                           
 18504                           ;drv_mrf_miwi_24j40.c: 159: INTCON3bits.INT1IE = 0;
 18505  0039C2  96F0               	bcf	intcon3,3,c	;volatile
 18506                           
 18507                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
 18508  0039C4  968A               	bcf	3978,3,c	;volatile
 18509                           
 18510                           ;drv_mrf_miwi_24j40.c: 161: SPI1_Exchange8bit(address);
 18511  0039C6  5002               	movf	i2PHYGetShortRAMAddr@address,w,c
 18512  0039C8  EC06  F01E         	call	i2_SPI1_Exchange8bit
 18513                           
 18514                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPI1_Exchange8bit(0x00);
 18515  0039CC  0E00               	movlw	0
 18516  0039CE  EC06  F01E         	call	i2_SPI1_Exchange8bit
 18517  0039D2  6E03               	movwf	i2PHYGetShortRAMAddr@toReturn,c
 18518                           
 18519                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
 18520  0039D4  868A               	bsf	3978,3,c	;volatile
 18521                           
 18522                           ;drv_mrf_miwi_24j40.c: 164: INTCON3bits.INT1IE = tmpRFIE;
 18523  0039D6  B004               	btfsc	i2PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
 18524  0039D8  D002               	bra	i2u1093_45
 18525  0039DA  96F0               	bcf	intcon3,3,c	;volatile
 18526  0039DC  D001               	bra	i2u1093_46
 18527  0039DE                     i2u1093_45:
 18528  0039DE  86F0               	bsf	intcon3,3,c	;volatile
 18529  0039E0                     i2u1093_46:
 18530                           
 18531                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 18532  0039E0  5003               	movf	i2PHYGetShortRAMAddr@toReturn,w,c
 18533  0039E2  0012               	return		;funcret
 18534  0039E4                     __end_ofi2_PHYGetShortRAMAddr:
 18535                           	opt stack 0
 18536                           tblptru	equ	0xFF8
 18537                           tblptrh	equ	0xFF7
 18538                           tblptrl	equ	0xFF6
 18539                           tablat	equ	0xFF5
 18540                           prodh	equ	0xFF4
 18541                           prodl	equ	0xFF3
 18542                           intcon	equ	0xFF2
 18543                           intcon2	equ	0xFF1
 18544                           intcon3	equ	0xFF0
 18545                           postinc0	equ	0xFEE
 18546                           plusw0	equ	0xFEB
 18547                           wreg	equ	0xFE8
 18548                           indf1	equ	0xFE7
 18549                           postinc1	equ	0xFE6
 18550                           postdec1	equ	0xFE5
 18551                           fsr1h	equ	0xFE2
 18552                           fsr1l	equ	0xFE1
 18553                           indf2	equ	0xFDF
 18554                           postinc2	equ	0xFDE
 18555                           postdec2	equ	0xFDD
 18556                           plusw2	equ	0xFDB
 18557                           fsr2h	equ	0xFDA
 18558                           fsr2l	equ	0xFD9
 18559                           status	equ	0xFD8
 18560                           
 18561 ;; *************** function i2_PHYGetLongRAMAddr *****************
 18562 ;; Defined at:
 18563 ;;		line 185 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 18564 ;; Parameters:    Size  Location     Type
 18565 ;;  address         2    1[COMRAM] unsigned int 
 18566 ;; Auto vars:     Size  Location     Type
 18567 ;;  PHYGetLongRA    1    6[COMRAM] volatile unsigned char 
 18568 ;;  PHYGetLongRA    1    5[COMRAM] unsigned char 
 18569 ;; Return value:  Size  Location     Type
 18570 ;;                  1    wreg      unsigned char 
 18571 ;; Registers used:
 18572 ;;		wreg, status,2, status,0, cstack
 18573 ;; Tracked objects:
 18574 ;;		On entry : 0/0
 18575 ;;		On exit  : 0/0
 18576 ;;		Unchanged: 0/0
 18577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18579 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18581 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18582 ;;Total ram usage:        6 bytes
 18583 ;; Hardware stack levels used:    1
 18584 ;; Hardware stack levels required when called:    1
 18585 ;; This function calls:
 18586 ;;		i2_SPI1_Exchange8bit
 18587 ;; This function is called by:
 18588 ;;		_high_isr
 18589 ;; This function uses a non-reentrant model
 18590 ;;
 18591                           
 18592                           	psect	text80
 18593  003408                     __ptext80:
 18594                           	opt stack 0
 18595  003408                     i2_PHYGetLongRAMAddr:
 18596                           	opt stack 14
 18597                           
 18598                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 18599                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 18600                           
 18601                           ;incstack = 0
 18602  003408  0E00               	movlw	0
 18603  00340A  B6F0               	btfsc	intcon3,3,c	;volatile
 18604  00340C  0E01               	movlw	1
 18605  00340E  6E07               	movwf	i2PHYGetLongRAMAddr@tmpRFIE,c	;volatile
 18606                           
 18607                           ;drv_mrf_miwi_24j40.c: 190: INTCON3bits.INT1IE = 0;
 18608  003410  96F0               	bcf	intcon3,3,c	;volatile
 18609                           
 18610                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
 18611  003412  968A               	bcf	3978,3,c	;volatile
 18612                           
 18613                           ;drv_mrf_miwi_24j40.c: 192: SPI1_Exchange8bit(((address >> 3)&0x7F) | 0x80);
 18614  003414  C002  F004         	movff	i2PHYGetLongRAMAddr@address,??i2_PHYGetLongRAMAddr
 18615  003418  C003  F005         	movff	i2PHYGetLongRAMAddr@address+1,??i2_PHYGetLongRAMAddr+1
 18616  00341C  90D8               	bcf	status,0,c
 18617  00341E  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 18618  003420  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 18619  003422  90D8               	bcf	status,0,c
 18620  003424  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 18621  003426  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 18622  003428  90D8               	bcf	status,0,c
 18623  00342A  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 18624  00342C  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 18625  00342E  5004               	movf	??i2_PHYGetLongRAMAddr,w,c
 18626  003430  0B7F               	andlw	127
 18627  003432  0980               	iorlw	128
 18628  003434  EC06  F01E         	call	i2_SPI1_Exchange8bit
 18629                           
 18630                           ;drv_mrf_miwi_24j40.c: 193: SPI1_Exchange8bit(((address << 5)&0xE0));
 18631  003438  3802               	swapf	i2PHYGetLongRAMAddr@address,w,c
 18632  00343A  46E8               	rlncf	wreg,f,c
 18633  00343C  0BE0               	andlw	224
 18634  00343E  EC06  F01E         	call	i2_SPI1_Exchange8bit
 18635                           
 18636                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPI1_Exchange8bit(0x00);
 18637  003442  0E00               	movlw	0
 18638  003444  EC06  F01E         	call	i2_SPI1_Exchange8bit
 18639  003448  6E06               	movwf	i2PHYGetLongRAMAddr@toReturn,c
 18640                           
 18641                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
 18642  00344A  868A               	bsf	3978,3,c	;volatile
 18643                           
 18644                           ;drv_mrf_miwi_24j40.c: 196: INTCON3bits.INT1IE = tmpRFIE;
 18645  00344C  B007               	btfsc	i2PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
 18646  00344E  D002               	bra	i2u1094_45
 18647  003450  96F0               	bcf	intcon3,3,c	;volatile
 18648  003452  D001               	bra	i2u1094_46
 18649  003454                     i2u1094_45:
 18650  003454  86F0               	bsf	intcon3,3,c	;volatile
 18651  003456                     i2u1094_46:
 18652                           
 18653                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 18654  003456  5006               	movf	i2PHYGetLongRAMAddr@toReturn,w,c
 18655  003458  0012               	return		;funcret
 18656  00345A                     __end_ofi2_PHYGetLongRAMAddr:
 18657                           	opt stack 0
 18658                           tblptru	equ	0xFF8
 18659                           tblptrh	equ	0xFF7
 18660                           tblptrl	equ	0xFF6
 18661                           tablat	equ	0xFF5
 18662                           prodh	equ	0xFF4
 18663                           prodl	equ	0xFF3
 18664                           intcon	equ	0xFF2
 18665                           intcon2	equ	0xFF1
 18666                           intcon3	equ	0xFF0
 18667                           postinc0	equ	0xFEE
 18668                           plusw0	equ	0xFEB
 18669                           wreg	equ	0xFE8
 18670                           indf1	equ	0xFE7
 18671                           postinc1	equ	0xFE6
 18672                           postdec1	equ	0xFE5
 18673                           fsr1h	equ	0xFE2
 18674                           fsr1l	equ	0xFE1
 18675                           indf2	equ	0xFDF
 18676                           postinc2	equ	0xFDE
 18677                           postdec2	equ	0xFDD
 18678                           plusw2	equ	0xFDB
 18679                           fsr2h	equ	0xFDA
 18680                           fsr2l	equ	0xFD9
 18681                           status	equ	0xFD8
 18682                           
 18683 ;; *************** function i2_SPI1_Exchange8bit *****************
 18684 ;; Defined at:
 18685 ;;		line 52 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
 18686 ;; Parameters:    Size  Location     Type
 18687 ;;  data            1    wreg     unsigned char 
 18688 ;; Auto vars:     Size  Location     Type
 18689 ;;  data            1    0[COMRAM] unsigned char 
 18690 ;; Return value:  Size  Location     Type
 18691 ;;                  1    wreg      unsigned char 
 18692 ;; Registers used:
 18693 ;;		wreg, status,2
 18694 ;; Tracked objects:
 18695 ;;		On entry : 0/0
 18696 ;;		On exit  : 0/0
 18697 ;;		Unchanged: 0/0
 18698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18700 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18702 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18703 ;;Total ram usage:        1 bytes
 18704 ;; Hardware stack levels used:    1
 18705 ;; This function calls:
 18706 ;;		Nothing
 18707 ;; This function is called by:
 18708 ;;		i2_PHYSetShortRAMAddr
 18709 ;;		i2_PHYGetShortRAMAddr
 18710 ;;		i2_PHYGetLongRAMAddr
 18711 ;; This function uses a non-reentrant model
 18712 ;;
 18713                           
 18714                           	psect	text81
 18715  003C0C                     __ptext81:
 18716                           	opt stack 0
 18717  003C0C                     i2_SPI1_Exchange8bit:
 18718                           	opt stack 14
 18719                           
 18720                           ;incstack = 0
 18721                           ;i2SPI1_Exchange8bit@data stored from wreg
 18722  003C0C  6E01               	movwf	i2SPI1_Exchange8bit@data,c
 18723                           
 18724                           ;spi.c: 54: SSP1CON1bits.WCOL = 0;
 18725  003C0E  9EC6               	bcf	4038,7,c	;volatile
 18726                           
 18727                           ;spi.c: 56: SSP1BUF = data;
 18728  003C10  C001  FFC9         	movff	i2SPI1_Exchange8bit@data,4041	;volatile
 18729  003C14                     i2l837:
 18730  003C14  A0C7               	btfss	4039,0,c	;volatile
 18731  003C16  D7FE               	goto	i2l837
 18732                           
 18733                           ;spi.c: 59: }
 18734                           ;spi.c: 61: return (SSP1BUF);
 18735  003C18  50C9               	movf	4041,w,c	;volatile
 18736  003C1A  0012               	return		;funcret
 18737  003C1C                     __end_ofi2_SPI1_Exchange8bit:
 18738                           	opt stack 0
 18739                           tblptru	equ	0xFF8
 18740                           tblptrh	equ	0xFF7
 18741                           tblptrl	equ	0xFF6
 18742                           tablat	equ	0xFF5
 18743                           prodh	equ	0xFF4
 18744                           prodl	equ	0xFF3
 18745                           intcon	equ	0xFF2
 18746                           intcon2	equ	0xFF1
 18747                           intcon3	equ	0xFF0
 18748                           postinc0	equ	0xFEE
 18749                           plusw0	equ	0xFEB
 18750                           wreg	equ	0xFE8
 18751                           indf1	equ	0xFE7
 18752                           postinc1	equ	0xFE6
 18753                           postdec1	equ	0xFE5
 18754                           fsr1h	equ	0xFE2
 18755                           fsr1l	equ	0xFE1
 18756                           indf2	equ	0xFDF
 18757                           postinc2	equ	0xFDE
 18758                           postdec2	equ	0xFDD
 18759                           plusw2	equ	0xFDB
 18760                           fsr2h	equ	0xFDA
 18761                           fsr2l	equ	0xFD9
 18762                           status	equ	0xFD8
 18763                           
 18764 ;; *************** function _UserInterruptHandler *****************
 18765 ;; Defined at:
 18766 ;;		line 346 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 18767 ;; Parameters:    Size  Location     Type
 18768 ;;		None
 18769 ;; Auto vars:     Size  Location     Type
 18770 ;;		None
 18771 ;; Return value:  Size  Location     Type
 18772 ;;                  1    wreg      void 
 18773 ;; Registers used:
 18774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18775 ;; Tracked objects:
 18776 ;;		On entry : 0/0
 18777 ;;		On exit  : 0/0
 18778 ;;		Unchanged: 0/0
 18779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18784 ;;Total ram usage:        0 bytes
 18785 ;; Hardware stack levels used:    1
 18786 ;; Hardware stack levels required when called:    2
 18787 ;; This function calls:
 18788 ;;		_I2CTask
 18789 ;;		i2_DELAY_ms
 18790 ;; This function is called by:
 18791 ;;		_high_isr
 18792 ;; This function uses a non-reentrant model
 18793 ;;
 18794                           
 18795                           	psect	text82
 18796  003BD6                     __ptext82:
 18797                           	opt stack 0
 18798  003BD6                     _UserInterruptHandler:
 18799                           	opt stack 13
 18800                           
 18801                           ;lcd.c: 349: if( PIR3bits.SSP2IF )
 18802                           
 18803                           ;incstack = 0
 18804  003BD6  AEA4               	btfss	4004,7,c	;volatile
 18805  003BD8  0012               	return	
 18806                           
 18807                           ;lcd.c: 350: {
 18808                           ;lcd.c: 351: PIR3bits.SSP2IF = 0;
 18809  003BDA  9EA4               	bcf	4004,7,c	;volatile
 18810                           
 18811                           ;lcd.c: 352: I2CTask();
 18812  003BDC  EC38  F018         	call	_I2CTask	;wreg free
 18813                           
 18814                           ;lcd.c: 353: DELAY_ms(5);
 18815  003BE0  6A02               	clrf	i2DELAY_ms@ms+1,c
 18816  003BE2  0E05               	movlw	5
 18817  003BE4  6E01               	movwf	i2DELAY_ms@ms,c
 18818  003BE6  EFA2  F014         	goto	i2_DELAY_ms	;wreg free
 18819  003BEA                     __end_of_UserInterruptHandler:
 18820                           	opt stack 0
 18821                           tblptru	equ	0xFF8
 18822                           tblptrh	equ	0xFF7
 18823                           tblptrl	equ	0xFF6
 18824                           tablat	equ	0xFF5
 18825                           prodh	equ	0xFF4
 18826                           prodl	equ	0xFF3
 18827                           intcon	equ	0xFF2
 18828                           intcon2	equ	0xFF1
 18829                           intcon3	equ	0xFF0
 18830                           postinc0	equ	0xFEE
 18831                           plusw0	equ	0xFEB
 18832                           wreg	equ	0xFE8
 18833                           indf1	equ	0xFE7
 18834                           postinc1	equ	0xFE6
 18835                           postdec1	equ	0xFE5
 18836                           fsr1h	equ	0xFE2
 18837                           fsr1l	equ	0xFE1
 18838                           indf2	equ	0xFDF
 18839                           postinc2	equ	0xFDE
 18840                           postdec2	equ	0xFDD
 18841                           plusw2	equ	0xFDB
 18842                           fsr2h	equ	0xFDA
 18843                           fsr2l	equ	0xFD9
 18844                           status	equ	0xFD8
 18845                           
 18846 ;; *************** function _I2CTask *****************
 18847 ;; Defined at:
 18848 ;;		line 66 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 18849 ;; Parameters:    Size  Location     Type
 18850 ;;		None
 18851 ;; Auto vars:     Size  Location     Type
 18852 ;;		None
 18853 ;; Return value:  Size  Location     Type
 18854 ;;                  1    wreg      void 
 18855 ;; Registers used:
 18856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18857 ;; Tracked objects:
 18858 ;;		On entry : 0/0
 18859 ;;		On exit  : 0/0
 18860 ;;		Unchanged: 0/0
 18861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18866 ;;Total ram usage:        0 bytes
 18867 ;; Hardware stack levels used:    1
 18868 ;; Hardware stack levels required when called:    1
 18869 ;; This function calls:
 18870 ;;		i2_DELAY_ms
 18871 ;; This function is called by:
 18872 ;;		_UserInterruptHandler
 18873 ;; This function uses a non-reentrant model
 18874 ;;
 18875                           
 18876                           	psect	text83
 18877  003070                     __ptext83:
 18878                           	opt stack 0
 18879  003070                     _I2CTask:
 18880                           	opt stack 13
 18881                           
 18882                           ;lcd.c: 69: if( CommandPtr < CommandLen || TextPtr < TextLen )
 18883                           
 18884                           ;incstack = 0
 18885  003070  5030               	movf	_CommandLen,w,c
 18886  003072  5C31               	subwf	_CommandPtr,w,c
 18887  003074  E304               	bnc	i2l774
 18888  003076  5034               	movf	_TextLen,w,c
 18889  003078  5C35               	subwf	_TextPtr,w,c
 18890  00307A  B0D8               	btfsc	status,0,c
 18891  00307C  0012               	return	
 18892  00307E                     i2l774:
 18893  00307E  B071               	btfsc	3953,0,c	;volatile
 18894  003080  D7FE               	goto	i2l774
 18895                           
 18896                           ;lcd.c: 72: if( CommandPtr < CommandLen )
 18897  003082  5030               	movf	_CommandLen,w,c
 18898  003084  5C31               	subwf	_CommandPtr,w,c
 18899  003086  E215               	bc	i2l10503
 18900                           
 18901                           ;lcd.c: 73: {
 18902                           ;lcd.c: 74: SSP2BUF = LCDCommand[CommandPtr];
 18903  003088  5031               	movf	_CommandPtr,w,c
 18904  00308A  0FD1               	addlw	low _LCDCommand
 18905  00308C  6ED9               	movwf	fsr2l,c
 18906  00308E  6ADA               	clrf	fsr2h,c
 18907  003090  50DF               	movf	indf2,w,c
 18908  003092  6E75               	movwf	3957,c	;volatile
 18909                           
 18910                           ;lcd.c: 76: {
 18911                           ;lcd.c: 77: CommandPtr++;
 18912  003094  2A31               	incf	_CommandPtr,f,c
 18913                           
 18914                           ;lcd.c: 78: }
 18915                           ;lcd.c: 79: if( CommandPtr == CommandLen && TextLen == 0 )
 18916  003096  5030               	movf	_CommandLen,w,c
 18917  003098  1831               	xorwf	_CommandPtr,w,c
 18918  00309A  A4D8               	btfss	status,2,c
 18919  00309C  0012               	return	
 18920  00309E  5034               	movf	_TextLen,w,c
 18921  0030A0  A4D8               	btfss	status,2,c
 18922  0030A2  0012               	return	
 18923  0030A4                     i2l10499:
 18924                           
 18925                           ;lcd.c: 80: {
 18926                           ;lcd.c: 82: SSP2CON2bits.PEN = 1;
 18927  0030A4  8471               	bsf	3953,2,c	;volatile
 18928                           
 18929                           ;lcd.c: 83: DELAY_ms(300);
 18930  0030A6  0E01               	movlw	1
 18931  0030A8  6E02               	movwf	i2DELAY_ms@ms+1,c
 18932  0030AA  0E2C               	movlw	44
 18933  0030AC  6E01               	movwf	i2DELAY_ms@ms,c
 18934  0030AE  EFA2  F014         	goto	i2_DELAY_ms	;wreg free
 18935  0030B2                     i2l10503:
 18936                           
 18937                           ;lcd.c: 86: else if( TextPtr < TextLen )
 18938  0030B2  5034               	movf	_TextLen,w,c
 18939  0030B4  5C35               	subwf	_TextPtr,w,c
 18940  0030B6  B0D8               	btfsc	status,0,c
 18941  0030B8  0012               	return	
 18942                           
 18943                           ;lcd.c: 87: {
 18944                           ;lcd.c: 88: if( LCDText[TextPtr] == 0 )
 18945  0030BA  0E40               	movlw	low _LCDText
 18946  0030BC  2435               	addwf	_TextPtr,w,c
 18947  0030BE  6ED9               	movwf	fsr2l,c
 18948  0030C0  6ADA               	clrf	fsr2h,c
 18949  0030C2  0E01               	movlw	high _LCDText
 18950  0030C4  22DA               	addwfc	fsr2h,f,c
 18951  0030C6  50DF               	movf	indf2,w,c
 18952  0030C8  E108               	bnz	i2l781
 18953                           
 18954                           ;lcd.c: 89: {
 18955                           ;lcd.c: 90: LCDText[TextPtr] = ' ';
 18956  0030CA  0E40               	movlw	low _LCDText
 18957  0030CC  2435               	addwf	_TextPtr,w,c
 18958  0030CE  6ED9               	movwf	fsr2l,c
 18959  0030D0  6ADA               	clrf	fsr2h,c
 18960  0030D2  0E01               	movlw	high _LCDText
 18961  0030D4  22DA               	addwfc	fsr2h,f,c
 18962  0030D6  0E20               	movlw	32
 18963  0030D8  6EDF               	movwf	indf2,c
 18964  0030DA                     i2l781:
 18965                           
 18966                           ;lcd.c: 91: }
 18967                           ;lcd.c: 92: SSP2BUF = LCDText[TextPtr];
 18968  0030DA  0E40               	movlw	low _LCDText
 18969  0030DC  2435               	addwf	_TextPtr,w,c
 18970  0030DE  6ED9               	movwf	fsr2l,c
 18971  0030E0  6ADA               	clrf	fsr2h,c
 18972  0030E2  0E01               	movlw	high _LCDText
 18973  0030E4  22DA               	addwfc	fsr2h,f,c
 18974  0030E6  50DF               	movf	indf2,w,c
 18975  0030E8  6E75               	movwf	3957,c	;volatile
 18976                           
 18977                           ;lcd.c: 95: {
 18978                           ;lcd.c: 96: TextPtr++;
 18979  0030EA  2A35               	incf	_TextPtr,f,c
 18980                           
 18981                           ;lcd.c: 97: }
 18982                           ;lcd.c: 98: if( TextPtr == TextLen )
 18983  0030EC  5034               	movf	_TextLen,w,c
 18984  0030EE  1835               	xorwf	_TextPtr,w,c
 18985  0030F0  E0D9               	bz	i2l10499
 18986                           
 18987                           ;lcd.c: 99: {
 18988                           ;lcd.c: 101: SSP2CON2bits.PEN = 1;
 18989  0030F2  0012               	return		;funcret
 18990  0030F4                     __end_of_I2CTask:
 18991                           	opt stack 0
 18992                           tblptru	equ	0xFF8
 18993                           tblptrh	equ	0xFF7
 18994                           tblptrl	equ	0xFF6
 18995                           tablat	equ	0xFF5
 18996                           prodh	equ	0xFF4
 18997                           prodl	equ	0xFF3
 18998                           intcon	equ	0xFF2
 18999                           intcon2	equ	0xFF1
 19000                           intcon3	equ	0xFF0
 19001                           postinc0	equ	0xFEE
 19002                           plusw0	equ	0xFEB
 19003                           wreg	equ	0xFE8
 19004                           indf1	equ	0xFE7
 19005                           postinc1	equ	0xFE6
 19006                           postdec1	equ	0xFE5
 19007                           fsr1h	equ	0xFE2
 19008                           fsr1l	equ	0xFE1
 19009                           indf2	equ	0xFDF
 19010                           postinc2	equ	0xFDE
 19011                           postdec2	equ	0xFDD
 19012                           plusw2	equ	0xFDB
 19013                           fsr2h	equ	0xFDA
 19014                           fsr2l	equ	0xFD9
 19015                           status	equ	0xFD8
 19016                           
 19017 ;; *************** function i2_DELAY_ms *****************
 19018 ;; Defined at:
 19019 ;;		line 108 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/delay.c"
 19020 ;; Parameters:    Size  Location     Type
 19021 ;;  ms              2    0[COMRAM] unsigned int 
 19022 ;; Auto vars:     Size  Location     Type
 19023 ;;  DELAY_ms        4   10[COMRAM] long 
 19024 ;; Return value:  Size  Location     Type
 19025 ;;                  1    wreg      void 
 19026 ;; Registers used:
 19027 ;;		wreg, status,2, status,0, prodl, prodh
 19028 ;; Tracked objects:
 19029 ;;		On entry : 0/0
 19030 ;;		On exit  : 0/0
 19031 ;;		Unchanged: 0/0
 19032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19034 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19035 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19036 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19037 ;;Total ram usage:       14 bytes
 19038 ;; Hardware stack levels used:    1
 19039 ;; This function calls:
 19040 ;;		Nothing
 19041 ;; This function is called by:
 19042 ;;		_I2CTask
 19043 ;;		_UserInterruptHandler
 19044 ;; This function uses a non-reentrant model
 19045 ;;
 19046                           
 19047                           	psect	text84
 19048  002944                     __ptext84:
 19049                           	opt stack 0
 19050  002944                     i2_DELAY_ms:
 19051                           	opt stack 14
 19052                           
 19053                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000)/4)/1000) * ms;
 19054                           
 19055                           ;incstack = 0
 19056  002944  5001               	movf	i2DELAY_ms@ms,w,c
 19057  002946  6E03               	movwf	??i2_DELAY_ms& (0+255),c
 19058  002948  5002               	movf	i2DELAY_ms@ms+1,w,c
 19059  00294A  6E04               	movwf	(??i2_DELAY_ms+1)& (0+255),c
 19060  00294C  6A05               	clrf	(??i2_DELAY_ms+2)& (0+255),c
 19061  00294E  6A06               	clrf	(??i2_DELAY_ms+3)& (0+255),c
 19062  002950  0ED0               	movlw	208
 19063  002952  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 19064  002954  CFF3 F007          	movff	prodl,??i2_DELAY_ms+4
 19065  002958  CFF4 F008          	movff	prodh,??i2_DELAY_ms+5
 19066  00295C  6A09               	clrf	(??i2_DELAY_ms+6)& (0+255),c
 19067  00295E  6A0A               	clrf	(??i2_DELAY_ms+7)& (0+255),c
 19068  002960  0204               	mulwf	(??i2_DELAY_ms+1)& (0+255),c
 19069  002962  50F3               	movf	prodl,w,c
 19070  002964  2608               	addwf	(??i2_DELAY_ms+5)& (0+255),f,c
 19071  002966  50F4               	movf	prodh,w,c
 19072  002968  2209               	addwfc	(??i2_DELAY_ms+6)& (0+255),f,c
 19073  00296A  0E00               	movlw	0
 19074  00296C  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 19075  00296E  0E07               	movlw	7
 19076  002970  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 19077  002972  50F3               	movf	prodl,w,c
 19078  002974  2608               	addwf	(??i2_DELAY_ms+5)& (0+255),f,c
 19079  002976  50F4               	movf	prodh,w,c
 19080  002978  2209               	addwfc	(??i2_DELAY_ms+6)& (0+255),f,c
 19081  00297A  0E00               	movlw	0
 19082  00297C  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 19083  00297E  0ED0               	movlw	208
 19084  002980  0205               	mulwf	(??i2_DELAY_ms+2)& (0+255),c
 19085  002982  50F3               	movf	prodl,w,c
 19086  002984  2609               	addwf	(??i2_DELAY_ms+6)& (0+255),f,c
 19087  002986  50F4               	movf	prodh,w,c
 19088  002988  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 19089  00298A  0E07               	movlw	7
 19090  00298C  0204               	mulwf	(??i2_DELAY_ms+1)& (0+255),c
 19091  00298E  50F3               	movf	prodl,w,c
 19092  002990  2609               	addwf	(??i2_DELAY_ms+6)& (0+255),f,c
 19093  002992  50F4               	movf	prodh,w,c
 19094  002994  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 19095  002996  0E00               	movlw	0
 19096  002998  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 19097  00299A  50F3               	movf	prodl,w,c
 19098  00299C  2609               	addwf	(??i2_DELAY_ms+6)& (0+255),f,c
 19099  00299E  50F4               	movf	prodh,w,c
 19100  0029A0  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 19101  0029A2  0ED0               	movlw	208
 19102  0029A4  0206               	mulwf	(??i2_DELAY_ms+3)& (0+255),c
 19103  0029A6  50F3               	movf	prodl,w,c
 19104  0029A8  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 19105  0029AA  0E07               	movlw	7
 19106  0029AC  0205               	mulwf	(??i2_DELAY_ms+2)& (0+255),c
 19107  0029AE  50F3               	movf	prodl,w,c
 19108  0029B0  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 19109  0029B2  0E00               	movlw	0
 19110  0029B4  0204               	mulwf	(??i2_DELAY_ms+1)& (0+255),c
 19111  0029B6  50F3               	movf	prodl,w,c
 19112  0029B8  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 19113  0029BA  0E00               	movlw	0
 19114  0029BC  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 19115  0029BE  50F3               	movf	prodl,w,c
 19116  0029C0  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 19117  0029C2  C007  F00B         	movff	??i2_DELAY_ms+4,i2DELAY_ms@cyclesRequiredForEntireDelay
 19118  0029C6  C008  F00C         	movff	??i2_DELAY_ms+5,i2DELAY_ms@cyclesRequiredForEntireDelay+1
 19119  0029CA  C009  F00D         	movff	??i2_DELAY_ms+6,i2DELAY_ms@cyclesRequiredForEntireDelay+2
 19120  0029CE  C00A  F00E         	movff	??i2_DELAY_ms+7,i2DELAY_ms@cyclesRequiredForEntireDelay+3
 19121                           
 19122                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 19123  0029D2  0E56               	movlw	86
 19124  0029D4  260B               	addwf	i2DELAY_ms@cyclesRequiredForEntireDelay,f,c
 19125  0029D6  0EFF               	movlw	255
 19126  0029D8  220C               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 19127  0029DA  220D               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 19128  0029DC  220E               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 19129                           
 19130                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 19131  0029DE  BE0E               	btfsc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 19132  0029E0  0CFF               	retlw	255
 19133  0029E2  500E               	movf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 19134  0029E4  100D               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 19135  0029E6  100C               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 19136  0029E8  E10B               	bnz	i2l706
 19137  0029EA  0EC4               	movlw	196
 19138  0029EC  5C0B               	subwf	i2DELAY_ms@cyclesRequiredForEntireDelay,w,c
 19139  0029EE  E208               	bc	i2l706
 19140  0029F0  0012               	return	
 19141  0029F2                     i2l707:
 19142                           
 19143                           ;delay.c: 128: {
 19144                           ;delay.c: 129: __nop();
 19145  0029F2  F000               	nop	
 19146                           
 19147                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 19148  0029F4  0ED9               	movlw	217
 19149  0029F6  260B               	addwf	i2DELAY_ms@cyclesRequiredForEntireDelay,f,c
 19150  0029F8  0EFF               	movlw	255
 19151  0029FA  220C               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 19152  0029FC  220D               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 19153  0029FE  220E               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 19154  002A00                     i2l706:
 19155  002A00  BE0E               	btfsc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 19156  002A02  0012               	return	
 19157  002A04  500E               	movf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 19158  002A06  100D               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 19159  002A08  100C               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 19160  002A0A  E1F3               	bnz	i2l707
 19161  002A0C  040B               	decf	i2DELAY_ms@cyclesRequiredForEntireDelay,w,c
 19162  002A0E  E2F1               	bc	i2l707
 19163  002A10  0012               	return		;funcret
 19164  002A12                     __end_ofi2_DELAY_ms:
 19165                           	opt stack 0
 19166                           tblptru	equ	0xFF8
 19167                           tblptrh	equ	0xFF7
 19168                           tblptrl	equ	0xFF6
 19169                           tablat	equ	0xFF5
 19170                           prodh	equ	0xFF4
 19171                           prodl	equ	0xFF3
 19172                           intcon	equ	0xFF2
 19173                           intcon2	equ	0xFF1
 19174                           intcon3	equ	0xFF0
 19175                           postinc0	equ	0xFEE
 19176                           plusw0	equ	0xFEB
 19177                           wreg	equ	0xFE8
 19178                           indf1	equ	0xFE7
 19179                           postinc1	equ	0xFE6
 19180                           postdec1	equ	0xFE5
 19181                           fsr1h	equ	0xFE2
 19182                           fsr1l	equ	0xFE1
 19183                           indf2	equ	0xFDF
 19184                           postinc2	equ	0xFDE
 19185                           postdec2	equ	0xFDD
 19186                           plusw2	equ	0xFDB
 19187                           fsr2h	equ	0xFDA
 19188                           fsr2l	equ	0xFD9
 19189                           status	equ	0xFD8
 19190                           tblptru	equ	0xFF8
 19191                           tblptrh	equ	0xFF7
 19192                           tblptrl	equ	0xFF6
 19193                           tablat	equ	0xFF5
 19194                           prodh	equ	0xFF4
 19195                           prodl	equ	0xFF3
 19196                           intcon	equ	0xFF2
 19197                           intcon2	equ	0xFF1
 19198                           intcon3	equ	0xFF0
 19199                           postinc0	equ	0xFEE
 19200                           plusw0	equ	0xFEB
 19201                           wreg	equ	0xFE8
 19202                           indf1	equ	0xFE7
 19203                           postinc1	equ	0xFE6
 19204                           postdec1	equ	0xFE5
 19205                           fsr1h	equ	0xFE2
 19206                           fsr1l	equ	0xFE1
 19207                           indf2	equ	0xFDF
 19208                           postinc2	equ	0xFDE
 19209                           postdec2	equ	0xFDD
 19210                           plusw2	equ	0xFDB
 19211                           fsr2h	equ	0xFDA
 19212                           fsr2l	equ	0xFD9
 19213                           status	equ	0xFD8
 19214                           
 19215                           	psect	rparam
 19216  0000                     tblptru	equ	0xFF8
 19217                           tblptrh	equ	0xFF7
 19218                           tblptrl	equ	0xFF6
 19219                           tablat	equ	0xFF5
 19220                           prodh	equ	0xFF4
 19221                           prodl	equ	0xFF3
 19222                           intcon	equ	0xFF2
 19223                           intcon2	equ	0xFF1
 19224                           intcon3	equ	0xFF0
 19225                           postinc0	equ	0xFEE
 19226                           plusw0	equ	0xFEB
 19227                           wreg	equ	0xFE8
 19228                           indf1	equ	0xFE7
 19229                           postinc1	equ	0xFE6
 19230                           postdec1	equ	0xFE5
 19231                           fsr1h	equ	0xFE2
 19232                           fsr1l	equ	0xFE1
 19233                           indf2	equ	0xFDF
 19234                           postinc2	equ	0xFDE
 19235                           postdec2	equ	0xFDD
 19236                           plusw2	equ	0xFDB
 19237                           fsr2h	equ	0xFDA
 19238                           fsr2l	equ	0xFD9
 19239                           status	equ	0xFD8
 19240                           
 19241                           	psect	temp
 19242  000043                     btemp:
 19243                           	opt stack 0
 19244  000043                     	ds	1
 19245  0000                     int$flags	set	btemp
 19246                           tblptru	equ	0xFF8
 19247                           tblptrh	equ	0xFF7
 19248                           tblptrl	equ	0xFF6
 19249                           tablat	equ	0xFF5
 19250                           prodh	equ	0xFF4
 19251                           prodl	equ	0xFF3
 19252                           intcon	equ	0xFF2
 19253                           intcon2	equ	0xFF1
 19254                           intcon3	equ	0xFF0
 19255                           postinc0	equ	0xFEE
 19256                           plusw0	equ	0xFEB
 19257                           wreg	equ	0xFE8
 19258                           indf1	equ	0xFE7
 19259                           postinc1	equ	0xFE6
 19260                           postdec1	equ	0xFE5
 19261                           fsr1h	equ	0xFE2
 19262                           fsr1l	equ	0xFE1
 19263                           indf2	equ	0xFDF
 19264                           postinc2	equ	0xFDE
 19265                           postdec2	equ	0xFDD
 19266                           plusw2	equ	0xFDB
 19267                           fsr2h	equ	0xFDA
 19268                           fsr2l	equ	0xFD9
 19269                           status	equ	0xFD8


Data Sizes:
    Strings     436
    Constant    156
    Data        3
    BSS         727
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      66
    BANK0           160    103     160
    BANK1           256     29     134
    BANK2           256      0     178
    BANK3           256      0      80
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    sprintf$3545	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_20(CODE[17]), STR_19(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_18(CODE[18]), STR_17(CODE[20]), STR_16(CODE[17]), STR_15(CODE[22]), 
		 -> STR_14(CODE[22]), STR_13(CODE[25]), STR_12(CODE[28]), STR_11(CODE[22]), 
		 -> STR_10(CODE[17]), STR_9(CODE[32]), STR_8(CODE[29]), STR_7(CODE[16]), 
		 -> STR_6(CODE[29]), STR_5(CODE[31]), STR_4(CODE[32]), STR_3(CODE[30]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Source_END_DEVICE_INFO@SrAddr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 32
		 -> STR_17(CODE[20]), STR_12(CODE[28]), STR_9(CODE[32]), STR_8(CODE[29]), 
		 -> STR_7(CODE[16]), STR_6(CODE[29]), STR_5(CODE[31]), STR_4(CODE[32]), 
		 -> STR_3(CODE[30]), 

    Read_MAC_Address@myAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    EEPROM_Read@dest	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 280
		 -> ConnectionTable(BIGRAM[280]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    SW_Ack_SrED@Dest_Addr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 280
		 -> ConnectionTable(BIGRAM[280]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 280
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[280]), RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 280
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[280]), RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S977$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK2[138]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    S977$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK2[138]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    Forward_Packet_PANCr_to_EDy@fw_payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    Forward_Packet_PANCr_to_EDy@EDxAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    store_connection_tb@payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    Find_Index@DestAddr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    NVMalloc@location	PTR unsigned int  size(1) Largest target is 2
		 -> nvmmyIndex(BANK0[2]), nvmRole(BANK0[2]), nvmEdc(BANK0[2]), nvmOutFrameCounter(BANK0[2]), 
		 -> nvmConnectionTable(COMRAM[2]), nvmConnMode(BANK0[2]), nvmCurrentChannel(BANK0[2]), nvmMyPANID(BANK0[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 280
		 -> myConnectionIndex_in_PanCo(BANK0[1]), myPANID(BANK0[2]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), 
		 -> role(COMRAM[1]), conn_size(COMRAM[1]), ConnectionTable(BIGRAM[280]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 280
		 -> myConnectionIndex_in_PanCo(BANK0[1]), myPANID(BANK0[2]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), 
		 -> role(COMRAM[1]), conn_size(COMRAM[1]), ConnectionTable(BIGRAM[280]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(1) Largest target is 2
		 -> myPANID(BANK0[2]), MAC_PANID(COMRAM[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(1) Largest target is 2
		 -> MiApp_StartConnection@tmp(BANK0[2]), MiApp_ProtocolInit@tmp(BANK0[2]), P2PTasks@tmp(BANK0[2]), myNetworkAddress(COMRAM[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 40
		 -> TxBuffer(BANK1[40]), 

    S425$DestAddress	PTR unsigned char  size(2) Largest target is 280
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[280]), RxBuffer(BANK2[138]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 280
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[280]), RxBuffer(BANK2[138]), 

    S29$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S381$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK2[138]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    S381$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK2[138]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 


Critical Paths under _main in COMRAM

    _LCD_Initialize->_DELAY_ms
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_NVMWrite
    _Initialize_Demo->_Read_MAC_Address
    _Read_MAC_Address->_EEPROM_Read
    _EEPROM_Read->_SPI1_Exchange8bit
    _MiApp_StartConnection->_MiMAC_SetAltAddress
    _MiApp_ProtocolInit->_NVMRead
    _MiApp_ProtocolInit->_NVMWrite
    _NVMRead->_SPI1_Exchange8bit
    _NVMInit->_NVMalloc
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiApp_SetChannel->_NVMWrite
    _P2PTasks->_MiMAC_ReceivedPacket
    _P2PTasks->_NVMWrite
    _store_connection_tb->_handle_lost_connection
    _MiApp_BroadcastConnectionTable->___awdiv
    _MiApp_RemoveConnection->_NVMWrite
    _MiMAC_SetAltAddress->_PHYSetShortRAMAddr
    _InitMRF24J40->_MiMAC_SetChannel
    _PHYGetShortRAMAddr->_SPI1_Exchange8bit
    _PHYGetLongRAMAddr->_SPI1_Exchange8bit
    _MiMAC_SetChannel->_PHYSetLongRAMAddr
    _PHYSetShortRAMAddr->_SPI1_Exchange8bit
    _PHYSetLongRAMAddr->_SPI1_Exchange8bit
    _AddConnection->_NVMWrite
    _MiApp_ConnectionMode->_NVMWrite
    _NVMWrite->_SPI1_Exchange8bit
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Update->_I2CWrite

Critical Paths under _high_isr in COMRAM

    i2_PHYSetShortRAMAddr->i2_SPI1_Exchange8bit
    i2_PHYGetShortRAMAddr->i2_SPI1_Exchange8bit
    i2_PHYGetLongRAMAddr->i2_SPI1_Exchange8bit
    _UserInterruptHandler->i2_DELAY_ms
    _I2CTask->i2_DELAY_ms

Critical Paths under _main in BANK0

    _main->_Initialize_Demo
    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _run_star_demo->_MiApp_EstablishConnection
    _run_star_demo->_Process_RxMessage
    _Source_END_DEVICE_INFO->_sprintf
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _MiApp_BroadcastPacket->_SendPacket
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_MiApp_EstablishConnection
    _STAR_DEMO_OPTIONS_MESSAGE->_LCDDisplay
    _MiApp_StartConnection->_MiWi_TickGet
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_InitMRF24J40
    _MiApp_SetChannel->_NVMWrite
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_Forward_Packet_PANCr_to_EDy
    _send_link_status->_SendPacket
    _SW_Ack_SrED->_SendPacket
    _MiApp_BroadcastConnectionTable->_SendPacket
    _Forward_Packet_PANCr_to_EDy->_MiApp_UnicastConnection
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _DemoOutput_UnicastFail->_LCDDisplay
    _Find_InActiveDevices->_MiApp_RemoveConnection
    _MiApp_RemoveConnection->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_InitMRF24J40
    _InitMRF24J40->_MiMAC_SetChannel
    _AddConnection->_NVMWrite
    _MiApp_ConnectionMode->_NVMWrite
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _Run_Demo->_run_star_demo
    _run_star_demo->_MiApp_EstablishConnection
    _Initialize_Demo->_MiApp_EstablishConnection

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 1901554
                                             28 BANK1      1     1      0
                _DemoOutput_Greeting
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                      1     1      0   15772
                                             44 BANK0      1     1      0
                      _ButtonPressed
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1790
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    1790
                           _DELAY_ms
                           _I2CWrite
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0 1345606
                      _run_star_demo
 ---------------------------------------------------------------------------------
 (2) _run_star_demo                                       13    13      0 1345606
                                             16 BANK1     12    12      0
                      _ButtonPressed
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
                         _LCDDisplay
                          _LCD_Erase
                         _LCD_Update
              _MiApp_BroadcastPacket
          _MiApp_EstablishConnection
            _MiApp_UnicastConnection
                  _MiApp_UnicastStar
                       _MiWi_TickGet
                  _Process_RxMessage
          _STAR_DEMO_OPTIONS_MESSAGE
                            ___lbmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     779
                                             28 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _Process_RxMessage                                    1     1      0  388340
                                            101 BANK0      1     1      0
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
          _STAR_DEMO_OPTIONS_MESSAGE
             _Source_END_DEVICE_INFO
 ---------------------------------------------------------------------------------
 (4) _Source_END_DEVICE_INFO                               2     0      2   11845
                                             39 BANK0      2     0      2
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_UpdateTxRx                                2     1      1   10856
                                             41 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (5) _LCDTRXCount                                          2     1      1   10409
                                             39 BANK0      2     1      1
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastStar                                   14    14      0  399867
                                              0 BANK1     13    13      0
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_BroadcastPacket                                1     1      0   50288
                                             64 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     612
                                              5 BANK0      8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      1     1      0  521798
                                            102 BANK0      1     1      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
                           _NVMWrite
                   _Read_MAC_Address
          _STAR_DEMO_OPTIONS_MESSAGE
 ---------------------------------------------------------------------------------
 (3) _STAR_DEMO_OPTIONS_MESSAGE                            1     1      0   15112
                                             44 BANK0      1     1      0
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _Read_MAC_Address                                     5     3      2    1908
                                             34 COMRAM     2     0      2
                                              0 BANK0      3     3      0
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          5     1      4    1107
                                             29 COMRAM     5     1      4
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _MiApp_StartConnection                                8     3      5    4724
                                              5 BANK0      8     3      5
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   7     7      0   55407
                                             25 BANK0      7     7      0
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
                            _NVMInit
                            _NVMRead
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              7     1      6    2327
                                             29 COMRAM     7     1      6
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    2124
                                             33 COMRAM     1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             5     2      3    2062
                                             28 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           4     1      3   24336
                                             21 BANK0      4     1      3
                       _InitMRF24J40
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0   16844
                                              2 BANK0      1     1      0
                   _MiMAC_SetChannel
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _MiApp_EstablishConnection                           18    17      1  400451
                                            101 BANK0      1     0      1
                                              0 BANK1     16    16      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0  348967
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            25    25      0  348967
                                             77 BANK0     24    24      0
                      _AddConnection
               _Find_InActiveDevices
                         _Find_Index
        _Forward_Packet_PANCr_to_EDy
     _MiApp_BroadcastConnectionTable
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                           _NVMWrite
                        _SW_Ack_SrED
                         _SendPacket
                      _isSameAddress
                   _send_link_status
                _store_connection_tb
 ---------------------------------------------------------------------------------
 (6) _store_connection_tb                                  8     6      2     975
                                              0 BANK0      6     4      2
             _handle_lost_connection
 ---------------------------------------------------------------------------------
 (7) _handle_lost_connection                               7     7      0     192
                                             28 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (6) _send_link_status                                     1     1      0   50294
                                             64 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _SW_Ack_SrED                                          2     0      2   50339
                                             64 BANK0      2     0      2
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                 8     8      0     408
                                             28 COMRAM     8     8      0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiApp_BroadcastConnectionTable                      12    12      0   52752
                                             64 BANK0     12    12      0
                         _SendPacket
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     848
                                             28 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     872
                                             28 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _Forward_Packet_PANCr_to_EDy                          7     2      5   66792
                                             70 BANK0      7     2      5
             _DemoOutput_UnicastFail
            _MiApp_UnicastConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_UnicastConnection                              2     1      1   50991
                                             68 BANK0      2     1      1
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (8) _MiApp_UnicastAddress                                 4     0      4   50623
                                             64 BANK0      4     0      4
                         _SendPacket
 ---------------------------------------------------------------------------------
 (7) _DemoOutput_UnicastFail                               0     0      0   15070
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (6) _Find_Index                                           5     3      2     483
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _Find_InActiveDevices                                 2     2      0   56464
                                             70 BANK0      2     2      0
             _MiApp_RemoveConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_RemoveConnection                               6     6      0   56158
                                             64 BANK0      6     6      0
                           _NVMWrite
                         _SendPacket
 ---------------------------------------------------------------------------------
 (7) _SendPacket                                          16    10      6   50246
                                             48 BANK0     16    10      6
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (8) _MiMAC_SendPacket                                    27    17     10   43386
                                             21 BANK0     27    17     10
                       _InitMRF24J40
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (3) _MiWi_TickGet                                        10     6      4     516
                                             28 COMRAM     5     1      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (9) _MiMAC_SetAltAddress                                  2     1      1    3864
                                             32 COMRAM     2     1      1
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (9) _InitMRF24J40                                        20    20      0   24035
                                              1 BANK0     20    20      0
                   _MiMAC_SetChannel
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (10) _PHYGetShortRAMAddr                                  3     3      0     180
                                             29 COMRAM     3     3      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (10) _PHYGetLongRAMAddr                                   6     4      2     493
                                             29 COMRAM     6     4      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (10) _MiMAC_SetChannel                                    2     1      1   11598
                                             35 COMRAM     1     0      1
                                              0 BANK0      1     1      0
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (9) _PHYSetShortRAMAddr                                   3     2      1    3044
                                             29 COMRAM     3     2      1
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (9) _PHYSetLongRAMAddr                                    6     3      3    8144
                                             29 COMRAM     6     3      3
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        7     7      0    7464
                                              2 BANK0      7     7      0
                           _NVMWrite
                  _Total_Connections
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     3      4     952
                                             28 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0     276
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MiApp_ConnectionMode                                 2     2      0    5246
                                              2 BANK0      2     2      0
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (6) _NVMWrite                                             9     3      6    5162
                                             29 COMRAM     7     1      6
                                              0 BANK0      2     2      0
                           _MacroNop
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (10) _SPI1_Exchange8bit                                   1     1      0      42
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   16902
                                             44 BANK0      2     1      1
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   16534
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   15070
                                             39 BANK0      5     1      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    27     12    9740
                                              4 BANK0     35    23     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     138
                                             28 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     566
                                             28 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     566
                                             35 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1068
                                             28 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           0     0      0     326
                           _I2CWrite
 ---------------------------------------------------------------------------------
 (4) _I2CWrite                                             2     1      1     326
                                             28 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            1     1      0     138
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                            14    12      2    1464
                                             28 COMRAM     6     4      2
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _high_isr                                           14    14      0    1638
                                             14 COMRAM    14    14      0
               _UserInterruptHandler
                i2_PHYGetLongRAMAddr
               i2_PHYGetShortRAMAddr
               i2_PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (16) i2_PHYSetShortRAMAddr                                3     2      1     337
                                              1 COMRAM     3     2      1
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (16) i2_PHYGetShortRAMAddr                                3     3      0     130
                                              1 COMRAM     3     3      0
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (16) i2_PHYGetLongRAMAddr                                 6     4      2     231
                                              1 COMRAM     6     4      2
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (17) i2_SPI1_Exchange8bit                                 1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _UserInterruptHandler                                0     0      0     420
                            _I2CTask
                         i2_DELAY_ms
 ---------------------------------------------------------------------------------
 (17) _I2CTask                                             0     0      0     210
                         i2_DELAY_ms
 ---------------------------------------------------------------------------------
 (17) i2_DELAY_ms                                         14    12      2     210
                                              0 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DemoOutput_Greeting
     _DELAY_ms
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
       _LCD_Update
         _I2CWrite
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _Initialize_Demo
     _DemoOutput_Channel
       _DELAY_ms
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
         _LCD_Update
           _I2CWrite
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DemoOutput_ChannelError
     _MiApp_ConnectionMode
       _NVMWrite
         _MacroNop
         _SPI1_Exchange8bit
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _Total_Connections
             _isSameAddress
           _Find_InActiveDevices
             _MiApp_RemoveConnection
               _NVMWrite
                 _MacroNop
                 _SPI1_Exchange8bit
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                 _LCD_Update
                   _I2CWrite
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
           _MiApp_BroadcastConnectionTable
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             ___awdiv
             ___awmod
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiMAC_DiscardPacket
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _NVMWrite
             _MacroNop
             _SPI1_Exchange8bit
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
           _isSameAddress
           _send_link_status
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
           _store_connection_tb
             _handle_lost_connection
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _InitMRF24J40
             _MiMAC_SetChannel
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _PHYGetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYGetShortRAMAddr
               _SPI1_Exchange8bit
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
     _MiApp_ProtocolInit
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
         _NVMWrite
           _MacroNop
           _SPI1_Exchange8bit
       _MiMAC_Init
         _InitMRF24J40
           _MiMAC_SetChannel
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _PHYGetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYGetShortRAMAddr
             _SPI1_Exchange8bit
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPI1_Exchange8bit
       _NVMInit
         _NVMalloc
       _NVMRead
         _SPI1_Exchange8bit
       _NVMWrite
         _MacroNop
         _SPI1_Exchange8bit
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _PHYSetLongRAMAddr
           _SPI1_Exchange8bit
         _PHYSetShortRAMAddr
           _SPI1_Exchange8bit
       _NVMWrite
         _MacroNop
         _SPI1_Exchange8bit
     _MiApp_StartConnection
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPI1_Exchange8bit
       _MiWi_TickGet
     _NVMWrite
       _MacroNop
       _SPI1_Exchange8bit
     _Read_MAC_Address
       _EEPROM_Read
         _SPI1_Exchange8bit
     _STAR_DEMO_OPTIONS_MESSAGE
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
         _LCD_Update
           _I2CWrite
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
   _Run_Demo
     _run_star_demo
       _ButtonPressed
         _MiWi_TickGet
       _DELAY_ms
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _LCD_Erase
           _LCD_Update
             _I2CWrite
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
         _LCD_Update
           _I2CWrite
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _LCD_Erase
       _LCD_Update
         _I2CWrite
       _MiApp_BroadcastPacket
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _MiApp_EstablishConnection
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPI1_Exchange8bit
               _Total_Connections
               _isSameAddress
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   _MacroNop
                   _SPI1_Exchange8bit
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                   _LCD_Update
                     _I2CWrite
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPI1_Exchange8bit
                           _PHYSetShortRAMAddr
                             _SPI1_Exchange8bit
                         _PHYGetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYGetShortRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
       _MiApp_UnicastStar
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPI1_Exchange8bit
               _Total_Connections
               _isSameAddress
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   _MacroNop
                   _SPI1_Exchange8bit
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                   _LCD_Update
                     _I2CWrite
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPI1_Exchange8bit
                           _PHYSetShortRAMAddr
                             _SPI1_Exchange8bit
                         _PHYGetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYGetShortRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _MiWi_TickGet
       _Process_RxMessage
         _DELAY_ms
         _DemoOutput_UpdateTxRx
           _LCDTRXCount
             _LCD_Erase
             _LCD_Update
               _I2CWrite
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPI1_Exchange8bit
               _Total_Connections
               _isSameAddress
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _NVMWrite
                   _MacroNop
                   _SPI1_Exchange8bit
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                   _LCD_Update
                     _I2CWrite
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPI1_Exchange8bit
                           _PHYSetShortRAMAddr
                             _SPI1_Exchange8bit
                         _PHYGetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYGetShortRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _store_connection_tb
               _handle_lost_connection
         _STAR_DEMO_OPTIONS_MESSAGE
           _LCDDisplay
             _DELAY_ms
             _LCD_Erase
             _LCD_Update
               _I2CWrite
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
         _Source_END_DEVICE_INFO
           _DELAY_ms
           _LCD_Erase
           _LCD_Update
             _I2CWrite
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _STAR_DEMO_OPTIONS_MESSAGE
         _LCDDisplay
           _DELAY_ms
           _LCD_Erase
           _LCD_Update
             _I2CWrite
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       ___lbmod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
       _I2CWrite
   _TMR1_Initialize
     _TMR1_StartTimer
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
       _LCD_Update
         _I2CWrite
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit

 _high_isr (ROOT)
   _UserInterruptHandler
     _I2CTask
       i2_DELAY_ms
     i2_DELAY_ms
   i2_PHYGetLongRAMAddr
     i2_SPI1_Exchange8bit
   i2_PHYGetShortRAMAddr
     i2_SPI1_Exchange8bit
   i2_PHYSetShortRAMAddr
     i2_SPI1_Exchange8bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0     118      35        7.4%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      50      12       31.3%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      B2      10       69.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100     1D      86       8       52.3%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      42       1       70.2%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26A       6        0.0%
DATA                 0      0     382       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Sun Jun 19 15:25:31 2016

                            _SPI1_Exchange8bit 3BFC                         _PUSH_BUTTON_press_time 0100  
                                            _i 0037                                 _LCD_Initialize 366C  
                     ??_Source_END_DEVICE_INFO 0025                            P2PTasks@final_index 00BC  
                            _Process_RxMessage 3594                      __end_of_MiApp_UnicastStar 2E4E  
                         ?_MiMAC_DiscardPacket 0001                                 ?_isSameAddress 001D  
                           ?_SPI1_Exchange8bit 0001                                             l71 2240  
                                           l65 21F8                                             l77 2254  
                                           l99 10FC                                   ___awdiv@sign 0022  
                                           _t1 0108                                             _t2 010C  
                                  ?_LCD_Update 0001                            ___wmul@multiplicand 001F  
                          MiApp_ProtocolInit@i 007F                          Find_InActiveDevices@i 00A7  
                           ?_Process_RxMessage 0001                      i2PHYSetShortRAMAddr@value 0002  
                      MiApp_RemoveConnection@i 00A5                        MiApp_RemoveConnection@j 00A0  
                                 NVMRead@count 0022                                     _MiMAC_Init 382A  
                              _P2PCapacityInfo 00E1                                            l111 13CC  
                                          l103 11BA                                            l106 1278  
                                          l108 1306                                            l160 1CE2  
                                          l137 1AB8                                            l154 1C40  
                                          l159 1CBA                                            l178 3742  
                                          l525 0924                                            l454 0914  
                                          l368 3588                                            l617 25BE  
                                          l529 202E                                            l706 2932  
                                          l707 2924                                            l483 05BC  
                                          l557 1E10                                            l496 0736  
                                          l667 240C                                            l837 3C04  
                                          l687 3870                                            l881 3502  
                                          l786 3BC2                                            l884 351E  
                                  P2PTasks@tmp 00B6                    __size_of_PHYSetShortRAMAddr 0028  
                              _timer1ReloadVal 00DC                            ??_SPI1_Exchange8bit 001D  
                              __end_of_I2CTask 30F4                    __end_of_MiMAC_SetAltAddress 3364  
                                 ___awmod@sign 0022                                ??_AddConnection 0062  
                                  LCDDisplay@i 008B                                            prod 000FF3  
                                          wreg 000FE8                            ??_Process_RxMessage 0025  
                                NVMInit@result 0022                                    ?i2_DELAY_ms 0001  
            __end_of_MiApp_EstablishConnection 2652                 __size_of_MiApp_StartConnection 0052  
                __end_of_MiApp_StartConnection 33B6                              _Total_Connections 3546  
                         i2_PHYSetShortRAMAddr 3A0C                                           l1116 2AE8  
                                         l1222 173E                                           l1039 2CBC  
                                         l1215 1628                                           l1226 1860  
                                         l1340 0D66                                           l1260 0948  
                                         l1229 196C                                           l1342 0D8C  
                                         l1334 0CF4                                           l1343 0D90  
                                         l1361 0E74                                           l1345 0DB0  
                                         l1291 0A9E                                           l1276 0A92  
                                         l1357 0F0E                                           l1277 0A5A  
                                         l1294 0AD8                                           l1295 0ADC  
                                         l1800 3820                                           l1790 361E  
         __size_of_Forward_Packet_PANCr_to_EDy 0098                                           STR_1 FFD6  
                                         STR_2 FFC5                                           STR_3 FEA2  
                                         STR_4 FE43                                           STR_5 FE83  
                                         STR_6 FEDD                                           STR_7 FFE7  
                                         STR_8 FEC0                                           STR_9 FE63  
                                         _LATA 000F89                                           _LATB 000F8A  
                                         _LATD 000F8C                                           _LATE 000F8D  
                       __size_of_ButtonPressed 0094                      DemoOutput_Channel@channel 008D  
                                         _TMR1 000FCE                                           _MiWi FDA7  
                           ?_Total_Connections 0001                      MiApp_StartConnection@Mode 006A  
                       MiApp_UnicastStar@SecEn 016D                     MiMAC_SetChannel@offsetFreq 0024  
                                         _main 3AA6                                __end_of_NVMInit 2EDC  
                              __end_of_NVMRead 34F8                                           _role 0041  
                                         fsr1h 000FE2                                           fsr2h 000FDA  
                                         indf1 000FE7                                           fsr1l 000FE1  
                                         indf2 000FDF                                           fsr2l 000FD9  
                                         btemp 0043                             __size_of_LCD_Erase 001C  
       __end_of_MiApp_BroadcastConnectionTable 1FB4        __size_of_MiApp_BroadcastConnectionTable 0216  
               _MiApp_BroadcastConnectionTable 1D9E                                 ??_InitMRF24J40 0061  
                             __end_of_I2CWrite 3BD6                                           prodh 000FF4  
                                         prodl 000FF3                                           start 018C  
                       __size_of_run_star_demo 04EE                      __end_of_SPI1_Exchange8bit 3C0C  
                             __end_of_DELAY_ms 2944                          MiApp_ProtocolInit@tmp 0079  
                                 _sprintf$3545 0079                                   _sprintf$3538 0075  
                                 _sprintf$3539 0077                            ??_Total_Connections 001D  
                       __end_of_LCD_Initialize 36AE                      __end_of_Process_RxMessage 35DE  
                                 ___param_bank 000010                              _PHYGetLongRAMAddr 33B6  
                        ??_MiMAC_DiscardPacket 001D                                 NVMRead@oldRFIE 0024  
                           ?_PHYGetLongRAMAddr 001E                               __end_of_P2PTasks 092A  
                 __end_of_MiApp_DiscardMessage 3C3E                               _send_link_status 3770  
                                __CFG_PLLDIV$2 000000                                     _Find_Index 2D2C  
                                        l12001 3586                                          l11131 21C8  
                                        l11141 221C                                          l11133 21D4  
                                        l12021 31AA                                          l11207 352A  
                                        l11311 1B4C                                          l12015 3178  
                                        l12023 31AC                                          l11153 226C  
                                        l12113 2750                                          l13001 08D0  
                                        l11139 2210                                          l11403 1CE6  
                                        l11251 1A92                                          l12211 1070  
                                        l13003 0916                                          l12053 39AE  
                                        l11165 22A8                                          l11421 1D22  
                                        l11317 1B62                                          l11261 1AB2  
                                        l12141 3126                                          l11511 3804  
                                        l12047 398E                                          l11183 235C  
                                        l11335 1B98                                          l11327 1B80  
                                        l11319 1B68                                          l11247 1A88  
                                        l11239 1A78                                          l12143 312E  
                                        l12135 3116                                          l12311 140C  
                                        l12223 108E                                          l11425 1D40  
                                        l11417 1D1C                                          l11409 1D06  
                                        l11281 1AD4                                          l12161 3162  
                                        l12153 314C                                          l12145 3132  
                                        l12129 3106                                          l12209 106C  
                                        l13025 3948                                          l11515 3816  
                                        l11507 37F8                                          l11355 1C02  
                                        l11339 1BA8                                          l11291 1AEA  
                                        l12403 2DBE                                          l12323 146C  
                                        l12251 115E                                          l12227 1096  
                                        l12219 1074                                          l11509 3800  
                                        l11437 1D50                                          l12085 26AC  
                                        l12069 265C                                          l12157 3156  
                                        l12181 3278                                          l12173 3260  
                                        l12317 1442                                          l12237 10D2  
                                        l12413 279C                                          l13221 25FC  
                                        l13133 3900                                          l11471 3B52  
                                        l11623 0A1E                                          l11607 099C  
                                        l11615 09F6                                          l11383 1C90  
                                        l11367 1C42                                          l11375 1C68  
                                        l12183 3280                                          l12327 1482  
                                        l12335 1488                                          l13231 2638  
                                        l13311 35D0                                          l11801 0DAA  
                                        l11705 0BDC                                          l11641 0A98  
                                        l12089 26B8                                          l12097 2700  
                                        l12185 3284                                          l12193 32A0  
                                        l12177 326C                                          l12513 1E0C  
                                        l12505 1DB8                                          l12361 1502  
                                        l12345 14C2                                          l12265 121C  
                                        l12337 14AC                                          l12417 27C2  
                                        l13049 3AD6                                          l11491 35FA  
                                        l11731 0C2C                                          l11715 0BFC  
                                        l11651 0AC4                                          l11643 0A9C  
                                        l11635 0A5E                                          l12603 23F4  
                                        l11395 1CBC                                          l12451 2C5C  
                                        l12531 1E70                                          l12507 1DBE  
                                        l12347 14C8                                          l12283 12DC  
                                        l12427 2868                                          l13235 2644  
                                        l13075 3848                                          l13251 36C8  
                                        l13147 2DFC                                          l13315 35DA  
                                        l13331 3A78                                          l13323 3A62  
                                        l11717 0C00                                          l11709 0BEE  
                                        l11661 0AF2                                          l11645 0AA2  
                                        l12381 2D30                                          l12197 32AC  
                                        l12189 3296                                          l12349 14D2  
                                        l13093 34CA                                          l13157 2E44  
                                        l11487 35EE                                          l11807 0DC0  
                                        l11823 0E12                                          l11831 0E32  
                                        l11743 0C54                                          l11663 0B02  
                                        l11639 0A7E                                          l11591 0956  
                                        l11583 0930                                          l12615 2402  
                                        l12607 23FC                                          l12543 1EEE  
                                        l12359 14D8                                          l13431 33A8  
                                        l13159 2E4A                                          l11569 3B5C  
                                        l11489 35F6                                          l11841 0E58  
                                        l11817 0DFE                                          l11745 0C58  
                                        l11729 0C28                                          l11761 0C92  
                                        l11673 0B2E                                          l11657 0AE2  
                                        l11593 095A                                          l11905 102E  
                                        l13513 37CC                                          l12625 2412  
                                        l12617 2406                                          l12393 2DAE  
                                        l12465 2C94                                          l12561 1F34  
                                        l12297 136C                                          l12801 04AC  
                                        l12713 038E                                          l13185 2558  
                                        l13177 252A                                          l13417 3368  
                                        l13257 36DE                                          l13281 2CE0  
                                        l13521 159A                                          l11499 3614  
                                        l11851 0E84                                          l11835 0E3C  
                                        l11907 1046                                          l11683 0B5E  
                                        l11691 0B72                                          l11595 095E  
                                        l13515 37E0                                          l12483 32F4  
                                        l12475 32B8                                          l12395 2DB0  
                                        l12571 1F7C                                          l12563 1F38  
                                        l12731 03C8                                          l13099 34E4  
                                        l13363 2032                                          l13531 15B8  
                                        l11781 0CF8                                          l11765 0CA6  
                                        l11677 0B3E                                          l11669 0B1A  
                                        l11693 0BAE                                          l11589 0952  
                                        l11917 2B72                                          l12485 3302  
                                        l12549 1F04                                          l12565 1F3A  
                                        l12813 04CE                                          l12733 03CE  
                                        l12725 03B0                                          l13349 1FC2  
                                        l13461 303E                                          l13613 18EA  
                                        l11855 0EB4                                          l11775 0CCE  
                                        l11759 0C80                                          l11687 0B6C  
                                        l11679 0B50                                          l11599 0964  
                                        l12639 2494                                          l12591 23AE  
                                        l12567 1F74                                          l12583 1FAA  
                                        l12911 0720                                          l12751 040C  
                                        l13375 2060                                          l13447 2FEE  
                                        l13535 15C2                                          l11881 0F88  
                                        l11873 0F10                                          l11857 0EBA  
                                        l11793 0D6A                                          l11769 0CB8  
                                        l11945 2BB8                                          l12841 0570  
                                        l12825 052C                                          l12745 03F2  
                                        l12673 020C                                          l13377 20F6  
                                        l13289 2D2A                                          l13625 194C  
                                        l13617 18F2                                          l13561 16C2  
                                        l11875 0F4E                                          l11891 0FF0  
                                        l11867 0EFA                                          l11787 0D2A  
                                        l12579 1F92                                          l12923 0750  
                                        l12755 0414                                          l12763 0446  
                                        l13387 2162                                          l13643 19BE  
                                        l13555 1636                                          l13547 1612  
                                        l13539 15CA                                          l13651 19D4  
                                        l11885 0FAC                                          l12941 07CE  
                                        l12853 0592                                          l12829 0534  
                                        l13645 19C0                                          l13637 198A  
                                        l11895 0FFE                                          l11959 2BEC  
                                        l12599 23EC                                          l12935 07CA  
                                        l12927 0758                                          l12919 073C  
                                        l12863 05D2                                          l12759 0442  
                                        l12687 02AC                                          l12679 025A  
                                        l13831 2B30                                          l13591 1852  
                                        l13583 180A                                          l13567 17DA  
                                        l13647 19C4                                          l11889 0FDE  
                                        l12777 0458                                          l12697 031C  
                                        l13593 185A                                          l13649 19CC  
                                        l11899 1012                                          l11979 3656  
                                        l11995 354A                                          l12891 0680  
                                        l12883 0662                                          l12867 05DA  
                                        l12795 0498                                          l13835 2B46  
                                        l13819 2B02                                          l13659 19E6  
                                        l13579 1802                                          l12949 07DA  
                                        l12893 06A4                                          l13677 1A64  
                                        l12991 08CC                                          l12983 085A  
                                        l12975 084A                                          l12967 0836  
                                        l12959 0802                                          l12879 065E  
                                        l13855 3AC0                                          l12979 0852  
                                        l12899 06DA                                          l13787 3A46  
                                        l13797 3A52                                          ?_main 0001  
                              __end_of___awdiv 316C                                          STR_10 FFB4  
                                        STR_11 FF45                                          STR_20 FF92  
                                        STR_12 FEFA                  MiApp_EstablishConnection@Mode 00C5  
                                        STR_13 FF16                                          STR_14 FF2F  
                                        STR_15 FF2F                                          STR_16 FFA3  
                                        STR_17 FF5B                                          STR_18 FF6F  
                                        STR_19 FF81                                __end_of___awmod 32B6  
                              __end_of___lbmod 3A80                                _TMR1_StartTimer 3C3E  
                                        u11125 34A6                                          u11126 34A8  
                                        u11135 3A08                                          u11136 3A0A  
                                        u11145 3986                                          u11146 3988  
                                        u11155 3402                                          u11156 3404  
                              ___awdiv@divisor 001F                                          u11350 1AA6  
                                        u11600 1D8C                                          _T1CON 000FCD  
                                        u11700 2A22                                          u13300 0246  
                                        u12190 0D5C                                          u13310 0294  
                                        u11720 2A3A                                          u11801 2AAA  
                                        u13340 02FE                                          u14045 36EC  
                                        u12390 1012                                          u11718 2A26  
                                        u14046 36EE                                          u12455 2BFC  
                                        u13415 037E                                          u12456 2BFE  
                                        u13408 0368                                          u11745 2A54  
                                        u13417 0382                                          u11746 2A58  
                                        u11738 2A3E                                          u12810 1064  
                                        u13370 033C                                          u14090 2D28  
                                        u14410 1A26                                          u11755 2A60  
                                        u11780 2A7A                                          u11756 2A64  
                                        u13470 03DC                                          u13390 0364  
                                        u13480 03E8                                          u13385 0352  
                                        u13378 0340                                          u13387 0356  
                                        u14195 217E                                          u14196 2182  
                                        u11798 2A7E                                          u13930 2E3E  
                                        u13915 34F4                                          u13916 34F6  
                                        u13970 2598                                __end_of___lwdiv 3628  
                              __end_of___lwmod 382A                                          i2l220 0142  
                                        i2l207 004C                                          i2l706 2A00  
                                        i2l707 29F2                                          i2l781 30DA  
                                        i2l837 3C14                                          i2l774 307E  
                              ___awdiv@counter 0021                            ??_PHYGetLongRAMAddr 0020  
                                        _TMR1H 000FCF                                          _TMR0L 000FD6  
                                        _TMR1L 000FCE                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                        _TRISD 000F95                                          _TRISE 000F96  
                             SendPacket@tParam 0099                                  P2PTasks@tick2 00B8  
                                P2PTasks@tick3 00BD                                     _CommandLen 0030  
                                   _CommandPtr 0031                         ?_DemoOutput_UpdateTxRx 0089  
                   __end_of_PHYGetShortRAMAddr 398C                      __end_of_Total_Connections 3594  
                                        _RxNum 00E4                         run_star_demo@select_ed 0184  
                                        _TxNum 00E6                            __size_of_LCDDisplay 0044  
                __size_of_MiApp_ConnectionMode 003A                                __end_of_dpowers FE3B  
                        ?i2_PHYSetShortRAMAddr 0002                               SendPacket@status 0097  
                   store_connection_tb@payload 0060                  __size_of_MiApp_UnicastAddress 001C  
                                  _SW_Ack_SrED 3902                                __end_of_isdigit 3B5A  
                                        _tick1 0110                                          _tick4 0114  
                             __end_of_NVMWrite 2C00                        __end_of_TMR1_Initialize 3B90  
                             __end_of_NVMalloc 3960                                          tablat 000FF5  
                                InitMRF24J40@i 0074                                  InitMRF24J40@j 0072  
                               ButtonPressed@t 0069                    __end_ofi2_SPI1_Exchange8bit 3C1C  
                                        plusw0 000FEB                                          plusw2 000FDB  
                          __size_of_LCD_Update 0016                        ?_MiApp_RemoveConnection 0001  
                                        status 000FD8                                __end_of_sprintf 1052  
                       run_star_demo@update_ed 0181                      __end_of_PHYGetLongRAMAddr 3408  
                    __size_of_MiMAC_SetChannel 0040                           __size_of_EEPROM_Read 0042  
                    __size_of_Read_MAC_Address 0086                    __end_of_DemoOutput_Greeting 3B06  
                              ?_LCD_Initialize 0001                                   __end_of_MiWi FE25  
                              __initialization 2EDC                                ??_isSameAddress 0021  
                    __size_of_MiMAC_SendPacket 0330           STAR_DEMO_OPTIONS_MESSAGE@NetworkRole 008C  
                             __end_of_MacroNop 3C4A                                   __end_of_main 3AC6  
                          __size_ofi2_DELAY_ms 00CE                        handle_lost_connection@i 0023  
                   __size_of_MiApp_UnicastStar 008E                                  high_isr@flags 0019  
              __size_of_Source_END_DEVICE_INFO 0070                                  _ButtonPressed 2C98  
                            _MACCurrentChannel 00DF                      PHYGetShortRAMAddr@address 001E  
                                    ??_I2CTask 000F         MiApp_UnicastConnection@ConnectionIndex 00A5  
                                       ??_main 0025                                    ?_MiMAC_Init 0075  
                      _DemoOutput_ChannelError 3C4C                                  __activetblptr 000002  
                                 NVMWrite@addr 0020                              __end_of_LCD_Erase 3B76  
                                _run_star_demo 1580                           __end_of_MiWi_TickGet 3546  
                      MiApp_SetChannel@channel 0062                           store_connection_tb@i 0065  
                         store_connection_tb@j 0064                   __size_of_store_connection_tb 00DC  
                    PHYGetShortRAMAddr@tmpRFIE 0020                               __end_of_Run_Demo 3C46  
            MiApp_ProtocolInit@bNetworkFreezer 007B                           _MiMAC_ReceivedPacket 1052  
                    PHYSetShortRAMAddr@address 001F                                     _SendPacket 2A12  
                                    ??_NVMInit 0022                                      ??_NVMRead 0024  
                                       _EECON2 000FA7                                         _ANCON0 000F48  
                                       _ANCON1 000F49                               ___awdiv@dividend 001D  
                     ?_MiApp_UnicastConnection 00A4                                 P2PTasks@p_1345 00C2  
                                       _T1GCON 000F9A                 __end_of_MiApp_RemoveConnection 2798  
                               __CFG_WDTEN$OFF 000000                                         _INTCON 000FF2  
                  __end_ofi2_PHYGetLongRAMAddr 345A                                         _OSCCON 000FD3  
                                       _RPINR1 000EE7                                         _RPOR17 000ED7  
                    PHYSetShortRAMAddr@tmpRFIE 0020                    i2PHYGetLongRAMAddr@toReturn 0006  
              MiApp_StartConnection@ChannelMap 0066                          SPI1_Exchange8bit@data 001D  
                         __size_of_LCDTRXCount 0040                  __size_of_UserInterruptHandler 0014  
                      ?_DemoOutput_UnicastFail 0001                     __size_of_SPI1_Exchange8bit 0010  
                                 i2DELAY_ms@ms 0001                                 P2PTasks@status 00C3  
                               __CFG_XINST$OFF 000000                                         _TxData 00E5  
                   __size_of_Process_RxMessage 004A                               __end_of_high_isr 018C  
                      __end_of_TMR1_StartTimer 3C42                                         ___wmul 3A80  
                      ??_MiApp_BroadcastPacket 0025                                      ??___awdiv 0021  
                               ?_ButtonPressed 0001                                      ??___awmod 0021  
                                    ??___lbmod 001E                       __size_of_freezer_feature 0026  
                    __size_of_MiApp_SetChannel 0030                                      ??___lwdiv 0021  
                                    ??___lwmod 0024                                    ?_Find_Index 001D  
                                       clear_0 2EE4                                         clear_1 2EF6  
                                       clear_2 2F02                                         clear_3 2F0E  
                                       clear_4 2F1A                                         clear_5 2F26  
                             ___awdiv@quotient 0023                                         _nvmEdc 00F2  
                              ___awmod@divisor 001F                                ___awmod@counter 0021  
                                 NVMalloc@size 001D                                 ?_run_star_demo 0001  
                         __end_of_InitMRF24J40 23A6                                   __pdataCOMRAM 0042  
                                    ??_isdigit 001D                                 LCDDisplay@text 0087  
                                    ?_I2CWrite 001D                                   __mediumconst FDA6  
                        ?_MiMAC_ReceivedPacket 0001                    __size_of_DemoOutput_Channel 003E  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                   __size_of_Total_Connections 004E                                         tblptru 000FF8  
                       ??i2_PHYSetShortRAMAddr 0003                    ??_MiApp_EstablishConnection 0169  
                     MiApp_StartConnection@tmp 006B                                      ?_DELAY_ms 001D  
                                   _TxSynCount 00E7                                      ??_sprintf 0070  
                       _Source_END_DEVICE_INFO 31DE                               ?_TMR1_Initialize 0001  
                            _SYSTEM_Initialize 2F64                                      ?_P2PTasks 0001  
                              ___lbmod@divisor 001D                           _MiApp_DiscardMessage 3C36  
                          _PUSH_BUTTON_pressed 00E3                                     __accesstop 0060  
                      __end_of__initialization 2F56                                ___lbmod@counter 001F  
                __size_of_Find_InActiveDevices 0058                 __end_of_DemoOutput_UnicastFail 3BFC  
                                    P2PTasks@i 00C4                                      P2PTasks@p 00C1  
                           ?_SYSTEM_Initialize 0001                   i2PHYGetShortRAMAddr@toReturn 0003  
                          __size_of_MiMAC_Init 003A                                  ___rparam_used 000001  
                               _chk_sel_status 00E8                               _LatestConnection 00DE  
                   __size_of_PHYGetLongRAMAddr 0052  MiApp_BroadcastConnectionTable@broadcast_count 00A8  
                                 ??_LCDDisplay 0025                                NVMWrite@oldRFIE 0060  
                   _myConnectionIndex_in_PanCo 00FD                                 __pcstackCOMRAM 0001  
                MiMAC_ReceivedPacket@bIntraPAN 0024          Forward_Packet_PANCr_to_EDy@fw_payload 00A6  
                               high_isr@RxBank 001B                                   __pidataBANK0 3C4A  
                          ??_SYSTEM_Initialize 0023                       __size_of_Initialize_Demo 009A  
                    ??_DemoOutput_ChannelError 001D                                   ??_LCD_Update 001F  
                   i2PHYGetLongRAMAddr@address 0002                                      ?_NVMWrite 001E  
                      run_star_demo@switch_val 0183                   ?_Forward_Packet_PANCr_to_EDy 00A6  
                                    ?_NVMalloc 001D                     SendPacket@DestinationPANID 0090  
                              _ConnectionTable 0350                                __CFG_OSC$INTOSC 000000  
              __end_of_MiApp_UnicastConnection 38D2                                     ??_I2CWrite 001E  
                   i2PHYGetLongRAMAddr@tmpRFIE 0007                          InitMRF24J40@_dcnt_635 0066  
                                 ??i2_DELAY_ms 0003                                     ??_DELAY_ms 0060  
                    _END_DEVICES_Short_Address 0300                                    ?_SendPacket 0090  
                           __end_of_LCDDisplay 366C                      __end_of_SYSTEM_Initialize 2FEA  
                                 sprintf@width 0082                          isSameAddress@Address1 001D  
                        isSameAddress@Address2 001F                                      ?_MacroNop 0001  
                                   __pbssBANK0 00C7                                     __pbssBANK1 0100  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                        ?_MiApp_DiscardMessage 0001                       __end_of_send_link_status 37AE  
                                   ??_P2PTasks 00AD                    __size_of_MiApp_ProtocolInit 0206  
                                NVMWrite@count 0022                            __size_of_Find_Index 0094  
                           __end_of_LCD_Update 3BC0                      SendPacket@SecurityEnabled 0095  
                               isSameAddress@i 0023                     MiApp_BroadcastPacket@SecEn 00A0  
                __size_ofi2_PHYGetShortRAMAddr 002C                                P2PTasks@FW_Stat 00B5  
                          InitMRF24J40@_ms_636 006E                               _MiMAC_SetChannel 3730  
                           MiMAC_SendPacket@t1 0083                             MiMAC_SendPacket@t2 0087  
                    _MiApp_EstablishConnection 2504                       MiMAC_SetAltAddress@PANID 0021  
                             _Read_MAC_Address 2FEA                     PHYGetShortRAMAddr@toReturn 001F  
                              ??_ButtonPressed 0022                             I2CWrite@Commandlen 001E  
                             _MiMAC_SendPacket 1A6E                                      ?_Run_Demo 0001  
                                      ?___wmul 001D                               ?_TMR1_StartTimer 0001  
                           __end_ofi2_DELAY_ms 2A12                          __size_of_MiWi_TickGet 004E  
                                      _I2CTask 3070                                ??_run_star_demo 0179  
                   __end_of_PHYSetShortRAMAddr 3A0C                                     ??_NVMWrite 0024  
             run_star_demo@sw_layer_ack_status 0180                                     ??_NVMalloc 0020  
                      ??_DemoOutput_UpdateTxRx 0025                              ??_freezer_feature 0025  
                                      i2l10503 30B2                  ??_Forward_Packet_PANCr_to_EDy 0025  
                       ??_MiMAC_ReceivedPacket 001D                                        i2l10499 30A4  
                                      i2l10951 0076                                        i2l10943 0054  
                                      i2l10963 00C2                                        i2l10971 0138  
                                      i2l10947 006E                                        i2l10973 014C  
                                      i2l10991 0174                                        i2l10967 00F6  
                                      i2l10975 0156                                        i2l10979 0164  
                                      _LCDText 0140                          __end_of_AddConnection 2504  
                                      _RPINR16 000EF6                                 _failureCounter 00D8  
                                      _SSP2ADD 000F74                                        _SSP1BUF 000FC9  
                                      _SSP2BUF 000F75                                   ?_SW_Ack_SrED 00A0  
                                      _NVMInit 2E4E                                        _NVMRead 34AA  
                                    ?_high_isr 0001                                     ??_MacroNop 001D  
                 __size_of_MiMAC_SetAltAddress 0056             __size_of_STAR_DEMO_OPTIONS_MESSAGE 0020  
                        _MiApp_StartConnection 3364                        i2SPI1_Exchange8bit@data 0001  
                             ??_LCD_Initialize 0023                     ?_STAR_DEMO_OPTIONS_MESSAGE 0001  
                  AddConnection@connectionSlot 0067                                _timerExtension1 0038  
                              _timerExtension2 0039                       MiApp_ConnectionMode@Mode 0063  
                             _AdditionalNodeID 00FE                    __end_of_MiMAC_DiscardPacket 3BAA  
                              P2PTasks@tmpTick 00B1                             _PHYGetShortRAMAddr 3960  
                                   DELAY_ms@ms 001D                                   _MiWi_TickGet 34F8  
                                      __Hparam 0000                            _store_connection_tb 2798  
                                      __Lparam 0000                   __end_of_MiApp_ConnectionMode 389E  
                                      _TextLen 0034                   __end_of_MiApp_UnicastAddress 3B3E  
                                      _TextPtr 0035                                     ??_Run_Demo 0025  
                                      ___awdiv 30F4                                        ___awmod 324E  
                                      ___lbmod 3A5A                            ?_PHYGetShortRAMAddr 0001  
                              __size_of___wmul 0026                               _MiApp_SetChannel 38D2  
                          __size_of_SendPacket 00BA                                        ___lwdiv 35DE  
                                      ___lwmod 37EC                       ??_handle_lost_connection 001D  
                        __size_of_InitMRF24J40 01EC                                        __pcinit 2EDC  
               DemoOutput_ChannelError@channel 0001                                        __ramtop 0F00  
                                      __ptext0 3AA6                                        __ptext1 3A34  
                                 ??_MiMAC_Init 0025                                        __ptext2 3B76  
                                      __ptext3 3C3E                                        __ptext4 2F64  
                                      __ptext5 366C                                        __ptext6 3C42  
                                      __ptext7 1580                                        __ptext8 3A5A  
                                      __ptext9 3594                                        _myPANID 00EC  
                            __end_of_hexpowers FE43                                      _T1CONbits 000FCD  
                                      _dpowers FE31                  Initialize_Demo@freezer_enable 00C6  
                     ??_MiApp_MessageAvailable 0025                                        _rec_ack 00EB  
                                      _isdigit 3B3E                              ??_Initialize_Demo 0025  
                                _myLongAddress 0161                                      _MAC_PANID 003A  
                             ___awmod@dividend 001D                           ?_store_connection_tb 0060  
                       DemoOutput_Channel@Step 008C                                        _nvmRole 00F8  
                                    _P2PStatus 00E2                                      _LCD_Erase 3B5A  
                                  _MyindexinPC 00E0                           ??_PHYGetShortRAMAddr 001E  
                   __size_of_SYSTEM_Initialize 0086                                        _sprintf 092A  
                       ??_MiApp_DiscardMessage 001D                                     ??_high_isr 000F  
                         end_of_initialization 2F56                   MiApp_RemoveConnection@j_1504 00A2  
                            __end_of_octpowers FE31                                  ??_EEPROM_Read 0022  
                MiMAC_SendPacket@MACPayloadLen 007E                                  __Lmediumconst FDA6  
                              LCDDisplay@delay 008A                                     _nvmMyPANID 00F4  
            __end_of_STAR_DEMO_OPTIONS_MESSAGE 3AE6                                      i2u1092_45 3A30  
                                    i2u1092_46 3A32                                      i2u1093_45 39DE  
                                    i2u1093_46 39E0                                      i2u1094_45 3454  
                                    i2u1094_46 3456                                InitMRF24J40@_ms 006A  
                              LCDDisplay@value 0089                                   _InitMRF24J40 21BA  
                           __end_of_MiMAC_Init 3864                   __size_ofi2_SPI1_Exchange8bit 0010  
                 MiApp_UnicastConnection@SecEn 00A4               __size_of_MiApp_UnicastConnection 0034  
                      MiMAC_SetChannel@channel 0060                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                        __end_of_isSameAddress 39B8           DELAY_ms@cyclesRequiredForEntireDelay 001F  
       i2DELAY_ms@cyclesRequiredForEntireDelay 000B                 __size_of_MiApp_BroadcastPacket 001C  
                                 ??_Find_Index 001F                     run_star_demo@PressedButton 0182  
                __end_of_MiApp_BroadcastPacket 3B22                   __size_of_DemoOutput_Greeting 0020  
                                    _PORTBbits 000F81                               NVMalloc@location 001F  
                 __end_of_UserInterruptHandler 3BEA                          ??_store_connection_tb 0062  
                                   _nvmmyIndex 00FA                        ?_Source_END_DEVICE_INFO 0087  
                             ___lbmod@dividend 001E                                      _TRISAbits 000F92  
                                    _TRISBbits 000F93                                      _TRISCbits 000F94  
                                    _TRISDbits 000F95                                     ?_LCD_Erase 0001  
                            __size_of_I2CWrite 0016                                    NVMRead@addr 0020  
                                  NVMRead@dest 001E                                      _BankIndex 0042  
                       ?_MiApp_StartConnection 0065                              __size_of_DELAY_ms 00D0  
                                ??_LCDTRXCount 0025                                    ___lbmod@rem 0020  
                   MiMAC_SendPacket@transParam 0075                     MiMAC_SetAltAddress@Address 0022  
                    MiApp_UnicastAddress@SecEn 00A3                             __end_of_Find_Index 2DC0  
                            __size_of_P2PTasks 079A                                     LCD_Erase@i 001D  
                 __size_ofi2_PHYGetLongRAMAddr 0052                            __end_of_EEPROM_Read 36F0  
                freezer_feature@PressedButton1 008C                                 __end_of___wmul 3AA6  
              __size_of_handle_lost_connection 0072                       PHYGetLongRAMAddr@address 001E  
                 __end_of_Find_InActiveDevices 330E                                  __pidataCOMRAM 3C4E  
           __size_of_MiApp_EstablishConnection 014E                     __end_of_DemoOutput_Channel 37EC  
               __end_of_Source_END_DEVICE_INFO 324E                      Read_MAC_Address@myAddress 0023  
                     PHYSetLongRAMAddr@address 001E                              __size_of_NVMWrite 009A  
              __size_of_MiApp_MessageAvailable 000C                       __end_of_MiMAC_SetChannel 3770  
                            __size_of_NVMalloc 002E                            start_initialization 2EDC  
                     __end_of_Read_MAC_Address 3070                       PHYGetLongRAMAddr@tmpRFIE 0023  
                     __end_of_MiMAC_SendPacket 1D9E                                   ??_SendPacket 0096  
                         _MiApp_ConnectionMode 3864                   MiMAC_SendPacket@headerLength 008D  
                         _MiApp_UnicastAddress 3B22                  __size_ofi2_PHYSetShortRAMAddr 0028  
                     PHYSetLongRAMAddr@tmpRFIE 0023                           __size_of_SW_Ack_SrED 0030  
                              high_isr@results 0018                              ?_send_link_status 0001  
            Forward_Packet_PANCr_to_EDy@status 00AB                              __size_of_MacroNop 0004  
                           ??_send_link_status 0025                                 _currentChannel 00FC  
                          __end_of_LCDTRXCount 3730    MiApp_EstablishConnection@connectionInterval 016F  
                     __size_of_TMR1_Initialize 001A                                _freezer_feature 3A34  
                                     ??___wmul 0021              MiApp_UnicastAddress@PermanentAddr 00A2  
                  i2PHYGetShortRAMAddr@address 0002                                    __pdataBANK0 00FE  
                           __end_of_SendPacket 2ACC                            _MiMAC_SetAltAddress 330E  
                                     ?_I2CTask 0001                              __size_of_Run_Demo 0004  
                 __end_ofi2_PHYGetShortRAMAddr 39E4                 __size_of_DemoOutput_UpdateTxRx 000E  
                                  __pbssBIGRAM 0350                        MiWi_TickGet@currentTime 0061  
                __end_of_DemoOutput_UpdateTxRx 3C2A                    i2PHYGetShortRAMAddr@tmpRFIE 0004  
                                  __pbssCOMRAM 0025                       ??_MiApp_RemoveConnection 0025  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0169  
                  i2PHYSetShortRAMAddr@address 0003                          ?_MiApp_ConnectionMode 0001  
                          SendPacket@Broadcast 0098                                    ??_LCD_Erase 001D  
       MiApp_UnicastAddress@DestinationAddress 00A0                          ?_MiApp_UnicastAddress 00A0  
                                 _isdigit$3769 001E                                       ?_NVMInit 0001  
                   __end_of_MiApp_ProtocolInit 21BA                                       ?_NVMRead 001E  
                               NVMWrite@source 001E                             _PHYSetShortRAMAddr 39E4  
                   MiApp_EstablishConnection@i 0178                       __end_of_MiApp_SetChannel 3902  
                            Read_MAC_Address@i 0062                         _handle_lost_connection 316C  
                         ?_MiMAC_SetAltAddress 0021                         PHYSetLongRAMAddr@value 0020  
                                  MiMAC_Init@i 0078                        PHYSetShortRAMAddr@value 001E  
                            __size_of_high_isr 0184                                    sprintf@flag 0085  
                  i2PHYSetShortRAMAddr@tmpRFIE 0004                   MiMAC_ReceivedPacket@addrMode 0022  
                  ??_STAR_DEMO_OPTIONS_MESSAGE 0025                                    _EEPROM_Read 36AE  
                                  sprintf@prec 0081                            ?_PHYSetShortRAMAddr 001E  
                          MiMAC_SendPacket@loc 008F                         _MiApp_MessageAvailable 3C2A  
                         _UserInterruptHandler 3BD6                              I2CWrite@BufferLen 001D  
                            MiMAC_SendPacket@i 008E                               ___lwdiv@dividend 001D  
                      _MiApp_UnicastConnection 389E                       ?_DemoOutput_ChannelError 0001  
                                    __pintcode 0008                                  __pmediumconst FDA6  
                              _Initialize_Demo 2ACC                          __end_of_ButtonPressed 2D2C  
                                     ?___awdiv 001D                                       ?___awmod 001D  
                                     ?___lbmod 001D                                       ?___lwdiv 001D  
                                     ?___lwmod 0060                                      _end_nodes 0036  
                                    _conn_size 0040                          __end_of_run_star_demo 1A6E  
                 Forward_Packet_PANCr_to_EDy@i 00AC                           ??_PHYSetShortRAMAddr 001F  
                     __size_of_TMR1_StartTimer 0004                              _PHYSetLongRAMAddr 345A  
                                     ?_isdigit 0001                                       _I2CWrite 3BC0  
                __size_of_MiMAC_ReceivedPacket 052E                             ?_PHYSetLongRAMAddr 001E  
                          i2_SPI1_Exchange8bit 3C0C                                       _DELAY_ms 2874  
                          AddConnection@status 0066                                      _hexpowers FE3B  
                     ??_DemoOutput_UnicastFail 0025                               ___lwdiv@quotient 0022  
                                     ?_sprintf 0064                            NVMWrite@PageCounter 0061  
                        ??_MiMAC_SetAltAddress 0022                                      _link_stat 0200  
                                  _LCDTRXCount 36F0                                       _P2PTasks 0190  
                          ??_PHYSetLongRAMAddr 0021                            _DemoOutput_Greeting 3AE6  
                         _Find_InActiveDevices 32B6                        __end_of_freezer_feature 3A5A  
                               ___wmul@product 0021                                       _LATAbits 000F89  
                                     _LATBbits 000F8A                                       _LATCbits 000F8B  
                                     _LATDbits 000F8C                          ?_UserInterruptHandler 0001  
                                    _octpowers FE25                                       _PIE1bits 000F9D  
                                     _PIE3bits 000FA3                      PHYGetLongRAMAddr@toReturn 0022  
                   DemoOutput_UpdateTxRx@RxNum 0089                     DemoOutput_UpdateTxRx@TxNum 008A  
                                     _PIR1bits 000F9E                                       _PIR3bits 000FA4  
                         ?i2_SPI1_Exchange8bit 0001                                      _rxMessage 00C7  
                           _nvmConnectionTable 003E                   MiMAC_SendPacket@frameControl 008C  
                                     _SSP1CON1 000FC6                                       _SSP2CON1 000F72  
                                     _SSP2CON2 000F71                         __size_of_AddConnection 015E  
          MiApp_BroadcastConnectionTable@count 00A7                                       _SSP1STAT 000FC7  
                                     _SSP2STAT 000F73                   __size_of_MiMAC_DiscardPacket 001A  
     MiApp_EstablishConnection@ActiveScanIndex 0001              MiApp_StartConnection@ScanDuration 0065  
          __end_of_Forward_Packet_PANCr_to_EDy 2C98                    _Forward_Packet_PANCr_to_EDy 2C00  
                                  _MACRxPacket 0025                           ?_DemoOutput_Greeting 0001  
                    _STAR_DEMO_OPTIONS_MESSAGE 3AC6                                       _NVMWrite 2B66  
                            ??_TMR1_Initialize 001D                               __size_of_I2CTask 0084  
                    __end_of_PHYSetLongRAMAddr 34AA                                       _NVMalloc 3932  
                            ___wmul@multiplier 001D                                      high_isr@i 001C  
              ?_MiApp_BroadcastConnectionTable 0001               ??_MiApp_BroadcastConnectionTable 00A0  
                       ??_MiApp_ConnectionMode 0062                             main@freezer_enable 0185  
                       ??_MiApp_UnicastAddress 0025                        ??_MiApp_StartConnection 0023  
              __size_of_MiApp_RemoveConnection 0146                            SendPacket@isCommand 0094  
                          i2_PHYGetLongRAMAddr 3408                                 _nextEEPosition 00DA  
                                     _ConnMode 00FF                                    _INTCON2bits 000FF1  
                                  _INTCON3bits 000FF0                 MiApp_EstablishConnection@retry 016E  
                  __size_of_PHYGetShortRAMAddr 002C          Forward_Packet_PANCr_to_EDy@EDxAddress 00A9  
                                     _MacroNop 3C46                               __size_of_NVMInit 008E  
                             __size_of_NVMRead 004E                  __size_of_MiApp_DiscardMessage 0008  
                        ?_Find_InActiveDevices 0001          MiApp_RemoveConnection@ConnectionIndex 00A4  
              __end_of_DemoOutput_ChannelError 3C4E                      ??_MiApp_UnicastConnection 0025  
                      __end_of_Initialize_Demo 2B66                           i2_PHYGetShortRAMAddr 39B8  
                          _display_connections 00E9                                       _RxBuffer 0228  
                                     __Hrparam 0000                          ??i2_SPI1_Exchange8bit 0001  
                                     _TxBuffer 0118                           ?i2_PHYGetLongRAMAddr 0002  
                                 _nvmDelayTick 0104                                       __Lrparam 0000  
                                     _Run_Demo 3C42                             Total_Connections@i 001E  
                      __size_of_LCD_Initialize 0042                MiApp_BroadcastConnectionTable@i 00AA  
              MiApp_BroadcastConnectionTable@j 00AB                MiApp_BroadcastConnectionTable@k 00A9  
                        MiMAC_ReceivedPacket@i 0023                               __size_of___awdiv 0078  
                             __size_of___awmod 0068                               __size_of___lbmod 0026  
                  __end_of_store_connection_tb 2874                          ??_DemoOutput_Greeting 0025  
                             __size_of___lwdiv 004A                               __size_of___lwmod 003E  
                        _MiApp_BroadcastPacket 3B06                                     sprintf@idx 0074  
                                   sprintf@len 007C                                     sprintf@val 007F  
                              _lost_connection 00EA                              InitMRF24J40@_dcnt 0062  
                             __size_of_isdigit 001C                              ?_MiMAC_SetChannel 0024  
                              ___lwdiv@divisor 001F                              ?_Read_MAC_Address 0023  
                                   _IEEESeqNum 0032                                ___lwdiv@counter 0021  
                                     __ptext10 31DE                                       __ptext11 3C1C  
                                     __ptext20 3364                                       __ptext12 36F0  
                                     __ptext21 1FB4                                       __ptext13 2DC0  
                                     __ptext30 2798                                       __ptext22 34AA  
                                     __ptext14 3B06                                       __ptext31 316C  
                                     __ptext23 2E4E                                       __ptext15 2C98  
                                     __ptext40 3B22                                       __ptext32 3770  
                                     __ptext24 3932                                       __ptext16 2ACC  
                                     __ptext41 3BEA                                       __ptext33 3902  
                                     __ptext25 382A                                       __ptext17 3AC6  
                                     __ptext50 3960                                       __ptext42 2D2C  
                                     __ptext34 1052                                       __ptext26 38D2  
                                     __ptext18 2FEA                                       __ptext51 33B6  
                                     __ptext43 32B6                                       __ptext35 1D9E  
                                     __ptext27 2504                                       __ptext19 36AE  
                                     __ptext60 3864                                       __ptext52 3730  
                                     __ptext44 2652                                       __ptext36 324E  
                                     __ptext28 3C2A                                       __ptext61 2B66  
                                     __ptext53 39E4                                       __ptext45 2A12  
                                     __ptext37 30F4                                       __ptext29 0190  
                                     __ptext70 3A80                                       __ptext62 3BFC  
                                     __ptext54 345A                                       __ptext46 1A6E  
                                     __ptext38 2C00                                       __ptext71 37EC  
                                     __ptext63 3C46                                       __ptext55 23A6  
                                     __ptext47 34F8                                       __ptext39 389E  
                                     __ptext80 3408                                       __ptext72 35DE  
                                     __ptext64 3C4C                                       __ptext56 398C  
                                     __ptext48 330E                                       __ptext81 3C0C  
                                     __ptext73 3BAA                                       __ptext65 37AE  
                                     __ptext57 3546                                       __ptext49 21BA  
                                     __ptext82 3BD6                                       __ptext74 3BC0  
                                     __ptext66 3AE6                                       __ptext58 3C36  
                                     __ptext83 3070                                       __ptext75 3B5A  
                                     __ptext67 3628                                       __ptext59 3B90  
                                     __ptext84 2944                                       __ptext76 2874  
                                     __ptext68 092A                                       __ptext69 3B3E  
                                     __ptext78 3A0C                                       __ptext79 39B8  
                                 _SSP1CON1bits 000FC6                                  _AddConnection 23A6  
                           ??_MiMAC_SetChannel 0025                              ?_MiMAC_SendPacket 0075  
              __size_of_DemoOutput_UnicastFail 0012                                       _high_isr 0008  
                           ??_Read_MAC_Address 0060                                   _SSP2CON2bits 000F71  
                 Source_END_DEVICE_INFO@SrAddr 0087                              ??_TMR1_StartTimer 001D  
                             __size_of_sprintf 0728                         __size_of_isSameAddress 002C  
                           ??_MiMAC_SendPacket 007F                             _DemoOutput_Channel 37AE  
                       ??_UserInterruptHandler 000F                                  __size_of_main 0020  
                             ?_freezer_feature 0001                          ?i2_PHYGetShortRAMAddr 0001  
                        ??i2_PHYGetLongRAMAddr 0004                         _MiApp_RemoveConnection 2652  
                          ?_DemoOutput_Channel 008C                                     _LCDCommand 00D1  
                                   _LCDDisplay 3628                   __end_ofi2_PHYSetShortRAMAddr 3A34  
                                     int$flags 0043                             LCDTRXCount@rxCount 0087  
                  MiApp_EstablishConnection@t1 0170                    MiApp_EstablishConnection@t2 0174  
                           LCDTRXCount@txCount 0088                                   _SSP1STATbits 000FC7  
                                   _LCD_Update 3BAA                      __size_of_send_link_status 003E  
                          MiApp_UnicastStar@t1 016E                            MiApp_UnicastStar@t2 0172  
                   __size_of_PHYSetLongRAMAddr 0050                     MiMAC_SendPacket@MACPayload 007C  
                        __CFG_CPUDIV$OSC2_PLL2 000000                                    Find_Index@i 0021  
                        _permanent_connections 0214                                     _INTCONbits 000FF2  
                               AddConnection@i 0068                           ??_DemoOutput_Channel 0025  
                   handle_lost_connection@stat 0022                        ?_handle_lost_connection 0001  
                                   i2_DELAY_ms 2944                                 ?_AddConnection 0001  
                  ButtonPressed@tickDifference 0065                                       isdigit@c 001F  
                             _myNetworkAddress 003C                                  ??_SW_Ack_SrED 0025  
                                  _nvmConnMode 00EE                           SW_Ack_SrED@Dest_Addr 00A0  
                       Total_Connections@count 001D                    MiApp_ProtocolInit@initValue 007C  
                       ??_Find_InActiveDevices 00A6                                       intlevel2 0000  
                            ?_MiApp_SetChannel 0001                                      sprintf@ap 007E  
                                    sprintf@cp 007B                                      sprintf@sp 0064  
                      ?_MiApp_MessageAvailable 0001                               ___lwmod@dividend 0060  
                                 ?_EEPROM_Read 001E                             ??_MiApp_SetChannel 0025  
                             ?_Initialize_Demo 0001                                  ?_MiWi_TickGet 001D  
                           _MiApp_ProtocolInit 1FB4                   SendPacket@DestinationAddress 0092  
                       _DemoOutput_UnicastFail 3BEA                                  _MACInitParams 00D5  
                          MiMAC_Init@initValue 0075                             EEPROM_Read@oldGIEH 0022  
                               _MRF24J40Status 0033                                  _isSameAddress 398C  
                          ?_MiApp_ProtocolInit 0001                     MiWi_TickGet@failureCounter 0060  
                            _MiApp_UnicastStar 2DC0                         ?_MiApp_BroadcastPacket 0001  
                                     sprintf@c 0084                                       sprintf@f 0066  
                           ?_MiApp_UnicastStar 0001                                     _PPSCONbits 000EFF  
             __size_of_DemoOutput_ChannelError 0002                 __end_of_handle_lost_connection 31DE  
                              ___lwmod@divisor 0062     MiApp_EstablishConnection@tmpConnectionMode 016D  
                              ___lwmod@counter 0024                     ?_MiApp_EstablishConnection 00C5  
                        _DemoOutput_UpdateTxRx 3C1C                                     _WDTCONbits 000FC0  
                          ??_MiApp_UnicastStar 0169                 __end_of_MiApp_MessageAvailable 3C36  
                          _MiMAC_DiscardPacket 3B90                             _nvmOutFrameCounter 00F6  
                            _nvmCurrentChannel 00F0                           ??_MiApp_ProtocolInit 0025  
                                 ?_LCDTRXCount 0087                    send_link_status@send_status 00A0  
                       ??i2_PHYGetShortRAMAddr 0002                               EEPROM_Read@count 0021  
                               ??_MiWi_TickGet 0021              Process_RxMessage@User_data_status 00C5  
                          __end_of_SW_Ack_SrED 3932                                EEPROM_Read@addr 0020  
                              EEPROM_Read@dest 001E                                  ?_InitMRF24J40 0001  
             Forward_Packet_PANCr_to_EDy@index 00A8                                _TMR1_Initialize 3B76  
                     MiMAC_SendPacket@IntraPAN 008B                   __end_of_MiMAC_ReceivedPacket 1580  
                           Find_Index@DestAddr 001D                                    ?_LCDDisplay 0087  
