

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Sun Feb 14 00:02:14 2016

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107  0000                     
   108                           	psect	idataCOMRAM
   109  003ADC                     __pidataCOMRAM:
   110                           	opt stack 0
   111                           
   112                           ;initializer for _BankIndex
   113  003ADC  FF                 	db	255
   114                           
   115                           	psect	idataBANK0
   116  003AD6                     __pidataBANK0:
   117                           	opt stack 0
   118                           
   119                           ;initializer for _AdditionalNodeID
   120  003AD6  01                 	db	1
   121                           
   122                           ;initializer for _ConnMode
   123  003AD7  03                 	db	3
   124                           
   125                           	psect	mediumconst
   126  00FCF8                     __pmediumconst:
   127                           	opt stack 0
   128  00FCF8  00                 	db	0
   129  00FCF9                     _MiWi:
   130                           	opt stack 0
   131  00FCF9  20                 	db	32
   132  00FCFA  B2                 	db	178
   133  00FCFB  20                 	db	32
   134  00FCFC  20                 	db	32
   135  00FCFD  20                 	db	32
   136  00FCFE  B2                 	db	178
   137  00FCFF  20                 	db	32
   138  00FD00  20                 	db	32
   139  00FD01  B2                 	db	178
   140  00FD02  20                 	db	32
   141  00FD03  B2                 	db	178
   142  00FD04  20                 	db	32
   143  00FD05  20                 	db	32
   144  00FD06  20                 	db	32
   145  00FD07  20                 	db	32
   146  00FD08  20                 	db	32
   147  00FD09  B2                 	db	178
   148  00FD0A  20                 	db	32
   149  00FD0B  B2                 	db	178
   150  00FD0C  0D                 	db	13
   151  00FD0D  0A                 	db	10
   152  00FD0E  B2                 	db	178
   153  00FD0F  20                 	db	32
   154  00FD10  B2                 	db	178
   155  00FD11  20                 	db	32
   156  00FD12  B2                 	db	178
   157  00FD13  20                 	db	32
   158  00FD14  B2                 	db	178
   159  00FD15  20                 	db	32
   160  00FD16  20                 	db	32
   161  00FD17  20                 	db	32
   162  00FD18  B2                 	db	178
   163  00FD19  20                 	db	32
   164  00FD1A  20                 	db	32
   165  00FD1B  B2                 	db	178
   166  00FD1C  20                 	db	32
   167  00FD1D  20                 	db	32
   168  00FD1E  B2                 	db	178
   169  00FD1F  20                 	db	32
   170  00FD20  20                 	db	32
   171  00FD21  0D                 	db	13
   172  00FD22  0A                 	db	10
   173  00FD23  B2                 	db	178
   174  00FD24  20                 	db	32
   175  00FD25  20                 	db	32
   176  00FD26  B2                 	db	178
   177  00FD27  20                 	db	32
   178  00FD28  20                 	db	32
   179  00FD29  B2                 	db	178
   180  00FD2A  20                 	db	32
   181  00FD2B  B2                 	db	178
   182  00FD2C  20                 	db	32
   183  00FD2D  B2                 	db	178
   184  00FD2E  20                 	db	32
   185  00FD2F  20                 	db	32
   186  00FD30  B2                 	db	178
   187  00FD31  20                 	db	32
   188  00FD32  20                 	db	32
   189  00FD33  B2                 	db	178
   190  00FD34  20                 	db	32
   191  00FD35  B2                 	db	178
   192  00FD36  0D                 	db	13
   193  00FD37  0A                 	db	10
   194  00FD38  B2                 	db	178
   195  00FD39  20                 	db	32
   196  00FD3A  20                 	db	32
   197  00FD3B  B2                 	db	178
   198  00FD3C  20                 	db	32
   199  00FD3D  20                 	db	32
   200  00FD3E  B2                 	db	178
   201  00FD3F  20                 	db	32
   202  00FD40  B2                 	db	178
   203  00FD41  20                 	db	32
   204  00FD42  20                 	db	32
   205  00FD43  B2                 	db	178
   206  00FD44  20                 	db	32
   207  00FD45  B2                 	db	178
   208  00FD46  20                 	db	32
   209  00FD47  B2                 	db	178
   210  00FD48  20                 	db	32
   211  00FD49  20                 	db	32
   212  00FD4A  B2                 	db	178
   213  00FD4B  0D                 	db	13
   214  00FD4C  0A                 	db	10
   215  00FD4D  B2                 	db	178
   216  00FD4E  20                 	db	32
   217  00FD4F  20                 	db	32
   218  00FD50  B2                 	db	178
   219  00FD51  20                 	db	32
   220  00FD52  20                 	db	32
   221  00FD53  B2                 	db	178
   222  00FD54  20                 	db	32
   223  00FD55  B2                 	db	178
   224  00FD56  20                 	db	32
   225  00FD57  20                 	db	32
   226  00FD58  20                 	db	32
   227  00FD59  B2                 	db	178
   228  00FD5A  20                 	db	32
   229  00FD5B  B2                 	db	178
   230  00FD5C  20                 	db	32
   231  00FD5D  20                 	db	32
   232  00FD5E  20                 	db	32
   233  00FD5F  B2                 	db	178
   234  00FD60  0D                 	db	13
   235  00FD61  0A                 	db	10
   236  00FD62  20                 	db	32
   237  00FD63  20                 	db	32
   238  00FD64  20                 	db	32
   239  00FD65  20                 	db	32
   240  00FD66  20                 	db	32
   241  00FD67  20                 	db	32
   242  00FD68  20                 	db	32
   243  00FD69  20                 	db	32
   244  00FD6A  20                 	db	32
   245  00FD6B  20                 	db	32
   246  00FD6C  20                 	db	32
   247  00FD6D  20                 	db	32
   248  00FD6E  20                 	db	32
   249  00FD6F  20                 	db	32
   250  00FD70  20                 	db	32
   251  00FD71  20                 	db	32
   252  00FD72  20                 	db	32
   253  00FD73  20                 	db	32
   254  00FD74  20                 	db	32
   255  00FD75  0D                 	db	13
   256  00FD76  0A                 	db	10
   257  00FD77                     __end_of_MiWi:
   258                           	opt stack 0
   259  00FD77                     _octpowers:
   260                           	opt stack 0
   261  00FD77  0001               	dw	1
   262  00FD79  0008               	dw	8
   263  00FD7B  0040               	dw	64
   264  00FD7D  0200               	dw	512
   265  00FD7F  1000               	dw	4096
   266  00FD81  8000               	dw	32768
   267  00FD83                     __end_of_octpowers:
   268                           	opt stack 0
   269  00FD83                     _dpowers:
   270                           	opt stack 0
   271  00FD83  0001               	dw	1
   272  00FD85  000A               	dw	10
   273  00FD87  0064               	dw	100
   274  00FD89  03E8               	dw	1000
   275  00FD8B  2710               	dw	10000
   276  00FD8D                     __end_of_dpowers:
   277                           	opt stack 0
   278  00FD8D                     _hexpowers:
   279                           	opt stack 0
   280  00FD8D  0001               	dw	1
   281  00FD8F  0010               	dw	16
   282  00FD91  0100               	dw	256
   283  00FD93  1000               	dw	4096
   284  00FD95                     __end_of_hexpowers:
   285                           	opt stack 0
   286  0000                     _PPSCONbits	set	3839
   287  0000                     _RPINR1	set	3815
   288  0000                     _RPINR21	set	3835
   289  0000                     _RPOR19	set	3801
   290  0000                     _RPOR21	set	3803
   291  0000                     _ANCON0	set	3912
   292  0000                     _ANCON1	set	3913
   293  0000                     _TMR1	set	4046
   294  0000                     _EECON2	set	4007
   295  0000                     _INTCON2bits	set	4081
   296  0000                     _INTCONbits	set	4082
   297  0000                     _LATAbits	set	3977
   298  0000                     _LATCbits	set	3979
   299  0000                     _LATDbits	set	3980
   300  0000                     _LATEbits	set	3981
   301  0000                     _OSCCON	set	4051
   302  0000                     _OSCTUNEbits	set	3995
   303  0000                     _PIE1bits	set	3997
   304  0000                     _PIR1bits	set	3998
   305  0000                     _PIR3bits	set	4004
   306  0000                     _PORTBbits	set	3969
   307  0000                     _SSP1BUF	set	4041
   308  0000                     _SSP1CON1	set	4038
   309  0000                     _SSP1CON1bits	set	4038
   310  0000                     _SSP1STAT	set	4039
   311  0000                     _SSP1STATbits	set	4039
   312  0000                     _SSP2BUF	set	3957
   313  0000                     _SSP2CON1	set	3954
   314  0000                     _SSP2CON1bits	set	3954
   315  0000                     _SSP2STAT	set	3955
   316  0000                     _T1CON	set	4045
   317  0000                     _T1CONbits	set	4045
   318  0000                     _T1GCON	set	3994
   319  0000                     _TMR0L	set	4054
   320  0000                     _TMR1H	set	4047
   321  0000                     _TMR1L	set	4046
   322  0000                     _TRISAbits	set	3986
   323  0000                     _TRISBbits	set	3987
   324  0000                     _TRISCbits	set	3988
   325  0000                     _TRISDbits	set	3989
   326  0000                     _TRISEbits	set	3990
   327  0000                     _WDTCONbits	set	4032
   328  00FD95                     STR_9:
   329  00FD95  0D                 	db	13
   330  00FD96  0A                 	db	10
   331  00FD97  0D                 	db	13
   332  00FD98  0A                 	db	10
   333  00FD99  43                 	db	67	;'C'
   334  00FD9A  6F                 	db	111	;'o'
   335  00FD9B  6E                 	db	110	;'n'
   336  00FD9C  6E                 	db	110	;'n'
   337  00FD9D  65                 	db	101	;'e'
   338  00FD9E  63                 	db	99	;'c'
   339  00FD9F  74                 	db	116	;'t'
   340  00FDA0  69                 	db	105	;'i'
   341  00FDA1  6F                 	db	111	;'o'
   342  00FDA2  6E                 	db	110	;'n'
   343  00FDA3  20                 	db	32
   344  00FDA4  20                 	db	32
   345  00FDA5  20                 	db	32
   346  00FDA6  20                 	db	32
   347  00FDA7  20                 	db	32
   348  00FDA8  50                 	db	80	;'P'
   349  00FDA9  65                 	db	101	;'e'
   350  00FDAA  65                 	db	101	;'e'
   351  00FDAB  72                 	db	114	;'r'
   352  00FDAC  4C                 	db	76	;'L'
   353  00FDAD  6F                 	db	111	;'o'
   354  00FDAE  6E                 	db	110	;'n'
   355  00FDAF  67                 	db	103	;'g'
   356  00FDB0  41                 	db	65	;'A'
   357  00FDB1  64                 	db	100	;'d'
   358  00FDB2  64                 	db	100	;'d'
   359  00FDB3  72                 	db	114	;'r'
   360  00FDB4  65                 	db	101	;'e'
   361  00FDB5  73                 	db	115	;'s'
   362  00FDB6  73                 	db	115	;'s'
   363  00FDB7  20                 	db	32
   364  00FDB8  20                 	db	32
   365  00FDB9  20                 	db	32
   366  00FDBA  20                 	db	32
   367  00FDBB  20                 	db	32
   368  00FDBC  50                 	db	80	;'P'
   369  00FDBD  65                 	db	101	;'e'
   370  00FDBE  65                 	db	101	;'e'
   371  00FDBF  72                 	db	114	;'r'
   372  00FDC0  49                 	db	73	;'I'
   373  00FDC1  6E                 	db	110	;'n'
   374  00FDC2  66                 	db	102	;'f'
   375  00FDC3  6F                 	db	111	;'o'
   376  00FDC4  0D                 	db	13
   377  00FDC5  0A                 	db	10
   378  00FDC6  00                 	db	0
   379  00FDC7                     STR_17:
   380  00FDC7  43                 	db	67	;'C'
   381  00FDC8  6F                 	db	111	;'o'
   382  00FDC9  6E                 	db	110	;'n'
   383  00FDCA  6E                 	db	110	;'n'
   384  00FDCB  65                 	db	101	;'e'
   385  00FDCC  63                 	db	99	;'c'
   386  00FDCD  74                 	db	116	;'t'
   387  00FDCE  69                 	db	105	;'i'
   388  00FDCF  6E                 	db	110	;'n'
   389  00FDD0  67                 	db	103	;'g'
   390  00FDD1  20                 	db	32
   391  00FDD2  50                 	db	80	;'P'
   392  00FDD3  65                 	db	101	;'e'
   393  00FDD4  65                 	db	101	;'e'
   394  00FDD5  72                 	db	114	;'r'
   395  00FDD6  20                 	db	32
   396  00FDD7  20                 	db	32
   397  00FDD8  6F                 	db	111	;'o'
   398  00FDD9  6E                 	db	110	;'n'
   399  00FDDA  20                 	db	32
   400  00FDDB  43                 	db	67	;'C'
   401  00FDDC  68                 	db	104	;'h'
   402  00FDDD  61                 	db	97	;'a'
   403  00FDDE  6E                 	db	110	;'n'
   404  00FDDF  6E                 	db	110	;'n'
   405  00FDE0  65                 	db	101	;'e'
   406  00FDE1  6C                 	db	108	;'l'
   407  00FDE2  20                 	db	32
   408  00FDE3  25                 	db	37
   409  00FDE4  64                 	db	100	;'d'
   410  00FDE5  20                 	db	32
   411  00FDE6  00                 	db	0
   412  00FDE7                     STR_27:
   413  00FDE7  53                 	db	83	;'S'
   414  00FDE8  57                 	db	87	;'W'
   415  00FDE9  31                 	db	49	;'1'
   416  00FDEA  20                 	db	32
   417  00FDEB  3A                 	db	58	;':'
   418  00FDEC  20                 	db	32
   419  00FDED  55                 	db	85	;'U'
   420  00FDEE  6E                 	db	110	;'n'
   421  00FDEF  69                 	db	105	;'i'
   422  00FDF0  63                 	db	99	;'c'
   423  00FDF1  61                 	db	97	;'a'
   424  00FDF2  73                 	db	115	;'s'
   425  00FDF3  74                 	db	116	;'t'
   426  00FDF4  20                 	db	32
   427  00FDF5  20                 	db	32
   428  00FDF6  20                 	db	32
   429  00FDF7  53                 	db	83	;'S'
   430  00FDF8  57                 	db	87	;'W'
   431  00FDF9  32                 	db	50	;'2'
   432  00FDFA  20                 	db	32
   433  00FDFB  3A                 	db	58	;':'
   434  00FDFC  20                 	db	32
   435  00FDFD  4E                 	db	78	;'N'
   436  00FDFE  65                 	db	101	;'e'
   437  00FDFF  78                 	db	120	;'x'
   438  00FE00  74                 	db	116	;'t'
   439  00FE01  20                 	db	32
   440  00FE02  4E                 	db	78	;'N'
   441  00FE03  6F                 	db	111	;'o'
   442  00FE04  64                 	db	100	;'d'
   443  00FE05  65                 	db	101	;'e'
   444  00FE06  00                 	db	0
   445  00FE07                     STR_18:
   446  00FE07  20                 	db	32
   447  00FE08  43                 	db	67	;'C'
   448  00FE09  6F                 	db	111	;'o'
   449  00FE0A  6E                 	db	110	;'n'
   450  00FE0B  6E                 	db	110	;'n'
   451  00FE0C  65                 	db	101	;'e'
   452  00FE0D  63                 	db	99	;'c'
   453  00FE0E  74                 	db	116	;'t'
   454  00FE0F  65                 	db	101	;'e'
   455  00FE10  64                 	db	100	;'d'
   456  00FE11  20                 	db	32
   457  00FE12  50                 	db	80	;'P'
   458  00FE13  65                 	db	101	;'e'
   459  00FE14  65                 	db	101	;'e'
   460  00FE15  72                 	db	114	;'r'
   461  00FE16  20                 	db	32
   462  00FE17  20                 	db	32
   463  00FE18  6F                 	db	111	;'o'
   464  00FE19  6E                 	db	110	;'n'
   465  00FE1A  20                 	db	32
   466  00FE1B  43                 	db	67	;'C'
   467  00FE1C  68                 	db	104	;'h'
   468  00FE1D  61                 	db	97	;'a'
   469  00FE1E  6E                 	db	110	;'n'
   470  00FE1F  6E                 	db	110	;'n'
   471  00FE20  65                 	db	101	;'e'
   472  00FE21  6C                 	db	108	;'l'
   473  00FE22  20                 	db	32
   474  00FE23  25                 	db	37
   475  00FE24  64                 	db	100	;'d'
   476  00FE25  00                 	db	0
   477  00FE26                     STR_16:
   478  00FE26  53                 	db	83	;'S'
   479  00FE27  69                 	db	105	;'i'
   480  00FE28  6D                 	db	109	;'m'
   481  00FE29  70                 	db	112	;'p'
   482  00FE2A  6C                 	db	108	;'l'
   483  00FE2B  65                 	db	101	;'e'
   484  00FE2C  20                 	db	32
   485  00FE2D  53                 	db	83	;'S'
   486  00FE2E  54                 	db	84	;'T'
   487  00FE2F  41                 	db	65	;'A'
   488  00FE30  52                 	db	82	;'R'
   489  00FE31  20                 	db	32
   490  00FE32  20                 	db	32
   491  00FE33  20                 	db	32
   492  00FE34  20                 	db	32
   493  00FE35  20                 	db	32
   494  00FE36  4D                 	db	77	;'M'
   495  00FE37  52                 	db	82	;'R'
   496  00FE38  46                 	db	70	;'F'
   497  00FE39  32                 	db	50	;'2'
   498  00FE3A  34                 	db	52	;'4'
   499  00FE3B  4A                 	db	74	;'J'
   500  00FE3C  34                 	db	52	;'4'
   501  00FE3D  30                 	db	48	;'0'
   502  00FE3E  20                 	db	32
   503  00FE3F  4E                 	db	78	;'N'
   504  00FE40  6F                 	db	111	;'o'
   505  00FE41  64                 	db	100	;'d'
   506  00FE42  65                 	db	101	;'e'
   507  00FE43  00                 	db	0
   508  00FE44                     STR_26:
   509  00FE44  50                 	db	80	;'P'
   510  00FE45  43                 	db	67	;'C'
   511  00FE46  20                 	db	32
   512  00FE47  3A                 	db	58	;':'
   513  00FE48  53                 	db	83	;'S'
   514  00FE49  57                 	db	87	;'W'
   515  00FE4A  31                 	db	49	;'1'
   516  00FE4B  20                 	db	32
   517  00FE4C  6F                 	db	111	;'o'
   518  00FE4D  72                 	db	114	;'r'
   519  00FE4E  20                 	db	32
   520  00FE4F  53                 	db	83	;'S'
   521  00FE50  57                 	db	87	;'W'
   522  00FE51  32                 	db	50	;'2'
   523  00FE52  20                 	db	32
   524  00FE53  20                 	db	32
   525  00FE54  74                 	db	116	;'t'
   526  00FE55  6F                 	db	111	;'o'
   527  00FE56  20                 	db	32
   528  00FE57  42                 	db	66	;'B'
   529  00FE58  72                 	db	114	;'r'
   530  00FE59  6F                 	db	111	;'o'
   531  00FE5A  61                 	db	97	;'a'
   532  00FE5B  64                 	db	100	;'d'
   533  00FE5C  43                 	db	67	;'C'
   534  00FE5D  61                 	db	97	;'a'
   535  00FE5E  73                 	db	115	;'s'
   536  00FE5F  74                 	db	116	;'t'
   537  00FE60  00                 	db	0
   538  00FE61  53                 	db	83	;'S'
   539  00FE62  57                 	db	87	;'W'
   540  00FE63  31                 	db	49	;'1'
   541  00FE64  3A                 	db	58	;':'
   542  00FE65  20                 	db	32
   543  00FE66  42                 	db	66	;'B'
   544  00FE67  72                 	db	114	;'r'
   545  00FE68  6F                 	db	111	;'o'
   546  00FE69  61                 	db	97	;'a'
   547  00FE6A  64                 	db	100	;'d'
   548  00FE6B  63                 	db	99	;'c'
   549  00FE6C  61                 	db	97	;'a'
   550  00FE6D  73                 	db	115	;'s'
   551  00FE6E  74                 	db	116	;'t'
   552  00FE6F  20                 	db	32
   553  00FE70  20                 	db	32
   554  00FE71  53                 	db	83	;'S'
   555  00FE72  57                 	db	87	;'W'
   556  00FE73  32                 	db	50	;'2'
   557  00FE74  3A                 	db	58	;':'
   558  00FE75  20                 	db	32
   559  00FE76  55                 	db	85	;'U'
   560  00FE77  6E                 	db	110	;'n'
   561  00FE78  69                 	db	105	;'i'
   562  00FE79  63                 	db	99	;'c'
   563  00FE7A  61                 	db	97	;'a'
   564  00FE7B  73                 	db	115	;'s'
   565  00FE7C  74                 	db	116	;'t'
   566  00FE7D  00                 	db	0
   567  00FE7E                     STR_30:
   568  00FE7E  53                 	db	83	;'S'
   569  00FE7F  57                 	db	87	;'W'
   570  00FE80  31                 	db	49	;'1'
   571  00FE81  3A                 	db	58	;':'
   572  00FE82  4E                 	db	78	;'N'
   573  00FE83  65                 	db	101	;'e'
   574  00FE84  77                 	db	119	;'w'
   575  00FE85  20                 	db	32
   576  00FE86  4E                 	db	78	;'N'
   577  00FE87  65                 	db	101	;'e'
   578  00FE88  74                 	db	116	;'t'
   579  00FE89  77                 	db	119	;'w'
   580  00FE8A  6F                 	db	111	;'o'
   581  00FE8B  72                 	db	114	;'r'
   582  00FE8C  6B                 	db	107	;'k'
   583  00FE8D  20                 	db	32
   584  00FE8E  53                 	db	83	;'S'
   585  00FE8F  57                 	db	87	;'W'
   586  00FE90  32                 	db	50	;'2'
   587  00FE91  3A                 	db	58	;':'
   588  00FE92  46                 	db	70	;'F'
   589  00FE93  72                 	db	114	;'r'
   590  00FE94  65                 	db	101	;'e'
   591  00FE95  65                 	db	101	;'e'
   592  00FE96  7A                 	db	122	;'z'
   593  00FE97  65                 	db	101	;'e'
   594  00FE98  72                 	db	114	;'r'
   595  00FE99  00                 	db	0
   596  00FE9A  42                 	db	66	;'B'
   597  00FE9B  72                 	db	114	;'r'
   598  00FE9C  6F                 	db	111	;'o'
   599  00FE9D  61                 	db	97	;'a'
   600  00FE9E  64                 	db	100	;'d'
   601  00FE9F  63                 	db	99	;'c'
   602  00FEA0  61                 	db	97	;'a'
   603  00FEA1  73                 	db	115	;'s'
   604  00FEA2  74                 	db	116	;'t'
   605  00FEA3  20                 	db	32
   606  00FEA4  50                 	db	80	;'P'
   607  00FEA5  61                 	db	97	;'a'
   608  00FEA6  63                 	db	99	;'c'
   609  00FEA7  6B                 	db	107	;'k'
   610  00FEA8  65                 	db	101	;'e'
   611  00FEA9  74                 	db	116	;'t'
   612  00FEAA  20                 	db	32
   613  00FEAB  77                 	db	119	;'w'
   614  00FEAC  69                 	db	105	;'i'
   615  00FEAD  74                 	db	116	;'t'
   616  00FEAE  68                 	db	104	;'h'
   617  00FEAF  20                 	db	32
   618  00FEB0  52                 	db	82	;'R'
   619  00FEB1  53                 	db	83	;'S'
   620  00FEB2  53                 	db	83	;'S'
   621  00FEB3  49                 	db	73	;'I'
   622  00FEB4  20                 	db	32
   623  00FEB5  00                 	db	0
   624  00FEB6  55                 	db	85	;'U'
   625  00FEB7  6E                 	db	110	;'n'
   626  00FEB8  69                 	db	105	;'i'
   627  00FEB9  63                 	db	99	;'c'
   628  00FEBA  61                 	db	97	;'a'
   629  00FEBB  73                 	db	115	;'s'
   630  00FEBC  74                 	db	116	;'t'
   631  00FEBD  20                 	db	32
   632  00FEBE  50                 	db	80	;'P'
   633  00FEBF  61                 	db	97	;'a'
   634  00FEC0  63                 	db	99	;'c'
   635  00FEC1  6B                 	db	107	;'k'
   636  00FEC2  65                 	db	101	;'e'
   637  00FEC3  74                 	db	116	;'t'
   638  00FEC4  20                 	db	32
   639  00FEC5  77                 	db	119	;'w'
   640  00FEC6  69                 	db	105	;'i'
   641  00FEC7  74                 	db	116	;'t'
   642  00FEC8  68                 	db	104	;'h'
   643  00FEC9  20                 	db	32
   644  00FECA  52                 	db	82	;'R'
   645  00FECB  53                 	db	83	;'S'
   646  00FECC  53                 	db	83	;'S'
   647  00FECD  49                 	db	73	;'I'
   648  00FECE  20                 	db	32
   649  00FECF  00                 	db	0
   650  00FED0                     STR_31:
   651  00FED0  52                 	db	82	;'R'
   652  00FED1  42                 	db	66	;'B'
   653  00FED2  30                 	db	48	;'0'
   654  00FED3  3A                 	db	58	;':'
   655  00FED4  25                 	db	37
   656  00FED5  30                 	db	48	;'0'
   657  00FED6  32                 	db	50	;'2'
   658  00FED7  64                 	db	100	;'d'
   659  00FED8  2D                 	db	45
   660  00FED9  25                 	db	37
   661  00FEDA  30                 	db	48	;'0'
   662  00FEDB  32                 	db	50	;'2'
   663  00FEDC  78                 	db	120	;'x'
   664  00FEDD  25                 	db	37
   665  00FEDE  30                 	db	48	;'0'
   666  00FEDF  32                 	db	50	;'2'
   667  00FEE0  78                 	db	120	;'x'
   668  00FEE1  25                 	db	37
   669  00FEE2  30                 	db	48	;'0'
   670  00FEE3  32                 	db	50	;'2'
   671  00FEE4  78                 	db	120	;'x'
   672  00FEE5  2D                 	db	45
   673  00FEE6  6D                 	db	109	;'m'
   674  00FEE7  65                 	db	101	;'e'
   675  00FEE8  00                 	db	0
   676  00FEE9                     STR_32:
   677  00FEE9  52                 	db	82	;'R'
   678  00FEEA  42                 	db	66	;'B'
   679  00FEEB  30                 	db	48	;'0'
   680  00FEEC  3A                 	db	58	;':'
   681  00FEED  25                 	db	37
   682  00FEEE  30                 	db	48	;'0'
   683  00FEEF  32                 	db	50	;'2'
   684  00FEF0  64                 	db	100	;'d'
   685  00FEF1  2D                 	db	45
   686  00FEF2  25                 	db	37
   687  00FEF3  30                 	db	48	;'0'
   688  00FEF4  32                 	db	50	;'2'
   689  00FEF5  78                 	db	120	;'x'
   690  00FEF6  25                 	db	37
   691  00FEF7  30                 	db	48	;'0'
   692  00FEF8  32                 	db	50	;'2'
   693  00FEF9  78                 	db	120	;'x'
   694  00FEFA  25                 	db	37
   695  00FEFB  30                 	db	48	;'0'
   696  00FEFC  32                 	db	50	;'2'
   697  00FEFD  78                 	db	120	;'x'
   698  00FEFE  00                 	db	0
   699  00FEFF                     STR_29:
   700  00FEFF  20                 	db	32
   701  00FF00  41                 	db	65	;'A'
   702  00FF01  64                 	db	100	;'d'
   703  00FF02  64                 	db	100	;'d'
   704  00FF03  72                 	db	114	;'r'
   705  00FF04  65                 	db	101	;'e'
   706  00FF05  73                 	db	115	;'s'
   707  00FF06  73                 	db	115	;'s'
   708  00FF07  3A                 	db	58	;':'
   709  00FF08  25                 	db	37
   710  00FF09  30                 	db	48	;'0'
   711  00FF0A  32                 	db	50	;'2'
   712  00FF0B  78                 	db	120	;'x'
   713  00FF0C  25                 	db	37
   714  00FF0D  30                 	db	48	;'0'
   715  00FF0E  32                 	db	50	;'2'
   716  00FF0F  78                 	db	120	;'x'
   717  00FF10  25                 	db	37
   718  00FF11  30                 	db	48	;'0'
   719  00FF12  32                 	db	50	;'2'
   720  00FF13  78                 	db	120	;'x'
   721  00FF14  00                 	db	0
   722  00FF15                     STR_35:
   723  00FF15  44                 	db	68	;'D'
   724  00FF16  61                 	db	97	;'a'
   725  00FF17  74                 	db	116	;'t'
   726  00FF18  61                 	db	97	;'a'
   727  00FF19  5F                 	db	95	;'_'
   728  00FF1A  53                 	db	83	;'S'
   729  00FF1B  65                 	db	101	;'e'
   730  00FF1C  6E                 	db	110	;'n'
   731  00FF1D  64                 	db	100	;'d'
   732  00FF1E  69                 	db	105	;'i'
   733  00FF1F  6E                 	db	110	;'n'
   734  00FF20  67                 	db	103	;'g'
   735  00FF21  5F                 	db	95	;'_'
   736  00FF22  46                 	db	70	;'F'
   737  00FF23  61                 	db	97	;'a'
   738  00FF24  69                 	db	105	;'i'
   739  00FF25  6C                 	db	108	;'l'
   740  00FF26  21                 	db	33
   741  00FF27  21                 	db	33
   742  00FF28  00                 	db	0
   743  00FF29  0D                 	db	13
   744  00FF2A  0A                 	db	10
   745  00FF2B  0D                 	db	13
   746  00FF2C  0A                 	db	10
   747  00FF2D  4D                 	db	77	;'M'
   748  00FF2E  79                 	db	121	;'y'
   749  00FF2F  20                 	db	32
   750  00FF30  41                 	db	65	;'A'
   751  00FF31  64                 	db	100	;'d'
   752  00FF32  64                 	db	100	;'d'
   753  00FF33  72                 	db	114	;'r'
   754  00FF34  65                 	db	101	;'e'
   755  00FF35  73                 	db	115	;'s'
   756  00FF36  73                 	db	115	;'s'
   757  00FF37  3A                 	db	58	;':'
   758  00FF38  20                 	db	32
   759  00FF39  30                 	db	48	;'0'
   760  00FF3A  78                 	db	120	;'x'
   761  00FF3B  00                 	db	0
   762  00FF3C                     STR_36:
   763  00FF3C  45                 	db	69	;'E'
   764  00FF3D  4E                 	db	78	;'N'
   765  00FF3E  44                 	db	68	;'D'
   766  00FF3F  5F                 	db	95	;'_'
   767  00FF40  44                 	db	68	;'D'
   768  00FF41  45                 	db	69	;'E'
   769  00FF42  56                 	db	86	;'V'
   770  00FF43  49                 	db	73	;'I'
   771  00FF44  43                 	db	67	;'C'
   772  00FF45  45                 	db	69	;'E'
   773  00FF46  53                 	db	83	;'S'
   774  00FF47  20                 	db	32
   775  00FF48  3A                 	db	58	;':'
   776  00FF49  25                 	db	37
   777  00FF4A  30                 	db	48	;'0'
   778  00FF4B  32                 	db	50	;'2'
   779  00FF4C  64                 	db	100	;'d'
   780  00FF4D  00                 	db	0
   781  00FF4E                     STR_37:
   782  00FF4E  30                 	db	48	;'0'
   783  00FF4F  31                 	db	49	;'1'
   784  00FF50  32                 	db	50	;'2'
   785  00FF51  33                 	db	51	;'3'
   786  00FF52  34                 	db	52	;'4'
   787  00FF53  35                 	db	53	;'5'
   788  00FF54  36                 	db	54	;'6'
   789  00FF55  37                 	db	55	;'7'
   790  00FF56  38                 	db	56	;'8'
   791  00FF57  39                 	db	57	;'9'
   792  00FF58  41                 	db	65	;'A'
   793  00FF59  42                 	db	66	;'B'
   794  00FF5A  43                 	db	67	;'C'
   795  00FF5B  44                 	db	68	;'D'
   796  00FF5C  45                 	db	69	;'E'
   797  00FF5D  46                 	db	70	;'F'
   798  00FF5E  00                 	db	0
   799  00FF5F                     STR_38:
   800  00FF5F  30                 	db	48	;'0'
   801  00FF60  31                 	db	49	;'1'
   802  00FF61  32                 	db	50	;'2'
   803  00FF62  33                 	db	51	;'3'
   804  00FF63  34                 	db	52	;'4'
   805  00FF64  35                 	db	53	;'5'
   806  00FF65  36                 	db	54	;'6'
   807  00FF66  37                 	db	55	;'7'
   808  00FF67  38                 	db	56	;'8'
   809  00FF68  39                 	db	57	;'9'
   810  00FF69  61                 	db	97	;'a'
   811  00FF6A  62                 	db	98	;'b'
   812  00FF6B  63                 	db	99	;'c'
   813  00FF6C  64                 	db	100	;'d'
   814  00FF6D  65                 	db	101	;'e'
   815  00FF6E  66                 	db	102	;'f'
   816  00FF6F  00                 	db	0
   817  00FF70                     STR_34:
   818  00FF70  52                 	db	82	;'R'
   819  00FF71  42                 	db	66	;'B'
   820  00FF72  32                 	db	50	;'2'
   821  00FF73  3A                 	db	58	;':'
   822  00FF74  20                 	db	32
   823  00FF75  43                 	db	67	;'C'
   824  00FF76  68                 	db	104	;'h'
   825  00FF77  61                 	db	97	;'a'
   826  00FF78  6E                 	db	110	;'n'
   827  00FF79  67                 	db	103	;'g'
   828  00FF7A  65                 	db	101	;'e'
   829  00FF7B  20                 	db	32
   830  00FF7C  6E                 	db	110	;'n'
   831  00FF7D  6F                 	db	111	;'o'
   832  00FF7E  64                 	db	100	;'d'
   833  00FF7F  65                 	db	101	;'e'
   834  00FF80  00                 	db	0
   835  00FF81                     STR_28:
   836  00FF81  44                 	db	68	;'D'
   837  00FF82  61                 	db	97	;'a'
   838  00FF83  74                 	db	116	;'t'
   839  00FF84  61                 	db	97	;'a'
   840  00FF85  20                 	db	32
   841  00FF86  50                 	db	80	;'P'
   842  00FF87  61                 	db	97	;'a'
   843  00FF88  63                 	db	99	;'c'
   844  00FF89  6B                 	db	107	;'k'
   845  00FF8A  65                 	db	101	;'e'
   846  00FF8B  74                 	db	116	;'t'
   847  00FF8C  20                 	db	32
   848  00FF8D  66                 	db	102	;'f'
   849  00FF8E  72                 	db	114	;'r'
   850  00FF8F  6F                 	db	111	;'o'
   851  00FF90  6D                 	db	109	;'m'
   852  00FF91  00                 	db	0
   853  00FF92                     STR_25:
   854  00FF92  20                 	db	32
   855  00FF93  55                 	db	85	;'U'
   856  00FF94  6E                 	db	110	;'n'
   857  00FF95  69                 	db	105	;'i'
   858  00FF96  63                 	db	99	;'c'
   859  00FF97  61                 	db	97	;'a'
   860  00FF98  73                 	db	115	;'s'
   861  00FF99  74                 	db	116	;'t'
   862  00FF9A  20                 	db	32
   863  00FF9B  46                 	db	70	;'F'
   864  00FF9C  61                 	db	97	;'a'
   865  00FF9D  69                 	db	105	;'i'
   866  00FF9E  6C                 	db	108	;'l'
   867  00FF9F  65                 	db	101	;'e'
   868  00FFA0  64                 	db	100	;'d'
   869  00FFA1  00                 	db	0
   870  00FFA2                     STR_14:
   871  00FFA2  54                 	db	84	;'T'
   872  00FFA3  58                 	db	88	;'X'
   873  00FFA4  3A                 	db	58	;':'
   874  00FFA5  25                 	db	37
   875  00FFA6  33                 	db	51	;'3'
   876  00FFA7  64                 	db	100	;'d'
   877  00FFA8  20                 	db	32
   878  00FFA9  2C                 	db	44
   879  00FFAA  20                 	db	32
   880  00FFAB  52                 	db	82	;'R'
   881  00FFAC  58                 	db	88	;'X'
   882  00FFAD  3A                 	db	58	;':'
   883  00FFAE  25                 	db	37
   884  00FFAF  33                 	db	51	;'3'
   885  00FFB0  64                 	db	100	;'d'
   886  00FFB1  00                 	db	0
   887  00FFB2                     STR_15:
   888  00FFB2  4D                 	db	77	;'M'
   889  00FFB3  65                 	db	101	;'e'
   890  00FFB4  73                 	db	115	;'s'
   891  00FFB5  73                 	db	115	;'s'
   892  00FFB6  61                 	db	97	;'a'
   893  00FFB7  67                 	db	103	;'g'
   894  00FFB8  65                 	db	101	;'e'
   895  00FFB9  20                 	db	32
   896  00FFBA  43                 	db	67	;'C'
   897  00FFBB  6F                 	db	111	;'o'
   898  00FFBC  75                 	db	117	;'u'
   899  00FFBD  6E                 	db	110	;'n'
   900  00FFBE  74                 	db	116	;'t'
   901  00FFBF  00                 	db	0
   902  00FFC0                     STR_5:
   903  00FFC0  20                 	db	32
   904  00FFC1  20                 	db	32
   905  00FFC2  20                 	db	32
   906  00FFC3  20                 	db	32
   907  00FFC4  20                 	db	32
   908  00FFC5  20                 	db	32
   909  00FFC6  20                 	db	32
   910  00FFC7  20                 	db	32
   911  00FFC8  20                 	db	32
   912  00FFC9  20                 	db	32
   913  00FFCA  20                 	db	32
   914  00FFCB  20                 	db	32
   915  00FFCC  20                 	db	32
   916  00FFCD  00                 	db	0
   917  00FFCE                     STR_3:
   918  00FFCE  20                 	db	32
   919  00FFCF  20                 	db	32
   920  00FFD0  43                 	db	67	;'C'
   921  00FFD1  68                 	db	104	;'h'
   922  00FFD2  61                 	db	97	;'a'
   923  00FFD3  6E                 	db	110	;'n'
   924  00FFD4  6E                 	db	110	;'n'
   925  00FFD5  65                 	db	101	;'e'
   926  00FFD6  6C                 	db	108	;'l'
   927  00FFD7  3A                 	db	58	;':'
   928  00FFD8  20                 	db	32
   929  00FFD9  00                 	db	0
   930  00FFDA  20                 	db	32
   931  00FFDB  20                 	db	32
   932  00FFDC  50                 	db	80	;'P'
   933  00FFDD  41                 	db	65	;'A'
   934  00FFDE  4E                 	db	78	;'N'
   935  00FFDF  49                 	db	73	;'I'
   936  00FFE0  44                 	db	68	;'D'
   937  00FFE1  3A                 	db	58	;':'
   938  00FFE2  20                 	db	32
   939  00FFE3  30                 	db	48	;'0'
   940  00FFE4  78                 	db	120	;'x'
   941  00FFE5  00                 	db	0
   942  00FFE6  53                 	db	83	;'S'
   943  00FFE7  65                 	db	101	;'e'
   944  00FFE8  63                 	db	99	;'c'
   945  00FFE9  75                 	db	117	;'u'
   946  00FFEA  72                 	db	114	;'r'
   947  00FFEB  65                 	db	101	;'e'
   948  00FFEC  64                 	db	100	;'d'
   949  00FFED  20                 	db	32
   950  00FFEE  00                 	db	0
   951  00FFEF  20                 	db	32
   952  00FFF0  66                 	db	102	;'f'
   953  00FFF1  72                 	db	114	;'r'
   954  00FFF2  6F                 	db	111	;'o'
   955  00FFF3  6D                 	db	109	;'m'
   956  00FFF4  20                 	db	32
   957  00FFF5  00                 	db	0
   958  0000                     
   959                           ; #config settings
   960  00FFF6  00                 	db	0	; dummy byte at the end
   961  0000                     
   962                           	psect	cinit
   963  002F18                     __pcinit:
   964                           	opt stack 0
   965  002F18                     start_initialization:
   966                           	opt stack 0
   967  002F18                     __initialization:
   968                           	opt stack 0
   969                           
   970                           ; Clear objects allocated to BIGRAM (280 bytes)
   971  002F18  EE02  F078         	lfsr	0,__pbssBIGRAM
   972  002F1C  EE11 F018          	lfsr	1,280
   973  002F20                     clear_0:
   974  002F20  6AEE               	clrf	postinc0,c
   975  002F22  50E5               	movf	postdec1,w,c
   976  002F24  50E1               	movf	fsr1l,w,c
   977  002F26  E1FC               	bnz	clear_0
   978  002F28  50E2               	movf	fsr1h,w,c
   979  002F2A  E1FA               	bnz	clear_0
   980                           
   981                           ; Clear objects allocated to BANK2 (120 bytes)
   982  002F2C  EE02  F000         	lfsr	0,__pbssBANK2
   983  002F30  0E78               	movlw	120
   984  002F32                     clear_1:
   985  002F32  6AEE               	clrf	postinc0,c
   986  002F34  06E8               	decf	wreg,f,c
   987  002F36  E1FD               	bnz	clear_1
   988                           
   989                           ; Clear objects allocated to BANK1 (231 bytes)
   990  002F38  EE01  F000         	lfsr	0,__pbssBANK1
   991  002F3C  0EE7               	movlw	231
   992  002F3E                     clear_2:
   993  002F3E  6AEE               	clrf	postinc0,c
   994  002F40  06E8               	decf	wreg,f,c
   995  002F42  E1FD               	bnz	clear_2
   996                           
   997                           ; Clear objects allocated to BANK0 (66 bytes)
   998  002F44  EE00  F0BC         	lfsr	0,__pbssBANK0
   999  002F48  0E42               	movlw	66
  1000  002F4A                     clear_3:
  1001  002F4A  6AEE               	clrf	postinc0,c
  1002  002F4C  06E8               	decf	wreg,f,c
  1003  002F4E  E1FD               	bnz	clear_3
  1004                           
  1005                           ; Clear objects allocated to COMRAM (22 bytes)
  1006  002F50  EE00  F033         	lfsr	0,__pbssCOMRAM
  1007  002F54  0E16               	movlw	22
  1008  002F56                     clear_4:
  1009  002F56  6AEE               	clrf	postinc0,c
  1010  002F58  06E8               	decf	wreg,f,c
  1011  002F5A  E1FD               	bnz	clear_4
  1012                           
  1013                           ; Initialize objects allocated to BANK0 (2 bytes)
  1014                           ; load TBLPTR registers with __pidataBANK0
  1015  002F5C  0ED6               	movlw	low __pidataBANK0
  1016  002F5E  6EF6               	movwf	tblptrl,c
  1017  002F60  0E3A               	movlw	high __pidataBANK0
  1018  002F62  6EF7               	movwf	tblptrh,c
  1019  002F64  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1020  002F66  6EF8               	movwf	tblptru,c
  1021  002F68  0009               	tblrd		*+	;fetch initializer
  1022  002F6A  CFF5 F0FE          	movff	tablat,__pdataBANK0
  1023  002F6E  0009               	tblrd		*+	;fetch initializer
  1024  002F70  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
  1025                           
  1026                           ; Initialize objects allocated to COMRAM (1 bytes)
  1027                           ; load TBLPTR registers with __pidataCOMRAM
  1028  002F74  0EDC               	movlw	low __pidataCOMRAM
  1029  002F76  6EF6               	movwf	tblptrl,c
  1030  002F78  0E3A               	movlw	high __pidataCOMRAM
  1031  002F7A  6EF7               	movwf	tblptrh,c
  1032  002F7C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1033  002F7E  6EF8               	movwf	tblptru,c
  1034  002F80  0009               	tblrd		*+	;fetch initializer
  1035  002F82  CFF5 F049          	movff	tablat,__pdataCOMRAM
  1036  002F86                     end_of_initialization:
  1037                           	opt stack 0
  1038  002F86                     __end_of__initialization:
  1039                           	opt stack 0
  1040  002F86  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1041  002F88  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1042  002F8A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1043  002F8C  6EF8               	movwf	tblptru,c
  1044  002F8E  0100               	movlb	0
  1045  002F90  EFA9  F01C         	goto	_main	;jump to C main() function
  1046                           tblptru	equ	0xFF8
  1047                           tblptrh	equ	0xFF7
  1048                           tblptrl	equ	0xFF6
  1049                           tablat	equ	0xFF5
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postdec1	equ	0xFE5
  1053                           fsr1h	equ	0xFE2
  1054                           fsr1l	equ	0xFE1
  1055                           
  1056                           	psect	bssCOMRAM
  1057  000033                     __pbssCOMRAM:
  1058                           	opt stack 0
  1059  000033                     _MACRxPacket:
  1060                           	opt stack 0
  1061  000033                     	ds	11
  1062  00003E                     _IEEESeqNum:
  1063                           	opt stack 0
  1064  00003E                     	ds	1
  1065  00003F                     _MRF24J40Status:
  1066                           	opt stack 0
  1067  00003F                     	ds	1
  1068  000040                     _i:
  1069                           	opt stack 0
  1070  000040                     	ds	1
  1071  000041                     _timerExtension1:
  1072                           	opt stack 0
  1073  000041                     	ds	1
  1074  000042                     _timerExtension2:
  1075                           	opt stack 0
  1076  000042                     	ds	1
  1077  000043                     _MAC_PANID:
  1078                           	opt stack 0
  1079  000043                     	ds	2
  1080  000045                     _myNetworkAddress:
  1081                           	opt stack 0
  1082  000045                     	ds	2
  1083  000047                     _conn_size:
  1084                           	opt stack 0
  1085  000047                     	ds	1
  1086  000048                     _role:
  1087                           	opt stack 0
  1088  000048                     	ds	1
  1089                           tblptru	equ	0xFF8
  1090                           tblptrh	equ	0xFF7
  1091                           tblptrl	equ	0xFF6
  1092                           tablat	equ	0xFF5
  1093                           postinc0	equ	0xFEE
  1094                           wreg	equ	0xFE8
  1095                           postdec1	equ	0xFE5
  1096                           fsr1h	equ	0xFE2
  1097                           fsr1l	equ	0xFE1
  1098                           
  1099                           	psect	dataCOMRAM
  1100  000049                     __pdataCOMRAM:
  1101                           	opt stack 0
  1102  000049                     _BankIndex:
  1103                           	opt stack 0
  1104  000049                     	ds	1
  1105                           tblptru	equ	0xFF8
  1106                           tblptrh	equ	0xFF7
  1107                           tblptrl	equ	0xFF6
  1108                           tablat	equ	0xFF5
  1109                           postinc0	equ	0xFEE
  1110                           wreg	equ	0xFE8
  1111                           postdec1	equ	0xFE5
  1112                           fsr1h	equ	0xFE2
  1113                           fsr1l	equ	0xFE1
  1114                           
  1115                           	psect	bssBANK0
  1116  0000BC                     __pbssBANK0:
  1117                           	opt stack 0
  1118  0000BC                     _rxMessage:
  1119                           	opt stack 0
  1120  0000BC                     	ds	10
  1121  0000C6                     _nvmDelayTick:
  1122                           	opt stack 0
  1123  0000C6                     	ds	4
  1124  0000CA                     _tick1:
  1125                           	opt stack 0
  1126  0000CA                     	ds	4
  1127  0000CE                     _tick4:
  1128                           	opt stack 0
  1129  0000CE                     	ds	4
  1130  0000D2                     _MACInitParams:
  1131                           	opt stack 0
  1132  0000D2                     	ds	3
  1133  0000D5                     _failureCounter:
  1134                           	opt stack 0
  1135  0000D5                     	ds	2
  1136  0000D7                     _nextEEPosition:
  1137                           	opt stack 0
  1138  0000D7                     	ds	2
  1139  0000D9                     _timer1ReloadVal:
  1140                           	opt stack 0
  1141  0000D9                     	ds	2
  1142  0000DB                     _LatestConnection:
  1143                           	opt stack 0
  1144  0000DB                     	ds	1
  1145  0000DC                     _MACCurrentChannel:
  1146                           	opt stack 0
  1147  0000DC                     	ds	1
  1148  0000DD                     _MyindexinPC:
  1149                           	opt stack 0
  1150  0000DD                     	ds	1
  1151  0000DE                     _P2PCapacityInfo:
  1152                           	opt stack 0
  1153  0000DE                     	ds	1
  1154  0000DF                     _P2PStatus:
  1155                           	opt stack 0
  1156  0000DF                     	ds	1
  1157  0000E0                     _PUSH_BUTTON_pressed:
  1158                           	opt stack 0
  1159  0000E0                     	ds	1
  1160  0000E1                     _RxNum:
  1161                           	opt stack 0
  1162  0000E1                     	ds	1
  1163  0000E2                     _TxData:
  1164                           	opt stack 0
  1165  0000E2                     	ds	1
  1166  0000E3                     _TxNum:
  1167                           	opt stack 0
  1168  0000E3                     	ds	1
  1169  0000E4                     _TxSynCount:
  1170                           	opt stack 0
  1171  0000E4                     	ds	1
  1172  0000E5                     _chk_sel_status:
  1173                           	opt stack 0
  1174  0000E5                     	ds	1
  1175  0000E6                     _display_connections:
  1176                           	opt stack 0
  1177  0000E6                     	ds	1
  1178  0000E7                     _end_nodes:
  1179                           	opt stack 0
  1180  0000E7                     	ds	1
  1181  0000E8                     _lost_connection:
  1182                           	opt stack 0
  1183  0000E8                     	ds	1
  1184  0000E9                     _rec_ack:
  1185                           	opt stack 0
  1186  0000E9                     	ds	1
  1187  0000EA                     _myPANID:
  1188                           	opt stack 0
  1189  0000EA                     	ds	2
  1190  0000EC                     _nvmConnMode:
  1191                           	opt stack 0
  1192  0000EC                     	ds	2
  1193  0000EE                     _nvmConnectionTable:
  1194                           	opt stack 0
  1195  0000EE                     	ds	2
  1196  0000F0                     _nvmCurrentChannel:
  1197                           	opt stack 0
  1198  0000F0                     	ds	2
  1199  0000F2                     _nvmEdc:
  1200                           	opt stack 0
  1201  0000F2                     	ds	2
  1202  0000F4                     _nvmMyPANID:
  1203                           	opt stack 0
  1204  0000F4                     	ds	2
  1205  0000F6                     _nvmOutFrameCounter:
  1206                           	opt stack 0
  1207  0000F6                     	ds	2
  1208  0000F8                     _nvmRole:
  1209                           	opt stack 0
  1210  0000F8                     	ds	2
  1211  0000FA                     _nvmmyIndex:
  1212                           	opt stack 0
  1213  0000FA                     	ds	2
  1214  0000FC                     _currentChannel:
  1215                           	opt stack 0
  1216  0000FC                     	ds	1
  1217  0000FD                     _myConnectionIndex_in_PanCo:
  1218                           	opt stack 0
  1219  0000FD                     	ds	1
  1220                           tblptru	equ	0xFF8
  1221                           tblptrh	equ	0xFF7
  1222                           tblptrl	equ	0xFF6
  1223                           tablat	equ	0xFF5
  1224                           postinc0	equ	0xFEE
  1225                           wreg	equ	0xFE8
  1226                           postdec1	equ	0xFE5
  1227                           fsr1h	equ	0xFE2
  1228                           fsr1l	equ	0xFE1
  1229                           
  1230                           	psect	dataBANK0
  1231  0000FE                     __pdataBANK0:
  1232                           	opt stack 0
  1233  0000FE                     _AdditionalNodeID:
  1234                           	opt stack 0
  1235  0000FE                     	ds	1
  1236  0000FF                     _ConnMode:
  1237                           	opt stack 0
  1238  0000FF                     	ds	1
  1239                           tblptru	equ	0xFF8
  1240                           tblptrh	equ	0xFF7
  1241                           tblptrl	equ	0xFF6
  1242                           tablat	equ	0xFF5
  1243                           postinc0	equ	0xFEE
  1244                           wreg	equ	0xFE8
  1245                           postdec1	equ	0xFE5
  1246                           fsr1h	equ	0xFE2
  1247                           fsr1l	equ	0xFE1
  1248                           
  1249                           	psect	bssBANK1
  1250  000100                     __pbssBANK1:
  1251                           	opt stack 0
  1252  000100                     _PUSH_BUTTON_press_time:
  1253                           	opt stack 0
  1254  000100                     	ds	4
  1255  000104                     _t1:
  1256                           	opt stack 0
  1257  000104                     	ds	4
  1258  000108                     _t2:
  1259                           	opt stack 0
  1260  000108                     	ds	4
  1261  00010C                     _RxBuffer:
  1262                           	opt stack 0
  1263  00010C                     	ds	138
  1264  000196                     _TxBuffer:
  1265                           	opt stack 0
  1266  000196                     	ds	40
  1267  0001BE                     _LCDText:
  1268                           	opt stack 0
  1269  0001BE                     	ds	33
  1270  0001DF                     _myLongAddress:
  1271                           	opt stack 0
  1272  0001DF                     	ds	8
  1273                           tblptru	equ	0xFF8
  1274                           tblptrh	equ	0xFF7
  1275                           tblptrl	equ	0xFF6
  1276                           tablat	equ	0xFF5
  1277                           postinc0	equ	0xFEE
  1278                           wreg	equ	0xFE8
  1279                           postdec1	equ	0xFE5
  1280                           fsr1h	equ	0xFE2
  1281                           fsr1l	equ	0xFE1
  1282                           
  1283                           	psect	bssBANK2
  1284  000200                     __pbssBANK2:
  1285                           	opt stack 0
  1286  000200                     _END_DEVICES_Short_Address:
  1287                           	opt stack 0
  1288  000200                     	ds	80
  1289  000250                     _link_stat:
  1290                           	opt stack 0
  1291  000250                     	ds	20
  1292  000264                     _permanent_connections:
  1293                           	opt stack 0
  1294  000264                     	ds	20
  1295                           tblptru	equ	0xFF8
  1296                           tblptrh	equ	0xFF7
  1297                           tblptrl	equ	0xFF6
  1298                           tablat	equ	0xFF5
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           fsr1h	equ	0xFE2
  1303                           fsr1l	equ	0xFE1
  1304                           
  1305                           	psect	bssBIGRAM
  1306  000278                     __pbssBIGRAM:
  1307                           	opt stack 0
  1308  000278                     _ConnectionTable:
  1309                           	opt stack 0
  1310  000278                     	ds	280
  1311                           tblptru	equ	0xFF8
  1312                           tblptrh	equ	0xFF7
  1313                           tblptrl	equ	0xFF6
  1314                           tablat	equ	0xFF5
  1315                           postinc0	equ	0xFEE
  1316                           wreg	equ	0xFE8
  1317                           postdec1	equ	0xFE5
  1318                           fsr1h	equ	0xFE2
  1319                           fsr1l	equ	0xFE1
  1320                           
  1321                           	psect	cstackBANK1
  1322  0001E7                     __pcstackBANK1:
  1323                           	opt stack 0
  1324  0001E7                     MiApp_UnicastStar@SecEn:
  1325                           	opt stack 0
  1326  0001E7                     MiApp_EstablishConnection@tmpConnectionMode:
  1327                           	opt stack 0
  1328                           
  1329                           ; 1 bytes @ 0x0
  1330  0001E7                     	ds	1
  1331  0001E8                     MiApp_EstablishConnection@retry:
  1332                           	opt stack 0
  1333  0001E8                     MiApp_UnicastStar@t1:
  1334                           	opt stack 0
  1335                           
  1336                           ; 4 bytes @ 0x1
  1337  0001E8                     	ds	1
  1338  0001E9                     MiApp_EstablishConnection@connectionInterval:
  1339                           	opt stack 0
  1340                           
  1341                           ; 1 bytes @ 0x2
  1342  0001E9                     	ds	1
  1343  0001EA                     MiApp_EstablishConnection@t1:
  1344                           	opt stack 0
  1345                           
  1346                           ; 4 bytes @ 0x3
  1347  0001EA                     	ds	2
  1348  0001EC                     MiApp_UnicastStar@t2:
  1349                           	opt stack 0
  1350                           
  1351                           ; 4 bytes @ 0x5
  1352  0001EC                     	ds	2
  1353  0001EE                     MiApp_EstablishConnection@t2:
  1354                           	opt stack 0
  1355                           
  1356                           ; 4 bytes @ 0x7
  1357  0001EE                     	ds	4
  1358  0001F2                     MiApp_EstablishConnection@i:
  1359                           	opt stack 0
  1360                           
  1361                           ; 1 bytes @ 0xB
  1362  0001F2                     	ds	1
  1363  0001F3                     run_star_demo@sw_layer_ack_status:
  1364                           	opt stack 0
  1365                           
  1366                           ; 1 bytes @ 0xC
  1367  0001F3                     	ds	1
  1368  0001F4                     run_star_demo@update_ed:
  1369                           	opt stack 0
  1370                           
  1371                           ; 1 bytes @ 0xD
  1372  0001F4                     	ds	1
  1373  0001F5                     run_star_demo@PressedButton:
  1374                           	opt stack 0
  1375                           
  1376                           ; 1 bytes @ 0xE
  1377  0001F5                     	ds	1
  1378  0001F6                     run_star_demo@switch_val:
  1379                           	opt stack 0
  1380                           
  1381                           ; 1 bytes @ 0xF
  1382  0001F6                     	ds	1
  1383  0001F7                     run_star_demo@select_ed:
  1384                           	opt stack 0
  1385                           
  1386                           ; 1 bytes @ 0x10
  1387  0001F7                     	ds	1
  1388  0001F8                     main@freezer_enable:
  1389                           	opt stack 0
  1390                           
  1391                           ; 1 bytes @ 0x11
  1392  0001F8                     	ds	1
  1393                           tblptru	equ	0xFF8
  1394                           tblptrh	equ	0xFF7
  1395                           tblptrl	equ	0xFF6
  1396                           tablat	equ	0xFF5
  1397                           postinc0	equ	0xFEE
  1398                           wreg	equ	0xFE8
  1399                           postdec1	equ	0xFE5
  1400                           fsr1h	equ	0xFE2
  1401                           fsr1l	equ	0xFE1
  1402                           
  1403                           	psect	cstackBANK0
  1404  000060                     __pcstackBANK0:
  1405                           	opt stack 0
  1406  000060                     sprintf@idx:
  1407                           	opt stack 0
  1408  000060                     MiMAC_Init@initValue:
  1409                           	opt stack 0
  1410  000060                     MiMAC_SendPacket@transParam:
  1411                           	opt stack 0
  1412                           
  1413                           ; 7 bytes @ 0x0
  1414  000060                     	ds	1
  1415  000061                     _sprintf$3880:
  1416                           	opt stack 0
  1417                           
  1418                           ; 2 bytes @ 0x1
  1419  000061                     	ds	2
  1420  000063                     MiMAC_Init@i:
  1421                           	opt stack 0
  1422  000063                     _sprintf$3881:
  1423                           	opt stack 0
  1424                           
  1425                           ; 2 bytes @ 0x3
  1426  000063                     	ds	1
  1427  000064                     MiApp_ProtocolInit@tmp:
  1428                           	opt stack 0
  1429                           
  1430                           ; 2 bytes @ 0x4
  1431  000064                     	ds	1
  1432  000065                     _sprintf$3887:
  1433                           	opt stack 0
  1434                           
  1435                           ; 2 bytes @ 0x5
  1436  000065                     	ds	1
  1437  000066                     MiApp_ProtocolInit@bNetworkFreezer:
  1438                           	opt stack 0
  1439                           
  1440                           ; 1 bytes @ 0x6
  1441  000066                     	ds	1
  1442  000067                     sprintf@cp:
  1443                           	opt stack 0
  1444  000067                     MiMAC_SendPacket@MACPayload:
  1445                           	opt stack 0
  1446  000067                     MiApp_ProtocolInit@initValue:
  1447                           	opt stack 0
  1448                           
  1449                           ; 3 bytes @ 0x7
  1450  000067                     	ds	1
  1451  000068                     sprintf@len:
  1452                           	opt stack 0
  1453                           
  1454                           ; 2 bytes @ 0x8
  1455  000068                     	ds	1
  1456  000069                     MiMAC_SendPacket@MACPayloadLen:
  1457                           	opt stack 0
  1458                           
  1459                           ; 1 bytes @ 0x9
  1460  000069                     	ds	1
  1461  00006A                     ??_MiMAC_SendPacket:
  1462  00006A                     MiApp_ProtocolInit@i:
  1463                           	opt stack 0
  1464  00006A                     sprintf@ap:
  1465                           	opt stack 0
  1466                           
  1467                           ; 1 bytes @ 0xA
  1468  00006A                     	ds	1
  1469  00006B                     sprintf@val:
  1470                           	opt stack 0
  1471                           
  1472                           ; 2 bytes @ 0xB
  1473  00006B                     	ds	2
  1474  00006D                     sprintf@prec:
  1475                           	opt stack 0
  1476                           
  1477                           ; 1 bytes @ 0xD
  1478  00006D                     	ds	1
  1479  00006E                     sprintf@width:
  1480                           	opt stack 0
  1481  00006E                     MiMAC_SendPacket@t1:
  1482                           	opt stack 0
  1483                           
  1484                           ; 4 bytes @ 0xE
  1485  00006E                     	ds	2
  1486  000070                     sprintf@c:
  1487                           	opt stack 0
  1488                           
  1489                           ; 1 bytes @ 0x10
  1490  000070                     	ds	1
  1491  000071                     sprintf@flag:
  1492                           	opt stack 0
  1493                           
  1494                           ; 2 bytes @ 0x11
  1495  000071                     	ds	1
  1496  000072                     MiMAC_SendPacket@t2:
  1497                           	opt stack 0
  1498                           
  1499                           ; 4 bytes @ 0x12
  1500  000072                     	ds	1
  1501  000073                     LCDTRXCount@txCount:
  1502                           	opt stack 0
  1503  000073                     LCDDisplay@text:
  1504                           	opt stack 0
  1505  000073                     Source_END_DEVICE_INFO@SrAddr:
  1506                           	opt stack 0
  1507                           
  1508                           ; 2 bytes @ 0x13
  1509  000073                     	ds	1
  1510  000074                     DemoOutput_UpdateTxRx@RxNum:
  1511                           	opt stack 0
  1512                           
  1513                           ; 1 bytes @ 0x14
  1514  000074                     	ds	1
  1515  000075                     LCDDisplay@value:
  1516                           	opt stack 0
  1517  000075                     DemoOutput_UpdateTxRx@TxNum:
  1518                           	opt stack 0
  1519                           
  1520                           ; 1 bytes @ 0x15
  1521  000075                     	ds	1
  1522  000076                     MiMAC_SendPacket@IntraPAN:
  1523                           	opt stack 0
  1524  000076                     LCDDisplay@delay:
  1525                           	opt stack 0
  1526                           
  1527                           ; 1 bytes @ 0x16
  1528  000076                     	ds	1
  1529  000077                     MiMAC_SendPacket@frameControl:
  1530                           	opt stack 0
  1531  000077                     DemoOutput_Channel@Step:
  1532                           	opt stack 0
  1533  000077                     STAR_DEMO_OPTIONS_MESSAGE@NetworkRole:
  1534                           	opt stack 0
  1535  000077                     freezer_feature@PressedButton1:
  1536                           	opt stack 0
  1537                           
  1538                           ; 1 bytes @ 0x17
  1539  000077                     	ds	1
  1540  000078                     MiMAC_SendPacket@headerLength:
  1541                           	opt stack 0
  1542  000078                     DemoOutput_Channel@channel:
  1543                           	opt stack 0
  1544                           
  1545                           ; 1 bytes @ 0x18
  1546  000078                     	ds	1
  1547  000079                     MiMAC_SendPacket@i:
  1548                           	opt stack 0
  1549                           
  1550                           ; 1 bytes @ 0x19
  1551  000079                     	ds	1
  1552  00007A                     MiMAC_SendPacket@loc:
  1553                           	opt stack 0
  1554                           
  1555                           ; 1 bytes @ 0x1A
  1556  00007A                     	ds	1
  1557  00007B                     SendPacket@DestinationPANID:
  1558                           	opt stack 0
  1559                           
  1560                           ; 2 bytes @ 0x1B
  1561  00007B                     	ds	2
  1562  00007D                     SendPacket@DestinationAddress:
  1563                           	opt stack 0
  1564                           
  1565                           ; 2 bytes @ 0x1D
  1566  00007D                     	ds	2
  1567  00007F                     SendPacket@isCommand:
  1568                           	opt stack 0
  1569                           
  1570                           ; 1 bytes @ 0x1F
  1571  00007F                     	ds	1
  1572  000080                     SendPacket@SecurityEnabled:
  1573                           	opt stack 0
  1574                           
  1575                           ; 1 bytes @ 0x20
  1576  000080                     	ds	1
  1577  000081                     ??_SendPacket:
  1578                           
  1579                           ; 0 bytes @ 0x21
  1580  000081                     	ds	1
  1581  000082                     SendPacket@status:
  1582                           	opt stack 0
  1583                           
  1584                           ; 1 bytes @ 0x22
  1585  000082                     	ds	1
  1586  000083                     SendPacket@Broadcast:
  1587                           	opt stack 0
  1588                           
  1589                           ; 1 bytes @ 0x23
  1590  000083                     	ds	1
  1591  000084                     SendPacket@tParam:
  1592                           	opt stack 0
  1593                           
  1594                           ; 7 bytes @ 0x24
  1595  000084                     	ds	7
  1596  00008B                     ??_MiApp_BroadcastConnectionTable:
  1597  00008B                     MiApp_BroadcastPacket@SecEn:
  1598                           	opt stack 0
  1599  00008B                     send_link_status@send_status:
  1600                           	opt stack 0
  1601  00008B                     MiApp_UnicastAddress@DestinationAddress:
  1602                           	opt stack 0
  1603  00008B                     SW_Ack_SrED@Dest_Addr:
  1604                           	opt stack 0
  1605  00008B                     MiApp_RemoveConnection@j:
  1606                           	opt stack 0
  1607                           
  1608                           ; 2 bytes @ 0x2B
  1609  00008B                     	ds	2
  1610  00008D                     MiApp_UnicastAddress@PermanentAddr:
  1611                           	opt stack 0
  1612  00008D                     MiApp_RemoveConnection@j_1690:
  1613                           	opt stack 0
  1614                           
  1615                           ; 2 bytes @ 0x2D
  1616  00008D                     	ds	1
  1617  00008E                     MiApp_UnicastAddress@SecEn:
  1618                           	opt stack 0
  1619                           
  1620                           ; 1 bytes @ 0x2E
  1621  00008E                     	ds	1
  1622  00008F                     MiApp_UnicastConnection@SecEn:
  1623                           	opt stack 0
  1624  00008F                     MiApp_RemoveConnection@ConnectionIndex:
  1625                           	opt stack 0
  1626                           
  1627                           ; 1 bytes @ 0x2F
  1628  00008F                     	ds	1
  1629  000090                     MiApp_UnicastConnection@ConnectionIndex:
  1630                           	opt stack 0
  1631  000090                     MiApp_RemoveConnection@i:
  1632                           	opt stack 0
  1633                           
  1634                           ; 1 bytes @ 0x30
  1635  000090                     	ds	1
  1636  000091                     Forward_Packet_PANCr_to_EDy@fw_payload:
  1637                           	opt stack 0
  1638                           
  1639                           ; 2 bytes @ 0x31
  1640  000091                     	ds	1
  1641  000092                     MiApp_BroadcastConnectionTable@count:
  1642                           	opt stack 0
  1643  000092                     Find_InActiveDevices@i:
  1644                           	opt stack 0
  1645                           
  1646                           ; 1 bytes @ 0x32
  1647  000092                     	ds	1
  1648  000093                     Forward_Packet_PANCr_to_EDy@index:
  1649                           	opt stack 0
  1650  000093                     MiApp_BroadcastConnectionTable@broadcast_count:
  1651                           	opt stack 0
  1652                           
  1653                           ; 1 bytes @ 0x33
  1654  000093                     	ds	1
  1655  000094                     MiApp_BroadcastConnectionTable@k:
  1656                           	opt stack 0
  1657  000094                     Forward_Packet_PANCr_to_EDy@EDxAddress:
  1658                           	opt stack 0
  1659                           
  1660                           ; 2 bytes @ 0x34
  1661  000094                     	ds	1
  1662  000095                     MiApp_BroadcastConnectionTable@i:
  1663                           	opt stack 0
  1664                           
  1665                           ; 1 bytes @ 0x35
  1666  000095                     	ds	1
  1667  000096                     Forward_Packet_PANCr_to_EDy@status:
  1668                           	opt stack 0
  1669  000096                     MiApp_BroadcastConnectionTable@j:
  1670                           	opt stack 0
  1671                           
  1672                           ; 1 bytes @ 0x36
  1673  000096                     	ds	1
  1674  000097                     Forward_Packet_PANCr_to_EDy@i:
  1675                           	opt stack 0
  1676                           
  1677                           ; 1 bytes @ 0x37
  1678  000097                     	ds	1
  1679  000098                     ??_P2PTasks:
  1680                           
  1681                           ; 0 bytes @ 0x38
  1682  000098                     	ds	4
  1683  00009C                     P2PTasks@tmpTick:
  1684                           	opt stack 0
  1685                           
  1686                           ; 4 bytes @ 0x3C
  1687  00009C                     	ds	4
  1688  0000A0                     P2PTasks@FW_Stat:
  1689                           	opt stack 0
  1690                           
  1691                           ; 1 bytes @ 0x40
  1692  0000A0                     	ds	1
  1693  0000A1                     P2PTasks@tmp:
  1694                           	opt stack 0
  1695                           
  1696                           ; 2 bytes @ 0x41
  1697  0000A1                     	ds	2
  1698  0000A3                     P2PTasks@tick2:
  1699                           	opt stack 0
  1700                           
  1701                           ; 4 bytes @ 0x43
  1702  0000A3                     	ds	4
  1703  0000A7                     P2PTasks@final_index:
  1704                           	opt stack 0
  1705                           
  1706                           ; 1 bytes @ 0x47
  1707  0000A7                     	ds	1
  1708  0000A8                     P2PTasks@tick3:
  1709                           	opt stack 0
  1710                           
  1711                           ; 4 bytes @ 0x48
  1712  0000A8                     	ds	4
  1713  0000AC                     P2PTasks@p:
  1714                           	opt stack 0
  1715                           
  1716                           ; 1 bytes @ 0x4C
  1717  0000AC                     	ds	1
  1718  0000AD                     P2PTasks@p_1519:
  1719                           	opt stack 0
  1720                           
  1721                           ; 1 bytes @ 0x4D
  1722  0000AD                     	ds	1
  1723  0000AE                     P2PTasks@status:
  1724                           	opt stack 0
  1725                           
  1726                           ; 1 bytes @ 0x4E
  1727  0000AE                     	ds	1
  1728  0000AF                     P2PTasks@i:
  1729                           	opt stack 0
  1730                           
  1731                           ; 1 bytes @ 0x4F
  1732  0000AF                     	ds	1
  1733  0000B0                     ??_MiApp_UnicastStar:
  1734  0000B0                     MiApp_EstablishConnection@Mode:
  1735                           	opt stack 0
  1736  0000B0                     Process_RxMessage@User_data_status:
  1737                           	opt stack 0
  1738                           
  1739                           ; 1 bytes @ 0x50
  1740  0000B0                     	ds	1
  1741  0000B1                     ??_MiApp_EstablishConnection:
  1742                           
  1743                           ; 0 bytes @ 0x51
  1744  0000B1                     	ds	4
  1745  0000B5                     ??_run_star_demo:
  1746  0000B5                     Initialize_Demo@freezer_enable:
  1747                           	opt stack 0
  1748                           
  1749                           ; 1 bytes @ 0x55
  1750  0000B5                     	ds	7
  1751                           tblptru	equ	0xFF8
  1752                           tblptrh	equ	0xFF7
  1753                           tblptrl	equ	0xFF6
  1754                           tablat	equ	0xFF5
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           postdec1	equ	0xFE5
  1758                           fsr1h	equ	0xFE2
  1759                           fsr1l	equ	0xFE1
  1760                           
  1761                           	psect	cstackCOMRAM
  1762  000001                     __pcstackCOMRAM:
  1763                           	opt stack 0
  1764  000001                     i2SPI1_Exchange8bit@data:
  1765                           	opt stack 0
  1766                           
  1767                           ; 1 bytes @ 0x0
  1768  000001                     	ds	1
  1769  000002                     i2PHYSetShortRAMAddr@value:
  1770                           	opt stack 0
  1771  000002                     i2PHYGetShortRAMAddr@address:
  1772                           	opt stack 0
  1773  000002                     i2PHYGetLongRAMAddr@address:
  1774                           	opt stack 0
  1775                           
  1776                           ; 2 bytes @ 0x1
  1777  000002                     	ds	1
  1778  000003                     i2PHYSetShortRAMAddr@address:
  1779                           	opt stack 0
  1780  000003                     i2PHYGetShortRAMAddr@toReturn:
  1781                           	opt stack 0
  1782                           
  1783                           ; 1 bytes @ 0x2
  1784  000003                     	ds	1
  1785  000004                     ??i2_PHYGetLongRAMAddr:
  1786  000004                     i2PHYSetShortRAMAddr@tmpRFIE:
  1787                           	opt stack 0
  1788  000004                     i2PHYGetShortRAMAddr@tmpRFIE:
  1789                           	opt stack 0
  1790                           
  1791                           ; 1 bytes @ 0x3
  1792  000004                     	ds	2
  1793  000006                     i2PHYGetLongRAMAddr@toReturn:
  1794                           	opt stack 0
  1795                           
  1796                           ; 1 bytes @ 0x5
  1797  000006                     	ds	1
  1798  000007                     i2PHYGetLongRAMAddr@tmpRFIE:
  1799                           	opt stack 0
  1800                           
  1801                           ; 1 bytes @ 0x6
  1802  000007                     	ds	1
  1803  000008                     ??_high_isr:
  1804                           
  1805                           ; 0 bytes @ 0x7
  1806  000008                     	ds	9
  1807  000011                     high_isr@results:
  1808                           	opt stack 0
  1809                           
  1810                           ; 1 bytes @ 0x10
  1811  000011                     	ds	1
  1812  000012                     high_isr@flags:
  1813                           	opt stack 0
  1814                           
  1815                           ; 2 bytes @ 0x11
  1816  000012                     	ds	2
  1817  000014                     high_isr@RxBank:
  1818                           	opt stack 0
  1819                           
  1820                           ; 1 bytes @ 0x13
  1821  000014                     	ds	1
  1822  000015                     high_isr@i:
  1823                           	opt stack 0
  1824                           
  1825                           ; 1 bytes @ 0x14
  1826  000015                     	ds	1
  1827  000016                     ??_isdigit:
  1828  000016                     ??_MiMAC_ReceivedPacket:
  1829  000016                     ??_handle_lost_connection:
  1830  000016                     ?___wmul:
  1831                           	opt stack 0
  1832  000016                     ?___awdiv:
  1833                           	opt stack 0
  1834  000016                     ?___awmod:
  1835                           	opt stack 0
  1836  000016                     ?___lwdiv:
  1837                           	opt stack 0
  1838  000016                     ?_MiWi_TickGet:
  1839                           	opt stack 0
  1840  000016                     Total_Connections@count:
  1841                           	opt stack 0
  1842  000016                     SPI1_Exchange8bit@data:
  1843                           	opt stack 0
  1844  000016                     SPIPut2@v:
  1845                           	opt stack 0
  1846  000016                     ___lbmod@divisor:
  1847                           	opt stack 0
  1848  000016                     NVMalloc@size:
  1849                           	opt stack 0
  1850  000016                     Find_Index@DestAddr:
  1851                           	opt stack 0
  1852  000016                     isSameAddress@Address1:
  1853                           	opt stack 0
  1854  000016                     DELAY_ms@ms:
  1855                           	opt stack 0
  1856  000016                     ___wmul@multiplier:
  1857                           	opt stack 0
  1858  000016                     ___awdiv@dividend:
  1859                           	opt stack 0
  1860  000016                     ___awmod@dividend:
  1861                           	opt stack 0
  1862  000016                     ___lwdiv@dividend:
  1863                           	opt stack 0
  1864  000016                     memset@p1:
  1865                           	opt stack 0
  1866                           
  1867                           ; 2 bytes @ 0x15
  1868  000016                     	ds	1
  1869  000017                     PHYSetShortRAMAddr@value:
  1870                           	opt stack 0
  1871  000017                     PHYGetShortRAMAddr@address:
  1872                           	opt stack 0
  1873  000017                     Total_Connections@i:
  1874                           	opt stack 0
  1875  000017                     LCD_WriteCmd@data:
  1876                           	opt stack 0
  1877  000017                     LCD_WriteData@data:
  1878                           	opt stack 0
  1879  000017                     _isdigit$4111:
  1880                           	opt stack 0
  1881  000017                     ___lbmod@dividend:
  1882                           	opt stack 0
  1883  000017                     PHYSetLongRAMAddr@address:
  1884                           	opt stack 0
  1885  000017                     PHYGetLongRAMAddr@address:
  1886                           	opt stack 0
  1887  000017                     EEPROM_Read@dest:
  1888                           	opt stack 0
  1889  000017                     EEPROM_Write@dest:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x16
  1893  000017                     	ds	1
  1894  000018                     ??_DELAY_ms:
  1895  000018                     PHYSetShortRAMAddr@address:
  1896                           	opt stack 0
  1897  000018                     PHYGetShortRAMAddr@toReturn:
  1898                           	opt stack 0
  1899  000018                     NVMalloc@location:
  1900                           	opt stack 0
  1901  000018                     LCD_Update@i:
  1902                           	opt stack 0
  1903  000018                     isdigit@c:
  1904                           	opt stack 0
  1905  000018                     ___lbmod@counter:
  1906                           	opt stack 0
  1907  000018                     isSameAddress@Address2:
  1908                           	opt stack 0
  1909  000018                     ___wmul@multiplicand:
  1910                           	opt stack 0
  1911  000018                     ___awdiv@divisor:
  1912                           	opt stack 0
  1913  000018                     ___awmod@divisor:
  1914                           	opt stack 0
  1915  000018                     ___lwdiv@divisor:
  1916                           	opt stack 0
  1917  000018                     memset@c:
  1918                           	opt stack 0
  1919                           
  1920                           ; 2 bytes @ 0x17
  1921  000018                     	ds	1
  1922  000019                     ??_PHYGetLongRAMAddr:
  1923  000019                     ??_NVMalloc:
  1924  000019                     PHYSetLongRAMAddr@value:
  1925                           	opt stack 0
  1926  000019                     PHYSetShortRAMAddr@tmpRFIE:
  1927                           	opt stack 0
  1928  000019                     PHYGetShortRAMAddr@tmpRFIE:
  1929                           	opt stack 0
  1930  000019                     EEPROM_Read@addr:
  1931                           	opt stack 0
  1932  000019                     EEPROM_Write@addr:
  1933                           	opt stack 0
  1934  000019                     ___lbmod@rem:
  1935                           	opt stack 0
  1936                           
  1937                           ; 1 bytes @ 0x18
  1938  000019                     	ds	1
  1939  00001A                     ??_MiWi_TickGet:
  1940  00001A                     ??_PHYSetLongRAMAddr:
  1941  00001A                     MiMAC_SetAltAddress@PANID:
  1942                           	opt stack 0
  1943  00001A                     Find_Index@i:
  1944                           	opt stack 0
  1945  00001A                     EEPROM_Read@count:
  1946                           	opt stack 0
  1947  00001A                     EEPROM_Write@count:
  1948                           	opt stack 0
  1949  00001A                     ___awdiv@counter:
  1950                           	opt stack 0
  1951  00001A                     ___awmod@counter:
  1952                           	opt stack 0
  1953  00001A                     ___lwdiv@counter:
  1954                           	opt stack 0
  1955  00001A                     ___wmul@product:
  1956                           	opt stack 0
  1957  00001A                     memset@n:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0x19
  1961  00001A                     	ds	1
  1962  00001B                     ??_EEPROM_Write:
  1963  00001B                     PHYGetLongRAMAddr@toReturn:
  1964                           	opt stack 0
  1965  00001B                     MiMAC_ReceivedPacket@addrMode:
  1966                           	opt stack 0
  1967  00001B                     MiMAC_SetAltAddress@Address:
  1968                           	opt stack 0
  1969  00001B                     NVMInit@result:
  1970                           	opt stack 0
  1971  00001B                     handle_lost_connection@stat:
  1972                           	opt stack 0
  1973  00001B                     MiWi_TickGet@failureCounter:
  1974                           	opt stack 0
  1975  00001B                     ___awdiv@sign:
  1976                           	opt stack 0
  1977  00001B                     ___awmod@sign:
  1978                           	opt stack 0
  1979  00001B                     Read_MAC_Address@myAddress:
  1980                           	opt stack 0
  1981  00001B                     ___lwdiv@quotient:
  1982                           	opt stack 0
  1983                           
  1984                           ; 2 bytes @ 0x1A
  1985  00001B                     	ds	1
  1986  00001C                     PHYSetLongRAMAddr@tmpRFIE:
  1987                           	opt stack 0
  1988  00001C                     PHYGetLongRAMAddr@tmpRFIE:
  1989                           	opt stack 0
  1990  00001C                     MiMAC_ReceivedPacket@i:
  1991                           	opt stack 0
  1992  00001C                     handle_lost_connection@i:
  1993                           	opt stack 0
  1994  00001C                     isSameAddress@i:
  1995                           	opt stack 0
  1996  00001C                     EEPROM_Write@oldRFIE:
  1997                           	opt stack 0
  1998  00001C                     ___awdiv@quotient:
  1999                           	opt stack 0
  2000  00001C                     memset@p:
  2001                           	opt stack 0
  2002  00001C                     MiWi_TickGet@currentTime:
  2003                           	opt stack 0
  2004                           
  2005                           ; 4 bytes @ 0x1B
  2006  00001C                     	ds	1
  2007  00001D                     ??_Read_MAC_Address:
  2008  00001D                     ?___lwmod:
  2009                           	opt stack 0
  2010  00001D                     MiMAC_ReceivedPacket@bIntraPAN:
  2011                           	opt stack 0
  2012  00001D                     MiMAC_SetChannel@offsetFreq:
  2013                           	opt stack 0
  2014  00001D                     EEPROM_Write@PageCounter:
  2015                           	opt stack 0
  2016  00001D                     store_connection_tb@payload:
  2017                           	opt stack 0
  2018  00001D                     ___lwmod@dividend:
  2019                           	opt stack 0
  2020                           
  2021                           ; 2 bytes @ 0x1C
  2022  00001D                     	ds	1
  2023  00001E                     ??_AddConnection:
  2024  00001E                     ??_MiApp_ConnectionMode:
  2025  00001E                     MiMAC_SetChannel@channel:
  2026                           	opt stack 0
  2027                           
  2028                           ; 1 bytes @ 0x1D
  2029  00001E                     	ds	1
  2030  00001F                     ??_InitMRF24J40:
  2031  00001F                     ??_store_connection_tb:
  2032  00001F                     MiApp_SetChannel@channel:
  2033                           	opt stack 0
  2034  00001F                     MiApp_ConnectionMode@Mode:
  2035                           	opt stack 0
  2036  00001F                     Read_MAC_Address@i:
  2037                           	opt stack 0
  2038  00001F                     ___lwmod@divisor:
  2039                           	opt stack 0
  2040                           
  2041                           ; 2 bytes @ 0x1E
  2042  00001F                     	ds	1
  2043  000020                     MiApp_StartConnection@ScanDuration:
  2044                           	opt stack 0
  2045  000020                     InitMRF24J40@_dcnt:
  2046                           	opt stack 0
  2047  000020                     DELAY_ms@cyclesRequiredForEntireDelay:
  2048                           	opt stack 0
  2049  000020                     ButtonPressed@tickDifference:
  2050                           	opt stack 0
  2051                           
  2052                           ; 4 bytes @ 0x1F
  2053  000020                     	ds	1
  2054  000021                     store_connection_tb@j:
  2055                           	opt stack 0
  2056  000021                     ___lwmod@counter:
  2057                           	opt stack 0
  2058  000021                     MiApp_StartConnection@ChannelMap:
  2059                           	opt stack 0
  2060                           
  2061                           ; 4 bytes @ 0x20
  2062  000021                     	ds	1
  2063  000022                     ?_sprintf:
  2064                           	opt stack 0
  2065  000022                     store_connection_tb@i:
  2066                           	opt stack 0
  2067  000022                     AddConnection@status:
  2068                           	opt stack 0
  2069  000022                     sprintf@sp:
  2070                           	opt stack 0
  2071                           
  2072                           ; 2 bytes @ 0x21
  2073  000022                     	ds	1
  2074  000023                     AddConnection@connectionSlot:
  2075                           	opt stack 0
  2076                           
  2077                           ; 1 bytes @ 0x22
  2078  000023                     	ds	1
  2079  000024                     AddConnection@i:
  2080                           	opt stack 0
  2081  000024                     sprintf@f:
  2082                           	opt stack 0
  2083  000024                     InitMRF24J40@_dcnt_705:
  2084                           	opt stack 0
  2085  000024                     ButtonPressed@t:
  2086                           	opt stack 0
  2087                           
  2088                           ; 4 bytes @ 0x23
  2089  000024                     	ds	1
  2090  000025                     MiApp_StartConnection@Mode:
  2091                           	opt stack 0
  2092                           
  2093                           ; 1 bytes @ 0x24
  2094  000025                     	ds	1
  2095  000026                     MiApp_StartConnection@tmp:
  2096                           	opt stack 0
  2097                           
  2098                           ; 2 bytes @ 0x25
  2099  000026                     	ds	2
  2100  000028                     InitMRF24J40@_ms:
  2101                           	opt stack 0
  2102                           
  2103                           ; 4 bytes @ 0x27
  2104  000028                     	ds	4
  2105  00002C                     InitMRF24J40@_ms_706:
  2106                           	opt stack 0
  2107                           
  2108                           ; 4 bytes @ 0x2B
  2109  00002C                     	ds	2
  2110  00002E                     ??_sprintf:
  2111                           
  2112                           ; 0 bytes @ 0x2D
  2113  00002E                     	ds	2
  2114  000030                     InitMRF24J40@j:
  2115                           	opt stack 0
  2116                           
  2117                           ; 2 bytes @ 0x2F
  2118  000030                     	ds	2
  2119  000032                     InitMRF24J40@i:
  2120                           	opt stack 0
  2121  000032                     LCDTRXCount@rxCount:
  2122                           	opt stack 0
  2123  000032                     LCDDisplay@i:
  2124                           	opt stack 0
  2125                           
  2126                           ; 1 bytes @ 0x31
  2127  000032                     	ds	1
  2128  000033                     tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           postinc0	equ	0xFEE
  2133                           wreg	equ	0xFE8
  2134                           postdec1	equ	0xFE5
  2135                           fsr1h	equ	0xFE2
  2136                           fsr1l	equ	0xFE1
  2137                           
  2138                           ; 0 bytes @ 0x32
  2139 ;;
  2140 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2141 ;;
  2142 ;; *************** function _main *****************
  2143 ;; Defined at:
  2144 ;;		line 56 in file "../src/main.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;		None
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  freezer_enab    1   17[BANK1 ] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;		None               void
  2151 ;; Registers used:
  2152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : F/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;Total ram usage:        1 bytes
  2163 ;; Hardware stack levels required when called:   17
  2164 ;; This function calls:
  2165 ;;		_DemoOutput_Greeting
  2166 ;;		_Initialize_Demo
  2167 ;;		_Run_Demo
  2168 ;;		_SYSTEM_Initialize
  2169 ;;		_TMR1_Initialize
  2170 ;;		_freezer_feature
  2171 ;; This function is called by:
  2172 ;;		Startup code after reset
  2173 ;; This function uses a non-reentrant model
  2174 ;;
  2175                           
  2176                           	psect	text0
  2177  003952                     __ptext0:
  2178                           	opt stack 0
  2179  003952                     _main:
  2180                           	opt stack 14
  2181                           
  2182                           ;main.c: 60: SYSTEM_Initialize();
  2183                           
  2184                           ;incstack = 0
  2185  003952  ECFE  F014         	call	_SYSTEM_Initialize	;wreg free
  2186                           
  2187                           ;main.c: 62: TMR1_Initialize();
  2188  003956  EC03  F01D         	call	_TMR1_Initialize	;wreg free
  2189                           
  2190                           ;main.c: 64: DemoOutput_Greeting();
  2191  00395A  ECC9  F01C         	call	_DemoOutput_Greeting	;wreg free
  2192                           
  2193                           ;main.c: 68: freezer_enable = freezer_feature();
  2194  00395E  EC20  F01C         	call	_freezer_feature	;wreg free
  2195  003962  0101               	movlb	1	; () banked
  2196  003964  6FF8               	movwf	main@freezer_enable& (0+255),b
  2197                           
  2198                           ; BSR set to: 1
  2199                           ;main.c: 72: Initialize_Demo(freezer_enable);
  2200  003966  51F8               	movf	main@freezer_enable& (0+255),w,b
  2201  003968  ECED  F015         	call	_Initialize_Demo
  2202  00396C                     l13811:
  2203                           
  2204                           ;main.c: 74: {
  2205                           ;main.c: 76: Run_Demo();
  2206  00396C  EC67  F01D         	call	_Run_Demo	;wreg free
  2207  003970  D7FD               	goto	l13811
  2208  003972                     __end_of_main:
  2209                           	opt stack 0
  2210                           tblptru	equ	0xFF8
  2211                           tblptrh	equ	0xFF7
  2212                           tblptrl	equ	0xFF6
  2213                           tablat	equ	0xFF5
  2214                           postinc0	equ	0xFEE
  2215                           wreg	equ	0xFE8
  2216                           postdec1	equ	0xFE5
  2217                           fsr1h	equ	0xFE2
  2218                           fsr1l	equ	0xFE1
  2219                           
  2220 ;; *************** function _freezer_feature *****************
  2221 ;; Defined at:
  2222 ;;		line 69 in file "../src/task.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  PressedButto    1   23[BANK0 ] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      unsigned char 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : F/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2237 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2239 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2240 ;;Total ram usage:        1 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    7
  2243 ;; This function calls:
  2244 ;;		_ButtonPressed
  2245 ;;		_LCDDisplay
  2246 ;; This function is called by:
  2247 ;;		_main
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           	psect	text1
  2252  003840                     __ptext1:
  2253                           	opt stack 0
  2254  003840                     _freezer_feature:
  2255                           	opt stack 23
  2256                           
  2257                           ;task.c: 74: LCDDisplay((char *)"SW1:New Network SW2:Freezer", 0, 0);
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;incstack = 0
  2261  003840  0E7E               	movlw	low STR_30
  2262  003842  0100               	movlb	0	; () banked
  2263  003844  6F73               	movwf	LCDDisplay@text& (0+255),b
  2264  003846  0EFE               	movlw	high STR_30
  2265  003848  6F74               	movwf	(LCDDisplay@text+1)& (0+255),b
  2266  00384A  6B75               	clrf	LCDDisplay@value& (0+255),b
  2267  00384C  6B76               	clrf	LCDDisplay@delay& (0+255),b
  2268  00384E  EC78  F01A         	call	_LCDDisplay	;wreg free
  2269  003852                     l13743:
  2270                           
  2271                           ;task.c: 77: {
  2272                           ;task.c: 78: uint8_t PressedButton1 = ButtonPressed();
  2273  003852  ECC9  F016         	call	_ButtonPressed	;wreg free
  2274  003856  0100               	movlb	0	; () banked
  2275  003858  6F77               	movwf	freezer_feature@PressedButton1& (0+255),b
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;task.c: 79: if (PressedButton1 == 1)
  2279  00385A  0577               	decf	freezer_feature@PressedButton1& (0+255),w,b
  2280  00385C  E101               	bnz	l13755
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;task.c: 80: {
  2284                           ;task.c: 81: return 0;
  2285  00385E  0C00               	retlw	0
  2286  003860                     l13755:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;task.c: 84: else if (PressedButton1 == 2)
  2290  003860  0E02               	movlw	2
  2291  003862  1977               	xorwf	freezer_feature@PressedButton1& (0+255),w,b
  2292  003864  E1F6               	bnz	l13743
  2293                           
  2294                           ; BSR set to: 0
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;task.c: 85: {
  2298                           ;task.c: 86: return 1;
  2299  003866  0C01               	retlw	1	;funcret
  2300  003868                     __end_of_freezer_feature:
  2301                           	opt stack 0
  2302                           tblptru	equ	0xFF8
  2303                           tblptrh	equ	0xFF7
  2304                           tblptrl	equ	0xFF6
  2305                           tablat	equ	0xFF5
  2306                           postinc0	equ	0xFEE
  2307                           wreg	equ	0xFE8
  2308                           postdec1	equ	0xFE5
  2309                           fsr1h	equ	0xFE2
  2310                           fsr1l	equ	0xFE1
  2311                           
  2312 ;; *************** function _TMR1_Initialize *****************
  2313 ;; Defined at:
  2314 ;;		line 175 in file "../src/system_config/miwikit_pic18f46j50_24j40/symbol.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;		None               void
  2321 ;; Registers used:
  2322 ;;		wreg, status,2
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2332 ;;Total ram usage:        0 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    3
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text2
  2343  003A06                     __ptext2:
  2344                           	opt stack 0
  2345  003A06                     _TMR1_Initialize:
  2346                           	opt stack 27
  2347                           
  2348                           ;symbol.c: 179: T1CON = 0x38;
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;incstack = 0
  2352  003A06  0E38               	movlw	56
  2353  003A08  6ECD               	movwf	4045,c	;volatile
  2354                           
  2355                           ;symbol.c: 182: T1GCON = 0x00;
  2356  003A0A  6A9A               	clrf	3994,c	;volatile
  2357                           
  2358                           ;symbol.c: 185: TMR1H = 0x00;
  2359  003A0C  6ACF               	clrf	4047,c	;volatile
  2360                           
  2361                           ;symbol.c: 188: TMR1L = 0x00;
  2362  003A0E  6ACE               	clrf	4046,c	;volatile
  2363                           
  2364                           ;symbol.c: 191: timer1ReloadVal = TMR1;
  2365  003A10  CFCE F0D9          	movff	4046,_timer1ReloadVal	;volatile
  2366  003A14  CFCF F0DA          	movff	4047,_timer1ReloadVal+1	;volatile
  2367                           
  2368                           ;symbol.c: 194: PIR1bits.TMR1IF = 0;
  2369  003A18  909E               	bcf	3998,0,c	;volatile
  2370                           
  2371                           ;symbol.c: 197: PIE1bits.TMR1IE = 1;
  2372  003A1A  809D               	bsf	3997,0,c	;volatile
  2373                           
  2374                           ;symbol.c: 200: T1CONbits.TMR1ON = 1;
  2375  003A1C  80CD               	bsf	4045,0,c	;volatile
  2376  003A1E  0012               	return		;funcret
  2377  003A20                     __end_of_TMR1_Initialize:
  2378                           	opt stack 0
  2379                           tblptru	equ	0xFF8
  2380                           tblptrh	equ	0xFF7
  2381                           tblptrl	equ	0xFF6
  2382                           tablat	equ	0xFF5
  2383                           postinc0	equ	0xFEE
  2384                           wreg	equ	0xFE8
  2385                           postdec1	equ	0xFE5
  2386                           fsr1h	equ	0xFE2
  2387                           fsr1l	equ	0xFE1
  2388                           
  2389 ;; *************** function _SYSTEM_Initialize *****************
  2390 ;; Defined at:
  2391 ;;		line 47 in file "../src/system_config/miwikit_pic18f46j50_24j40/system.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;		None               void
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2409 ;;Total ram usage:        0 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    6
  2412 ;; This function calls:
  2413 ;;		_DELAY_ms
  2414 ;;		_LCD_Initialize
  2415 ;; This function is called by:
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           	psect	text3
  2421  0029FC                     __ptext3:
  2422                           	opt stack 0
  2423  0029FC                     _SYSTEM_Initialize:
  2424                           	opt stack 24
  2425                           
  2426                           ;system.c: 52: OSCCON = 0x78;
  2427                           
  2428                           ;incstack = 0
  2429  0029FC  0E78               	movlw	120
  2430  0029FE  6ED3               	movwf	4051,c	;volatile
  2431                           
  2432                           ;system.c: 53: OSCTUNEbits.PLLEN = 1;
  2433  002A00  8C9B               	bsf	3995,6,c	;volatile
  2434                           
  2435                           ;system.c: 54: WDTCONbits.SWDTEN = 0;
  2436  002A02  90C0               	bcf	4032,0,c	;volatile
  2437                           
  2438                           ;system.c: 60: EECON2 = 0x55;
  2439  002A04  0E55               	movlw	85
  2440  002A06  6EA7               	movwf	4007,c	;volatile
  2441                           
  2442                           ;system.c: 61: EECON2 = 0xAA;
  2443  002A08  0EAA               	movlw	170
  2444  002A0A  6EA7               	movwf	4007,c	;volatile
  2445                           
  2446                           ;system.c: 62: PPSCONbits.IOLOCK = 0;
  2447  002A0C  010E               	movlb	14	; () banked
  2448  002A0E  91FF               	bcf	255,0,b	;volatile
  2449                           
  2450                           ;system.c: 64: RPINR1 = 17;
  2451  002A10  0E11               	movlw	17
  2452  002A12  6FE7               	movwf	231,b	;volatile
  2453                           
  2454                           ;system.c: 65: RPINR21 = 23;
  2455  002A14  0E17               	movlw	23
  2456  002A16  6FFB               	movwf	251,b	;volatile
  2457                           
  2458                           ;system.c: 66: RPOR21 = 10;
  2459  002A18  0E0A               	movlw	10
  2460  002A1A  6FDB               	movwf	219,b	;volatile
  2461                           
  2462                           ;system.c: 67: RPOR19 = 9;
  2463  002A1C  0E09               	movlw	9
  2464  002A1E  6FD9               	movwf	217,b	;volatile
  2465                           
  2466                           ;system.c: 70: EECON2 = 0x55;
  2467  002A20  0E55               	movlw	85
  2468  002A22  6EA7               	movwf	4007,c	;volatile
  2469                           
  2470                           ;system.c: 71: EECON2 = 0xAA;
  2471  002A24  0EAA               	movlw	170
  2472  002A26  6EA7               	movwf	4007,c	;volatile
  2473                           
  2474                           ; BSR set to: 14
  2475                           ;system.c: 72: PPSCONbits.IOLOCK = 1;
  2476  002A28  81FF               	bsf	255,0,b	;volatile
  2477                           
  2478                           ;system.c: 77: ANCON0 = 0xFC;
  2479  002A2A  0EFC               	movlw	252
  2480  002A2C  010F               	movlb	15	; () banked
  2481  002A2E  6F48               	movwf	72,b	;volatile
  2482                           
  2483                           ;system.c: 78: ANCON1 = 0x1F;
  2484  002A30  0E1F               	movlw	31
  2485  002A32  6F49               	movwf	73,b	;volatile
  2486                           
  2487                           ; BSR set to: 15
  2488                           ;system.c: 83: LATCbits.LATC2 = 0;
  2489  002A34  948B               	bcf	3979,2,c	;volatile
  2490                           
  2491                           ; BSR set to: 15
  2492                           ;system.c: 84: LATAbits.LATA6 = 0;
  2493  002A36  9C89               	bcf	3977,6,c	;volatile
  2494                           
  2495                           ; BSR set to: 15
  2496                           ;system.c: 85: LATAbits.LATA7 = 0;
  2497  002A38  9E89               	bcf	3977,7,c	;volatile
  2498                           
  2499                           ; BSR set to: 15
  2500                           ;system.c: 86: TRISCbits.TRISC2 = 0;
  2501  002A3A  9494               	bcf	3988,2,c	;volatile
  2502                           
  2503                           ; BSR set to: 15
  2504                           ;system.c: 87: TRISAbits.TRISA6 = 0;
  2505  002A3C  9C92               	bcf	3986,6,c	;volatile
  2506                           
  2507                           ; BSR set to: 15
  2508                           ;system.c: 88: TRISAbits.TRISA7 = 0;
  2509  002A3E  9E92               	bcf	3986,7,c	;volatile
  2510                           
  2511                           ; BSR set to: 15
  2512                           ;system.c: 90: TRISBbits.TRISB1 = 1;
  2513  002A40  8293               	bsf	3987,1,c	;volatile
  2514                           
  2515                           ; BSR set to: 15
  2516                           ;system.c: 91: TRISBbits.TRISB2 = 1;
  2517  002A42  8493               	bsf	3987,2,c	;volatile
  2518                           
  2519                           ; BSR set to: 15
  2520                           ;system.c: 93: INTCON2bits.RBPU = 0;
  2521  002A44  9EF1               	bcf	intcon2,7,c	;volatile
  2522                           
  2523                           ; BSR set to: 15
  2524                           ;system.c: 98: TRISAbits.TRISA1 = 1;
  2525  002A46  8292               	bsf	3986,1,c	;volatile
  2526                           
  2527                           ; BSR set to: 15
  2528                           ;system.c: 99: TRISAbits.TRISA0 = 1;
  2529  002A48  8092               	bsf	3986,0,c	;volatile
  2530                           
  2531                           ; BSR set to: 15
  2532                           ;system.c: 107: LATAbits.LATA5 = 1;
  2533  002A4A  8A89               	bsf	3977,5,c	;volatile
  2534                           
  2535                           ; BSR set to: 15
  2536                           ;system.c: 108: LATDbits.LATD0 = 1;
  2537  002A4C  808C               	bsf	3980,0,c	;volatile
  2538                           
  2539                           ; BSR set to: 15
  2540                           ;system.c: 109: LATDbits.LATD1 = 1;
  2541  002A4E  828C               	bsf	3980,1,c	;volatile
  2542                           
  2543                           ; BSR set to: 15
  2544                           ;system.c: 111: TRISAbits.TRISA5 = 0;
  2545  002A50  9A92               	bcf	3986,5,c	;volatile
  2546                           
  2547                           ; BSR set to: 15
  2548                           ;system.c: 112: TRISDbits.TRISD0 = 0;
  2549  002A52  9095               	bcf	3989,0,c	;volatile
  2550                           
  2551                           ; BSR set to: 15
  2552                           ;system.c: 113: TRISDbits.TRISD1 = 0;
  2553  002A54  9295               	bcf	3989,1,c	;volatile
  2554                           
  2555                           ; BSR set to: 15
  2556                           ;system.c: 114: TRISBbits.TRISB0 = 1;
  2557  002A56  8093               	bsf	3987,0,c	;volatile
  2558                           
  2559                           ; BSR set to: 15
  2560                           ;system.c: 117: INTCON2bits.INTEDG0 = 0;
  2561  002A58  9CF1               	bcf	intcon2,6,c	;volatile
  2562                           
  2563                           ; BSR set to: 15
  2564                           ;system.c: 119: INTCONbits.INT0IF = 0;
  2565  002A5A  92F2               	bcf	intcon,1,c	;volatile
  2566                           
  2567                           ; BSR set to: 15
  2568                           ;system.c: 120: INTCONbits.INT0IE = 1;
  2569  002A5C  88F2               	bsf	intcon,4,c	;volatile
  2570                           
  2571                           ; BSR set to: 15
  2572                           ;system.c: 125: TRISBbits.TRISB5 = 1;
  2573  002A5E  8A93               	bsf	3987,5,c	;volatile
  2574                           
  2575                           ; BSR set to: 15
  2576                           ;system.c: 126: TRISCbits.TRISC7 = 0;
  2577  002A60  9E94               	bcf	3988,7,c	;volatile
  2578                           
  2579                           ; BSR set to: 15
  2580                           ;system.c: 127: TRISBbits.TRISB4 = 0;
  2581  002A62  9893               	bcf	3987,4,c	;volatile
  2582                           
  2583                           ;system.c: 129: SSP1STAT = 0xC0;
  2584  002A64  0EC0               	movlw	192
  2585  002A66  6EC7               	movwf	4039,c	;volatile
  2586                           
  2587                           ;system.c: 130: SSP1CON1 = 0x20;
  2588  002A68  0E20               	movlw	32
  2589  002A6A  6EC6               	movwf	4038,c	;volatile
  2590                           
  2591                           ; BSR set to: 15
  2592                           ;system.c: 137: LATDbits.LATD5 = 1;
  2593  002A6C  8A8C               	bsf	3980,5,c	;volatile
  2594                           
  2595                           ; BSR set to: 15
  2596                           ;system.c: 138: TRISDbits.TRISD5 = 0;
  2597  002A6E  9A95               	bcf	3989,5,c	;volatile
  2598                           
  2599                           ; BSR set to: 15
  2600                           ;system.c: 139: LATEbits.LATE2 = 1;
  2601  002A70  848D               	bsf	3981,2,c	;volatile
  2602                           
  2603                           ; BSR set to: 15
  2604                           ;system.c: 140: TRISEbits.TRISE2 = 0;
  2605  002A72  9496               	bcf	3990,2,c	;volatile
  2606                           
  2607                           ; BSR set to: 15
  2608                           ;system.c: 146: LATEbits.LATE1 = 0;
  2609  002A74  928D               	bcf	3981,1,c	;volatile
  2610                           
  2611                           ; BSR set to: 15
  2612                           ;system.c: 147: LATDbits.LATD7 = 1;
  2613  002A76  8E8C               	bsf	3980,7,c	;volatile
  2614                           
  2615                           ; BSR set to: 15
  2616                           ;system.c: 148: LATDbits.LATD3 = 0;
  2617  002A78  968C               	bcf	3980,3,c	;volatile
  2618                           
  2619                           ; BSR set to: 15
  2620                           ;system.c: 149: LATEbits.LATE0 = 0;
  2621  002A7A  908D               	bcf	3981,0,c	;volatile
  2622                           
  2623                           ; BSR set to: 15
  2624                           ;system.c: 150: TRISEbits.TRISE1 = 0;
  2625  002A7C  9296               	bcf	3990,1,c	;volatile
  2626                           
  2627                           ; BSR set to: 15
  2628                           ;system.c: 151: TRISDbits.TRISD7 = 0;
  2629  002A7E  9E95               	bcf	3989,7,c	;volatile
  2630                           
  2631                           ; BSR set to: 15
  2632                           ;system.c: 152: TRISDbits.TRISD3 = 0;
  2633  002A80  9695               	bcf	3989,3,c	;volatile
  2634                           
  2635                           ; BSR set to: 15
  2636                           ;system.c: 153: TRISEbits.TRISE0 = 0;
  2637  002A82  9096               	bcf	3990,0,c	;volatile
  2638                           
  2639                           ; BSR set to: 15
  2640                           ;system.c: 159: TRISDbits.TRISD6 = 1;
  2641  002A84  8C95               	bsf	3989,6,c	;volatile
  2642                           
  2643                           ; BSR set to: 15
  2644                           ;system.c: 160: TRISDbits.TRISD2 = 0;
  2645  002A86  9495               	bcf	3989,2,c	;volatile
  2646                           
  2647                           ; BSR set to: 15
  2648                           ;system.c: 161: TRISDbits.TRISD4 = 0;
  2649  002A88  9895               	bcf	3989,4,c	;volatile
  2650                           
  2651                           ; BSR set to: 15
  2652                           ;system.c: 163: SSP2STAT = 0x00;
  2653  002A8A  6A73               	clrf	3955,c	;volatile
  2654                           
  2655                           ;system.c: 164: SSP2CON1 = 0x31;
  2656  002A8C  0E31               	movlw	49
  2657  002A8E  6E72               	movwf	3954,c	;volatile
  2658                           
  2659                           ; BSR set to: 15
  2660                           ;system.c: 166: PIR3bits.SSP2IF = 0;
  2661  002A90  9EA4               	bcf	4004,7,c	;volatile
  2662                           
  2663                           ; BSR set to: 15
  2664                           ;system.c: 167: DELAY_ms(100);
  2665  002A92  6A17               	clrf	DELAY_ms@ms+1,c
  2666  002A94  0E64               	movlw	100
  2667  002A96  6E16               	movwf	DELAY_ms@ms,c
  2668  002A98  ECD5  F013         	call	_DELAY_ms	;wreg free
  2669                           
  2670                           ;system.c: 168: LCD_Initialize();
  2671  002A9C  EC3C  F014         	call	_LCD_Initialize	;wreg free
  2672                           
  2673                           ;system.c: 173: INTCONbits.GIEH = 1;
  2674  002AA0  8EF2               	bsf	intcon,7,c	;volatile
  2675                           
  2676                           ;system.c: 174: INTCONbits.GIEL = 1;
  2677  002AA2  8CF2               	bsf	intcon,6,c	;volatile
  2678  002AA4  0012               	return		;funcret
  2679  002AA6                     __end_of_SYSTEM_Initialize:
  2680                           	opt stack 0
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           intcon	equ	0xFF2
  2686                           intcon2	equ	0xFF1
  2687                           postinc0	equ	0xFEE
  2688                           wreg	equ	0xFE8
  2689                           postdec1	equ	0xFE5
  2690                           fsr1h	equ	0xFE2
  2691                           fsr1l	equ	0xFE1
  2692                           
  2693 ;; *************** function _LCD_Initialize *****************
  2694 ;; Defined at:
  2695 ;;		line 54 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
  2696 ;; Parameters:    Size  Location     Type
  2697 ;;		None
  2698 ;; Auto vars:     Size  Location     Type
  2699 ;;		None
  2700 ;; Return value:  Size  Location     Type
  2701 ;;		None               void
  2702 ;; Registers used:
  2703 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2704 ;; Tracked objects:
  2705 ;;		On entry : 0/F
  2706 ;;		On exit  : 0/0
  2707 ;;		Unchanged: 0/0
  2708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2713 ;;Total ram usage:        0 bytes
  2714 ;; Hardware stack levels used:    1
  2715 ;; Hardware stack levels required when called:    5
  2716 ;; This function calls:
  2717 ;;		_DELAY_ms
  2718 ;;		_LCD_WriteCmd
  2719 ;; This function is called by:
  2720 ;;		_SYSTEM_Initialize
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text4
  2725  002878                     __ptext4:
  2726                           	opt stack 0
  2727  002878                     _LCD_Initialize:
  2728                           	opt stack 24
  2729                           
  2730                           ;lcd.c: 56: LATDbits.LATD7 = 1;
  2731                           
  2732                           ;incstack = 0
  2733  002878  8E8C               	bsf	3980,7,c	;volatile
  2734                           
  2735                           ;lcd.c: 57: LATEbits.LATE0 = 0;
  2736  00287A  908D               	bcf	3981,0,c	;volatile
  2737                           
  2738                           ;lcd.c: 58: DELAY_ms(8);
  2739  00287C  6A17               	clrf	DELAY_ms@ms+1,c
  2740  00287E  0E08               	movlw	8
  2741  002880  6E16               	movwf	DELAY_ms@ms,c
  2742  002882  ECD5  F013         	call	_DELAY_ms	;wreg free
  2743                           
  2744                           ;lcd.c: 59: LATEbits.LATE0 = 1;
  2745  002886  808D               	bsf	3981,0,c	;volatile
  2746                           
  2747                           ;lcd.c: 60: DELAY_ms(80);
  2748  002888  6A17               	clrf	DELAY_ms@ms+1,c
  2749  00288A  0E50               	movlw	80
  2750  00288C  6E16               	movwf	DELAY_ms@ms,c
  2751  00288E  ECD5  F013         	call	_DELAY_ms	;wreg free
  2752                           
  2753                           ;lcd.c: 61: LCD_WriteCmd(0x30);
  2754  002892  0E30               	movlw	48
  2755  002894  EC41  F01D         	call	_LCD_WriteCmd
  2756                           
  2757                           ;lcd.c: 62: DELAY_ms(8);
  2758  002898  6A17               	clrf	DELAY_ms@ms+1,c
  2759  00289A  0E08               	movlw	8
  2760  00289C  6E16               	movwf	DELAY_ms@ms,c
  2761  00289E  ECD5  F013         	call	_DELAY_ms	;wreg free
  2762                           
  2763                           ;lcd.c: 63: LCD_WriteCmd(0x30);
  2764  0028A2  0E30               	movlw	48
  2765  0028A4  EC41  F01D         	call	_LCD_WriteCmd
  2766                           
  2767                           ;lcd.c: 64: DELAY_ms(1);
  2768  0028A8  6A17               	clrf	DELAY_ms@ms+1,c
  2769  0028AA  0E01               	movlw	1
  2770  0028AC  6E16               	movwf	DELAY_ms@ms,c
  2771  0028AE  ECD5  F013         	call	_DELAY_ms	;wreg free
  2772                           
  2773                           ;lcd.c: 65: LCD_WriteCmd(0x30);
  2774  0028B2  0E30               	movlw	48
  2775  0028B4  EC41  F01D         	call	_LCD_WriteCmd
  2776                           
  2777                           ;lcd.c: 66: DELAY_ms(1);
  2778  0028B8  6A17               	clrf	DELAY_ms@ms+1,c
  2779  0028BA  0E01               	movlw	1
  2780  0028BC  6E16               	movwf	DELAY_ms@ms,c
  2781  0028BE  ECD5  F013         	call	_DELAY_ms	;wreg free
  2782                           
  2783                           ;lcd.c: 67: LCD_WriteCmd(0x39);
  2784  0028C2  0E39               	movlw	57
  2785  0028C4  EC41  F01D         	call	_LCD_WriteCmd
  2786                           
  2787                           ;lcd.c: 68: DELAY_ms(1);
  2788  0028C8  6A17               	clrf	DELAY_ms@ms+1,c
  2789  0028CA  0E01               	movlw	1
  2790  0028CC  6E16               	movwf	DELAY_ms@ms,c
  2791  0028CE  ECD5  F013         	call	_DELAY_ms	;wreg free
  2792                           
  2793                           ;lcd.c: 69: LCD_WriteCmd(0x14);
  2794  0028D2  0E14               	movlw	20
  2795  0028D4  EC41  F01D         	call	_LCD_WriteCmd
  2796                           
  2797                           ;lcd.c: 70: DELAY_ms(1);
  2798  0028D8  6A17               	clrf	DELAY_ms@ms+1,c
  2799  0028DA  0E01               	movlw	1
  2800  0028DC  6E16               	movwf	DELAY_ms@ms,c
  2801  0028DE  ECD5  F013         	call	_DELAY_ms	;wreg free
  2802                           
  2803                           ;lcd.c: 71: LCD_WriteCmd(0x56);
  2804  0028E2  0E56               	movlw	86
  2805  0028E4  EC41  F01D         	call	_LCD_WriteCmd
  2806                           
  2807                           ;lcd.c: 72: DELAY_ms(1);
  2808  0028E8  6A17               	clrf	DELAY_ms@ms+1,c
  2809  0028EA  0E01               	movlw	1
  2810  0028EC  6E16               	movwf	DELAY_ms@ms,c
  2811  0028EE  ECD5  F013         	call	_DELAY_ms	;wreg free
  2812                           
  2813                           ;lcd.c: 73: LCD_WriteCmd(0x6D);
  2814  0028F2  0E6D               	movlw	109
  2815  0028F4  EC41  F01D         	call	_LCD_WriteCmd
  2816                           
  2817                           ;lcd.c: 74: DELAY_ms(1);
  2818  0028F8  6A17               	clrf	DELAY_ms@ms+1,c
  2819  0028FA  0E01               	movlw	1
  2820  0028FC  6E16               	movwf	DELAY_ms@ms,c
  2821  0028FE  ECD5  F013         	call	_DELAY_ms	;wreg free
  2822                           
  2823                           ;lcd.c: 75: LCD_WriteCmd(0x70);
  2824  002902  0E70               	movlw	112
  2825  002904  EC41  F01D         	call	_LCD_WriteCmd
  2826                           
  2827                           ;lcd.c: 76: DELAY_ms(1);
  2828  002908  6A17               	clrf	DELAY_ms@ms+1,c
  2829  00290A  0E01               	movlw	1
  2830  00290C  6E16               	movwf	DELAY_ms@ms,c
  2831  00290E  ECD5  F013         	call	_DELAY_ms	;wreg free
  2832                           
  2833                           ;lcd.c: 77: LCD_WriteCmd(0x0E);
  2834  002912  0E0E               	movlw	14
  2835  002914  EC41  F01D         	call	_LCD_WriteCmd
  2836                           
  2837                           ;lcd.c: 78: DELAY_ms(1);
  2838  002918  6A17               	clrf	DELAY_ms@ms+1,c
  2839  00291A  0E01               	movlw	1
  2840  00291C  6E16               	movwf	DELAY_ms@ms,c
  2841  00291E  ECD5  F013         	call	_DELAY_ms	;wreg free
  2842                           
  2843                           ;lcd.c: 79: LCD_WriteCmd(0x06);
  2844  002922  0E06               	movlw	6
  2845  002924  EC41  F01D         	call	_LCD_WriteCmd
  2846                           
  2847                           ;lcd.c: 80: DELAY_ms(1);
  2848  002928  6A17               	clrf	DELAY_ms@ms+1,c
  2849  00292A  0E01               	movlw	1
  2850  00292C  6E16               	movwf	DELAY_ms@ms,c
  2851  00292E  ECD5  F013         	call	_DELAY_ms	;wreg free
  2852                           
  2853                           ;lcd.c: 81: LCD_WriteCmd(0x01);
  2854  002932  0E01               	movlw	1
  2855  002934  EC41  F01D         	call	_LCD_WriteCmd
  2856                           
  2857                           ;lcd.c: 82: DELAY_ms(40);
  2858  002938  6A17               	clrf	DELAY_ms@ms+1,c
  2859  00293A  0E28               	movlw	40
  2860  00293C  6E16               	movwf	DELAY_ms@ms,c
  2861  00293E  EFD5  F013         	goto	_DELAY_ms	;wreg free
  2862  002942                     __end_of_LCD_Initialize:
  2863                           	opt stack 0
  2864                           tblptru	equ	0xFF8
  2865                           tblptrh	equ	0xFF7
  2866                           tblptrl	equ	0xFF6
  2867                           tablat	equ	0xFF5
  2868                           intcon	equ	0xFF2
  2869                           intcon2	equ	0xFF1
  2870                           postinc0	equ	0xFEE
  2871                           wreg	equ	0xFE8
  2872                           postdec1	equ	0xFE5
  2873                           fsr1h	equ	0xFE2
  2874                           fsr1l	equ	0xFE1
  2875                           
  2876 ;; *************** function _Run_Demo *****************
  2877 ;; Defined at:
  2878 ;;		line 282 in file "../src/task.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;		None               void
  2885 ;; Registers used:
  2886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/1
  2889 ;;		On exit  : F/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2896 ;;Total ram usage:        0 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:   16
  2899 ;; This function calls:
  2900 ;;		_run_star_demo
  2901 ;; This function is called by:
  2902 ;;		_main
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text5
  2907  003ACE                     __ptext5:
  2908                           	opt stack 0
  2909  003ACE                     _Run_Demo:
  2910                           	opt stack 14
  2911                           
  2912                           ;task.c: 288: run_star_demo();
  2913                           
  2914                           ;incstack = 0
  2915  003ACE  EF94  F00A         	goto	_run_star_demo	;wreg free
  2916  003AD2                     __end_of_Run_Demo:
  2917                           	opt stack 0
  2918                           tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           intcon	equ	0xFF2
  2923                           intcon2	equ	0xFF1
  2924                           postinc0	equ	0xFEE
  2925                           wreg	equ	0xFE8
  2926                           postdec1	equ	0xFE5
  2927                           fsr1h	equ	0xFE2
  2928                           fsr1l	equ	0xFE1
  2929                           
  2930 ;; *************** function _run_star_demo *****************
  2931 ;; Defined at:
  2932 ;;		line 112 in file "../src/star_demo.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  switch_val      1   15[BANK1 ] unsigned char 
  2937 ;;  sw_layer_ack    1   12[BANK1 ] unsigned char 
  2938 ;;  mac_ack_stat    1    0        unsigned char 
  2939 ;;  select_ed       1   16[BANK1 ] unsigned char 
  2940 ;;  update_ed       1   13[BANK1 ] unsigned char 
  2941 ;;  PressedButto    1   14[BANK1 ] unsigned char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;		None               void
  2944 ;; Registers used:
  2945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/1
  2948 ;;		On exit  : F/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2952 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2953 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2954 ;;      Totals:         0       7       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2955 ;;Total ram usage:       12 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:   15
  2958 ;; This function calls:
  2959 ;;		_ButtonPressed
  2960 ;;		_DELAY_ms
  2961 ;;		_DemoOutput_UpdateTxRx
  2962 ;;		_LCDDisplay
  2963 ;;		_LCD_Erase
  2964 ;;		_LCD_Update
  2965 ;;		_MiApp_BroadcastPacket
  2966 ;;		_MiApp_EstablishConnection
  2967 ;;		_MiApp_UnicastConnection
  2968 ;;		_MiApp_UnicastStar
  2969 ;;		_MiWi_TickGet
  2970 ;;		_Process_RxMessage
  2971 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  2972 ;;		___lbmod
  2973 ;;		_sprintf
  2974 ;; This function is called by:
  2975 ;;		_Run_Demo
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text6
  2980  001528                     __ptext6:
  2981                           	opt stack 0
  2982  001528                     _run_star_demo:
  2983                           	opt stack 14
  2984                           
  2985                           ;star_demo.c: 114: t1 = MiWi_TickGet ();
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;incstack = 0
  2989  001528  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  2990  00152C  C016  F104         	movff	?_MiWi_TickGet,_t1
  2991  001530  C017  F105         	movff	?_MiWi_TickGet+1,_t1+1
  2992  001534  C018  F106         	movff	?_MiWi_TickGet+2,_t1+2
  2993  001538  C019  F107         	movff	?_MiWi_TickGet+3,_t1+3
  2994                           
  2995                           ;star_demo.c: 115: display_connections = 1;
  2996  00153C  0E01               	movlw	1
  2997  00153E  0100               	movlb	0	; () banked
  2998  001540  6FE6               	movwf	_display_connections& (0+255),b
  2999                           
  3000                           ;star_demo.c: 116: while(display_connections)
  3001  001542  D255               	goto	l13635
  3002  001544                     l13479:
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;star_demo.c: 117: {
  3006                           ;star_demo.c: 119: if (Process_RxMessage ())
  3007  001544  EC07  F01A         	call	_Process_RxMessage	;wreg free
  3008  001548  0900               	iorlw	0
  3009  00154A  E001 D202          	bnz	l13609
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;star_demo.c: 123: else
  3013                           ;star_demo.c: 124: {
  3014                           ;star_demo.c: 132: uint8_t PressedButton = ButtonPressed();
  3015  00154E  ECC9  F016         	call	_ButtonPressed	;wreg free
  3016  001552  0101               	movlb	1	; () banked
  3017  001554  6FF5               	movwf	run_star_demo@PressedButton& (0+255),b
  3018                           
  3019                           ; BSR set to: 1
  3020                           ;star_demo.c: 133: if ( PressedButton == 1 || PressedButton == 2)
  3021  001556  05F5               	decf	run_star_demo@PressedButton& (0+255),w,b
  3022  001558  E004               	bz	l13489
  3023                           
  3024                           ; BSR set to: 1
  3025  00155A  0E02               	movlw	2
  3026  00155C  19F5               	xorwf	run_star_demo@PressedButton& (0+255),w,b
  3027  00155E  E001 D1F8          	bnz	l13609
  3028  001562                     l13489:
  3029                           
  3030                           ; BSR set to: 1
  3031                           ;star_demo.c: 134: {
  3032                           ;star_demo.c: 136: if (role)
  3033  001562  5048               	movf	_role,w,c
  3034  001564  E035               	bz	l1309
  3035                           
  3036                           ; BSR set to: 1
  3037                           ;star_demo.c: 137: {
  3038                           ;star_demo.c: 145: {TxData = 0;};
  3039  001566  0100               	movlb	0	; () banked
  3040  001568  6BE2               	clrf	_TxData& (0+255),b
  3041                           
  3042                           ;star_demo.c: 146: for(i = 0; i < 21; i++)
  3043  00156A  6A40               	clrf	_i,c
  3044  00156C                     l13493:
  3045                           
  3046                           ; BSR set to: 0
  3047  00156C  0E14               	movlw	20
  3048  00156E  6440               	cpfsgt	_i,c
  3049  001570  D001               	goto	l13497
  3050  001572  D023               	goto	l13505
  3051  001574                     l13497:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;star_demo.c: 147: {
  3055                           ;star_demo.c: 148: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  3056  001574  0E06               	movlw	6
  3057  001576  6E16               	movwf	___lbmod@divisor,c
  3058  001578  51E4               	movf	_TxSynCount& (0+255),w,b
  3059  00157A  EC70  F01C         	call	___lbmod
  3060  00157E  0D15               	mullw	21
  3061  001580  0EF9               	movlw	low _MiWi
  3062  001582  0100               	movlb	0	; () banked
  3063  001584  6FB5               	movwf	??_run_star_demo& (0+255),b
  3064  001586  0EFC               	movlw	high _MiWi
  3065  001588  6FB6               	movwf	(??_run_star_demo+1)& (0+255),b
  3066  00158A  50F3               	movf	prodl,w,c
  3067  00158C  27B5               	addwf	??_run_star_demo& (0+255),f,b
  3068  00158E  50F4               	movf	prodh,w,c
  3069  001590  23B6               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3070  001592  5040               	movf	_i,w,c
  3071  001594  27B5               	addwf	??_run_star_demo& (0+255),f,b
  3072  001596  0E00               	movlw	0
  3073  001598  23B6               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3074  00159A  C0B5  FFF6         	movff	??_run_star_demo,tblptrl
  3075  00159E  C0B6  FFF7         	movff	??_run_star_demo+1,tblptrh
  3076  0015A2                     	if	0	;tblptru may be non-zero
  3077  0015A2                     	endif
  3078  0015A2                     	if	0	;tblptru may be non-zero
  3079  0015A2                     	endif
  3080  0015A2  0E96               	movlw	low _TxBuffer
  3081  0015A4  25E2               	addwf	_TxData& (0+255),w,b
  3082  0015A6  6ED9               	movwf	fsr2l,c
  3083  0015A8  6ADA               	clrf	fsr2h,c
  3084  0015AA  0E01               	movlw	high _TxBuffer
  3085  0015AC  22DA               	addwfc	fsr2h,f,c
  3086  0015AE  0008               	tblrd		*
  3087  0015B0  CFF5 FFDF          	movff	tablat,indf2
  3088                           
  3089                           ; BSR set to: 0
  3090  0015B4  2BE2               	incf	_TxData& (0+255),f,b
  3091                           
  3092                           ; BSR set to: 0
  3093  0015B6  2A40               	incf	_i,f,c
  3094  0015B8  D7D9               	goto	l13493
  3095  0015BA                     l13505:
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;star_demo.c: 149: }
  3099                           ;star_demo.c: 150: TxSynCount++;
  3100  0015BA  2BE4               	incf	_TxSynCount& (0+255),f,b
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;star_demo.c: 161: MiApp_BroadcastPacket (0);
  3104  0015BC  0E00               	movlw	0
  3105  0015BE  ECD9  F01C         	call	_MiApp_BroadcastPacket
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;star_demo.c: 164: DemoOutput_UpdateTxRx(++TxNum, RxNum);
  3109  0015C2  C0E1  F074         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3110  0015C6  2BE3               	incf	_TxNum& (0+255),f,b
  3111  0015C8  51E3               	movf	_TxNum& (0+255),w,b
  3112  0015CA  EC51  F01D         	call	_DemoOutput_UpdateTxRx
  3113                           
  3114                           ;star_demo.c: 166: }
  3115  0015CE  D1C1               	goto	l13609
  3116  0015D0                     l1309:
  3117                           
  3118                           ; BSR set to: 1
  3119                           ;star_demo.c: 167: else
  3120                           ;star_demo.c: 168: {
  3121                           ;star_demo.c: 170: uint8_t select_ed = 0;
  3122  0015D0  6BF7               	clrf	run_star_demo@select_ed& (0+255),b
  3123                           
  3124                           ; BSR set to: 1
  3125                           ;star_demo.c: 171: chk_sel_status = 1;
  3126  0015D2  0E01               	movlw	1
  3127  0015D4  0100               	movlb	0	; () banked
  3128  0015D6  6FE5               	movwf	_chk_sel_status& (0+255),b
  3129                           
  3130                           ;star_demo.c: 172: bool update_ed = 1;
  3131  0015D8  0101               	movlb	1	; () banked
  3132  0015DA  6FF4               	movwf	run_star_demo@update_ed& (0+255),b
  3133                           
  3134                           ;star_demo.c: 173: while(update_ed == 1)
  3135  0015DC  D1B6               	goto	l13607
  3136  0015DE                     l13513:
  3137                           
  3138                           ; BSR set to: 1
  3139                           ;star_demo.c: 174: {
  3140                           ;star_demo.c: 176: LCD_Erase();
  3141  0015DE  EC96  F01C         	call	_LCD_Erase	;wreg free
  3142                           
  3143                           ;star_demo.c: 177: if (myConnectionIndex_in_PanCo == select_ed)
  3144  0015E2  0101               	movlb	1	; () banked
  3145  0015E4  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3146  0015E6  0100               	movlb	0	; () banked
  3147  0015E8  19FD               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3148  0015EA  E138               	bnz	l13519
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;star_demo.c: 178: {
  3152                           ;star_demo.c: 179: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x-me",END_DEVICE
      +                          S_Short_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[
      +                          0],
  3153                           ;star_demo.c: 180: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3154  0015EC  0EBE               	movlw	low _LCDText
  3155  0015EE  6E22               	movwf	sprintf@sp,c
  3156  0015F0  0E01               	movlw	high _LCDText
  3157  0015F2  6E23               	movwf	sprintf@sp+1,c
  3158  0015F4  0ED0               	movlw	low STR_31
  3159  0015F6  6E24               	movwf	sprintf@f,c
  3160  0015F8  0EFE               	movlw	high STR_31
  3161  0015FA  6E25               	movwf	sprintf@f+1,c
  3162  0015FC  0101               	movlb	1	; () banked
  3163  0015FE  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3164  001600  0D04               	mullw	4
  3165  001602  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  3166  001604  24F3               	addwf	prodl,w,c
  3167  001606  6ED9               	movwf	fsr2l,c
  3168  001608  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  3169  00160A  20F4               	addwfc	prodh,w,c
  3170  00160C  6EDA               	movwf	fsr2h,c
  3171  00160E  50DF               	movf	indf2,w,c
  3172  001610  6E26               	movwf	?_sprintf+4,c
  3173  001612  6A27               	clrf	?_sprintf+5,c
  3174  001614  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3175  001616  0D04               	mullw	4
  3176  001618  0E00               	movlw	low _END_DEVICES_Short_Address
  3177  00161A  24F3               	addwf	prodl,w,c
  3178  00161C  6ED9               	movwf	fsr2l,c
  3179  00161E  0E02               	movlw	high _END_DEVICES_Short_Address
  3180  001620  20F4               	addwfc	prodh,w,c
  3181  001622  6EDA               	movwf	fsr2h,c
  3182  001624  50DF               	movf	indf2,w,c
  3183  001626  6E28               	movwf	?_sprintf+6,c
  3184  001628  6A29               	clrf	?_sprintf+7,c
  3185  00162A  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3186  00162C  0D04               	mullw	4
  3187  00162E  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3188  001630  24F3               	addwf	prodl,w,c
  3189  001632  6ED9               	movwf	fsr2l,c
  3190  001634  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  3191  001636  20F4               	addwfc	prodh,w,c
  3192  001638  6EDA               	movwf	fsr2h,c
  3193  00163A  50DF               	movf	indf2,w,c
  3194  00163C  6E2A               	movwf	?_sprintf+8,c
  3195  00163E  6A2B               	clrf	?_sprintf+9,c
  3196  001640  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3197  001642  0D04               	mullw	4
  3198  001644  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3199  001646  24F3               	addwf	prodl,w,c
  3200  001648  6ED9               	movwf	fsr2l,c
  3201  00164A  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  3202  00164C  20F4               	addwfc	prodh,w,c
  3203  00164E  6EDA               	movwf	fsr2h,c
  3204  001650  50DF               	movf	indf2,w,c
  3205  001652  6E2C               	movwf	?_sprintf+10,c
  3206  001654  6A2D               	clrf	?_sprintf+11,c
  3207  001656  EC68  F004         	call	_sprintf	;wreg free
  3208                           
  3209                           ;star_demo.c: 181: }
  3210  00165A  D037               	goto	l1316
  3211  00165C                     l13519:
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;star_demo.c: 182: else
  3215                           ;star_demo.c: 183: {
  3216                           ;star_demo.c: 184: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3217                           ;star_demo.c: 185: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3218  00165C  0EBE               	movlw	low _LCDText
  3219  00165E  6E22               	movwf	sprintf@sp,c
  3220  001660  0E01               	movlw	high _LCDText
  3221  001662  6E23               	movwf	sprintf@sp+1,c
  3222  001664  0EE9               	movlw	low STR_32
  3223  001666  6E24               	movwf	sprintf@f,c
  3224  001668  0EFE               	movlw	high STR_32
  3225  00166A  6E25               	movwf	sprintf@f+1,c
  3226  00166C  0101               	movlb	1	; () banked
  3227  00166E  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3228  001670  0D04               	mullw	4
  3229  001672  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  3230  001674  24F3               	addwf	prodl,w,c
  3231  001676  6ED9               	movwf	fsr2l,c
  3232  001678  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  3233  00167A  20F4               	addwfc	prodh,w,c
  3234  00167C  6EDA               	movwf	fsr2h,c
  3235  00167E  50DF               	movf	indf2,w,c
  3236  001680  6E26               	movwf	?_sprintf+4,c
  3237  001682  6A27               	clrf	?_sprintf+5,c
  3238  001684  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3239  001686  0D04               	mullw	4
  3240  001688  0E00               	movlw	low _END_DEVICES_Short_Address
  3241  00168A  24F3               	addwf	prodl,w,c
  3242  00168C  6ED9               	movwf	fsr2l,c
  3243  00168E  0E02               	movlw	high _END_DEVICES_Short_Address
  3244  001690  20F4               	addwfc	prodh,w,c
  3245  001692  6EDA               	movwf	fsr2h,c
  3246  001694  50DF               	movf	indf2,w,c
  3247  001696  6E28               	movwf	?_sprintf+6,c
  3248  001698  6A29               	clrf	?_sprintf+7,c
  3249  00169A  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3250  00169C  0D04               	mullw	4
  3251  00169E  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3252  0016A0  24F3               	addwf	prodl,w,c
  3253  0016A2  6ED9               	movwf	fsr2l,c
  3254  0016A4  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  3255  0016A6  20F4               	addwfc	prodh,w,c
  3256  0016A8  6EDA               	movwf	fsr2h,c
  3257  0016AA  50DF               	movf	indf2,w,c
  3258  0016AC  6E2A               	movwf	?_sprintf+8,c
  3259  0016AE  6A2B               	clrf	?_sprintf+9,c
  3260  0016B0  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3261  0016B2  0D04               	mullw	4
  3262  0016B4  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3263  0016B6  24F3               	addwf	prodl,w,c
  3264  0016B8  6ED9               	movwf	fsr2l,c
  3265  0016BA  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  3266  0016BC  20F4               	addwfc	prodh,w,c
  3267  0016BE  6EDA               	movwf	fsr2h,c
  3268  0016C0  50DF               	movf	indf2,w,c
  3269  0016C2  6E2C               	movwf	?_sprintf+10,c
  3270  0016C4  6A2D               	clrf	?_sprintf+11,c
  3271  0016C6  EC68  F004         	call	_sprintf	;wreg free
  3272  0016CA                     l1316:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;star_demo.c: 186: }
  3276                           ;star_demo.c: 187: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3277                           ;star_demo.c: 188: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3278  0016CA  0EBE               	movlw	low _LCDText
  3279  0016CC  6E22               	movwf	sprintf@sp,c
  3280  0016CE  0E01               	movlw	high _LCDText
  3281  0016D0  6E23               	movwf	sprintf@sp+1,c
  3282  0016D2  0EE9               	movlw	low STR_32
  3283  0016D4  6E24               	movwf	sprintf@f,c
  3284  0016D6  0EFE               	movlw	high STR_32
  3285  0016D8  6E25               	movwf	sprintf@f+1,c
  3286  0016DA  0101               	movlb	1	; () banked
  3287  0016DC  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3288  0016DE  0D04               	mullw	4
  3289  0016E0  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  3290  0016E2  24F3               	addwf	prodl,w,c
  3291  0016E4  6ED9               	movwf	fsr2l,c
  3292  0016E6  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  3293  0016E8  20F4               	addwfc	prodh,w,c
  3294  0016EA  6EDA               	movwf	fsr2h,c
  3295  0016EC  50DF               	movf	indf2,w,c
  3296  0016EE  6E26               	movwf	?_sprintf+4,c
  3297  0016F0  6A27               	clrf	?_sprintf+5,c
  3298  0016F2  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3299  0016F4  0D04               	mullw	4
  3300  0016F6  0E00               	movlw	low _END_DEVICES_Short_Address
  3301  0016F8  24F3               	addwf	prodl,w,c
  3302  0016FA  6ED9               	movwf	fsr2l,c
  3303  0016FC  0E02               	movlw	high _END_DEVICES_Short_Address
  3304  0016FE  20F4               	addwfc	prodh,w,c
  3305  001700  6EDA               	movwf	fsr2h,c
  3306  001702  50DF               	movf	indf2,w,c
  3307  001704  6E28               	movwf	?_sprintf+6,c
  3308  001706  6A29               	clrf	?_sprintf+7,c
  3309  001708  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3310  00170A  0D04               	mullw	4
  3311  00170C  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3312  00170E  24F3               	addwf	prodl,w,c
  3313  001710  6ED9               	movwf	fsr2l,c
  3314  001712  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  3315  001714  20F4               	addwfc	prodh,w,c
  3316  001716  6EDA               	movwf	fsr2h,c
  3317  001718  50DF               	movf	indf2,w,c
  3318  00171A  6E2A               	movwf	?_sprintf+8,c
  3319  00171C  6A2B               	clrf	?_sprintf+9,c
  3320  00171E  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3321  001720  0D04               	mullw	4
  3322  001722  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3323  001724  24F3               	addwf	prodl,w,c
  3324  001726  6ED9               	movwf	fsr2l,c
  3325  001728  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  3326  00172A  20F4               	addwfc	prodh,w,c
  3327  00172C  6EDA               	movwf	fsr2h,c
  3328  00172E  50DF               	movf	indf2,w,c
  3329  001730  6E2C               	movwf	?_sprintf+10,c
  3330  001732  6A2D               	clrf	?_sprintf+11,c
  3331  001734  EC68  F004         	call	_sprintf	;wreg free
  3332                           
  3333                           ;star_demo.c: 189: sprintf((char *)&(LCDText[16]), (char*)"RB2: Change node");
  3334  001738  0ECE               	movlw	low (_LCDText+16)
  3335  00173A  6E22               	movwf	sprintf@sp,c
  3336  00173C  0E01               	movlw	high (_LCDText+16)
  3337  00173E  6E23               	movwf	sprintf@sp+1,c
  3338  001740  0E70               	movlw	low STR_34
  3339  001742  6E24               	movwf	sprintf@f,c
  3340  001744  0EFF               	movlw	high STR_34
  3341  001746  6E25               	movwf	sprintf@f+1,c
  3342  001748  EC68  F004         	call	_sprintf	;wreg free
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;star_demo.c: 190: LCD_Update();
  3346  00174C  EC06  F018         	call	_LCD_Update	;wreg free
  3347                           
  3348                           ;star_demo.c: 191: chk_sel_status = 1;
  3349  001750  0E01               	movlw	1
  3350  001752  0100               	movlb	0	; () banked
  3351  001754  6FE5               	movwf	_chk_sel_status& (0+255),b
  3352                           
  3353                           ;star_demo.c: 193: while(chk_sel_status)
  3354  001756  D0F5               	goto	l13605
  3355  001758                     l13525:
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;star_demo.c: 194: {
  3359                           ;star_demo.c: 196: uint8_t switch_val = ButtonPressed();
  3360  001758  ECC9  F016         	call	_ButtonPressed	;wreg free
  3361  00175C  0101               	movlb	1	; () banked
  3362  00175E  6FF6               	movwf	run_star_demo@switch_val& (0+255),b
  3363                           
  3364                           ; BSR set to: 1
  3365                           ;star_demo.c: 198: Process_RxMessage ();
  3366  001760  EC07  F01A         	call	_Process_RxMessage	;wreg free
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;star_demo.c: 199: bool sw_layer_ack_status , mac_ack_status;
  3370                           ;star_demo.c: 200: if(switch_val == 1)
  3371  001764  0101               	movlb	1	; () banked
  3372  001766  05F6               	decf	run_star_demo@switch_val& (0+255),w,b
  3373  001768  E001 D0CB          	bnz	l13595
  3374                           
  3375                           ; BSR set to: 1
  3376                           ;star_demo.c: 201: {
  3377                           ;star_demo.c: 202: update_ed = 0;
  3378  00176C  6BF4               	clrf	run_star_demo@update_ed& (0+255),b
  3379                           
  3380                           ;star_demo.c: 204: TxSynCount2++;
  3381  00176E  0100               	movlb	0	; () banked
  3382  001770  6BE5               	clrf	_chk_sel_status& (0+255),b
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;star_demo.c: 205: if (myConnectionIndex_in_PanCo == select_ed)
  3386  001772  0101               	movlb	1	; () banked
  3387  001774  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3388  001776  0100               	movlb	0	; () banked
  3389  001778  19FD               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3390  00177A  E130               	bnz	l1320
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;star_demo.c: 206: {
  3394                           ;star_demo.c: 207: {TxData = 0;};
  3395  00177C  6BE2               	clrf	_TxData& (0+255),b
  3396                           
  3397                           ;star_demo.c: 208: for (i = 0 ; i < 21 ; i++)
  3398  00177E  6A40               	clrf	_i,c
  3399  001780                     l13537:
  3400                           
  3401                           ; BSR set to: 0
  3402  001780  0E14               	movlw	20
  3403  001782  6440               	cpfsgt	_i,c
  3404  001784  D001               	goto	l13541
  3405  001786  D023               	goto	l13549
  3406  001788                     l13541:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;star_demo.c: 209: {
  3410                           ;star_demo.c: 210: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  3411  001788  0E06               	movlw	6
  3412  00178A  6E16               	movwf	___lbmod@divisor,c
  3413  00178C  51E4               	movf	_TxSynCount& (0+255),w,b
  3414  00178E  EC70  F01C         	call	___lbmod
  3415  001792  0D15               	mullw	21
  3416  001794  0EF9               	movlw	low _MiWi
  3417  001796  0100               	movlb	0	; () banked
  3418  001798  6FB5               	movwf	??_run_star_demo& (0+255),b
  3419  00179A  0EFC               	movlw	high _MiWi
  3420  00179C  6FB6               	movwf	(??_run_star_demo+1)& (0+255),b
  3421  00179E  50F3               	movf	prodl,w,c
  3422  0017A0  27B5               	addwf	??_run_star_demo& (0+255),f,b
  3423  0017A2  50F4               	movf	prodh,w,c
  3424  0017A4  23B6               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3425  0017A6  5040               	movf	_i,w,c
  3426  0017A8  27B5               	addwf	??_run_star_demo& (0+255),f,b
  3427  0017AA  0E00               	movlw	0
  3428  0017AC  23B6               	addwfc	(??_run_star_demo+1)& (0+255),f,b
  3429  0017AE  C0B5  FFF6         	movff	??_run_star_demo,tblptrl
  3430  0017B2  C0B6  FFF7         	movff	??_run_star_demo+1,tblptrh
  3431  0017B6                     	if	0	;tblptru may be non-zero
  3432  0017B6                     	endif
  3433  0017B6                     	if	0	;tblptru may be non-zero
  3434  0017B6                     	endif
  3435  0017B6  0E96               	movlw	low _TxBuffer
  3436  0017B8  25E2               	addwf	_TxData& (0+255),w,b
  3437  0017BA  6ED9               	movwf	fsr2l,c
  3438  0017BC  6ADA               	clrf	fsr2h,c
  3439  0017BE  0E01               	movlw	high _TxBuffer
  3440  0017C0  22DA               	addwfc	fsr2h,f,c
  3441  0017C2  0008               	tblrd		*
  3442  0017C4  CFF5 FFDF          	movff	tablat,indf2
  3443                           
  3444                           ; BSR set to: 0
  3445  0017C8  2BE2               	incf	_TxData& (0+255),f,b
  3446                           
  3447                           ; BSR set to: 0
  3448  0017CA  2A40               	incf	_i,f,c
  3449  0017CC  D7D9               	goto	l13537
  3450  0017CE                     l13549:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;star_demo.c: 211: }
  3454                           ;star_demo.c: 218: mac_ack_status = MiApp_UnicastConnection (0, 0);
  3455  0017CE  0E00               	movlw	0
  3456  0017D0  6B8F               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  3457  0017D2  EC50  F01B         	call	_MiApp_UnicastConnection
  3458  0017D6                     l13551:
  3459                           
  3460                           ;star_demo.c: 220: TxNum++;
  3461  0017D6  0100               	movlb	0	; () banked
  3462  0017D8  2BE3               	incf	_TxNum& (0+255),f,b
  3463                           
  3464                           ;star_demo.c: 221: }
  3465  0017DA  D083               	goto	l1323
  3466  0017DC                     l1320:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;star_demo.c: 223: else
  3470                           ;star_demo.c: 224: {
  3471                           ;star_demo.c: 229: {TxData = 0;};
  3472  0017DC  6BE2               	clrf	_TxData& (0+255),b
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;star_demo.c: 230: TxBuffer[TxData++] = 0xCC;
  3476  0017DE  0E96               	movlw	low _TxBuffer
  3477  0017E0  25E2               	addwf	_TxData& (0+255),w,b
  3478  0017E2  6ED9               	movwf	fsr2l,c
  3479  0017E4  6ADA               	clrf	fsr2h,c
  3480  0017E6  0E01               	movlw	high _TxBuffer
  3481  0017E8  22DA               	addwfc	fsr2h,f,c
  3482  0017EA  0ECC               	movlw	204
  3483  0017EC  6EDF               	movwf	indf2,c
  3484                           
  3485                           ; BSR set to: 0
  3486  0017EE  2BE2               	incf	_TxData& (0+255),f,b
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;star_demo.c: 231: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[0];
  3490  0017F0  0101               	movlb	1	; () banked
  3491  0017F2  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3492  0017F4  0D04               	mullw	4
  3493  0017F6  0E00               	movlw	low _END_DEVICES_Short_Address
  3494  0017F8  24F3               	addwf	prodl,w,c
  3495  0017FA  6ED9               	movwf	fsr2l,c
  3496  0017FC  0E02               	movlw	high _END_DEVICES_Short_Address
  3497  0017FE  20F4               	addwfc	prodh,w,c
  3498  001800  6EDA               	movwf	fsr2h,c
  3499  001802  0E96               	movlw	low _TxBuffer
  3500  001804  0100               	movlb	0	; () banked
  3501  001806  25E2               	addwf	_TxData& (0+255),w,b
  3502  001808  6EE1               	movwf	fsr1l,c
  3503  00180A  6AE2               	clrf	fsr1h,c
  3504  00180C  0E01               	movlw	high _TxBuffer
  3505  00180E  22E2               	addwfc	fsr1h,f,c
  3506  001810  CFDF FFE7          	movff	indf2,indf1
  3507                           
  3508                           ; BSR set to: 0
  3509  001814  2BE2               	incf	_TxData& (0+255),f,b
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;star_demo.c: 232: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[1];
  3513  001816  0101               	movlb	1	; () banked
  3514  001818  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3515  00181A  0D04               	mullw	4
  3516  00181C  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3517  00181E  24F3               	addwf	prodl,w,c
  3518  001820  6ED9               	movwf	fsr2l,c
  3519  001822  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  3520  001824  20F4               	addwfc	prodh,w,c
  3521  001826  6EDA               	movwf	fsr2h,c
  3522  001828  0E96               	movlw	low _TxBuffer
  3523  00182A  0100               	movlb	0	; () banked
  3524  00182C  25E2               	addwf	_TxData& (0+255),w,b
  3525  00182E  6EE1               	movwf	fsr1l,c
  3526  001830  6AE2               	clrf	fsr1h,c
  3527  001832  0E01               	movlw	high _TxBuffer
  3528  001834  22E2               	addwfc	fsr1h,f,c
  3529  001836  CFDF FFE7          	movff	indf2,indf1
  3530                           
  3531                           ; BSR set to: 0
  3532  00183A  2BE2               	incf	_TxData& (0+255),f,b
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;star_demo.c: 233: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[2];
  3536  00183C  0101               	movlb	1	; () banked
  3537  00183E  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3538  001840  0D04               	mullw	4
  3539  001842  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3540  001844  24F3               	addwf	prodl,w,c
  3541  001846  6ED9               	movwf	fsr2l,c
  3542  001848  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  3543  00184A  20F4               	addwfc	prodh,w,c
  3544  00184C  6EDA               	movwf	fsr2h,c
  3545  00184E  0E96               	movlw	low _TxBuffer
  3546  001850  0100               	movlb	0	; () banked
  3547  001852  25E2               	addwf	_TxData& (0+255),w,b
  3548  001854  6EE1               	movwf	fsr1l,c
  3549  001856  6AE2               	clrf	fsr1h,c
  3550  001858  0E01               	movlw	high _TxBuffer
  3551  00185A  22E2               	addwfc	fsr1h,f,c
  3552  00185C  CFDF FFE7          	movff	indf2,indf1
  3553                           
  3554                           ; BSR set to: 0
  3555  001860  2BE2               	incf	_TxData& (0+255),f,b
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;star_demo.c: 234: for (i = 4 ; i < 25 ; i++)
  3559  001862  0E04               	movlw	4
  3560  001864  6E40               	movwf	_i,c
  3561  001866                     l13571:
  3562                           
  3563                           ; BSR set to: 0
  3564  001866  0E18               	movlw	24
  3565  001868  6440               	cpfsgt	_i,c
  3566  00186A  D001               	goto	l13575
  3567  00186C  D02A               	goto	l13583
  3568  00186E                     l13575:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;star_demo.c: 235: {
  3572                           ;star_demo.c: 236: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i-4];
  3573  00186E  0EFC               	movlw	252
  3574  001870  6FB5               	movwf	??_run_star_demo& (0+255),b
  3575  001872  69B6               	setf	(??_run_star_demo+1)& (0+255),b
  3576  001874  0E06               	movlw	6
  3577  001876  6E16               	movwf	___lbmod@divisor,c
  3578  001878  51E4               	movf	_TxSynCount& (0+255),w,b
  3579  00187A  EC70  F01C         	call	___lbmod
  3580  00187E  0D15               	mullw	21
  3581  001880  0EF9               	movlw	low _MiWi
  3582  001882  0100               	movlb	0	; () banked
  3583  001884  6FB7               	movwf	(??_run_star_demo+2)& (0+255),b
  3584  001886  0EFC               	movlw	high _MiWi
  3585  001888  6FB8               	movwf	(??_run_star_demo+3)& (0+255),b
  3586  00188A  50F3               	movf	prodl,w,c
  3587  00188C  27B7               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3588  00188E  50F4               	movf	prodh,w,c
  3589  001890  23B8               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3590  001892  5040               	movf	_i,w,c
  3591  001894  27B7               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3592  001896  0E00               	movlw	0
  3593  001898  23B8               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3594  00189A  51B5               	movf	??_run_star_demo& (0+255),w,b
  3595  00189C  27B7               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3596  00189E  51B6               	movf	(??_run_star_demo+1)& (0+255),w,b
  3597  0018A0  23B8               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3598  0018A2  C0B7  FFF6         	movff	??_run_star_demo+2,tblptrl
  3599  0018A6  C0B8  FFF7         	movff	??_run_star_demo+3,tblptrh
  3600  0018AA                     	if	0	;tblptru may be non-zero
  3601  0018AA                     	endif
  3602  0018AA                     	if	0	;tblptru may be non-zero
  3603  0018AA                     	endif
  3604  0018AA  0E96               	movlw	low _TxBuffer
  3605  0018AC  25E2               	addwf	_TxData& (0+255),w,b
  3606  0018AE  6ED9               	movwf	fsr2l,c
  3607  0018B0  6ADA               	clrf	fsr2h,c
  3608  0018B2  0E01               	movlw	high _TxBuffer
  3609  0018B4  22DA               	addwfc	fsr2h,f,c
  3610  0018B6  0008               	tblrd		*
  3611  0018B8  CFF5 FFDF          	movff	tablat,indf2
  3612                           
  3613                           ; BSR set to: 0
  3614  0018BC  2BE2               	incf	_TxData& (0+255),f,b
  3615                           
  3616                           ; BSR set to: 0
  3617  0018BE  2A40               	incf	_i,f,c
  3618  0018C0  D7D2               	goto	l13571
  3619  0018C2                     l13583:
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;star_demo.c: 237: }
  3623                           ;star_demo.c: 241: sw_layer_ack_status = MiApp_UnicastStar (0);
  3624  0018C2  0E00               	movlw	0
  3625  0018C4  EC53  F015         	call	_MiApp_UnicastStar
  3626  0018C8  0101               	movlb	1	; () banked
  3627  0018CA  6FF3               	movwf	run_star_demo@sw_layer_ack_status& (0+255),b
  3628                           
  3629                           ; BSR set to: 1
  3630                           ;star_demo.c: 246: if (sw_layer_ack_status)
  3631  0018CC  51F3               	movf	run_star_demo@sw_layer_ack_status& (0+255),w,b
  3632  0018CE  E183               	bnz	l13551
  3633                           
  3634                           ; BSR set to: 1
  3635                           ;star_demo.c: 250: else
  3636                           ;star_demo.c: 251: {
  3637                           ;star_demo.c: 252: LCDDisplay((char *)"Data_Sending_Fail!!", 0, 0);
  3638  0018D0  0E15               	movlw	low STR_35
  3639  0018D2  0100               	movlb	0	; () banked
  3640  0018D4  6F73               	movwf	LCDDisplay@text& (0+255),b
  3641  0018D6  0EFF               	movlw	high STR_35
  3642  0018D8  6F74               	movwf	(LCDDisplay@text+1)& (0+255),b
  3643  0018DA  6B75               	clrf	LCDDisplay@value& (0+255),b
  3644  0018DC  6B76               	clrf	LCDDisplay@delay& (0+255),b
  3645  0018DE  EC78  F01A         	call	_LCDDisplay	;wreg free
  3646  0018E2                     l1323:
  3647                           
  3648                           ;star_demo.c: 253: }
  3649                           ;star_demo.c: 258: }
  3650                           ;star_demo.c: 259: DemoOutput_UpdateTxRx(TxNum, RxNum);
  3651  0018E2  C0E1  F074         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3652  0018E6  0100               	movlb	0	; () banked
  3653  0018E8  51E3               	movf	_TxNum& (0+255),w,b
  3654  0018EA  EC51  F01D         	call	_DemoOutput_UpdateTxRx
  3655                           
  3656                           ;star_demo.c: 260: DELAY_ms(1500);
  3657  0018EE  0E05               	movlw	5
  3658  0018F0  6E17               	movwf	DELAY_ms@ms+1,c
  3659  0018F2  0EDC               	movlw	220
  3660  0018F4  6E16               	movwf	DELAY_ms@ms,c
  3661  0018F6  ECD5  F013         	call	_DELAY_ms	;wreg free
  3662                           
  3663                           ;star_demo.c: 261: STAR_DEMO_OPTIONS_MESSAGE (role);
  3664  0018FA  5048               	movf	_role,w,c
  3665  0018FC  ECB9  F01C         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3666                           
  3667                           ;star_demo.c: 262: }
  3668  001900  D020               	goto	l13605
  3669  001902                     l13595:
  3670                           
  3671                           ; BSR set to: 1
  3672                           ;star_demo.c: 263: else if(switch_val == 2)
  3673  001902  0E02               	movlw	2
  3674  001904  19F6               	xorwf	run_star_demo@switch_val& (0+255),w,b
  3675  001906  E11D               	bnz	l13605
  3676                           
  3677                           ; BSR set to: 1
  3678                           ;star_demo.c: 264: {
  3679                           ;star_demo.c: 265: if (select_ed > end_nodes-1)
  3680  001908  51F7               	movf	run_star_demo@select_ed& (0+255),w,b
  3681  00190A  0100               	movlb	0	; () banked
  3682  00190C  6FB5               	movwf	??_run_star_demo& (0+255),b
  3683  00190E  6BB6               	clrf	(??_run_star_demo+1)& (0+255),b
  3684  001910  69B7               	setf	(??_run_star_demo+2)& (0+255),b
  3685  001912  69B8               	setf	(??_run_star_demo+3)& (0+255),b
  3686  001914  51E7               	movf	_end_nodes& (0+255),w,b
  3687  001916  6FB9               	movwf	(??_run_star_demo+4)& (0+255),b
  3688  001918  6BBA               	clrf	(??_run_star_demo+5)& (0+255),b
  3689  00191A  51B7               	movf	(??_run_star_demo+2)& (0+255),w,b
  3690  00191C  27B9               	addwf	(??_run_star_demo+4)& (0+255),f,b
  3691  00191E  51B8               	movf	(??_run_star_demo+3)& (0+255),w,b
  3692  001920  23BA               	addwfc	(??_run_star_demo+5)& (0+255),f,b
  3693  001922  51B5               	movf	??_run_star_demo& (0+255),w,b
  3694  001924  5DB9               	subwf	(??_run_star_demo+4)& (0+255),w,b
  3695  001926  51BA               	movf	(??_run_star_demo+5)& (0+255),w,b
  3696  001928  0A80               	xorlw	128
  3697  00192A  6FBB               	movwf	(??_run_star_demo+6)& (0+255),b
  3698  00192C  51B6               	movf	(??_run_star_demo+1)& (0+255),w,b
  3699  00192E  0A80               	xorlw	128
  3700  001930  59BB               	subwfb	(??_run_star_demo+6)& (0+255),w,b
  3701  001932  E203               	bc	l13601
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;star_demo.c: 266: {
  3705                           ;star_demo.c: 268: select_ed = 0;
  3706  001934  0101               	movlb	1	; () banked
  3707  001936  6BF7               	clrf	run_star_demo@select_ed& (0+255),b
  3708                           
  3709                           ;star_demo.c: 269: }
  3710  001938  D002               	goto	l13603
  3711  00193A                     l13601:
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;star_demo.c: 270: else
  3715                           ;star_demo.c: 271: {
  3716                           ;star_demo.c: 273: select_ed = select_ed+1;
  3717  00193A  0101               	movlb	1	; () banked
  3718  00193C  2BF7               	incf	run_star_demo@select_ed& (0+255),f,b
  3719  00193E                     l13603:
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;star_demo.c: 274: }
  3723                           ;star_demo.c: 275: chk_sel_status = 0;
  3724  00193E  0100               	movlb	0	; () banked
  3725  001940  6BE5               	clrf	_chk_sel_status& (0+255),b
  3726  001942                     l13605:
  3727  001942  0100               	movlb	0	; () banked
  3728  001944  51E5               	movf	_chk_sel_status& (0+255),w,b
  3729  001946  E001 D707          	bnz	l13525
  3730  00194A                     l13607:
  3731  00194A  0101               	movlb	1	; () banked
  3732  00194C  05F4               	decf	run_star_demo@update_ed& (0+255),w,b
  3733  00194E  E101 D646          	bz	l13513
  3734  001952                     l13609:
  3735                           
  3736                           ;star_demo.c: 277: }
  3737                           ;star_demo.c: 278: }
  3738                           ;star_demo.c: 280: }
  3739                           ;star_demo.c: 282: }
  3740                           ;star_demo.c: 283: }
  3741                           ;star_demo.c: 284: }
  3742                           ;star_demo.c: 288: if (lost_connection && !role)
  3743  001952  0100               	movlb	0	; () banked
  3744  001954  51E8               	movf	_lost_connection& (0+255),w,b
  3745  001956  E006               	bz	l13617
  3746                           
  3747                           ; BSR set to: 0
  3748  001958  5048               	movf	_role,w,c
  3749  00195A  E104               	bnz	l13617
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;star_demo.c: 289: {
  3753                           ;star_demo.c: 290: MiApp_EstablishConnection(0xFF, 0x00);
  3754  00195C  6BB0               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  3755  00195E  EC71  F011         	call	_MiApp_EstablishConnection
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;star_demo.c: 291: lost_connection = 0;
  3759  001962  6BE8               	clrf	_lost_connection& (0+255),b
  3760  001964                     l13617:
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;star_demo.c: 293: }
  3764                           ;star_demo.c: 295: t2 = MiWi_TickGet ();
  3765  001964  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  3766  001968  C016  F108         	movff	?_MiWi_TickGet,_t2
  3767  00196C  C017  F109         	movff	?_MiWi_TickGet+1,_t2+1
  3768  001970  C018  F10A         	movff	?_MiWi_TickGet+2,_t2+2
  3769  001974  C019  F10B         	movff	?_MiWi_TickGet+3,_t2+3
  3770                           
  3771                           ;star_demo.c: 297: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)*15) && role)
  3772  001978  0101               	movlb	1	; () banked
  3773  00197A  5104               	movf	_t1& (0+255),w,b
  3774  00197C  5D08               	subwf	_t2& (0+255),w,b
  3775  00197E  0100               	movlb	0	; () banked
  3776  001980  6FB5               	movwf	??_run_star_demo& (0+255),b
  3777  001982  0101               	movlb	1	; () banked
  3778  001984  5105               	movf	(_t1+1)& (0+255),w,b
  3779  001986  5909               	subwfb	(_t2+1)& (0+255),w,b
  3780  001988  0100               	movlb	0	; () banked
  3781  00198A  6FB6               	movwf	(??_run_star_demo+1)& (0+255),b
  3782  00198C  0101               	movlb	1	; () banked
  3783  00198E  5106               	movf	(_t1+2)& (0+255),w,b
  3784  001990  590A               	subwfb	(_t2+2)& (0+255),w,b
  3785  001992  0100               	movlb	0	; () banked
  3786  001994  6FB7               	movwf	(??_run_star_demo+2)& (0+255),b
  3787  001996  0101               	movlb	1	; () banked
  3788  001998  5107               	movf	(_t1+3)& (0+255),w,b
  3789  00199A  590B               	subwfb	(_t2+3)& (0+255),w,b
  3790  00199C  0100               	movlb	0	; () banked
  3791  00199E  6FB8               	movwf	(??_run_star_demo+3)& (0+255),b
  3792  0019A0  51B8               	movf	(??_run_star_demo+3)& (0+255),w,b
  3793  0019A2  E107               	bnz	u13920
  3794  0019A4  0EE1               	movlw	225
  3795  0019A6  5DB5               	subwf	??_run_star_demo& (0+255),w,b
  3796  0019A8  0E70               	movlw	112
  3797  0019AA  59B6               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  3798  0019AC  0E72               	movlw	114
  3799  0019AE  59B7               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  3800  0019B0  E31E               	bnc	l13635
  3801  0019B2                     u13920:
  3802                           
  3803                           ; BSR set to: 0
  3804  0019B2  5048               	movf	_role,w,c
  3805  0019B4  E01C               	bz	l13635
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;star_demo.c: 298: {
  3809                           ;star_demo.c: 299: LCD_Erase();
  3810  0019B6  EC96  F01C         	call	_LCD_Erase	;wreg free
  3811                           
  3812                           ;star_demo.c: 300: sprintf((char *)&(LCDText), (char*)"END_DEVICES :%02d",conn_size);
  3813  0019BA  0EBE               	movlw	low _LCDText
  3814  0019BC  6E22               	movwf	sprintf@sp,c
  3815  0019BE  0E01               	movlw	high _LCDText
  3816  0019C0  6E23               	movwf	sprintf@sp+1,c
  3817  0019C2  0E3C               	movlw	low STR_36
  3818  0019C4  6E24               	movwf	sprintf@f,c
  3819  0019C6  0EFF               	movlw	high STR_36
  3820  0019C8  6E25               	movwf	sprintf@f+1,c
  3821  0019CA  C047  F026         	movff	_conn_size,?_sprintf+4
  3822  0019CE  6A27               	clrf	?_sprintf+5,c
  3823  0019D0  EC68  F004         	call	_sprintf	;wreg free
  3824                           
  3825                           ; BSR set to: 0
  3826                           ;star_demo.c: 301: LCD_Update();
  3827  0019D4  EC06  F018         	call	_LCD_Update	;wreg free
  3828                           
  3829                           ;star_demo.c: 302: DELAY_ms(2000);
  3830  0019D8  0E07               	movlw	7
  3831  0019DA  6E17               	movwf	DELAY_ms@ms+1,c
  3832  0019DC  0ED0               	movlw	208
  3833  0019DE  6E16               	movwf	DELAY_ms@ms,c
  3834  0019E0  ECD5  F013         	call	_DELAY_ms	;wreg free
  3835                           
  3836                           ;star_demo.c: 303: display_connections = 0;
  3837  0019E4  0100               	movlb	0	; () banked
  3838  0019E6  6BE6               	clrf	_display_connections& (0+255),b
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;star_demo.c: 304: STAR_DEMO_OPTIONS_MESSAGE (1);
  3842  0019E8  0E01               	movlw	1
  3843  0019EA  ECB9  F01C         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3844  0019EE                     l13635:
  3845  0019EE  0100               	movlb	0	; () banked
  3846  0019F0  51E6               	movf	_display_connections& (0+255),w,b
  3847  0019F2  E001 D5A7          	bnz	l13479
  3848                           
  3849                           ; BSR set to: 0
  3850  0019F6  0012               	return		;funcret
  3851  0019F8                     __end_of_run_star_demo:
  3852                           	opt stack 0
  3853                           tblptru	equ	0xFF8
  3854                           tblptrh	equ	0xFF7
  3855                           tblptrl	equ	0xFF6
  3856                           tablat	equ	0xFF5
  3857                           prodh	equ	0xFF4
  3858                           prodl	equ	0xFF3
  3859                           intcon	equ	0xFF2
  3860                           intcon2	equ	0xFF1
  3861                           postinc0	equ	0xFEE
  3862                           wreg	equ	0xFE8
  3863                           indf1	equ	0xFE7
  3864                           postdec1	equ	0xFE5
  3865                           fsr1h	equ	0xFE2
  3866                           fsr1l	equ	0xFE1
  3867                           indf2	equ	0xFDF
  3868                           fsr2h	equ	0xFDA
  3869                           fsr2l	equ	0xFD9
  3870                           
  3871 ;; *************** function ___lbmod *****************
  3872 ;; Defined at:
  3873 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbmod.c"
  3874 ;; Parameters:    Size  Location     Type
  3875 ;;  dividend        1    wreg     unsigned char 
  3876 ;;  divisor         1   21[COMRAM] unsigned char 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  dividend        1   22[COMRAM] unsigned char 
  3879 ;;  rem             1   24[COMRAM] unsigned char 
  3880 ;;  counter         1   23[COMRAM] unsigned char 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      unsigned char 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : F/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3890 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3894 ;;Total ram usage:        4 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    3
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_run_star_demo
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text7
  3905  0038E0                     __ptext7:
  3906                           	opt stack 0
  3907  0038E0                     ___lbmod:
  3908                           	opt stack 25
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;incstack = 0
  3912                           ;___lbmod@dividend stored from wreg
  3913  0038E0  6E17               	movwf	___lbmod@dividend,c
  3914  0038E2  0E08               	movlw	8
  3915  0038E4  6E18               	movwf	___lbmod@counter,c
  3916  0038E6  6A19               	clrf	___lbmod@rem,c
  3917  0038E8                     l13277:
  3918  0038E8  90D8               	bcf	status,0,c
  3919  0038EA  3417               	rlcf	___lbmod@dividend,w,c
  3920  0038EC  3419               	rlcf	___lbmod@rem,w,c
  3921  0038EE  6E19               	movwf	___lbmod@rem,c
  3922  0038F0  90D8               	bcf	status,0,c
  3923  0038F2  3617               	rlcf	___lbmod@dividend,f,c
  3924  0038F4  5016               	movf	___lbmod@divisor,w,c
  3925  0038F6  5C19               	subwf	___lbmod@rem,w,c
  3926  0038F8  E302               	bnc	l13285
  3927  0038FA  5016               	movf	___lbmod@divisor,w,c
  3928  0038FC  5E19               	subwf	___lbmod@rem,f,c
  3929  0038FE                     l13285:
  3930  0038FE  2E18               	decfsz	___lbmod@counter,f,c
  3931  003900  D7F3               	goto	l13277
  3932  003902  5019               	movf	___lbmod@rem,w,c
  3933  003904  0012               	return		;funcret
  3934  003906                     __end_of___lbmod:
  3935                           	opt stack 0
  3936                           tblptru	equ	0xFF8
  3937                           tblptrh	equ	0xFF7
  3938                           tblptrl	equ	0xFF6
  3939                           tablat	equ	0xFF5
  3940                           prodh	equ	0xFF4
  3941                           prodl	equ	0xFF3
  3942                           intcon	equ	0xFF2
  3943                           intcon2	equ	0xFF1
  3944                           postinc0	equ	0xFEE
  3945                           wreg	equ	0xFE8
  3946                           indf1	equ	0xFE7
  3947                           postdec1	equ	0xFE5
  3948                           fsr1h	equ	0xFE2
  3949                           fsr1l	equ	0xFE1
  3950                           indf2	equ	0xFDF
  3951                           fsr2h	equ	0xFDA
  3952                           fsr2l	equ	0xFD9
  3953                           status	equ	0xFD8
  3954                           
  3955 ;; *************** function _Process_RxMessage *****************
  3956 ;; Defined at:
  3957 ;;		line 66 in file "../src/star_demo.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;  User_data_st    1   80[BANK0 ] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      unsigned char 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : F/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3974 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3975 ;;Total ram usage:        1 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:   14
  3978 ;; This function calls:
  3979 ;;		_DELAY_ms
  3980 ;;		_DemoOutput_UpdateTxRx
  3981 ;;		_MiApp_DiscardMessage
  3982 ;;		_MiApp_MessageAvailable
  3983 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  3984 ;;		_Source_END_DEVICE_INFO
  3985 ;; This function is called by:
  3986 ;;		_run_star_demo
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text8
  3991  00340E                     __ptext8:
  3992                           	opt stack 0
  3993  00340E                     _Process_RxMessage:
  3994                           	opt stack 14
  3995                           
  3996                           ;star_demo.c: 75: User_data_status = MiApp_MessageAvailable();
  3997                           
  3998                           ;incstack = 0
  3999  00340E  EC58  F01D         	call	_MiApp_MessageAvailable	;wreg free
  4000  003412  6FB0               	movwf	Process_RxMessage@User_data_status& (0+255),b
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;star_demo.c: 76: if(User_data_status)
  4004  003414  51B0               	movf	Process_RxMessage@User_data_status& (0+255),w,b
  4005  003416  E01E               	bz	l13269
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;star_demo.c: 77: {
  4009                           ;star_demo.c: 87: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  4010  003418  2BE1               	incf	_RxNum& (0+255),f,b
  4011  00341A  C0E1  F074         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  4012  00341E  51E3               	movf	_TxNum& (0+255),w,b
  4013  003420  EC51  F01D         	call	_DemoOutput_UpdateTxRx
  4014                           
  4015                           ;star_demo.c: 88: DELAY_ms(2000);
  4016  003424  0E07               	movlw	7
  4017  003426  6E17               	movwf	DELAY_ms@ms+1,c
  4018  003428  0ED0               	movlw	208
  4019  00342A  6E16               	movwf	DELAY_ms@ms,c
  4020  00342C  ECD5  F013         	call	_DELAY_ms	;wreg free
  4021                           
  4022                           ;star_demo.c: 90: LATAbits.LATA7 ^= 1;
  4023  003430  7E89               	btg	3977,7,c	;volatile
  4024                           
  4025                           ;star_demo.c: 94: if (!role && !rxMessage.flags.bits.broadcast)
  4026  003432  5048               	movf	_role,w,c
  4027  003434  E10A               	bnz	l13265
  4028  003436  0100               	movlb	0	; () banked
  4029  003438  51BC               	movf	_rxMessage& (0+255),w,b
  4030  00343A  0B03               	andlw	3
  4031  00343C  E106               	bnz	l13265
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;star_demo.c: 95: {
  4035                           ;star_demo.c: 96: Source_END_DEVICE_INFO(rxMessage.Payload);
  4036  00343E  C0C1  F073         	movff	_rxMessage+5,Source_END_DEVICE_INFO@SrAddr
  4037  003442  C0C2  F074         	movff	_rxMessage+6,Source_END_DEVICE_INFO@SrAddr+1
  4038  003446  EC7B  F018         	call	_Source_END_DEVICE_INFO	;wreg free
  4039  00344A                     l13265:
  4040                           
  4041                           ;star_demo.c: 97: }
  4042                           ;star_demo.c: 105: MiApp_DiscardMessage();
  4043  00344A  EC63  F01D         	call	_MiApp_DiscardMessage	;wreg free
  4044                           
  4045                           ;star_demo.c: 106: STAR_DEMO_OPTIONS_MESSAGE (role);
  4046  00344E  5048               	movf	_role,w,c
  4047  003450  ECB9  F01C         	call	_STAR_DEMO_OPTIONS_MESSAGE
  4048  003454                     l13269:
  4049                           
  4050                           ;star_demo.c: 108: }
  4051                           ;star_demo.c: 109: return User_data_status;
  4052  003454  0100               	movlb	0	; () banked
  4053  003456  51B0               	movf	Process_RxMessage@User_data_status& (0+255),w,b
  4054                           
  4055                           ; BSR set to: 0
  4056  003458  0012               	return		;funcret
  4057  00345A                     __end_of_Process_RxMessage:
  4058                           	opt stack 0
  4059                           tblptru	equ	0xFF8
  4060                           tblptrh	equ	0xFF7
  4061                           tblptrl	equ	0xFF6
  4062                           tablat	equ	0xFF5
  4063                           prodh	equ	0xFF4
  4064                           prodl	equ	0xFF3
  4065                           intcon	equ	0xFF2
  4066                           intcon2	equ	0xFF1
  4067                           postinc0	equ	0xFEE
  4068                           wreg	equ	0xFE8
  4069                           indf1	equ	0xFE7
  4070                           postdec1	equ	0xFE5
  4071                           fsr1h	equ	0xFE2
  4072                           fsr1l	equ	0xFE1
  4073                           indf2	equ	0xFDF
  4074                           fsr2h	equ	0xFDA
  4075                           fsr2l	equ	0xFD9
  4076                           status	equ	0xFD8
  4077                           
  4078 ;; *************** function _Source_END_DEVICE_INFO *****************
  4079 ;; Defined at:
  4080 ;;		line 234 in file "../src/demo_ouput.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  SrAddr          2   19[BANK0 ] PTR unsigned char 
  4083 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;		None               void
  4088 ;; Registers used:
  4089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : F/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4099 ;;Total ram usage:        2 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    6
  4102 ;; This function calls:
  4103 ;;		_DELAY_ms
  4104 ;;		_LCD_Erase
  4105 ;;		_LCD_Update
  4106 ;;		_sprintf
  4107 ;; This function is called by:
  4108 ;;		_Process_RxMessage
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text9
  4113  0030F6                     __ptext9:
  4114                           	opt stack 0
  4115  0030F6                     _Source_END_DEVICE_INFO:
  4116                           	opt stack 21
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;demo_ouput.c: 236: LCD_Erase();
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;incstack = 0
  4123  0030F6  EC96  F01C         	call	_LCD_Erase	;wreg free
  4124                           
  4125                           ;demo_ouput.c: 237: sprintf((char *)&(LCDText), (char*)"Data Packet from");
  4126  0030FA  0EBE               	movlw	low _LCDText
  4127  0030FC  6E22               	movwf	sprintf@sp,c
  4128  0030FE  0E01               	movlw	high _LCDText
  4129  003100  6E23               	movwf	sprintf@sp+1,c
  4130  003102  0E81               	movlw	low STR_28
  4131  003104  6E24               	movwf	sprintf@f,c
  4132  003106  0EFF               	movlw	high STR_28
  4133  003108  6E25               	movwf	sprintf@f+1,c
  4134  00310A  EC68  F004         	call	_sprintf	;wreg free
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;demo_ouput.c: 238: sprintf((char *)&(LCDText[16]), (char*)" Address:%02x%02x%02x",SrAdd
      +                          r[0],SrAddr[1],SrAddr[2]);
  4138  00310E  0ECE               	movlw	low (_LCDText+16)
  4139  003110  6E22               	movwf	sprintf@sp,c
  4140  003112  0E01               	movlw	high (_LCDText+16)
  4141  003114  6E23               	movwf	sprintf@sp+1,c
  4142  003116  0EFF               	movlw	low STR_29
  4143  003118  6E24               	movwf	sprintf@f,c
  4144  00311A  0EFE               	movlw	high STR_29
  4145  00311C  6E25               	movwf	sprintf@f+1,c
  4146  00311E  C073  FFD9         	movff	Source_END_DEVICE_INFO@SrAddr,fsr2l
  4147  003122  C074  FFDA         	movff	Source_END_DEVICE_INFO@SrAddr+1,fsr2h
  4148  003126  50DF               	movf	indf2,w,c
  4149  003128  6E26               	movwf	?_sprintf+4,c
  4150  00312A  6A27               	clrf	?_sprintf+5,c
  4151  00312C  EE20 F001          	lfsr	2,1
  4152  003130  5173               	movf	Source_END_DEVICE_INFO@SrAddr& (0+255),w,b
  4153  003132  26D9               	addwf	fsr2l,f,c
  4154  003134  5174               	movf	(Source_END_DEVICE_INFO@SrAddr+1)& (0+255),w,b
  4155  003136  22DA               	addwfc	fsr2h,f,c
  4156  003138  50DF               	movf	indf2,w,c
  4157  00313A  6E28               	movwf	?_sprintf+6,c
  4158  00313C  6A29               	clrf	?_sprintf+7,c
  4159  00313E  EE20 F002          	lfsr	2,2
  4160  003142  5173               	movf	Source_END_DEVICE_INFO@SrAddr& (0+255),w,b
  4161  003144  26D9               	addwf	fsr2l,f,c
  4162  003146  5174               	movf	(Source_END_DEVICE_INFO@SrAddr+1)& (0+255),w,b
  4163  003148  22DA               	addwfc	fsr2h,f,c
  4164  00314A  50DF               	movf	indf2,w,c
  4165  00314C  6E2A               	movwf	?_sprintf+8,c
  4166  00314E  6A2B               	clrf	?_sprintf+9,c
  4167  003150  EC68  F004         	call	_sprintf	;wreg free
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;demo_ouput.c: 239: LCD_Update();
  4171  003154  EC06  F018         	call	_LCD_Update	;wreg free
  4172                           
  4173                           ;demo_ouput.c: 240: DELAY_ms(1200);
  4174  003158  0E04               	movlw	4
  4175  00315A  6E17               	movwf	DELAY_ms@ms+1,c
  4176  00315C  0EB0               	movlw	176
  4177  00315E  6E16               	movwf	DELAY_ms@ms,c
  4178  003160  EFD5  F013         	goto	_DELAY_ms	;wreg free
  4179  003164                     __end_of_Source_END_DEVICE_INFO:
  4180                           	opt stack 0
  4181                           tblptru	equ	0xFF8
  4182                           tblptrh	equ	0xFF7
  4183                           tblptrl	equ	0xFF6
  4184                           tablat	equ	0xFF5
  4185                           prodh	equ	0xFF4
  4186                           prodl	equ	0xFF3
  4187                           intcon	equ	0xFF2
  4188                           intcon2	equ	0xFF1
  4189                           postinc0	equ	0xFEE
  4190                           wreg	equ	0xFE8
  4191                           indf1	equ	0xFE7
  4192                           postdec1	equ	0xFE5
  4193                           fsr1h	equ	0xFE2
  4194                           fsr1l	equ	0xFE1
  4195                           indf2	equ	0xFDF
  4196                           fsr2h	equ	0xFDA
  4197                           fsr2l	equ	0xFD9
  4198                           status	equ	0xFD8
  4199                           
  4200 ;; *************** function _DemoOutput_UpdateTxRx *****************
  4201 ;; Defined at:
  4202 ;;		line 188 in file "../src/demo_ouput.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  TxNum           1    wreg     unsigned char 
  4205 ;;  RxNum           1   20[BANK0 ] unsigned char 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  TxNum           1   21[BANK0 ] unsigned char 
  4208 ;; Return value:  Size  Location     Type
  4209 ;;		None               void
  4210 ;; Registers used:
  4211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4212 ;; Tracked objects:
  4213 ;;		On entry : F/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4217 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4220 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4221 ;;Total ram usage:        2 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    7
  4224 ;; This function calls:
  4225 ;;		_LCDTRXCount
  4226 ;; This function is called by:
  4227 ;;		_Process_RxMessage
  4228 ;;		_run_star_demo
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text10
  4233  003AA2                     __ptext10:
  4234                           	opt stack 0
  4235  003AA2                     _DemoOutput_UpdateTxRx:
  4236                           	opt stack 20
  4237                           
  4238                           ;incstack = 0
  4239                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  4240  003AA2  6F75               	movwf	DemoOutput_UpdateTxRx@TxNum& (0+255),b
  4241                           
  4242                           ;demo_ouput.c: 190: LCDTRXCount(TxNum, RxNum);
  4243  003AA4  C074  F032         	movff	DemoOutput_UpdateTxRx@RxNum,LCDTRXCount@rxCount
  4244  003AA8  0100               	movlb	0	; () banked
  4245  003AAA  5175               	movf	DemoOutput_UpdateTxRx@TxNum& (0+255),w,b
  4246  003AAC  EF98  F01A         	goto	_LCDTRXCount
  4247  003AB0                     __end_of_DemoOutput_UpdateTxRx:
  4248                           	opt stack 0
  4249                           tblptru	equ	0xFF8
  4250                           tblptrh	equ	0xFF7
  4251                           tblptrl	equ	0xFF6
  4252                           tablat	equ	0xFF5
  4253                           prodh	equ	0xFF4
  4254                           prodl	equ	0xFF3
  4255                           intcon	equ	0xFF2
  4256                           intcon2	equ	0xFF1
  4257                           postinc0	equ	0xFEE
  4258                           wreg	equ	0xFE8
  4259                           indf1	equ	0xFE7
  4260                           postdec1	equ	0xFE5
  4261                           fsr1h	equ	0xFE2
  4262                           fsr1l	equ	0xFE1
  4263                           indf2	equ	0xFDF
  4264                           fsr2h	equ	0xFDA
  4265                           fsr2l	equ	0xFD9
  4266                           status	equ	0xFD8
  4267                           
  4268 ;; *************** function _LCDTRXCount *****************
  4269 ;; Defined at:
  4270 ;;		line 120 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;  txCount         1    wreg     unsigned char 
  4273 ;;  rxCount         1   49[COMRAM] unsigned char 
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;  txCount         1   19[BANK0 ] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;		None               void
  4278 ;; Registers used:
  4279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : F/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4285 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4288 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4289 ;;Total ram usage:        2 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    6
  4292 ;; This function calls:
  4293 ;;		_LCD_Erase
  4294 ;;		_LCD_Update
  4295 ;;		_sprintf
  4296 ;; This function is called by:
  4297 ;;		_DemoOutput_UpdateTxRx
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text11
  4302  003530                     __ptext11:
  4303                           	opt stack 0
  4304  003530                     _LCDTRXCount:
  4305                           	opt stack 20
  4306                           
  4307                           ;incstack = 0
  4308                           ;LCDTRXCount@txCount stored from wreg
  4309  003530  6F73               	movwf	LCDTRXCount@txCount& (0+255),b
  4310                           
  4311                           ;lcd.c: 123: LCD_Erase();
  4312  003532  EC96  F01C         	call	_LCD_Erase	;wreg free
  4313                           
  4314                           ;lcd.c: 124: sprintf((char *)LCDText, (char*)"TX:%3d , RX:%3d", txCount , rxCount);
  4315  003536  0EBE               	movlw	low _LCDText
  4316  003538  6E22               	movwf	sprintf@sp,c
  4317  00353A  0E01               	movlw	high _LCDText
  4318  00353C  6E23               	movwf	sprintf@sp+1,c
  4319  00353E  0EA2               	movlw	low STR_14
  4320  003540  6E24               	movwf	sprintf@f,c
  4321  003542  0EFF               	movlw	high STR_14
  4322  003544  6E25               	movwf	sprintf@f+1,c
  4323  003546  C073  F026         	movff	LCDTRXCount@txCount,?_sprintf+4
  4324  00354A  6A27               	clrf	?_sprintf+5,c
  4325  00354C  C032  F028         	movff	LCDTRXCount@rxCount,?_sprintf+6
  4326  003550  6A29               	clrf	?_sprintf+7,c
  4327  003552  EC68  F004         	call	_sprintf	;wreg free
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;lcd.c: 125: sprintf((char *)&(LCDText[16]), (char*)"Message Count");
  4331  003556  0ECE               	movlw	low (_LCDText+16)
  4332  003558  6E22               	movwf	sprintf@sp,c
  4333  00355A  0E01               	movlw	high (_LCDText+16)
  4334  00355C  6E23               	movwf	sprintf@sp+1,c
  4335  00355E  0EB2               	movlw	low STR_15
  4336  003560  6E24               	movwf	sprintf@f,c
  4337  003562  0EFF               	movlw	high STR_15
  4338  003564  6E25               	movwf	sprintf@f+1,c
  4339  003566  EC68  F004         	call	_sprintf	;wreg free
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;lcd.c: 126: LCD_Update();
  4343  00356A  EF06  F018         	goto	_LCD_Update	;wreg free
  4344  00356E                     __end_of_LCDTRXCount:
  4345                           	opt stack 0
  4346                           tblptru	equ	0xFF8
  4347                           tblptrh	equ	0xFF7
  4348                           tblptrl	equ	0xFF6
  4349                           tablat	equ	0xFF5
  4350                           prodh	equ	0xFF4
  4351                           prodl	equ	0xFF3
  4352                           intcon	equ	0xFF2
  4353                           intcon2	equ	0xFF1
  4354                           postinc0	equ	0xFEE
  4355                           wreg	equ	0xFE8
  4356                           indf1	equ	0xFE7
  4357                           postdec1	equ	0xFE5
  4358                           fsr1h	equ	0xFE2
  4359                           fsr1l	equ	0xFE1
  4360                           indf2	equ	0xFDF
  4361                           fsr2h	equ	0xFDA
  4362                           fsr2l	equ	0xFD9
  4363                           status	equ	0xFD8
  4364                           
  4365 ;; *************** function _MiApp_UnicastStar *****************
  4366 ;; Defined at:
  4367 ;;		line 1974 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  SecEn           1    wreg     unsigned char 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  SecEn           1    0[BANK1 ] unsigned char 
  4372 ;;  t2              4    5[BANK1 ] struct _MIWI_TICK
  4373 ;;  t1              4    1[BANK1 ] struct _MIWI_TICK
  4374 ;;  status          1    0        unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      unsigned char 
  4377 ;; Registers used:
  4378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : F/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4385 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4386 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4387 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4388 ;;Total ram usage:       13 bytes
  4389 ;; Hardware stack levels used:    1
  4390 ;; Hardware stack levels required when called:   14
  4391 ;; This function calls:
  4392 ;;		_MiApp_MessageAvailable
  4393 ;;		_MiWi_TickGet
  4394 ;;		_SendPacket
  4395 ;; This function is called by:
  4396 ;;		_run_star_demo
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text12
  4401  002AA6                     __ptext12:
  4402                           	opt stack 0
  4403  002AA6                     _MiApp_UnicastStar:
  4404                           	opt stack 14
  4405                           
  4406                           ;incstack = 0
  4407                           ;MiApp_UnicastStar@SecEn stored from wreg
  4408  002AA6  0101               	movlb	1	; () banked
  4409  002AA8  6FE7               	movwf	MiApp_UnicastStar@SecEn& (0+255),b
  4410                           
  4411                           ;miwi_p2p.c: 1976: rec_ack = 0;
  4412  002AAA  0100               	movlb	0	; () banked
  4413  002AAC  6BE9               	clrf	_rec_ack& (0+255),b
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;miwi_p2p.c: 1977: bool status;
  4417                           ;miwi_p2p.c: 1982: status = SendPacket(0, myPANID, ConnectionTable[0].Address, 1, SecEn)
      +                          ;
  4418  002AAE  C0EA  F07B         	movff	_myPANID,SendPacket@DestinationPANID
  4419  002AB2  C0EB  F07C         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  4420  002AB6  0E7C               	movlw	low (_ConnectionTable+4)
  4421  002AB8  6F7D               	movwf	SendPacket@DestinationAddress& (0+255),b
  4422  002ABA  0E02               	movlw	high (_ConnectionTable+4)
  4423  002ABC  6F7E               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  4424  002ABE  0E01               	movlw	1
  4425  002AC0  6F7F               	movwf	SendPacket@isCommand& (0+255),b
  4426  002AC2  C1E7  F080         	movff	MiApp_UnicastStar@SecEn,SendPacket@SecurityEnabled
  4427  002AC6  0E00               	movlw	0
  4428  002AC8  ECA1  F014         	call	_SendPacket
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;miwi_p2p.c: 1987: MIWI_TICK t1, t2;
  4432                           ;miwi_p2p.c: 1989: t1 = MiWi_TickGet();
  4433  002ACC  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  4434  002AD0  C016  F1E8         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t1
  4435  002AD4  C017  F1E9         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t1+1
  4436  002AD8  C018  F1EA         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t1+2
  4437  002ADC  C019  F1EB         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t1+3
  4438                           
  4439                           ;miwi_p2p.c: 1990: while (!rec_ack)
  4440  002AE0  D02A               	goto	l13129
  4441  002AE2                     l13119:
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;miwi_p2p.c: 1991: {
  4445                           ;miwi_p2p.c: 1992: t2 = MiWi_TickGet();
  4446  002AE2  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  4447  002AE6  C016  F1EC         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t2
  4448  002AEA  C017  F1ED         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t2+1
  4449  002AEE  C018  F1EE         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t2+2
  4450  002AF2  C019  F1EF         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t2+3
  4451                           
  4452                           ;miwi_p2p.c: 1993: MiApp_MessageAvailable();
  4453  002AF6  EC58  F01D         	call	_MiApp_MessageAvailable	;wreg free
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;miwi_p2p.c: 1996: if((t2.Val - t1.Val) > ((((uint32_t)(16000000)/32)/10)))
  4457  002AFA  0101               	movlb	1	; () banked
  4458  002AFC  51E8               	movf	MiApp_UnicastStar@t1& (0+255),w,b
  4459  002AFE  5DEC               	subwf	MiApp_UnicastStar@t2& (0+255),w,b
  4460  002B00  0100               	movlb	0	; () banked
  4461  002B02  6FB0               	movwf	??_MiApp_UnicastStar& (0+255),b
  4462  002B04  0101               	movlb	1	; () banked
  4463  002B06  51E9               	movf	(MiApp_UnicastStar@t1+1)& (0+255),w,b
  4464  002B08  59ED               	subwfb	(MiApp_UnicastStar@t2+1)& (0+255),w,b
  4465  002B0A  0100               	movlb	0	; () banked
  4466  002B0C  6FB1               	movwf	(??_MiApp_UnicastStar+1)& (0+255),b
  4467  002B0E  0101               	movlb	1	; () banked
  4468  002B10  51EA               	movf	(MiApp_UnicastStar@t1+2)& (0+255),w,b
  4469  002B12  59EE               	subwfb	(MiApp_UnicastStar@t2+2)& (0+255),w,b
  4470  002B14  0100               	movlb	0	; () banked
  4471  002B16  6FB2               	movwf	(??_MiApp_UnicastStar+2)& (0+255),b
  4472  002B18  0101               	movlb	1	; () banked
  4473  002B1A  51EB               	movf	(MiApp_UnicastStar@t1+3)& (0+255),w,b
  4474  002B1C  59EF               	subwfb	(MiApp_UnicastStar@t2+3)& (0+255),w,b
  4475  002B1E  0100               	movlb	0	; () banked
  4476  002B20  6FB3               	movwf	(??_MiApp_UnicastStar+3)& (0+255),b
  4477  002B22  51B3               	movf	(??_MiApp_UnicastStar+3)& (0+255),w,b
  4478  002B24  11B2               	iorwf	(??_MiApp_UnicastStar+2)& (0+255),w,b
  4479  002B26  E105               	bnz	u13460
  4480  002B28  0E51               	movlw	81
  4481  002B2A  5DB0               	subwf	??_MiApp_UnicastStar& (0+255),w,b
  4482  002B2C  0EC3               	movlw	195
  4483  002B2E  59B1               	subwfb	(??_MiApp_UnicastStar+1)& (0+255),w,b
  4484  002B30  E302               	bnc	l13129
  4485  002B32                     u13460:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;miwi_p2p.c: 1997: {
  4489                           ;miwi_p2p.c: 1998: if (rec_ack != 1)
  4490  002B32  05E9               	decf	_rec_ack& (0+255),w,b
  4491  002B34  E103               	bnz	l13131
  4492  002B36                     l13129:
  4493  002B36  0100               	movlb	0	; () banked
  4494  002B38  51E9               	movf	_rec_ack& (0+255),w,b
  4495  002B3A  E0D3               	bz	l13119
  4496  002B3C                     l13131:
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;miwi_p2p.c: 2001: }
  4500                           ;miwi_p2p.c: 2002: }
  4501                           ;miwi_p2p.c: 2003: }
  4502                           ;miwi_p2p.c: 2006: return rec_ack;
  4503  002B3C  51E9               	movf	_rec_ack& (0+255),w,b
  4504                           
  4505                           ; BSR set to: 0
  4506  002B3E  0012               	return		;funcret
  4507  002B40                     __end_of_MiApp_UnicastStar:
  4508                           	opt stack 0
  4509                           tblptru	equ	0xFF8
  4510                           tblptrh	equ	0xFF7
  4511                           tblptrl	equ	0xFF6
  4512                           tablat	equ	0xFF5
  4513                           prodh	equ	0xFF4
  4514                           prodl	equ	0xFF3
  4515                           intcon	equ	0xFF2
  4516                           intcon2	equ	0xFF1
  4517                           postinc0	equ	0xFEE
  4518                           wreg	equ	0xFE8
  4519                           indf1	equ	0xFE7
  4520                           postdec1	equ	0xFE5
  4521                           fsr1h	equ	0xFE2
  4522                           fsr1l	equ	0xFE1
  4523                           indf2	equ	0xFDF
  4524                           fsr2h	equ	0xFDA
  4525                           fsr2l	equ	0xFD9
  4526                           status	equ	0xFD8
  4527                           
  4528 ;; *************** function _MiApp_BroadcastPacket *****************
  4529 ;; Defined at:
  4530 ;;		line 1693 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  SecEn           1    wreg     unsigned char 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  SecEn           1   43[BANK0 ] unsigned char 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      unsigned char 
  4537 ;; Registers used:
  4538 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : F/0
  4541 ;;		On exit  : F/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4547 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4548 ;;Total ram usage:        1 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    9
  4551 ;; This function calls:
  4552 ;;		_SendPacket
  4553 ;; This function is called by:
  4554 ;;		_run_star_demo
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text13
  4559  0039B2                     __ptext13:
  4560                           	opt stack 0
  4561  0039B2                     _MiApp_BroadcastPacket:
  4562                           	opt stack 19
  4563                           
  4564                           ; BSR set to: 0
  4565                           ;incstack = 0
  4566                           ;MiApp_BroadcastPacket@SecEn stored from wreg
  4567  0039B2  6F8B               	movwf	MiApp_BroadcastPacket@SecEn& (0+255),b
  4568                           
  4569                           ;miwi_p2p.c: 1721: return SendPacket(1, myPANID, (0), 0, SecEn);
  4570                           ;	Return value of _MiApp_BroadcastPacket is never used
  4571  0039B4  C0EA  F07B         	movff	_myPANID,SendPacket@DestinationPANID
  4572  0039B8  C0EB  F07C         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  4573  0039BC  0100               	movlb	0	; () banked
  4574  0039BE  6B7D               	clrf	SendPacket@DestinationAddress& (0+255),b
  4575  0039C0  6B7E               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  4576  0039C2  6B7F               	clrf	SendPacket@isCommand& (0+255),b
  4577  0039C4  C08B  F080         	movff	MiApp_BroadcastPacket@SecEn,SendPacket@SecurityEnabled
  4578  0039C8  0E01               	movlw	1
  4579  0039CA  EFA1  F014         	goto	_SendPacket
  4580  0039CE                     __end_of_MiApp_BroadcastPacket:
  4581                           	opt stack 0
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           prodh	equ	0xFF4
  4587                           prodl	equ	0xFF3
  4588                           intcon	equ	0xFF2
  4589                           intcon2	equ	0xFF1
  4590                           postinc0	equ	0xFEE
  4591                           wreg	equ	0xFE8
  4592                           indf1	equ	0xFE7
  4593                           postdec1	equ	0xFE5
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           indf2	equ	0xFDF
  4597                           fsr2h	equ	0xFDA
  4598                           fsr2l	equ	0xFD9
  4599                           status	equ	0xFD8
  4600                           
  4601 ;; *************** function _ButtonPressed *****************
  4602 ;; Defined at:
  4603 ;;		line 260 in file "../src/demo_ouput.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  t               4   35[COMRAM] struct _MIWI_TICK
  4608 ;;  tickDifferen    4   31[COMRAM] struct _MIWI_TICK
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  1    wreg      unsigned char 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0, cstack
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4619 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4621 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4622 ;;Total ram usage:        8 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:    4
  4625 ;; This function calls:
  4626 ;;		_MiWi_TickGet
  4627 ;; This function is called by:
  4628 ;;		_freezer_feature
  4629 ;;		_run_star_demo
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text14
  4634  002D92                     __ptext14:
  4635                           	opt stack 0
  4636  002D92                     _ButtonPressed:
  4637                           	opt stack 25
  4638                           
  4639                           ;demo_ouput.c: 262: MIWI_TICK tickDifference;
  4640                           ;demo_ouput.c: 264: if(PORTBbits.RB1 == 0)
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;incstack = 0
  4644  002D92  B281               	btfsc	3969,1,c	;volatile
  4645  002D94  D010               	goto	l1117
  4646                           
  4647                           ;demo_ouput.c: 265: {
  4648                           ;demo_ouput.c: 267: if(PUSH_BUTTON_pressed == 0)
  4649  002D96  0100               	movlb	0	; () banked
  4650  002D98  51E0               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  4651  002D9A  E13E               	bnz	l13243
  4652                           
  4653                           ; BSR set to: 0
  4654                           ;demo_ouput.c: 268: {
  4655                           ;demo_ouput.c: 269: PUSH_BUTTON_pressed = 1;
  4656  002D9C  0E01               	movlw	1
  4657  002D9E  6FE0               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;demo_ouput.c: 270: PUSH_BUTTON_press_time = MiWi_TickGet();
  4661  002DA0  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  4662  002DA4  C016  F100         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4663  002DA8  C017  F101         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4664  002DAC  C018  F102         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4665  002DB0  C019  F103         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4666                           
  4667                           ;demo_ouput.c: 271: return 1;
  4668  002DB4  0C01               	retlw	1
  4669  002DB6                     l1117:
  4670                           
  4671                           ;demo_ouput.c: 274: else if(PORTBbits.RB2 == 0)
  4672  002DB6  B481               	btfsc	3969,2,c	;volatile
  4673  002DB8  D010               	goto	l13235
  4674                           
  4675                           ;demo_ouput.c: 275: {
  4676                           ;demo_ouput.c: 277: if(PUSH_BUTTON_pressed == 0)
  4677  002DBA  0100               	movlb	0	; () banked
  4678  002DBC  51E0               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  4679  002DBE  E12C               	bnz	l13243
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;demo_ouput.c: 278: {
  4683                           ;demo_ouput.c: 279: PUSH_BUTTON_pressed = 1;
  4684  002DC0  0E01               	movlw	1
  4685  002DC2  6FE0               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;demo_ouput.c: 280: PUSH_BUTTON_press_time = MiWi_TickGet();
  4689  002DC4  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  4690  002DC8  C016  F100         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4691  002DCC  C017  F101         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4692  002DD0  C018  F102         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4693  002DD4  C019  F103         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4694                           
  4695                           ;demo_ouput.c: 281: return 2;
  4696  002DD8  0C02               	retlw	2
  4697  002DDA                     l13235:
  4698                           
  4699                           ;demo_ouput.c: 284: else
  4700                           ;demo_ouput.c: 285: {
  4701                           ;demo_ouput.c: 287: MIWI_TICK t = MiWi_TickGet();
  4702  002DDA  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  4703  002DDE  C016  F024         	movff	?_MiWi_TickGet,ButtonPressed@t
  4704  002DE2  C017  F025         	movff	?_MiWi_TickGet+1,ButtonPressed@t+1
  4705  002DE6  C018  F026         	movff	?_MiWi_TickGet+2,ButtonPressed@t+2
  4706  002DEA  C019  F027         	movff	?_MiWi_TickGet+3,ButtonPressed@t+3
  4707                           
  4708                           ;demo_ouput.c: 290: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  4709  002DEE  0101               	movlb	1	; () banked
  4710  002DF0  5100               	movf	_PUSH_BUTTON_press_time& (0+255),w,b
  4711  002DF2  5C24               	subwf	ButtonPressed@t,w,c
  4712  002DF4  6E20               	movwf	ButtonPressed@tickDifference,c
  4713  002DF6  5101               	movf	(_PUSH_BUTTON_press_time+1)& (0+255),w,b
  4714  002DF8  5825               	subwfb	ButtonPressed@t+1,w,c
  4715  002DFA  6E21               	movwf	ButtonPressed@tickDifference+1,c
  4716  002DFC  5102               	movf	(_PUSH_BUTTON_press_time+2)& (0+255),w,b
  4717  002DFE  5826               	subwfb	ButtonPressed@t+2,w,c
  4718  002E00  6E22               	movwf	ButtonPressed@tickDifference+2,c
  4719  002E02  5103               	movf	(_PUSH_BUTTON_press_time+3)& (0+255),w,b
  4720  002E04  5827               	subwfb	ButtonPressed@t+3,w,c
  4721  002E06  6E23               	movwf	ButtonPressed@tickDifference+3,c
  4722                           
  4723                           ; BSR set to: 1
  4724                           ;demo_ouput.c: 293: if(tickDifference.Val > 0x00003FFF)
  4725  002E08  5023               	movf	ButtonPressed@tickDifference+3,w,c
  4726  002E0A  1022               	iorwf	ButtonPressed@tickDifference+2,w,c
  4727  002E0C  E103               	bnz	u13600
  4728  002E0E  0E40               	movlw	64
  4729  002E10  5C21               	subwf	ButtonPressed@tickDifference+1,w,c
  4730  002E12  E302               	bnc	l13243
  4731  002E14                     u13600:
  4732                           
  4733                           ; BSR set to: 1
  4734                           ;demo_ouput.c: 294: {
  4735                           ;demo_ouput.c: 295: PUSH_BUTTON_pressed = 0;
  4736  002E14  0100               	movlb	0	; () banked
  4737  002E16  6BE0               	clrf	_PUSH_BUTTON_pressed& (0+255),b
  4738  002E18                     l13243:
  4739                           
  4740                           ;demo_ouput.c: 296: }
  4741                           ;demo_ouput.c: 297: }
  4742                           ;demo_ouput.c: 299: return 0;
  4743  002E18  0C00               	retlw	0	;funcret
  4744  002E1A                     __end_of_ButtonPressed:
  4745                           	opt stack 0
  4746                           tblptru	equ	0xFF8
  4747                           tblptrh	equ	0xFF7
  4748                           tblptrl	equ	0xFF6
  4749                           tablat	equ	0xFF5
  4750                           prodh	equ	0xFF4
  4751                           prodl	equ	0xFF3
  4752                           intcon	equ	0xFF2
  4753                           intcon2	equ	0xFF1
  4754                           postinc0	equ	0xFEE
  4755                           wreg	equ	0xFE8
  4756                           indf1	equ	0xFE7
  4757                           postdec1	equ	0xFE5
  4758                           fsr1h	equ	0xFE2
  4759                           fsr1l	equ	0xFE1
  4760                           indf2	equ	0xFDF
  4761                           fsr2h	equ	0xFDA
  4762                           fsr2l	equ	0xFD9
  4763                           status	equ	0xFD8
  4764                           
  4765 ;; *************** function _Initialize_Demo *****************
  4766 ;; Defined at:
  4767 ;;		line 134 in file "../src/task.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  freezer_enab    1    wreg     unsigned char 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  freezer_enab    1   85[BANK0 ] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      unsigned char 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : F/1
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4782 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4784 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4785 ;;Total ram usage:        1 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:   15
  4788 ;; This function calls:
  4789 ;;		_DemoOutput_Channel
  4790 ;;		_DemoOutput_ChannelError
  4791 ;;		_EEPROM_Write
  4792 ;;		_MiApp_ConnectionMode
  4793 ;;		_MiApp_EstablishConnection
  4794 ;;		_MiApp_ProtocolInit
  4795 ;;		_MiApp_SetChannel
  4796 ;;		_MiApp_StartConnection
  4797 ;;		_Read_MAC_Address
  4798 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  4799 ;; This function is called by:
  4800 ;;		_main
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text15
  4805  002BDA                     __ptext15:
  4806                           	opt stack 0
  4807  002BDA                     _Initialize_Demo:
  4808                           	opt stack 15
  4809                           
  4810                           ;incstack = 0
  4811                           ;Initialize_Demo@freezer_enable stored from wreg
  4812  002BDA  0100               	movlb	0	; () banked
  4813  002BDC  6FB5               	movwf	Initialize_Demo@freezer_enable& (0+255),b
  4814                           
  4815                           ;task.c: 138: Read_MAC_Address(&myLongAddress);
  4816  002BDE  0EDF               	movlw	low _myLongAddress
  4817  002BE0  6E1B               	movwf	Read_MAC_Address@myAddress,c
  4818  002BE2  0E01               	movlw	high _myLongAddress
  4819  002BE4  6E1C               	movwf	Read_MAC_Address@myAddress+1,c
  4820  002BE6  EC0D  F017         	call	_Read_MAC_Address	;wreg free
  4821                           
  4822                           ;task.c: 141: if (freezer_enable)
  4823  002BEA  0100               	movlb	0	; () banked
  4824  002BEC  51B5               	movf	Initialize_Demo@freezer_enable& (0+255),w,b
  4825  002BEE  E004               	bz	l1204
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;task.c: 142: {
  4829                           ;task.c: 153: MiApp_ProtocolInit(1);
  4830  002BF0  0E01               	movlw	1
  4831  002BF2  EC93  F010         	call	_MiApp_ProtocolInit
  4832  002BF6  D039               	goto	L23
  4833  002BF8                     l1204:
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;task.c: 161: else
  4837                           ;task.c: 162: {
  4838                           ;task.c: 163: LATAbits.LATA6 = 0;
  4839  002BF8  9C89               	bcf	3977,6,c	;volatile
  4840                           
  4841                           ;task.c: 164: LATAbits.LATA7 = 0;
  4842  002BFA  9E89               	bcf	3977,7,c	;volatile
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;task.c: 176: MiApp_ProtocolInit(0);
  4846  002BFC  0E00               	movlw	0
  4847  002BFE  EC93  F010         	call	_MiApp_ProtocolInit
  4848  002C02  0E19               	movlw	25
  4849  002C04  EC34  F01C         	call	_MiApp_SetChannel
  4850  002C08  0900               	iorlw	0
  4851  002C0A  E103               	bnz	l13775
  4852  002C0C  0E19               	movlw	25
  4853  002C0E  EC6C  F01D         	call	_DemoOutput_ChannelError
  4854  002C12                     l13775:
  4855                           
  4856                           ;task.c: 182: }
  4857                           ;task.c: 193: MiApp_ConnectionMode(0x00);
  4858  002C12  0E00               	movlw	0
  4859  002C14  EC6A  F01B         	call	_MiApp_ConnectionMode
  4860  002C18  0E00               	movlw	0
  4861  002C1A  0100               	movlb	0	; () banked
  4862  002C1C  6F77               	movwf	DemoOutput_Channel@Step& (0+255),b
  4863  002C1E  0E19               	movlw	25
  4864  002C20  ECF5  F01A         	call	_DemoOutput_Channel
  4865                           
  4866                           ;task.c: 208: i = MiApp_EstablishConnection(0xFF, 0x00);
  4867  002C24  0100               	movlb	0	; () banked
  4868  002C26  6BB0               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  4869  002C28  EC71  F011         	call	_MiApp_EstablishConnection
  4870  002C2C  6E40               	movwf	_i,c
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;task.c: 213: if( i != 0xFF )
  4874  002C2E  2840               	incf	_i,w,c
  4875  002C30  E007               	bz	l13787
  4876                           
  4877                           ; BSR set to: 0
  4878  002C32  0E01               	movlw	1
  4879  002C34  6F77               	movwf	DemoOutput_Channel@Step& (0+255),b
  4880  002C36  0E19               	movlw	25
  4881  002C38  ECF5  F01A         	call	_DemoOutput_Channel
  4882                           
  4883                           ;task.c: 216: role = 0;
  4884  002C3C  6A48               	clrf	_role,c
  4885                           
  4886                           ;task.c: 217: }
  4887  002C3E  D00B               	goto	l13791
  4888  002C40                     l13787:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;task.c: 218: else
  4892                           ;task.c: 219: {
  4893                           ;task.c: 250: MiApp_StartConnection(0x00, 10, 0);
  4894  002C40  0E0A               	movlw	10
  4895  002C42  6E20               	movwf	MiApp_StartConnection@ScanDuration,c
  4896  002C44  0E00               	movlw	0
  4897  002C46  6A21               	clrf	MiApp_StartConnection@ChannelMap,c
  4898  002C48  6A22               	clrf	MiApp_StartConnection@ChannelMap+1,c
  4899  002C4A  6A23               	clrf	MiApp_StartConnection@ChannelMap+2,c
  4900  002C4C  6A24               	clrf	MiApp_StartConnection@ChannelMap+3,c
  4901  002C4E  EC3D  F019         	call	_MiApp_StartConnection
  4902                           
  4903                           ;task.c: 251: role = 1;
  4904  002C52  0E01               	movlw	1
  4905  002C54  6E48               	movwf	_role,c
  4906  002C56                     l13791:
  4907                           
  4908                           ;task.c: 252: }
  4909                           ;task.c: 254: EEPROM_Write((uint8_t *)&role, 0xB8, 1);
  4910  002C56  0E48               	movlw	low _role
  4911  002C58  6E17               	movwf	EEPROM_Write@dest,c
  4912  002C5A  6A18               	clrf	EEPROM_Write@dest+1,c
  4913  002C5C  0EB8               	movlw	184
  4914  002C5E  6E19               	movwf	EEPROM_Write@addr,c
  4915  002C60  0E01               	movlw	1
  4916  002C62  6E1A               	movwf	EEPROM_Write@count,c
  4917  002C64  EC4D  F017         	call	_EEPROM_Write	;wreg free
  4918                           
  4919                           ;task.c: 271: LATAbits.LATA6 = 1;
  4920  002C68  8C89               	bsf	3977,6,c	;volatile
  4921  002C6A                     L23:
  4922                           
  4923                           ;task.c: 275: STAR_DEMO_OPTIONS_MESSAGE (role);
  4924  002C6A  5048               	movf	_role,w,c
  4925  002C6C  EFB9  F01C         	goto	_STAR_DEMO_OPTIONS_MESSAGE
  4926  002C70                     __end_of_Initialize_Demo:
  4927                           	opt stack 0
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           prodh	equ	0xFF4
  4933                           prodl	equ	0xFF3
  4934                           intcon	equ	0xFF2
  4935                           intcon2	equ	0xFF1
  4936                           postinc0	equ	0xFEE
  4937                           wreg	equ	0xFE8
  4938                           indf1	equ	0xFE7
  4939                           postdec1	equ	0xFE5
  4940                           fsr1h	equ	0xFE2
  4941                           fsr1l	equ	0xFE1
  4942                           indf2	equ	0xFDF
  4943                           fsr2h	equ	0xFDA
  4944                           fsr2l	equ	0xFD9
  4945                           status	equ	0xFD8
  4946                           
  4947 ;; *************** function _STAR_DEMO_OPTIONS_MESSAGE *****************
  4948 ;; Defined at:
  4949 ;;		line 212 in file "../src/demo_ouput.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  NetworkRole     1    wreg     unsigned char 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  NetworkRole     1   23[BANK0 ] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;		None               void
  4956 ;; Registers used:
  4957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4966 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4967 ;;Total ram usage:        1 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    7
  4970 ;; This function calls:
  4971 ;;		_LCDDisplay
  4972 ;; This function is called by:
  4973 ;;		_Initialize_Demo
  4974 ;;		_Process_RxMessage
  4975 ;;		_run_star_demo
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text16
  4980  003972                     __ptext16:
  4981                           	opt stack 0
  4982  003972                     _STAR_DEMO_OPTIONS_MESSAGE:
  4983                           	opt stack 21
  4984                           
  4985                           ;incstack = 0
  4986                           ;STAR_DEMO_OPTIONS_MESSAGE@NetworkRole stored from wreg
  4987  003972  0100               	movlb	0	; () banked
  4988  003974  6F77               	movwf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),b
  4989                           
  4990                           ;demo_ouput.c: 214: if (NetworkRole)
  4991  003976  5177               	movf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),w,b
  4992  003978  E004               	bz	l13049
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;demo_ouput.c: 215: {
  4996                           ;demo_ouput.c: 219: LCDDisplay((char *)"PC :SW1 or SW2  to BroadCast", 0, 0);
  4997  00397A  0E44               	movlw	low STR_26
  4998  00397C  6F73               	movwf	LCDDisplay@text& (0+255),b
  4999  00397E  0EFE               	movlw	high STR_26
  5000  003980  D003               	goto	L24
  5001  003982                     l13049:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;demo_ouput.c: 222: else
  5005                           ;demo_ouput.c: 223: {
  5006                           ;demo_ouput.c: 227: LCDDisplay((char *)"SW1 : Unicast   SW2 : Next Node", 0, 0);
  5007  003982  0EE7               	movlw	low STR_27
  5008  003984  6F73               	movwf	LCDDisplay@text& (0+255),b
  5009  003986  0EFD               	movlw	high STR_27
  5010  003988                     L24:
  5011  003988  6F74               	movwf	(LCDDisplay@text+1)& (0+255),b
  5012  00398A  6B75               	clrf	LCDDisplay@value& (0+255),b
  5013  00398C  6B76               	clrf	LCDDisplay@delay& (0+255),b
  5014  00398E  EF78  F01A         	goto	_LCDDisplay	;wreg free
  5015  003992                     __end_of_STAR_DEMO_OPTIONS_MESSAGE:
  5016                           	opt stack 0
  5017                           tblptru	equ	0xFF8
  5018                           tblptrh	equ	0xFF7
  5019                           tblptrl	equ	0xFF6
  5020                           tablat	equ	0xFF5
  5021                           prodh	equ	0xFF4
  5022                           prodl	equ	0xFF3
  5023                           intcon	equ	0xFF2
  5024                           intcon2	equ	0xFF1
  5025                           postinc0	equ	0xFEE
  5026                           wreg	equ	0xFE8
  5027                           indf1	equ	0xFE7
  5028                           postdec1	equ	0xFE5
  5029                           fsr1h	equ	0xFE2
  5030                           fsr1l	equ	0xFE1
  5031                           indf2	equ	0xFDF
  5032                           fsr2h	equ	0xFDA
  5033                           fsr2l	equ	0xFD9
  5034                           status	equ	0xFD8
  5035                           
  5036 ;; *************** function _Read_MAC_Address *****************
  5037 ;; Defined at:
  5038 ;;		line 83 in file "../src/system_config/miwikit_pic18f46j50_24j40/eeprom.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  myAddress       2   26[COMRAM] PTR unsigned char 
  5041 ;;		 -> myLongAddress(8), 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  i               1   30[COMRAM] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;		None               void
  5046 ;; Registers used:
  5047 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5056 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5057 ;;Total ram usage:        5 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; Hardware stack levels required when called:    6
  5060 ;; This function calls:
  5061 ;;		_EEPROM_Read
  5062 ;; This function is called by:
  5063 ;;		_Initialize_Demo
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text17
  5068  002E1A                     __ptext17:
  5069                           	opt stack 0
  5070  002E1A                     _Read_MAC_Address:
  5071                           	opt stack 23
  5072                           
  5073                           ;eeprom.c: 88: {
  5074                           ;eeprom.c: 89: for(i = 0; i < 3; i++)
  5075                           
  5076                           ;incstack = 0
  5077  002E1A  6A1F               	clrf	Read_MAC_Address@i,c
  5078  002E1C                     l13401:
  5079                           
  5080                           ;eeprom.c: 90: {
  5081                           ;eeprom.c: 91: EEPROM_Read(&(myAddress[8-1-i]), 0xFA+i, 1);
  5082  002E1C  501F               	movf	Read_MAC_Address@i,w,c
  5083  002E1E  5C1B               	subwf	Read_MAC_Address@myAddress,w,c
  5084  002E20  6E1D               	movwf	??_Read_MAC_Address& (0+255),c
  5085  002E22  0E00               	movlw	0
  5086  002E24  581C               	subwfb	Read_MAC_Address@myAddress+1,w,c
  5087  002E26  6E1E               	movwf	(??_Read_MAC_Address+1)& (0+255),c
  5088  002E28  0E07               	movlw	7
  5089  002E2A  241D               	addwf	??_Read_MAC_Address,w,c
  5090  002E2C  6E17               	movwf	EEPROM_Read@dest,c
  5091  002E2E  0E00               	movlw	0
  5092  002E30  201E               	addwfc	??_Read_MAC_Address+1,w,c
  5093  002E32  6E18               	movwf	EEPROM_Read@dest+1,c
  5094  002E34  501F               	movf	Read_MAC_Address@i,w,c
  5095  002E36  0FFA               	addlw	250
  5096  002E38  6E19               	movwf	EEPROM_Read@addr,c
  5097  002E3A  0E01               	movlw	1
  5098  002E3C  6E1A               	movwf	EEPROM_Read@count,c
  5099  002E3E  ECB3  F01B         	call	_EEPROM_Read	;wreg free
  5100  002E42  2A1F               	incf	Read_MAC_Address@i,f,c
  5101  002E44  0E02               	movlw	2
  5102  002E46  641F               	cpfsgt	Read_MAC_Address@i,c
  5103  002E48  D7E9               	goto	l13401
  5104                           
  5105                           ;eeprom.c: 95: {
  5106                           ;eeprom.c: 96: myAddress[4] = 0xFF;
  5107  002E4A  EE20 F004          	lfsr	2,4
  5108  002E4E  501B               	movf	Read_MAC_Address@myAddress,w,c
  5109  002E50  26D9               	addwf	fsr2l,f,c
  5110  002E52  501C               	movf	Read_MAC_Address@myAddress+1,w,c
  5111  002E54  22DA               	addwfc	fsr2h,f,c
  5112  002E56  68DF               	setf	indf2,c
  5113                           
  5114                           ;eeprom.c: 98: }
  5115                           ;eeprom.c: 99: myAddress[3] = 0xFE;
  5116  002E58  EE20 F003          	lfsr	2,3
  5117  002E5C  501B               	movf	Read_MAC_Address@myAddress,w,c
  5118  002E5E  26D9               	addwf	fsr2l,f,c
  5119  002E60  501C               	movf	Read_MAC_Address@myAddress+1,w,c
  5120  002E62  22DA               	addwfc	fsr2h,f,c
  5121  002E64  0EFE               	movlw	254
  5122  002E66  6EDF               	movwf	indf2,c
  5123                           
  5124                           ;eeprom.c: 101: for(i = 0; i < 3; i++)
  5125  002E68  6A1F               	clrf	Read_MAC_Address@i,c
  5126  002E6A                     l13415:
  5127                           
  5128                           ;eeprom.c: 102: {
  5129                           ;eeprom.c: 103: EEPROM_Read(&(myAddress[2-i]), 0xFA+3+i, 1);
  5130  002E6A  501F               	movf	Read_MAC_Address@i,w,c
  5131  002E6C  5C1B               	subwf	Read_MAC_Address@myAddress,w,c
  5132  002E6E  6E1D               	movwf	??_Read_MAC_Address& (0+255),c
  5133  002E70  0E00               	movlw	0
  5134  002E72  581C               	subwfb	Read_MAC_Address@myAddress+1,w,c
  5135  002E74  6E1E               	movwf	(??_Read_MAC_Address+1)& (0+255),c
  5136  002E76  0E02               	movlw	2
  5137  002E78  241D               	addwf	??_Read_MAC_Address,w,c
  5138  002E7A  6E17               	movwf	EEPROM_Read@dest,c
  5139  002E7C  0E00               	movlw	0
  5140  002E7E  201E               	addwfc	??_Read_MAC_Address+1,w,c
  5141  002E80  6E18               	movwf	EEPROM_Read@dest+1,c
  5142  002E82  501F               	movf	Read_MAC_Address@i,w,c
  5143  002E84  0FFD               	addlw	253
  5144  002E86  6E19               	movwf	EEPROM_Read@addr,c
  5145  002E88  0E01               	movlw	1
  5146  002E8A  6E1A               	movwf	EEPROM_Read@count,c
  5147  002E8C  ECB3  F01B         	call	_EEPROM_Read	;wreg free
  5148  002E90  2A1F               	incf	Read_MAC_Address@i,f,c
  5149  002E92  0E02               	movlw	2
  5150  002E94  641F               	cpfsgt	Read_MAC_Address@i,c
  5151  002E96  D7E9               	goto	l13415
  5152  002E98  0C02               	retlw	2
  5153  002E9A                     __end_of_Read_MAC_Address:
  5154                           	opt stack 0
  5155                           tblptru	equ	0xFF8
  5156                           tblptrh	equ	0xFF7
  5157                           tblptrl	equ	0xFF6
  5158                           tablat	equ	0xFF5
  5159                           prodh	equ	0xFF4
  5160                           prodl	equ	0xFF3
  5161                           intcon	equ	0xFF2
  5162                           intcon2	equ	0xFF1
  5163                           postinc0	equ	0xFEE
  5164                           wreg	equ	0xFE8
  5165                           indf1	equ	0xFE7
  5166                           postdec1	equ	0xFE5
  5167                           fsr1h	equ	0xFE2
  5168                           fsr1l	equ	0xFE1
  5169                           indf2	equ	0xFDF
  5170                           fsr2h	equ	0xFDA
  5171                           fsr2l	equ	0xFD9
  5172                           status	equ	0xFD8
  5173                           
  5174 ;; *************** function _MiApp_StartConnection *****************
  5175 ;; Defined at:
  5176 ;;		line 2142 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  Mode            1    wreg     unsigned char 
  5179 ;;  ScanDuration    1   31[COMRAM] unsigned char 
  5180 ;;  ChannelMap      4   32[COMRAM] unsigned long 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  Mode            1   36[COMRAM] unsigned char 
  5183 ;;  tmp             2   37[COMRAM] unsigned int 
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      unsigned char 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : F/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5193 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5194 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5196 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;Total ram usage:        8 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    6
  5200 ;; This function calls:
  5201 ;;		_MiMAC_SetAltAddress
  5202 ;;		_MiWi_TickGet
  5203 ;; This function is called by:
  5204 ;;		_Initialize_Demo
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text18
  5209  00327A                     __ptext18:
  5210                           	opt stack 0
  5211  00327A                     _MiApp_StartConnection:
  5212                           	opt stack 23
  5213                           
  5214                           ;incstack = 0
  5215                           ;MiApp_StartConnection@Mode stored from wreg
  5216  00327A  6E25               	movwf	MiApp_StartConnection@Mode,c
  5217                           
  5218                           ;miwi_p2p.c: 2144: switch(Mode)
  5219  00327C  D021               	goto	l13385
  5220  00327E                     l13371:
  5221                           
  5222                           ;miwi_p2p.c: 2152: myPANID.Val = 0x1234;
  5223  00327E  0E12               	movlw	18
  5224  003280  0100               	movlb	0	; () banked
  5225  003282  6FEB               	movwf	(_myPANID+1)& (0+255),b
  5226  003284  0E34               	movlw	52
  5227  003286  6FEA               	movwf	_myPANID& (0+255),b
  5228                           
  5229                           ; BSR set to: 0
  5230                           ;miwi_p2p.c: 2154: {
  5231                           ;miwi_p2p.c: 2155: uint16_t tmp = 0xFFFF;
  5232  003288  6826               	setf	MiApp_StartConnection@tmp,c
  5233  00328A  6827               	setf	MiApp_StartConnection@tmp+1,c
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;miwi_p2p.c: 2156: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
  5237  00328C  0EEA               	movlw	low _myPANID
  5238  00328E  6E1A               	movwf	MiMAC_SetAltAddress@PANID,c
  5239  003290  0E26               	movlw	MiApp_StartConnection@tmp& (0+255)
  5240  003292  EC12  F019         	call	_MiMAC_SetAltAddress
  5241                           
  5242                           ;miwi_p2p.c: 2157: }
  5243                           ;miwi_p2p.c: 2162: tick1 = MiWi_TickGet();
  5244  003296  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  5245  00329A  C016  F0CA         	movff	?_MiWi_TickGet,_tick1
  5246  00329E  C017  F0CB         	movff	?_MiWi_TickGet+1,_tick1+1
  5247  0032A2  C018  F0CC         	movff	?_MiWi_TickGet+2,_tick1+2
  5248  0032A6  C019  F0CD         	movff	?_MiWi_TickGet+3,_tick1+3
  5249                           
  5250                           ;miwi_p2p.c: 2163: tick4 = MiWi_TickGet();
  5251  0032AA  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  5252  0032AE  C016  F0CE         	movff	?_MiWi_TickGet,_tick4
  5253  0032B2  C017  F0CF         	movff	?_MiWi_TickGet+1,_tick4+1
  5254  0032B6  C018  F0D0         	movff	?_MiWi_TickGet+2,_tick4+2
  5255  0032BA  C019  F0D1         	movff	?_MiWi_TickGet+3,_tick4+3
  5256  0032BE  0012               	return	
  5257  0032C0                     l13385:
  5258  0032C0  5025               	movf	MiApp_StartConnection@Mode,w,c
  5259                           
  5260                           ; Switch size 1, requested type "speed"
  5261                           ; Number of cases is 3, Range of values is 0 to 2
  5262                           ; switch strategies available:
  5263                           ; Name         Instructions Cycles
  5264                           ; simple_byte           10     6 (average)
  5265                           ;	Chosen strategy is simple_byte
  5266  0032C2  E0DD               	bz	l13371
  5267  0032C4  0A01               	xorlw	1	; case 1
  5268  0032C6  A4D8               	btfss	status,2,c
  5269  0032C8  0A03               	xorlw	3	; case 2
  5270  0032CA  0012               	return	
  5271  0032CC                     __end_of_MiApp_StartConnection:
  5272                           	opt stack 0
  5273                           tblptru	equ	0xFF8
  5274                           tblptrh	equ	0xFF7
  5275                           tblptrl	equ	0xFF6
  5276                           tablat	equ	0xFF5
  5277                           prodh	equ	0xFF4
  5278                           prodl	equ	0xFF3
  5279                           intcon	equ	0xFF2
  5280                           intcon2	equ	0xFF1
  5281                           postinc0	equ	0xFEE
  5282                           wreg	equ	0xFE8
  5283                           indf1	equ	0xFE7
  5284                           postdec1	equ	0xFE5
  5285                           fsr1h	equ	0xFE2
  5286                           fsr1l	equ	0xFE1
  5287                           indf2	equ	0xFDF
  5288                           fsr2h	equ	0xFDA
  5289                           fsr2l	equ	0xFD9
  5290                           status	equ	0xFD8
  5291                           
  5292 ;; *************** function _MiApp_ProtocolInit *****************
  5293 ;; Defined at:
  5294 ;;		line 1130 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  bNetworkFree    1    wreg     unsigned char 
  5297 ;; Auto vars:     Size  Location     Type
  5298 ;;  bNetworkFree    1    6[BANK0 ] unsigned char 
  5299 ;;  tmp             2    4[BANK0 ] unsigned int 
  5300 ;;  initValue       3    7[BANK0 ] struct .
  5301 ;;  i               1   10[BANK0 ] unsigned char 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      unsigned char 
  5304 ;; Registers used:
  5305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5306 ;; Tracked objects:
  5307 ;;		On entry : F/0
  5308 ;;		On exit  : F/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5312 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5314 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5315 ;;Total ram usage:        7 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    8
  5318 ;; This function calls:
  5319 ;;		_EEPROM_Read
  5320 ;;		_EEPROM_Write
  5321 ;;		_MiApp_SetChannel
  5322 ;;		_MiMAC_Init
  5323 ;;		_MiMAC_SetAltAddress
  5324 ;;		_NVMInit
  5325 ;; This function is called by:
  5326 ;;		_Initialize_Demo
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text19
  5331  002126                     __ptext19:
  5332                           	opt stack 0
  5333  002126                     _MiApp_ProtocolInit:
  5334                           	opt stack 21
  5335                           
  5336                           ;incstack = 0
  5337                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  5338  002126  6F66               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
  5339                           
  5340                           ;miwi_p2p.c: 1132: uint8_t i;
  5341                           ;miwi_p2p.c: 1134: MACINIT_PARAM initValue;
  5342                           ;miwi_p2p.c: 1137: NVMInit();
  5343  002128  EC82  F016         	call	_NVMInit	;wreg free
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;miwi_p2p.c: 1141: P2PStatus.Val = 0;
  5347  00212C  6BDF               	clrf	_P2PStatus& (0+255),b	;volatile
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;miwi_p2p.c: 1142: if (!bNetworkFreezer)
  5351  00212E  5166               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5352  002130  E137               	bnz	l539
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;miwi_p2p.c: 1143: {
  5356                           ;miwi_p2p.c: 1144: for(i = 0; i < 20; i++)
  5357  002132  6B6A               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5358  002134                     l13303:
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;miwi_p2p.c: 1145: {
  5362                           ;miwi_p2p.c: 1146: ConnectionTable[i].status.Val = 0;
  5363  002134  516A               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5364  002136  0D0E               	mullw	14
  5365  002138  0E84               	movlw	low (_ConnectionTable+12)
  5366  00213A  24F3               	addwf	prodl,w,c
  5367  00213C  6ED9               	movwf	fsr2l,c
  5368  00213E  0E02               	movlw	high (_ConnectionTable+12)
  5369  002140  20F4               	addwfc	prodh,w,c
  5370  002142  6EDA               	movwf	fsr2h,c
  5371  002144  6ADF               	clrf	indf2,c
  5372                           
  5373                           ;miwi_p2p.c: 1147: ConnectionTable[i].Address[0] = 0x00;
  5374  002146  516A               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5375  002148  0D0E               	mullw	14
  5376  00214A  0E7C               	movlw	low (_ConnectionTable+4)
  5377  00214C  24F3               	addwf	prodl,w,c
  5378  00214E  6ED9               	movwf	fsr2l,c
  5379  002150  0E02               	movlw	high (_ConnectionTable+4)
  5380  002152  20F4               	addwfc	prodh,w,c
  5381  002154  6EDA               	movwf	fsr2h,c
  5382  002156  6ADF               	clrf	indf2,c
  5383                           
  5384                           ;miwi_p2p.c: 1148: ConnectionTable[i].Address[1] = 0x00;
  5385  002158  516A               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5386  00215A  0D0E               	mullw	14
  5387  00215C  0E7D               	movlw	low (_ConnectionTable+5)
  5388  00215E  24F3               	addwf	prodl,w,c
  5389  002160  6ED9               	movwf	fsr2l,c
  5390  002162  0E02               	movlw	high (_ConnectionTable+5)
  5391  002164  20F4               	addwfc	prodh,w,c
  5392  002166  6EDA               	movwf	fsr2h,c
  5393  002168  6ADF               	clrf	indf2,c
  5394                           
  5395                           ;miwi_p2p.c: 1149: ConnectionTable[i].Address[2] = 0x00;
  5396  00216A  516A               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5397  00216C  0D0E               	mullw	14
  5398  00216E  0E7E               	movlw	low (_ConnectionTable+6)
  5399  002170  24F3               	addwf	prodl,w,c
  5400  002172  6ED9               	movwf	fsr2l,c
  5401  002174  0E02               	movlw	high (_ConnectionTable+6)
  5402  002176  20F4               	addwfc	prodh,w,c
  5403  002178  6EDA               	movwf	fsr2h,c
  5404  00217A  6ADF               	clrf	indf2,c
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;miwi_p2p.c: 1151: link_stat[i] = 0x00;
  5408  00217C  0E50               	movlw	low _link_stat
  5409  00217E  256A               	addwf	MiApp_ProtocolInit@i& (0+255),w,b
  5410  002180  6ED9               	movwf	fsr2l,c
  5411  002182  6ADA               	clrf	fsr2h,c
  5412  002184  0E02               	movlw	high _link_stat
  5413  002186  22DA               	addwfc	fsr2h,f,c
  5414  002188  6ADF               	clrf	indf2,c
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;miwi_p2p.c: 1152: permanent_connections[i] = 0x00;
  5418  00218A  0E64               	movlw	low _permanent_connections
  5419  00218C  256A               	addwf	MiApp_ProtocolInit@i& (0+255),w,b
  5420  00218E  6ED9               	movwf	fsr2l,c
  5421  002190  6ADA               	clrf	fsr2h,c
  5422  002192  0E02               	movlw	high _permanent_connections
  5423  002194  22DA               	addwfc	fsr2h,f,c
  5424  002196  6ADF               	clrf	indf2,c
  5425                           
  5426                           ; BSR set to: 0
  5427  002198  2B6A               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5428                           
  5429                           ; BSR set to: 0
  5430  00219A  0E13               	movlw	19
  5431  00219C  656A               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5432  00219E  D7CA               	goto	l13303
  5433  0021A0                     l539:
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;miwi_p2p.c: 1154: }
  5437                           ;miwi_p2p.c: 1155: }
  5438                           ;miwi_p2p.c: 1157: TxData = 0;
  5439  0021A0  6BE2               	clrf	_TxData& (0+255),b
  5440                           
  5441                           ;miwi_p2p.c: 1166: for (i=0;i<20;i++)
  5442  0021A2  6B6A               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5443  0021A4                     l13317:
  5444                           
  5445                           ; BSR set to: 0
  5446                           ;miwi_p2p.c: 1167: {
  5447  0021A4  2B6A               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5448                           
  5449                           ; BSR set to: 0
  5450  0021A6  0E13               	movlw	19
  5451  0021A8  656A               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5452  0021AA  D7FC               	goto	l13317
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;miwi_p2p.c: 1170: }
  5456                           ;miwi_p2p.c: 1180: if( bNetworkFreezer )
  5457  0021AC  5166               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5458  0021AE  E045               	bz	l13331
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;miwi_p2p.c: 1181: {
  5462                           ;miwi_p2p.c: 1182: EEPROM_Read( (uint8_t *)&currentChannel, 0x02, 1);
  5463  0021B0  0EFC               	movlw	low _currentChannel
  5464  0021B2  6E17               	movwf	EEPROM_Read@dest,c
  5465  0021B4  6A18               	clrf	EEPROM_Read@dest+1,c
  5466  0021B6  0E02               	movlw	2
  5467  0021B8  6E19               	movwf	EEPROM_Read@addr,c
  5468  0021BA  0E01               	movlw	1
  5469  0021BC  6E1A               	movwf	EEPROM_Read@count,c
  5470  0021BE  ECB3  F01B         	call	_EEPROM_Read	;wreg free
  5471                           
  5472                           ;miwi_p2p.c: 1183: if( currentChannel >= 32 )
  5473  0021C2  0E1F               	movlw	31
  5474  0021C4  0100               	movlb	0	; () banked
  5475  0021C6  65FC               	cpfsgt	_currentChannel& (0+255),b
  5476  0021C8  D001               	goto	l13329
  5477  0021CA  0C1F               	retlw	31
  5478  0021CC                     l13329:
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;miwi_p2p.c: 1186: }
  5482                           ;miwi_p2p.c: 1189: EEPROM_Read( (uint8_t *)myPANID.v, 0x00, 2);
  5483  0021CC  0EEA               	movlw	low _myPANID
  5484  0021CE  6E17               	movwf	EEPROM_Read@dest,c
  5485  0021D0  6A18               	clrf	EEPROM_Read@dest+1,c
  5486  0021D2  6A19               	clrf	EEPROM_Read@addr,c
  5487  0021D4  0E02               	movlw	2
  5488  0021D6  6E1A               	movwf	EEPROM_Read@count,c
  5489  0021D8  ECB3  F01B         	call	_EEPROM_Read	;wreg free
  5490                           
  5491                           ;miwi_p2p.c: 1191: EEPROM_Read( (uint8_t *)&ConnMode,0x03, 1);
  5492  0021DC  0EFF               	movlw	low _ConnMode
  5493  0021DE  6E17               	movwf	EEPROM_Read@dest,c
  5494  0021E0  6A18               	clrf	EEPROM_Read@dest+1,c
  5495  0021E2  0E03               	movlw	3
  5496  0021E4  6E19               	movwf	EEPROM_Read@addr,c
  5497  0021E6  0E01               	movlw	1
  5498  0021E8  6E1A               	movwf	EEPROM_Read@count,c
  5499  0021EA  ECB3  F01B         	call	_EEPROM_Read	;wreg free
  5500                           
  5501                           ;miwi_p2p.c: 1192: EEPROM_Read( (uint8_t *)ConnectionTable, 0x04, (uint16_t)20 * sizeof(
      +                          CONNECTION_ENTRY));
  5502  0021EE  0E78               	movlw	low _ConnectionTable
  5503  0021F0  6E17               	movwf	EEPROM_Read@dest,c
  5504  0021F2  0E02               	movlw	high _ConnectionTable
  5505  0021F4  6E18               	movwf	EEPROM_Read@dest+1,c
  5506  0021F6  0E04               	movlw	4
  5507  0021F8  6E19               	movwf	EEPROM_Read@addr,c
  5508  0021FA  0E18               	movlw	24
  5509  0021FC  6E1A               	movwf	EEPROM_Read@count,c
  5510  0021FE  ECB3  F01B         	call	_EEPROM_Read	;wreg free
  5511                           
  5512                           ;miwi_p2p.c: 1195: EEPROM_Read( (uint8_t *)&role, 0xB8, 1);
  5513  002202  0E48               	movlw	low _role
  5514  002204  6E17               	movwf	EEPROM_Read@dest,c
  5515  002206  6A18               	clrf	EEPROM_Read@dest+1,c
  5516  002208  0EB8               	movlw	184
  5517  00220A  6E19               	movwf	EEPROM_Read@addr,c
  5518  00220C  0E01               	movlw	1
  5519  00220E  6E1A               	movwf	EEPROM_Read@count,c
  5520  002210  ECB3  F01B         	call	_EEPROM_Read	;wreg free
  5521                           
  5522                           ;miwi_p2p.c: 1196: EEPROM_Read( (uint8_t *)&myConnectionIndex_in_PanCo, 0xBB, 1);
  5523  002214  0EFD               	movlw	low _myConnectionIndex_in_PanCo
  5524  002216  6E17               	movwf	EEPROM_Read@dest,c
  5525  002218  6A18               	clrf	EEPROM_Read@dest+1,c
  5526  00221A  0EBB               	movlw	187
  5527  00221C  6E19               	movwf	EEPROM_Read@addr,c
  5528  00221E  0E01               	movlw	1
  5529  002220  6E1A               	movwf	EEPROM_Read@count,c
  5530  002222  ECB3  F01B         	call	_EEPROM_Read	;wreg free
  5531                           
  5532                           ;miwi_p2p.c: 1198: EEPROM_Read( (uint8_t *)&conn_size, 0xBA, 1);
  5533  002226  0E47               	movlw	low _conn_size
  5534  002228  6E17               	movwf	EEPROM_Read@dest,c
  5535  00222A  6A18               	clrf	EEPROM_Read@dest+1,c
  5536  00222C  0EBA               	movlw	186
  5537  00222E  6E19               	movwf	EEPROM_Read@addr,c
  5538  002230  0E01               	movlw	1
  5539  002232  6E1A               	movwf	EEPROM_Read@count,c
  5540  002234  ECB3  F01B         	call	_EEPROM_Read	;wreg free
  5541                           
  5542                           ;miwi_p2p.c: 1210: }
  5543  002238  D028               	goto	l13341
  5544  00223A                     l13331:
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;miwi_p2p.c: 1211: else
  5548                           ;miwi_p2p.c: 1212: {
  5549                           ;miwi_p2p.c: 1214: myPANID.Val = 0x1234;
  5550  00223A  0E12               	movlw	18
  5551  00223C  6FEB               	movwf	(_myPANID+1)& (0+255),b
  5552  00223E  0E34               	movlw	52
  5553  002240  6FEA               	movwf	_myPANID& (0+255),b
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;miwi_p2p.c: 1215: EEPROM_Write((uint8_t *)myPANID.v, 0x00, 2);
  5557  002242  0EEA               	movlw	low _myPANID
  5558  002244  6E17               	movwf	EEPROM_Write@dest,c
  5559  002246  6A18               	clrf	EEPROM_Write@dest+1,c
  5560  002248  6A19               	clrf	EEPROM_Write@addr,c
  5561  00224A  0E02               	movlw	2
  5562  00224C  6E1A               	movwf	EEPROM_Write@count,c
  5563  00224E  EC4D  F017         	call	_EEPROM_Write	;wreg free
  5564                           
  5565                           ;miwi_p2p.c: 1217: EEPROM_Write((uint8_t *)&currentChannel, 0x02, 1);
  5566  002252  0EFC               	movlw	low _currentChannel
  5567  002254  6E17               	movwf	EEPROM_Write@dest,c
  5568  002256  6A18               	clrf	EEPROM_Write@dest+1,c
  5569  002258  0E02               	movlw	2
  5570  00225A  6E19               	movwf	EEPROM_Write@addr,c
  5571  00225C  0E01               	movlw	1
  5572  00225E  6E1A               	movwf	EEPROM_Write@count,c
  5573  002260  EC4D  F017         	call	_EEPROM_Write	;wreg free
  5574                           
  5575                           ;miwi_p2p.c: 1218: EEPROM_Write((uint8_t *)&ConnMode, 0x03, 1);
  5576  002264  0EFF               	movlw	low _ConnMode
  5577  002266  6E17               	movwf	EEPROM_Write@dest,c
  5578  002268  6A18               	clrf	EEPROM_Write@dest+1,c
  5579  00226A  0E03               	movlw	3
  5580  00226C  6E19               	movwf	EEPROM_Write@addr,c
  5581  00226E  0E01               	movlw	1
  5582  002270  6E1A               	movwf	EEPROM_Write@count,c
  5583  002272  EC4D  F017         	call	_EEPROM_Write	;wreg free
  5584                           
  5585                           ;miwi_p2p.c: 1219: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)20 * sizeof(C
      +                          ONNECTION_ENTRY));
  5586  002276  0E78               	movlw	low _ConnectionTable
  5587  002278  6E17               	movwf	EEPROM_Write@dest,c
  5588  00227A  0E02               	movlw	high _ConnectionTable
  5589  00227C  6E18               	movwf	EEPROM_Write@dest+1,c
  5590  00227E  0E04               	movlw	4
  5591  002280  6E19               	movwf	EEPROM_Write@addr,c
  5592  002282  0E18               	movlw	24
  5593  002284  6E1A               	movwf	EEPROM_Write@count,c
  5594  002286  EC4D  F017         	call	_EEPROM_Write	;wreg free
  5595  00228A                     l13341:
  5596                           
  5597                           ;miwi_p2p.c: 1221: }
  5598                           ;miwi_p2p.c: 1228: initValue.PAddress = myLongAddress;
  5599  00228A  0EDF               	movlw	low _myLongAddress
  5600  00228C  0100               	movlb	0	; () banked
  5601  00228E  6F68               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
  5602  002290  0E01               	movlw	high _myLongAddress
  5603  002292  6F69               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;miwi_p2p.c: 1229: initValue.actionFlags.bits.CCAEnable = 1;
  5607  002294  8367               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;miwi_p2p.c: 1230: initValue.actionFlags.bits.PAddrLength = 8;
  5611  002296  5167               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
  5612  002298  0B87               	andlw	-121
  5613  00229A  0940               	iorlw	64
  5614  00229C  6F67               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;miwi_p2p.c: 1231: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
  5618  00229E  B166               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
  5619  0022A0  D002               	bra	u13705
  5620  0022A2  9567               	bcf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5621  0022A4  D002               	bra	u13706
  5622  0022A6                     u13705:
  5623  0022A6  0100               	movlb	0	; () banked
  5624  0022A8  8567               	bsf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5625  0022AA                     u13706:
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;miwi_p2p.c: 1232: initValue.actionFlags.bits.RepeaterMode = 0;
  5629  0022AA  9167               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;miwi_p2p.c: 1234: MiMAC_Init(initValue);
  5633  0022AC  C067  F060         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
  5634  0022B0  C068  F061         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
  5635  0022B4  C069  F062         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
  5636  0022B8  EC33  F01B         	call	_MiMAC_Init	;wreg free
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;miwi_p2p.c: 1237: {
  5640                           ;miwi_p2p.c: 1238: uint16_t tmp = 0xFFFF;
  5641  0022BC  6964               	setf	MiApp_ProtocolInit@tmp& (0+255),b
  5642  0022BE  6965               	setf	(MiApp_ProtocolInit@tmp+1)& (0+255),b
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;miwi_p2p.c: 1239: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
  5646  0022C0  0EEA               	movlw	low _myPANID
  5647  0022C2  6E1A               	movwf	MiMAC_SetAltAddress@PANID,c
  5648  0022C4  0E64               	movlw	MiApp_ProtocolInit@tmp& (0+255)
  5649  0022C6  EC12  F019         	call	_MiMAC_SetAltAddress
  5650                           
  5651                           ;miwi_p2p.c: 1240: }
  5652                           ;miwi_p2p.c: 1243: MiApp_SetChannel(currentChannel);
  5653  0022CA  0100               	movlb	0	; () banked
  5654  0022CC  51FC               	movf	_currentChannel& (0+255),w,b
  5655  0022CE  EC34  F01C         	call	_MiApp_SetChannel
  5656                           
  5657                           ;miwi_p2p.c: 1254: P2PCapacityInfo = 0;
  5658  0022D2  0100               	movlb	0	; () banked
  5659  0022D4  6BDE               	clrf	_P2PCapacityInfo& (0+255),b
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;miwi_p2p.c: 1256: P2PCapacityInfo |= 0x01;
  5663  0022D6  81DE               	bsf	_P2PCapacityInfo& (0+255),0,b
  5664                           
  5665                           ; BSR set to: 0
  5666                           ;miwi_p2p.c: 1261: P2PCapacityInfo |= (ConnMode << 4);
  5667  0022D8  39FF               	swapf	_ConnMode& (0+255),w,b
  5668  0022DA  0BF0               	andlw	240
  5669  0022DC  13DE               	iorwf	_P2PCapacityInfo& (0+255),f,b
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;miwi_p2p.c: 1263: INTCONbits.INT0IE = 1;
  5673  0022DE  88F2               	bsf	intcon,4,c	;volatile
  5674                           
  5675                           ; BSR set to: 0
  5676  0022E0  0012               	return		;funcret
  5677  0022E2                     __end_of_MiApp_ProtocolInit:
  5678                           	opt stack 0
  5679                           tblptru	equ	0xFF8
  5680                           tblptrh	equ	0xFF7
  5681                           tblptrl	equ	0xFF6
  5682                           tablat	equ	0xFF5
  5683                           prodh	equ	0xFF4
  5684                           prodl	equ	0xFF3
  5685                           intcon	equ	0xFF2
  5686                           intcon2	equ	0xFF1
  5687                           postinc0	equ	0xFEE
  5688                           wreg	equ	0xFE8
  5689                           indf1	equ	0xFE7
  5690                           postdec1	equ	0xFE5
  5691                           fsr1h	equ	0xFE2
  5692                           fsr1l	equ	0xFE1
  5693                           indf2	equ	0xFDF
  5694                           fsr2h	equ	0xFDA
  5695                           fsr2l	equ	0xFD9
  5696                           status	equ	0xFD8
  5697                           
  5698 ;; *************** function _NVMInit *****************
  5699 ;; Defined at:
  5700 ;;		line 631 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  result          1   26[COMRAM] unsigned char 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      unsigned char 
  5707 ;; Registers used:
  5708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : F/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5718 ;;Total ram usage:        1 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    4
  5721 ;; This function calls:
  5722 ;;		_NVMalloc
  5723 ;; This function is called by:
  5724 ;;		_MiApp_ProtocolInit
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text20
  5729  002D04                     __ptext20:
  5730                           	opt stack 0
  5731  002D04                     _NVMInit:
  5732                           	opt stack 24
  5733                           
  5734                           ;miwi_nvm.c: 633: bool result = 1;
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;incstack = 0
  5738  002D04  0E01               	movlw	1
  5739  002D06  6E1B               	movwf	NVMInit@result,c
  5740                           
  5741                           ;miwi_nvm.c: 635: nextEEPosition = 0;
  5742  002D08  0100               	movlb	0	; () banked
  5743  002D0A  6BD7               	clrf	_nextEEPosition& (0+255),b
  5744  002D0C  6BD8               	clrf	(_nextEEPosition+1)& (0+255),b
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;miwi_nvm.c: 637: result &= NVMalloc(2, &nvmMyPANID);
  5748  002D0E  6A17               	clrf	NVMalloc@size+1,c
  5749  002D10  0E02               	movlw	2
  5750  002D12  6E16               	movwf	NVMalloc@size,c
  5751  002D14  0EF4               	movlw	low _nvmMyPANID
  5752  002D16  6E18               	movwf	NVMalloc@location,c
  5753  002D18  EC9C  F01B         	call	_NVMalloc	;wreg free
  5754  002D1C  161B               	andwf	NVMInit@result,f,c
  5755                           
  5756                           ; BSR set to: 0
  5757                           ;miwi_nvm.c: 638: result &= NVMalloc(1, &nvmCurrentChannel);
  5758  002D1E  6A17               	clrf	NVMalloc@size+1,c
  5759  002D20  0E01               	movlw	1
  5760  002D22  6E16               	movwf	NVMalloc@size,c
  5761  002D24  0EF0               	movlw	low _nvmCurrentChannel
  5762  002D26  6E18               	movwf	NVMalloc@location,c
  5763  002D28  EC9C  F01B         	call	_NVMalloc	;wreg free
  5764  002D2C  161B               	andwf	NVMInit@result,f,c
  5765                           
  5766                           ; BSR set to: 0
  5767                           ;miwi_nvm.c: 639: result &= NVMalloc(1, &nvmConnMode);
  5768  002D2E  6A17               	clrf	NVMalloc@size+1,c
  5769  002D30  0E01               	movlw	1
  5770  002D32  6E16               	movwf	NVMalloc@size,c
  5771  002D34  0EEC               	movlw	low _nvmConnMode
  5772  002D36  6E18               	movwf	NVMalloc@location,c
  5773  002D38  EC9C  F01B         	call	_NVMalloc	;wreg free
  5774  002D3C  161B               	andwf	NVMInit@result,f,c
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;miwi_nvm.c: 640: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 20, &nvmConnectionTable)
      +                          ;
  5778  002D3E  0E01               	movlw	1
  5779  002D40  6E17               	movwf	NVMalloc@size+1,c
  5780  002D42  0E18               	movlw	24
  5781  002D44  6E16               	movwf	NVMalloc@size,c
  5782  002D46  0EEE               	movlw	low _nvmConnectionTable
  5783  002D48  6E18               	movwf	NVMalloc@location,c
  5784  002D4A  EC9C  F01B         	call	_NVMalloc	;wreg free
  5785  002D4E  161B               	andwf	NVMInit@result,f,c
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;miwi_nvm.c: 641: result &= NVMalloc(4, &nvmOutFrameCounter);
  5789  002D50  6A17               	clrf	NVMalloc@size+1,c
  5790  002D52  0E04               	movlw	4
  5791  002D54  6E16               	movwf	NVMalloc@size,c
  5792  002D56  0EF6               	movlw	low _nvmOutFrameCounter
  5793  002D58  6E18               	movwf	NVMalloc@location,c
  5794  002D5A  EC9C  F01B         	call	_NVMalloc	;wreg free
  5795  002D5E  161B               	andwf	NVMInit@result,f,c
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;miwi_nvm.c: 642: result &= NVMalloc(1,&nvmEdc);
  5799  002D60  6A17               	clrf	NVMalloc@size+1,c
  5800  002D62  0E01               	movlw	1
  5801  002D64  6E16               	movwf	NVMalloc@size,c
  5802  002D66  0EF2               	movlw	low _nvmEdc
  5803  002D68  6E18               	movwf	NVMalloc@location,c
  5804  002D6A  EC9C  F01B         	call	_NVMalloc	;wreg free
  5805  002D6E  161B               	andwf	NVMInit@result,f,c
  5806                           
  5807                           ; BSR set to: 0
  5808                           ;miwi_nvm.c: 645: result &= NVMalloc(1,&nvmRole);
  5809  002D70  6A17               	clrf	NVMalloc@size+1,c
  5810  002D72  0E01               	movlw	1
  5811  002D74  6E16               	movwf	NVMalloc@size,c
  5812  002D76  0EF8               	movlw	low _nvmRole
  5813  002D78  6E18               	movwf	NVMalloc@location,c
  5814  002D7A  EC9C  F01B         	call	_NVMalloc	;wreg free
  5815  002D7E  161B               	andwf	NVMInit@result,f,c
  5816                           
  5817                           ; BSR set to: 0
  5818                           ;miwi_nvm.c: 646: result &= NVMalloc(1,&nvmmyIndex);
  5819  002D80  6A17               	clrf	NVMalloc@size+1,c
  5820  002D82  0E01               	movlw	1
  5821  002D84  6E16               	movwf	NVMalloc@size,c
  5822  002D86  0EFA               	movlw	low _nvmmyIndex
  5823  002D88  6E18               	movwf	NVMalloc@location,c
  5824  002D8A  EC9C  F01B         	call	_NVMalloc	;wreg free
  5825  002D8E  161B               	andwf	NVMInit@result,f,c
  5826                           
  5827                           ; BSR set to: 0
  5828  002D90  0012               	return		;funcret
  5829  002D92                     __end_of_NVMInit:
  5830                           	opt stack 0
  5831                           tblptru	equ	0xFF8
  5832                           tblptrh	equ	0xFF7
  5833                           tblptrl	equ	0xFF6
  5834                           tablat	equ	0xFF5
  5835                           prodh	equ	0xFF4
  5836                           prodl	equ	0xFF3
  5837                           intcon	equ	0xFF2
  5838                           intcon2	equ	0xFF1
  5839                           postinc0	equ	0xFEE
  5840                           wreg	equ	0xFE8
  5841                           indf1	equ	0xFE7
  5842                           postdec1	equ	0xFE5
  5843                           fsr1h	equ	0xFE2
  5844                           fsr1l	equ	0xFE1
  5845                           indf2	equ	0xFDF
  5846                           fsr2h	equ	0xFDA
  5847                           fsr2l	equ	0xFD9
  5848                           status	equ	0xFD8
  5849                           
  5850 ;; *************** function _NVMalloc *****************
  5851 ;; Defined at:
  5852 ;;		line 616 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;  size            2   21[COMRAM] unsigned int 
  5855 ;;  location        1   23[COMRAM] PTR unsigned int 
  5856 ;;		 -> nvmmyIndex(2), nvmRole(2), nvmEdc(2), nvmOutFrameCounter(2), 
  5857 ;;		 -> nvmConnectionTable(2), nvmConnMode(2), nvmCurrentChannel(2), nvmMyPANID(2), 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;		None
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  1    wreg      unsigned char 
  5862 ;; Registers used:
  5863 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5864 ;; Tracked objects:
  5865 ;;		On entry : F/0
  5866 ;;		On exit  : F/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5869 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5872 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5873 ;;Total ram usage:        5 bytes
  5874 ;; Hardware stack levels used:    1
  5875 ;; Hardware stack levels required when called:    3
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_NVMInit
  5880 ;; This function uses a non-reentrant model
  5881 ;;
  5882                           
  5883                           	psect	text21
  5884  003738                     __ptext21:
  5885                           	opt stack 0
  5886  003738                     _NVMalloc:
  5887                           	opt stack 24
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;miwi_nvm.c: 620: if ((nextEEPosition + size) > 32768)
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;incstack = 0
  5894  003738  5016               	movf	NVMalloc@size,w,c
  5895  00373A  25D7               	addwf	_nextEEPosition& (0+255),w,b
  5896  00373C  6E19               	movwf	??_NVMalloc& (0+255),c
  5897  00373E  5017               	movf	NVMalloc@size+1,w,c
  5898  003740  21D8               	addwfc	(_nextEEPosition+1)& (0+255),w,b
  5899  003742  6E1A               	movwf	(??_NVMalloc+1)& (0+255),c
  5900  003744  0419               	decf	??_NVMalloc,w,c
  5901  003746  0E80               	movlw	128
  5902  003748  581A               	subwfb	??_NVMalloc+1,w,c
  5903  00374A  E301               	bnc	l10153
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;miwi_nvm.c: 621: {
  5907                           ;miwi_nvm.c: 622: return 0;
  5908  00374C  0C00               	retlw	0
  5909  00374E                     l10153:
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;miwi_nvm.c: 623: }
  5913                           ;miwi_nvm.c: 625: *location = nextEEPosition;
  5914  00374E  5018               	movf	NVMalloc@location,w,c
  5915  003750  6ED9               	movwf	fsr2l,c
  5916  003752  6ADA               	clrf	fsr2h,c
  5917  003754  C0D7  FFDE         	movff	_nextEEPosition,postinc2
  5918  003758  C0D8  FFDD         	movff	_nextEEPosition+1,postdec2
  5919                           
  5920                           ; BSR set to: 0
  5921                           ;miwi_nvm.c: 626: nextEEPosition += size;
  5922  00375C  5016               	movf	NVMalloc@size,w,c
  5923  00375E  27D7               	addwf	_nextEEPosition& (0+255),f,b
  5924  003760  5017               	movf	NVMalloc@size+1,w,c
  5925  003762  23D8               	addwfc	(_nextEEPosition+1)& (0+255),f,b
  5926                           
  5927                           ; BSR set to: 0
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;miwi_nvm.c: 627: return 1;
  5931  003764  0C01               	retlw	1	;funcret
  5932  003766                     __end_of_NVMalloc:
  5933                           	opt stack 0
  5934                           tblptru	equ	0xFF8
  5935                           tblptrh	equ	0xFF7
  5936                           tblptrl	equ	0xFF6
  5937                           tablat	equ	0xFF5
  5938                           prodh	equ	0xFF4
  5939                           prodl	equ	0xFF3
  5940                           intcon	equ	0xFF2
  5941                           intcon2	equ	0xFF1
  5942                           postinc0	equ	0xFEE
  5943                           wreg	equ	0xFE8
  5944                           indf1	equ	0xFE7
  5945                           postdec1	equ	0xFE5
  5946                           fsr1h	equ	0xFE2
  5947                           fsr1l	equ	0xFE1
  5948                           indf2	equ	0xFDF
  5949                           postinc2	equ	0xFDE
  5950                           postdec2	equ	0xFDD
  5951                           fsr2h	equ	0xFDA
  5952                           fsr2l	equ	0xFD9
  5953                           status	equ	0xFD8
  5954                           
  5955 ;; *************** function _MiMAC_Init *****************
  5956 ;; Defined at:
  5957 ;;		line 1465 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  initValue       3    0[BANK0 ] struct .
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  i               1    3[BANK0 ] unsigned char 
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      unsigned char 
  5964 ;; Registers used:
  5965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : F/0
  5968 ;;		On exit  : F/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5971 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5974 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5975 ;;Total ram usage:        4 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:    7
  5978 ;; This function calls:
  5979 ;;		_InitMRF24J40
  5980 ;; This function is called by:
  5981 ;;		_MiApp_ProtocolInit
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text22
  5986  003666                     __ptext22:
  5987                           	opt stack 0
  5988  003666                     _MiMAC_Init:
  5989                           	opt stack 21
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;drv_mrf_miwi_24j40.c: 1467: uint8_t i;
  5993                           ;drv_mrf_miwi_24j40.c: 1469: MACInitParams = initValue;
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;incstack = 0
  5997  003666  C060  F0D2         	movff	MiMAC_Init@initValue,_MACInitParams
  5998  00366A  C061  F0D3         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
  5999  00366E  C062  F0D4         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
  6000                           
  6001                           ;drv_mrf_miwi_24j40.c: 1471: IEEESeqNum = TMR0L;
  6002  003672  CFD6 F03E          	movff	4054,_IEEESeqNum	;volatile
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;drv_mrf_miwi_24j40.c: 1473: MACCurrentChannel = 11;
  6006  003676  0E0B               	movlw	11
  6007  003678  6FDC               	movwf	_MACCurrentChannel& (0+255),b
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;drv_mrf_miwi_24j40.c: 1475: InitMRF24J40();
  6011  00367A  ECA0  F00F         	call	_InitMRF24J40	;wreg free
  6012                           
  6013                           ;drv_mrf_miwi_24j40.c: 1477: MRF24J40Status.Val = 0;
  6014  00367E  6A3F               	clrf	_MRF24J40Status,c	;volatile
  6015                           
  6016                           ;drv_mrf_miwi_24j40.c: 1479: for (i = 0; i < 2; i++)
  6017  003680  0100               	movlb	0	; () banked
  6018  003682  6B63               	clrf	MiMAC_Init@i& (0+255),b
  6019  003684                     l13075:
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;drv_mrf_miwi_24j40.c: 1480: {
  6023                           ;drv_mrf_miwi_24j40.c: 1481: RxBuffer[i].PayloadLen = 0;
  6024  003684  5163               	movf	MiMAC_Init@i& (0+255),w,b
  6025  003686  0D45               	mullw	69
  6026  003688  0E0C               	movlw	low _RxBuffer
  6027  00368A  24F3               	addwf	prodl,w,c
  6028  00368C  6ED9               	movwf	fsr2l,c
  6029  00368E  0E01               	movlw	high _RxBuffer
  6030  003690  20F4               	addwfc	prodh,w,c
  6031  003692  6EDA               	movwf	fsr2h,c
  6032  003694  6ADF               	clrf	indf2,c
  6033                           
  6034                           ; BSR set to: 0
  6035  003696  2B63               	incf	MiMAC_Init@i& (0+255),f,b
  6036                           
  6037                           ; BSR set to: 0
  6038  003698  0E01               	movlw	1
  6039  00369A  6563               	cpfsgt	MiMAC_Init@i& (0+255),b
  6040  00369C  D7F3               	goto	l13075
  6041  00369E  0C01               	retlw	1
  6042  0036A0                     __end_of_MiMAC_Init:
  6043                           	opt stack 0
  6044                           tblptru	equ	0xFF8
  6045                           tblptrh	equ	0xFF7
  6046                           tblptrl	equ	0xFF6
  6047                           tablat	equ	0xFF5
  6048                           prodh	equ	0xFF4
  6049                           prodl	equ	0xFF3
  6050                           intcon	equ	0xFF2
  6051                           intcon2	equ	0xFF1
  6052                           postinc0	equ	0xFEE
  6053                           wreg	equ	0xFE8
  6054                           indf1	equ	0xFE7
  6055                           postdec1	equ	0xFE5
  6056                           fsr1h	equ	0xFE2
  6057                           fsr1l	equ	0xFE1
  6058                           indf2	equ	0xFDF
  6059                           postinc2	equ	0xFDE
  6060                           postdec2	equ	0xFDD
  6061                           fsr2h	equ	0xFDA
  6062                           fsr2l	equ	0xFD9
  6063                           status	equ	0xFD8
  6064                           
  6065 ;; *************** function _MiApp_SetChannel *****************
  6066 ;; Defined at:
  6067 ;;		line 2378 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;  channel         1    wreg     unsigned char 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  channel         1   30[COMRAM] unsigned char 
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      unsigned char 
  6074 ;; Registers used:
  6075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : F/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6085 ;;Total ram usage:        1 bytes
  6086 ;; Hardware stack levels used:    1
  6087 ;; Hardware stack levels required when called:    6
  6088 ;; This function calls:
  6089 ;;		_EEPROM_Write
  6090 ;;		_MiMAC_SetChannel
  6091 ;; This function is called by:
  6092 ;;		_MiApp_ProtocolInit
  6093 ;;		_Initialize_Demo
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text23
  6098  003868                     __ptext23:
  6099                           	opt stack 0
  6100  003868                     _MiApp_SetChannel:
  6101                           	opt stack 23
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;incstack = 0
  6105                           ;MiApp_SetChannel@channel stored from wreg
  6106  003868  6E1F               	movwf	MiApp_SetChannel@channel,c
  6107                           
  6108                           ;miwi_p2p.c: 2380: if( MiMAC_SetChannel(channel, 0) )
  6109  00386A  6A1D               	clrf	MiMAC_SetChannel@offsetFreq,c
  6110  00386C  501F               	movf	MiApp_SetChannel@channel,w,c
  6111  00386E  ECD6  F01A         	call	_MiMAC_SetChannel
  6112  003872  0900               	iorlw	0
  6113  003874  E00C               	bz	l13105
  6114                           
  6115                           ;miwi_p2p.c: 2381: {
  6116                           ;miwi_p2p.c: 2382: currentChannel = channel;
  6117  003876  C01F  F0FC         	movff	MiApp_SetChannel@channel,_currentChannel
  6118                           
  6119                           ;miwi_p2p.c: 2384: EEPROM_Write((uint8_t *)&currentChannel, 0x02, 1);
  6120  00387A  0EFC               	movlw	low _currentChannel
  6121  00387C  6E17               	movwf	EEPROM_Write@dest,c
  6122  00387E  6A18               	clrf	EEPROM_Write@dest+1,c
  6123  003880  0E02               	movlw	2
  6124  003882  6E19               	movwf	EEPROM_Write@addr,c
  6125  003884  0E01               	movlw	1
  6126  003886  6E1A               	movwf	EEPROM_Write@count,c
  6127  003888  EC4D  F017         	call	_EEPROM_Write	;wreg free
  6128                           
  6129                           ;miwi_p2p.c: 2386: return 1;
  6130  00388C  0C01               	retlw	1
  6131  00388E                     l13105:
  6132                           
  6133                           ;miwi_p2p.c: 2387: }
  6134                           ;miwi_p2p.c: 2388: return 0;
  6135  00388E  0C00               	retlw	0	;funcret
  6136  003890                     __end_of_MiApp_SetChannel:
  6137                           	opt stack 0
  6138                           tblptru	equ	0xFF8
  6139                           tblptrh	equ	0xFF7
  6140                           tblptrl	equ	0xFF6
  6141                           tablat	equ	0xFF5
  6142                           prodh	equ	0xFF4
  6143                           prodl	equ	0xFF3
  6144                           intcon	equ	0xFF2
  6145                           intcon2	equ	0xFF1
  6146                           postinc0	equ	0xFEE
  6147                           wreg	equ	0xFE8
  6148                           indf1	equ	0xFE7
  6149                           postdec1	equ	0xFE5
  6150                           fsr1h	equ	0xFE2
  6151                           fsr1l	equ	0xFE1
  6152                           indf2	equ	0xFDF
  6153                           postinc2	equ	0xFDE
  6154                           postdec2	equ	0xFDD
  6155                           fsr2h	equ	0xFDA
  6156                           fsr2l	equ	0xFD9
  6157                           status	equ	0xFD8
  6158                           
  6159 ;; *************** function _EEPROM_Read *****************
  6160 ;; Defined at:
  6161 ;;		line 57 in file "../src/system_config/miwikit_pic18f46j50_24j40/eeprom.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;  dest            2   22[COMRAM] PTR unsigned char 
  6164 ;;		 -> myConnectionIndex_in_PanCo(1), myPANID(2), ConnMode(1), currentChannel(1), 
  6165 ;;		 -> myLongAddress(8), role(1), conn_size(1), ConnectionTable(280), 
  6166 ;;  addr            1   24[COMRAM] unsigned char 
  6167 ;;  count           1   25[COMRAM] unsigned char 
  6168 ;; Auto vars:     Size  Location     Type
  6169 ;;		None
  6170 ;; Return value:  Size  Location     Type
  6171 ;;		None               void
  6172 ;; Registers used:
  6173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6182 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6183 ;;Total ram usage:        4 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    5
  6186 ;; This function calls:
  6187 ;;		_SPIGet2
  6188 ;;		_SPIPut2
  6189 ;; This function is called by:
  6190 ;;		_MiApp_ProtocolInit
  6191 ;;		_Read_MAC_Address
  6192 ;; This function uses a non-reentrant model
  6193 ;;
  6194                           
  6195                           	psect	text24
  6196  003766                     __ptext24:
  6197                           	opt stack 0
  6198  003766                     _EEPROM_Read:
  6199                           	opt stack 23
  6200                           
  6201                           ;eeprom.c: 59: LATDbits.LATD5 = 0;
  6202                           
  6203                           ;incstack = 0
  6204  003766  9A8C               	bcf	3980,5,c	;volatile
  6205                           
  6206                           ;eeprom.c: 60: SPIPut2(0x03);
  6207  003768  0E03               	movlw	3
  6208  00376A  EC1D  F01D         	call	_SPIPut2
  6209                           
  6210                           ;eeprom.c: 61: SPIPut2(addr);
  6211  00376E  5019               	movf	EEPROM_Read@addr,w,c
  6212  003770  EC1D  F01D         	call	_SPIPut2
  6213                           
  6214                           ;eeprom.c: 62: while( count )
  6215  003774  D00A               	goto	l13093
  6216  003776                     l13087:
  6217                           
  6218                           ;eeprom.c: 63: {
  6219                           ;eeprom.c: 64: *dest++ = SPIGet2();
  6220  003776  EC5E  F01D         	call	_SPIGet2	;wreg free
  6221  00377A  C017  FFD9         	movff	EEPROM_Read@dest,fsr2l
  6222  00377E  C018  FFDA         	movff	EEPROM_Read@dest+1,fsr2h
  6223  003782  6EDF               	movwf	indf2,c
  6224  003784  4A17               	infsnz	EEPROM_Read@dest,f,c
  6225  003786  2A18               	incf	EEPROM_Read@dest+1,f,c
  6226                           
  6227                           ;eeprom.c: 65: count--;
  6228  003788  061A               	decf	EEPROM_Read@count,f,c
  6229  00378A                     l13093:
  6230  00378A  501A               	movf	EEPROM_Read@count,w,c
  6231  00378C  E1F4               	bnz	l13087
  6232                           
  6233                           ;eeprom.c: 66: }
  6234                           ;eeprom.c: 67: LATDbits.LATD5 = 1;
  6235  00378E  8A8C               	bsf	3980,5,c	;volatile
  6236  003790  0012               	return		;funcret
  6237  003792                     __end_of_EEPROM_Read:
  6238                           	opt stack 0
  6239                           tblptru	equ	0xFF8
  6240                           tblptrh	equ	0xFF7
  6241                           tblptrl	equ	0xFF6
  6242                           tablat	equ	0xFF5
  6243                           prodh	equ	0xFF4
  6244                           prodl	equ	0xFF3
  6245                           intcon	equ	0xFF2
  6246                           intcon2	equ	0xFF1
  6247                           postinc0	equ	0xFEE
  6248                           wreg	equ	0xFE8
  6249                           indf1	equ	0xFE7
  6250                           postdec1	equ	0xFE5
  6251                           fsr1h	equ	0xFE2
  6252                           fsr1l	equ	0xFE1
  6253                           indf2	equ	0xFDF
  6254                           postinc2	equ	0xFDE
  6255                           postdec2	equ	0xFDD
  6256                           fsr2h	equ	0xFDA
  6257                           fsr2l	equ	0xFD9
  6258                           status	equ	0xFD8
  6259                           
  6260 ;; *************** function _MiApp_EstablishConnection *****************
  6261 ;; Defined at:
  6262 ;;		line 2260 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  ActiveScanIn    1    wreg     unsigned char 
  6265 ;;  Mode            1   80[BANK0 ] unsigned char 
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;  ActiveScanIn    1    0[COMRAM] unsigned char 
  6268 ;;  i               1   11[BANK1 ] unsigned char 
  6269 ;;  t2              4    7[BANK1 ] struct _MIWI_TICK
  6270 ;;  t1              4    3[BANK1 ] struct _MIWI_TICK
  6271 ;;  connectionIn    1    2[BANK1 ] unsigned char 
  6272 ;;  retry           1    1[BANK1 ] unsigned char 
  6273 ;;  tmpConnectio    1    0[BANK1 ] unsigned char 
  6274 ;; Return value:  Size  Location     Type
  6275 ;;                  1    wreg      unsigned char 
  6276 ;; Registers used:
  6277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6278 ;; Tracked objects:
  6279 ;;		On entry : F/0
  6280 ;;		On exit  : F/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6283 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6284 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6285 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6286 ;;      Totals:         0       5      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6287 ;;Total ram usage:       17 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; Hardware stack levels required when called:   14
  6290 ;; This function calls:
  6291 ;;		_MiApp_DiscardMessage
  6292 ;;		_MiApp_MessageAvailable
  6293 ;;		_MiWi_TickGet
  6294 ;;		_SendPacket
  6295 ;; This function is called by:
  6296 ;;		_Initialize_Demo
  6297 ;;		_run_star_demo
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text25
  6302  0022E2                     __ptext25:
  6303                           	opt stack 0
  6304  0022E2                     _MiApp_EstablishConnection:
  6305                           	opt stack 14
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;miwi_p2p.c: 2262: uint8_t tmpConnectionMode = ConnMode;
  6309                           
  6310                           ;incstack = 0
  6311  0022E2  C0FF  F1E7         	movff	_ConnMode,MiApp_EstablishConnection@tmpConnectionMode
  6312                           
  6313                           ; BSR set to: 0
  6314                           ;miwi_p2p.c: 2263: uint8_t retry = 3;
  6315  0022E6  0E03               	movlw	3
  6316  0022E8  0101               	movlb	1	; () banked
  6317  0022EA  6FE8               	movwf	MiApp_EstablishConnection@retry& (0+255),b
  6318                           
  6319                           ; BSR set to: 1
  6320                           ;miwi_p2p.c: 2264: uint8_t connectionInterval = 0;
  6321  0022EC  6BE9               	clrf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6322                           
  6323                           ; BSR set to: 1
  6324                           ;miwi_p2p.c: 2265: MIWI_TICK t1, t2;
  6325                           ;miwi_p2p.c: 2266: tick1 = MiWi_TickGet();
  6326  0022EE  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  6327  0022F2  C016  F0CA         	movff	?_MiWi_TickGet,_tick1
  6328  0022F6  C017  F0CB         	movff	?_MiWi_TickGet+1,_tick1+1
  6329  0022FA  C018  F0CC         	movff	?_MiWi_TickGet+2,_tick1+2
  6330  0022FE  C019  F0CD         	movff	?_MiWi_TickGet+3,_tick1+3
  6331                           
  6332                           ;miwi_p2p.c: 2267: if( Mode == 0x01 )
  6333  002302  0100               	movlb	0	; () banked
  6334  002304  05B0               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
  6335  002306  E101               	bnz	l13149
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;miwi_p2p.c: 2268: {
  6339                           ;miwi_p2p.c: 2269: return 0xFF;
  6340  002308  0CFF               	retlw	255
  6341  00230A                     l13149:
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;miwi_p2p.c: 2270: }
  6345                           ;miwi_p2p.c: 2272: t1 = MiWi_TickGet();
  6346  00230A  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  6347  00230E  C016  F1EA         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
  6348  002312  C017  F1EB         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
  6349  002316  C018  F1EC         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
  6350  00231A  C019  F1ED         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
  6351                           
  6352                           ;miwi_p2p.c: 2274: t1.Val -= (((uint32_t)(16000000)/32));
  6353  00231E  0E20               	movlw	32
  6354  002320  0101               	movlb	1	; () banked
  6355  002322  5FEA               	subwf	MiApp_EstablishConnection@t1& (0+255),f,b
  6356  002324  0EA1               	movlw	161
  6357  002326  5BEB               	subwfb	(MiApp_EstablishConnection@t1+1)& (0+255),f,b
  6358  002328  0E07               	movlw	7
  6359  00232A  5BEC               	subwfb	(MiApp_EstablishConnection@t1+2)& (0+255),f,b
  6360  00232C  0E00               	movlw	0
  6361  00232E  5BED               	subwfb	(MiApp_EstablishConnection@t1+3)& (0+255),f,b
  6362                           
  6363                           ; BSR set to: 1
  6364                           ;miwi_p2p.c: 2275: ConnMode = 0x00;
  6365  002330  0100               	movlb	0	; () banked
  6366  002332  6BFF               	clrf	_ConnMode& (0+255),b
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;miwi_p2p.c: 2276: P2PStatus.bits.SearchConnection = 1;
  6370  002334  89DF               	bsf	_P2PStatus& (0+255),4,b	;volatile
  6371                           
  6372                           ;miwi_p2p.c: 2277: while( P2PStatus.bits.SearchConnection )
  6373  002336  D07E               	goto	l13207
  6374  002338                     l13157:
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;miwi_p2p.c: 2278: {
  6378                           ;miwi_p2p.c: 2279: t2 = MiWi_TickGet();
  6379  002338  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  6380  00233C  C016  F1EE         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
  6381  002340  C017  F1EF         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
  6382  002344  C018  F1F0         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
  6383  002348  C019  F1F1         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
  6384                           
  6385                           ;miwi_p2p.c: 2280: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
  6386  00234C  0101               	movlb	1	; () banked
  6387  00234E  51EA               	movf	MiApp_EstablishConnection@t1& (0+255),w,b
  6388  002350  5DEE               	subwf	MiApp_EstablishConnection@t2& (0+255),w,b
  6389  002352  0100               	movlb	0	; () banked
  6390  002354  6FB1               	movwf	??_MiApp_EstablishConnection& (0+255),b
  6391  002356  0101               	movlb	1	; () banked
  6392  002358  51EB               	movf	(MiApp_EstablishConnection@t1+1)& (0+255),w,b
  6393  00235A  59EF               	subwfb	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
  6394  00235C  0100               	movlb	0	; () banked
  6395  00235E  6FB2               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
  6396  002360  0101               	movlb	1	; () banked
  6397  002362  51EC               	movf	(MiApp_EstablishConnection@t1+2)& (0+255),w,b
  6398  002364  59F0               	subwfb	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
  6399  002366  0100               	movlb	0	; () banked
  6400  002368  6FB3               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
  6401  00236A  0101               	movlb	1	; () banked
  6402  00236C  51ED               	movf	(MiApp_EstablishConnection@t1+3)& (0+255),w,b
  6403  00236E  59F1               	subwfb	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
  6404  002370  0100               	movlb	0	; () banked
  6405  002372  6FB4               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
  6406  002374  51B4               	movf	(??_MiApp_EstablishConnection+3)& (0+255),w,b
  6407  002376  E107               	bnz	u13500
  6408  002378  0E21               	movlw	33
  6409  00237A  5DB1               	subwf	??_MiApp_EstablishConnection& (0+255),w,b
  6410  00237C  0EA1               	movlw	161
  6411  00237E  59B2               	subwfb	(??_MiApp_EstablishConnection+1)& (0+255),w,b
  6412  002380  0E07               	movlw	7
  6413  002382  59B3               	subwfb	(??_MiApp_EstablishConnection+2)& (0+255),w,b
  6414  002384  E351               	bnc	l13203
  6415  002386                     u13500:
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;miwi_p2p.c: 2281: {
  6419                           ;miwi_p2p.c: 2282: t1.Val = t2.Val;
  6420  002386  C1EE  F1EA         	movff	MiApp_EstablishConnection@t2,MiApp_EstablishConnection@t1
  6421  00238A  C1EF  F1EB         	movff	MiApp_EstablishConnection@t2+1,MiApp_EstablishConnection@t1+1
  6422  00238E  C1F0  F1EC         	movff	MiApp_EstablishConnection@t2+2,MiApp_EstablishConnection@t1+2
  6423  002392  C1F1  F1ED         	movff	MiApp_EstablishConnection@t2+3,MiApp_EstablishConnection@t1+3
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;miwi_p2p.c: 2284: if( connectionInterval-- > 0 )
  6427  002396  0101               	movlb	1	; () banked
  6428  002398  07E9               	decf	MiApp_EstablishConnection@connectionInterval& (0+255),f,b
  6429  00239A  29E9               	incf	MiApp_EstablishConnection@connectionInterval& (0+255),w,b
  6430  00239C  E14B               	bnz	l13207
  6431                           
  6432                           ; BSR set to: 1
  6433                           ;miwi_p2p.c: 2287: }
  6434                           ;miwi_p2p.c: 2288: connectionInterval = 2-1;
  6435  00239E  0E01               	movlw	1
  6436  0023A0  6FE9               	movwf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6437                           
  6438                           ; BSR set to: 1
  6439                           ;miwi_p2p.c: 2289: if( retry-- == 0 )
  6440  0023A2  07E8               	decf	MiApp_EstablishConnection@retry& (0+255),f,b
  6441  0023A4  29E8               	incf	MiApp_EstablishConnection@retry& (0+255),w,b
  6442  0023A6  E103               	bnz	l627
  6443                           
  6444                           ; BSR set to: 1
  6445                           ;miwi_p2p.c: 2290: {
  6446                           ;miwi_p2p.c: 2292: P2PStatus.bits.SearchConnection = 0;
  6447  0023A8  0100               	movlb	0	; () banked
  6448  0023AA  99DF               	bcf	_P2PStatus& (0+255),4,b	;volatile
  6449  0023AC  0CFF               	retlw	255
  6450  0023AE                     l627:
  6451                           
  6452                           ; BSR set to: 1
  6453                           ;miwi_p2p.c: 2294: }
  6454                           ;miwi_p2p.c: 2295: {TxData = 0;};
  6455  0023AE  0100               	movlb	0	; () banked
  6456  0023B0  6BE2               	clrf	_TxData& (0+255),b
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;miwi_p2p.c: 2296: TxBuffer[TxData++] = 0x81;
  6460  0023B2  0E96               	movlw	low _TxBuffer
  6461  0023B4  25E2               	addwf	_TxData& (0+255),w,b
  6462  0023B6  6ED9               	movwf	fsr2l,c
  6463  0023B8  6ADA               	clrf	fsr2h,c
  6464  0023BA  0E01               	movlw	high _TxBuffer
  6465  0023BC  22DA               	addwfc	fsr2h,f,c
  6466  0023BE  0E81               	movlw	129
  6467  0023C0  6EDF               	movwf	indf2,c
  6468                           
  6469                           ; BSR set to: 0
  6470  0023C2  2BE2               	incf	_TxData& (0+255),f,b
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;miwi_p2p.c: 2297: TxBuffer[TxData++] = currentChannel;
  6474  0023C4  0E96               	movlw	low _TxBuffer
  6475  0023C6  25E2               	addwf	_TxData& (0+255),w,b
  6476  0023C8  6ED9               	movwf	fsr2l,c
  6477  0023CA  6ADA               	clrf	fsr2h,c
  6478  0023CC  0E01               	movlw	high _TxBuffer
  6479  0023CE  22DA               	addwfc	fsr2h,f,c
  6480  0023D0  C0FC  FFDF         	movff	_currentChannel,indf2
  6481  0023D4  2BE2               	incf	_TxData& (0+255),f,b
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;miwi_p2p.c: 2298: TxBuffer[TxData++] = P2PCapacityInfo;
  6485  0023D6  0E96               	movlw	low _TxBuffer
  6486  0023D8  25E2               	addwf	_TxData& (0+255),w,b
  6487  0023DA  6ED9               	movwf	fsr2l,c
  6488  0023DC  6ADA               	clrf	fsr2h,c
  6489  0023DE  0E01               	movlw	high _TxBuffer
  6490  0023E0  22DA               	addwfc	fsr2h,f,c
  6491  0023E2  C0DE  FFDF         	movff	_P2PCapacityInfo,indf2
  6492                           
  6493                           ; BSR set to: 0
  6494  0023E6  2BE2               	incf	_TxData& (0+255),f,b
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;miwi_p2p.c: 2305: {
  6498                           ;miwi_p2p.c: 2306: uint8_t i;
  6499                           ;miwi_p2p.c: 2308: for(i = 0; i < 1; i++)
  6500  0023E8  0101               	movlb	1	; () banked
  6501  0023EA  6BF2               	clrf	MiApp_EstablishConnection@i& (0+255),b
  6502  0023EC                     l13193:
  6503                           
  6504                           ; BSR set to: 1
  6505                           ;miwi_p2p.c: 2309: {
  6506                           ;miwi_p2p.c: 2310: TxBuffer[TxData++] = AdditionalNodeID[i];
  6507  0023EC  51F2               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6508  0023EE  0FFE               	addlw	low _AdditionalNodeID
  6509  0023F0  6ED9               	movwf	fsr2l,c
  6510  0023F2  6ADA               	clrf	fsr2h,c
  6511  0023F4  0E96               	movlw	low _TxBuffer
  6512  0023F6  0100               	movlb	0	; () banked
  6513  0023F8  25E2               	addwf	_TxData& (0+255),w,b
  6514  0023FA  6EE1               	movwf	fsr1l,c
  6515  0023FC  6AE2               	clrf	fsr1h,c
  6516  0023FE  0E01               	movlw	high _TxBuffer
  6517  002400  22E2               	addwfc	fsr1h,f,c
  6518  002402  CFDF FFE7          	movff	indf2,indf1
  6519                           
  6520                           ; BSR set to: 0
  6521  002406  2BE2               	incf	_TxData& (0+255),f,b
  6522                           
  6523                           ; BSR set to: 0
  6524  002408  0101               	movlb	1	; () banked
  6525  00240A  2BF2               	incf	MiApp_EstablishConnection@i& (0+255),f,b
  6526                           
  6527                           ; BSR set to: 1
  6528  00240C  51F2               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6529  00240E  E0EE               	bz	l13193
  6530                           
  6531                           ; BSR set to: 1
  6532                           ;miwi_p2p.c: 2311: }
  6533                           ;miwi_p2p.c: 2312: }
  6534                           ;miwi_p2p.c: 2327: SendPacket(1, myPANID, (0), 1, 0);
  6535  002410  C0EA  F07B         	movff	_myPANID,SendPacket@DestinationPANID
  6536  002414  C0EB  F07C         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  6537  002418  0100               	movlb	0	; () banked
  6538  00241A  6B7D               	clrf	SendPacket@DestinationAddress& (0+255),b
  6539  00241C  6B7E               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  6540  00241E  0E01               	movlw	1
  6541  002420  6F7F               	movwf	SendPacket@isCommand& (0+255),b
  6542  002422  6B80               	clrf	SendPacket@SecurityEnabled& (0+255),b
  6543  002424  ECA1  F014         	call	_SendPacket
  6544  002428                     l13203:
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;miwi_p2p.c: 2344: }
  6548                           ;miwi_p2p.c: 2346: if( MiApp_MessageAvailable())
  6549  002428  EC58  F01D         	call	_MiApp_MessageAvailable	;wreg free
  6550  00242C  0900               	iorlw	0
  6551  00242E  E002               	bz	l13207
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;miwi_p2p.c: 2347: {
  6555                           ;miwi_p2p.c: 2348: MiApp_DiscardMessage();
  6556  002430  EC63  F01D         	call	_MiApp_DiscardMessage	;wreg free
  6557  002434                     l13207:
  6558  002434  0100               	movlb	0	; () banked
  6559  002436  B9DF               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  6560  002438  D77F               	goto	l13157
  6561                           
  6562                           ; BSR set to: 0
  6563                           ;miwi_p2p.c: 2349: }
  6564                           ;miwi_p2p.c: 2351: }
  6565                           ;miwi_p2p.c: 2353: ConnMode = tmpConnectionMode;
  6566  00243A  C1E7  F0FF         	movff	MiApp_EstablishConnection@tmpConnectionMode,_ConnMode
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;miwi_p2p.c: 2360: return LatestConnection;
  6570  00243E  51DB               	movf	_LatestConnection& (0+255),w,b
  6571                           
  6572                           ; BSR set to: 0
  6573  002440  0012               	return		;funcret
  6574  002442                     __end_of_MiApp_EstablishConnection:
  6575                           	opt stack 0
  6576                           tblptru	equ	0xFF8
  6577                           tblptrh	equ	0xFF7
  6578                           tblptrl	equ	0xFF6
  6579                           tablat	equ	0xFF5
  6580                           prodh	equ	0xFF4
  6581                           prodl	equ	0xFF3
  6582                           intcon	equ	0xFF2
  6583                           intcon2	equ	0xFF1
  6584                           postinc0	equ	0xFEE
  6585                           wreg	equ	0xFE8
  6586                           indf1	equ	0xFE7
  6587                           postdec1	equ	0xFE5
  6588                           fsr1h	equ	0xFE2
  6589                           fsr1l	equ	0xFE1
  6590                           indf2	equ	0xFDF
  6591                           postinc2	equ	0xFDE
  6592                           postdec2	equ	0xFDD
  6593                           fsr2h	equ	0xFDA
  6594                           fsr2l	equ	0xFD9
  6595                           status	equ	0xFD8
  6596                           
  6597 ;; *************** function _MiApp_MessageAvailable *****************
  6598 ;; Defined at:
  6599 ;;		line 2392 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;		None
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;		None
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      unsigned char 
  6606 ;; Registers used:
  6607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : F/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;Total ram usage:        0 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:   13
  6620 ;; This function calls:
  6621 ;;		_P2PTasks
  6622 ;; This function is called by:
  6623 ;;		_MiApp_UnicastStar
  6624 ;;		_MiApp_EstablishConnection
  6625 ;;		_Process_RxMessage
  6626 ;; This function uses a non-reentrant model
  6627 ;;
  6628                           
  6629                           	psect	text26
  6630  003AB0                     __ptext26:
  6631                           	opt stack 0
  6632  003AB0                     _MiApp_MessageAvailable:
  6633                           	opt stack 14
  6634                           
  6635                           ;miwi_p2p.c: 2394: P2PTasks();
  6636                           
  6637                           ; BSR set to: 0
  6638                           ;incstack = 0
  6639  003AB0  ECC8  F000         	call	_P2PTasks	;wreg free
  6640                           
  6641                           ;miwi_p2p.c: 2396: return P2PStatus.bits.RxHasUserData;
  6642  003AB4  0100               	movlb	0	; () banked
  6643  003AB6  B7DF               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  6644  003AB8  0C01               	retlw	1
  6645                           
  6646                           ; BSR set to: 0
  6647  003ABA  0C00               	retlw	0	;funcret
  6648  003ABC                     __end_of_MiApp_MessageAvailable:
  6649                           	opt stack 0
  6650                           tblptru	equ	0xFF8
  6651                           tblptrh	equ	0xFF7
  6652                           tblptrl	equ	0xFF6
  6653                           tablat	equ	0xFF5
  6654                           prodh	equ	0xFF4
  6655                           prodl	equ	0xFF3
  6656                           intcon	equ	0xFF2
  6657                           intcon2	equ	0xFF1
  6658                           postinc0	equ	0xFEE
  6659                           wreg	equ	0xFE8
  6660                           indf1	equ	0xFE7
  6661                           postdec1	equ	0xFE5
  6662                           fsr1h	equ	0xFE2
  6663                           fsr1l	equ	0xFE1
  6664                           indf2	equ	0xFDF
  6665                           postinc2	equ	0xFDE
  6666                           postdec2	equ	0xFDD
  6667                           fsr2h	equ	0xFDA
  6668                           fsr2l	equ	0xFD9
  6669                           status	equ	0xFD8
  6670                           
  6671 ;; *************** function _P2PTasks *****************
  6672 ;; Defined at:
  6673 ;;		line 344 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;		None
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;  tmp             2   65[BANK0 ] unsigned int 
  6678 ;;  p               1   77[BANK0 ] unsigned char 
  6679 ;;  final_index     1   71[BANK0 ] unsigned char 
  6680 ;;  status          1   78[BANK0 ] unsigned char 
  6681 ;;  p               1   76[BANK0 ] unsigned char 
  6682 ;;  FW_Stat         1   64[BANK0 ] unsigned char 
  6683 ;;  tick3           4   72[BANK0 ] struct _MIWI_TICK
  6684 ;;  tick2           4   67[BANK0 ] struct _MIWI_TICK
  6685 ;;  tmpTick         4   60[BANK0 ] struct _MIWI_TICK
  6686 ;;  i               1   79[BANK0 ] unsigned char 
  6687 ;;  broadcast_st    1    0        unsigned char 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;		None               void
  6690 ;; Registers used:
  6691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6698 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6699 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6700 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6701 ;;Total ram usage:       24 bytes
  6702 ;; Hardware stack levels used:    1
  6703 ;; Hardware stack levels required when called:   12
  6704 ;; This function calls:
  6705 ;;		_AddConnection
  6706 ;;		_EEPROM_Write
  6707 ;;		_Find_InActiveDevices
  6708 ;;		_Find_Index
  6709 ;;		_Forward_Packet_PANCr_to_EDy
  6710 ;;		_MiApp_BroadcastConnectionTable
  6711 ;;		_MiMAC_DiscardPacket
  6712 ;;		_MiMAC_ReceivedPacket
  6713 ;;		_MiMAC_SetAltAddress
  6714 ;;		_MiWi_TickGet
  6715 ;;		_SW_Ack_SrED
  6716 ;;		_SendPacket
  6717 ;;		_isSameAddress
  6718 ;;		_send_link_status
  6719 ;;		_store_connection_tb
  6720 ;; This function is called by:
  6721 ;;		_MiApp_MessageAvailable
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725                           	psect	text27
  6726  000190                     __ptext27:
  6727                           	opt stack 0
  6728  000190                     _P2PTasks:
  6729                           	opt stack 14
  6730                           
  6731                           ;miwi_p2p.c: 346: uint8_t i;
  6732                           ;miwi_p2p.c: 347: MIWI_TICK tmpTick ,tick2 , tick3 ;
  6733                           ;miwi_p2p.c: 348: bool broadcast_status;
  6734                           ;miwi_p2p.c: 351: tick2 = MiWi_TickGet();
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;incstack = 0
  6738  000190  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  6739  000194  C016  F0A3         	movff	?_MiWi_TickGet,P2PTasks@tick2
  6740  000198  C017  F0A4         	movff	?_MiWi_TickGet+1,P2PTasks@tick2+1
  6741  00019C  C018  F0A5         	movff	?_MiWi_TickGet+2,P2PTasks@tick2+2
  6742  0001A0  C019  F0A6         	movff	?_MiWi_TickGet+3,P2PTasks@tick2+3
  6743                           
  6744                           ;miwi_p2p.c: 352: tick3 = MiWi_TickGet();
  6745  0001A4  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  6746  0001A8  C016  F0A8         	movff	?_MiWi_TickGet,P2PTasks@tick3
  6747  0001AC  C017  F0A9         	movff	?_MiWi_TickGet+1,P2PTasks@tick3+1
  6748  0001B0  C018  F0AA         	movff	?_MiWi_TickGet+2,P2PTasks@tick3+2
  6749  0001B4  C019  F0AB         	movff	?_MiWi_TickGet+3,P2PTasks@tick3+3
  6750                           
  6751                           ;miwi_p2p.c: 354: if (role)
  6752  0001B8  5048               	movf	_role,w,c
  6753  0001BA  E020               	bz	l12687
  6754                           
  6755                           ;miwi_p2p.c: 355: {
  6756                           ;miwi_p2p.c: 356: if( (tick3.Val - tick4.Val) > ((((uint32_t)(16000000)/32)*60)*10))
  6757  0001BC  0100               	movlb	0	; () banked
  6758  0001BE  51CE               	movf	_tick4& (0+255),w,b
  6759  0001C0  5DA8               	subwf	P2PTasks@tick3& (0+255),w,b
  6760  0001C2  6F98               	movwf	??_P2PTasks& (0+255),b
  6761  0001C4  51CF               	movf	(_tick4+1)& (0+255),w,b
  6762  0001C6  59A9               	subwfb	(P2PTasks@tick3+1)& (0+255),w,b
  6763  0001C8  6F99               	movwf	(??_P2PTasks+1)& (0+255),b
  6764  0001CA  51D0               	movf	(_tick4+2)& (0+255),w,b
  6765  0001CC  59AA               	subwfb	(P2PTasks@tick3+2)& (0+255),w,b
  6766  0001CE  6F9A               	movwf	(??_P2PTasks+2)& (0+255),b
  6767  0001D0  51D1               	movf	(_tick4+3)& (0+255),w,b
  6768  0001D2  59AB               	subwfb	(P2PTasks@tick3+3)& (0+255),w,b
  6769  0001D4  6F9B               	movwf	(??_P2PTasks+3)& (0+255),b
  6770  0001D6  0598               	decf	??_P2PTasks& (0+255),w,b
  6771  0001D8  0EA3               	movlw	163
  6772  0001DA  5999               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  6773  0001DC  0EE1               	movlw	225
  6774  0001DE  599A               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  6775  0001E0  0E11               	movlw	17
  6776  0001E2  599B               	subwfb	(??_P2PTasks+3)& (0+255),w,b
  6777  0001E4  E32B               	bnc	l12693
  6778                           
  6779                           ; BSR set to: 0
  6780                           ;miwi_p2p.c: 357: {
  6781                           ;miwi_p2p.c: 358: Find_InActiveDevices ();
  6782  0001E6  ECE6  F018         	call	_Find_InActiveDevices	;wreg free
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;miwi_p2p.c: 359: tick4 = tick3;
  6786  0001EA  C0A8  F0CE         	movff	P2PTasks@tick3,_tick4
  6787  0001EE  C0A9  F0CF         	movff	P2PTasks@tick3+1,_tick4+1
  6788  0001F2  C0AA  F0D0         	movff	P2PTasks@tick3+2,_tick4+2
  6789  0001F6  C0AB  F0D1         	movff	P2PTasks@tick3+3,_tick4+3
  6790  0001FA  D020               	goto	l12693
  6791  0001FC                     l12687:
  6792                           
  6793                           ;miwi_p2p.c: 363: else
  6794                           ;miwi_p2p.c: 364: {
  6795                           ;miwi_p2p.c: 365: if( (tick3.Val - tick1.Val) > (((uint32_t)(16000000)/32)*15) )
  6796  0001FC  0100               	movlb	0	; () banked
  6797  0001FE  51CA               	movf	_tick1& (0+255),w,b
  6798  000200  5DA8               	subwf	P2PTasks@tick3& (0+255),w,b
  6799  000202  6F98               	movwf	??_P2PTasks& (0+255),b
  6800  000204  51CB               	movf	(_tick1+1)& (0+255),w,b
  6801  000206  59A9               	subwfb	(P2PTasks@tick3+1)& (0+255),w,b
  6802  000208  6F99               	movwf	(??_P2PTasks+1)& (0+255),b
  6803  00020A  51CC               	movf	(_tick1+2)& (0+255),w,b
  6804  00020C  59AA               	subwfb	(P2PTasks@tick3+2)& (0+255),w,b
  6805  00020E  6F9A               	movwf	(??_P2PTasks+2)& (0+255),b
  6806  000210  51CD               	movf	(_tick1+3)& (0+255),w,b
  6807  000212  59AB               	subwfb	(P2PTasks@tick3+3)& (0+255),w,b
  6808  000214  6F9B               	movwf	(??_P2PTasks+3)& (0+255),b
  6809  000216  519B               	movf	(??_P2PTasks+3)& (0+255),w,b
  6810  000218  E107               	bnz	u12850
  6811  00021A  0EE1               	movlw	225
  6812  00021C  5D98               	subwf	??_P2PTasks& (0+255),w,b
  6813  00021E  0E70               	movlw	112
  6814  000220  5999               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  6815  000222  0E72               	movlw	114
  6816  000224  599A               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  6817  000226  E30A               	bnc	l12693
  6818  000228                     u12850:
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;miwi_p2p.c: 366: {
  6822                           ;miwi_p2p.c: 367: send_link_status ();
  6823  000228  ECB7  F01A         	call	_send_link_status	;wreg free
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;miwi_p2p.c: 368: tick1 = tick3;
  6827  00022C  C0A8  F0CA         	movff	P2PTasks@tick3,_tick1
  6828  000230  C0A9  F0CB         	movff	P2PTasks@tick3+1,_tick1+1
  6829  000234  C0AA  F0CC         	movff	P2PTasks@tick3+2,_tick1+2
  6830  000238  C0AB  F0CD         	movff	P2PTasks@tick3+3,_tick1+3
  6831  00023C                     l12693:
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;miwi_p2p.c: 369: }
  6835                           ;miwi_p2p.c: 370: }
  6836                           ;miwi_p2p.c: 374: if( (tick2.Val - tick1.Val) > (((uint32_t)(16000000)/32)*15) && role)
  6837  00023C  51CA               	movf	_tick1& (0+255),w,b
  6838  00023E  5DA3               	subwf	P2PTasks@tick2& (0+255),w,b
  6839  000240  6F98               	movwf	??_P2PTasks& (0+255),b
  6840  000242  51CB               	movf	(_tick1+1)& (0+255),w,b
  6841  000244  59A4               	subwfb	(P2PTasks@tick2+1)& (0+255),w,b
  6842  000246  6F99               	movwf	(??_P2PTasks+1)& (0+255),b
  6843  000248  51CC               	movf	(_tick1+2)& (0+255),w,b
  6844  00024A  59A5               	subwfb	(P2PTasks@tick2+2)& (0+255),w,b
  6845  00024C  6F9A               	movwf	(??_P2PTasks+2)& (0+255),b
  6846  00024E  51CD               	movf	(_tick1+3)& (0+255),w,b
  6847  000250  59A6               	subwfb	(P2PTasks@tick2+3)& (0+255),w,b
  6848  000252  6F9B               	movwf	(??_P2PTasks+3)& (0+255),b
  6849  000254  519B               	movf	(??_P2PTasks+3)& (0+255),w,b
  6850  000256  E107               	bnz	u12860
  6851  000258  0EE1               	movlw	225
  6852  00025A  5D98               	subwf	??_P2PTasks& (0+255),w,b
  6853  00025C  0E70               	movlw	112
  6854  00025E  5999               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  6855  000260  0E72               	movlw	114
  6856  000262  599A               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  6857  000264  E30C               	bnc	l12701
  6858  000266                     u12860:
  6859                           
  6860                           ; BSR set to: 0
  6861  000266  5048               	movf	_role,w,c
  6862  000268  E00A               	bz	l12701
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;miwi_p2p.c: 375: {
  6866                           ;miwi_p2p.c: 376: MiApp_BroadcastConnectionTable ();
  6867  00026A  EC95  F00E         	call	_MiApp_BroadcastConnectionTable	;wreg free
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;miwi_p2p.c: 377: tick1 = tick2;
  6871  00026E  C0A3  F0CA         	movff	P2PTasks@tick2,_tick1
  6872  000272  C0A4  F0CB         	movff	P2PTasks@tick2+1,_tick1+1
  6873  000276  C0A5  F0CC         	movff	P2PTasks@tick2+2,_tick1+2
  6874  00027A  C0A6  F0CD         	movff	P2PTasks@tick2+3,_tick1+3
  6875  00027E                     l12701:
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;miwi_p2p.c: 378: }
  6879                           ;miwi_p2p.c: 429: if( P2PStatus.bits.SaveConnection )
  6880  00027E  A3DF               	btfss	_P2PStatus& (0+255),1,b	;volatile
  6881  000280  D02B               	goto	l12711
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;miwi_p2p.c: 430: {
  6885                           ;miwi_p2p.c: 431: tmpTick = MiWi_TickGet();
  6886  000282  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  6887  000286  C016  F09C         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  6888  00028A  C017  F09D         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  6889  00028E  C018  F09E         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  6890  000292  C019  F09F         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  6891                           
  6892                           ;miwi_p2p.c: 433: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(16000000)/32)) )
  6893  000296  0100               	movlb	0	; () banked
  6894  000298  51C6               	movf	_nvmDelayTick& (0+255),w,b
  6895  00029A  5D9C               	subwf	P2PTasks@tmpTick& (0+255),w,b
  6896  00029C  6F98               	movwf	??_P2PTasks& (0+255),b
  6897  00029E  51C7               	movf	(_nvmDelayTick+1)& (0+255),w,b
  6898  0002A0  599D               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  6899  0002A2  6F99               	movwf	(??_P2PTasks+1)& (0+255),b
  6900  0002A4  51C8               	movf	(_nvmDelayTick+2)& (0+255),w,b
  6901  0002A6  599E               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  6902  0002A8  6F9A               	movwf	(??_P2PTasks+2)& (0+255),b
  6903  0002AA  51C9               	movf	(_nvmDelayTick+3)& (0+255),w,b
  6904  0002AC  599F               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  6905  0002AE  6F9B               	movwf	(??_P2PTasks+3)& (0+255),b
  6906  0002B0  519B               	movf	(??_P2PTasks+3)& (0+255),w,b
  6907  0002B2  E107               	bnz	u12890
  6908  0002B4  0E21               	movlw	33
  6909  0002B6  5D98               	subwf	??_P2PTasks& (0+255),w,b
  6910  0002B8  0EA1               	movlw	161
  6911  0002BA  5999               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  6912  0002BC  0E07               	movlw	7
  6913  0002BE  599A               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  6914  0002C0  E30B               	bnc	l12711
  6915  0002C2                     u12890:
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;miwi_p2p.c: 434: {
  6919                           ;miwi_p2p.c: 435: P2PStatus.bits.SaveConnection = 0;
  6920  0002C2  93DF               	bcf	_P2PStatus& (0+255),1,b	;volatile
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;miwi_p2p.c: 436: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)20 * sizeof(CO
      +                          NNECTION_ENTRY));
  6924  0002C4  0E78               	movlw	low _ConnectionTable
  6925  0002C6  6E17               	movwf	EEPROM_Write@dest,c
  6926  0002C8  0E02               	movlw	high _ConnectionTable
  6927  0002CA  6E18               	movwf	EEPROM_Write@dest+1,c
  6928  0002CC  0E04               	movlw	4
  6929  0002CE  6E19               	movwf	EEPROM_Write@addr,c
  6930  0002D0  0E18               	movlw	24
  6931  0002D2  6E1A               	movwf	EEPROM_Write@count,c
  6932  0002D4  EC4D  F017         	call	_EEPROM_Write	;wreg free
  6933  0002D8                     l12711:
  6934                           
  6935                           ;miwi_p2p.c: 438: }
  6936                           ;miwi_p2p.c: 439: }
  6937                           ;miwi_p2p.c: 457: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
  6938  0002D8  0100               	movlb	0	; () banked
  6939  0002DA  B7DF               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  6940  0002DC  0012               	return	
  6941                           
  6942                           ; BSR set to: 0
  6943  0002DE  ECFD  F007         	call	_MiMAC_ReceivedPacket	;wreg free
  6944  0002E2  0900               	iorlw	0
  6945  0002E4  B4D8               	btfsc	status,2,c
  6946  0002E6  0012               	return	
  6947                           
  6948                           ;miwi_p2p.c: 458: {
  6949                           ;miwi_p2p.c: 459: bool FW_Stat = 0;
  6950  0002E8  0100               	movlb	0	; () banked
  6951  0002EA  6BA0               	clrf	P2PTasks@FW_Stat& (0+255),b
  6952                           
  6953                           ;miwi_p2p.c: 460: rxMessage.flags.Val = 0;
  6954  0002EC  6BBC               	clrf	_rxMessage& (0+255),b
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;miwi_p2p.c: 461: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
  6958  0002EE  A433               	btfss	_MACRxPacket,2,c
  6959  0002F0  D003               	goto	u12920
  6960  0002F2  6B98               	clrf	??_P2PTasks& (0+255),b
  6961  0002F4  2B98               	incf	??_P2PTasks& (0+255),f,b
  6962  0002F6  D002               	goto	u12928
  6963  0002F8                     u12920:
  6964  0002F8  0100               	movlb	0	; () banked
  6965  0002FA  6B98               	clrf	??_P2PTasks& (0+255),b
  6966  0002FC                     u12928:
  6967  0002FC  51BC               	movf	_rxMessage& (0+255),w,b
  6968  0002FE  1998               	xorwf	??_P2PTasks& (0+255),w,b
  6969  000300  0BFC               	andlw	-4
  6970  000302  1998               	xorwf	??_P2PTasks& (0+255),w,b
  6971  000304  6FBC               	movwf	_rxMessage& (0+255),b
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;miwi_p2p.c: 462: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
  6975  000306  A633               	btfss	_MACRxPacket,3,c
  6976  000308  D002               	bra	u12935
  6977  00030A  87BC               	bsf	_rxMessage& (0+255),3,b
  6978  00030C  D002               	bra	u12937
  6979  00030E                     u12935:
  6980  00030E  0100               	movlb	0	; () banked
  6981  000310  97BC               	bcf	_rxMessage& (0+255),3,b
  6982  000312                     u12937:
  6983                           
  6984                           ;miwi_p2p.c: 463: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
  6985  000312  5033               	movf	_MACRxPacket,w,c
  6986  000314  0B03               	andlw	3
  6987  000316  06E8               	decf	wreg,f,c
  6988  000318  E103               	bnz	u12940
  6989  00031A  6B98               	clrf	??_P2PTasks& (0+255),b
  6990  00031C  2B98               	incf	??_P2PTasks& (0+255),f,b
  6991  00031E  D002               	goto	u12958
  6992  000320                     u12940:
  6993  000320  0100               	movlb	0	; () banked
  6994  000322  6B98               	clrf	??_P2PTasks& (0+255),b
  6995  000324                     u12958:
  6996  000324  3B98               	swapf	??_P2PTasks& (0+255),f,b
  6997  000326  4798               	rlncf	??_P2PTasks& (0+255),f,b
  6998  000328  51BC               	movf	_rxMessage& (0+255),w,b
  6999  00032A  1998               	xorwf	??_P2PTasks& (0+255),w,b
  7000  00032C  0BDF               	andlw	-33
  7001  00032E  1998               	xorwf	??_P2PTasks& (0+255),w,b
  7002  000330  6FBC               	movwf	_rxMessage& (0+255),b
  7003                           
  7004                           ; BSR set to: 0
  7005                           ;miwi_p2p.c: 464: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
  7006  000332  AE33               	btfss	_MACRxPacket,7,c
  7007  000334  D002               	bra	u12965
  7008  000336  8DBC               	bsf	_rxMessage& (0+255),6,b
  7009  000338  D002               	bra	u12967
  7010  00033A                     u12965:
  7011  00033A  0100               	movlb	0	; () banked
  7012  00033C  9DBC               	bcf	_rxMessage& (0+255),6,b
  7013  00033E                     u12967:
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;miwi_p2p.c: 465: if( MACRxPacket.flags.bits.sourcePrsnt )
  7017  00033E  AE33               	btfss	_MACRxPacket,7,c
  7018  000340  D004               	goto	l12727
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;miwi_p2p.c: 466: {
  7022                           ;miwi_p2p.c: 467: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
  7023  000342  C034  F0BF         	movff	_MACRxPacket+1,_rxMessage+3
  7024  000346  C035  F0C0         	movff	_MACRxPacket+2,_rxMessage+4
  7025  00034A                     l12727:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;miwi_p2p.c: 468: }
  7029                           ;miwi_p2p.c: 470: rxMessage.SourcePANID.Val = MACRxPacket.SourcePANID.Val;
  7030  00034A  C03C  F0BD         	movff	_MACRxPacket+9,_rxMessage+1
  7031  00034E  C03D  F0BE         	movff	_MACRxPacket+10,_rxMessage+2
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;miwi_p2p.c: 473: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
  7035  000352  C038  F0C3         	movff	_MACRxPacket+5,_rxMessage+7
  7036                           
  7037                           ;miwi_p2p.c: 474: rxMessage.Payload = MACRxPacket.Payload;
  7038  000356  C036  F0C1         	movff	_MACRxPacket+3,_rxMessage+5
  7039  00035A  C037  F0C2         	movff	_MACRxPacket+4,_rxMessage+6
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;miwi_p2p.c: 483: rxMessage.PacketLQI = MACRxPacket.LQIValue;
  7043  00035E  C03A  F0C5         	movff	_MACRxPacket+7,_rxMessage+9
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;miwi_p2p.c: 484: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
  7047  000362  C039  F0C4         	movff	_MACRxPacket+6,_rxMessage+8
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;miwi_p2p.c: 487: if( rxMessage.flags.bits.command )
  7051  000366  ABBC               	btfss	_rxMessage& (0+255),5,b
  7052  000368  D2A8               	goto	l464
  7053  00036A  D285               	goto	l13015
  7054  00036C                     l12739:
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;miwi_p2p.c: 495: {
  7058                           ;miwi_p2p.c: 497: if(role)
  7059  00036C  5048               	movf	_role,w,c
  7060  00036E  E00A               	bz	l12745
  7061                           
  7062                           ; BSR set to: 0
  7063                           ;miwi_p2p.c: 498: {
  7064                           ;miwi_p2p.c: 509: uint8_t status = 0x00;
  7065  000370  6BAE               	clrf	P2PTasks@status& (0+255),b
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;miwi_p2p.c: 513: if( currentChannel != rxMessage.Payload[1] )
  7069  000372  EE20 F001          	lfsr	2,1
  7070  000376  51C1               	movf	(_rxMessage+5)& (0+255),w,b
  7071  000378  26D9               	addwf	fsr2l,f,c
  7072  00037A  51C2               	movf	(_rxMessage+6)& (0+255),w,b
  7073  00037C  22DA               	addwfc	fsr2h,f,c
  7074  00037E  51FC               	movf	_currentChannel& (0+255),w,b
  7075  000380  18DE               	xorwf	postinc2,w,c
  7076  000382  E003               	bz	l12747
  7077  000384                     l12745:
  7078                           
  7079                           ;miwi_p2p.c: 514: {
  7080                           ;miwi_p2p.c: 515: MiMAC_DiscardPacket();
  7081  000384  EC10  F01D         	call	_MiMAC_DiscardPacket	;wreg free
  7082                           
  7083                           ;miwi_p2p.c: 516: break;
  7084  000388  D299               	goto	l13017
  7085  00038A                     l12747:
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;miwi_p2p.c: 517: }
  7089                           ;miwi_p2p.c: 521: if( ConnMode == 0x03 )
  7090  00038A  0E03               	movlw	3
  7091  00038C  19FF               	xorwf	_ConnMode& (0+255),w,b
  7092  00038E  E0FA               	bz	l12745
  7093                           
  7094                           ; BSR set to: 0
  7095                           ;miwi_p2p.c: 525: }
  7096                           ;miwi_p2p.c: 529: if( rxMessage.SourcePANID.Val != 0xFFFF &&
  7097                           ;miwi_p2p.c: 530: rxMessage.SourcePANID.Val != myPANID.Val &&
  7098                           ;miwi_p2p.c: 531: rxMessage.PayloadSize > 2)
  7099  000390  29BD               	incf	(_rxMessage+1)& (0+255),w,b
  7100  000392  E102               	bnz	u13020
  7101  000394  29BE               	incf	(_rxMessage+2)& (0+255),w,b
  7102  000396  E00B               	bz	l12759
  7103  000398                     u13020:
  7104                           
  7105                           ; BSR set to: 0
  7106  000398  51EA               	movf	_myPANID& (0+255),w,b
  7107  00039A  19BD               	xorwf	(_rxMessage+1)& (0+255),w,b
  7108  00039C  E103               	bnz	u13030
  7109  00039E  51EB               	movf	(_myPANID+1)& (0+255),w,b
  7110  0003A0  19BE               	xorwf	(_rxMessage+2)& (0+255),w,b
  7111  0003A2  E005               	bz	l12759
  7112  0003A4                     u13030:
  7113                           
  7114                           ; BSR set to: 0
  7115  0003A4  0E02               	movlw	2
  7116  0003A6  65C3               	cpfsgt	(_rxMessage+7)& (0+255),b
  7117  0003A8  D002               	goto	l12759
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;miwi_p2p.c: 532: {
  7121                           ;miwi_p2p.c: 533: status = 0xF2;
  7122  0003AA  0EF2               	movlw	242
  7123  0003AC  D003               	goto	L1
  7124  0003AE                     l12759:
  7125                           
  7126                           ; BSR set to: 0
  7127                           ;miwi_p2p.c: 535: else
  7128                           ;miwi_p2p.c: 537: {
  7129                           ;miwi_p2p.c: 540: status = AddConnection();
  7130  0003AE  EC21  F012         	call	_AddConnection	;wreg free
  7131  0003B2  0100               	movlb	0	; () banked
  7132  0003B4                     L1:
  7133  0003B4  6FAE               	movwf	P2PTasks@status& (0+255),b
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;miwi_p2p.c: 541: }
  7137                           ;miwi_p2p.c: 543: uint8_t p;
  7138                           ;miwi_p2p.c: 544: if (rxMessage.Payload[3] == 0xAA)
  7139  0003B6  EE20 F003          	lfsr	2,3
  7140  0003BA  51C1               	movf	(_rxMessage+5)& (0+255),w,b
  7141  0003BC  26D9               	addwf	fsr2l,f,c
  7142  0003BE  51C2               	movf	(_rxMessage+6)& (0+255),w,b
  7143  0003C0  22DA               	addwfc	fsr2h,f,c
  7144  0003C2  0EAA               	movlw	170
  7145  0003C4  18DE               	xorwf	postinc2,w,c
  7146  0003C6  E120               	bnz	l12777
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;miwi_p2p.c: 545: {
  7150                           ;miwi_p2p.c: 547: for (p = 0 ;p <20;p++)
  7151  0003C8  6BAC               	clrf	P2PTasks@p& (0+255),b
  7152  0003CA                     l12765:
  7153                           
  7154                           ; BSR set to: 0
  7155  0003CA  0E13               	movlw	19
  7156  0003CC  65AC               	cpfsgt	P2PTasks@p& (0+255),b
  7157  0003CE  D001               	goto	l12769
  7158  0003D0  D01B               	goto	l12777
  7159  0003D2                     l12769:
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;miwi_p2p.c: 548: {
  7163                           ;miwi_p2p.c: 549: if (isSameAddress(rxMessage.SourceAddress, ConnectionTable[p].Address)
      +                           )
  7164  0003D2  C0BF  F016         	movff	_rxMessage+3,isSameAddress@Address1
  7165  0003D6  C0C0  F017         	movff	_rxMessage+4,isSameAddress@Address1+1
  7166  0003DA  51AC               	movf	P2PTasks@p& (0+255),w,b
  7167  0003DC  0D0E               	mullw	14
  7168  0003DE  0E7C               	movlw	low (_ConnectionTable+4)
  7169  0003E0  24F3               	addwf	prodl,w,c
  7170  0003E2  6E18               	movwf	isSameAddress@Address2,c
  7171  0003E4  0E02               	movlw	high (_ConnectionTable+4)
  7172  0003E6  20F4               	addwfc	prodh,w,c
  7173  0003E8  6E19               	movwf	isSameAddress@Address2+1,c
  7174  0003EA  ECDF  F01B         	call	_isSameAddress	;wreg free
  7175  0003EE  0900               	iorlw	0
  7176  0003F0  E008               	bz	l12773
  7177                           
  7178                           ;miwi_p2p.c: 550: {
  7179                           ;miwi_p2p.c: 551: permanent_connections[p] = 0xFF;
  7180  0003F2  0E64               	movlw	low _permanent_connections
  7181  0003F4  0100               	movlb	0	; () banked
  7182  0003F6  25AC               	addwf	P2PTasks@p& (0+255),w,b
  7183  0003F8  6ED9               	movwf	fsr2l,c
  7184  0003FA  6ADA               	clrf	fsr2h,c
  7185  0003FC  0E02               	movlw	high _permanent_connections
  7186  0003FE  22DA               	addwfc	fsr2h,f,c
  7187  000400  68DF               	setf	indf2,c
  7188  000402                     l12773:
  7189  000402  0100               	movlb	0	; () banked
  7190  000404  2BAC               	incf	P2PTasks@p& (0+255),f,b
  7191  000406  D7E1               	goto	l12765
  7192  000408                     l12777:
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;miwi_p2p.c: 553: }
  7196                           ;miwi_p2p.c: 555: }
  7197                           ;miwi_p2p.c: 556: }
  7198                           ;miwi_p2p.c: 558: if( (ConnMode == 0x01) && (status != 0x01 && status != 0x02) )
  7199  000408  05FF               	decf	_ConnMode& (0+255),w,b
  7200  00040A  E107               	bnz	l12791
  7201                           
  7202                           ; BSR set to: 0
  7203  00040C  05AE               	decf	P2PTasks@status& (0+255),w,b
  7204  00040E  E005               	bz	l12791
  7205                           
  7206                           ; BSR set to: 0
  7207  000410  0E02               	movlw	2
  7208  000412  19AE               	xorwf	P2PTasks@status& (0+255),w,b
  7209  000414  E002               	bz	l12791
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;miwi_p2p.c: 559: {
  7213                           ;miwi_p2p.c: 560: status = 0xF3;
  7214  000416  0EF3               	movlw	243
  7215  000418  6FAE               	movwf	P2PTasks@status& (0+255),b
  7216  00041A                     l12791:
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;miwi_p2p.c: 568: }
  7220                           ;miwi_p2p.c: 572: {TxData = 0;};
  7221  00041A  6BE2               	clrf	_TxData& (0+255),b
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;miwi_p2p.c: 573: TxBuffer[TxData++] = 0x91;
  7225  00041C  0E96               	movlw	low _TxBuffer
  7226  00041E  25E2               	addwf	_TxData& (0+255),w,b
  7227  000420  6ED9               	movwf	fsr2l,c
  7228  000422  6ADA               	clrf	fsr2h,c
  7229  000424  0E01               	movlw	high _TxBuffer
  7230  000426  22DA               	addwfc	fsr2h,f,c
  7231  000428  0E91               	movlw	145
  7232  00042A  6EDF               	movwf	indf2,c
  7233                           
  7234                           ; BSR set to: 0
  7235  00042C  2BE2               	incf	_TxData& (0+255),f,b
  7236                           
  7237                           ; BSR set to: 0
  7238                           ;miwi_p2p.c: 574: TxBuffer[TxData++] = status;
  7239  00042E  0E96               	movlw	low _TxBuffer
  7240  000430  25E2               	addwf	_TxData& (0+255),w,b
  7241  000432  6ED9               	movwf	fsr2l,c
  7242  000434  6ADA               	clrf	fsr2h,c
  7243  000436  0E01               	movlw	high _TxBuffer
  7244  000438  22DA               	addwfc	fsr2h,f,c
  7245  00043A  C0AE  FFDF         	movff	P2PTasks@status,indf2
  7246                           
  7247                           ; BSR set to: 0
  7248  00043E  2BE2               	incf	_TxData& (0+255),f,b
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;miwi_p2p.c: 575: TxBuffer[TxData++] = MyindexinPC;
  7252  000440  0E96               	movlw	low _TxBuffer
  7253  000442  25E2               	addwf	_TxData& (0+255),w,b
  7254  000444  6ED9               	movwf	fsr2l,c
  7255  000446  6ADA               	clrf	fsr2h,c
  7256  000448  0E01               	movlw	high _TxBuffer
  7257  00044A  22DA               	addwfc	fsr2h,f,c
  7258  00044C  C0DD  FFDF         	movff	_MyindexinPC,indf2
  7259                           
  7260                           ; BSR set to: 0
  7261  000450  2BE2               	incf	_TxData& (0+255),f,b
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;miwi_p2p.c: 576: if( status == 0x00 ||
  7265                           ;miwi_p2p.c: 577: status == 0x01 )
  7266  000452  51AE               	movf	P2PTasks@status& (0+255),w,b
  7267  000454  E002               	bz	l12809
  7268                           
  7269                           ; BSR set to: 0
  7270  000456  05AE               	decf	P2PTasks@status& (0+255),w,b
  7271  000458  E11B               	bnz	l12827
  7272  00045A                     l12809:
  7273                           
  7274                           ; BSR set to: 0
  7275                           ;miwi_p2p.c: 578: {
  7276                           ;miwi_p2p.c: 579: TxBuffer[TxData++] = P2PCapacityInfo;
  7277  00045A  0E96               	movlw	low _TxBuffer
  7278  00045C  25E2               	addwf	_TxData& (0+255),w,b
  7279  00045E  6ED9               	movwf	fsr2l,c
  7280  000460  6ADA               	clrf	fsr2h,c
  7281  000462  0E01               	movlw	high _TxBuffer
  7282  000464  22DA               	addwfc	fsr2h,f,c
  7283  000466  C0DE  FFDF         	movff	_P2PCapacityInfo,indf2
  7284                           
  7285                           ; BSR set to: 0
  7286  00046A  2BE2               	incf	_TxData& (0+255),f,b
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;miwi_p2p.c: 581: for(i = 0; i < 1; i++)
  7290  00046C  6BAF               	clrf	P2PTasks@i& (0+255),b
  7291  00046E                     l12815:
  7292                           
  7293                           ; BSR set to: 0
  7294  00046E  51AF               	movf	P2PTasks@i& (0+255),w,b
  7295  000470  E10F               	bnz	l12827
  7296                           
  7297                           ; BSR set to: 0
  7298                           ;miwi_p2p.c: 582: {
  7299                           ;miwi_p2p.c: 583: TxBuffer[TxData++] = AdditionalNodeID[i];
  7300  000472  51AF               	movf	P2PTasks@i& (0+255),w,b
  7301  000474  0FFE               	addlw	low _AdditionalNodeID
  7302  000476  6ED9               	movwf	fsr2l,c
  7303  000478  6ADA               	clrf	fsr2h,c
  7304  00047A  0E96               	movlw	low _TxBuffer
  7305  00047C  25E2               	addwf	_TxData& (0+255),w,b
  7306  00047E  6EE1               	movwf	fsr1l,c
  7307  000480  6AE2               	clrf	fsr1h,c
  7308  000482  0E01               	movlw	high _TxBuffer
  7309  000484  22E2               	addwfc	fsr1h,f,c
  7310  000486  CFDF FFE7          	movff	indf2,indf1
  7311                           
  7312                           ; BSR set to: 0
  7313  00048A  2BE2               	incf	_TxData& (0+255),f,b
  7314                           
  7315                           ; BSR set to: 0
  7316  00048C  2BAF               	incf	P2PTasks@i& (0+255),f,b
  7317  00048E  D7EF               	goto	l12815
  7318  000490                     l12827:
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;miwi_p2p.c: 584: }
  7322                           ;miwi_p2p.c: 586: }
  7323                           ;miwi_p2p.c: 588: MiMAC_DiscardPacket();
  7324  000490  EC10  F01D         	call	_MiMAC_DiscardPacket	;wreg free
  7325                           
  7326                           ;miwi_p2p.c: 600: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
  7327  000494  C0BD  F07B         	movff	_rxMessage+1,SendPacket@DestinationPANID
  7328  000498  C0BE  F07C         	movff	_rxMessage+2,SendPacket@DestinationPANID+1
  7329  00049C  C0BF  F07D         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7330  0004A0  C0C0  F07E         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7331  0004A4  0E01               	movlw	1
  7332  0004A6  0100               	movlb	0	; () banked
  7333  0004A8  6F7F               	movwf	SendPacket@isCommand& (0+255),b
  7334  0004AA  0E00               	movlw	0
  7335  0004AC  B7BC               	btfsc	_rxMessage& (0+255),3,b
  7336  0004AE  0E01               	movlw	1
  7337  0004B0  6F80               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7338  0004B2  0E00               	movlw	0
  7339  0004B4  ECA1  F014         	call	_SendPacket
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;miwi_p2p.c: 607: MiApp_BroadcastConnectionTable ();
  7343  0004B8  EC95  F00E         	call	_MiApp_BroadcastConnectionTable	;wreg free
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;miwi_p2p.c: 610: if( status == 0x00 )
  7347  0004BC  51AE               	movf	P2PTasks@status& (0+255),w,b
  7348  0004BE  E001 D1FD          	bnz	l13017
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;miwi_p2p.c: 611: {
  7352                           ;miwi_p2p.c: 612: EEPROM_Write((uint8_t *)&(ConnectionTable[LatestConnection]), 0x04+((u
      +                          int16_t)LatestConnection * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7353  0004C2  51DB               	movf	_LatestConnection& (0+255),w,b
  7354  0004C4  0D0E               	mullw	14
  7355  0004C6  0E78               	movlw	low _ConnectionTable
  7356  0004C8  24F3               	addwf	prodl,w,c
  7357  0004CA  6E17               	movwf	EEPROM_Write@dest,c
  7358  0004CC  0E02               	movlw	high _ConnectionTable
  7359  0004CE  20F4               	addwfc	prodh,w,c
  7360  0004D0  6E18               	movwf	EEPROM_Write@dest+1,c
  7361  0004D2  51DB               	movf	_LatestConnection& (0+255),w,b
  7362  0004D4  0D0E               	mullw	14
  7363  0004D6  50F3               	movf	prodl,w,c
  7364  0004D8  0F04               	addlw	4
  7365  0004DA  6E19               	movwf	EEPROM_Write@addr,c
  7366  0004DC  0E0E               	movlw	14
  7367  0004DE  6E1A               	movwf	EEPROM_Write@count,c
  7368  0004E0  EC4D  F017         	call	_EEPROM_Write	;wreg free
  7369  0004E4  D1EB               	goto	l13017
  7370  0004E6                     l12839:
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;miwi_p2p.c: 631: {
  7374                           ;miwi_p2p.c: 632: if(ConnMode > 0x02)
  7375  0004E6  0E02               	movlw	2
  7376  0004E8  65FF               	cpfsgt	_ConnMode& (0+255),b
  7377  0004EA  D001               	goto	l12843
  7378  0004EC  D74B               	goto	l12745
  7379  0004EE                     l12843:
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;miwi_p2p.c: 636: }
  7383                           ;miwi_p2p.c: 637: if( currentChannel != rxMessage.Payload[1] )
  7384  0004EE  EE20 F001          	lfsr	2,1
  7385  0004F2  51C1               	movf	(_rxMessage+5)& (0+255),w,b
  7386  0004F4  26D9               	addwf	fsr2l,f,c
  7387  0004F6  51C2               	movf	(_rxMessage+6)& (0+255),w,b
  7388  0004F8  22DA               	addwfc	fsr2h,f,c
  7389  0004FA  51FC               	movf	_currentChannel& (0+255),w,b
  7390  0004FC  18DE               	xorwf	postinc2,w,c
  7391  0004FE  E001 D741          	bnz	l12745
  7392                           
  7393                           ; BSR set to: 0
  7394                           ;miwi_p2p.c: 641: }
  7395                           ;miwi_p2p.c: 643: {TxData = 0;};
  7396  000502  6BE2               	clrf	_TxData& (0+255),b
  7397                           
  7398                           ; BSR set to: 0
  7399                           ;miwi_p2p.c: 644: TxBuffer[TxData++] = 0x97;
  7400  000504  0E96               	movlw	low _TxBuffer
  7401  000506  25E2               	addwf	_TxData& (0+255),w,b
  7402  000508  6ED9               	movwf	fsr2l,c
  7403  00050A  6ADA               	clrf	fsr2h,c
  7404  00050C  0E01               	movlw	high _TxBuffer
  7405  00050E  22DA               	addwfc	fsr2h,f,c
  7406  000510  0E97               	movlw	151
  7407  000512  6EDF               	movwf	indf2,c
  7408                           
  7409                           ; BSR set to: 0
  7410  000514  2BE2               	incf	_TxData& (0+255),f,b
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = P2PCapacityInfo;
  7414  000516  0E96               	movlw	low _TxBuffer
  7415  000518  25E2               	addwf	_TxData& (0+255),w,b
  7416  00051A  6ED9               	movwf	fsr2l,c
  7417  00051C  6ADA               	clrf	fsr2h,c
  7418  00051E  0E01               	movlw	high _TxBuffer
  7419  000520  22DA               	addwfc	fsr2h,f,c
  7420  000522  C0DE  FFDF         	movff	_P2PCapacityInfo,indf2
  7421  000526  2BE2               	incf	_TxData& (0+255),f,b
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;miwi_p2p.c: 647: for(i = 0; i < 1; i++)
  7425  000528  6BAF               	clrf	P2PTasks@i& (0+255),b
  7426  00052A                     l12855:
  7427                           
  7428                           ; BSR set to: 0
  7429  00052A  51AF               	movf	P2PTasks@i& (0+255),w,b
  7430  00052C  E10F               	bnz	l12867
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;miwi_p2p.c: 648: {
  7434                           ;miwi_p2p.c: 649: TxBuffer[TxData++] = AdditionalNodeID[i];
  7435  00052E  51AF               	movf	P2PTasks@i& (0+255),w,b
  7436  000530  0FFE               	addlw	low _AdditionalNodeID
  7437  000532  6ED9               	movwf	fsr2l,c
  7438  000534  6ADA               	clrf	fsr2h,c
  7439  000536  0E96               	movlw	low _TxBuffer
  7440  000538  25E2               	addwf	_TxData& (0+255),w,b
  7441  00053A  6EE1               	movwf	fsr1l,c
  7442  00053C  6AE2               	clrf	fsr1h,c
  7443  00053E  0E01               	movlw	high _TxBuffer
  7444  000540  22E2               	addwfc	fsr1h,f,c
  7445  000542  CFDF FFE7          	movff	indf2,indf1
  7446                           
  7447                           ; BSR set to: 0
  7448  000546  2BE2               	incf	_TxData& (0+255),f,b
  7449                           
  7450                           ; BSR set to: 0
  7451  000548  2BAF               	incf	P2PTasks@i& (0+255),f,b
  7452  00054A  D7EF               	goto	l12855
  7453  00054C                     l12867:
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;miwi_p2p.c: 650: }
  7457                           ;miwi_p2p.c: 652: MiMAC_DiscardPacket();
  7458  00054C  EC10  F01D         	call	_MiMAC_DiscardPacket	;wreg free
  7459                           
  7460                           ;miwi_p2p.c: 663: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
  7461  000550  C0BD  F07B         	movff	_rxMessage+1,SendPacket@DestinationPANID
  7462  000554  C0BE  F07C         	movff	_rxMessage+2,SendPacket@DestinationPANID+1
  7463  000558  C0BF  F07D         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7464  00055C  C0C0  F07E         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7465  000560  0E01               	movlw	1
  7466  000562  0100               	movlb	0	; () banked
  7467  000564  6F7F               	movwf	SendPacket@isCommand& (0+255),b
  7468  000566  0E00               	movlw	0
  7469  000568  B7BC               	btfsc	_rxMessage& (0+255),3,b
  7470  00056A  0E01               	movlw	1
  7471  00056C  6F80               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7472  00056E  0E00               	movlw	0
  7473  000570  ECA1  F014         	call	_SendPacket
  7474                           
  7475                           ;miwi_p2p.c: 668: }
  7476                           ;miwi_p2p.c: 669: break;
  7477  000574  D1A3               	goto	l13017
  7478  000576                     l493:
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;miwi_p2p.c: 677: {
  7482                           ;miwi_p2p.c: 678: {TxData = 0;};
  7483  000576  6BE2               	clrf	_TxData& (0+255),b
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;miwi_p2p.c: 679: TxBuffer[TxData++] = 0x92;
  7487  000578  0E96               	movlw	low _TxBuffer
  7488  00057A  25E2               	addwf	_TxData& (0+255),w,b
  7489  00057C  6ED9               	movwf	fsr2l,c
  7490  00057E  6ADA               	clrf	fsr2h,c
  7491  000580  0E01               	movlw	high _TxBuffer
  7492  000582  22DA               	addwfc	fsr2h,f,c
  7493  000584  0E92               	movlw	146
  7494  000586  6EDF               	movwf	indf2,c
  7495                           
  7496                           ; BSR set to: 0
  7497  000588  2BE2               	incf	_TxData& (0+255),f,b
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;miwi_p2p.c: 681: for(i = 0; i < 20; i++)
  7501  00058A  6BAF               	clrf	P2PTasks@i& (0+255),b
  7502  00058C                     l12877:
  7503                           
  7504                           ; BSR set to: 0
  7505  00058C  0E13               	movlw	19
  7506  00058E  65AF               	cpfsgt	P2PTasks@i& (0+255),b
  7507  000590  D001               	goto	l12881
  7508  000592  D042               	goto	l12897
  7509  000594                     l12881:
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;miwi_p2p.c: 682: {
  7513                           ;miwi_p2p.c: 684: if( ConnectionTable[i].status.bits.isValid )
  7514  000594  51AF               	movf	P2PTasks@i& (0+255),w,b
  7515  000596  0D0E               	mullw	14
  7516  000598  0E84               	movlw	low (_ConnectionTable+12)
  7517  00059A  24F3               	addwf	prodl,w,c
  7518  00059C  6ED9               	movwf	fsr2l,c
  7519  00059E  0E02               	movlw	high (_ConnectionTable+12)
  7520  0005A0  20F4               	addwfc	prodh,w,c
  7521  0005A2  6EDA               	movwf	fsr2h,c
  7522  0005A4  AEDF               	btfss	indf2,7,c
  7523  0005A6  D035               	goto	l12893
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;miwi_p2p.c: 685: {
  7527                           ;miwi_p2p.c: 687: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7528  0005A8  C0BF  F016         	movff	_rxMessage+3,isSameAddress@Address1
  7529  0005AC  C0C0  F017         	movff	_rxMessage+4,isSameAddress@Address1+1
  7530  0005B0  51AF               	movf	P2PTasks@i& (0+255),w,b
  7531  0005B2  0D0E               	mullw	14
  7532  0005B4  0E7C               	movlw	low (_ConnectionTable+4)
  7533  0005B6  24F3               	addwf	prodl,w,c
  7534  0005B8  6E18               	movwf	isSameAddress@Address2,c
  7535  0005BA  0E02               	movlw	high (_ConnectionTable+4)
  7536  0005BC  20F4               	addwfc	prodh,w,c
  7537  0005BE  6E19               	movwf	isSameAddress@Address2+1,c
  7538  0005C0  ECDF  F01B         	call	_isSameAddress	;wreg free
  7539  0005C4  0900               	iorlw	0
  7540  0005C6  E025               	bz	l12893
  7541                           
  7542                           ;miwi_p2p.c: 688: {
  7543                           ;miwi_p2p.c: 691: ConnectionTable[i].status.Val = 0;
  7544  0005C8  0100               	movlb	0	; () banked
  7545  0005CA  51AF               	movf	P2PTasks@i& (0+255),w,b
  7546  0005CC  0D0E               	mullw	14
  7547  0005CE  0E84               	movlw	low (_ConnectionTable+12)
  7548  0005D0  24F3               	addwf	prodl,w,c
  7549  0005D2  6ED9               	movwf	fsr2l,c
  7550  0005D4  0E02               	movlw	high (_ConnectionTable+12)
  7551  0005D6  20F4               	addwfc	prodh,w,c
  7552  0005D8  6EDA               	movwf	fsr2h,c
  7553  0005DA  6ADF               	clrf	indf2,c
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;miwi_p2p.c: 693: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * siz
      +                          eof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7557  0005DC  51AF               	movf	P2PTasks@i& (0+255),w,b
  7558  0005DE  0D0E               	mullw	14
  7559  0005E0  0E78               	movlw	low _ConnectionTable
  7560  0005E2  24F3               	addwf	prodl,w,c
  7561  0005E4  6E17               	movwf	EEPROM_Write@dest,c
  7562  0005E6  0E02               	movlw	high _ConnectionTable
  7563  0005E8  20F4               	addwfc	prodh,w,c
  7564  0005EA  6E18               	movwf	EEPROM_Write@dest+1,c
  7565  0005EC  51AF               	movf	P2PTasks@i& (0+255),w,b
  7566  0005EE  0D0E               	mullw	14
  7567  0005F0  50F3               	movf	prodl,w,c
  7568  0005F2  0F04               	addlw	4
  7569  0005F4  6E19               	movwf	EEPROM_Write@addr,c
  7570  0005F6  0E0E               	movlw	14
  7571  0005F8  6E1A               	movwf	EEPROM_Write@count,c
  7572  0005FA  EC4D  F017         	call	_EEPROM_Write	;wreg free
  7573                           
  7574                           ;miwi_p2p.c: 695: TxBuffer[TxData++] = 0x00;
  7575  0005FE  0E96               	movlw	low _TxBuffer
  7576  000600  0100               	movlb	0	; () banked
  7577  000602  25E2               	addwf	_TxData& (0+255),w,b
  7578  000604  6ED9               	movwf	fsr2l,c
  7579  000606  6ADA               	clrf	fsr2h,c
  7580  000608  0E01               	movlw	high _TxBuffer
  7581  00060A  22DA               	addwfc	fsr2h,f,c
  7582  00060C  6ADF               	clrf	indf2,c
  7583                           
  7584                           ; BSR set to: 0
  7585  00060E  2BE2               	incf	_TxData& (0+255),f,b
  7586                           
  7587                           ;miwi_p2p.c: 697: break;
  7588  000610  D003               	goto	l12897
  7589  000612                     l12893:
  7590  000612  0100               	movlb	0	; () banked
  7591  000614  2BAF               	incf	P2PTasks@i& (0+255),f,b
  7592  000616  D7BA               	goto	l12877
  7593  000618                     l12897:
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;miwi_p2p.c: 698: }
  7597                           ;miwi_p2p.c: 699: }
  7598                           ;miwi_p2p.c: 700: }
  7599                           ;miwi_p2p.c: 702: MiMAC_DiscardPacket();
  7600  000618  EC10  F01D         	call	_MiMAC_DiscardPacket	;wreg free
  7601                           
  7602                           ;miwi_p2p.c: 704: if( i == 20 )
  7603  00061C  0E14               	movlw	20
  7604  00061E  0100               	movlb	0	; () banked
  7605  000620  19AF               	xorwf	P2PTasks@i& (0+255),w,b
  7606  000622  E109               	bnz	l12905
  7607                           
  7608                           ; BSR set to: 0
  7609                           ;miwi_p2p.c: 705: {
  7610                           ;miwi_p2p.c: 707: TxBuffer[TxData++] = 0xF0;
  7611  000624  0E96               	movlw	low _TxBuffer
  7612  000626  25E2               	addwf	_TxData& (0+255),w,b
  7613  000628  6ED9               	movwf	fsr2l,c
  7614  00062A  6ADA               	clrf	fsr2h,c
  7615  00062C  0E01               	movlw	high _TxBuffer
  7616  00062E  22DA               	addwfc	fsr2h,f,c
  7617  000630  0EF0               	movlw	240
  7618  000632  6EDF               	movwf	indf2,c
  7619                           
  7620                           ; BSR set to: 0
  7621  000634  2BE2               	incf	_TxData& (0+255),f,b
  7622  000636                     l12905:
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;miwi_p2p.c: 708: }
  7626                           ;miwi_p2p.c: 717: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
  7627  000636  C0BD  F07B         	movff	_rxMessage+1,SendPacket@DestinationPANID
  7628  00063A  C0BE  F07C         	movff	_rxMessage+2,SendPacket@DestinationPANID+1
  7629  00063E  C0BF  F07D         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7630  000642  C0C0  F07E         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7631  000646  0E01               	movlw	1
  7632  000648  6F7F               	movwf	SendPacket@isCommand& (0+255),b
  7633  00064A  0E00               	movlw	0
  7634  00064C  B7BC               	btfsc	_rxMessage& (0+255),3,b
  7635  00064E  0E01               	movlw	1
  7636  000650  6F80               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7637  000652  0E00               	movlw	0
  7638  000654  ECA1  F014         	call	_SendPacket
  7639                           
  7640                           ;miwi_p2p.c: 723: }
  7641                           ;miwi_p2p.c: 724: break;
  7642  000658  D131               	goto	l13017
  7643  00065A                     l12907:
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;miwi_p2p.c: 732: case 0x01:
  7647                           ;miwi_p2p.c: 734: if( myPANID.Val == 0xFFFF )
  7648  00065A  29EA               	incf	_myPANID& (0+255),w,b
  7649  00065C  E115               	bnz	l12913
  7650  00065E  29EB               	incf	(_myPANID+1)& (0+255),w,b
  7651  000660  E113               	bnz	l12913
  7652                           
  7653                           ; BSR set to: 0
  7654                           ;miwi_p2p.c: 735: {
  7655                           ;miwi_p2p.c: 736: myPANID.Val = rxMessage.SourcePANID.Val;
  7656  000662  C0BD  F0EA         	movff	_rxMessage+1,_myPANID
  7657  000666  C0BE  F0EB         	movff	_rxMessage+2,_myPANID+1
  7658                           
  7659                           ;miwi_p2p.c: 737: {
  7660                           ;miwi_p2p.c: 738: uint16_t tmp = 0xFFFF;
  7661  00066A  69A1               	setf	P2PTasks@tmp& (0+255),b
  7662  00066C  69A2               	setf	(P2PTasks@tmp+1)& (0+255),b
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;miwi_p2p.c: 739: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
  7666  00066E  0EEA               	movlw	low _myPANID
  7667  000670  6E1A               	movwf	MiMAC_SetAltAddress@PANID,c
  7668  000672  0EA1               	movlw	P2PTasks@tmp& (0+255)
  7669  000674  EC12  F019         	call	_MiMAC_SetAltAddress
  7670                           
  7671                           ;miwi_p2p.c: 740: }
  7672                           ;miwi_p2p.c: 742: EEPROM_Write((uint8_t *)myPANID.v, 0x00, 2);
  7673  000678  0EEA               	movlw	low _myPANID
  7674  00067A  6E17               	movwf	EEPROM_Write@dest,c
  7675  00067C  6A18               	clrf	EEPROM_Write@dest+1,c
  7676  00067E  6A19               	clrf	EEPROM_Write@addr,c
  7677  000680  0E02               	movlw	2
  7678  000682  6E1A               	movwf	EEPROM_Write@count,c
  7679  000684  EC4D  F017         	call	_EEPROM_Write	;wreg free
  7680  000688                     l12913:
  7681                           
  7682                           ;miwi_p2p.c: 744: }
  7683                           ;miwi_p2p.c: 746: AddConnection();
  7684  000688  EC21  F012         	call	_AddConnection	;wreg free
  7685                           
  7686                           ;miwi_p2p.c: 748: myConnectionIndex_in_PanCo = rxMessage.Payload[2];
  7687  00068C  0100               	movlb	0	; () banked
  7688  00068E  EE20 F002          	lfsr	2,2
  7689  000692  51C1               	movf	(_rxMessage+5)& (0+255),w,b
  7690  000694  26D9               	addwf	fsr2l,f,c
  7691  000696  51C2               	movf	(_rxMessage+6)& (0+255),w,b
  7692  000698  22DA               	addwfc	fsr2h,f,c
  7693  00069A  50DF               	movf	indf2,w,c
  7694  00069C  6FFD               	movwf	_myConnectionIndex_in_PanCo& (0+255),b
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;miwi_p2p.c: 749: EEPROM_Write( (uint8_t *)&myConnectionIndex_in_PanCo, 0xBB, 1);
  7698  00069E  0EFD               	movlw	low _myConnectionIndex_in_PanCo
  7699  0006A0  6E17               	movwf	EEPROM_Write@dest,c
  7700  0006A2  6A18               	clrf	EEPROM_Write@dest+1,c
  7701  0006A4  0EBB               	movlw	187
  7702  0006A6  6E19               	movwf	EEPROM_Write@addr,c
  7703  0006A8  0E01               	movlw	1
  7704  0006AA  6E1A               	movwf	EEPROM_Write@count,c
  7705  0006AC  EC4D  F017         	call	_EEPROM_Write	;wreg free
  7706                           
  7707                           ;miwi_p2p.c: 753: P2PStatus.bits.SaveConnection = 1;
  7708  0006B0  0100               	movlb	0	; () banked
  7709  0006B2  83DF               	bsf	_P2PStatus& (0+255),1,b	;volatile
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;miwi_p2p.c: 754: nvmDelayTick = MiWi_TickGet();
  7713  0006B4  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
  7714  0006B8  C016  F0C6         	movff	?_MiWi_TickGet,_nvmDelayTick
  7715  0006BC  C017  F0C7         	movff	?_MiWi_TickGet+1,_nvmDelayTick+1
  7716  0006C0  C018  F0C8         	movff	?_MiWi_TickGet+2,_nvmDelayTick+2
  7717  0006C4  C019  F0C9         	movff	?_MiWi_TickGet+3,_nvmDelayTick+3
  7718                           
  7719                           ;miwi_p2p.c: 756: break;
  7720  0006C8  D65D               	goto	l12745
  7721  0006CA                     l12925:
  7722                           
  7723                           ; BSR set to: 0
  7724  0006CA  EE20 F001          	lfsr	2,1
  7725  0006CE  51C1               	movf	(_rxMessage+5)& (0+255),w,b
  7726  0006D0  26D9               	addwf	fsr2l,f,c
  7727  0006D2  51C2               	movf	(_rxMessage+6)& (0+255),w,b
  7728  0006D4  22DA               	addwfc	fsr2h,f,c
  7729  0006D6  50DF               	movf	indf2,w,c
  7730                           
  7731                           ; Switch size 1, requested type "speed"
  7732                           ; Number of cases is 2, Range of values is 0 to 1
  7733                           ; switch strategies available:
  7734                           ; Name         Instructions Cycles
  7735                           ; simple_byte            7     4 (average)
  7736                           ;	Chosen strategy is simple_byte
  7737  0006D8  E0C0               	bz	l12907
  7738  0006DA  0A01               	xorlw	1	; case 1
  7739  0006DC  E0BE               	bz	l12907
  7740  0006DE  D652               	goto	l12745
  7741  0006E0                     l506:
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;miwi_p2p.c: 766: {
  7745                           ;miwi_p2p.c: 767: if( P2PStatus.bits.Resync )
  7746  0006E0  BBDF               	btfsc	_P2PStatus& (0+255),5,b	;volatile
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;miwi_p2p.c: 768: {
  7750                           ;miwi_p2p.c: 769: P2PStatus.bits.Resync = 0;
  7751  0006E2  9BDF               	bcf	_P2PStatus& (0+255),5,b	;volatile
  7752  0006E4  D64F               	goto	l12745
  7753  0006E6                     l12933:
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;miwi_p2p.c: 817: {
  7757                           ;miwi_p2p.c: 818: if( rxMessage.Payload[1] == 0x00 )
  7758  0006E6  EE20 F001          	lfsr	2,1
  7759  0006EA  51C1               	movf	(_rxMessage+5)& (0+255),w,b
  7760  0006EC  26D9               	addwf	fsr2l,f,c
  7761  0006EE  51C2               	movf	(_rxMessage+6)& (0+255),w,b
  7762  0006F0  22DA               	addwfc	fsr2h,f,c
  7763  0006F2  50DF               	movf	indf2,w,c
  7764  0006F4  E001 D646          	bnz	l12745
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;miwi_p2p.c: 819: {
  7768                           ;miwi_p2p.c: 820: for(i = 0; i < 20; i++)
  7769  0006F8  6BAF               	clrf	P2PTasks@i& (0+255),b
  7770  0006FA                     l12937:
  7771                           
  7772                           ; BSR set to: 0
  7773  0006FA  0E13               	movlw	19
  7774  0006FC  65AF               	cpfsgt	P2PTasks@i& (0+255),b
  7775  0006FE  D001               	goto	l12941
  7776  000700  D641               	goto	l12745
  7777  000702                     l12941:
  7778                           
  7779                           ; BSR set to: 0
  7780                           ;miwi_p2p.c: 821: {
  7781                           ;miwi_p2p.c: 823: if( ConnectionTable[i].status.bits.isValid )
  7782  000702  51AF               	movf	P2PTasks@i& (0+255),w,b
  7783  000704  0D0E               	mullw	14
  7784  000706  0E84               	movlw	low (_ConnectionTable+12)
  7785  000708  24F3               	addwf	prodl,w,c
  7786  00070A  6ED9               	movwf	fsr2l,c
  7787  00070C  0E02               	movlw	high (_ConnectionTable+12)
  7788  00070E  20F4               	addwfc	prodh,w,c
  7789  000710  6EDA               	movwf	fsr2h,c
  7790  000712  AEDF               	btfss	indf2,7,c
  7791  000714  D02C               	goto	l12949
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;miwi_p2p.c: 824: {
  7795                           ;miwi_p2p.c: 826: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7796  000716  C0BF  F016         	movff	_rxMessage+3,isSameAddress@Address1
  7797  00071A  C0C0  F017         	movff	_rxMessage+4,isSameAddress@Address1+1
  7798  00071E  51AF               	movf	P2PTasks@i& (0+255),w,b
  7799  000720  0D0E               	mullw	14
  7800  000722  0E7C               	movlw	low (_ConnectionTable+4)
  7801  000724  24F3               	addwf	prodl,w,c
  7802  000726  6E18               	movwf	isSameAddress@Address2,c
  7803  000728  0E02               	movlw	high (_ConnectionTable+4)
  7804  00072A  20F4               	addwfc	prodh,w,c
  7805  00072C  6E19               	movwf	isSameAddress@Address2+1,c
  7806  00072E  ECDF  F01B         	call	_isSameAddress	;wreg free
  7807  000732  0900               	iorlw	0
  7808  000734  E01C               	bz	l12949
  7809                           
  7810                           ;miwi_p2p.c: 827: {
  7811                           ;miwi_p2p.c: 829: ConnectionTable[i].status.Val = 0;
  7812  000736  0100               	movlb	0	; () banked
  7813  000738  51AF               	movf	P2PTasks@i& (0+255),w,b
  7814  00073A  0D0E               	mullw	14
  7815  00073C  0E84               	movlw	low (_ConnectionTable+12)
  7816  00073E  24F3               	addwf	prodl,w,c
  7817  000740  6ED9               	movwf	fsr2l,c
  7818  000742  0E02               	movlw	high (_ConnectionTable+12)
  7819  000744  20F4               	addwfc	prodh,w,c
  7820  000746  6EDA               	movwf	fsr2h,c
  7821  000748  6ADF               	clrf	indf2,c
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;miwi_p2p.c: 831: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * siz
      +                          eof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7825  00074A  51AF               	movf	P2PTasks@i& (0+255),w,b
  7826  00074C  0D0E               	mullw	14
  7827  00074E  0E78               	movlw	low _ConnectionTable
  7828  000750  24F3               	addwf	prodl,w,c
  7829  000752  6E17               	movwf	EEPROM_Write@dest,c
  7830  000754  0E02               	movlw	high _ConnectionTable
  7831  000756  20F4               	addwfc	prodh,w,c
  7832  000758  6E18               	movwf	EEPROM_Write@dest+1,c
  7833  00075A  51AF               	movf	P2PTasks@i& (0+255),w,b
  7834  00075C  0D0E               	mullw	14
  7835  00075E  50F3               	movf	prodl,w,c
  7836  000760  0F04               	addlw	4
  7837  000762  6E19               	movwf	EEPROM_Write@addr,c
  7838  000764  0E0E               	movlw	14
  7839  000766  6E1A               	movwf	EEPROM_Write@count,c
  7840  000768  EC4D  F017         	call	_EEPROM_Write	;wreg free
  7841                           
  7842                           ;miwi_p2p.c: 833: break;
  7843  00076C  D60B               	goto	l12745
  7844  00076E                     l12949:
  7845  00076E  0100               	movlb	0	; () banked
  7846  000770  2BAF               	incf	P2PTasks@i& (0+255),f,b
  7847  000772  D7C3               	goto	l12937
  7848  000774                     l12955:
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;miwi_p2p.c: 1016: {
  7852                           ;miwi_p2p.c: 1017: if (!role)
  7853  000774  5048               	movf	_role,w,c
  7854  000776  E001 D605          	bnz	l12745
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;miwi_p2p.c: 1018: {
  7858                           ;miwi_p2p.c: 1019: rec_ack = 1;
  7859  00077A  0E01               	movlw	1
  7860  00077C  6FE9               	movwf	_rec_ack& (0+255),b
  7861  00077E  D602               	goto	l12745
  7862  000780                     l12963:
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;miwi_p2p.c: 1029: {
  7866                           ;miwi_p2p.c: 1030: if (!role)
  7867  000780  5048               	movf	_role,w,c
  7868  000782  E001 D5FF          	bnz	l12745
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;miwi_p2p.c: 1031: {
  7872                           ;miwi_p2p.c: 1033: end_nodes = rxMessage.Payload[1]-1;
  7873  000786  EE20 F001          	lfsr	2,1
  7874  00078A  51C1               	movf	(_rxMessage+5)& (0+255),w,b
  7875  00078C  26D9               	addwf	fsr2l,f,c
  7876  00078E  51C2               	movf	(_rxMessage+6)& (0+255),w,b
  7877  000790  22DA               	addwfc	fsr2h,f,c
  7878  000792  50DF               	movf	indf2,w,c
  7879  000794  6F98               	movwf	??_P2PTasks& (0+255),b
  7880  000796  0598               	decf	??_P2PTasks& (0+255),w,b
  7881  000798  6FE7               	movwf	_end_nodes& (0+255),b
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;miwi_p2p.c: 1034: store_connection_tb(rxMessage.Payload);
  7885  00079A  C0C1  F01D         	movff	_rxMessage+5,store_connection_tb@payload
  7886  00079E  C0C2  F01E         	movff	_rxMessage+6,store_connection_tb@payload+1
  7887  0007A2  EC67  F013         	call	_store_connection_tb	;wreg free
  7888  0007A6  D5EE               	goto	l12745
  7889  0007A8                     l12973:
  7890                           
  7891                           ; BSR set to: 0
  7892                           ;miwi_p2p.c: 1043: {
  7893                           ;miwi_p2p.c: 1044: if (role)
  7894  0007A8  5048               	movf	_role,w,c
  7895  0007AA  E101 D5EB          	bz	l12745
  7896                           
  7897                           ; BSR set to: 0
  7898                           ;miwi_p2p.c: 1045: {
  7899                           ;miwi_p2p.c: 1047: uint8_t final_index;
  7900                           ;miwi_p2p.c: 1048: final_index = Find_Index(rxMessage.Payload);
  7901  0007AE  C0C1  F016         	movff	_rxMessage+5,Find_Index@DestAddr
  7902  0007B2  C0C2  F017         	movff	_rxMessage+6,Find_Index@DestAddr+1
  7903  0007B6  EC38  F016         	call	_Find_Index	;wreg free
  7904  0007BA  0100               	movlb	0	; () banked
  7905  0007BC  6FA7               	movwf	P2PTasks@final_index& (0+255),b
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;miwi_p2p.c: 1049: if (final_index != 0xFF)
  7909  0007BE  29A7               	incf	P2PTasks@final_index& (0+255),w,b
  7910  0007C0  E00D               	bz	l12981
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;miwi_p2p.c: 1050: {
  7914                           ;miwi_p2p.c: 1051: FW_Stat = Forward_Packet_PANCr_to_EDy (rxMessage.Payload , final_inde
      +                          x , rxMessage.SourceAddress);
  7915  0007C2  C0C1  F091         	movff	_rxMessage+5,Forward_Packet_PANCr_to_EDy@fw_payload
  7916  0007C6  C0C2  F092         	movff	_rxMessage+6,Forward_Packet_PANCr_to_EDy@fw_payload+1
  7917  0007CA  C0A7  F093         	movff	P2PTasks@final_index,Forward_Packet_PANCr_to_EDy@index
  7918  0007CE  C0BF  F094         	movff	_rxMessage+3,Forward_Packet_PANCr_to_EDy@EDxAddress
  7919  0007D2  C0C0  F095         	movff	_rxMessage+4,Forward_Packet_PANCr_to_EDy@EDxAddress+1
  7920  0007D6  ECA0  F015         	call	_Forward_Packet_PANCr_to_EDy	;wreg free
  7921  0007DA  6FA0               	movwf	P2PTasks@FW_Stat& (0+255),b
  7922  0007DC                     l12981:
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;miwi_p2p.c: 1052: }
  7926                           ;miwi_p2p.c: 1054: if (FW_Stat)
  7927  0007DC  51A0               	movf	P2PTasks@FW_Stat& (0+255),w,b
  7928  0007DE  E101 D5D1          	bz	l12745
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;miwi_p2p.c: 1055: {
  7932                           ;miwi_p2p.c: 1056: SW_Ack_SrED (rxMessage.SourceAddress);
  7933  0007E2  C0BF  F08B         	movff	_rxMessage+3,SW_Ack_SrED@Dest_Addr
  7934  0007E6  C0C0  F08C         	movff	_rxMessage+4,SW_Ack_SrED@Dest_Addr+1
  7935  0007EA  EC84  F01B         	call	_SW_Ack_SrED	;wreg free
  7936  0007EE  D5CA               	goto	l12745
  7937  0007F0                     l12989:
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;miwi_p2p.c: 1068: {
  7941                           ;miwi_p2p.c: 1069: if (role)
  7942  0007F0  5048               	movf	_role,w,c
  7943  0007F2  E101 D5C7          	bz	l12745
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;miwi_p2p.c: 1070: {
  7947                           ;miwi_p2p.c: 1072: uint8_t p;
  7948                           ;miwi_p2p.c: 1073: for (p=0 ; p < 20 ; p++)
  7949  0007F6  6BAD               	clrf	P2PTasks@p_1519& (0+255),b
  7950  0007F8                     l12993:
  7951                           
  7952                           ; BSR set to: 0
  7953  0007F8  0E13               	movlw	19
  7954  0007FA  65AD               	cpfsgt	P2PTasks@p_1519& (0+255),b
  7955  0007FC  D001               	goto	l12997
  7956  0007FE  D5C2               	goto	l12745
  7957  000800                     l12997:
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;miwi_p2p.c: 1074: {
  7961                           ;miwi_p2p.c: 1075: if (ConnectionTable[p].Address[0] == rxMessage.SourceAddress[0] && Co
      +                          nnectionTable[p].Address[1] == rxMessage.SourceAddress[1]
  7962                           ;miwi_p2p.c: 1076: && ConnectionTable[p].Address[2] == rxMessage.SourceAddress[2])
  7963  000800  C0BF  FFD9         	movff	_rxMessage+3,fsr2l
  7964  000804  C0C0  FFDA         	movff	_rxMessage+4,fsr2h
  7965  000808  51AD               	movf	P2PTasks@p_1519& (0+255),w,b
  7966  00080A  0D0E               	mullw	14
  7967  00080C  0E7C               	movlw	low (_ConnectionTable+4)
  7968  00080E  24F3               	addwf	prodl,w,c
  7969  000810  6EE1               	movwf	fsr1l,c
  7970  000812  0E02               	movlw	high (_ConnectionTable+4)
  7971  000814  20F4               	addwfc	prodh,w,c
  7972  000816  6EE2               	movwf	fsr1h,c
  7973  000818  50DE               	movf	postinc2,w,c
  7974  00081A  18E6               	xorwf	postinc1,w,c
  7975  00081C  E12A               	bnz	l13005
  7976                           
  7977                           ; BSR set to: 0
  7978  00081E  EE20 F001          	lfsr	2,1
  7979  000822  51BF               	movf	(_rxMessage+3)& (0+255),w,b
  7980  000824  26D9               	addwf	fsr2l,f,c
  7981  000826  51C0               	movf	(_rxMessage+4)& (0+255),w,b
  7982  000828  22DA               	addwfc	fsr2h,f,c
  7983  00082A  51AD               	movf	P2PTasks@p_1519& (0+255),w,b
  7984  00082C  0D0E               	mullw	14
  7985  00082E  0E7D               	movlw	low (_ConnectionTable+5)
  7986  000830  24F3               	addwf	prodl,w,c
  7987  000832  6EE1               	movwf	fsr1l,c
  7988  000834  0E02               	movlw	high (_ConnectionTable+5)
  7989  000836  20F4               	addwfc	prodh,w,c
  7990  000838  6EE2               	movwf	fsr1h,c
  7991  00083A  50DE               	movf	postinc2,w,c
  7992  00083C  18E6               	xorwf	postinc1,w,c
  7993  00083E  E119               	bnz	l13005
  7994                           
  7995                           ; BSR set to: 0
  7996  000840  EE20 F002          	lfsr	2,2
  7997  000844  51BF               	movf	(_rxMessage+3)& (0+255),w,b
  7998  000846  26D9               	addwf	fsr2l,f,c
  7999  000848  51C0               	movf	(_rxMessage+4)& (0+255),w,b
  8000  00084A  22DA               	addwfc	fsr2h,f,c
  8001  00084C  51AD               	movf	P2PTasks@p_1519& (0+255),w,b
  8002  00084E  0D0E               	mullw	14
  8003  000850  0E7E               	movlw	low (_ConnectionTable+6)
  8004  000852  24F3               	addwf	prodl,w,c
  8005  000854  6EE1               	movwf	fsr1l,c
  8006  000856  0E02               	movlw	high (_ConnectionTable+6)
  8007  000858  20F4               	addwfc	prodh,w,c
  8008  00085A  6EE2               	movwf	fsr1h,c
  8009  00085C  50DE               	movf	postinc2,w,c
  8010  00085E  18E6               	xorwf	postinc1,w,c
  8011  000860  E108               	bnz	l13005
  8012                           
  8013                           ; BSR set to: 0
  8014                           ;miwi_p2p.c: 1077: {
  8015                           ;miwi_p2p.c: 1078: link_stat[p]++;
  8016  000862  0E50               	movlw	low _link_stat
  8017  000864  25AD               	addwf	P2PTasks@p_1519& (0+255),w,b
  8018  000866  6ED9               	movwf	fsr2l,c
  8019  000868  6ADA               	clrf	fsr2h,c
  8020  00086A  0E02               	movlw	high _link_stat
  8021  00086C  22DA               	addwfc	fsr2h,f,c
  8022  00086E  2ADF               	incf	indf2,f,c
  8023                           
  8024                           ;miwi_p2p.c: 1079: break;
  8025  000870  D589               	goto	l12745
  8026  000872                     l13005:
  8027                           
  8028                           ; BSR set to: 0
  8029  000872  2BAD               	incf	P2PTasks@p_1519& (0+255),f,b
  8030  000874  D7C1               	goto	l12993
  8031  000876                     l13015:
  8032                           
  8033                           ; BSR set to: 0
  8034  000876  C0C1  FFD9         	movff	_rxMessage+5,fsr2l
  8035  00087A  C0C2  FFDA         	movff	_rxMessage+6,fsr2h
  8036  00087E  50DF               	movf	indf2,w,c
  8037                           
  8038                           ; Switch size 1, requested type "speed"
  8039                           ; Number of cases is 10, Range of values is 119 to 218
  8040                           ; switch strategies available:
  8041                           ; Name         Instructions Cycles
  8042                           ; simple_byte           31    16 (average)
  8043                           ;	Chosen strategy is simple_byte
  8044  000880  0A77               	xorlw	119	; case 119
  8045  000882  E101 D77D          	bz	l12963
  8046  000886  0A0D               	xorlw	13	; case 122
  8047  000888  E0B3               	bz	l12989
  8048  00088A  0AFB               	xorlw	251	; case 129
  8049  00088C  E101 D56E          	bz	l12739
  8050  000890  0A03               	xorlw	3	; case 130
  8051  000892  E101 D670          	bz	l493
  8052  000896  0A05               	xorlw	5	; case 135
  8053  000898  E101 D625          	bz	l12839
  8054  00089C  0A16               	xorlw	22	; case 145
  8055  00089E  E101 D714          	bz	l12925
  8056  0008A2  0A03               	xorlw	3	; case 146
  8057  0008A4  E101 D71F          	bz	l12933
  8058  0008A8  0A05               	xorlw	5	; case 151
  8059  0008AA  E101 D719          	bz	l506
  8060  0008AE  0A5B               	xorlw	91	; case 204
  8061  0008B0  E101 D77A          	bz	l12973
  8062  0008B4  0A16               	xorlw	22	; case 218
  8063  0008B6  E101 D75D          	bz	l12955
  8064  0008BA                     l464:
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;miwi_p2p.c: 1101: else
  8068                           ;miwi_p2p.c: 1102: {
  8069                           ;miwi_p2p.c: 1103: P2PStatus.bits.RxHasUserData = 1;
  8070  0008BA  87DF               	bsf	_P2PStatus& (0+255),3,b	;volatile
  8071  0008BC                     l13017:
  8072                           
  8073                           ;miwi_p2p.c: 1104: }
  8074                           ;miwi_p2p.c: 1113: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
  8075  0008BC  0100               	movlb	0	; () banked
  8076  0008BE  51C3               	movf	(_rxMessage+7)& (0+255),w,b
  8077  0008C0  E004               	bz	l535
  8078                           
  8079                           ; BSR set to: 0
  8080  0008C2  B9DF               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  8081  0008C4  D002               	goto	l535
  8082                           
  8083                           ; BSR set to: 0
  8084  0008C6  ABDF               	btfss	_P2PStatus& (0+255),5,b	;volatile
  8085  0008C8  0012               	return	
  8086  0008CA                     l535:
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;miwi_p2p.c: 1114: {
  8090                           ;miwi_p2p.c: 1115: P2PStatus.bits.RxHasUserData = 0;
  8091  0008CA  97DF               	bcf	_P2PStatus& (0+255),3,b	;volatile
  8092                           
  8093                           ; BSR set to: 0
  8094                           ;miwi_p2p.c: 1116: MiMAC_DiscardPacket();
  8095  0008CC  EF10  F01D         	goto	_MiMAC_DiscardPacket	;wreg free
  8096  0008D0                     __end_of_P2PTasks:
  8097                           	opt stack 0
  8098                           tblptru	equ	0xFF8
  8099                           tblptrh	equ	0xFF7
  8100                           tblptrl	equ	0xFF6
  8101                           tablat	equ	0xFF5
  8102                           prodh	equ	0xFF4
  8103                           prodl	equ	0xFF3
  8104                           intcon	equ	0xFF2
  8105                           intcon2	equ	0xFF1
  8106                           postinc0	equ	0xFEE
  8107                           wreg	equ	0xFE8
  8108                           indf1	equ	0xFE7
  8109                           postinc1	equ	0xFE6
  8110                           postdec1	equ	0xFE5
  8111                           fsr1h	equ	0xFE2
  8112                           fsr1l	equ	0xFE1
  8113                           indf2	equ	0xFDF
  8114                           postinc2	equ	0xFDE
  8115                           postdec2	equ	0xFDD
  8116                           fsr2h	equ	0xFDA
  8117                           fsr2l	equ	0xFD9
  8118                           status	equ	0xFD8
  8119                           
  8120 ;; *************** function _store_connection_tb *****************
  8121 ;; Defined at:
  8122 ;;		line 150 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  payload         2   28[COMRAM] PTR unsigned char 
  8125 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  8126 ;; Auto vars:     Size  Location     Type
  8127 ;;  i               1   33[COMRAM] unsigned char 
  8128 ;;  j               1   32[COMRAM] unsigned char 
  8129 ;;  connections_    1    0        unsigned char 
  8130 ;;  k               1    0        unsigned char 
  8131 ;; Return value:  Size  Location     Type
  8132 ;;		None               void
  8133 ;; Registers used:
  8134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8135 ;; Tracked objects:
  8136 ;;		On entry : F/0
  8137 ;;		On exit  : F/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8141 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8142 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8143 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8144 ;;Total ram usage:        6 bytes
  8145 ;; Hardware stack levels used:    1
  8146 ;; Hardware stack levels required when called:    4
  8147 ;; This function calls:
  8148 ;;		_handle_lost_connection
  8149 ;; This function is called by:
  8150 ;;		_P2PTasks
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           	psect	text28
  8155  0026CE                     __ptext28:
  8156                           	opt stack 0
  8157  0026CE                     _store_connection_tb:
  8158                           	opt stack 21
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;miwi_p2p.c: 154: for (i=4; i < 40; i++)
  8162                           
  8163                           ;incstack = 0
  8164  0026CE  0E04               	movlw	4
  8165  0026D0  6E22               	movwf	store_connection_tb@i,c
  8166  0026D2                     l12427:
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;miwi_p2p.c: 155: {
  8170                           ;miwi_p2p.c: 156: if (i % 4 == 0 && (i+3) < 40)
  8171  0026D2  C022  F01F         	movff	store_connection_tb@i,??_store_connection_tb
  8172  0026D6  0E03               	movlw	3
  8173  0026D8  161F               	andwf	??_store_connection_tb,f,c
  8174  0026DA  E161               	bnz	l12441
  8175                           
  8176                           ; BSR set to: 0
  8177  0026DC  5022               	movf	store_connection_tb@i,w,c
  8178  0026DE  6E1F               	movwf	??_store_connection_tb& (0+255),c
  8179  0026E0  6A20               	clrf	(??_store_connection_tb+1)& (0+255),c
  8180  0026E2  0E03               	movlw	3
  8181  0026E4  261F               	addwf	??_store_connection_tb,f,c
  8182  0026E6  0E00               	movlw	0
  8183  0026E8  2220               	addwfc	??_store_connection_tb+1,f,c
  8184  0026EA  BE20               	btfsc	??_store_connection_tb+1,7,c
  8185  0026EC  D005               	goto	l12431
  8186  0026EE  5020               	movf	??_store_connection_tb+1,w,c
  8187  0026F0  E156               	bnz	l12441
  8188  0026F2  0E28               	movlw	40
  8189  0026F4  5C1F               	subwf	??_store_connection_tb,w,c
  8190  0026F6  E253               	bc	l12441
  8191  0026F8                     l12431:
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;miwi_p2p.c: 157: {
  8195                           ;miwi_p2p.c: 158: j = payload[i+3];
  8196  0026F8  5022               	movf	store_connection_tb@i,w,c
  8197  0026FA  241D               	addwf	store_connection_tb@payload,w,c
  8198  0026FC  6E1F               	movwf	??_store_connection_tb& (0+255),c
  8199  0026FE  0E00               	movlw	0
  8200  002700  201E               	addwfc	store_connection_tb@payload+1,w,c
  8201  002702  6E20               	movwf	(??_store_connection_tb+1)& (0+255),c
  8202  002704  0E03               	movlw	3
  8203  002706  241F               	addwf	??_store_connection_tb,w,c
  8204  002708  6ED9               	movwf	fsr2l,c
  8205  00270A  0E00               	movlw	0
  8206  00270C  2020               	addwfc	??_store_connection_tb+1,w,c
  8207  00270E  6EDA               	movwf	fsr2h,c
  8208  002710  50DF               	movf	indf2,w,c
  8209  002712  6E21               	movwf	store_connection_tb@j,c
  8210                           
  8211                           ; BSR set to: 0
  8212                           ;miwi_p2p.c: 159: END_DEVICES_Short_Address[j].connection_slot = j;
  8213  002714  5021               	movf	store_connection_tb@j,w,c
  8214  002716  0D04               	mullw	4
  8215  002718  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  8216  00271A  24F3               	addwf	prodl,w,c
  8217  00271C  6ED9               	movwf	fsr2l,c
  8218  00271E  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  8219  002720  20F4               	addwfc	prodh,w,c
  8220  002722  6EDA               	movwf	fsr2h,c
  8221  002724  C021  FFDF         	movff	store_connection_tb@j,indf2
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;miwi_p2p.c: 160: END_DEVICES_Short_Address[j].Address[0] = payload[i];
  8225  002728  5022               	movf	store_connection_tb@i,w,c
  8226  00272A  241D               	addwf	store_connection_tb@payload,w,c
  8227  00272C  6ED9               	movwf	fsr2l,c
  8228  00272E  0E00               	movlw	0
  8229  002730  201E               	addwfc	store_connection_tb@payload+1,w,c
  8230  002732  6EDA               	movwf	fsr2h,c
  8231  002734  5021               	movf	store_connection_tb@j,w,c
  8232  002736  0D04               	mullw	4
  8233  002738  0E00               	movlw	low _END_DEVICES_Short_Address
  8234  00273A  24F3               	addwf	prodl,w,c
  8235  00273C  6EE1               	movwf	fsr1l,c
  8236  00273E  0E02               	movlw	high _END_DEVICES_Short_Address
  8237  002740  20F4               	addwfc	prodh,w,c
  8238  002742  6EE2               	movwf	fsr1h,c
  8239  002744  CFDF FFE7          	movff	indf2,indf1
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;miwi_p2p.c: 161: END_DEVICES_Short_Address[j].Address[1] = payload[i+1];
  8243  002748  5022               	movf	store_connection_tb@i,w,c
  8244  00274A  241D               	addwf	store_connection_tb@payload,w,c
  8245  00274C  6E1F               	movwf	??_store_connection_tb& (0+255),c
  8246  00274E  0E00               	movlw	0
  8247  002750  201E               	addwfc	store_connection_tb@payload+1,w,c
  8248  002752  6E20               	movwf	(??_store_connection_tb+1)& (0+255),c
  8249  002754  281F               	incf	??_store_connection_tb,w,c
  8250  002756  6ED9               	movwf	fsr2l,c
  8251  002758  0E00               	movlw	0
  8252  00275A  2020               	addwfc	??_store_connection_tb+1,w,c
  8253  00275C  6EDA               	movwf	fsr2h,c
  8254  00275E  5021               	movf	store_connection_tb@j,w,c
  8255  002760  0D04               	mullw	4
  8256  002762  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  8257  002764  24F3               	addwf	prodl,w,c
  8258  002766  6EE1               	movwf	fsr1l,c
  8259  002768  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  8260  00276A  20F4               	addwfc	prodh,w,c
  8261  00276C  6EE2               	movwf	fsr1h,c
  8262  00276E  CFDF FFE7          	movff	indf2,indf1
  8263                           
  8264                           ; BSR set to: 0
  8265                           ;miwi_p2p.c: 162: END_DEVICES_Short_Address[j].Address[2] = payload[i+2];
  8266  002772  5022               	movf	store_connection_tb@i,w,c
  8267  002774  241D               	addwf	store_connection_tb@payload,w,c
  8268  002776  6E1F               	movwf	??_store_connection_tb& (0+255),c
  8269  002778  0E00               	movlw	0
  8270  00277A  201E               	addwfc	store_connection_tb@payload+1,w,c
  8271  00277C  6E20               	movwf	(??_store_connection_tb+1)& (0+255),c
  8272  00277E  0E02               	movlw	2
  8273  002780  241F               	addwf	??_store_connection_tb,w,c
  8274  002782  6ED9               	movwf	fsr2l,c
  8275  002784  0E00               	movlw	0
  8276  002786  2020               	addwfc	??_store_connection_tb+1,w,c
  8277  002788  6EDA               	movwf	fsr2h,c
  8278  00278A  5021               	movf	store_connection_tb@j,w,c
  8279  00278C  0D04               	mullw	4
  8280  00278E  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  8281  002790  24F3               	addwf	prodl,w,c
  8282  002792  6EE1               	movwf	fsr1l,c
  8283  002794  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  8284  002796  20F4               	addwfc	prodh,w,c
  8285  002798  6EE2               	movwf	fsr1h,c
  8286  00279A  CFDF FFE7          	movff	indf2,indf1
  8287  00279E                     l12441:
  8288                           
  8289                           ; BSR set to: 0
  8290  00279E  2A22               	incf	store_connection_tb@i,f,c
  8291                           
  8292                           ; BSR set to: 0
  8293  0027A0  0E27               	movlw	39
  8294  0027A2  6422               	cpfsgt	store_connection_tb@i,c
  8295  0027A4  D796               	goto	l12427
  8296  0027A6  EF42  F018         	goto	_handle_lost_connection
  8297  0027AA                     __end_of_store_connection_tb:
  8298                           	opt stack 0
  8299                           tblptru	equ	0xFF8
  8300                           tblptrh	equ	0xFF7
  8301                           tblptrl	equ	0xFF6
  8302                           tablat	equ	0xFF5
  8303                           prodh	equ	0xFF4
  8304                           prodl	equ	0xFF3
  8305                           intcon	equ	0xFF2
  8306                           intcon2	equ	0xFF1
  8307                           postinc0	equ	0xFEE
  8308                           wreg	equ	0xFE8
  8309                           indf1	equ	0xFE7
  8310                           postinc1	equ	0xFE6
  8311                           postdec1	equ	0xFE5
  8312                           fsr1h	equ	0xFE2
  8313                           fsr1l	equ	0xFE1
  8314                           indf2	equ	0xFDF
  8315                           postinc2	equ	0xFDE
  8316                           postdec2	equ	0xFDD
  8317                           fsr2h	equ	0xFDA
  8318                           fsr2l	equ	0xFD9
  8319                           status	equ	0xFD8
  8320                           
  8321 ;; *************** function _handle_lost_connection *****************
  8322 ;; Defined at:
  8323 ;;		line 127 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;		None
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  i               1   27[COMRAM] unsigned char 
  8328 ;;  stat            1   26[COMRAM] unsigned char 
  8329 ;; Return value:  Size  Location     Type
  8330 ;;		None               void
  8331 ;; Registers used:
  8332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8333 ;; Tracked objects:
  8334 ;;		On entry : F/0
  8335 ;;		On exit  : F/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8340 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8341 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8342 ;;Total ram usage:        7 bytes
  8343 ;; Hardware stack levels used:    1
  8344 ;; Hardware stack levels required when called:    3
  8345 ;; This function calls:
  8346 ;;		Nothing
  8347 ;; This function is called by:
  8348 ;;		_store_connection_tb
  8349 ;; This function uses a non-reentrant model
  8350 ;;
  8351                           
  8352                           	psect	text29
  8353  003084                     __ptext29:
  8354                           	opt stack 0
  8355  003084                     _handle_lost_connection:
  8356                           	opt stack 21
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;miwi_p2p.c: 129: uint8_t i ;
  8360                           ;miwi_p2p.c: 130: bool stat = 0;
  8361                           
  8362                           ; BSR set to: 0
  8363                           ;incstack = 0
  8364  003084  6A1B               	clrf	handle_lost_connection@stat,c
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;miwi_p2p.c: 131: if (!role)
  8368  003086  5048               	movf	_role,w,c
  8369  003088  A4D8               	btfss	status,2,c
  8370  00308A  0012               	return	
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;miwi_p2p.c: 132: {
  8374                           ;miwi_p2p.c: 133: for (i=0;i<end_nodes+1;i++)
  8375  00308C  6A1C               	clrf	handle_lost_connection@i,c
  8376  00308E  D01A               	goto	l12039
  8377  003090                     l12031:
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;miwi_p2p.c: 134: {
  8381                           ;miwi_p2p.c: 135: if (myLongAddress[0] == END_DEVICES_Short_Address[i].Address[0] && myL
      +                          ongAddress[1] == END_DEVICES_Short_Address[i].Address[1])
  8382  003090  501C               	movf	handle_lost_connection@i,w,c
  8383  003092  0D04               	mullw	4
  8384  003094  0E00               	movlw	low _END_DEVICES_Short_Address
  8385  003096  24F3               	addwf	prodl,w,c
  8386  003098  6ED9               	movwf	fsr2l,c
  8387  00309A  0E02               	movlw	high _END_DEVICES_Short_Address
  8388  00309C  20F4               	addwfc	prodh,w,c
  8389  00309E  6EDA               	movwf	fsr2h,c
  8390  0030A0  0101               	movlb	1	; () banked
  8391  0030A2  51DF               	movf	_myLongAddress& (0+255),w,b
  8392  0030A4  18DE               	xorwf	postinc2,w,c
  8393  0030A6  E10D               	bnz	l12037
  8394                           
  8395                           ; BSR set to: 1
  8396  0030A8  501C               	movf	handle_lost_connection@i,w,c
  8397  0030AA  0D04               	mullw	4
  8398  0030AC  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  8399  0030AE  24F3               	addwf	prodl,w,c
  8400  0030B0  6ED9               	movwf	fsr2l,c
  8401  0030B2  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  8402  0030B4  20F4               	addwfc	prodh,w,c
  8403  0030B6  6EDA               	movwf	fsr2h,c
  8404  0030B8  50DE               	movf	postinc2,w,c
  8405  0030BA  19E0               	xorwf	(_myLongAddress+1)& (0+255),w,b
  8406  0030BC  E102               	bnz	l12037
  8407                           
  8408                           ; BSR set to: 1
  8409                           ;miwi_p2p.c: 136: {
  8410                           ;miwi_p2p.c: 137: stat = 1;
  8411  0030BE  0E01               	movlw	1
  8412  0030C0  6E1B               	movwf	handle_lost_connection@stat,c
  8413  0030C2                     l12037:
  8414                           
  8415                           ; BSR set to: 1
  8416  0030C2  2A1C               	incf	handle_lost_connection@i,f,c
  8417  0030C4                     l12039:
  8418  0030C4  0100               	movlb	0	; () banked
  8419  0030C6  51E7               	movf	_end_nodes& (0+255),w,b
  8420  0030C8  6E16               	movwf	??_handle_lost_connection& (0+255),c
  8421  0030CA  6A17               	clrf	(??_handle_lost_connection+1)& (0+255),c
  8422  0030CC  2A16               	incf	??_handle_lost_connection,f,c
  8423  0030CE  0E00               	movlw	0
  8424  0030D0  2217               	addwfc	??_handle_lost_connection+1,f,c
  8425  0030D2  501C               	movf	handle_lost_connection@i,w,c
  8426  0030D4  6E18               	movwf	(??_handle_lost_connection+2)& (0+255),c
  8427  0030D6  6A19               	clrf	(??_handle_lost_connection+3)& (0+255),c
  8428  0030D8  5016               	movf	??_handle_lost_connection,w,c
  8429  0030DA  5C18               	subwf	??_handle_lost_connection+2,w,c
  8430  0030DC  5019               	movf	??_handle_lost_connection+3,w,c
  8431  0030DE  0A80               	xorlw	128
  8432  0030E0  6E1A               	movwf	(??_handle_lost_connection+4)& (0+255),c
  8433  0030E2  5017               	movf	??_handle_lost_connection+1,w,c
  8434  0030E4  0A80               	xorlw	128
  8435  0030E6  581A               	subwfb	(??_handle_lost_connection+4)& (0+255),w,c
  8436  0030E8  E3D3               	bnc	l12031
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;miwi_p2p.c: 138: }
  8440                           ;miwi_p2p.c: 139: }
  8441                           ;miwi_p2p.c: 140: if (!stat)
  8442  0030EA  501B               	movf	handle_lost_connection@stat,w,c
  8443  0030EC  A4D8               	btfss	status,2,c
  8444  0030EE  0012               	return	
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;miwi_p2p.c: 141: {
  8448                           ;miwi_p2p.c: 142: lost_connection = 1;
  8449  0030F0  0E01               	movlw	1
  8450  0030F2  6FE8               	movwf	_lost_connection& (0+255),b
  8451                           
  8452                           ; BSR set to: 0
  8453  0030F4  0C01               	retlw	1	;funcret
  8454  0030F6                     __end_of_handle_lost_connection:
  8455                           	opt stack 0
  8456                           tblptru	equ	0xFF8
  8457                           tblptrh	equ	0xFF7
  8458                           tblptrl	equ	0xFF6
  8459                           tablat	equ	0xFF5
  8460                           prodh	equ	0xFF4
  8461                           prodl	equ	0xFF3
  8462                           intcon	equ	0xFF2
  8463                           intcon2	equ	0xFF1
  8464                           postinc0	equ	0xFEE
  8465                           wreg	equ	0xFE8
  8466                           indf1	equ	0xFE7
  8467                           postinc1	equ	0xFE6
  8468                           postdec1	equ	0xFE5
  8469                           fsr1h	equ	0xFE2
  8470                           fsr1l	equ	0xFE1
  8471                           indf2	equ	0xFDF
  8472                           postinc2	equ	0xFDE
  8473                           postdec2	equ	0xFDD
  8474                           fsr2h	equ	0xFDA
  8475                           fsr2l	equ	0xFD9
  8476                           status	equ	0xFD8
  8477                           
  8478 ;; *************** function _send_link_status *****************
  8479 ;; Defined at:
  8480 ;;		line 2027 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;		None
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  send_status     1   43[BANK0 ] unsigned char 
  8485 ;; Return value:  Size  Location     Type
  8486 ;;		None               void
  8487 ;; Registers used:
  8488 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8489 ;; Tracked objects:
  8490 ;;		On entry : F/0
  8491 ;;		On exit  : F/0
  8492 ;;		Unchanged: 0/0
  8493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8495 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8497 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8498 ;;Total ram usage:        1 bytes
  8499 ;; Hardware stack levels used:    1
  8500 ;; Hardware stack levels required when called:    9
  8501 ;; This function calls:
  8502 ;;		_SendPacket
  8503 ;; This function is called by:
  8504 ;;		_P2PTasks
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text30
  8509  00356E                     __ptext30:
  8510                           	opt stack 0
  8511  00356E                     _send_link_status:
  8512                           	opt stack 16
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;miwi_p2p.c: 2029: bool send_status;
  8516                           ;miwi_p2p.c: 2030: {TxData = 0;};
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;incstack = 0
  8520  00356E  6BE2               	clrf	_TxData& (0+255),b
  8521                           
  8522                           ; BSR set to: 0
  8523                           ;miwi_p2p.c: 2031: TxBuffer[TxData++] = 0x7A;
  8524  003570  0E96               	movlw	low _TxBuffer
  8525  003572  25E2               	addwf	_TxData& (0+255),w,b
  8526  003574  6ED9               	movwf	fsr2l,c
  8527  003576  6ADA               	clrf	fsr2h,c
  8528  003578  0E01               	movlw	high _TxBuffer
  8529  00357A  22DA               	addwfc	fsr2h,f,c
  8530  00357C  0E7A               	movlw	122
  8531  00357E  6EDF               	movwf	indf2,c
  8532                           
  8533                           ; BSR set to: 0
  8534  003580  2BE2               	incf	_TxData& (0+255),f,b
  8535                           
  8536                           ; BSR set to: 0
  8537                           ;miwi_p2p.c: 2035: send_status = SendPacket(0, myPANID, ConnectionTable[0].Address, 1, 0
      +                          );
  8538  003582  C0EA  F07B         	movff	_myPANID,SendPacket@DestinationPANID
  8539  003586  C0EB  F07C         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  8540  00358A  0E7C               	movlw	low (_ConnectionTable+4)
  8541  00358C  6F7D               	movwf	SendPacket@DestinationAddress& (0+255),b
  8542  00358E  0E02               	movlw	high (_ConnectionTable+4)
  8543  003590  6F7E               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  8544  003592  0E01               	movlw	1
  8545  003594  6F7F               	movwf	SendPacket@isCommand& (0+255),b
  8546  003596  0E00               	movlw	0
  8547  003598  6B80               	clrf	SendPacket@SecurityEnabled& (0+255),b
  8548  00359A  ECA1  F014         	call	_SendPacket
  8549  00359E  6F8B               	movwf	send_link_status@send_status& (0+255),b
  8550                           
  8551                           ; BSR set to: 0
  8552                           ;miwi_p2p.c: 2039: if(!send_status)
  8553  0035A0  518B               	movf	send_link_status@send_status& (0+255),w,b
  8554  0035A2  A4D8               	btfss	status,2,c
  8555  0035A4  0012               	return	
  8556                           
  8557                           ; BSR set to: 0
  8558                           ;miwi_p2p.c: 2040: {
  8559                           ;miwi_p2p.c: 2041: lost_connection = 1;
  8560  0035A6  0E01               	movlw	1
  8561  0035A8  6FE8               	movwf	_lost_connection& (0+255),b
  8562                           
  8563                           ; BSR set to: 0
  8564  0035AA  0C01               	retlw	1	;funcret
  8565  0035AC                     __end_of_send_link_status:
  8566                           	opt stack 0
  8567                           tblptru	equ	0xFF8
  8568                           tblptrh	equ	0xFF7
  8569                           tblptrl	equ	0xFF6
  8570                           tablat	equ	0xFF5
  8571                           prodh	equ	0xFF4
  8572                           prodl	equ	0xFF3
  8573                           intcon	equ	0xFF2
  8574                           intcon2	equ	0xFF1
  8575                           postinc0	equ	0xFEE
  8576                           wreg	equ	0xFE8
  8577                           indf1	equ	0xFE7
  8578                           postinc1	equ	0xFE6
  8579                           postdec1	equ	0xFE5
  8580                           fsr1h	equ	0xFE2
  8581                           fsr1l	equ	0xFE1
  8582                           indf2	equ	0xFDF
  8583                           postinc2	equ	0xFDE
  8584                           postdec2	equ	0xFDD
  8585                           fsr2h	equ	0xFDA
  8586                           fsr2l	equ	0xFD9
  8587                           status	equ	0xFD8
  8588                           
  8589 ;; *************** function _SW_Ack_SrED *****************
  8590 ;; Defined at:
  8591 ;;		line 2092 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;  Dest_Addr       2   43[BANK0 ] PTR unsigned char 
  8594 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;		None
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1    wreg      unsigned char 
  8599 ;; Registers used:
  8600 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8601 ;; Tracked objects:
  8602 ;;		On entry : F/0
  8603 ;;		On exit  : F/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8606 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8609 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8610 ;;Total ram usage:        2 bytes
  8611 ;; Hardware stack levels used:    1
  8612 ;; Hardware stack levels required when called:    9
  8613 ;; This function calls:
  8614 ;;		_SendPacket
  8615 ;; This function is called by:
  8616 ;;		_P2PTasks
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	text31
  8621  003708                     __ptext31:
  8622                           	opt stack 0
  8623  003708                     _SW_Ack_SrED:
  8624                           	opt stack 16
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;miwi_p2p.c: 2094: {TxData = 0;};
  8628                           
  8629                           ; BSR set to: 0
  8630                           ;incstack = 0
  8631  003708  6BE2               	clrf	_TxData& (0+255),b
  8632                           
  8633                           ; BSR set to: 0
  8634                           ;miwi_p2p.c: 2095: TxBuffer[TxData++] = 0xDA;
  8635  00370A  0E96               	movlw	low _TxBuffer
  8636  00370C  25E2               	addwf	_TxData& (0+255),w,b
  8637  00370E  6ED9               	movwf	fsr2l,c
  8638  003710  6ADA               	clrf	fsr2h,c
  8639  003712  0E01               	movlw	high _TxBuffer
  8640  003714  22DA               	addwfc	fsr2h,f,c
  8641  003716  0EDA               	movlw	218
  8642  003718  6EDF               	movwf	indf2,c
  8643                           
  8644                           ; BSR set to: 0
  8645  00371A  2BE2               	incf	_TxData& (0+255),f,b
  8646                           
  8647                           ; BSR set to: 0
  8648                           ;miwi_p2p.c: 2099: return SendPacket(0, myPANID, Dest_Addr, 1, 0);
  8649                           ;	Return value of _SW_Ack_SrED is never used
  8650  00371C  C0EA  F07B         	movff	_myPANID,SendPacket@DestinationPANID
  8651  003720  C0EB  F07C         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  8652  003724  C08B  F07D         	movff	SW_Ack_SrED@Dest_Addr,SendPacket@DestinationAddress
  8653  003728  C08C  F07E         	movff	SW_Ack_SrED@Dest_Addr+1,SendPacket@DestinationAddress+1
  8654  00372C  0E01               	movlw	1
  8655  00372E  6F7F               	movwf	SendPacket@isCommand& (0+255),b
  8656  003730  0E00               	movlw	0
  8657  003732  6B80               	clrf	SendPacket@SecurityEnabled& (0+255),b
  8658  003734  EFA1  F014         	goto	_SendPacket
  8659  003738                     __end_of_SW_Ack_SrED:
  8660                           	opt stack 0
  8661                           tblptru	equ	0xFF8
  8662                           tblptrh	equ	0xFF7
  8663                           tblptrl	equ	0xFF6
  8664                           tablat	equ	0xFF5
  8665                           prodh	equ	0xFF4
  8666                           prodl	equ	0xFF3
  8667                           intcon	equ	0xFF2
  8668                           intcon2	equ	0xFF1
  8669                           postinc0	equ	0xFEE
  8670                           wreg	equ	0xFE8
  8671                           indf1	equ	0xFE7
  8672                           postinc1	equ	0xFE6
  8673                           postdec1	equ	0xFE5
  8674                           fsr1h	equ	0xFE2
  8675                           fsr1l	equ	0xFE1
  8676                           indf2	equ	0xFDF
  8677                           postinc2	equ	0xFDE
  8678                           postdec2	equ	0xFDD
  8679                           fsr2h	equ	0xFDA
  8680                           fsr2l	equ	0xFD9
  8681                           status	equ	0xFD8
  8682                           
  8683 ;; *************** function _MiMAC_ReceivedPacket *****************
  8684 ;; Defined at:
  8685 ;;		line 366 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;  bIntraPAN       1   28[COMRAM] unsigned char 
  8690 ;;  addrMode        1   26[COMRAM] unsigned char 
  8691 ;;  i               1   27[COMRAM] unsigned char 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1    wreg      unsigned char 
  8694 ;; Registers used:
  8695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : F/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8702 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8703 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8704 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8705 ;;Total ram usage:        8 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:    4
  8708 ;; This function calls:
  8709 ;;		_MiMAC_DiscardPacket
  8710 ;; This function is called by:
  8711 ;;		_P2PTasks
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           	psect	text32
  8716  000FFA                     __ptext32:
  8717                           	opt stack 0
  8718  000FFA                     _MiMAC_ReceivedPacket:
  8719                           	opt stack 21
  8720                           
  8721                           ; BSR set to: 0
  8722                           ;drv_mrf_miwi_24j40.c: 368: uint8_t i;
  8723                           ;drv_mrf_miwi_24j40.c: 371: if (PORTBbits.RB0 == 0)
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;incstack = 0
  8727  000FFA  A081               	btfss	3969,0,c	;volatile
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;drv_mrf_miwi_24j40.c: 372: {
  8731                           ;drv_mrf_miwi_24j40.c: 373: INTCONbits.INT0IF = 1;
  8732  000FFC  82F2               	bsf	intcon,1,c	;volatile
  8733                           
  8734                           ; BSR set to: 0
  8735                           ;drv_mrf_miwi_24j40.c: 374: }
  8736                           ;drv_mrf_miwi_24j40.c: 379: if (MRF24J40Status.bits.TX_BUSY)
  8737  000FFE  A03F               	btfss	_MRF24J40Status,0,c	;volatile
  8738  001000  D00B               	goto	l12227
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;drv_mrf_miwi_24j40.c: 380: {
  8742                           ;drv_mrf_miwi_24j40.c: 381: if (failureCounter >= ((uint16_t)0x20 * (((16000000)/4)/1000
      +                          000)))
  8743  001002  51D6               	movf	(_failureCounter+1)& (0+255),w,b	;volatile
  8744  001004  E103               	bnz	u12360
  8745  001006  0E80               	movlw	128
  8746  001008  5DD5               	subwf	_failureCounter& (0+255),w,b	;volatile
  8747  00100A  E304               	bnc	l12225
  8748  00100C                     u12360:
  8749                           
  8750                           ; BSR set to: 0
  8751                           ;drv_mrf_miwi_24j40.c: 382: {
  8752                           ;drv_mrf_miwi_24j40.c: 383: failureCounter = 0;
  8753  00100C  6BD5               	clrf	_failureCounter& (0+255),b	;volatile
  8754  00100E  6BD6               	clrf	(_failureCounter+1)& (0+255),b	;volatile
  8755                           
  8756                           ;drv_mrf_miwi_24j40.c: 384: MRF24J40Status.bits.TX_BUSY = 0;
  8757  001010  903F               	bcf	_MRF24J40Status,0,c	;volatile
  8758                           
  8759                           ;drv_mrf_miwi_24j40.c: 385: } else
  8760  001012  D002               	goto	l12227
  8761  001014                     l12225:
  8762                           
  8763                           ; BSR set to: 0
  8764                           ;drv_mrf_miwi_24j40.c: 386: {
  8765                           ;drv_mrf_miwi_24j40.c: 387: failureCounter++;
  8766  001014  4BD5               	infsnz	_failureCounter& (0+255),f,b	;volatile
  8767  001016  2BD6               	incf	(_failureCounter+1)& (0+255),f,b	;volatile
  8768  001018                     l12227:
  8769                           
  8770                           ; BSR set to: 0
  8771                           ;drv_mrf_miwi_24j40.c: 388: }
  8772                           ;drv_mrf_miwi_24j40.c: 389: }
  8773                           ;drv_mrf_miwi_24j40.c: 391: BankIndex = 0xFF;
  8774  001018  6849               	setf	_BankIndex,c
  8775                           
  8776                           ; BSR set to: 0
  8777                           ;drv_mrf_miwi_24j40.c: 392: for (i = 0; i < 2; i++)
  8778  00101A  6A1C               	clrf	MiMAC_ReceivedPacket@i,c
  8779  00101C                     l12235:
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;drv_mrf_miwi_24j40.c: 393: {
  8783                           ;drv_mrf_miwi_24j40.c: 394: if (RxBuffer[i].PayloadLen > 0)
  8784  00101C  501C               	movf	MiMAC_ReceivedPacket@i,w,c
  8785  00101E  0D45               	mullw	69
  8786  001020  0E0C               	movlw	low _RxBuffer
  8787  001022  24F3               	addwf	prodl,w,c
  8788  001024  6ED9               	movwf	fsr2l,c
  8789  001026  0E01               	movlw	high _RxBuffer
  8790  001028  20F4               	addwfc	prodh,w,c
  8791  00102A  6EDA               	movwf	fsr2h,c
  8792  00102C  50DF               	movf	indf2,w,c
  8793  00102E  E003               	bz	l12239
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;drv_mrf_miwi_24j40.c: 395: {
  8797                           ;drv_mrf_miwi_24j40.c: 396: BankIndex = i;
  8798  001030  C01C  F049         	movff	MiMAC_ReceivedPacket@i,_BankIndex
  8799                           
  8800                           ;drv_mrf_miwi_24j40.c: 397: break;
  8801  001034  D004               	goto	l12243
  8802  001036                     l12239:
  8803                           
  8804                           ; BSR set to: 0
  8805  001036  2A1C               	incf	MiMAC_ReceivedPacket@i,f,c
  8806                           
  8807                           ; BSR set to: 0
  8808  001038  0E01               	movlw	1
  8809  00103A  641C               	cpfsgt	MiMAC_ReceivedPacket@i,c
  8810  00103C  D7EF               	goto	l12235
  8811  00103E                     l12243:
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;drv_mrf_miwi_24j40.c: 398: }
  8815                           ;drv_mrf_miwi_24j40.c: 399: }
  8816                           ;drv_mrf_miwi_24j40.c: 402: if (BankIndex < 2)
  8817  00103E  0E02               	movlw	2
  8818  001040  6049               	cpfslt	_BankIndex,c
  8819  001042  0C00               	retlw	0
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;drv_mrf_miwi_24j40.c: 403: {
  8823                           ;drv_mrf_miwi_24j40.c: 404: uint8_t addrMode;
  8824                           ;drv_mrf_miwi_24j40.c: 406: bool bIntraPAN = 1;
  8825  001044  0E01               	movlw	1
  8826  001046  6E1D               	movwf	MiMAC_ReceivedPacket@bIntraPAN,c
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;drv_mrf_miwi_24j40.c: 408: if ((RxBuffer[BankIndex].Payload[0] & 0x40) == 0)
  8830  001048  5049               	movf	_BankIndex,w,c
  8831  00104A  0D45               	mullw	69
  8832  00104C  0E0D               	movlw	low (_RxBuffer+1)
  8833  00104E  24F3               	addwf	prodl,w,c
  8834  001050  6ED9               	movwf	fsr2l,c
  8835  001052  0E01               	movlw	high (_RxBuffer+1)
  8836  001054  20F4               	addwfc	prodh,w,c
  8837  001056  6EDA               	movwf	fsr2h,c
  8838  001058  0101               	movlb	1	; () banked
  8839  00105A  ACDF               	btfss	indf2,6,c
  8840                           
  8841                           ; BSR set to: 1
  8842                           ;drv_mrf_miwi_24j40.c: 409: {
  8843                           ;drv_mrf_miwi_24j40.c: 410: bIntraPAN = 0;
  8844  00105C  6A1D               	clrf	MiMAC_ReceivedPacket@bIntraPAN,c
  8845                           
  8846                           ; BSR set to: 1
  8847                           ;drv_mrf_miwi_24j40.c: 411: }
  8848                           ;drv_mrf_miwi_24j40.c: 413: MACRxPacket.flags.Val = 0;
  8849  00105E  6A33               	clrf	_MACRxPacket,c
  8850                           
  8851                           ;drv_mrf_miwi_24j40.c: 414: MACRxPacket.altSourceAddress = 0;
  8852  001060  6A3B               	clrf	_MACRxPacket+8,c
  8853                           
  8854                           ; BSR set to: 1
  8855                           ;drv_mrf_miwi_24j40.c: 417: addrMode = RxBuffer[BankIndex].Payload[1] & 0xCC;
  8856  001062  5049               	movf	_BankIndex,w,c
  8857  001064  0D45               	mullw	69
  8858  001066  0E0E               	movlw	low (_RxBuffer+2)
  8859  001068  24F3               	addwf	prodl,w,c
  8860  00106A  6ED9               	movwf	fsr2l,c
  8861  00106C  0E01               	movlw	high (_RxBuffer+2)
  8862  00106E  20F4               	addwfc	prodh,w,c
  8863  001070  6EDA               	movwf	fsr2h,c
  8864  001072  50DF               	movf	indf2,w,c
  8865  001074  0BCC               	andlw	204
  8866  001076  6E1B               	movwf	MiMAC_ReceivedPacket@addrMode,c
  8867                           
  8868                           ;drv_mrf_miwi_24j40.c: 418: switch (addrMode)
  8869  001078  D1DB               	goto	l12351
  8870  00107A                     l12253:
  8871                           
  8872                           ; BSR set to: 1
  8873                           ;drv_mrf_miwi_24j40.c: 422: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  8874  00107A  5049               	movf	_BankIndex,w,c
  8875  00107C  0D45               	mullw	69
  8876  00107E  0E12               	movlw	low (_RxBuffer+6)
  8877  001080  24F3               	addwf	prodl,w,c
  8878  001082  6ED9               	movwf	fsr2l,c
  8879  001084  0E01               	movlw	high (_RxBuffer+6)
  8880  001086  20F4               	addwfc	prodh,w,c
  8881  001088  6EDA               	movwf	fsr2h,c
  8882  00108A  28DE               	incf	postinc2,w,c
  8883  00108C  E10B               	bnz	l105
  8884                           
  8885                           ; BSR set to: 1
  8886  00108E  5049               	movf	_BankIndex,w,c
  8887  001090  0D45               	mullw	69
  8888  001092  0E13               	movlw	low (_RxBuffer+7)
  8889  001094  24F3               	addwf	prodl,w,c
  8890  001096  6ED9               	movwf	fsr2l,c
  8891  001098  0E01               	movlw	high (_RxBuffer+7)
  8892  00109A  20F4               	addwfc	prodh,w,c
  8893  00109C  6EDA               	movwf	fsr2h,c
  8894  00109E  28DE               	incf	postinc2,w,c
  8895  0010A0  E101               	bnz	l105
  8896                           
  8897                           ; BSR set to: 1
  8898                           ;drv_mrf_miwi_24j40.c: 423: {
  8899                           ;drv_mrf_miwi_24j40.c: 424: MACRxPacket.flags.bits.broadcast = 1;
  8900  0010A2  8433               	bsf	_MACRxPacket,2,c
  8901  0010A4                     l105:
  8902                           
  8903                           ; BSR set to: 1
  8904                           ;drv_mrf_miwi_24j40.c: 425: }
  8905                           ;drv_mrf_miwi_24j40.c: 426: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8906  0010A4  8E33               	bsf	_MACRxPacket,7,c
  8907                           
  8908                           ; BSR set to: 1
  8909                           ;drv_mrf_miwi_24j40.c: 429: if (bIntraPAN)
  8910  0010A6  501D               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  8911  0010A8  E02E               	bz	l12267
  8912                           
  8913                           ; BSR set to: 1
  8914                           ;drv_mrf_miwi_24j40.c: 431: {
  8915                           ;drv_mrf_miwi_24j40.c: 433: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8916  0010AA  5049               	movf	_BankIndex,w,c
  8917  0010AC  0D45               	mullw	69
  8918  0010AE  0E10               	movlw	low (_RxBuffer+4)
  8919  0010B0  24F3               	addwf	prodl,w,c
  8920  0010B2  6ED9               	movwf	fsr2l,c
  8921  0010B4  0E01               	movlw	high (_RxBuffer+4)
  8922  0010B6  20F4               	addwfc	prodh,w,c
  8923  0010B8  6EDA               	movwf	fsr2h,c
  8924  0010BA  50DF               	movf	indf2,w,c
  8925  0010BC  6E3C               	movwf	_MACRxPacket+9,c
  8926                           
  8927                           ;drv_mrf_miwi_24j40.c: 434: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8928  0010BE  5049               	movf	_BankIndex,w,c
  8929  0010C0  0D45               	mullw	69
  8930  0010C2  0E11               	movlw	low (_RxBuffer+5)
  8931  0010C4  24F3               	addwf	prodl,w,c
  8932  0010C6  6ED9               	movwf	fsr2l,c
  8933  0010C8  0E01               	movlw	high (_RxBuffer+5)
  8934  0010CA  20F4               	addwfc	prodh,w,c
  8935  0010CC  6EDA               	movwf	fsr2h,c
  8936  0010CE  50DF               	movf	indf2,w,c
  8937  0010D0  6E3D               	movwf	_MACRxPacket+10,c
  8938                           
  8939                           ; BSR set to: 1
  8940                           ;drv_mrf_miwi_24j40.c: 436: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
  8941  0010D2  5049               	movf	_BankIndex,w,c
  8942  0010D4  0D45               	mullw	69
  8943  0010D6  0E14               	movlw	low (_RxBuffer+8)
  8944  0010D8  24F3               	addwf	prodl,w,c
  8945  0010DA  6E34               	movwf	_MACRxPacket+1,c
  8946  0010DC  0E01               	movlw	high (_RxBuffer+8)
  8947  0010DE  20F4               	addwfc	prodh,w,c
  8948  0010E0  6E35               	movwf	_MACRxPacket+2,c
  8949                           
  8950                           ; BSR set to: 1
  8951                           ;drv_mrf_miwi_24j40.c: 438: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 19
      +                          ;
  8952  0010E2  5049               	movf	_BankIndex,w,c
  8953  0010E4  0D45               	mullw	69
  8954  0010E6  0E0C               	movlw	low _RxBuffer
  8955  0010E8  24F3               	addwf	prodl,w,c
  8956  0010EA  6ED9               	movwf	fsr2l,c
  8957  0010EC  0E01               	movlw	high _RxBuffer
  8958  0010EE  20F4               	addwfc	prodh,w,c
  8959  0010F0  6EDA               	movwf	fsr2h,c
  8960  0010F2  50DF               	movf	indf2,w,c
  8961  0010F4  0FED               	addlw	237
  8962  0010F6  6E38               	movwf	_MACRxPacket+5,c
  8963                           
  8964                           ;drv_mrf_miwi_24j40.c: 439: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[15]);
  8965  0010F8  5049               	movf	_BankIndex,w,c
  8966  0010FA  0D45               	mullw	69
  8967  0010FC  0E1C               	movlw	low (_RxBuffer+16)
  8968  0010FE  24F3               	addwf	prodl,w,c
  8969  001100  6E36               	movwf	_MACRxPacket+3,c
  8970  001102  0E01               	movlw	high (_RxBuffer+16)
  8971  001104  D134               	goto	L7
  8972  001106                     l12267:
  8973                           
  8974                           ; BSR set to: 1
  8975                           ;drv_mrf_miwi_24j40.c: 442: else
  8976                           ;drv_mrf_miwi_24j40.c: 443: {
  8977                           ;drv_mrf_miwi_24j40.c: 444: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
  8978  001106  5049               	movf	_BankIndex,w,c
  8979  001108  0D45               	mullw	69
  8980  00110A  0E14               	movlw	low (_RxBuffer+8)
  8981  00110C  24F3               	addwf	prodl,w,c
  8982  00110E  6ED9               	movwf	fsr2l,c
  8983  001110  0E01               	movlw	high (_RxBuffer+8)
  8984  001112  20F4               	addwfc	prodh,w,c
  8985  001114  6EDA               	movwf	fsr2h,c
  8986  001116  50DF               	movf	indf2,w,c
  8987  001118  6E3C               	movwf	_MACRxPacket+9,c
  8988                           
  8989                           ;drv_mrf_miwi_24j40.c: 445: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
  8990  00111A  5049               	movf	_BankIndex,w,c
  8991  00111C  0D45               	mullw	69
  8992  00111E  0E15               	movlw	low (_RxBuffer+9)
  8993  001120  24F3               	addwf	prodl,w,c
  8994  001122  6ED9               	movwf	fsr2l,c
  8995  001124  0E01               	movlw	high (_RxBuffer+9)
  8996  001126  20F4               	addwfc	prodh,w,c
  8997  001128  6EDA               	movwf	fsr2h,c
  8998  00112A  50DF               	movf	indf2,w,c
  8999  00112C  6E3D               	movwf	_MACRxPacket+10,c
  9000                           
  9001                           ; BSR set to: 1
  9002                           ;drv_mrf_miwi_24j40.c: 446: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
  9003  00112E  5049               	movf	_BankIndex,w,c
  9004  001130  0D45               	mullw	69
  9005  001132  0E16               	movlw	low (_RxBuffer+10)
  9006  001134  24F3               	addwf	prodl,w,c
  9007  001136  6E34               	movwf	_MACRxPacket+1,c
  9008  001138  0E01               	movlw	high (_RxBuffer+10)
  9009  00113A  20F4               	addwfc	prodh,w,c
  9010  00113C  6E35               	movwf	_MACRxPacket+2,c
  9011                           
  9012                           ; BSR set to: 1
  9013                           ;drv_mrf_miwi_24j40.c: 447: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 21
      +                          ;
  9014  00113E  5049               	movf	_BankIndex,w,c
  9015  001140  0D45               	mullw	69
  9016  001142  0E0C               	movlw	low _RxBuffer
  9017  001144  24F3               	addwf	prodl,w,c
  9018  001146  6ED9               	movwf	fsr2l,c
  9019  001148  0E01               	movlw	high _RxBuffer
  9020  00114A  20F4               	addwfc	prodh,w,c
  9021  00114C  6EDA               	movwf	fsr2h,c
  9022  00114E  50DF               	movf	indf2,w,c
  9023  001150  0FEB               	addlw	235
  9024  001152  6E38               	movwf	_MACRxPacket+5,c
  9025                           
  9026                           ;drv_mrf_miwi_24j40.c: 448: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[17]);
  9027  001154  5049               	movf	_BankIndex,w,c
  9028  001156  0D45               	mullw	69
  9029  001158  0E1E               	movlw	low (_RxBuffer+18)
  9030  00115A  24F3               	addwf	prodl,w,c
  9031  00115C  6E36               	movwf	_MACRxPacket+3,c
  9032  00115E  0E01               	movlw	high (_RxBuffer+18)
  9033  001160  D106               	goto	L7
  9034  001162                     l109:
  9035                           
  9036                           ; BSR set to: 1
  9037                           ;drv_mrf_miwi_24j40.c: 455: MACRxPacket.flags.bits.sourcePrsnt = 1;
  9038  001162  8E33               	bsf	_MACRxPacket,7,c
  9039                           
  9040                           ; BSR set to: 1
  9041                           ;drv_mrf_miwi_24j40.c: 457: if (bIntraPAN)
  9042  001164  501D               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  9043  001166  E02E               	bz	l12281
  9044                           
  9045                           ; BSR set to: 1
  9046                           ;drv_mrf_miwi_24j40.c: 459: {
  9047                           ;drv_mrf_miwi_24j40.c: 462: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  9048  001168  5049               	movf	_BankIndex,w,c
  9049  00116A  0D45               	mullw	69
  9050  00116C  0E10               	movlw	low (_RxBuffer+4)
  9051  00116E  24F3               	addwf	prodl,w,c
  9052  001170  6ED9               	movwf	fsr2l,c
  9053  001172  0E01               	movlw	high (_RxBuffer+4)
  9054  001174  20F4               	addwfc	prodh,w,c
  9055  001176  6EDA               	movwf	fsr2h,c
  9056  001178  50DF               	movf	indf2,w,c
  9057  00117A  6E3C               	movwf	_MACRxPacket+9,c
  9058                           
  9059                           ;drv_mrf_miwi_24j40.c: 463: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  9060  00117C  5049               	movf	_BankIndex,w,c
  9061  00117E  0D45               	mullw	69
  9062  001180  0E11               	movlw	low (_RxBuffer+5)
  9063  001182  24F3               	addwf	prodl,w,c
  9064  001184  6ED9               	movwf	fsr2l,c
  9065  001186  0E01               	movlw	high (_RxBuffer+5)
  9066  001188  20F4               	addwfc	prodh,w,c
  9067  00118A  6EDA               	movwf	fsr2h,c
  9068  00118C  50DF               	movf	indf2,w,c
  9069  00118E  6E3D               	movwf	_MACRxPacket+10,c
  9070                           
  9071                           ; BSR set to: 1
  9072                           ;drv_mrf_miwi_24j40.c: 465: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[13
      +                          ]);
  9073  001190  5049               	movf	_BankIndex,w,c
  9074  001192  0D45               	mullw	69
  9075  001194  0E1A               	movlw	low (_RxBuffer+14)
  9076  001196  24F3               	addwf	prodl,w,c
  9077  001198  6E34               	movwf	_MACRxPacket+1,c
  9078  00119A  0E01               	movlw	high (_RxBuffer+14)
  9079  00119C  20F4               	addwfc	prodh,w,c
  9080  00119E  6E35               	movwf	_MACRxPacket+2,c
  9081                           
  9082                           ; BSR set to: 1
  9083                           ;drv_mrf_miwi_24j40.c: 466: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 25
      +                          ;
  9084  0011A0  5049               	movf	_BankIndex,w,c
  9085  0011A2  0D45               	mullw	69
  9086  0011A4  0E0C               	movlw	low _RxBuffer
  9087  0011A6  24F3               	addwf	prodl,w,c
  9088  0011A8  6ED9               	movwf	fsr2l,c
  9089  0011AA  0E01               	movlw	high _RxBuffer
  9090  0011AC  20F4               	addwfc	prodh,w,c
  9091  0011AE  6EDA               	movwf	fsr2h,c
  9092  0011B0  50DF               	movf	indf2,w,c
  9093  0011B2  0FE7               	addlw	231
  9094  0011B4  6E38               	movwf	_MACRxPacket+5,c
  9095                           
  9096                           ;drv_mrf_miwi_24j40.c: 467: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[21]);
  9097  0011B6  5049               	movf	_BankIndex,w,c
  9098  0011B8  0D45               	mullw	69
  9099  0011BA  0E22               	movlw	low (_RxBuffer+22)
  9100  0011BC  24F3               	addwf	prodl,w,c
  9101  0011BE  6E36               	movwf	_MACRxPacket+3,c
  9102  0011C0  0E01               	movlw	high (_RxBuffer+22)
  9103  0011C2  D0D5               	goto	L7
  9104  0011C4                     l12281:
  9105                           
  9106                           ; BSR set to: 1
  9107                           ;drv_mrf_miwi_24j40.c: 470: else
  9108                           ;drv_mrf_miwi_24j40.c: 471: {
  9109                           ;drv_mrf_miwi_24j40.c: 472: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          3];
  9110  0011C4  5049               	movf	_BankIndex,w,c
  9111  0011C6  0D45               	mullw	69
  9112  0011C8  0E1A               	movlw	low (_RxBuffer+14)
  9113  0011CA  24F3               	addwf	prodl,w,c
  9114  0011CC  6ED9               	movwf	fsr2l,c
  9115  0011CE  0E01               	movlw	high (_RxBuffer+14)
  9116  0011D0  20F4               	addwfc	prodh,w,c
  9117  0011D2  6EDA               	movwf	fsr2h,c
  9118  0011D4  50DF               	movf	indf2,w,c
  9119  0011D6  6E3C               	movwf	_MACRxPacket+9,c
  9120                           
  9121                           ;drv_mrf_miwi_24j40.c: 473: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          4];
  9122  0011D8  5049               	movf	_BankIndex,w,c
  9123  0011DA  0D45               	mullw	69
  9124  0011DC  0E1B               	movlw	low (_RxBuffer+15)
  9125  0011DE  24F3               	addwf	prodl,w,c
  9126  0011E0  6ED9               	movwf	fsr2l,c
  9127  0011E2  0E01               	movlw	high (_RxBuffer+15)
  9128  0011E4  20F4               	addwfc	prodh,w,c
  9129  0011E6  6EDA               	movwf	fsr2h,c
  9130  0011E8  50DF               	movf	indf2,w,c
  9131  0011EA  6E3D               	movwf	_MACRxPacket+10,c
  9132                           
  9133                           ; BSR set to: 1
  9134                           ;drv_mrf_miwi_24j40.c: 474: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[15
      +                          ]);
  9135  0011EC  5049               	movf	_BankIndex,w,c
  9136  0011EE  0D45               	mullw	69
  9137  0011F0  0E1C               	movlw	low (_RxBuffer+16)
  9138  0011F2  24F3               	addwf	prodl,w,c
  9139  0011F4  6E34               	movwf	_MACRxPacket+1,c
  9140  0011F6  0E01               	movlw	high (_RxBuffer+16)
  9141  0011F8  20F4               	addwfc	prodh,w,c
  9142  0011FA  6E35               	movwf	_MACRxPacket+2,c
  9143                           
  9144                           ; BSR set to: 1
  9145                           ;drv_mrf_miwi_24j40.c: 475: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 27
      +                          ;
  9146  0011FC  5049               	movf	_BankIndex,w,c
  9147  0011FE  0D45               	mullw	69
  9148  001200  0E0C               	movlw	low _RxBuffer
  9149  001202  24F3               	addwf	prodl,w,c
  9150  001204  6ED9               	movwf	fsr2l,c
  9151  001206  0E01               	movlw	high _RxBuffer
  9152  001208  20F4               	addwfc	prodh,w,c
  9153  00120A  6EDA               	movwf	fsr2h,c
  9154  00120C  50DF               	movf	indf2,w,c
  9155  00120E  0FE5               	addlw	229
  9156  001210  6E38               	movwf	_MACRxPacket+5,c
  9157                           
  9158                           ;drv_mrf_miwi_24j40.c: 476: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[23]);
  9159  001212  5049               	movf	_BankIndex,w,c
  9160  001214  0D45               	mullw	69
  9161  001216  0E24               	movlw	low (_RxBuffer+24)
  9162  001218  24F3               	addwf	prodl,w,c
  9163  00121A  6E36               	movwf	_MACRxPacket+3,c
  9164  00121C  0E01               	movlw	high (_RxBuffer+24)
  9165  00121E  D0A7               	goto	L7
  9166  001220                     l112:
  9167                           
  9168                           ; BSR set to: 1
  9169                           ;drv_mrf_miwi_24j40.c: 482: {
  9170                           ;drv_mrf_miwi_24j40.c: 483: MACRxPacket.flags.bits.broadcast = 1;
  9171  001220  8433               	bsf	_MACRxPacket,2,c
  9172                           
  9173                           ;drv_mrf_miwi_24j40.c: 484: MACRxPacket.flags.bits.sourcePrsnt = 1;
  9174  001222  8E33               	bsf	_MACRxPacket,7,c
  9175                           
  9176                           ; BSR set to: 1
  9177                           ;drv_mrf_miwi_24j40.c: 485: MACRxPacket.altSourceAddress = 1;
  9178  001224  0E01               	movlw	1
  9179  001226  6E3B               	movwf	_MACRxPacket+8,c
  9180                           
  9181                           ; BSR set to: 1
  9182                           ;drv_mrf_miwi_24j40.c: 486: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  9183  001228  5049               	movf	_BankIndex,w,c
  9184  00122A  0D45               	mullw	69
  9185  00122C  0E10               	movlw	low (_RxBuffer+4)
  9186  00122E  24F3               	addwf	prodl,w,c
  9187  001230  6ED9               	movwf	fsr2l,c
  9188  001232  0E01               	movlw	high (_RxBuffer+4)
  9189  001234  20F4               	addwfc	prodh,w,c
  9190  001236  6EDA               	movwf	fsr2h,c
  9191  001238  50DF               	movf	indf2,w,c
  9192  00123A  6E3C               	movwf	_MACRxPacket+9,c
  9193                           
  9194                           ; BSR set to: 1
  9195                           ;drv_mrf_miwi_24j40.c: 487: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  9196  00123C  5049               	movf	_BankIndex,w,c
  9197  00123E  0D45               	mullw	69
  9198  001240  0E11               	movlw	low (_RxBuffer+5)
  9199  001242  24F3               	addwf	prodl,w,c
  9200  001244  6ED9               	movwf	fsr2l,c
  9201  001246  0E01               	movlw	high (_RxBuffer+5)
  9202  001248  20F4               	addwfc	prodh,w,c
  9203  00124A  6EDA               	movwf	fsr2h,c
  9204  00124C  50DF               	movf	indf2,w,c
  9205  00124E  6E3D               	movwf	_MACRxPacket+10,c
  9206                           
  9207                           ; BSR set to: 1
  9208                           ;drv_mrf_miwi_24j40.c: 488: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[5]
      +                          );
  9209  001250  5049               	movf	_BankIndex,w,c
  9210  001252  0D45               	mullw	69
  9211  001254  0E12               	movlw	low (_RxBuffer+6)
  9212  001256  24F3               	addwf	prodl,w,c
  9213  001258  6E34               	movwf	_MACRxPacket+1,c
  9214  00125A  0E01               	movlw	high (_RxBuffer+6)
  9215  00125C  20F4               	addwfc	prodh,w,c
  9216  00125E  6E35               	movwf	_MACRxPacket+2,c
  9217                           
  9218                           ; BSR set to: 1
  9219                           ;drv_mrf_miwi_24j40.c: 489: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 11
      +                          ;
  9220  001260  5049               	movf	_BankIndex,w,c
  9221  001262  0D45               	mullw	69
  9222  001264  0E0C               	movlw	low _RxBuffer
  9223  001266  24F3               	addwf	prodl,w,c
  9224  001268  6ED9               	movwf	fsr2l,c
  9225  00126A  0E01               	movlw	high _RxBuffer
  9226  00126C  20F4               	addwfc	prodh,w,c
  9227  00126E  6EDA               	movwf	fsr2h,c
  9228  001270  50DF               	movf	indf2,w,c
  9229  001272  0FF5               	addlw	245
  9230  001274  6E38               	movwf	_MACRxPacket+5,c
  9231                           
  9232                           ; BSR set to: 1
  9233                           ;drv_mrf_miwi_24j40.c: 490: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[7]);
  9234  001276  5049               	movf	_BankIndex,w,c
  9235  001278  0D45               	mullw	69
  9236  00127A  0E14               	movlw	low (_RxBuffer+8)
  9237  00127C  24F3               	addwf	prodl,w,c
  9238  00127E  6E36               	movwf	_MACRxPacket+3,c
  9239  001280  0E01               	movlw	high (_RxBuffer+8)
  9240  001282  D075               	goto	L7
  9241  001284                     l12299:
  9242                           
  9243                           ; BSR set to: 1
  9244                           ;drv_mrf_miwi_24j40.c: 495: {
  9245                           ;drv_mrf_miwi_24j40.c: 496: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  9246  001284  5049               	movf	_BankIndex,w,c
  9247  001286  0D45               	mullw	69
  9248  001288  0E12               	movlw	low (_RxBuffer+6)
  9249  00128A  24F3               	addwf	prodl,w,c
  9250  00128C  6ED9               	movwf	fsr2l,c
  9251  00128E  0E01               	movlw	high (_RxBuffer+6)
  9252  001290  20F4               	addwfc	prodh,w,c
  9253  001292  6EDA               	movwf	fsr2h,c
  9254  001294  28DE               	incf	postinc2,w,c
  9255  001296  E10B               	bnz	l114
  9256                           
  9257                           ; BSR set to: 1
  9258  001298  5049               	movf	_BankIndex,w,c
  9259  00129A  0D45               	mullw	69
  9260  00129C  0E13               	movlw	low (_RxBuffer+7)
  9261  00129E  24F3               	addwf	prodl,w,c
  9262  0012A0  6ED9               	movwf	fsr2l,c
  9263  0012A2  0E01               	movlw	high (_RxBuffer+7)
  9264  0012A4  20F4               	addwfc	prodh,w,c
  9265  0012A6  6EDA               	movwf	fsr2h,c
  9266  0012A8  28DE               	incf	postinc2,w,c
  9267  0012AA  E101               	bnz	l114
  9268                           
  9269                           ; BSR set to: 1
  9270                           ;drv_mrf_miwi_24j40.c: 497: {
  9271                           ;drv_mrf_miwi_24j40.c: 498: MACRxPacket.flags.bits.broadcast = 1;
  9272  0012AC  8433               	bsf	_MACRxPacket,2,c
  9273  0012AE                     l114:
  9274                           
  9275                           ; BSR set to: 1
  9276                           ;drv_mrf_miwi_24j40.c: 499: }
  9277                           ;drv_mrf_miwi_24j40.c: 500: MACRxPacket.flags.bits.sourcePrsnt = 1;
  9278  0012AE  8E33               	bsf	_MACRxPacket,7,c
  9279                           
  9280                           ; BSR set to: 1
  9281                           ;drv_mrf_miwi_24j40.c: 501: MACRxPacket.altSourceAddress = 1;
  9282  0012B0  0E01               	movlw	1
  9283  0012B2  6E3B               	movwf	_MACRxPacket+8,c
  9284                           
  9285                           ;drv_mrf_miwi_24j40.c: 503: if (bIntraPAN == 0)
  9286  0012B4  501D               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  9287  0012B6  E12E               	bnz	l12313
  9288                           
  9289                           ; BSR set to: 1
  9290                           ;drv_mrf_miwi_24j40.c: 504: {
  9291                           ;drv_mrf_miwi_24j40.c: 505: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
  9292  0012B8  5049               	movf	_BankIndex,w,c
  9293  0012BA  0D45               	mullw	69
  9294  0012BC  0E14               	movlw	low (_RxBuffer+8)
  9295  0012BE  24F3               	addwf	prodl,w,c
  9296  0012C0  6ED9               	movwf	fsr2l,c
  9297  0012C2  0E01               	movlw	high (_RxBuffer+8)
  9298  0012C4  20F4               	addwfc	prodh,w,c
  9299  0012C6  6EDA               	movwf	fsr2h,c
  9300  0012C8  50DF               	movf	indf2,w,c
  9301  0012CA  6E3C               	movwf	_MACRxPacket+9,c
  9302                           
  9303                           ;drv_mrf_miwi_24j40.c: 506: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
  9304  0012CC  5049               	movf	_BankIndex,w,c
  9305  0012CE  0D45               	mullw	69
  9306  0012D0  0E15               	movlw	low (_RxBuffer+9)
  9307  0012D2  24F3               	addwf	prodl,w,c
  9308  0012D4  6ED9               	movwf	fsr2l,c
  9309  0012D6  0E01               	movlw	high (_RxBuffer+9)
  9310  0012D8  20F4               	addwfc	prodh,w,c
  9311  0012DA  6EDA               	movwf	fsr2h,c
  9312  0012DC  50DF               	movf	indf2,w,c
  9313  0012DE  6E3D               	movwf	_MACRxPacket+10,c
  9314                           
  9315                           ; BSR set to: 1
  9316                           ;drv_mrf_miwi_24j40.c: 507: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
  9317  0012E0  5049               	movf	_BankIndex,w,c
  9318  0012E2  0D45               	mullw	69
  9319  0012E4  0E16               	movlw	low (_RxBuffer+10)
  9320  0012E6  24F3               	addwf	prodl,w,c
  9321  0012E8  6E34               	movwf	_MACRxPacket+1,c
  9322  0012EA  0E01               	movlw	high (_RxBuffer+10)
  9323  0012EC  20F4               	addwfc	prodh,w,c
  9324  0012EE  6E35               	movwf	_MACRxPacket+2,c
  9325                           
  9326                           ; BSR set to: 1
  9327                           ;drv_mrf_miwi_24j40.c: 508: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 15
      +                          ;
  9328  0012F0  5049               	movf	_BankIndex,w,c
  9329  0012F2  0D45               	mullw	69
  9330  0012F4  0E0C               	movlw	low _RxBuffer
  9331  0012F6  24F3               	addwf	prodl,w,c
  9332  0012F8  6ED9               	movwf	fsr2l,c
  9333  0012FA  0E01               	movlw	high _RxBuffer
  9334  0012FC  20F4               	addwfc	prodh,w,c
  9335  0012FE  6EDA               	movwf	fsr2h,c
  9336  001300  50DF               	movf	indf2,w,c
  9337  001302  0FF1               	addlw	241
  9338  001304  6E38               	movwf	_MACRxPacket+5,c
  9339                           
  9340                           ;drv_mrf_miwi_24j40.c: 509: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[11]);
  9341  001306  5049               	movf	_BankIndex,w,c
  9342  001308  0D45               	mullw	69
  9343  00130A  0E18               	movlw	low (_RxBuffer+12)
  9344  00130C  24F3               	addwf	prodl,w,c
  9345  00130E  6E36               	movwf	_MACRxPacket+3,c
  9346  001310  0E01               	movlw	high (_RxBuffer+12)
  9347  001312  D02D               	goto	L7
  9348  001314                     l12313:
  9349                           
  9350                           ; BSR set to: 1
  9351                           ;drv_mrf_miwi_24j40.c: 512: {
  9352                           ;drv_mrf_miwi_24j40.c: 513: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  9353  001314  5049               	movf	_BankIndex,w,c
  9354  001316  0D45               	mullw	69
  9355  001318  0E10               	movlw	low (_RxBuffer+4)
  9356  00131A  24F3               	addwf	prodl,w,c
  9357  00131C  6ED9               	movwf	fsr2l,c
  9358  00131E  0E01               	movlw	high (_RxBuffer+4)
  9359  001320  20F4               	addwfc	prodh,w,c
  9360  001322  6EDA               	movwf	fsr2h,c
  9361  001324  50DF               	movf	indf2,w,c
  9362  001326  6E3C               	movwf	_MACRxPacket+9,c
  9363                           
  9364                           ;drv_mrf_miwi_24j40.c: 514: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  9365  001328  5049               	movf	_BankIndex,w,c
  9366  00132A  0D45               	mullw	69
  9367  00132C  0E11               	movlw	low (_RxBuffer+5)
  9368  00132E  24F3               	addwf	prodl,w,c
  9369  001330  6ED9               	movwf	fsr2l,c
  9370  001332  0E01               	movlw	high (_RxBuffer+5)
  9371  001334  20F4               	addwfc	prodh,w,c
  9372  001336  6EDA               	movwf	fsr2h,c
  9373  001338  50DF               	movf	indf2,w,c
  9374  00133A  6E3D               	movwf	_MACRxPacket+10,c
  9375                           
  9376                           ; BSR set to: 1
  9377                           ;drv_mrf_miwi_24j40.c: 515: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
  9378  00133C  5049               	movf	_BankIndex,w,c
  9379  00133E  0D45               	mullw	69
  9380  001340  0E14               	movlw	low (_RxBuffer+8)
  9381  001342  24F3               	addwf	prodl,w,c
  9382  001344  6E34               	movwf	_MACRxPacket+1,c
  9383  001346  0E01               	movlw	high (_RxBuffer+8)
  9384  001348  20F4               	addwfc	prodh,w,c
  9385  00134A  6E35               	movwf	_MACRxPacket+2,c
  9386                           
  9387                           ; BSR set to: 1
  9388                           ;drv_mrf_miwi_24j40.c: 516: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 13
      +                          ;
  9389  00134C  5049               	movf	_BankIndex,w,c
  9390  00134E  0D45               	mullw	69
  9391  001350  0E0C               	movlw	low _RxBuffer
  9392  001352  24F3               	addwf	prodl,w,c
  9393  001354  6ED9               	movwf	fsr2l,c
  9394  001356  0E01               	movlw	high _RxBuffer
  9395  001358  20F4               	addwfc	prodh,w,c
  9396  00135A  6EDA               	movwf	fsr2h,c
  9397  00135C  50DF               	movf	indf2,w,c
  9398  00135E  0FF3               	addlw	243
  9399  001360  6E38               	movwf	_MACRxPacket+5,c
  9400                           
  9401                           ;drv_mrf_miwi_24j40.c: 517: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[9]);
  9402  001362  5049               	movf	_BankIndex,w,c
  9403  001364  0D45               	mullw	69
  9404  001366  0E16               	movlw	low (_RxBuffer+10)
  9405  001368  24F3               	addwf	prodl,w,c
  9406  00136A  6E36               	movwf	_MACRxPacket+3,c
  9407  00136C  0E01               	movlw	high (_RxBuffer+10)
  9408  00136E                     L7:
  9409  00136E  20F4               	addwfc	prodh,w,c
  9410  001370  6E37               	movwf	_MACRxPacket+4,c
  9411  001372  D070               	goto	l12353
  9412  001374                     l117:
  9413                           
  9414                           ; BSR set to: 1
  9415                           ;drv_mrf_miwi_24j40.c: 523: {
  9416                           ;drv_mrf_miwi_24j40.c: 524: MACRxPacket.flags.bits.sourcePrsnt = 1;
  9417  001374  8E33               	bsf	_MACRxPacket,7,c
  9418                           
  9419                           ; BSR set to: 1
  9420                           ;drv_mrf_miwi_24j40.c: 525: MACRxPacket.altSourceAddress = 1;
  9421  001376  0E01               	movlw	1
  9422  001378  6E3B               	movwf	_MACRxPacket+8,c
  9423                           
  9424                           ;drv_mrf_miwi_24j40.c: 527: if (bIntraPAN)
  9425  00137A  501D               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  9426  00137C  E01B               	bz	l12327
  9427                           
  9428                           ; BSR set to: 1
  9429                           ;drv_mrf_miwi_24j40.c: 529: {
  9430                           ;drv_mrf_miwi_24j40.c: 531: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  9431  00137E  5049               	movf	_BankIndex,w,c
  9432  001380  0D45               	mullw	69
  9433  001382  0E10               	movlw	low (_RxBuffer+4)
  9434  001384  24F3               	addwf	prodl,w,c
  9435  001386  6ED9               	movwf	fsr2l,c
  9436  001388  0E01               	movlw	high (_RxBuffer+4)
  9437  00138A  20F4               	addwfc	prodh,w,c
  9438  00138C  6EDA               	movwf	fsr2h,c
  9439  00138E  50DF               	movf	indf2,w,c
  9440  001390  6E3C               	movwf	_MACRxPacket+9,c
  9441                           
  9442                           ;drv_mrf_miwi_24j40.c: 532: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  9443  001392  5049               	movf	_BankIndex,w,c
  9444  001394  0D45               	mullw	69
  9445  001396  0E11               	movlw	low (_RxBuffer+5)
  9446  001398  24F3               	addwf	prodl,w,c
  9447  00139A  6ED9               	movwf	fsr2l,c
  9448  00139C  0E01               	movlw	high (_RxBuffer+5)
  9449  00139E  20F4               	addwfc	prodh,w,c
  9450  0013A0  6EDA               	movwf	fsr2h,c
  9451  0013A2  50DF               	movf	indf2,w,c
  9452  0013A4  6E3D               	movwf	_MACRxPacket+10,c
  9453                           
  9454                           ; BSR set to: 1
  9455                           ;drv_mrf_miwi_24j40.c: 534: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[12
      +                          ]);
  9456  0013A6  5049               	movf	_BankIndex,w,c
  9457  0013A8  0D45               	mullw	69
  9458  0013AA  0E19               	movlw	low (_RxBuffer+13)
  9459  0013AC  24F3               	addwf	prodl,w,c
  9460  0013AE  6E34               	movwf	_MACRxPacket+1,c
  9461  0013B0  0E01               	movlw	high (_RxBuffer+13)
  9462  0013B2  D695               	goto	L8
  9463  0013B4                     l12327:
  9464                           
  9465                           ; BSR set to: 1
  9466                           ;drv_mrf_miwi_24j40.c: 540: else
  9467                           ;drv_mrf_miwi_24j40.c: 541: {
  9468                           ;drv_mrf_miwi_24j40.c: 542: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          2];
  9469  0013B4  5049               	movf	_BankIndex,w,c
  9470  0013B6  0D45               	mullw	69
  9471  0013B8  0E19               	movlw	low (_RxBuffer+13)
  9472  0013BA  24F3               	addwf	prodl,w,c
  9473  0013BC  6ED9               	movwf	fsr2l,c
  9474  0013BE  0E01               	movlw	high (_RxBuffer+13)
  9475  0013C0  20F4               	addwfc	prodh,w,c
  9476  0013C2  6EDA               	movwf	fsr2h,c
  9477  0013C4  50DF               	movf	indf2,w,c
  9478  0013C6  6E3C               	movwf	_MACRxPacket+9,c
  9479                           
  9480                           ;drv_mrf_miwi_24j40.c: 543: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          3];
  9481  0013C8  5049               	movf	_BankIndex,w,c
  9482  0013CA  0D45               	mullw	69
  9483  0013CC  0E1A               	movlw	low (_RxBuffer+14)
  9484  0013CE  24F3               	addwf	prodl,w,c
  9485  0013D0  6ED9               	movwf	fsr2l,c
  9486  0013D2  0E01               	movlw	high (_RxBuffer+14)
  9487  0013D4  20F4               	addwfc	prodh,w,c
  9488  0013D6  6EDA               	movwf	fsr2h,c
  9489  0013D8  50DF               	movf	indf2,w,c
  9490  0013DA  6E3D               	movwf	_MACRxPacket+10,c
  9491                           
  9492                           ; BSR set to: 1
  9493                           ;drv_mrf_miwi_24j40.c: 544: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[14
      +                          ]);
  9494  0013DC  5049               	movf	_BankIndex,w,c
  9495  0013DE  0D45               	mullw	69
  9496  0013E0  0E1B               	movlw	low (_RxBuffer+15)
  9497  0013E2  24F3               	addwf	prodl,w,c
  9498  0013E4  6E34               	movwf	_MACRxPacket+1,c
  9499  0013E6  0E01               	movlw	high (_RxBuffer+15)
  9500  0013E8  D6A8               	goto	L9
  9501  0013EA                     l12333:
  9502                           
  9503                           ; BSR set to: 1
  9504                           ;drv_mrf_miwi_24j40.c: 554: {
  9505                           ;drv_mrf_miwi_24j40.c: 555: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  9506  0013EA  5049               	movf	_BankIndex,w,c
  9507  0013EC  0D45               	mullw	69
  9508  0013EE  0E12               	movlw	low (_RxBuffer+6)
  9509  0013F0  24F3               	addwf	prodl,w,c
  9510  0013F2  6ED9               	movwf	fsr2l,c
  9511  0013F4  0E01               	movlw	high (_RxBuffer+6)
  9512  0013F6  20F4               	addwfc	prodh,w,c
  9513  0013F8  6EDA               	movwf	fsr2h,c
  9514  0013FA  28DE               	incf	postinc2,w,c
  9515  0013FC  E10B               	bnz	l12339
  9516                           
  9517                           ; BSR set to: 1
  9518  0013FE  5049               	movf	_BankIndex,w,c
  9519  001400  0D45               	mullw	69
  9520  001402  0E13               	movlw	low (_RxBuffer+7)
  9521  001404  24F3               	addwf	prodl,w,c
  9522  001406  6ED9               	movwf	fsr2l,c
  9523  001408  0E01               	movlw	high (_RxBuffer+7)
  9524  00140A  20F4               	addwfc	prodh,w,c
  9525  00140C  6EDA               	movwf	fsr2h,c
  9526  00140E  28DE               	incf	postinc2,w,c
  9527  001410  E101               	bnz	l12339
  9528                           
  9529                           ; BSR set to: 1
  9530                           ;drv_mrf_miwi_24j40.c: 556: {
  9531                           ;drv_mrf_miwi_24j40.c: 557: MACRxPacket.flags.bits.broadcast = 1;
  9532  001412  8433               	bsf	_MACRxPacket,2,c
  9533  001414                     l12339:
  9534                           
  9535                           ; BSR set to: 1
  9536                           ;drv_mrf_miwi_24j40.c: 558: }
  9537                           ;drv_mrf_miwi_24j40.c: 559: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 10
      +                          ;
  9538  001414  5049               	movf	_BankIndex,w,c
  9539  001416  0D45               	mullw	69
  9540  001418  0E0C               	movlw	low _RxBuffer
  9541  00141A  24F3               	addwf	prodl,w,c
  9542  00141C  6ED9               	movwf	fsr2l,c
  9543  00141E  0E01               	movlw	high _RxBuffer
  9544  001420  20F4               	addwfc	prodh,w,c
  9545  001422  6EDA               	movwf	fsr2h,c
  9546  001424  50DF               	movf	indf2,w,c
  9547  001426  0FF6               	addlw	246
  9548  001428  D725               	goto	L10
  9549  00142A                     l12343:
  9550                           
  9551                           ; BSR set to: 1
  9552                           ;drv_mrf_miwi_24j40.c: 567: MiMAC_DiscardPacket();
  9553  00142A  EC10  F01D         	call	_MiMAC_DiscardPacket	;wreg free
  9554                           
  9555                           ;drv_mrf_miwi_24j40.c: 568: return 0;
  9556  00142E  0C00               	retlw	0
  9557  001430                     l12351:
  9558                           
  9559                           ; BSR set to: 1
  9560  001430  501B               	movf	MiMAC_ReceivedPacket@addrMode,w,c
  9561                           
  9562                           ; Switch size 1, requested type "speed"
  9563                           ; Number of cases is 6, Range of values is 8 to 204
  9564                           ; switch strategies available:
  9565                           ; Name         Instructions Cycles
  9566                           ; simple_byte           19    10 (average)
  9567                           ;	Chosen strategy is simple_byte
  9568  001432  0A08               	xorlw	8	; case 8
  9569  001434  E0DA               	bz	l12333
  9570  001436  0A88               	xorlw	136	; case 128
  9571  001438  E101 D6F2          	bz	l112
  9572  00143C  0A08               	xorlw	8	; case 136
  9573  00143E  E101 D721          	bz	l12299
  9574  001442  0A04               	xorlw	4	; case 140
  9575  001444  E097               	bz	l117
  9576  001446  0A44               	xorlw	68	; case 200
  9577  001448  E101 D617          	bz	l12253
  9578  00144C  0A04               	xorlw	4	; case 204
  9579  00144E  E101 D688          	bz	l109
  9580  001452  D7EB               	goto	l12343
  9581  001454                     l12353:
  9582                           
  9583                           ; BSR set to: 1
  9584                           ;drv_mrf_miwi_24j40.c: 622: if (RxBuffer[BankIndex].Payload[0] & 0x08)
  9585  001454  5049               	movf	_BankIndex,w,c
  9586  001456  0D45               	mullw	69
  9587  001458  0E0D               	movlw	low (_RxBuffer+1)
  9588  00145A  24F3               	addwf	prodl,w,c
  9589  00145C  6ED9               	movwf	fsr2l,c
  9590  00145E  0E01               	movlw	high (_RxBuffer+1)
  9591  001460  20F4               	addwfc	prodh,w,c
  9592  001462  6EDA               	movwf	fsr2h,c
  9593  001464  A6DF               	btfss	indf2,3,c
  9594  001466  D00C               	goto	l12375
  9595  001468  D7E0               	goto	l12343
  9596  00146A                     l12361:
  9597                           
  9598                           ; BSR set to: 1
  9599                           ;drv_mrf_miwi_24j40.c: 635: MACRxPacket.flags.bits.packetType = 0x00;
  9600  00146A  0EFC               	movlw	-4
  9601  00146C  1633               	andwf	_MACRxPacket,f,c
  9602                           
  9603                           ;drv_mrf_miwi_24j40.c: 636: break;
  9604  00146E  D01D               	goto	l12377
  9605  001470                     l12363:
  9606                           
  9607                           ; BSR set to: 1
  9608                           ;drv_mrf_miwi_24j40.c: 638: MACRxPacket.flags.bits.packetType = 0x01;
  9609  001470  5033               	movf	_MACRxPacket,w,c
  9610  001472  0BFC               	andlw	-4
  9611  001474  0901               	iorlw	1
  9612  001476  6E33               	movwf	_MACRxPacket,c
  9613                           
  9614                           ;drv_mrf_miwi_24j40.c: 639: break;
  9615  001478  D018               	goto	l12377
  9616  00147A                     l12365:
  9617                           
  9618                           ; BSR set to: 1
  9619                           ;drv_mrf_miwi_24j40.c: 642: MACRxPacket.flags.bits.packetType = 0x03;
  9620  00147A  0E03               	movlw	3
  9621  00147C  1233               	iorwf	_MACRxPacket,f,c
  9622                           
  9623                           ;drv_mrf_miwi_24j40.c: 643: break;
  9624  00147E  D015               	goto	l12377
  9625  001480                     l12375:
  9626                           
  9627                           ; BSR set to: 1
  9628  001480  5049               	movf	_BankIndex,w,c
  9629  001482  0D45               	mullw	69
  9630  001484  0E0D               	movlw	low (_RxBuffer+1)
  9631  001486  24F3               	addwf	prodl,w,c
  9632  001488  6ED9               	movwf	fsr2l,c
  9633  00148A  0E01               	movlw	high (_RxBuffer+1)
  9634  00148C  20F4               	addwfc	prodh,w,c
  9635  00148E  6EDA               	movwf	fsr2h,c
  9636  001490  50DF               	movf	indf2,w,c
  9637  001492  0B07               	andlw	7
  9638  001494  6E16               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  9639  001496  6A17               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  9640                           
  9641                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9642                           ; Switch size 1, requested type "speed"
  9643                           ; Number of cases is 1, Range of values is 0 to 0
  9644                           ; switch strategies available:
  9645                           ; Name         Instructions Cycles
  9646                           ; simple_byte            4     3 (average)
  9647                           ;	Chosen strategy is simple_byte
  9648  001498  5017               	movf	??_MiMAC_ReceivedPacket+1,w,c
  9649  00149A  E1C7               	bnz	l12343
  9650                           
  9651                           ; BSR set to: 1
  9652                           ; Switch size 1, requested type "speed"
  9653                           ; Number of cases is 3, Range of values is 0 to 3
  9654                           ; switch strategies available:
  9655                           ; Name         Instructions Cycles
  9656                           ; simple_byte           10     6 (average)
  9657                           ;	Chosen strategy is simple_byte
  9658  00149C  5016               	movf	??_MiMAC_ReceivedPacket,w,c
  9659  00149E  E0ED               	bz	l12365
  9660  0014A0  0A01               	xorlw	1	; case 1
  9661  0014A2  E0E3               	bz	l12361
  9662  0014A4  0A02               	xorlw	2	; case 3
  9663  0014A6  E0E4               	bz	l12363
  9664  0014A8  D7C0               	goto	l12343
  9665  0014AA                     l12377:
  9666                           
  9667                           ; BSR set to: 1
  9668                           ;drv_mrf_miwi_24j40.c: 649: MACRxPacket.LQIValue = RxBuffer[BankIndex].Payload[RxBuffer[
      +                          BankIndex].PayloadLen - 2];
  9669  0014AA  5049               	movf	_BankIndex,w,c
  9670  0014AC  0D45               	mullw	69
  9671  0014AE  0E0C               	movlw	low _RxBuffer
  9672  0014B0  24F3               	addwf	prodl,w,c
  9673  0014B2  6ED9               	movwf	fsr2l,c
  9674  0014B4  0E01               	movlw	high _RxBuffer
  9675  0014B6  20F4               	addwfc	prodh,w,c
  9676  0014B8  6EDA               	movwf	fsr2h,c
  9677  0014BA  50DF               	movf	indf2,w,c
  9678  0014BC  6E16               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  9679  0014BE  5049               	movf	_BankIndex,w,c
  9680  0014C0  0D45               	mullw	69
  9681  0014C2  6817               	setf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  9682  0014C4  6818               	setf	(??_MiMAC_ReceivedPacket+2)& (0+255),c
  9683  0014C6  0E0C               	movlw	low _RxBuffer
  9684  0014C8  6E19               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),c
  9685  0014CA  0E01               	movlw	high _RxBuffer
  9686  0014CC  6E1A               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),c
  9687  0014CE  5017               	movf	??_MiMAC_ReceivedPacket+1,w,c
  9688  0014D0  2619               	addwf	??_MiMAC_ReceivedPacket+3,f,c
  9689  0014D2  5018               	movf	??_MiMAC_ReceivedPacket+2,w,c
  9690  0014D4  221A               	addwfc	??_MiMAC_ReceivedPacket+4,f,c
  9691  0014D6  50F3               	movf	prodl,w,c
  9692  0014D8  2619               	addwf	??_MiMAC_ReceivedPacket+3,f,c
  9693  0014DA  50F4               	movf	prodh,w,c
  9694  0014DC  221A               	addwfc	??_MiMAC_ReceivedPacket+4,f,c
  9695  0014DE  5016               	movf	??_MiMAC_ReceivedPacket,w,c
  9696  0014E0  2419               	addwf	??_MiMAC_ReceivedPacket+3,w,c
  9697  0014E2  6ED9               	movwf	fsr2l,c
  9698  0014E4  0E00               	movlw	0
  9699  0014E6  201A               	addwfc	??_MiMAC_ReceivedPacket+4,w,c
  9700  0014E8  6EDA               	movwf	fsr2h,c
  9701  0014EA  50DF               	movf	indf2,w,c
  9702  0014EC  6E3A               	movwf	_MACRxPacket+7,c
  9703                           
  9704                           ;drv_mrf_miwi_24j40.c: 650: MACRxPacket.RSSIValue = RxBuffer[BankIndex].Payload[RxBuffer
      +                          [BankIndex].PayloadLen - 1];
  9705  0014EE  5049               	movf	_BankIndex,w,c
  9706  0014F0  0D45               	mullw	69
  9707  0014F2  0E0C               	movlw	low _RxBuffer
  9708  0014F4  24F3               	addwf	prodl,w,c
  9709  0014F6  6ED9               	movwf	fsr2l,c
  9710  0014F8  0E01               	movlw	high _RxBuffer
  9711  0014FA  20F4               	addwfc	prodh,w,c
  9712  0014FC  6EDA               	movwf	fsr2h,c
  9713  0014FE  50DF               	movf	indf2,w,c
  9714  001500  6E16               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  9715  001502  5049               	movf	_BankIndex,w,c
  9716  001504  0D45               	mullw	69
  9717  001506  0E0C               	movlw	low _RxBuffer
  9718  001508  6E17               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  9719  00150A  0E01               	movlw	high _RxBuffer
  9720  00150C  6E18               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),c
  9721  00150E  50F3               	movf	prodl,w,c
  9722  001510  2617               	addwf	??_MiMAC_ReceivedPacket+1,f,c
  9723  001512  50F4               	movf	prodh,w,c
  9724  001514  2218               	addwfc	??_MiMAC_ReceivedPacket+2,f,c
  9725  001516  5016               	movf	??_MiMAC_ReceivedPacket,w,c
  9726  001518  2417               	addwf	??_MiMAC_ReceivedPacket+1,w,c
  9727  00151A  6ED9               	movwf	fsr2l,c
  9728  00151C  0E00               	movlw	0
  9729  00151E  2018               	addwfc	??_MiMAC_ReceivedPacket+2,w,c
  9730  001520  6EDA               	movwf	fsr2h,c
  9731  001522  50DF               	movf	indf2,w,c
  9732  001524  6E39               	movwf	_MACRxPacket+6,c
  9733                           
  9734                           ; BSR set to: 1
  9735                           ;drv_mrf_miwi_24j40.c: 653: return 1;
  9736  001526  0C01               	retlw	1	;funcret
  9737  001528                     __end_of_MiMAC_ReceivedPacket:
  9738                           	opt stack 0
  9739                           tblptru	equ	0xFF8
  9740                           tblptrh	equ	0xFF7
  9741                           tblptrl	equ	0xFF6
  9742                           tablat	equ	0xFF5
  9743                           prodh	equ	0xFF4
  9744                           prodl	equ	0xFF3
  9745                           intcon	equ	0xFF2
  9746                           intcon2	equ	0xFF1
  9747                           postinc0	equ	0xFEE
  9748                           wreg	equ	0xFE8
  9749                           indf1	equ	0xFE7
  9750                           postinc1	equ	0xFE6
  9751                           postdec1	equ	0xFE5
  9752                           fsr1h	equ	0xFE2
  9753                           fsr1l	equ	0xFE1
  9754                           indf2	equ	0xFDF
  9755                           postinc2	equ	0xFDE
  9756                           postdec2	equ	0xFDD
  9757                           fsr2h	equ	0xFDA
  9758                           fsr2l	equ	0xFD9
  9759                           status	equ	0xFD8
  9760                           
  9761 ;; *************** function _MiApp_BroadcastConnectionTable *****************
  9762 ;; Defined at:
  9763 ;;		line 1902 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9764 ;; Parameters:    Size  Location     Type
  9765 ;;		None
  9766 ;; Auto vars:     Size  Location     Type
  9767 ;;  j               1   54[BANK0 ] unsigned char 
  9768 ;;  i               1   53[BANK0 ] unsigned char 
  9769 ;;  k               1   52[BANK0 ] unsigned char 
  9770 ;;  broadcast_co    1   51[BANK0 ] unsigned char 
  9771 ;;  count           1   50[BANK0 ] unsigned char 
  9772 ;; Return value:  Size  Location     Type
  9773 ;;		None               void
  9774 ;; Registers used:
  9775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9776 ;; Tracked objects:
  9777 ;;		On entry : F/0
  9778 ;;		On exit  : F/0
  9779 ;;		Unchanged: 0/0
  9780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9782 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9783 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9784 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9785 ;;Total ram usage:       12 bytes
  9786 ;; Hardware stack levels used:    1
  9787 ;; Hardware stack levels required when called:    9
  9788 ;; This function calls:
  9789 ;;		_SendPacket
  9790 ;;		___awdiv
  9791 ;;		___awmod
  9792 ;; This function is called by:
  9793 ;;		_P2PTasks
  9794 ;; This function uses a non-reentrant model
  9795 ;;
  9796                           
  9797                           	psect	text33
  9798  001D2A                     __ptext33:
  9799                           	opt stack 0
  9800  001D2A                     _MiApp_BroadcastConnectionTable:
  9801                           	opt stack 16
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;miwi_p2p.c: 1909: if ((conn_size * 4 ) + 4 < 40)
  9805                           
  9806                           ; BSR set to: 0
  9807                           
  9808                           ;incstack = 0
  9809  001D2A  5047               	movf	_conn_size,w,c
  9810  001D2C  0D04               	mullw	4
  9811  001D2E  0E04               	movlw	4
  9812  001D30  26F3               	addwf	prodl,f,c
  9813  001D32  0E00               	movlw	0
  9814  001D34  22F4               	addwfc	prodh,f,c
  9815  001D36  BEF4               	btfsc	prodh,7,c
  9816  001D38  D005               	goto	l12519
  9817  001D3A  50F4               	movf	prodh,w,c
  9818  001D3C  E106               	bnz	l12521
  9819  001D3E  0E28               	movlw	40
  9820  001D40  5CF3               	subwf	prodl,w,c
  9821  001D42  E203               	bc	l12521
  9822  001D44                     l12519:
  9823                           
  9824                           ; BSR set to: 0
  9825                           ;miwi_p2p.c: 1910: {
  9826                           ;miwi_p2p.c: 1911: broadcast_count = 1;
  9827  001D44  0E01               	movlw	1
  9828  001D46  6F93               	movwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),b
  9829                           
  9830                           ;miwi_p2p.c: 1912: }
  9831  001D48  D027               	goto	l12527
  9832  001D4A                     l12521:
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;miwi_p2p.c: 1913: else
  9836                           ;miwi_p2p.c: 1914: {
  9837                           ;miwi_p2p.c: 1915: broadcast_count = ((conn_size * 4) + 4 )/ 40;
  9838  001D4A  5047               	movf	_conn_size,w,c
  9839  001D4C  0D04               	mullw	4
  9840  001D4E  0E04               	movlw	4
  9841  001D50  24F3               	addwf	prodl,w,c
  9842  001D52  6E16               	movwf	___awdiv@dividend,c
  9843  001D54  0E00               	movlw	0
  9844  001D56  20F4               	addwfc	prodh,w,c
  9845  001D58  6E17               	movwf	___awdiv@dividend+1,c
  9846  001D5A  6A19               	clrf	___awdiv@divisor+1,c
  9847  001D5C  0E28               	movlw	40
  9848  001D5E  6E18               	movwf	___awdiv@divisor,c
  9849  001D60  ECCA  F017         	call	___awdiv	;wreg free
  9850  001D64  5016               	movf	?___awdiv,w,c
  9851  001D66  6F93               	movwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),b
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;miwi_p2p.c: 1916: if ((conn_size *4) + 4 % 40 != 0)
  9855  001D68  5047               	movf	_conn_size,w,c
  9856  001D6A  0D04               	mullw	4
  9857  001D6C  0E04               	movlw	4
  9858  001D6E  26F3               	addwf	prodl,f,c
  9859  001D70  0E00               	movlw	0
  9860  001D72  22F4               	addwfc	prodh,f,c
  9861  001D74  50F3               	movf	prodl,w,c
  9862  001D76  10F4               	iorwf	prodh,w,c
  9863  001D78  E00F               	bz	l12527
  9864                           
  9865                           ; BSR set to: 0
  9866                           ;miwi_p2p.c: 1917: {
  9867                           ;miwi_p2p.c: 1918: broadcast_count = broadcast_count + ((conn_size *4) + 4 )% 40;
  9868  001D7A  5047               	movf	_conn_size,w,c
  9869  001D7C  0D04               	mullw	4
  9870  001D7E  0E04               	movlw	4
  9871  001D80  24F3               	addwf	prodl,w,c
  9872  001D82  6E16               	movwf	___awmod@dividend,c
  9873  001D84  0E00               	movlw	0
  9874  001D86  20F4               	addwfc	prodh,w,c
  9875  001D88  6E17               	movwf	___awmod@dividend+1,c
  9876  001D8A  6A19               	clrf	___awmod@divisor+1,c
  9877  001D8C  0E28               	movlw	40
  9878  001D8E  6E18               	movwf	___awmod@divisor,c
  9879  001D90  ECB2  F018         	call	___awmod	;wreg free
  9880  001D94  5016               	movf	?___awmod,w,c
  9881  001D96  2793               	addwf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),f,b
  9882  001D98                     l12527:
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;miwi_p2p.c: 1919: }
  9886                           ;miwi_p2p.c: 1921: }
  9887                           ;miwi_p2p.c: 1923: for (i = 0 ; i < broadcast_count ; i++)
  9888  001D98  6B95               	clrf	MiApp_BroadcastConnectionTable@i& (0+255),b
  9889  001D9A  D0CD               	goto	l12597
  9890  001D9C                     l567:
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;miwi_p2p.c: 1924: {
  9894                           ;miwi_p2p.c: 1925: {TxData = 0;};
  9895  001D9C  6BE2               	clrf	_TxData& (0+255),b
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;miwi_p2p.c: 1926: TxBuffer[TxData++] = 0x77;
  9899  001D9E  0E96               	movlw	low _TxBuffer
  9900  001DA0  25E2               	addwf	_TxData& (0+255),w,b
  9901  001DA2  6ED9               	movwf	fsr2l,c
  9902  001DA4  6ADA               	clrf	fsr2h,c
  9903  001DA6  0E01               	movlw	high _TxBuffer
  9904  001DA8  22DA               	addwfc	fsr2h,f,c
  9905  001DAA  0E77               	movlw	119
  9906  001DAC  6EDF               	movwf	indf2,c
  9907                           
  9908                           ; BSR set to: 0
  9909  001DAE  2BE2               	incf	_TxData& (0+255),f,b
  9910                           
  9911                           ; BSR set to: 0
  9912                           ;miwi_p2p.c: 1927: TxBuffer[TxData++] = conn_size;
  9913  001DB0  0E96               	movlw	low _TxBuffer
  9914  001DB2  25E2               	addwf	_TxData& (0+255),w,b
  9915  001DB4  6ED9               	movwf	fsr2l,c
  9916  001DB6  6ADA               	clrf	fsr2h,c
  9917  001DB8  0E01               	movlw	high _TxBuffer
  9918  001DBA  22DA               	addwfc	fsr2h,f,c
  9919  001DBC  C047  FFDF         	movff	_conn_size,indf2
  9920  001DC0  2BE2               	incf	_TxData& (0+255),f,b
  9921                           
  9922                           ; BSR set to: 0
  9923                           ;miwi_p2p.c: 1928: TxBuffer[TxData++] = ((40-4)/4)*i;
  9924  001DC2  5195               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
  9925  001DC4  0D09               	mullw	9
  9926  001DC6  0E96               	movlw	low _TxBuffer
  9927  001DC8  25E2               	addwf	_TxData& (0+255),w,b
  9928  001DCA  6ED9               	movwf	fsr2l,c
  9929  001DCC  6ADA               	clrf	fsr2h,c
  9930  001DCE  0E01               	movlw	high _TxBuffer
  9931  001DD0  22DA               	addwfc	fsr2h,f,c
  9932  001DD2  CFF3 FFDF          	movff	prodl,indf2
  9933                           
  9934                           ; BSR set to: 0
  9935  001DD6  2BE2               	incf	_TxData& (0+255),f,b
  9936                           
  9937                           ;miwi_p2p.c: 1929: TxBuffer[TxData++] = ((40-4)/4)*(i+1);
  9938  001DD8  2995               	incf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
  9939  001DDA  0D09               	mullw	9
  9940  001DDC  0E96               	movlw	low _TxBuffer
  9941  001DDE  25E2               	addwf	_TxData& (0+255),w,b
  9942  001DE0  6ED9               	movwf	fsr2l,c
  9943  001DE2  6ADA               	clrf	fsr2h,c
  9944  001DE4  0E01               	movlw	high _TxBuffer
  9945  001DE6  22DA               	addwfc	fsr2h,f,c
  9946  001DE8  CFF3 FFDF          	movff	prodl,indf2
  9947                           
  9948                           ; BSR set to: 0
  9949  001DEC  2BE2               	incf	_TxData& (0+255),f,b
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;miwi_p2p.c: 1930: count = 4;
  9953  001DEE  0E04               	movlw	4
  9954  001DF0  6F92               	movwf	MiApp_BroadcastConnectionTable@count& (0+255),b
  9955                           
  9956                           ; BSR set to: 0
  9957                           ;miwi_p2p.c: 1931: for (j= ((40-4)/4)*i ;j<((40-4)/4)*(i+1);j++)
  9958  001DF2  5195               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
  9959  001DF4  0D09               	mullw	9
  9960  001DF6  CFF3 F096          	movff	prodl,MiApp_BroadcastConnectionTable@j
  9961  001DFA  D065               	goto	l12579
  9962  001DFC                     l12545:
  9963                           
  9964                           ; BSR set to: 0
  9965                           ;miwi_p2p.c: 1932: {
  9966                           ;miwi_p2p.c: 1933: if (j < conn_size)
  9967  001DFC  5047               	movf	_conn_size,w,c
  9968  001DFE  5D96               	subwf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
  9969  001E00  E261               	bc	l12577
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;miwi_p2p.c: 1934: {
  9973                           ;miwi_p2p.c: 1935: if (ConnectionTable[j].status.bits.isValid)
  9974  001E02  5196               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
  9975  001E04  0D0E               	mullw	14
  9976  001E06  0E84               	movlw	low (_ConnectionTable+12)
  9977  001E08  24F3               	addwf	prodl,w,c
  9978  001E0A  6ED9               	movwf	fsr2l,c
  9979  001E0C  0E02               	movlw	high (_ConnectionTable+12)
  9980  001E0E  20F4               	addwfc	prodh,w,c
  9981  001E10  6EDA               	movwf	fsr2h,c
  9982  001E12  AEDF               	btfss	indf2,7,c
  9983  001E14  D03D               	goto	l12563
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;miwi_p2p.c: 1936: {
  9987                           ;miwi_p2p.c: 1938: TxBuffer[TxData++] = ConnectionTable[j].Address[0];
  9988  001E16  5196               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
  9989  001E18  0D0E               	mullw	14
  9990  001E1A  0E7C               	movlw	low (_ConnectionTable+4)
  9991  001E1C  24F3               	addwf	prodl,w,c
  9992  001E1E  6ED9               	movwf	fsr2l,c
  9993  001E20  0E02               	movlw	high (_ConnectionTable+4)
  9994  001E22  20F4               	addwfc	prodh,w,c
  9995  001E24  6EDA               	movwf	fsr2h,c
  9996  001E26  0E96               	movlw	low _TxBuffer
  9997  001E28  25E2               	addwf	_TxData& (0+255),w,b
  9998  001E2A  6EE1               	movwf	fsr1l,c
  9999  001E2C  6AE2               	clrf	fsr1h,c
 10000  001E2E  0E01               	movlw	high _TxBuffer
 10001  001E30  22E2               	addwfc	fsr1h,f,c
 10002  001E32  CFDF FFE7          	movff	indf2,indf1
 10003                           
 10004                           ; BSR set to: 0
 10005  001E36  2BE2               	incf	_TxData& (0+255),f,b
 10006                           
 10007                           ; BSR set to: 0
 10008                           ;miwi_p2p.c: 1939: TxBuffer[TxData++] = ConnectionTable[j].Address[1];
 10009  001E38  5196               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10010  001E3A  0D0E               	mullw	14
 10011  001E3C  0E7D               	movlw	low (_ConnectionTable+5)
 10012  001E3E  24F3               	addwf	prodl,w,c
 10013  001E40  6ED9               	movwf	fsr2l,c
 10014  001E42  0E02               	movlw	high (_ConnectionTable+5)
 10015  001E44  20F4               	addwfc	prodh,w,c
 10016  001E46  6EDA               	movwf	fsr2h,c
 10017  001E48  0E96               	movlw	low _TxBuffer
 10018  001E4A  25E2               	addwf	_TxData& (0+255),w,b
 10019  001E4C  6EE1               	movwf	fsr1l,c
 10020  001E4E  6AE2               	clrf	fsr1h,c
 10021  001E50  0E01               	movlw	high _TxBuffer
 10022  001E52  22E2               	addwfc	fsr1h,f,c
 10023  001E54  CFDF FFE7          	movff	indf2,indf1
 10024  001E58  2BE2               	incf	_TxData& (0+255),f,b
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;miwi_p2p.c: 1940: TxBuffer[TxData++] = ConnectionTable[j].Address[2];
 10028  001E5A  5196               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10029  001E5C  0D0E               	mullw	14
 10030  001E5E  0E7E               	movlw	low (_ConnectionTable+6)
 10031  001E60  24F3               	addwf	prodl,w,c
 10032  001E62  6ED9               	movwf	fsr2l,c
 10033  001E64  0E02               	movlw	high (_ConnectionTable+6)
 10034  001E66  20F4               	addwfc	prodh,w,c
 10035  001E68  6EDA               	movwf	fsr2h,c
 10036  001E6A  0E96               	movlw	low _TxBuffer
 10037  001E6C  25E2               	addwf	_TxData& (0+255),w,b
 10038  001E6E  6EE1               	movwf	fsr1l,c
 10039  001E70  6AE2               	clrf	fsr1h,c
 10040  001E72  0E01               	movlw	high _TxBuffer
 10041  001E74  22E2               	addwfc	fsr1h,f,c
 10042  001E76  CFDF FFE7          	movff	indf2,indf1
 10043  001E7A                     l12557:
 10044                           
 10045                           ; BSR set to: 0
 10046  001E7A  2BE2               	incf	_TxData& (0+255),f,b
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;miwi_p2p.c: 1941: TxBuffer[TxData++] = j;
 10050  001E7C  0E96               	movlw	low _TxBuffer
 10051  001E7E  25E2               	addwf	_TxData& (0+255),w,b
 10052  001E80  6ED9               	movwf	fsr2l,c
 10053  001E82  6ADA               	clrf	fsr2h,c
 10054  001E84  0E01               	movlw	high _TxBuffer
 10055  001E86  22DA               	addwfc	fsr2h,f,c
 10056  001E88  C096  FFDF         	movff	MiApp_BroadcastConnectionTable@j,indf2
 10057                           
 10058                           ; BSR set to: 0
 10059  001E8C  2BE2               	incf	_TxData& (0+255),f,b
 10060                           
 10061                           ;miwi_p2p.c: 1943: }
 10062  001E8E  D018               	goto	l12575
 10063  001E90                     l12563:
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;miwi_p2p.c: 1945: else
 10067                           ;miwi_p2p.c: 1946: {
 10068                           ;miwi_p2p.c: 1948: TxBuffer[TxData++] = 0xff;
 10069  001E90  0E96               	movlw	low _TxBuffer
 10070  001E92  25E2               	addwf	_TxData& (0+255),w,b
 10071  001E94  6ED9               	movwf	fsr2l,c
 10072  001E96  6ADA               	clrf	fsr2h,c
 10073  001E98  0E01               	movlw	high _TxBuffer
 10074  001E9A  22DA               	addwfc	fsr2h,f,c
 10075  001E9C  68DF               	setf	indf2,c
 10076                           
 10077                           ; BSR set to: 0
 10078  001E9E  2BE2               	incf	_TxData& (0+255),f,b
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;miwi_p2p.c: 1949: TxBuffer[TxData++] = 0xff;
 10082  001EA0  0E96               	movlw	low _TxBuffer
 10083  001EA2  25E2               	addwf	_TxData& (0+255),w,b
 10084  001EA4  6ED9               	movwf	fsr2l,c
 10085  001EA6  6ADA               	clrf	fsr2h,c
 10086  001EA8  0E01               	movlw	high _TxBuffer
 10087  001EAA  22DA               	addwfc	fsr2h,f,c
 10088  001EAC  68DF               	setf	indf2,c
 10089  001EAE  2BE2               	incf	_TxData& (0+255),f,b
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;miwi_p2p.c: 1950: TxBuffer[TxData++] = 0xff;
 10093  001EB0  0E96               	movlw	low _TxBuffer
 10094  001EB2  25E2               	addwf	_TxData& (0+255),w,b
 10095  001EB4  6ED9               	movwf	fsr2l,c
 10096  001EB6  6ADA               	clrf	fsr2h,c
 10097  001EB8  0E01               	movlw	high _TxBuffer
 10098  001EBA  22DA               	addwfc	fsr2h,f,c
 10099  001EBC  68DF               	setf	indf2,c
 10100  001EBE  D7DD               	goto	l12557
 10101  001EC0                     l12575:
 10102                           
 10103                           ; BSR set to: 0
 10104                           ;miwi_p2p.c: 1952: }
 10105                           ;miwi_p2p.c: 1953: count = count + 4;
 10106  001EC0  0E04               	movlw	4
 10107  001EC2  2792               	addwf	MiApp_BroadcastConnectionTable@count& (0+255),f,b
 10108  001EC4                     l12577:
 10109                           
 10110                           ; BSR set to: 0
 10111  001EC4  2B96               	incf	MiApp_BroadcastConnectionTable@j& (0+255),f,b
 10112  001EC6                     l12579:
 10113                           
 10114                           ; BSR set to: 0
 10115  001EC6  5195               	movf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10116  001EC8  6F8B               	movwf	??_MiApp_BroadcastConnectionTable& (0+255),b
 10117  001ECA  6B8C               	clrf	(??_MiApp_BroadcastConnectionTable+1)& (0+255),b
 10118  001ECC  2B8B               	incf	??_MiApp_BroadcastConnectionTable& (0+255),f,b
 10119  001ECE  0E00               	movlw	0
 10120  001ED0  238C               	addwfc	(??_MiApp_BroadcastConnectionTable+1)& (0+255),f,b
 10121  001ED2  0E09               	movlw	9
 10122  001ED4  038B               	mulwf	??_MiApp_BroadcastConnectionTable& (0+255),b
 10123  001ED6  CFF3 F08D          	movff	prodl,??_MiApp_BroadcastConnectionTable+2
 10124  001EDA  CFF4 F08E          	movff	prodh,??_MiApp_BroadcastConnectionTable+3
 10125  001EDE  038C               	mulwf	(??_MiApp_BroadcastConnectionTable+1)& (0+255),b
 10126  001EE0  50F3               	movf	prodl,w,c
 10127  001EE2  278E               	addwf	(??_MiApp_BroadcastConnectionTable+3)& (0+255),f,b
 10128  001EE4  5196               	movf	MiApp_BroadcastConnectionTable@j& (0+255),w,b
 10129  001EE6  6F8F               	movwf	(??_MiApp_BroadcastConnectionTable+4)& (0+255),b
 10130  001EE8  6B90               	clrf	(??_MiApp_BroadcastConnectionTable+5)& (0+255),b
 10131  001EEA  518D               	movf	(??_MiApp_BroadcastConnectionTable+2)& (0+255),w,b
 10132  001EEC  5D8F               	subwf	(??_MiApp_BroadcastConnectionTable+4)& (0+255),w,b
 10133  001EEE  5190               	movf	(??_MiApp_BroadcastConnectionTable+5)& (0+255),w,b
 10134  001EF0  0A80               	xorlw	128
 10135  001EF2  6F91               	movwf	(??_MiApp_BroadcastConnectionTable+6)& (0+255),b
 10136  001EF4  518E               	movf	(??_MiApp_BroadcastConnectionTable+3)& (0+255),w,b
 10137  001EF6  0A80               	xorlw	128
 10138  001EF8  5991               	subwfb	(??_MiApp_BroadcastConnectionTable+6)& (0+255),w,b
 10139  001EFA  E380               	bnc	l12545
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;miwi_p2p.c: 1954: }
 10143                           ;miwi_p2p.c: 1955: }
 10144                           ;miwi_p2p.c: 1957: for (k=count;k<40;k++)
 10145  001EFC  C092  F094         	movff	MiApp_BroadcastConnectionTable@count,MiApp_BroadcastConnectionTable@k
 10146  001F00                     l12581:
 10147                           
 10148                           ; BSR set to: 0
 10149  001F00  0E27               	movlw	39
 10150  001F02  6594               	cpfsgt	MiApp_BroadcastConnectionTable@k& (0+255),b
 10151  001F04  D001               	goto	l12585
 10152  001F06  D00B               	goto	l12593
 10153  001F08                     l12585:
 10154                           
 10155                           ; BSR set to: 0
 10156                           ;miwi_p2p.c: 1958: {
 10157                           ;miwi_p2p.c: 1959: TxBuffer[TxData++] = 0x11;
 10158  001F08  0E96               	movlw	low _TxBuffer
 10159  001F0A  25E2               	addwf	_TxData& (0+255),w,b
 10160  001F0C  6ED9               	movwf	fsr2l,c
 10161  001F0E  6ADA               	clrf	fsr2h,c
 10162  001F10  0E01               	movlw	high _TxBuffer
 10163  001F12  22DA               	addwfc	fsr2h,f,c
 10164  001F14  0E11               	movlw	17
 10165  001F16  6EDF               	movwf	indf2,c
 10166                           
 10167                           ; BSR set to: 0
 10168  001F18  2BE2               	incf	_TxData& (0+255),f,b
 10169                           
 10170                           ; BSR set to: 0
 10171  001F1A  2B94               	incf	MiApp_BroadcastConnectionTable@k& (0+255),f,b
 10172  001F1C  D7F1               	goto	l12581
 10173  001F1E                     l12593:
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;miwi_p2p.c: 1960: }
 10177                           ;miwi_p2p.c: 1967: SendPacket(1, myPANID, (0), 1, 0);
 10178  001F1E  C0EA  F07B         	movff	_myPANID,SendPacket@DestinationPANID
 10179  001F22  C0EB  F07C         	movff	_myPANID+1,SendPacket@DestinationPANID+1
 10180  001F26  6B7D               	clrf	SendPacket@DestinationAddress& (0+255),b
 10181  001F28  6B7E               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
 10182  001F2A  0E01               	movlw	1
 10183  001F2C  6F7F               	movwf	SendPacket@isCommand& (0+255),b
 10184  001F2E  6B80               	clrf	SendPacket@SecurityEnabled& (0+255),b
 10185  001F30  ECA1  F014         	call	_SendPacket
 10186                           
 10187                           ; BSR set to: 0
 10188  001F34  2B95               	incf	MiApp_BroadcastConnectionTable@i& (0+255),f,b
 10189  001F36                     l12597:
 10190                           
 10191                           ; BSR set to: 0
 10192  001F36  5193               	movf	MiApp_BroadcastConnectionTable@broadcast_count& (0+255),w,b
 10193  001F38  5D95               	subwf	MiApp_BroadcastConnectionTable@i& (0+255),w,b
 10194  001F3A  E201 D72F          	bnc	l567
 10195                           
 10196                           ; BSR set to: 0
 10197  001F3E  0012               	return		;funcret
 10198  001F40                     __end_of_MiApp_BroadcastConnectionTable:
 10199                           	opt stack 0
 10200                           tblptru	equ	0xFF8
 10201                           tblptrh	equ	0xFF7
 10202                           tblptrl	equ	0xFF6
 10203                           tablat	equ	0xFF5
 10204                           prodh	equ	0xFF4
 10205                           prodl	equ	0xFF3
 10206                           intcon	equ	0xFF2
 10207                           intcon2	equ	0xFF1
 10208                           postinc0	equ	0xFEE
 10209                           wreg	equ	0xFE8
 10210                           indf1	equ	0xFE7
 10211                           postinc1	equ	0xFE6
 10212                           postdec1	equ	0xFE5
 10213                           fsr1h	equ	0xFE2
 10214                           fsr1l	equ	0xFE1
 10215                           indf2	equ	0xFDF
 10216                           postinc2	equ	0xFDE
 10217                           postdec2	equ	0xFDD
 10218                           fsr2h	equ	0xFDA
 10219                           fsr2l	equ	0xFD9
 10220                           status	equ	0xFD8
 10221                           
 10222 ;; *************** function ___awmod *****************
 10223 ;; Defined at:
 10224 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;  dividend        2   21[COMRAM] int 
 10227 ;;  divisor         2   23[COMRAM] int 
 10228 ;; Auto vars:     Size  Location     Type
 10229 ;;  sign            1   26[COMRAM] unsigned char 
 10230 ;;  counter         1   25[COMRAM] unsigned char 
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  2   21[COMRAM] int 
 10233 ;; Registers used:
 10234 ;;		wreg, status,2, status,0
 10235 ;; Tracked objects:
 10236 ;;		On entry : F/0
 10237 ;;		On exit  : F/0
 10238 ;;		Unchanged: F/0
 10239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10243 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10244 ;;Total ram usage:        6 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:    3
 10247 ;; This function calls:
 10248 ;;		Nothing
 10249 ;; This function is called by:
 10250 ;;		_MiApp_BroadcastConnectionTable
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           	psect	text34
 10255  003164                     __ptext34:
 10256                           	opt stack 0
 10257  003164                     ___awmod:
 10258                           	opt stack 21
 10259                           
 10260                           ; BSR set to: 0
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;incstack = 0
 10264  003164  6A1B               	clrf	___awmod@sign,c
 10265                           
 10266                           ; BSR set to: 0
 10267  003166  AE17               	btfss	___awmod@dividend+1,7,c
 10268  003168  D006               	goto	l12189
 10269                           
 10270                           ; BSR set to: 0
 10271  00316A  6C16               	negf	___awmod@dividend,c
 10272  00316C  1E17               	comf	___awmod@dividend+1,f,c
 10273  00316E  B0D8               	btfsc	status,0,c
 10274  003170  2A17               	incf	___awmod@dividend+1,f,c
 10275                           
 10276                           ; BSR set to: 0
 10277  003172  0E01               	movlw	1
 10278  003174  6E1B               	movwf	___awmod@sign,c
 10279  003176                     l12189:
 10280                           
 10281                           ; BSR set to: 0
 10282  003176  AE19               	btfss	___awmod@divisor+1,7,c
 10283  003178  D004               	goto	l12193
 10284                           
 10285                           ; BSR set to: 0
 10286  00317A  6C18               	negf	___awmod@divisor,c
 10287  00317C  1E19               	comf	___awmod@divisor+1,f,c
 10288  00317E  B0D8               	btfsc	status,0,c
 10289  003180  2A19               	incf	___awmod@divisor+1,f,c
 10290  003182                     l12193:
 10291                           
 10292                           ; BSR set to: 0
 10293  003182  5018               	movf	___awmod@divisor,w,c
 10294  003184  1019               	iorwf	___awmod@divisor+1,w,c
 10295  003186  E017               	bz	l12209
 10296                           
 10297                           ; BSR set to: 0
 10298  003188  0E01               	movlw	1
 10299  00318A  6E1A               	movwf	___awmod@counter,c
 10300  00318C  D004               	goto	l12199
 10301  00318E                     l12197:
 10302                           
 10303                           ; BSR set to: 0
 10304  00318E  90D8               	bcf	status,0,c
 10305  003190  3618               	rlcf	___awmod@divisor,f,c
 10306  003192  3619               	rlcf	___awmod@divisor+1,f,c
 10307  003194  2A1A               	incf	___awmod@counter,f,c
 10308  003196                     l12199:
 10309                           
 10310                           ; BSR set to: 0
 10311  003196  AE19               	btfss	___awmod@divisor+1,7,c
 10312  003198  D7FA               	goto	l12197
 10313  00319A                     l12201:
 10314                           
 10315                           ; BSR set to: 0
 10316  00319A  5018               	movf	___awmod@divisor,w,c
 10317  00319C  5C16               	subwf	___awmod@dividend,w,c
 10318  00319E  5019               	movf	___awmod@divisor+1,w,c
 10319  0031A0  5817               	subwfb	___awmod@dividend+1,w,c
 10320  0031A2  E304               	bnc	l12205
 10321                           
 10322                           ; BSR set to: 0
 10323  0031A4  5018               	movf	___awmod@divisor,w,c
 10324  0031A6  5E16               	subwf	___awmod@dividend,f,c
 10325  0031A8  5019               	movf	___awmod@divisor+1,w,c
 10326  0031AA  5A17               	subwfb	___awmod@dividend+1,f,c
 10327  0031AC                     l12205:
 10328                           
 10329                           ; BSR set to: 0
 10330  0031AC  90D8               	bcf	status,0,c
 10331  0031AE  3219               	rrcf	___awmod@divisor+1,f,c
 10332  0031B0  3218               	rrcf	___awmod@divisor,f,c
 10333                           
 10334                           ; BSR set to: 0
 10335  0031B2  2E1A               	decfsz	___awmod@counter,f,c
 10336  0031B4  D7F2               	goto	l12201
 10337  0031B6                     l12209:
 10338                           
 10339                           ; BSR set to: 0
 10340  0031B6  501B               	movf	___awmod@sign,w,c
 10341  0031B8  E004               	bz	l12213
 10342                           
 10343                           ; BSR set to: 0
 10344  0031BA  6C16               	negf	___awmod@dividend,c
 10345  0031BC  1E17               	comf	___awmod@dividend+1,f,c
 10346  0031BE  B0D8               	btfsc	status,0,c
 10347  0031C0  2A17               	incf	___awmod@dividend+1,f,c
 10348  0031C2                     l12213:
 10349                           
 10350                           ; BSR set to: 0
 10351  0031C2  C016  F016         	movff	___awmod@dividend,?___awmod
 10352  0031C6  C017  F017         	movff	___awmod@dividend+1,?___awmod+1
 10353                           
 10354                           ; BSR set to: 0
 10355  0031CA  0012               	return		;funcret
 10356  0031CC                     __end_of___awmod:
 10357                           	opt stack 0
 10358                           tblptru	equ	0xFF8
 10359                           tblptrh	equ	0xFF7
 10360                           tblptrl	equ	0xFF6
 10361                           tablat	equ	0xFF5
 10362                           prodh	equ	0xFF4
 10363                           prodl	equ	0xFF3
 10364                           intcon	equ	0xFF2
 10365                           intcon2	equ	0xFF1
 10366                           postinc0	equ	0xFEE
 10367                           wreg	equ	0xFE8
 10368                           indf1	equ	0xFE7
 10369                           postinc1	equ	0xFE6
 10370                           postdec1	equ	0xFE5
 10371                           fsr1h	equ	0xFE2
 10372                           fsr1l	equ	0xFE1
 10373                           indf2	equ	0xFDF
 10374                           postinc2	equ	0xFDE
 10375                           postdec2	equ	0xFDD
 10376                           fsr2h	equ	0xFDA
 10377                           fsr2l	equ	0xFD9
 10378                           status	equ	0xFD8
 10379                           
 10380 ;; *************** function ___awdiv *****************
 10381 ;; Defined at:
 10382 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;  dividend        2   21[COMRAM] int 
 10385 ;;  divisor         2   23[COMRAM] int 
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;  quotient        2   27[COMRAM] int 
 10388 ;;  sign            1   26[COMRAM] unsigned char 
 10389 ;;  counter         1   25[COMRAM] unsigned char 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  2   21[COMRAM] int 
 10392 ;; Registers used:
 10393 ;;		wreg, status,2, status,0
 10394 ;; Tracked objects:
 10395 ;;		On entry : F/0
 10396 ;;		On exit  : F/0
 10397 ;;		Unchanged: F/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10400 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10402 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10403 ;;Total ram usage:        8 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; Hardware stack levels required when called:    3
 10406 ;; This function calls:
 10407 ;;		Nothing
 10408 ;; This function is called by:
 10409 ;;		_MiApp_BroadcastConnectionTable
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413                           	psect	text35
 10414  002F94                     __ptext35:
 10415                           	opt stack 0
 10416  002F94                     ___awdiv:
 10417                           	opt stack 21
 10418                           
 10419                           ; BSR set to: 0
 10420                           
 10421                           ; BSR set to: 0
 10422                           ;incstack = 0
 10423  002F94  6A1B               	clrf	___awdiv@sign,c
 10424                           
 10425                           ; BSR set to: 0
 10426  002F96  AE19               	btfss	___awdiv@divisor+1,7,c
 10427  002F98  D006               	goto	l12145
 10428                           
 10429                           ; BSR set to: 0
 10430  002F9A  6C18               	negf	___awdiv@divisor,c
 10431  002F9C  1E19               	comf	___awdiv@divisor+1,f,c
 10432  002F9E  B0D8               	btfsc	status,0,c
 10433  002FA0  2A19               	incf	___awdiv@divisor+1,f,c
 10434                           
 10435                           ; BSR set to: 0
 10436  002FA2  0E01               	movlw	1
 10437  002FA4  6E1B               	movwf	___awdiv@sign,c
 10438  002FA6                     l12145:
 10439                           
 10440                           ; BSR set to: 0
 10441  002FA6  AE17               	btfss	___awdiv@dividend+1,7,c
 10442  002FA8  D006               	goto	l12151
 10443                           
 10444                           ; BSR set to: 0
 10445  002FAA  6C16               	negf	___awdiv@dividend,c
 10446  002FAC  1E17               	comf	___awdiv@dividend+1,f,c
 10447  002FAE  B0D8               	btfsc	status,0,c
 10448  002FB0  2A17               	incf	___awdiv@dividend+1,f,c
 10449                           
 10450                           ; BSR set to: 0
 10451  002FB2  0E01               	movlw	1
 10452  002FB4  1A1B               	xorwf	___awdiv@sign,f,c
 10453  002FB6                     l12151:
 10454                           
 10455                           ; BSR set to: 0
 10456  002FB6  6A1C               	clrf	___awdiv@quotient,c
 10457  002FB8  6A1D               	clrf	___awdiv@quotient+1,c
 10458                           
 10459                           ; BSR set to: 0
 10460  002FBA  5018               	movf	___awdiv@divisor,w,c
 10461  002FBC  1019               	iorwf	___awdiv@divisor+1,w,c
 10462  002FBE  E01B               	bz	l12173
 10463                           
 10464                           ; BSR set to: 0
 10465  002FC0  0E01               	movlw	1
 10466  002FC2  6E1A               	movwf	___awdiv@counter,c
 10467  002FC4  D004               	goto	l12159
 10468  002FC6                     l12157:
 10469                           
 10470                           ; BSR set to: 0
 10471  002FC6  90D8               	bcf	status,0,c
 10472  002FC8  3618               	rlcf	___awdiv@divisor,f,c
 10473  002FCA  3619               	rlcf	___awdiv@divisor+1,f,c
 10474  002FCC  2A1A               	incf	___awdiv@counter,f,c
 10475  002FCE                     l12159:
 10476                           
 10477                           ; BSR set to: 0
 10478  002FCE  AE19               	btfss	___awdiv@divisor+1,7,c
 10479  002FD0  D7FA               	goto	l12157
 10480  002FD2                     l12161:
 10481                           
 10482                           ; BSR set to: 0
 10483  002FD2  90D8               	bcf	status,0,c
 10484  002FD4  361C               	rlcf	___awdiv@quotient,f,c
 10485  002FD6  361D               	rlcf	___awdiv@quotient+1,f,c
 10486                           
 10487                           ; BSR set to: 0
 10488  002FD8  5018               	movf	___awdiv@divisor,w,c
 10489  002FDA  5C16               	subwf	___awdiv@dividend,w,c
 10490  002FDC  5019               	movf	___awdiv@divisor+1,w,c
 10491  002FDE  5817               	subwfb	___awdiv@dividend+1,w,c
 10492  002FE0  E305               	bnc	l12169
 10493                           
 10494                           ; BSR set to: 0
 10495  002FE2  5018               	movf	___awdiv@divisor,w,c
 10496  002FE4  5E16               	subwf	___awdiv@dividend,f,c
 10497  002FE6  5019               	movf	___awdiv@divisor+1,w,c
 10498  002FE8  5A17               	subwfb	___awdiv@dividend+1,f,c
 10499                           
 10500                           ; BSR set to: 0
 10501  002FEA  801C               	bsf	___awdiv@quotient,0,c
 10502  002FEC                     l12169:
 10503                           
 10504                           ; BSR set to: 0
 10505  002FEC  90D8               	bcf	status,0,c
 10506  002FEE  3219               	rrcf	___awdiv@divisor+1,f,c
 10507  002FF0  3218               	rrcf	___awdiv@divisor,f,c
 10508                           
 10509                           ; BSR set to: 0
 10510  002FF2  2E1A               	decfsz	___awdiv@counter,f,c
 10511  002FF4  D7EE               	goto	l12161
 10512  002FF6                     l12173:
 10513                           
 10514                           ; BSR set to: 0
 10515  002FF6  501B               	movf	___awdiv@sign,w,c
 10516  002FF8  E004               	bz	l12177
 10517                           
 10518                           ; BSR set to: 0
 10519  002FFA  6C1C               	negf	___awdiv@quotient,c
 10520  002FFC  1E1D               	comf	___awdiv@quotient+1,f,c
 10521  002FFE  B0D8               	btfsc	status,0,c
 10522  003000  2A1D               	incf	___awdiv@quotient+1,f,c
 10523  003002                     l12177:
 10524                           
 10525                           ; BSR set to: 0
 10526  003002  C01C  F016         	movff	___awdiv@quotient,?___awdiv
 10527  003006  C01D  F017         	movff	___awdiv@quotient+1,?___awdiv+1
 10528                           
 10529                           ; BSR set to: 0
 10530  00300A  0012               	return		;funcret
 10531  00300C                     __end_of___awdiv:
 10532                           	opt stack 0
 10533                           tblptru	equ	0xFF8
 10534                           tblptrh	equ	0xFF7
 10535                           tblptrl	equ	0xFF6
 10536                           tablat	equ	0xFF5
 10537                           prodh	equ	0xFF4
 10538                           prodl	equ	0xFF3
 10539                           intcon	equ	0xFF2
 10540                           intcon2	equ	0xFF1
 10541                           postinc0	equ	0xFEE
 10542                           wreg	equ	0xFE8
 10543                           indf1	equ	0xFE7
 10544                           postinc1	equ	0xFE6
 10545                           postdec1	equ	0xFE5
 10546                           fsr1h	equ	0xFE2
 10547                           fsr1l	equ	0xFE1
 10548                           indf2	equ	0xFDF
 10549                           postinc2	equ	0xFDE
 10550                           postdec2	equ	0xFDD
 10551                           fsr2h	equ	0xFDA
 10552                           fsr2l	equ	0xFD9
 10553                           status	equ	0xFD8
 10554                           
 10555 ;; *************** function _Forward_Packet_PANCr_to_EDy *****************
 10556 ;; Defined at:
 10557 ;;		line 178 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;  fw_payload      2   49[BANK0 ] PTR unsigned char 
 10560 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 10561 ;;  index           1   51[BANK0 ] unsigned char 
 10562 ;;  EDxAddress      2   52[BANK0 ] PTR unsigned char 
 10563 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 10564 ;; Auto vars:     Size  Location     Type
 10565 ;;  i               1   55[BANK0 ] unsigned char 
 10566 ;;  status          1   54[BANK0 ] unsigned char 
 10567 ;; Return value:  Size  Location     Type
 10568 ;;                  1    wreg      unsigned char 
 10569 ;; Registers used:
 10570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10571 ;; Tracked objects:
 10572 ;;		On entry : F/0
 10573 ;;		On exit  : F/0
 10574 ;;		Unchanged: 0/0
 10575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10576 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10579 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10580 ;;Total ram usage:        7 bytes
 10581 ;; Hardware stack levels used:    1
 10582 ;; Hardware stack levels required when called:   11
 10583 ;; This function calls:
 10584 ;;		_DemoOutput_UnicastFail
 10585 ;;		_MiApp_UnicastConnection
 10586 ;; This function is called by:
 10587 ;;		_P2PTasks
 10588 ;; This function uses a non-reentrant model
 10589 ;;
 10590                           
 10591                           	psect	text36
 10592  002B40                     __ptext36:
 10593                           	opt stack 0
 10594  002B40                     _Forward_Packet_PANCr_to_EDy:
 10595                           	opt stack 14
 10596                           
 10597                           ; BSR set to: 0
 10598                           ;miwi_p2p.c: 180: uint8_t i;
 10599                           ;miwi_p2p.c: 181: bool status;
 10600                           ;miwi_p2p.c: 182: {TxData = 0;};
 10601                           
 10602                           ; BSR set to: 0
 10603                           ;incstack = 0
 10604  002B40  6BE2               	clrf	_TxData& (0+255),b
 10605                           
 10606                           ; BSR set to: 0
 10607                           ;miwi_p2p.c: 183: TxBuffer[TxData++] = EDxAddress[0];
 10608  002B42  C094  FFD9         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress,fsr2l
 10609  002B46  C095  FFDA         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress+1,fsr2h
 10610  002B4A  0E96               	movlw	low _TxBuffer
 10611  002B4C  25E2               	addwf	_TxData& (0+255),w,b
 10612  002B4E  6EE1               	movwf	fsr1l,c
 10613  002B50  6AE2               	clrf	fsr1h,c
 10614  002B52  0E01               	movlw	high _TxBuffer
 10615  002B54  22E2               	addwfc	fsr1h,f,c
 10616  002B56  CFDF FFE7          	movff	indf2,indf1
 10617                           
 10618                           ; BSR set to: 0
 10619  002B5A  2BE2               	incf	_TxData& (0+255),f,b
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;miwi_p2p.c: 184: TxBuffer[TxData++] = EDxAddress[1];
 10623  002B5C  EE20 F001          	lfsr	2,1
 10624  002B60  5194               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
 10625  002B62  26D9               	addwf	fsr2l,f,c
 10626  002B64  5195               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
 10627  002B66  22DA               	addwfc	fsr2h,f,c
 10628  002B68  0E96               	movlw	low _TxBuffer
 10629  002B6A  25E2               	addwf	_TxData& (0+255),w,b
 10630  002B6C  6EE1               	movwf	fsr1l,c
 10631  002B6E  6AE2               	clrf	fsr1h,c
 10632  002B70  0E01               	movlw	high _TxBuffer
 10633  002B72  22E2               	addwfc	fsr1h,f,c
 10634  002B74  CFDF FFE7          	movff	indf2,indf1
 10635  002B78  2BE2               	incf	_TxData& (0+255),f,b
 10636                           
 10637                           ; BSR set to: 0
 10638                           ;miwi_p2p.c: 185: TxBuffer[TxData++] = EDxAddress[2];
 10639  002B7A  EE20 F002          	lfsr	2,2
 10640  002B7E  5194               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
 10641  002B80  26D9               	addwf	fsr2l,f,c
 10642  002B82  5195               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
 10643  002B84  22DA               	addwfc	fsr2h,f,c
 10644  002B86  0E96               	movlw	low _TxBuffer
 10645  002B88  25E2               	addwf	_TxData& (0+255),w,b
 10646  002B8A  6EE1               	movwf	fsr1l,c
 10647  002B8C  6AE2               	clrf	fsr1h,c
 10648  002B8E  0E01               	movlw	high _TxBuffer
 10649  002B90  22E2               	addwfc	fsr1h,f,c
 10650  002B92  CFDF FFE7          	movff	indf2,indf1
 10651                           
 10652                           ; BSR set to: 0
 10653  002B96  2BE2               	incf	_TxData& (0+255),f,b
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;miwi_p2p.c: 186: for(i = 3; i < 40; i++)
 10657  002B98  0E03               	movlw	3
 10658  002B9A  6F97               	movwf	Forward_Packet_PANCr_to_EDy@i& (0+255),b
 10659  002B9C                     l12465:
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;miwi_p2p.c: 187: {
 10663                           ;miwi_p2p.c: 188: TxBuffer[TxData++] = fw_payload[i];
 10664  002B9C  5197               	movf	Forward_Packet_PANCr_to_EDy@i& (0+255),w,b
 10665  002B9E  2591               	addwf	Forward_Packet_PANCr_to_EDy@fw_payload& (0+255),w,b
 10666  002BA0  6ED9               	movwf	fsr2l,c
 10667  002BA2  0E00               	movlw	0
 10668  002BA4  2192               	addwfc	(Forward_Packet_PANCr_to_EDy@fw_payload+1)& (0+255),w,b
 10669  002BA6  6EDA               	movwf	fsr2h,c
 10670  002BA8  0E96               	movlw	low _TxBuffer
 10671  002BAA  25E2               	addwf	_TxData& (0+255),w,b
 10672  002BAC  6EE1               	movwf	fsr1l,c
 10673  002BAE  6AE2               	clrf	fsr1h,c
 10674  002BB0  0E01               	movlw	high _TxBuffer
 10675  002BB2  22E2               	addwfc	fsr1h,f,c
 10676  002BB4  CFDF FFE7          	movff	indf2,indf1
 10677                           
 10678                           ; BSR set to: 0
 10679  002BB8  2BE2               	incf	_TxData& (0+255),f,b
 10680                           
 10681                           ; BSR set to: 0
 10682  002BBA  2B97               	incf	Forward_Packet_PANCr_to_EDy@i& (0+255),f,b
 10683                           
 10684                           ; BSR set to: 0
 10685  002BBC  0E27               	movlw	39
 10686  002BBE  6597               	cpfsgt	Forward_Packet_PANCr_to_EDy@i& (0+255),b
 10687  002BC0  D7ED               	goto	l12465
 10688                           
 10689                           ; BSR set to: 0
 10690                           ;miwi_p2p.c: 189: }
 10691                           ;miwi_p2p.c: 193: status = MiApp_UnicastConnection (index,0) ;
 10692  002BC2  6B8F               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
 10693  002BC4  5193               	movf	Forward_Packet_PANCr_to_EDy@index& (0+255),w,b
 10694  002BC6  EC50  F01B         	call	_MiApp_UnicastConnection
 10695  002BCA  6F96               	movwf	Forward_Packet_PANCr_to_EDy@status& (0+255),b
 10696                           
 10697                           ; BSR set to: 0
 10698                           ;miwi_p2p.c: 196: if(!status)
 10699  002BCC  5196               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
 10700  002BCE  E102               	bnz	l12479
 10701                           
 10702                           ; BSR set to: 0
 10703                           ;miwi_p2p.c: 197: {
 10704                           ;miwi_p2p.c: 198: DemoOutput_UnicastFail();
 10705  002BD0  EC28  F01D         	call	_DemoOutput_UnicastFail	;wreg free
 10706  002BD4                     l12479:
 10707                           
 10708                           ;miwi_p2p.c: 199: }
 10709                           ;miwi_p2p.c: 200: return status;
 10710  002BD4  0100               	movlb	0	; () banked
 10711  002BD6  5196               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
 10712                           
 10713                           ; BSR set to: 0
 10714  002BD8  0012               	return		;funcret
 10715  002BDA                     __end_of_Forward_Packet_PANCr_to_EDy:
 10716                           	opt stack 0
 10717                           tblptru	equ	0xFF8
 10718                           tblptrh	equ	0xFF7
 10719                           tblptrl	equ	0xFF6
 10720                           tablat	equ	0xFF5
 10721                           prodh	equ	0xFF4
 10722                           prodl	equ	0xFF3
 10723                           intcon	equ	0xFF2
 10724                           intcon2	equ	0xFF1
 10725                           postinc0	equ	0xFEE
 10726                           wreg	equ	0xFE8
 10727                           indf1	equ	0xFE7
 10728                           postinc1	equ	0xFE6
 10729                           postdec1	equ	0xFE5
 10730                           fsr1h	equ	0xFE2
 10731                           fsr1l	equ	0xFE1
 10732                           indf2	equ	0xFDF
 10733                           postinc2	equ	0xFDE
 10734                           postdec2	equ	0xFDD
 10735                           fsr2h	equ	0xFDA
 10736                           fsr2l	equ	0xFD9
 10737                           status	equ	0xFD8
 10738                           
 10739 ;; *************** function _MiApp_UnicastConnection *****************
 10740 ;; Defined at:
 10741 ;;		line 1764 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;  ConnectionIn    1    wreg     unsigned char 
 10744 ;;  SecEn           1   47[BANK0 ] unsigned char 
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;  ConnectionIn    1   48[BANK0 ] unsigned char 
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  1    wreg      unsigned char 
 10749 ;; Registers used:
 10750 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10751 ;; Tracked objects:
 10752 ;;		On entry : F/0
 10753 ;;		On exit  : F/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10756 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10759 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10760 ;;Total ram usage:        2 bytes
 10761 ;; Hardware stack levels used:    1
 10762 ;; Hardware stack levels required when called:   10
 10763 ;; This function calls:
 10764 ;;		_MiApp_UnicastAddress
 10765 ;; This function is called by:
 10766 ;;		_Forward_Packet_PANCr_to_EDy
 10767 ;;		_run_star_demo
 10768 ;; This function uses a non-reentrant model
 10769 ;;
 10770                           
 10771                           	psect	text37
 10772  0036A0                     __ptext37:
 10773                           	opt stack 0
 10774  0036A0                     _MiApp_UnicastConnection:
 10775                           	opt stack 14
 10776                           
 10777                           ; BSR set to: 0
 10778                           ;incstack = 0
 10779                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
 10780  0036A0  6F90               	movwf	MiApp_UnicastConnection@ConnectionIndex& (0+255),b
 10781                           
 10782                           ;miwi_p2p.c: 1767: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 10783  0036A2  0100               	movlb	0	; () banked
 10784  0036A4  5190               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
 10785  0036A6  0D0E               	mullw	14
 10786  0036A8  0E84               	movlw	low (_ConnectionTable+12)
 10787  0036AA  24F3               	addwf	prodl,w,c
 10788  0036AC  6ED9               	movwf	fsr2l,c
 10789  0036AE  0E02               	movlw	high (_ConnectionTable+12)
 10790  0036B0  20F4               	addwfc	prodh,w,c
 10791  0036B2  6EDA               	movwf	fsr2h,c
 10792  0036B4  AEDF               	btfss	indf2,7,c
 10793  0036B6  0C00               	retlw	0
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;miwi_p2p.c: 1768: {
 10797                           ;miwi_p2p.c: 1801: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
 10798  0036B8  5190               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
 10799  0036BA  0D0E               	mullw	14
 10800  0036BC  0E7C               	movlw	low (_ConnectionTable+4)
 10801  0036BE  24F3               	addwf	prodl,w,c
 10802  0036C0  6F8B               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
 10803  0036C2  0E02               	movlw	high (_ConnectionTable+4)
 10804  0036C4  20F4               	addwfc	prodh,w,c
 10805  0036C6  6F8C               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
 10806  0036C8  0E01               	movlw	1
 10807  0036CA  6F8D               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
 10808  0036CC  C08F  F08E         	movff	MiApp_UnicastConnection@SecEn,MiApp_UnicastAddress@SecEn
 10809  0036D0  EFE7  F01C         	goto	_MiApp_UnicastAddress	;wreg free
 10810  0036D4                     __end_of_MiApp_UnicastConnection:
 10811                           	opt stack 0
 10812                           tblptru	equ	0xFF8
 10813                           tblptrh	equ	0xFF7
 10814                           tblptrl	equ	0xFF6
 10815                           tablat	equ	0xFF5
 10816                           prodh	equ	0xFF4
 10817                           prodl	equ	0xFF3
 10818                           intcon	equ	0xFF2
 10819                           intcon2	equ	0xFF1
 10820                           postinc0	equ	0xFEE
 10821                           wreg	equ	0xFE8
 10822                           indf1	equ	0xFE7
 10823                           postinc1	equ	0xFE6
 10824                           postdec1	equ	0xFE5
 10825                           fsr1h	equ	0xFE2
 10826                           fsr1l	equ	0xFE1
 10827                           indf2	equ	0xFDF
 10828                           postinc2	equ	0xFDE
 10829                           postdec2	equ	0xFDD
 10830                           fsr2h	equ	0xFDA
 10831                           fsr2l	equ	0xFD9
 10832                           status	equ	0xFD8
 10833                           
 10834 ;; *************** function _MiApp_UnicastAddress *****************
 10835 ;; Defined at:
 10836 ;;		line 1843 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 10837 ;; Parameters:    Size  Location     Type
 10838 ;;  DestinationA    2   43[BANK0 ] PTR unsigned char 
 10839 ;;		 -> ConnectionTable(280), 
 10840 ;;  PermanentAdd    1   45[BANK0 ] unsigned char 
 10841 ;;  SecEn           1   46[BANK0 ] unsigned char 
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;		None
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      unsigned char 
 10846 ;; Registers used:
 10847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10848 ;; Tracked objects:
 10849 ;;		On entry : F/0
 10850 ;;		On exit  : F/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10853 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10856 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10857 ;;Total ram usage:        4 bytes
 10858 ;; Hardware stack levels used:    1
 10859 ;; Hardware stack levels required when called:    9
 10860 ;; This function calls:
 10861 ;;		_SendPacket
 10862 ;; This function is called by:
 10863 ;;		_MiApp_UnicastConnection
 10864 ;; This function uses a non-reentrant model
 10865 ;;
 10866                           
 10867                           	psect	text38
 10868  0039CE                     __ptext38:
 10869                           	opt stack 0
 10870  0039CE                     _MiApp_UnicastAddress:
 10871                           	opt stack 14
 10872                           
 10873                           ; BSR set to: 0
 10874                           ;miwi_p2p.c: 1874: return SendPacket(0, myPANID, DestinationAddress, 0, SecEn);
 10875                           
 10876                           ; BSR set to: 0
 10877                           ;incstack = 0
 10878  0039CE  C0EA  F07B         	movff	_myPANID,SendPacket@DestinationPANID
 10879  0039D2  C0EB  F07C         	movff	_myPANID+1,SendPacket@DestinationPANID+1
 10880  0039D6  C08B  F07D         	movff	MiApp_UnicastAddress@DestinationAddress,SendPacket@DestinationAddress
 10881  0039DA  C08C  F07E         	movff	MiApp_UnicastAddress@DestinationAddress+1,SendPacket@DestinationAddress+1
 10882  0039DE  0E00               	movlw	0
 10883  0039E0  6B7F               	clrf	SendPacket@isCommand& (0+255),b
 10884  0039E2  C08E  F080         	movff	MiApp_UnicastAddress@SecEn,SendPacket@SecurityEnabled
 10885  0039E6  EFA1  F014         	goto	_SendPacket
 10886  0039EA                     __end_of_MiApp_UnicastAddress:
 10887                           	opt stack 0
 10888                           tblptru	equ	0xFF8
 10889                           tblptrh	equ	0xFF7
 10890                           tblptrl	equ	0xFF6
 10891                           tablat	equ	0xFF5
 10892                           prodh	equ	0xFF4
 10893                           prodl	equ	0xFF3
 10894                           intcon	equ	0xFF2
 10895                           intcon2	equ	0xFF1
 10896                           postinc0	equ	0xFEE
 10897                           wreg	equ	0xFE8
 10898                           indf1	equ	0xFE7
 10899                           postinc1	equ	0xFE6
 10900                           postdec1	equ	0xFE5
 10901                           fsr1h	equ	0xFE2
 10902                           fsr1l	equ	0xFE1
 10903                           indf2	equ	0xFDF
 10904                           postinc2	equ	0xFDE
 10905                           postdec2	equ	0xFDD
 10906                           fsr2h	equ	0xFDA
 10907                           fsr2l	equ	0xFD9
 10908                           status	equ	0xFD8
 10909                           
 10910 ;; *************** function _DemoOutput_UnicastFail *****************
 10911 ;; Defined at:
 10912 ;;		line 203 in file "../src/demo_ouput.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;		None
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;		None
 10917 ;; Return value:  Size  Location     Type
 10918 ;;		None               void
 10919 ;; Registers used:
 10920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10921 ;; Tracked objects:
 10922 ;;		On entry : F/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10930 ;;Total ram usage:        0 bytes
 10931 ;; Hardware stack levels used:    1
 10932 ;; Hardware stack levels required when called:    7
 10933 ;; This function calls:
 10934 ;;		_LCDDisplay
 10935 ;; This function is called by:
 10936 ;;		_Forward_Packet_PANCr_to_EDy
 10937 ;; This function uses a non-reentrant model
 10938 ;;
 10939                           
 10940                           	psect	text39
 10941  003A50                     __ptext39:
 10942                           	opt stack 0
 10943  003A50                     _DemoOutput_UnicastFail:
 10944                           	opt stack 17
 10945                           
 10946                           ; BSR set to: 0
 10947                           ;demo_ouput.c: 209: LCDDisplay((char *)" Unicast Failed", 0, 1);
 10948                           
 10949                           ; BSR set to: 0
 10950                           ;incstack = 0
 10951  003A50  0E92               	movlw	low STR_25
 10952  003A52  6F73               	movwf	LCDDisplay@text& (0+255),b
 10953  003A54  0EFF               	movlw	high STR_25
 10954  003A56  6F74               	movwf	(LCDDisplay@text+1)& (0+255),b
 10955  003A58  6B75               	clrf	LCDDisplay@value& (0+255),b
 10956  003A5A  0E01               	movlw	1
 10957  003A5C  6F76               	movwf	LCDDisplay@delay& (0+255),b
 10958  003A5E  EF78  F01A         	goto	_LCDDisplay	;wreg free
 10959  003A62                     __end_of_DemoOutput_UnicastFail:
 10960                           	opt stack 0
 10961                           tblptru	equ	0xFF8
 10962                           tblptrh	equ	0xFF7
 10963                           tblptrl	equ	0xFF6
 10964                           tablat	equ	0xFF5
 10965                           prodh	equ	0xFF4
 10966                           prodl	equ	0xFF3
 10967                           intcon	equ	0xFF2
 10968                           intcon2	equ	0xFF1
 10969                           postinc0	equ	0xFEE
 10970                           wreg	equ	0xFE8
 10971                           indf1	equ	0xFE7
 10972                           postinc1	equ	0xFE6
 10973                           postdec1	equ	0xFE5
 10974                           fsr1h	equ	0xFE2
 10975                           fsr1l	equ	0xFE1
 10976                           indf2	equ	0xFDF
 10977                           postinc2	equ	0xFDE
 10978                           postdec2	equ	0xFDD
 10979                           fsr2h	equ	0xFDA
 10980                           fsr2l	equ	0xFD9
 10981                           status	equ	0xFD8
 10982                           
 10983 ;; *************** function _Find_Index *****************
 10984 ;; Defined at:
 10985 ;;		line 105 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;  DestAddr        2   21[COMRAM] PTR unsigned char 
 10988 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;  i               1   25[COMRAM] unsigned char 
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  1    wreg      unsigned char 
 10993 ;; Registers used:
 10994 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11003 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11004 ;;Total ram usage:        5 bytes
 11005 ;; Hardware stack levels used:    1
 11006 ;; Hardware stack levels required when called:    3
 11007 ;; This function calls:
 11008 ;;		Nothing
 11009 ;; This function is called by:
 11010 ;;		_P2PTasks
 11011 ;; This function uses a non-reentrant model
 11012 ;;
 11013                           
 11014                           	psect	text40
 11015  002C70                     __ptext40:
 11016                           	opt stack 0
 11017  002C70                     _Find_Index:
 11018                           	opt stack 22
 11019                           
 11020                           ;miwi_p2p.c: 107: uint8_t i;
 11021                           ;miwi_p2p.c: 108: for (i=0;i<conn_size;i++)
 11022                           
 11023                           ;incstack = 0
 11024  002C70  6A1A               	clrf	Find_Index@i,c
 11025  002C72  D040               	goto	l12413
 11026  002C74                     l12397:
 11027                           
 11028                           ;miwi_p2p.c: 109: {
 11029                           ;miwi_p2p.c: 110: if (ConnectionTable[i].status.bits.isValid)
 11030  002C74  501A               	movf	Find_Index@i,w,c
 11031  002C76  0D0E               	mullw	14
 11032  002C78  0E84               	movlw	low (_ConnectionTable+12)
 11033  002C7A  24F3               	addwf	prodl,w,c
 11034  002C7C  6ED9               	movwf	fsr2l,c
 11035  002C7E  0E02               	movlw	high (_ConnectionTable+12)
 11036  002C80  20F4               	addwfc	prodh,w,c
 11037  002C82  6EDA               	movwf	fsr2h,c
 11038  002C84  AEDF               	btfss	indf2,7,c
 11039  002C86  D035               	goto	l12411
 11040                           
 11041                           ;miwi_p2p.c: 111: {
 11042                           ;miwi_p2p.c: 112: if (DestAddr[1] == ConnectionTable[i].Address[0] && DestAddr[2] == Con
      +                          nectionTable[i].Address[1] && DestAddr[3] == ConnectionTable[i].Address[2] )
 11043  002C88  501A               	movf	Find_Index@i,w,c
 11044  002C8A  0D0E               	mullw	14
 11045  002C8C  0E7C               	movlw	low (_ConnectionTable+4)
 11046  002C8E  24F3               	addwf	prodl,w,c
 11047  002C90  6ED9               	movwf	fsr2l,c
 11048  002C92  0E02               	movlw	high (_ConnectionTable+4)
 11049  002C94  20F4               	addwfc	prodh,w,c
 11050  002C96  6EDA               	movwf	fsr2h,c
 11051  002C98  EE10 F001          	lfsr	1,1
 11052  002C9C  5016               	movf	Find_Index@DestAddr,w,c
 11053  002C9E  26E1               	addwf	fsr1l,f,c
 11054  002CA0  5017               	movf	Find_Index@DestAddr+1,w,c
 11055  002CA2  22E2               	addwfc	fsr1h,f,c
 11056  002CA4  50DE               	movf	postinc2,w,c
 11057  002CA6  18E6               	xorwf	postinc1,w,c
 11058  002CA8  E124               	bnz	l12411
 11059  002CAA  501A               	movf	Find_Index@i,w,c
 11060  002CAC  0D0E               	mullw	14
 11061  002CAE  0E7D               	movlw	low (_ConnectionTable+5)
 11062  002CB0  24F3               	addwf	prodl,w,c
 11063  002CB2  6ED9               	movwf	fsr2l,c
 11064  002CB4  0E02               	movlw	high (_ConnectionTable+5)
 11065  002CB6  20F4               	addwfc	prodh,w,c
 11066  002CB8  6EDA               	movwf	fsr2h,c
 11067  002CBA  EE10 F002          	lfsr	1,2
 11068  002CBE  5016               	movf	Find_Index@DestAddr,w,c
 11069  002CC0  26E1               	addwf	fsr1l,f,c
 11070  002CC2  5017               	movf	Find_Index@DestAddr+1,w,c
 11071  002CC4  22E2               	addwfc	fsr1h,f,c
 11072  002CC6  50DE               	movf	postinc2,w,c
 11073  002CC8  18E6               	xorwf	postinc1,w,c
 11074  002CCA  E113               	bnz	l12411
 11075  002CCC  501A               	movf	Find_Index@i,w,c
 11076  002CCE  0D0E               	mullw	14
 11077  002CD0  0E7E               	movlw	low (_ConnectionTable+6)
 11078  002CD2  24F3               	addwf	prodl,w,c
 11079  002CD4  6ED9               	movwf	fsr2l,c
 11080  002CD6  0E02               	movlw	high (_ConnectionTable+6)
 11081  002CD8  20F4               	addwfc	prodh,w,c
 11082  002CDA  6EDA               	movwf	fsr2h,c
 11083  002CDC  EE10 F003          	lfsr	1,3
 11084  002CE0  5016               	movf	Find_Index@DestAddr,w,c
 11085  002CE2  26E1               	addwf	fsr1l,f,c
 11086  002CE4  5017               	movf	Find_Index@DestAddr+1,w,c
 11087  002CE6  22E2               	addwfc	fsr1h,f,c
 11088  002CE8  50DE               	movf	postinc2,w,c
 11089  002CEA  18E6               	xorwf	postinc1,w,c
 11090  002CEC  E102               	bnz	l12411
 11091                           
 11092                           ;miwi_p2p.c: 113: {
 11093                           ;miwi_p2p.c: 114: return i;
 11094  002CEE  501A               	movf	Find_Index@i,w,c
 11095  002CF0  0012               	return	
 11096  002CF2                     l12411:
 11097  002CF2  2A1A               	incf	Find_Index@i,f,c
 11098  002CF4                     l12413:
 11099  002CF4  5047               	movf	_conn_size,w,c
 11100  002CF6  5C1A               	subwf	Find_Index@i,w,c
 11101  002CF8  E3BD               	bnc	l12397
 11102                           
 11103                           ;miwi_p2p.c: 116: }
 11104                           ;miwi_p2p.c: 118: }
 11105                           ;miwi_p2p.c: 119: }
 11106                           ;miwi_p2p.c: 120: if (i==conn_size)
 11107  002CFA  5047               	movf	_conn_size,w,c
 11108  002CFC  181A               	xorwf	Find_Index@i,w,c
 11109  002CFE  B4D8               	btfsc	status,2,c
 11110                           
 11111                           ;miwi_p2p.c: 121: {
 11112                           ;miwi_p2p.c: 122: return 0xff;
 11113  002D00  0EFF               	movlw	255
 11114  002D02  0012               	return		;funcret
 11115  002D04                     __end_of_Find_Index:
 11116                           	opt stack 0
 11117                           tblptru	equ	0xFF8
 11118                           tblptrh	equ	0xFF7
 11119                           tblptrl	equ	0xFF6
 11120                           tablat	equ	0xFF5
 11121                           prodh	equ	0xFF4
 11122                           prodl	equ	0xFF3
 11123                           intcon	equ	0xFF2
 11124                           intcon2	equ	0xFF1
 11125                           postinc0	equ	0xFEE
 11126                           wreg	equ	0xFE8
 11127                           indf1	equ	0xFE7
 11128                           postinc1	equ	0xFE6
 11129                           postdec1	equ	0xFE5
 11130                           fsr1h	equ	0xFE2
 11131                           fsr1l	equ	0xFE1
 11132                           indf2	equ	0xFDF
 11133                           postinc2	equ	0xFDE
 11134                           postdec2	equ	0xFDD
 11135                           fsr2h	equ	0xFDA
 11136                           fsr2l	equ	0xFD9
 11137                           status	equ	0xFD8
 11138                           
 11139 ;; *************** function _Find_InActiveDevices *****************
 11140 ;; Defined at:
 11141 ;;		line 2046 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11142 ;; Parameters:    Size  Location     Type
 11143 ;;		None
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;  i               1   50[BANK0 ] unsigned char 
 11146 ;; Return value:  Size  Location     Type
 11147 ;;		None               void
 11148 ;; Registers used:
 11149 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11150 ;; Tracked objects:
 11151 ;;		On entry : F/0
 11152 ;;		On exit  : F/0
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11157 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11158 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11159 ;;Total ram usage:        2 bytes
 11160 ;; Hardware stack levels used:    1
 11161 ;; Hardware stack levels required when called:   10
 11162 ;; This function calls:
 11163 ;;		_MiApp_RemoveConnection
 11164 ;; This function is called by:
 11165 ;;		_P2PTasks
 11166 ;; This function uses a non-reentrant model
 11167 ;;
 11168                           
 11169                           	psect	text41
 11170  0031CC                     __ptext41:
 11171                           	opt stack 0
 11172  0031CC                     _Find_InActiveDevices:
 11173                           	opt stack 15
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;miwi_p2p.c: 2048: uint8_t i;
 11177                           ;miwi_p2p.c: 2049: for (i=0;i<20;i++)
 11178                           
 11179                           ;incstack = 0
 11180  0031CC  6B92               	clrf	Find_InActiveDevices@i& (0+255),b
 11181  0031CE                     l12489:
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;miwi_p2p.c: 2050: {
 11185                           ;miwi_p2p.c: 2051: if (ConnectionTable[i].status.bits.isValid)
 11186  0031CE  5192               	movf	Find_InActiveDevices@i& (0+255),w,b
 11187  0031D0  0D0E               	mullw	14
 11188  0031D2  0E84               	movlw	low (_ConnectionTable+12)
 11189  0031D4  24F3               	addwf	prodl,w,c
 11190  0031D6  6ED9               	movwf	fsr2l,c
 11191  0031D8  0E02               	movlw	high (_ConnectionTable+12)
 11192  0031DA  20F4               	addwfc	prodh,w,c
 11193  0031DC  6EDA               	movwf	fsr2h,c
 11194  0031DE  AEDF               	btfss	indf2,7,c
 11195  0031E0  D01B               	goto	l12499
 11196                           
 11197                           ; BSR set to: 0
 11198                           ;miwi_p2p.c: 2052: {
 11199                           ;miwi_p2p.c: 2053: if (link_stat[i] == 0 && permanent_connections[i] != 0xFF)
 11200  0031E2  0E50               	movlw	low _link_stat
 11201  0031E4  2592               	addwf	Find_InActiveDevices@i& (0+255),w,b
 11202  0031E6  6ED9               	movwf	fsr2l,c
 11203  0031E8  6ADA               	clrf	fsr2h,c
 11204  0031EA  0E02               	movlw	high _link_stat
 11205  0031EC  22DA               	addwfc	fsr2h,f,c
 11206  0031EE  50DF               	movf	indf2,w,c
 11207  0031F0  E10C               	bnz	l12497
 11208                           
 11209                           ; BSR set to: 0
 11210  0031F2  0E64               	movlw	low _permanent_connections
 11211  0031F4  2592               	addwf	Find_InActiveDevices@i& (0+255),w,b
 11212  0031F6  6ED9               	movwf	fsr2l,c
 11213  0031F8  6ADA               	clrf	fsr2h,c
 11214  0031FA  0E02               	movlw	high _permanent_connections
 11215  0031FC  22DA               	addwfc	fsr2h,f,c
 11216  0031FE  28DE               	incf	postinc2,w,c
 11217  003200  E004               	bz	l12497
 11218                           
 11219                           ; BSR set to: 0
 11220                           ;miwi_p2p.c: 2054: {
 11221                           ;miwi_p2p.c: 2055: MiApp_RemoveConnection(i);
 11222  003202  5192               	movf	Find_InActiveDevices@i& (0+255),w,b
 11223  003204  ECCC  F012         	call	_MiApp_RemoveConnection
 11224                           
 11225                           ;miwi_p2p.c: 2056: }
 11226  003208  D007               	goto	l12499
 11227  00320A                     l12497:
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;miwi_p2p.c: 2057: else
 11231                           ;miwi_p2p.c: 2058: {
 11232                           ;miwi_p2p.c: 2059: link_stat[i] = 0;
 11233  00320A  0E50               	movlw	low _link_stat
 11234  00320C  2592               	addwf	Find_InActiveDevices@i& (0+255),w,b
 11235  00320E  6ED9               	movwf	fsr2l,c
 11236  003210  6ADA               	clrf	fsr2h,c
 11237  003212  0E02               	movlw	high _link_stat
 11238  003214  22DA               	addwfc	fsr2h,f,c
 11239  003216  6ADF               	clrf	indf2,c
 11240  003218                     l12499:
 11241  003218  0100               	movlb	0	; () banked
 11242  00321A  2B92               	incf	Find_InActiveDevices@i& (0+255),f,b
 11243                           
 11244                           ; BSR set to: 0
 11245  00321C  0E13               	movlw	19
 11246  00321E  6592               	cpfsgt	Find_InActiveDevices@i& (0+255),b
 11247  003220  D7D6               	goto	l12489
 11248  003222  0C13               	retlw	19
 11249  003224                     __end_of_Find_InActiveDevices:
 11250                           	opt stack 0
 11251                           tblptru	equ	0xFF8
 11252                           tblptrh	equ	0xFF7
 11253                           tblptrl	equ	0xFF6
 11254                           tablat	equ	0xFF5
 11255                           prodh	equ	0xFF4
 11256                           prodl	equ	0xFF3
 11257                           intcon	equ	0xFF2
 11258                           intcon2	equ	0xFF1
 11259                           postinc0	equ	0xFEE
 11260                           wreg	equ	0xFE8
 11261                           indf1	equ	0xFE7
 11262                           postinc1	equ	0xFE6
 11263                           postdec1	equ	0xFE5
 11264                           fsr1h	equ	0xFE2
 11265                           fsr1l	equ	0xFE1
 11266                           indf2	equ	0xFDF
 11267                           postinc2	equ	0xFDE
 11268                           postdec2	equ	0xFDD
 11269                           fsr2h	equ	0xFDA
 11270                           fsr2l	equ	0xFD9
 11271                           status	equ	0xFD8
 11272                           
 11273 ;; *************** function _MiApp_RemoveConnection *****************
 11274 ;; Defined at:
 11275 ;;		line 2877 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;  ConnectionIn    1    wreg     unsigned char 
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;  ConnectionIn    1   47[BANK0 ] unsigned char 
 11280 ;;  j               2   43[BANK0 ] unsigned int 
 11281 ;;  j               2   45[BANK0 ] unsigned int 
 11282 ;;  i               1   48[BANK0 ] unsigned char 
 11283 ;; Return value:  Size  Location     Type
 11284 ;;		None               void
 11285 ;; Registers used:
 11286 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11287 ;; Tracked objects:
 11288 ;;		On entry : F/0
 11289 ;;		On exit  : 0/0
 11290 ;;		Unchanged: 0/0
 11291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11293 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11295 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11296 ;;Total ram usage:        6 bytes
 11297 ;; Hardware stack levels used:    1
 11298 ;; Hardware stack levels required when called:    9
 11299 ;; This function calls:
 11300 ;;		_EEPROM_Write
 11301 ;;		_SendPacket
 11302 ;; This function is called by:
 11303 ;;		_Find_InActiveDevices
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307                           	psect	text42
 11308  002598                     __ptext42:
 11309                           	opt stack 0
 11310  002598                     _MiApp_RemoveConnection:
 11311                           	opt stack 15
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;incstack = 0
 11315                           ;MiApp_RemoveConnection@ConnectionIndex stored from wreg
 11316  002598  6F8F               	movwf	MiApp_RemoveConnection@ConnectionIndex& (0+255),b
 11317                           
 11318                           ;miwi_p2p.c: 2879: if( ConnectionIndex == 0xFF )
 11319  00259A  0100               	movlb	0	; () banked
 11320  00259C  298F               	incf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11321  00259E  E14F               	bnz	l12113
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;miwi_p2p.c: 2880: {
 11325                           ;miwi_p2p.c: 2881: uint8_t i;
 11326                           ;miwi_p2p.c: 2882: for(i = 0; i < 20; i++)
 11327  0025A0  6B90               	clrf	MiApp_RemoveConnection@i& (0+255),b
 11328  0025A2                     l12085:
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;miwi_p2p.c: 2883: {
 11332                           ;miwi_p2p.c: 2884: uint16_t j;
 11333                           ;miwi_p2p.c: 2885: if( ConnectionTable[i].status.bits.isValid )
 11334  0025A2  5190               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11335  0025A4  0D0E               	mullw	14
 11336  0025A6  0E84               	movlw	low (_ConnectionTable+12)
 11337  0025A8  24F3               	addwf	prodl,w,c
 11338  0025AA  6ED9               	movwf	fsr2l,c
 11339  0025AC  0E02               	movlw	high (_ConnectionTable+12)
 11340  0025AE  20F4               	addwfc	prodh,w,c
 11341  0025B0  6EDA               	movwf	fsr2h,c
 11342  0025B2  AEDF               	btfss	indf2,7,c
 11343  0025B4  D024               	goto	l12105
 11344                           
 11345                           ; BSR set to: 0
 11346                           ;miwi_p2p.c: 2886: {
 11347                           ;miwi_p2p.c: 2887: {TxData = 0;};
 11348  0025B6  6BE2               	clrf	_TxData& (0+255),b
 11349                           
 11350                           ; BSR set to: 0
 11351                           ;miwi_p2p.c: 2888: TxBuffer[TxData++] = 0x82;
 11352  0025B8  0E96               	movlw	low _TxBuffer
 11353  0025BA  25E2               	addwf	_TxData& (0+255),w,b
 11354  0025BC  6ED9               	movwf	fsr2l,c
 11355  0025BE  6ADA               	clrf	fsr2h,c
 11356  0025C0  0E01               	movlw	high _TxBuffer
 11357  0025C2  22DA               	addwfc	fsr2h,f,c
 11358  0025C4  0E82               	movlw	130
 11359  0025C6  6EDF               	movwf	indf2,c
 11360                           
 11361                           ; BSR set to: 0
 11362  0025C8  2BE2               	incf	_TxData& (0+255),f,b
 11363                           
 11364                           ; BSR set to: 0
 11365                           ;miwi_p2p.c: 2890: SendPacket(0, myPANID, ConnectionTable[i].Address, 1, 0);
 11366  0025CA  C0EA  F07B         	movff	_myPANID,SendPacket@DestinationPANID
 11367  0025CE  C0EB  F07C         	movff	_myPANID+1,SendPacket@DestinationPANID+1
 11368  0025D2  5190               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11369  0025D4  0D0E               	mullw	14
 11370  0025D6  0E7C               	movlw	low (_ConnectionTable+4)
 11371  0025D8  24F3               	addwf	prodl,w,c
 11372  0025DA  6F7D               	movwf	SendPacket@DestinationAddress& (0+255),b
 11373  0025DC  0E02               	movlw	high (_ConnectionTable+4)
 11374  0025DE  20F4               	addwfc	prodh,w,c
 11375  0025E0  6F7E               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 11376  0025E2  0E01               	movlw	1
 11377  0025E4  6F7F               	movwf	SendPacket@isCommand& (0+255),b
 11378  0025E6  0E00               	movlw	0
 11379  0025E8  6B80               	clrf	SendPacket@SecurityEnabled& (0+255),b
 11380  0025EA  ECA1  F014         	call	_SendPacket
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;miwi_p2p.c: 2894: for(j = 0; j < 0xFFF; j++) {}
 11384  0025EE  6B8B               	clrf	MiApp_RemoveConnection@j& (0+255),b
 11385  0025F0  6B8C               	clrf	(MiApp_RemoveConnection@j+1)& (0+255),b
 11386  0025F2                     l12101:
 11387                           
 11388                           ; BSR set to: 0
 11389  0025F2  4B8B               	infsnz	MiApp_RemoveConnection@j& (0+255),f,b
 11390  0025F4  2B8C               	incf	(MiApp_RemoveConnection@j+1)& (0+255),f,b
 11391                           
 11392                           ; BSR set to: 0
 11393  0025F6  298B               	incf	MiApp_RemoveConnection@j& (0+255),w,b
 11394  0025F8  0E0F               	movlw	15
 11395  0025FA  598C               	subwfb	(MiApp_RemoveConnection@j+1)& (0+255),w,b
 11396  0025FC  E3FA               	bnc	l12101
 11397  0025FE                     l12105:
 11398                           
 11399                           ; BSR set to: 0
 11400                           ;miwi_p2p.c: 2895: }
 11401                           ;miwi_p2p.c: 2896: ConnectionTable[i].status.Val = 0;
 11402  0025FE  5190               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11403  002600  0D0E               	mullw	14
 11404  002602  0E84               	movlw	low (_ConnectionTable+12)
 11405  002604  24F3               	addwf	prodl,w,c
 11406  002606  6ED9               	movwf	fsr2l,c
 11407  002608  0E02               	movlw	high (_ConnectionTable+12)
 11408  00260A  20F4               	addwfc	prodh,w,c
 11409  00260C  6EDA               	movwf	fsr2h,c
 11410  00260E  6ADF               	clrf	indf2,c
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;miwi_p2p.c: 2898: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * si
      +                          zeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 11414  002610  5190               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11415  002612  0D0E               	mullw	14
 11416  002614  0E78               	movlw	low _ConnectionTable
 11417  002616  24F3               	addwf	prodl,w,c
 11418  002618  6E17               	movwf	EEPROM_Write@dest,c
 11419  00261A  0E02               	movlw	high _ConnectionTable
 11420  00261C  20F4               	addwfc	prodh,w,c
 11421  00261E  6E18               	movwf	EEPROM_Write@dest+1,c
 11422  002620  5190               	movf	MiApp_RemoveConnection@i& (0+255),w,b
 11423  002622  0D0E               	mullw	14
 11424  002624  50F3               	movf	prodl,w,c
 11425  002626  0F04               	addlw	4
 11426  002628  6E19               	movwf	EEPROM_Write@addr,c
 11427  00262A  0E0E               	movlw	14
 11428  00262C  6E1A               	movwf	EEPROM_Write@count,c
 11429  00262E  EC4D  F017         	call	_EEPROM_Write	;wreg free
 11430  002632  0100               	movlb	0	; () banked
 11431  002634  2B90               	incf	MiApp_RemoveConnection@i& (0+255),f,b
 11432                           
 11433                           ; BSR set to: 0
 11434  002636  0E13               	movlw	19
 11435  002638  6590               	cpfsgt	MiApp_RemoveConnection@i& (0+255),b
 11436  00263A  D7B3               	goto	l12085
 11437  00263C  0C13               	retlw	19
 11438  00263E                     l12113:
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;miwi_p2p.c: 2902: else if( ConnectionTable[ConnectionIndex].status.bits.isValid )
 11442  00263E  518F               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11443  002640  0D0E               	mullw	14
 11444  002642  0E84               	movlw	low (_ConnectionTable+12)
 11445  002644  24F3               	addwf	prodl,w,c
 11446  002646  6ED9               	movwf	fsr2l,c
 11447  002648  0E02               	movlw	high (_ConnectionTable+12)
 11448  00264A  20F4               	addwfc	prodh,w,c
 11449  00264C  6EDA               	movwf	fsr2h,c
 11450  00264E  AEDF               	btfss	indf2,7,c
 11451  002650  0012               	return	
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;miwi_p2p.c: 2903: {
 11455                           ;miwi_p2p.c: 2904: uint16_t j;
 11456                           ;miwi_p2p.c: 2906: {TxData = 0;};
 11457  002652  6BE2               	clrf	_TxData& (0+255),b
 11458                           
 11459                           ; BSR set to: 0
 11460                           ;miwi_p2p.c: 2907: TxBuffer[TxData++] = 0x82;
 11461  002654  0E96               	movlw	low _TxBuffer
 11462  002656  25E2               	addwf	_TxData& (0+255),w,b
 11463  002658  6ED9               	movwf	fsr2l,c
 11464  00265A  6ADA               	clrf	fsr2h,c
 11465  00265C  0E01               	movlw	high _TxBuffer
 11466  00265E  22DA               	addwfc	fsr2h,f,c
 11467  002660  0E82               	movlw	130
 11468  002662  6EDF               	movwf	indf2,c
 11469                           
 11470                           ; BSR set to: 0
 11471  002664  2BE2               	incf	_TxData& (0+255),f,b
 11472                           
 11473                           ; BSR set to: 0
 11474                           ;miwi_p2p.c: 2909: SendPacket(0, myPANID, ConnectionTable[ConnectionIndex].Address, 1, 0
      +                          );
 11475  002666  C0EA  F07B         	movff	_myPANID,SendPacket@DestinationPANID
 11476  00266A  C0EB  F07C         	movff	_myPANID+1,SendPacket@DestinationPANID+1
 11477  00266E  518F               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11478  002670  0D0E               	mullw	14
 11479  002672  0E7C               	movlw	low (_ConnectionTable+4)
 11480  002674  24F3               	addwf	prodl,w,c
 11481  002676  6F7D               	movwf	SendPacket@DestinationAddress& (0+255),b
 11482  002678  0E02               	movlw	high (_ConnectionTable+4)
 11483  00267A  20F4               	addwfc	prodh,w,c
 11484  00267C  6F7E               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
 11485  00267E  0E01               	movlw	1
 11486  002680  6F7F               	movwf	SendPacket@isCommand& (0+255),b
 11487  002682  0E00               	movlw	0
 11488  002684  6B80               	clrf	SendPacket@SecurityEnabled& (0+255),b
 11489  002686  ECA1  F014         	call	_SendPacket
 11490                           
 11491                           ; BSR set to: 0
 11492                           ;miwi_p2p.c: 2913: for(j = 0; j < 0xFFF; j++) {}
 11493  00268A  6B8D               	clrf	MiApp_RemoveConnection@j_1690& (0+255),b
 11494  00268C  6B8E               	clrf	(MiApp_RemoveConnection@j_1690+1)& (0+255),b
 11495  00268E                     l12129:
 11496                           
 11497                           ; BSR set to: 0
 11498  00268E  4B8D               	infsnz	MiApp_RemoveConnection@j_1690& (0+255),f,b
 11499  002690  2B8E               	incf	(MiApp_RemoveConnection@j_1690+1)& (0+255),f,b
 11500                           
 11501                           ; BSR set to: 0
 11502  002692  298D               	incf	MiApp_RemoveConnection@j_1690& (0+255),w,b
 11503  002694  0E0F               	movlw	15
 11504  002696  598E               	subwfb	(MiApp_RemoveConnection@j_1690+1)& (0+255),w,b
 11505  002698  E3FA               	bnc	l12129
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;miwi_p2p.c: 2914: ConnectionTable[ConnectionIndex].status.Val = 0;
 11509  00269A  518F               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11510  00269C  0D0E               	mullw	14
 11511  00269E  0E84               	movlw	low (_ConnectionTable+12)
 11512  0026A0  24F3               	addwf	prodl,w,c
 11513  0026A2  6ED9               	movwf	fsr2l,c
 11514  0026A4  0E02               	movlw	high (_ConnectionTable+12)
 11515  0026A6  20F4               	addwfc	prodh,w,c
 11516  0026A8  6EDA               	movwf	fsr2h,c
 11517  0026AA  6ADF               	clrf	indf2,c
 11518                           
 11519                           ; BSR set to: 0
 11520                           ;miwi_p2p.c: 2916: EEPROM_Write((uint8_t *)&(ConnectionTable[ConnectionIndex]), 0x04+((u
      +                          int16_t)ConnectionIndex * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
 11521  0026AC  518F               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11522  0026AE  0D0E               	mullw	14
 11523  0026B0  0E78               	movlw	low _ConnectionTable
 11524  0026B2  24F3               	addwf	prodl,w,c
 11525  0026B4  6E17               	movwf	EEPROM_Write@dest,c
 11526  0026B6  0E02               	movlw	high _ConnectionTable
 11527  0026B8  20F4               	addwfc	prodh,w,c
 11528  0026BA  6E18               	movwf	EEPROM_Write@dest+1,c
 11529  0026BC  518F               	movf	MiApp_RemoveConnection@ConnectionIndex& (0+255),w,b
 11530  0026BE  0D0E               	mullw	14
 11531  0026C0  50F3               	movf	prodl,w,c
 11532  0026C2  0F04               	addlw	4
 11533  0026C4  6E19               	movwf	EEPROM_Write@addr,c
 11534  0026C6  0E0E               	movlw	14
 11535  0026C8  6E1A               	movwf	EEPROM_Write@count,c
 11536  0026CA  EF4D  F017         	goto	_EEPROM_Write	;wreg free
 11537  0026CE                     __end_of_MiApp_RemoveConnection:
 11538                           	opt stack 0
 11539                           tblptru	equ	0xFF8
 11540                           tblptrh	equ	0xFF7
 11541                           tblptrl	equ	0xFF6
 11542                           tablat	equ	0xFF5
 11543                           prodh	equ	0xFF4
 11544                           prodl	equ	0xFF3
 11545                           intcon	equ	0xFF2
 11546                           intcon2	equ	0xFF1
 11547                           postinc0	equ	0xFEE
 11548                           wreg	equ	0xFE8
 11549                           indf1	equ	0xFE7
 11550                           postinc1	equ	0xFE6
 11551                           postdec1	equ	0xFE5
 11552                           fsr1h	equ	0xFE2
 11553                           fsr1l	equ	0xFE1
 11554                           indf2	equ	0xFDF
 11555                           postinc2	equ	0xFDE
 11556                           postdec2	equ	0xFDD
 11557                           fsr2h	equ	0xFDA
 11558                           fsr2l	equ	0xFD9
 11559                           status	equ	0xFD8
 11560                           
 11561 ;; *************** function _SendPacket *****************
 11562 ;; Defined at:
 11563 ;;		line 1605 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;  Broadcast       1    wreg     unsigned char 
 11566 ;;  DestinationP    2   27[BANK0 ] struct .
 11567 ;;  DestinationA    2   29[BANK0 ] PTR unsigned char 
 11568 ;;		 -> NULL(0), ConnectionTable(280), RxBuffer.Payload(68), RxBuffer(138), 
 11569 ;;  isCommand       1   31[BANK0 ] unsigned char 
 11570 ;;  SecurityEnab    1   32[BANK0 ] unsigned char 
 11571 ;; Auto vars:     Size  Location     Type
 11572 ;;  Broadcast       1   35[BANK0 ] unsigned char 
 11573 ;;  tParam          7   36[BANK0 ] struct .
 11574 ;;  status          1   34[BANK0 ] unsigned char 
 11575 ;; Return value:  Size  Location     Type
 11576 ;;                  1    wreg      unsigned char 
 11577 ;; Registers used:
 11578 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11579 ;; Tracked objects:
 11580 ;;		On entry : F/0
 11581 ;;		On exit  : F/0
 11582 ;;		Unchanged: 0/0
 11583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11584 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11585 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11586 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11587 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11588 ;;Total ram usage:       16 bytes
 11589 ;; Hardware stack levels used:    1
 11590 ;; Hardware stack levels required when called:    8
 11591 ;; This function calls:
 11592 ;;		_MiMAC_SendPacket
 11593 ;; This function is called by:
 11594 ;;		_P2PTasks
 11595 ;;		_MiApp_BroadcastPacket
 11596 ;;		_MiApp_UnicastAddress
 11597 ;;		_MiApp_BroadcastConnectionTable
 11598 ;;		_MiApp_UnicastStar
 11599 ;;		_send_link_status
 11600 ;;		_SW_Ack_SrED
 11601 ;;		_MiApp_EstablishConnection
 11602 ;;		_MiApp_RemoveConnection
 11603 ;; This function uses a non-reentrant model
 11604 ;;
 11605                           
 11606                           	psect	text43
 11607  002942                     __ptext43:
 11608                           	opt stack 0
 11609  002942                     _SendPacket:
 11610                           	opt stack 16
 11611                           
 11612                           ;incstack = 0
 11613                           ;SendPacket@Broadcast stored from wreg
 11614  002942  6F83               	movwf	SendPacket@Broadcast& (0+255),b
 11615                           
 11616                           ;miwi_p2p.c: 1617: MAC_TRANS_PARAM tParam;
 11617                           ;miwi_p2p.c: 1618: bool status;
 11618                           ;miwi_p2p.c: 1620: tParam.flags.Val = 0;
 11619  002944  0100               	movlb	0	; () banked
 11620  002946  6B84               	clrf	SendPacket@tParam& (0+255),b
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;miwi_p2p.c: 1621: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
 11624  002948  517F               	movf	SendPacket@isCommand& (0+255),w,b
 11625  00294A  E003               	bz	u11240
 11626  00294C  6B81               	clrf	??_SendPacket& (0+255),b
 11627  00294E  2B81               	incf	??_SendPacket& (0+255),f,b
 11628  002950  D002               	goto	u11258
 11629  002952                     u11240:
 11630  002952  0100               	movlb	0	; () banked
 11631  002954  6B81               	clrf	??_SendPacket& (0+255),b
 11632  002956                     u11258:
 11633  002956  5184               	movf	SendPacket@tParam& (0+255),w,b
 11634  002958  1981               	xorwf	??_SendPacket& (0+255),w,b
 11635  00295A  0BFC               	andlw	-4
 11636  00295C  1981               	xorwf	??_SendPacket& (0+255),w,b
 11637  00295E  6F84               	movwf	SendPacket@tParam& (0+255),b
 11638                           
 11639                           ;miwi_p2p.c: 1622: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
 11640  002960  5183               	movf	SendPacket@Broadcast& (0+255),w,b
 11641  002962  E103               	bnz	u11260
 11642  002964  6B81               	clrf	??_SendPacket& (0+255),b
 11643  002966  2B81               	incf	??_SendPacket& (0+255),f,b
 11644  002968  D002               	goto	u11278
 11645  00296A                     u11260:
 11646  00296A  0100               	movlb	0	; () banked
 11647  00296C  6B81               	clrf	??_SendPacket& (0+255),b
 11648  00296E                     u11278:
 11649  00296E  3B81               	swapf	??_SendPacket& (0+255),f,b
 11650  002970  4781               	rlncf	??_SendPacket& (0+255),f,b
 11651  002972  5184               	movf	SendPacket@tParam& (0+255),w,b
 11652  002974  1981               	xorwf	??_SendPacket& (0+255),w,b
 11653  002976  0BDF               	andlw	-33
 11654  002978  1981               	xorwf	??_SendPacket& (0+255),w,b
 11655  00297A  6F84               	movwf	SendPacket@tParam& (0+255),b
 11656                           
 11657                           ; BSR set to: 0
 11658                           ;miwi_p2p.c: 1623: tParam.flags.bits.broadcast = Broadcast;
 11659  00297C  B183               	btfsc	SendPacket@Broadcast& (0+255),0,b
 11660  00297E  D002               	bra	u11285
 11661  002980  9584               	bcf	SendPacket@tParam& (0+255),2,b
 11662  002982  D002               	bra	u11286
 11663  002984                     u11285:
 11664  002984  0100               	movlb	0	; () banked
 11665  002986  8584               	bsf	SendPacket@tParam& (0+255),2,b
 11666  002988                     u11286:
 11667                           
 11668                           ; BSR set to: 0
 11669                           ;miwi_p2p.c: 1624: tParam.flags.bits.secEn = SecurityEnabled;
 11670  002988  B180               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
 11671  00298A  D002               	bra	u11295
 11672  00298C  9784               	bcf	SendPacket@tParam& (0+255),3,b
 11673  00298E  D002               	bra	u11296
 11674  002990                     u11295:
 11675  002990  0100               	movlb	0	; () banked
 11676  002992  8784               	bsf	SendPacket@tParam& (0+255),3,b
 11677  002994                     u11296:
 11678                           
 11679                           ; BSR set to: 0
 11680                           ;miwi_p2p.c: 1626: tParam.altSrcAddr = 0;
 11681  002994  6B88               	clrf	(SendPacket@tParam+4)& (0+255),b
 11682                           
 11683                           ; BSR set to: 0
 11684                           ;miwi_p2p.c: 1627: tParam.altDestAddr = (Broadcast) ? 1 : 0;
 11685  002996  5183               	movf	SendPacket@Broadcast& (0+255),w,b
 11686  002998  0E01               	movlw	1
 11687  00299A  B4D8               	btfsc	status,2,c
 11688  00299C  0E00               	movlw	0
 11689  00299E  6F87               	movwf	(SendPacket@tParam+3)& (0+255),b
 11690                           
 11691                           ; BSR set to: 0
 11692                           ;miwi_p2p.c: 1633: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
 11693  0029A0  5183               	movf	SendPacket@Broadcast& (0+255),w,b
 11694  0029A2  E103               	bnz	u11320
 11695  0029A4  6B81               	clrf	??_SendPacket& (0+255),b
 11696  0029A6  2B81               	incf	??_SendPacket& (0+255),f,b
 11697  0029A8  D002               	goto	u11338
 11698  0029AA                     u11320:
 11699  0029AA  0100               	movlb	0	; () banked
 11700  0029AC  6B81               	clrf	??_SendPacket& (0+255),b
 11701  0029AE                     u11338:
 11702  0029AE  3B81               	swapf	??_SendPacket& (0+255),f,b
 11703  0029B0  4781               	rlncf	??_SendPacket& (0+255),f,b
 11704  0029B2  4781               	rlncf	??_SendPacket& (0+255),f,b
 11705  0029B4  5184               	movf	SendPacket@tParam& (0+255),w,b
 11706  0029B6  1981               	xorwf	??_SendPacket& (0+255),w,b
 11707  0029B8  0BBF               	andlw	-65
 11708  0029BA  1981               	xorwf	??_SendPacket& (0+255),w,b
 11709  0029BC  6F84               	movwf	SendPacket@tParam& (0+255),b
 11710                           
 11711                           ; BSR set to: 0
 11712                           ;miwi_p2p.c: 1646: tParam.flags.bits.sourcePrsnt = 1;
 11713  0029BE  8F84               	bsf	SendPacket@tParam& (0+255),7,b
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;miwi_p2p.c: 1649: tParam.DestAddress = DestinationAddress;
 11717  0029C0  C07D  F085         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
 11718  0029C4  C07E  F086         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
 11719                           
 11720                           ; BSR set to: 0
 11721                           ;miwi_p2p.c: 1652: tParam.DestPANID.Val = DestinationPANID.Val;
 11722  0029C8  C07B  F089         	movff	SendPacket@DestinationPANID,SendPacket@tParam+5
 11723  0029CC  C07C  F08A         	movff	SendPacket@DestinationPANID+1,SendPacket@tParam+6
 11724                           
 11725                           ; BSR set to: 0
 11726                           ;miwi_p2p.c: 1655: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
 11727  0029D0  EE20  F084         	lfsr	2,SendPacket@tParam
 11728  0029D4  EE00  F060         	lfsr	0,MiMAC_SendPacket@transParam
 11729  0029D8  0E06               	movlw	6
 11730  0029DA                     u11341:
 11731  0029DA  CFDB FFEB          	movff	plusw2,plusw0
 11732  0029DE  06E8               	decf	wreg,f,c
 11733  0029E0  E2FC               	bc	u11341
 11734  0029E2  0E96               	movlw	low _TxBuffer
 11735  0029E4  6F67               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 11736  0029E6  0E01               	movlw	high _TxBuffer
 11737  0029E8  6F68               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 11738  0029EA  C0E2  F069         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 11739  0029EE  ECFC  F00C         	call	_MiMAC_SendPacket	;wreg free
 11740  0029F2  0100               	movlb	0	; () banked
 11741  0029F4  6F82               	movwf	SendPacket@status& (0+255),b
 11742                           
 11743                           ; BSR set to: 0
 11744                           ;miwi_p2p.c: 1656: TxData = 0;
 11745  0029F6  6BE2               	clrf	_TxData& (0+255),b
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;miwi_p2p.c: 1658: return status;
 11749  0029F8  5182               	movf	SendPacket@status& (0+255),w,b
 11750                           
 11751                           ; BSR set to: 0
 11752  0029FA  0012               	return		;funcret
 11753  0029FC                     __end_of_SendPacket:
 11754                           	opt stack 0
 11755                           tblptru	equ	0xFF8
 11756                           tblptrh	equ	0xFF7
 11757                           tblptrl	equ	0xFF6
 11758                           tablat	equ	0xFF5
 11759                           prodh	equ	0xFF4
 11760                           prodl	equ	0xFF3
 11761                           intcon	equ	0xFF2
 11762                           intcon2	equ	0xFF1
 11763                           postinc0	equ	0xFEE
 11764                           plusw0	equ	0xFEB
 11765                           wreg	equ	0xFE8
 11766                           indf1	equ	0xFE7
 11767                           postinc1	equ	0xFE6
 11768                           postdec1	equ	0xFE5
 11769                           fsr1h	equ	0xFE2
 11770                           fsr1l	equ	0xFE1
 11771                           indf2	equ	0xFDF
 11772                           postinc2	equ	0xFDE
 11773                           postdec2	equ	0xFDD
 11774                           plusw2	equ	0xFDB
 11775                           fsr2h	equ	0xFDA
 11776                           fsr2l	equ	0xFD9
 11777                           status	equ	0xFD8
 11778                           
 11779 ;; *************** function _MiMAC_SendPacket *****************
 11780 ;; Defined at:
 11781 ;;		line 736 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;  transParam      7    0[BANK0 ] struct .
 11784 ;;  MACPayload      2    7[BANK0 ] PTR unsigned char 
 11785 ;;		 -> TxBuffer(40), 
 11786 ;;  MACPayloadLe    1    9[BANK0 ] unsigned char 
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;  t2              4   18[BANK0 ] struct _MIWI_TICK
 11789 ;;  t1              4   14[BANK0 ] struct _MIWI_TICK
 11790 ;;  loc             1   26[BANK0 ] unsigned char 
 11791 ;;  i               1   25[BANK0 ] unsigned char 
 11792 ;;  headerLength    1   24[BANK0 ] unsigned char 
 11793 ;;  frameControl    1   23[BANK0 ] unsigned char 
 11794 ;;  IntraPAN        1   22[BANK0 ] unsigned char 
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      unsigned char 
 11797 ;; Registers used:
 11798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11799 ;; Tracked objects:
 11800 ;;		On entry : F/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11804 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11805 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11806 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11807 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11808 ;;Total ram usage:       27 bytes
 11809 ;; Hardware stack levels used:    1
 11810 ;; Hardware stack levels required when called:    7
 11811 ;; This function calls:
 11812 ;;		_InitMRF24J40
 11813 ;;		_MiMAC_SetAltAddress
 11814 ;;		_MiWi_TickGet
 11815 ;;		_PHYSetLongRAMAddr
 11816 ;;		_PHYSetShortRAMAddr
 11817 ;; This function is called by:
 11818 ;;		_SendPacket
 11819 ;; This function uses a non-reentrant model
 11820 ;;
 11821                           
 11822                           	psect	text44
 11823  0019F8                     __ptext44:
 11824                           	opt stack 0
 11825  0019F8                     _MiMAC_SendPacket:
 11826                           	opt stack 16
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;drv_mrf_miwi_24j40.c: 740: uint8_t headerLength;
 11830                           ;drv_mrf_miwi_24j40.c: 741: uint8_t loc = 0;
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;incstack = 0
 11834  0019F8  6B7A               	clrf	MiMAC_SendPacket@loc& (0+255),b
 11835                           
 11836                           ;drv_mrf_miwi_24j40.c: 744: bool IntraPAN;
 11837                           ;drv_mrf_miwi_24j40.c: 746: MIWI_TICK t1, t2;
 11838                           ;drv_mrf_miwi_24j40.c: 747: uint8_t frameControl;
 11839                           ;drv_mrf_miwi_24j40.c: 749: if (transParam.flags.bits.broadcast)
 11840  0019FA  A560               	btfss	MiMAC_SendPacket@transParam& (0+255),2,b
 11841  0019FC  D002               	goto	l11215
 11842                           
 11843                           ; BSR set to: 0
 11844                           ;drv_mrf_miwi_24j40.c: 750: {
 11845                           ;drv_mrf_miwi_24j40.c: 751: transParam.altDestAddr = 1;
 11846  0019FE  0E01               	movlw	1
 11847  001A00  6F63               	movwf	(MiMAC_SendPacket@transParam+3)& (0+255),b
 11848  001A02                     l11215:
 11849                           
 11850                           ; BSR set to: 0
 11851                           ;drv_mrf_miwi_24j40.c: 752: }
 11852                           ;drv_mrf_miwi_24j40.c: 754: if (transParam.flags.bits.secEn)
 11853  001A02  B760               	btfsc	MiMAC_SendPacket@transParam& (0+255),3,b
 11854                           
 11855                           ; BSR set to: 0
 11856                           ;drv_mrf_miwi_24j40.c: 755: {
 11857                           ;drv_mrf_miwi_24j40.c: 756: transParam.altSrcAddr = 0;
 11858  001A04  6B64               	clrf	(MiMAC_SendPacket@transParam+4)& (0+255),b
 11859                           
 11860                           ; BSR set to: 0
 11861                           ;drv_mrf_miwi_24j40.c: 757: }
 11862                           ;drv_mrf_miwi_24j40.c: 783: if (transParam.flags.bits.packetType == 0x01)
 11863  001A06  5160               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 11864  001A08  0B03               	andlw	3
 11865  001A0A  06E8               	decf	wreg,f,c
 11866  001A0C  E102               	bnz	l11223
 11867                           
 11868                           ; BSR set to: 0
 11869                           ;drv_mrf_miwi_24j40.c: 784: {
 11870                           ;drv_mrf_miwi_24j40.c: 785: frameControl = 0x03;
 11871  001A0E  0E03               	movlw	3
 11872  001A10  D004               	goto	L11
 11873  001A12                     l11223:
 11874                           
 11875                           ; BSR set to: 0
 11876  001A12  5160               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 11877  001A14  0B03               	andlw	3
 11878  001A16  E102               	bnz	l11227
 11879                           
 11880                           ; BSR set to: 0
 11881                           ;drv_mrf_miwi_24j40.c: 787: {
 11882                           ;drv_mrf_miwi_24j40.c: 788: frameControl = 0x01;
 11883  001A18  0E01               	movlw	1
 11884  001A1A                     L11:
 11885  001A1A  6F77               	movwf	MiMAC_SendPacket@frameControl& (0+255),b
 11886  001A1C                     l11227:
 11887                           
 11888                           ; BSR set to: 0
 11889                           ;drv_mrf_miwi_24j40.c: 789: }
 11890                           ;drv_mrf_miwi_24j40.c: 794: if ((transParam.DestPANID.Val == MAC_PANID.Val) && (MAC_PANI
      +                          D.Val != 0xFFFF))
 11891  001A1C  5043               	movf	_MAC_PANID,w,c
 11892  001A1E  1965               	xorwf	(MiMAC_SendPacket@transParam+5)& (0+255),w,b
 11893  001A20  E10D               	bnz	l11237
 11894  001A22  5044               	movf	_MAC_PANID+1,w,c
 11895  001A24  1966               	xorwf	(MiMAC_SendPacket@transParam+6)& (0+255),w,b
 11896  001A26  E10A               	bnz	l11237
 11897                           
 11898                           ; BSR set to: 0
 11899  001A28  2843               	incf	_MAC_PANID,w,c
 11900  001A2A  E102               	bnz	u10870
 11901  001A2C  2844               	incf	_MAC_PANID+1,w,c
 11902  001A2E  E006               	bz	l11237
 11903  001A30                     u10870:
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;drv_mrf_miwi_24j40.c: 796: {
 11907                           ;drv_mrf_miwi_24j40.c: 797: headerLength = 5;
 11908  001A30  0E05               	movlw	5
 11909  001A32  6F78               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
 11910                           
 11911                           ; BSR set to: 0
 11912                           ;drv_mrf_miwi_24j40.c: 798: frameControl |= 0x40;
 11913  001A34  8D77               	bsf	MiMAC_SendPacket@frameControl& (0+255),6,b
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;drv_mrf_miwi_24j40.c: 800: IntraPAN = 1;
 11917  001A36  0E01               	movlw	1
 11918  001A38  6F76               	movwf	MiMAC_SendPacket@IntraPAN& (0+255),b
 11919                           
 11920                           ;drv_mrf_miwi_24j40.c: 802: }
 11921  001A3A  D003               	goto	l143
 11922  001A3C                     l11237:
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;drv_mrf_miwi_24j40.c: 804: else
 11926                           ;drv_mrf_miwi_24j40.c: 805: {
 11927                           ;drv_mrf_miwi_24j40.c: 806: headerLength = 7;
 11928  001A3C  0E07               	movlw	7
 11929  001A3E  6F78               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;drv_mrf_miwi_24j40.c: 807: IntraPAN = 0;
 11933  001A40  6B76               	clrf	MiMAC_SendPacket@IntraPAN& (0+255),b
 11934  001A42                     l143:
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;drv_mrf_miwi_24j40.c: 808: }
 11938                           ;drv_mrf_miwi_24j40.c: 811: if (transParam.altDestAddr)
 11939  001A42  5163               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 11940                           
 11941                           ; BSR set to: 0
 11942                           ;drv_mrf_miwi_24j40.c: 812: {
 11943                           ;drv_mrf_miwi_24j40.c: 813: headerLength += 2;
 11944  001A44  0E02               	movlw	2
 11945  001A46  B4D8               	btfsc	status,2,c
 11946                           
 11947                           ; BSR set to: 0
 11948                           ;drv_mrf_miwi_24j40.c: 815: {
 11949                           ;drv_mrf_miwi_24j40.c: 816: headerLength += 8;
 11950  001A48  0E08               	movlw	8
 11951                           
 11952                           ;drv_mrf_miwi_24j40.c: 814: } else
 11953  001A4A  2778               	addwf	MiMAC_SendPacket@headerLength& (0+255),f,b
 11954                           
 11955                           ; BSR set to: 0
 11956                           ;drv_mrf_miwi_24j40.c: 817: }
 11957                           ;drv_mrf_miwi_24j40.c: 819: if (transParam.altSrcAddr)
 11958  001A4C  5164               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;drv_mrf_miwi_24j40.c: 820: {
 11962                           ;drv_mrf_miwi_24j40.c: 821: headerLength += 2;
 11963  001A4E  0E02               	movlw	2
 11964  001A50  B4D8               	btfsc	status,2,c
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;drv_mrf_miwi_24j40.c: 823: {
 11968                           ;drv_mrf_miwi_24j40.c: 824: headerLength += 8;
 11969  001A52  0E08               	movlw	8
 11970                           
 11971                           ;drv_mrf_miwi_24j40.c: 822: } else
 11972  001A54  2778               	addwf	MiMAC_SendPacket@headerLength& (0+255),f,b
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;drv_mrf_miwi_24j40.c: 825: }
 11976                           ;drv_mrf_miwi_24j40.c: 827: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
 11977  001A56  BB60               	btfsc	MiMAC_SendPacket@transParam& (0+255),5,b
 11978                           
 11979                           ; BSR set to: 0
 11980  001A58  B560               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 11981  001A5A  D001               	goto	l11257
 11982                           
 11983                           ; BSR set to: 0
 11984                           ;drv_mrf_miwi_24j40.c: 828: {
 11985                           ;drv_mrf_miwi_24j40.c: 829: frameControl |= 0x20;
 11986  001A5C  8B77               	bsf	MiMAC_SendPacket@frameControl& (0+255),5,b
 11987  001A5E                     l11257:
 11988                           
 11989                           ; BSR set to: 0
 11990                           ;drv_mrf_miwi_24j40.c: 830: }
 11991                           ;drv_mrf_miwi_24j40.c: 833: if (transParam.flags.bits.packetType == 0x03)
 11992  001A5E  5160               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 11993  001A60  0B03               	andlw	3
 11994  001A62  0A03               	xorlw	3
 11995  001A64  E107               	bnz	l11267
 11996                           
 11997                           ; BSR set to: 0
 11998                           ;drv_mrf_miwi_24j40.c: 834: {
 11999                           ;drv_mrf_miwi_24j40.c: 835: frameControl = 0x00;
 12000  001A66  6B77               	clrf	MiMAC_SendPacket@frameControl& (0+255),b
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;drv_mrf_miwi_24j40.c: 836: headerLength = 7;
 12004  001A68  0E07               	movlw	7
 12005  001A6A  6F78               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;drv_mrf_miwi_24j40.c: 838: IntraPAN = 0;
 12009  001A6C  6B76               	clrf	MiMAC_SendPacket@IntraPAN& (0+255),b
 12010                           
 12011                           ;drv_mrf_miwi_24j40.c: 840: transParam.altSrcAddr = 1;
 12012  001A6E  0E01               	movlw	1
 12013  001A70  6F64               	movwf	(MiMAC_SendPacket@transParam+4)& (0+255),b
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;drv_mrf_miwi_24j40.c: 841: transParam.flags.bits.ackReq = 0;
 12017  001A72  9B60               	bcf	MiMAC_SendPacket@transParam& (0+255),5,b
 12018  001A74                     l11267:
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;drv_mrf_miwi_24j40.c: 842: }
 12022                           ;drv_mrf_miwi_24j40.c: 853: PHYSetLongRAMAddr(loc++, headerLength);
 12023  001A74  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12024  001A76  6A17               	clrf	PHYSetLongRAMAddr@address,c
 12025  001A78  C078  F019         	movff	MiMAC_SendPacket@headerLength,PHYSetLongRAMAddr@value
 12026  001A7C  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12027  001A80  0100               	movlb	0	; () banked
 12028  001A82  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12029                           
 12030                           ; BSR set to: 0
 12031                           ;drv_mrf_miwi_24j40.c: 861: {
 12032                           ;drv_mrf_miwi_24j40.c: 862: PHYSetLongRAMAddr(loc++, headerLength + MACPayloadLen);
 12033  001A84  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12034  001A88  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12035  001A8A  5178               	movf	MiMAC_SendPacket@headerLength& (0+255),w,b
 12036  001A8C  2569               	addwf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 12037  001A8E  6E19               	movwf	PHYSetLongRAMAddr@value,c
 12038  001A90  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12039  001A94  0100               	movlb	0	; () banked
 12040  001A96  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12041                           
 12042                           ; BSR set to: 0
 12043                           ;drv_mrf_miwi_24j40.c: 863: }
 12044                           ;drv_mrf_miwi_24j40.c: 866: PHYSetLongRAMAddr(loc++, frameControl);
 12045  001A98  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12046  001A9C  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12047  001A9E  C077  F019         	movff	MiMAC_SendPacket@frameControl,PHYSetLongRAMAddr@value
 12048  001AA2  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12049  001AA6  0100               	movlb	0	; () banked
 12050  001AA8  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;drv_mrf_miwi_24j40.c: 869: if (transParam.flags.bits.packetType == 0x03)
 12054  001AAA  5160               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 12055  001AAC  0B03               	andlw	3
 12056  001AAE  0A03               	xorlw	3
 12057  001AB0  E112               	bnz	l11287
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;drv_mrf_miwi_24j40.c: 870: {
 12061                           ;drv_mrf_miwi_24j40.c: 871: PHYSetLongRAMAddr(loc++, 0x80);
 12062  001AB2  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12063  001AB6  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12064  001AB8  0E80               	movlw	128
 12065  001ABA  6E19               	movwf	PHYSetLongRAMAddr@value,c
 12066  001ABC  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12067  001AC0  0100               	movlb	0	; () banked
 12068  001AC2  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;drv_mrf_miwi_24j40.c: 873: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 12072  001AC4  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12073  001AC8  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12074  001ACA  C03E  F019         	movff	_IEEESeqNum,PHYSetLongRAMAddr@value
 12075  001ACE  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12076  001AD2  2A3E               	incf	_IEEESeqNum,f,c
 12077  001AD4  D077               	goto	L15
 12078  001AD6                     l11287:
 12079                           
 12080                           ; BSR set to: 0
 12081                           ;drv_mrf_miwi_24j40.c: 875: {
 12082                           ;drv_mrf_miwi_24j40.c: 876: if (transParam.altDestAddr && transParam.altSrcAddr)
 12083  001AD6  5163               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 12084  001AD8  E00C               	bz	l11295
 12085                           
 12086                           ; BSR set to: 0
 12087  001ADA  5164               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 12088  001ADC  E00A               	bz	l11295
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;drv_mrf_miwi_24j40.c: 877: {
 12092                           ;drv_mrf_miwi_24j40.c: 878: PHYSetLongRAMAddr(loc++, 0x88);
 12093  001ADE  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12094  001AE2  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12095  001AE4  0E88               	movlw	136
 12096  001AE6  6E19               	movwf	PHYSetLongRAMAddr@value,c
 12097  001AE8  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12098  001AEC                     l11293:
 12099  001AEC  0100               	movlb	0	; () banked
 12100  001AEE  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12101                           
 12102                           ;drv_mrf_miwi_24j40.c: 879: } else if (transParam.altDestAddr && transParam.altSrcAddr =
      +                          = 0)
 12103  001AF0  D020               	goto	l11315
 12104  001AF2                     l11295:
 12105                           
 12106                           ; BSR set to: 0
 12107  001AF2  5163               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 12108  001AF4  E00A               	bz	l11303
 12109                           
 12110                           ; BSR set to: 0
 12111  001AF6  5164               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 12112  001AF8  E108               	bnz	l11303
 12113                           
 12114                           ; BSR set to: 0
 12115                           ;drv_mrf_miwi_24j40.c: 880: {
 12116                           ;drv_mrf_miwi_24j40.c: 881: PHYSetLongRAMAddr(loc++, 0xC8);
 12117  001AFA  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12118  001AFE  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12119  001B00  0EC8               	movlw	200
 12120  001B02  6E19               	movwf	PHYSetLongRAMAddr@value,c
 12121  001B04  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12122  001B08  D7F1               	goto	l11293
 12123  001B0A                     l11303:
 12124                           
 12125                           ; BSR set to: 0
 12126  001B0A  5163               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 12127  001B0C  E10A               	bnz	l11311
 12128                           
 12129                           ; BSR set to: 0
 12130  001B0E  0564               	decf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 12131  001B10  E108               	bnz	l11311
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;drv_mrf_miwi_24j40.c: 883: {
 12135                           ;drv_mrf_miwi_24j40.c: 884: PHYSetLongRAMAddr(loc++, 0x8C);
 12136  001B12  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12137  001B16  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12138  001B18  0E8C               	movlw	140
 12139  001B1A  6E19               	movwf	PHYSetLongRAMAddr@value,c
 12140  001B1C  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12141  001B20  D7E5               	goto	l11293
 12142  001B22                     l11311:
 12143                           
 12144                           ; BSR set to: 0
 12145                           ;drv_mrf_miwi_24j40.c: 886: {
 12146                           ;drv_mrf_miwi_24j40.c: 887: PHYSetLongRAMAddr(loc++, 0xCC);
 12147  001B22  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12148  001B26  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12149  001B28  0ECC               	movlw	204
 12150  001B2A  6E19               	movwf	PHYSetLongRAMAddr@value,c
 12151  001B2C  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12152  001B30  D7DD               	goto	l11293
 12153  001B32                     l11315:
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;drv_mrf_miwi_24j40.c: 888: }
 12157                           ;drv_mrf_miwi_24j40.c: 891: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 12158  001B32  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12159  001B36  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12160  001B38  C03E  F019         	movff	_IEEESeqNum,PHYSetLongRAMAddr@value
 12161  001B3C  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12162  001B40  2A3E               	incf	_IEEESeqNum,f,c
 12163  001B42  0100               	movlb	0	; () banked
 12164  001B44  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;drv_mrf_miwi_24j40.c: 894: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[0]);
 12168  001B46  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12169  001B4A  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12170  001B4C  C065  F019         	movff	MiMAC_SendPacket@transParam+5,PHYSetLongRAMAddr@value
 12171  001B50  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12172  001B54  0100               	movlb	0	; () banked
 12173  001B56  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12174                           
 12175                           ;drv_mrf_miwi_24j40.c: 895: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[1]);
 12176  001B58  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12177  001B5C  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12178  001B5E  C066  F019         	movff	MiMAC_SendPacket@transParam+6,PHYSetLongRAMAddr@value
 12179  001B62  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12180  001B66  0100               	movlb	0	; () banked
 12181  001B68  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12182                           
 12183                           ; BSR set to: 0
 12184                           ;drv_mrf_miwi_24j40.c: 898: if (transParam.flags.bits.broadcast)
 12185  001B6A  A560               	btfss	MiMAC_SendPacket@transParam& (0+255),2,b
 12186  001B6C  D00F               	goto	l11331
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;drv_mrf_miwi_24j40.c: 899: {
 12190                           ;drv_mrf_miwi_24j40.c: 900: PHYSetLongRAMAddr(loc++, 0xFF);
 12191  001B6E  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12192  001B72  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12193  001B74  6819               	setf	PHYSetLongRAMAddr@value,c
 12194  001B76  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12195  001B7A  0100               	movlb	0	; () banked
 12196  001B7C  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;drv_mrf_miwi_24j40.c: 901: PHYSetLongRAMAddr(loc++, 0xFF);
 12200  001B7E  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12201  001B82  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12202  001B84  6819               	setf	PHYSetLongRAMAddr@value,c
 12203  001B86  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12204  001B8A  D01C               	goto	L15
 12205  001B8C                     l11331:
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;drv_mrf_miwi_24j40.c: 903: {
 12209                           ;drv_mrf_miwi_24j40.c: 904: if (transParam.altDestAddr)
 12210  001B8C  5163               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 12211  001B8E  E01D               	bz	l160
 12212                           
 12213                           ; BSR set to: 0
 12214                           ;drv_mrf_miwi_24j40.c: 905: {
 12215                           ;drv_mrf_miwi_24j40.c: 906: PHYSetLongRAMAddr(loc++, transParam.DestAddress[0]);
 12216  001B90  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12217  001B94  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12218  001B96  C061  FFD9         	movff	MiMAC_SendPacket@transParam+1,fsr2l
 12219  001B9A  C062  FFDA         	movff	MiMAC_SendPacket@transParam+2,fsr2h
 12220  001B9E  50DF               	movf	indf2,w,c
 12221  001BA0  6E19               	movwf	PHYSetLongRAMAddr@value,c
 12222  001BA2  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12223  001BA6  0100               	movlb	0	; () banked
 12224  001BA8  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12225                           
 12226                           ; BSR set to: 0
 12227                           ;drv_mrf_miwi_24j40.c: 907: PHYSetLongRAMAddr(loc++, transParam.DestAddress[1]);
 12228  001BAA  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12229  001BAE  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12230  001BB0  EE20 F001          	lfsr	2,1
 12231  001BB4  5161               	movf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 12232  001BB6  26D9               	addwf	fsr2l,f,c
 12233  001BB8  5162               	movf	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 12234  001BBA  22DA               	addwfc	fsr2h,f,c
 12235  001BBC  50DF               	movf	indf2,w,c
 12236  001BBE  6E19               	movwf	PHYSetLongRAMAddr@value,c
 12237  001BC0  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12238  001BC4                     L15:
 12239  001BC4  0100               	movlb	0	; () banked
 12240  001BC6  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12241                           
 12242                           ;drv_mrf_miwi_24j40.c: 908: } else
 12243  001BC8  D014               	goto	l11351
 12244  001BCA                     l160:
 12245                           
 12246                           ; BSR set to: 0
 12247                           ;drv_mrf_miwi_24j40.c: 909: {
 12248                           ;drv_mrf_miwi_24j40.c: 910: for (i = 0; i < 8; i++)
 12249  001BCA  6B79               	clrf	MiMAC_SendPacket@i& (0+255),b
 12250  001BCC                     l11343:
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;drv_mrf_miwi_24j40.c: 911: {
 12254                           ;drv_mrf_miwi_24j40.c: 912: PHYSetLongRAMAddr(loc++, transParam.DestAddress[i]);
 12255  001BCC  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12256  001BD0  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12257  001BD2  5179               	movf	MiMAC_SendPacket@i& (0+255),w,b
 12258  001BD4  2561               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 12259  001BD6  6ED9               	movwf	fsr2l,c
 12260  001BD8  0E00               	movlw	0
 12261  001BDA  2162               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 12262  001BDC  6EDA               	movwf	fsr2h,c
 12263  001BDE  50DF               	movf	indf2,w,c
 12264  001BE0  6E19               	movwf	PHYSetLongRAMAddr@value,c
 12265  001BE2  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12266  001BE6  0100               	movlb	0	; () banked
 12267  001BE8  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12268                           
 12269                           ; BSR set to: 0
 12270  001BEA  2B79               	incf	MiMAC_SendPacket@i& (0+255),f,b
 12271                           
 12272                           ; BSR set to: 0
 12273  001BEC  0E07               	movlw	7
 12274  001BEE  6579               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 12275  001BF0  D7ED               	goto	l11343
 12276  001BF2                     l11351:
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;drv_mrf_miwi_24j40.c: 913: }
 12280                           ;drv_mrf_miwi_24j40.c: 914: }
 12281                           ;drv_mrf_miwi_24j40.c: 915: }
 12282                           ;drv_mrf_miwi_24j40.c: 916: }
 12283                           ;drv_mrf_miwi_24j40.c: 920: if (IntraPAN == 0)
 12284  001BF2  5176               	movf	MiMAC_SendPacket@IntraPAN& (0+255),w,b
 12285  001BF4  E112               	bnz	l11359
 12286                           
 12287                           ; BSR set to: 0
 12288                           ;drv_mrf_miwi_24j40.c: 921: {
 12289                           ;drv_mrf_miwi_24j40.c: 922: PHYSetLongRAMAddr(loc++, MAC_PANID.v[0]);
 12290  001BF6  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12291  001BFA  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12292  001BFC  C043  F019         	movff	_MAC_PANID,PHYSetLongRAMAddr@value
 12293  001C00  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12294  001C04  0100               	movlb	0	; () banked
 12295  001C06  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12296                           
 12297                           ; BSR set to: 0
 12298                           ;drv_mrf_miwi_24j40.c: 923: PHYSetLongRAMAddr(loc++, MAC_PANID.v[1]);
 12299  001C08  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12300  001C0C  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12301  001C0E  C044  F019         	movff	_MAC_PANID+1,PHYSetLongRAMAddr@value
 12302  001C12  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12303  001C16  0100               	movlb	0	; () banked
 12304  001C18  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12305  001C1A                     l11359:
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;drv_mrf_miwi_24j40.c: 924: }
 12309                           ;drv_mrf_miwi_24j40.c: 928: if (transParam.altSrcAddr)
 12310  001C1A  5164               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 12311  001C1C  E013               	bz	l165
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;drv_mrf_miwi_24j40.c: 929: {
 12315                           ;drv_mrf_miwi_24j40.c: 930: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[0]);
 12316  001C1E  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12317  001C22  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12318  001C24  C045  F019         	movff	_myNetworkAddress,PHYSetLongRAMAddr@value
 12319  001C28  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12320  001C2C  0100               	movlb	0	; () banked
 12321  001C2E  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12322                           
 12323                           ; BSR set to: 0
 12324                           ;drv_mrf_miwi_24j40.c: 931: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[1]);
 12325  001C30  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12326  001C34  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12327  001C36  C046  F019         	movff	_myNetworkAddress+1,PHYSetLongRAMAddr@value
 12328  001C3A  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12329  001C3E  0100               	movlb	0	; () banked
 12330  001C40  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12331                           
 12332                           ;drv_mrf_miwi_24j40.c: 932: } else
 12333  001C42  D014               	goto	l166
 12334  001C44                     l165:
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;drv_mrf_miwi_24j40.c: 933: {
 12338                           ;drv_mrf_miwi_24j40.c: 934: for (i = 0; i < 8; i++)
 12339  001C44  6B79               	clrf	MiMAC_SendPacket@i& (0+255),b
 12340  001C46                     l11371:
 12341                           
 12342                           ; BSR set to: 0
 12343                           ;drv_mrf_miwi_24j40.c: 935: {
 12344                           ;drv_mrf_miwi_24j40.c: 936: PHYSetLongRAMAddr(loc++, MACInitParams.PAddress[i]);
 12345  001C46  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12346  001C4A  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12347  001C4C  5179               	movf	MiMAC_SendPacket@i& (0+255),w,b
 12348  001C4E  25D3               	addwf	(_MACInitParams+1)& (0+255),w,b
 12349  001C50  6ED9               	movwf	fsr2l,c
 12350  001C52  0E00               	movlw	0
 12351  001C54  21D4               	addwfc	(_MACInitParams+2)& (0+255),w,b
 12352  001C56  6EDA               	movwf	fsr2h,c
 12353  001C58  50DF               	movf	indf2,w,c
 12354  001C5A  6E19               	movwf	PHYSetLongRAMAddr@value,c
 12355  001C5C  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12356  001C60  0100               	movlb	0	; () banked
 12357  001C62  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12358                           
 12359                           ; BSR set to: 0
 12360  001C64  2B79               	incf	MiMAC_SendPacket@i& (0+255),f,b
 12361                           
 12362                           ; BSR set to: 0
 12363  001C66  0E07               	movlw	7
 12364  001C68  6579               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 12365  001C6A  D7ED               	goto	l11371
 12366  001C6C                     l166:
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;drv_mrf_miwi_24j40.c: 937: }
 12370                           ;drv_mrf_miwi_24j40.c: 938: }
 12371                           ;drv_mrf_miwi_24j40.c: 964: for (i = 0; i < MACPayloadLen; i++)
 12372  001C6C  6B79               	clrf	MiMAC_SendPacket@i& (0+255),b
 12373  001C6E  D010               	goto	l11385
 12374  001C70                     l11379:
 12375                           
 12376                           ; BSR set to: 0
 12377                           ;drv_mrf_miwi_24j40.c: 965: {
 12378                           ;drv_mrf_miwi_24j40.c: 966: PHYSetLongRAMAddr(loc++, MACPayload[i]);
 12379  001C70  C07A  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 12380  001C74  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 12381  001C76  5179               	movf	MiMAC_SendPacket@i& (0+255),w,b
 12382  001C78  2567               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 12383  001C7A  6ED9               	movwf	fsr2l,c
 12384  001C7C  0E00               	movlw	0
 12385  001C7E  2168               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 12386  001C80  6EDA               	movwf	fsr2h,c
 12387  001C82  50DF               	movf	indf2,w,c
 12388  001C84  6E19               	movwf	PHYSetLongRAMAddr@value,c
 12389  001C86  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 12390  001C8A  0100               	movlb	0	; () banked
 12391  001C8C  2B7A               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 12392                           
 12393                           ; BSR set to: 0
 12394  001C8E  2B79               	incf	MiMAC_SendPacket@i& (0+255),f,b
 12395  001C90                     l11385:
 12396                           
 12397                           ; BSR set to: 0
 12398  001C90  5169               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 12399  001C92  5D79               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 12400  001C94  E3ED               	bnc	l11379
 12401                           
 12402                           ; BSR set to: 0
 12403                           ;drv_mrf_miwi_24j40.c: 967: }
 12404                           ;drv_mrf_miwi_24j40.c: 969: MRF24J40Status.bits.TX_BUSY = 1;
 12405  001C96  803F               	bsf	_MRF24J40Status,0,c	;volatile
 12406                           
 12407                           ;drv_mrf_miwi_24j40.c: 972: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
 12408  001C98  BB60               	btfsc	MiMAC_SendPacket@transParam& (0+255),5,b
 12409                           
 12410                           ; BSR set to: 0
 12411  001C9A  B560               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 12412  001C9C  D004               	goto	l11393
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;drv_mrf_miwi_24j40.c: 973: {
 12416                           ;drv_mrf_miwi_24j40.c: 974: i = 0x05;
 12417  001C9E  0E05               	movlw	5
 12418  001CA0  6F79               	movwf	MiMAC_SendPacket@i& (0+255),b
 12419                           
 12420                           ; BSR set to: 0
 12421                           ;drv_mrf_miwi_24j40.c: 976: MRF24J40Status.bits.TX_PENDING_ACK = 1;
 12422  001CA2  823F               	bsf	_MRF24J40Status,1,c	;volatile
 12423                           
 12424                           ;drv_mrf_miwi_24j40.c: 978: } else
 12425  001CA4  D003               	goto	l11397
 12426  001CA6                     l11393:
 12427                           
 12428                           ; BSR set to: 0
 12429                           ;drv_mrf_miwi_24j40.c: 979: {
 12430                           ;drv_mrf_miwi_24j40.c: 980: i = 0x01;
 12431  001CA6  0E01               	movlw	1
 12432  001CA8  6F79               	movwf	MiMAC_SendPacket@i& (0+255),b
 12433                           
 12434                           ; BSR set to: 0
 12435                           ;drv_mrf_miwi_24j40.c: 982: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 12436  001CAA  923F               	bcf	_MRF24J40Status,1,c	;volatile
 12437  001CAC                     l11397:
 12438                           
 12439                           ; BSR set to: 0
 12440                           ;drv_mrf_miwi_24j40.c: 984: }
 12441                           ;drv_mrf_miwi_24j40.c: 988: PHYSetShortRAMAddr((0x37), i);
 12442  001CAC  C079  F017         	movff	MiMAC_SendPacket@i,PHYSetShortRAMAddr@value
 12443  001CB0  0E37               	movlw	55
 12444  001CB2  EC48  F01C         	call	_PHYSetShortRAMAddr
 12445                           
 12446                           ;drv_mrf_miwi_24j40.c: 991: t1 = MiWi_TickGet();
 12447  001CB6  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
 12448  001CBA  C016  F06E         	movff	?_MiWi_TickGet,MiMAC_SendPacket@t1
 12449  001CBE  C017  F06F         	movff	?_MiWi_TickGet+1,MiMAC_SendPacket@t1+1
 12450  001CC2  C018  F070         	movff	?_MiWi_TickGet+2,MiMAC_SendPacket@t1+2
 12451  001CC6  C019  F071         	movff	?_MiWi_TickGet+3,MiMAC_SendPacket@t1+3
 12452  001CCA                     l11401:
 12453                           
 12454                           ;drv_mrf_miwi_24j40.c: 993: {
 12455                           ;drv_mrf_miwi_24j40.c: 994: if (PORTBbits.RB0 == 0)
 12456  001CCA  A081               	btfss	3969,0,c	;volatile
 12457                           
 12458                           ;drv_mrf_miwi_24j40.c: 995: {
 12459                           ;drv_mrf_miwi_24j40.c: 996: INTCONbits.INT0IF = 1;
 12460  001CCC  82F2               	bsf	intcon,1,c	;volatile
 12461                           
 12462                           ;drv_mrf_miwi_24j40.c: 997: }
 12463                           ;drv_mrf_miwi_24j40.c: 998: if (MRF24J40Status.bits.TX_BUSY == 0)
 12464  001CCE  B03F               	btfsc	_MRF24J40Status,0,c	;volatile
 12465  001CD0  D004               	goto	l11413
 12466                           
 12467                           ;drv_mrf_miwi_24j40.c: 999: {
 12468                           ;drv_mrf_miwi_24j40.c: 1000: if (MRF24J40Status.bits.TX_FAIL)
 12469  001CD2  A43F               	btfss	_MRF24J40Status,2,c	;volatile
 12470  001CD4  0C01               	retlw	1
 12471                           
 12472                           ;drv_mrf_miwi_24j40.c: 1001: {
 12473                           ;drv_mrf_miwi_24j40.c: 1002: MRF24J40Status.bits.TX_FAIL = 0;
 12474  001CD6  943F               	bcf	_MRF24J40Status,2,c	;volatile
 12475                           
 12476                           ;drv_mrf_miwi_24j40.c: 1003: return 0;
 12477  001CD8  0C00               	retlw	0
 12478  001CDA                     l11413:
 12479                           
 12480                           ;drv_mrf_miwi_24j40.c: 1006: }
 12481                           ;drv_mrf_miwi_24j40.c: 1007: t2 = MiWi_TickGet();
 12482  001CDA  EC2D  F01A         	call	_MiWi_TickGet	;wreg free
 12483  001CDE  C016  F072         	movff	?_MiWi_TickGet,MiMAC_SendPacket@t2
 12484  001CE2  C017  F073         	movff	?_MiWi_TickGet+1,MiMAC_SendPacket@t2+1
 12485  001CE6  C018  F074         	movff	?_MiWi_TickGet+2,MiMAC_SendPacket@t2+2
 12486  001CEA  C019  F075         	movff	?_MiWi_TickGet+3,MiMAC_SendPacket@t2+3
 12487                           
 12488                           ;drv_mrf_miwi_24j40.c: 1008: if ((t2.Val - t1.Val) > (((uint32_t)(16000000)/32)/25))
 12489  001CEE  0100               	movlb	0	; () banked
 12490  001CF0  516E               	movf	MiMAC_SendPacket@t1& (0+255),w,b
 12491  001CF2  5D72               	subwf	MiMAC_SendPacket@t2& (0+255),w,b
 12492  001CF4  6F6A               	movwf	??_MiMAC_SendPacket& (0+255),b
 12493  001CF6  516F               	movf	(MiMAC_SendPacket@t1+1)& (0+255),w,b
 12494  001CF8  5973               	subwfb	(MiMAC_SendPacket@t2+1)& (0+255),w,b
 12495  001CFA  6F6B               	movwf	(??_MiMAC_SendPacket+1)& (0+255),b
 12496  001CFC  5170               	movf	(MiMAC_SendPacket@t1+2)& (0+255),w,b
 12497  001CFE  5974               	subwfb	(MiMAC_SendPacket@t2+2)& (0+255),w,b
 12498  001D00  6F6C               	movwf	(??_MiMAC_SendPacket+2)& (0+255),b
 12499  001D02  5171               	movf	(MiMAC_SendPacket@t1+3)& (0+255),w,b
 12500  001D04  5975               	subwfb	(MiMAC_SendPacket@t2+3)& (0+255),w,b
 12501  001D06  6F6D               	movwf	(??_MiMAC_SendPacket+3)& (0+255),b
 12502  001D08  516D               	movf	(??_MiMAC_SendPacket+3)& (0+255),w,b
 12503  001D0A  116C               	iorwf	(??_MiMAC_SendPacket+2)& (0+255),w,b
 12504  001D0C  E105               	bnz	u11120
 12505  001D0E  0E21               	movlw	33
 12506  001D10  5D6A               	subwf	??_MiMAC_SendPacket& (0+255),w,b
 12507  001D12  0E4E               	movlw	78
 12508  001D14  596B               	subwfb	(??_MiMAC_SendPacket+1)& (0+255),w,b
 12509  001D16  E3D9               	bnc	l11401
 12510  001D18                     u11120:
 12511                           
 12512                           ; BSR set to: 0
 12513                           ;drv_mrf_miwi_24j40.c: 1009: {
 12514                           ;drv_mrf_miwi_24j40.c: 1010: InitMRF24J40();
 12515  001D18  ECA0  F00F         	call	_InitMRF24J40	;wreg free
 12516                           
 12517                           ;drv_mrf_miwi_24j40.c: 1011: MiMAC_SetAltAddress(myNetworkAddress.v, MAC_PANID.v);
 12518  001D1C  0E43               	movlw	low _MAC_PANID
 12519  001D1E  6E1A               	movwf	MiMAC_SetAltAddress@PANID,c
 12520  001D20  0E45               	movlw	_myNetworkAddress& (0+255)
 12521  001D22  EC12  F019         	call	_MiMAC_SetAltAddress
 12522                           
 12523                           ;drv_mrf_miwi_24j40.c: 1012: MRF24J40Status.bits.TX_BUSY = 0;
 12524  001D26  903F               	bcf	_MRF24J40Status,0,c	;volatile
 12525  001D28  0C00               	retlw	0
 12526  001D2A                     __end_of_MiMAC_SendPacket:
 12527                           	opt stack 0
 12528                           tblptru	equ	0xFF8
 12529                           tblptrh	equ	0xFF7
 12530                           tblptrl	equ	0xFF6
 12531                           tablat	equ	0xFF5
 12532                           prodh	equ	0xFF4
 12533                           prodl	equ	0xFF3
 12534                           intcon	equ	0xFF2
 12535                           intcon2	equ	0xFF1
 12536                           postinc0	equ	0xFEE
 12537                           plusw0	equ	0xFEB
 12538                           wreg	equ	0xFE8
 12539                           indf1	equ	0xFE7
 12540                           postinc1	equ	0xFE6
 12541                           postdec1	equ	0xFE5
 12542                           fsr1h	equ	0xFE2
 12543                           fsr1l	equ	0xFE1
 12544                           indf2	equ	0xFDF
 12545                           postinc2	equ	0xFDE
 12546                           postdec2	equ	0xFDD
 12547                           plusw2	equ	0xFDB
 12548                           fsr2h	equ	0xFDA
 12549                           fsr2l	equ	0xFD9
 12550                           status	equ	0xFD8
 12551                           
 12552 ;; *************** function _MiWi_TickGet *****************
 12553 ;; Defined at:
 12554 ;;		line 114 in file "../src/system_config/miwikit_pic18f46j50_24j40/symbol.c"
 12555 ;; Parameters:    Size  Location     Type
 12556 ;;		None
 12557 ;; Auto vars:     Size  Location     Type
 12558 ;;  currentTime     4   27[COMRAM] struct _MIWI_TICK
 12559 ;;  failureCount    1   26[COMRAM] unsigned char 
 12560 ;; Return value:  Size  Location     Type
 12561 ;;                  4   21[COMRAM] struct _MIWI_TICK
 12562 ;; Registers used:
 12563 ;;		wreg, status,2, status,0
 12564 ;; Tracked objects:
 12565 ;;		On entry : 0/1
 12566 ;;		On exit  : 0/0
 12567 ;;		Unchanged: 0/0
 12568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12570 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12572 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12573 ;;Total ram usage:       10 bytes
 12574 ;; Hardware stack levels used:    1
 12575 ;; Hardware stack levels required when called:    3
 12576 ;; This function calls:
 12577 ;;		Nothing
 12578 ;; This function is called by:
 12579 ;;		_MiMAC_SendPacket
 12580 ;;		_P2PTasks
 12581 ;;		_MiApp_UnicastStar
 12582 ;;		_MiApp_StartConnection
 12583 ;;		_MiApp_EstablishConnection
 12584 ;;		_ButtonPressed
 12585 ;;		_run_star_demo
 12586 ;; This function uses a non-reentrant model
 12587 ;;
 12588                           
 12589                           	psect	text45
 12590  00345A                     __ptext45:
 12591                           	opt stack 0
 12592  00345A                     _MiWi_TickGet:
 12593                           	opt stack 25
 12594                           
 12595                           ;symbol.c: 116: MIWI_TICK currentTime;
 12596                           ;symbol.c: 119: uint8_t failureCounter;
 12597                           ;symbol.c: 122: PIE1bits.TMR1IE = 0;
 12598                           
 12599                           ;incstack = 0
 12600  00345A  909D               	bcf	3997,0,c	;volatile
 12601                           
 12602                           ;symbol.c: 125: currentTime.byte.b2 = 0;
 12603  00345C  6A1E               	clrf	MiWi_TickGet@currentTime+2,c
 12604                           
 12605                           ;symbol.c: 126: currentTime.byte.b3 = 0;
 12606  00345E  6A1F               	clrf	MiWi_TickGet@currentTime+3,c
 12607                           
 12608                           ;symbol.c: 129: failureCounter = 0;
 12609  003460  6A1B               	clrf	MiWi_TickGet@failureCounter,c
 12610  003462                     l846:
 12611                           
 12612                           ;symbol.c: 132: {
 12613                           ;symbol.c: 133: currentTime.byte.b0 = TMR1L;
 12614  003462  CFCE F01C          	movff	4046,MiWi_TickGet@currentTime	;volatile
 12615                           
 12616                           ;symbol.c: 134: currentTime.byte.b1 = TMR1H;
 12617  003466  CFCF F01D          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 12618                           
 12619                           ;symbol.c: 135: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 12620  00346A  281C               	incf	MiWi_TickGet@currentTime,w,c
 12621  00346C  E108               	bnz	l849
 12622  00346E  281D               	incf	MiWi_TickGet@currentTime+1,w,c
 12623  003470  E106               	bnz	l849
 12624  003472  2A1B               	incf	MiWi_TickGet@failureCounter,f,c
 12625  003474  041B               	decf	MiWi_TickGet@failureCounter,w,c
 12626  003476  6E1A               	movwf	??_MiWi_TickGet& (0+255),c
 12627  003478  0E02               	movlw	2
 12628  00347A  641A               	cpfsgt	??_MiWi_TickGet,c
 12629  00347C  D7F2               	goto	l846
 12630  00347E                     l849:
 12631                           
 12632                           ;symbol.c: 139: if(PIR1bits.TMR1IF)
 12633  00347E  A09E               	btfss	3998,0,c	;volatile
 12634  003480  D004               	goto	l11177
 12635                           
 12636                           ;symbol.c: 140: {
 12637                           ;symbol.c: 142: {
 12638                           ;symbol.c: 145: currentTime.byte.b2++;
 12639  003482  2A1E               	incf	MiWi_TickGet@currentTime+2,f,c
 12640                           
 12641                           ;symbol.c: 146: if(timerExtension1 == 0xFF)
 12642  003484  2841               	incf	_timerExtension1,w,c	;volatile
 12643  003486  E101               	bnz	l11177
 12644                           
 12645                           ;symbol.c: 147: {
 12646                           ;symbol.c: 148: currentTime.byte.b3++;
 12647  003488  2A1F               	incf	MiWi_TickGet@currentTime+3,f,c
 12648  00348A                     l11177:
 12649                           
 12650                           ;symbol.c: 149: }
 12651                           ;symbol.c: 150: }
 12652                           ;symbol.c: 151: }
 12653                           ;symbol.c: 154: currentTime.byte.b2 += timerExtension1;
 12654  00348A  5041               	movf	_timerExtension1,w,c	;volatile
 12655  00348C  261E               	addwf	MiWi_TickGet@currentTime+2,f,c
 12656                           
 12657                           ;symbol.c: 155: currentTime.byte.b3 += timerExtension2;
 12658  00348E  5042               	movf	_timerExtension2,w,c	;volatile
 12659  003490  261F               	addwf	MiWi_TickGet@currentTime+3,f,c
 12660                           
 12661                           ;symbol.c: 158: PIE1bits.TMR1IE = 1;
 12662  003492  809D               	bsf	3997,0,c	;volatile
 12663                           
 12664                           ;symbol.c: 160: return currentTime;
 12665  003494  C01C  F016         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 12666  003498  C01D  F017         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 12667  00349C  C01E  F018         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 12668  0034A0  C01F  F019         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 12669  0034A4  0012               	return		;funcret
 12670  0034A6                     __end_of_MiWi_TickGet:
 12671                           	opt stack 0
 12672                           tblptru	equ	0xFF8
 12673                           tblptrh	equ	0xFF7
 12674                           tblptrl	equ	0xFF6
 12675                           tablat	equ	0xFF5
 12676                           prodh	equ	0xFF4
 12677                           prodl	equ	0xFF3
 12678                           intcon	equ	0xFF2
 12679                           intcon2	equ	0xFF1
 12680                           postinc0	equ	0xFEE
 12681                           plusw0	equ	0xFEB
 12682                           wreg	equ	0xFE8
 12683                           indf1	equ	0xFE7
 12684                           postinc1	equ	0xFE6
 12685                           postdec1	equ	0xFE5
 12686                           fsr1h	equ	0xFE2
 12687                           fsr1l	equ	0xFE1
 12688                           indf2	equ	0xFDF
 12689                           postinc2	equ	0xFDE
 12690                           postdec2	equ	0xFDD
 12691                           plusw2	equ	0xFDB
 12692                           fsr2h	equ	0xFDA
 12693                           fsr2l	equ	0xFD9
 12694                           status	equ	0xFD8
 12695                           
 12696 ;; *************** function _MiMAC_SetAltAddress *****************
 12697 ;; Defined at:
 12698 ;;		line 1421 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 12699 ;; Parameters:    Size  Location     Type
 12700 ;;  Address         1    wreg     PTR unsigned char 
 12701 ;;		 -> MiApp_StartConnection@tmp(2), MiApp_ProtocolInit@tmp(2), P2PTasks@tmp(2), myNetworkAddress(2), 
 12702 ;;  PANID           1   25[COMRAM] PTR unsigned char 
 12703 ;;		 -> myPANID(2), MAC_PANID(2), 
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;  Address         1   26[COMRAM] PTR unsigned char 
 12706 ;;		 -> MiApp_StartConnection@tmp(2), MiApp_ProtocolInit@tmp(2), P2PTasks@tmp(2), myNetworkAddress(2), 
 12707 ;; Return value:  Size  Location     Type
 12708 ;;                  1    wreg      unsigned char 
 12709 ;; Registers used:
 12710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12711 ;; Tracked objects:
 12712 ;;		On entry : 0/0
 12713 ;;		On exit  : 0/0
 12714 ;;		Unchanged: 0/0
 12715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12716 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12720 ;;Total ram usage:        2 bytes
 12721 ;; Hardware stack levels used:    1
 12722 ;; Hardware stack levels required when called:    5
 12723 ;; This function calls:
 12724 ;;		_PHYSetShortRAMAddr
 12725 ;; This function is called by:
 12726 ;;		_MiMAC_SendPacket
 12727 ;;		_P2PTasks
 12728 ;;		_MiApp_ProtocolInit
 12729 ;;		_MiApp_StartConnection
 12730 ;; This function uses a non-reentrant model
 12731 ;;
 12732                           
 12733                           	psect	text46
 12734  003224                     __ptext46:
 12735                           	opt stack 0
 12736  003224                     _MiMAC_SetAltAddress:
 12737                           	opt stack 17
 12738                           
 12739                           ;incstack = 0
 12740                           ;MiMAC_SetAltAddress@Address stored from wreg
 12741  003224  6E1B               	movwf	MiMAC_SetAltAddress@Address,c
 12742                           
 12743                           ;drv_mrf_miwi_24j40.c: 1423: myNetworkAddress.v[0] = Address[0];
 12744  003226  501B               	movf	MiMAC_SetAltAddress@Address,w,c
 12745  003228  6ED9               	movwf	fsr2l,c
 12746  00322A  6ADA               	clrf	fsr2h,c
 12747  00322C  50DF               	movf	indf2,w,c
 12748  00322E  6E45               	movwf	_myNetworkAddress,c
 12749                           
 12750                           ;drv_mrf_miwi_24j40.c: 1424: myNetworkAddress.v[1] = Address[1];
 12751  003230  501B               	movf	MiMAC_SetAltAddress@Address,w,c
 12752  003232  6ED9               	movwf	fsr2l,c
 12753  003234  6ADA               	clrf	fsr2h,c
 12754  003236  2AD9               	incf	fsr2l,f,c
 12755  003238  50DF               	movf	indf2,w,c
 12756  00323A  6E46               	movwf	_myNetworkAddress+1,c
 12757                           
 12758                           ;drv_mrf_miwi_24j40.c: 1425: MAC_PANID.v[0] = PANID[0];
 12759  00323C  501A               	movf	MiMAC_SetAltAddress@PANID,w,c
 12760  00323E  6ED9               	movwf	fsr2l,c
 12761  003240  6ADA               	clrf	fsr2h,c
 12762  003242  50DF               	movf	indf2,w,c
 12763  003244  6E43               	movwf	_MAC_PANID,c
 12764                           
 12765                           ;drv_mrf_miwi_24j40.c: 1426: MAC_PANID.v[1] = PANID[1];
 12766  003246  501A               	movf	MiMAC_SetAltAddress@PANID,w,c
 12767  003248  6ED9               	movwf	fsr2l,c
 12768  00324A  6ADA               	clrf	fsr2h,c
 12769  00324C  2AD9               	incf	fsr2l,f,c
 12770  00324E  50DF               	movf	indf2,w,c
 12771  003250  6E44               	movwf	_MAC_PANID+1,c
 12772                           
 12773                           ;drv_mrf_miwi_24j40.c: 1428: PHYSetShortRAMAddr((0x07), myNetworkAddress.v[0]);
 12774  003252  C045  F017         	movff	_myNetworkAddress,PHYSetShortRAMAddr@value
 12775  003256  0E07               	movlw	7
 12776  003258  EC48  F01C         	call	_PHYSetShortRAMAddr
 12777                           
 12778                           ;drv_mrf_miwi_24j40.c: 1429: PHYSetShortRAMAddr((0x09), myNetworkAddress.v[1]);
 12779  00325C  C046  F017         	movff	_myNetworkAddress+1,PHYSetShortRAMAddr@value
 12780  003260  0E09               	movlw	9
 12781  003262  EC48  F01C         	call	_PHYSetShortRAMAddr
 12782                           
 12783                           ;drv_mrf_miwi_24j40.c: 1430: PHYSetShortRAMAddr((0x03), MAC_PANID.v[0]);
 12784  003266  C043  F017         	movff	_MAC_PANID,PHYSetShortRAMAddr@value
 12785  00326A  0E03               	movlw	3
 12786  00326C  EC48  F01C         	call	_PHYSetShortRAMAddr
 12787                           
 12788                           ;drv_mrf_miwi_24j40.c: 1431: PHYSetShortRAMAddr((0x05), MAC_PANID.v[1]);
 12789  003270  C044  F017         	movff	_MAC_PANID+1,PHYSetShortRAMAddr@value
 12790  003274  0E05               	movlw	5
 12791  003276  EF48  F01C         	goto	_PHYSetShortRAMAddr
 12792  00327A                     __end_of_MiMAC_SetAltAddress:
 12793                           	opt stack 0
 12794                           tblptru	equ	0xFF8
 12795                           tblptrh	equ	0xFF7
 12796                           tblptrl	equ	0xFF6
 12797                           tablat	equ	0xFF5
 12798                           prodh	equ	0xFF4
 12799                           prodl	equ	0xFF3
 12800                           intcon	equ	0xFF2
 12801                           intcon2	equ	0xFF1
 12802                           postinc0	equ	0xFEE
 12803                           plusw0	equ	0xFEB
 12804                           wreg	equ	0xFE8
 12805                           indf1	equ	0xFE7
 12806                           postinc1	equ	0xFE6
 12807                           postdec1	equ	0xFE5
 12808                           fsr1h	equ	0xFE2
 12809                           fsr1l	equ	0xFE1
 12810                           indf2	equ	0xFDF
 12811                           postinc2	equ	0xFDE
 12812                           postdec2	equ	0xFDD
 12813                           plusw2	equ	0xFDB
 12814                           fsr2h	equ	0xFDA
 12815                           fsr2l	equ	0xFD9
 12816                           status	equ	0xFD8
 12817                           
 12818 ;; *************** function _InitMRF24J40 *****************
 12819 ;; Defined at:
 12820 ;;		line 201 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 12821 ;; Parameters:    Size  Location     Type
 12822 ;;		None
 12823 ;; Auto vars:     Size  Location     Type
 12824 ;;  _ms             4   43[COMRAM] unsigned long 
 12825 ;;  _dcnt           4   35[COMRAM] unsigned long 
 12826 ;;  _ms             4   39[COMRAM] unsigned long 
 12827 ;;  _dcnt           4   31[COMRAM] unsigned long 
 12828 ;;  j               2   47[COMRAM] unsigned int 
 12829 ;;  i               1   49[COMRAM] unsigned char 
 12830 ;; Return value:  Size  Location     Type
 12831 ;;		None               void
 12832 ;; Registers used:
 12833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12834 ;; Tracked objects:
 12835 ;;		On entry : F/0
 12836 ;;		On exit  : 0/0
 12837 ;;		Unchanged: 0/0
 12838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12840 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12841 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12842 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12843 ;;Total ram usage:       20 bytes
 12844 ;; Hardware stack levels used:    1
 12845 ;; Hardware stack levels required when called:    6
 12846 ;; This function calls:
 12847 ;;		_MiMAC_SetChannel
 12848 ;;		_PHYGetLongRAMAddr
 12849 ;;		_PHYGetShortRAMAddr
 12850 ;;		_PHYSetLongRAMAddr
 12851 ;;		_PHYSetShortRAMAddr
 12852 ;; This function is called by:
 12853 ;;		_MiMAC_SendPacket
 12854 ;;		_MiMAC_Init
 12855 ;; This function uses a non-reentrant model
 12856 ;;
 12857                           
 12858                           	psect	text47
 12859  001F40                     __ptext47:
 12860                           	opt stack 0
 12861  001F40                     _InitMRF24J40:
 12862                           	opt stack 16
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;drv_mrf_miwi_24j40.c: 203: uint8_t i;
 12866                           ;drv_mrf_miwi_24j40.c: 204: uint16_t j;
 12867                           ;drv_mrf_miwi_24j40.c: 207: LATDbits.LATD0 = 0;
 12868                           
 12869                           ;incstack = 0
 12870  001F40  908C               	bcf	3980,0,c	;volatile
 12871                           
 12872                           ; BSR set to: 0
 12873                           ;drv_mrf_miwi_24j40.c: 208: { unsigned long _dcnt; unsigned long _ms; _ms = 3; while(_ms
      +                          ) { _dcnt=((unsigned long)(0.001/(1.0/((16000000)/4))/6)); while(_dcnt--); _ms--; } };
 12874  001F42  0E03               	movlw	3
 12875  001F44  6E28               	movwf	InitMRF24J40@_ms,c
 12876  001F46  6A29               	clrf	InitMRF24J40@_ms+1,c
 12877  001F48  6A2A               	clrf	InitMRF24J40@_ms+2,c
 12878  001F4A  6A2B               	clrf	InitMRF24J40@_ms+3,c
 12879  001F4C  D018               	goto	l71
 12880  001F4E                     l11101:
 12881                           
 12882                           ; BSR set to: 0
 12883  001F4E  0E9A               	movlw	154
 12884  001F50  6E20               	movwf	InitMRF24J40@_dcnt,c
 12885  001F52  0E02               	movlw	2
 12886  001F54  6E21               	movwf	InitMRF24J40@_dcnt+1,c
 12887  001F56  6A22               	clrf	InitMRF24J40@_dcnt+2,c
 12888  001F58  6A23               	clrf	InitMRF24J40@_dcnt+3,c
 12889  001F5A                     l11103:
 12890                           
 12891                           ; BSR set to: 0
 12892  001F5A  0620               	decf	InitMRF24J40@_dcnt,f,c
 12893  001F5C  0E00               	movlw	0
 12894  001F5E  5A21               	subwfb	InitMRF24J40@_dcnt+1,f,c
 12895  001F60  5A22               	subwfb	InitMRF24J40@_dcnt+2,f,c
 12896  001F62  5A23               	subwfb	InitMRF24J40@_dcnt+3,f,c
 12897  001F64  2820               	incf	InitMRF24J40@_dcnt,w,c
 12898  001F66  E1F9               	bnz	l11103
 12899  001F68  2821               	incf	InitMRF24J40@_dcnt+1,w,c
 12900  001F6A  E1F7               	bnz	l11103
 12901  001F6C  2822               	incf	InitMRF24J40@_dcnt+2,w,c
 12902  001F6E  E1F5               	bnz	l11103
 12903  001F70  2823               	incf	InitMRF24J40@_dcnt+3,w,c
 12904  001F72  E1F3               	bnz	l11103
 12905                           
 12906                           ; BSR set to: 0
 12907  001F74  0628               	decf	InitMRF24J40@_ms,f,c
 12908  001F76  0E00               	movlw	0
 12909  001F78  5A29               	subwfb	InitMRF24J40@_ms+1,f,c
 12910  001F7A  5A2A               	subwfb	InitMRF24J40@_ms+2,f,c
 12911  001F7C  5A2B               	subwfb	InitMRF24J40@_ms+3,f,c
 12912  001F7E                     l71:
 12913                           
 12914                           ; BSR set to: 0
 12915  001F7E  5028               	movf	InitMRF24J40@_ms,w,c
 12916  001F80  1029               	iorwf	InitMRF24J40@_ms+1,w,c
 12917  001F82  102A               	iorwf	InitMRF24J40@_ms+2,w,c
 12918  001F84  102B               	iorwf	InitMRF24J40@_ms+3,w,c
 12919  001F86  E1E3               	bnz	l11101
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;drv_mrf_miwi_24j40.c: 210: LATDbits.LATD0 = 1;
 12923  001F88  808C               	bsf	3980,0,c	;volatile
 12924                           
 12925                           ; BSR set to: 0
 12926                           ;drv_mrf_miwi_24j40.c: 211: { unsigned long _dcnt; unsigned long _ms; _ms = 10; while(_m
      +                          s) { _dcnt=((unsigned long)(0.001/(1.0/((16000000)/4))/6)); while(_dcnt--); _ms--; } };
 12927  001F8A  0E0A               	movlw	10
 12928  001F8C  6E2C               	movwf	InitMRF24J40@_ms_706,c
 12929  001F8E  6A2D               	clrf	InitMRF24J40@_ms_706+1,c
 12930  001F90  6A2E               	clrf	InitMRF24J40@_ms_706+2,c
 12931  001F92  6A2F               	clrf	InitMRF24J40@_ms_706+3,c
 12932  001F94  D018               	goto	l77
 12933  001F96                     l11109:
 12934                           
 12935                           ; BSR set to: 0
 12936  001F96  0E9A               	movlw	154
 12937  001F98  6E24               	movwf	InitMRF24J40@_dcnt_705,c
 12938  001F9A  0E02               	movlw	2
 12939  001F9C  6E25               	movwf	InitMRF24J40@_dcnt_705+1,c
 12940  001F9E  6A26               	clrf	InitMRF24J40@_dcnt_705+2,c
 12941  001FA0  6A27               	clrf	InitMRF24J40@_dcnt_705+3,c
 12942  001FA2                     l11111:
 12943                           
 12944                           ; BSR set to: 0
 12945  001FA2  0624               	decf	InitMRF24J40@_dcnt_705,f,c
 12946  001FA4  0E00               	movlw	0
 12947  001FA6  5A25               	subwfb	InitMRF24J40@_dcnt_705+1,f,c
 12948  001FA8  5A26               	subwfb	InitMRF24J40@_dcnt_705+2,f,c
 12949  001FAA  5A27               	subwfb	InitMRF24J40@_dcnt_705+3,f,c
 12950  001FAC  2824               	incf	InitMRF24J40@_dcnt_705,w,c
 12951  001FAE  E1F9               	bnz	l11111
 12952  001FB0  2825               	incf	InitMRF24J40@_dcnt_705+1,w,c
 12953  001FB2  E1F7               	bnz	l11111
 12954  001FB4  2826               	incf	InitMRF24J40@_dcnt_705+2,w,c
 12955  001FB6  E1F5               	bnz	l11111
 12956  001FB8  2827               	incf	InitMRF24J40@_dcnt_705+3,w,c
 12957  001FBA  E1F3               	bnz	l11111
 12958                           
 12959                           ; BSR set to: 0
 12960  001FBC  062C               	decf	InitMRF24J40@_ms_706,f,c
 12961  001FBE  0E00               	movlw	0
 12962  001FC0  5A2D               	subwfb	InitMRF24J40@_ms_706+1,f,c
 12963  001FC2  5A2E               	subwfb	InitMRF24J40@_ms_706+2,f,c
 12964  001FC4  5A2F               	subwfb	InitMRF24J40@_ms_706+3,f,c
 12965  001FC6                     l77:
 12966                           
 12967                           ; BSR set to: 0
 12968  001FC6  502C               	movf	InitMRF24J40@_ms_706,w,c
 12969  001FC8  102D               	iorwf	InitMRF24J40@_ms_706+1,w,c
 12970  001FCA  102E               	iorwf	InitMRF24J40@_ms_706+2,w,c
 12971  001FCC  102F               	iorwf	InitMRF24J40@_ms_706+3,w,c
 12972  001FCE  E1E3               	bnz	l11109
 12973                           
 12974                           ; BSR set to: 0
 12975                           ;drv_mrf_miwi_24j40.c: 214: PHYSetShortRAMAddr((0x55), 0x07);
 12976  001FD0  0E07               	movlw	7
 12977  001FD2  6E17               	movwf	PHYSetShortRAMAddr@value,c
 12978  001FD4  0E55               	movlw	85
 12979  001FD6  EC48  F01C         	call	_PHYSetShortRAMAddr
 12980  001FDA                     l83:
 12981                           
 12982                           ;drv_mrf_miwi_24j40.c: 216: {
 12983                           ;drv_mrf_miwi_24j40.c: 217: i = PHYGetShortRAMAddr((0x54));
 12984  001FDA  0E54               	movlw	84
 12985  001FDC  ECC9  F01B         	call	_PHYGetShortRAMAddr
 12986  001FE0  6E32               	movwf	InitMRF24J40@i,c
 12987                           
 12988                           ;drv_mrf_miwi_24j40.c: 218: } while ((i & 0x07) != (uint8_t) 0x00);
 12989  001FE2  C032  F01F         	movff	InitMRF24J40@i,??_InitMRF24J40
 12990  001FE6  0E07               	movlw	7
 12991  001FE8  161F               	andwf	??_InitMRF24J40,f,c
 12992  001FEA  E1F7               	bnz	l83
 12993                           
 12994                           ;drv_mrf_miwi_24j40.c: 220: for (j = 0; j < (uint16_t) 1000; j++)
 12995  001FEC  6A30               	clrf	InitMRF24J40@j,c
 12996  001FEE  6A31               	clrf	InitMRF24J40@j+1,c
 12997  001FF0                     l11123:
 12998                           
 12999                           ;drv_mrf_miwi_24j40.c: 221: {
 13000  001FF0  4A30               	infsnz	InitMRF24J40@j,f,c
 13001  001FF2  2A31               	incf	InitMRF24J40@j+1,f,c
 13002  001FF4  0EE8               	movlw	232
 13003  001FF6  5C30               	subwf	InitMRF24J40@j,w,c
 13004  001FF8  0E03               	movlw	3
 13005  001FFA  5831               	subwfb	InitMRF24J40@j+1,w,c
 13006  001FFC  E3F9               	bnc	l11123
 13007                           
 13008                           ;drv_mrf_miwi_24j40.c: 222: }
 13009                           ;drv_mrf_miwi_24j40.c: 225: PHYSetShortRAMAddr((0x1B), 0x01);
 13010  001FFE  0E01               	movlw	1
 13011  002000  6E17               	movwf	PHYSetShortRAMAddr@value,c
 13012  002002  0E1B               	movlw	27
 13013  002004  EC48  F01C         	call	_PHYSetShortRAMAddr
 13014                           
 13015                           ;drv_mrf_miwi_24j40.c: 228: PHYSetShortRAMAddr((0x07), 0xFF);
 13016  002008  6817               	setf	PHYSetShortRAMAddr@value,c
 13017  00200A  0E07               	movlw	7
 13018  00200C  EC48  F01C         	call	_PHYSetShortRAMAddr
 13019                           
 13020                           ;drv_mrf_miwi_24j40.c: 229: PHYSetShortRAMAddr((0x09), 0xFF);
 13021  002010  6817               	setf	PHYSetShortRAMAddr@value,c
 13022  002012  0E09               	movlw	9
 13023  002014  EC48  F01C         	call	_PHYSetShortRAMAddr
 13024                           
 13025                           ;drv_mrf_miwi_24j40.c: 230: PHYSetShortRAMAddr((0x03), 0xFF);
 13026  002018  6817               	setf	PHYSetShortRAMAddr@value,c
 13027  00201A  0E03               	movlw	3
 13028  00201C  EC48  F01C         	call	_PHYSetShortRAMAddr
 13029                           
 13030                           ;drv_mrf_miwi_24j40.c: 231: PHYSetShortRAMAddr((0x05), 0xFF);
 13031  002020  6817               	setf	PHYSetShortRAMAddr@value,c
 13032  002022  0E05               	movlw	5
 13033  002024  EC48  F01C         	call	_PHYSetShortRAMAddr
 13034                           
 13035                           ;drv_mrf_miwi_24j40.c: 234: for (i = 0; i < (uint8_t) 8; i++)
 13036  002028  6A32               	clrf	InitMRF24J40@i,c
 13037  00202A                     l11135:
 13038                           
 13039                           ;drv_mrf_miwi_24j40.c: 235: {
 13040                           ;drv_mrf_miwi_24j40.c: 236: PHYSetShortRAMAddr((0x0B) + i * 2, MACInitParams.PAddress[i]
      +                          );
 13041  00202A  5032               	movf	InitMRF24J40@i,w,c
 13042  00202C  0100               	movlb	0	; () banked
 13043  00202E  25D3               	addwf	(_MACInitParams+1)& (0+255),w,b
 13044  002030  6ED9               	movwf	fsr2l,c
 13045  002032  0E00               	movlw	0
 13046  002034  21D4               	addwfc	(_MACInitParams+2)& (0+255),w,b
 13047  002036  6EDA               	movwf	fsr2h,c
 13048  002038  50DF               	movf	indf2,w,c
 13049  00203A  6E17               	movwf	PHYSetShortRAMAddr@value,c
 13050  00203C  5032               	movf	InitMRF24J40@i,w,c
 13051  00203E  0D02               	mullw	2
 13052  002040  50F3               	movf	prodl,w,c
 13053  002042  0F0B               	addlw	11
 13054  002044  EC48  F01C         	call	_PHYSetShortRAMAddr
 13055  002048  2A32               	incf	InitMRF24J40@i,f,c
 13056  00204A  0E07               	movlw	7
 13057  00204C  6432               	cpfsgt	InitMRF24J40@i,c
 13058  00204E  D7ED               	goto	l11135
 13059                           
 13060                           ;drv_mrf_miwi_24j40.c: 237: }
 13061                           ;drv_mrf_miwi_24j40.c: 240: PHYSetLongRAMAddr((0x202), 0x80);
 13062  002050  0E02               	movlw	2
 13063  002052  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 13064  002054  6E17               	movwf	PHYSetLongRAMAddr@address,c
 13065  002056  0E80               	movlw	128
 13066  002058  6E19               	movwf	PHYSetLongRAMAddr@value,c
 13067  00205A  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 13068                           
 13069                           ;drv_mrf_miwi_24j40.c: 263: PHYSetLongRAMAddr((0x203), 0x00);
 13070  00205E  0E02               	movlw	2
 13071  002060  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 13072  002062  0E03               	movlw	3
 13073  002064  6E17               	movwf	PHYSetLongRAMAddr@address,c
 13074  002066  6A19               	clrf	PHYSetLongRAMAddr@value,c
 13075  002068  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 13076                           
 13077                           ;drv_mrf_miwi_24j40.c: 267: PHYSetLongRAMAddr((0x206), 0x90);
 13078  00206C  0E02               	movlw	2
 13079  00206E  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 13080  002070  0E06               	movlw	6
 13081  002072  6E17               	movwf	PHYSetLongRAMAddr@address,c
 13082  002074  0E90               	movlw	144
 13083  002076  6E19               	movwf	PHYSetLongRAMAddr@value,c
 13084  002078  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 13085                           
 13086                           ;drv_mrf_miwi_24j40.c: 269: PHYSetLongRAMAddr((0x207), 0x80);
 13087  00207C  0E02               	movlw	2
 13088  00207E  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 13089  002080  0E07               	movlw	7
 13090  002082  6E17               	movwf	PHYSetLongRAMAddr@address,c
 13091  002084  0E80               	movlw	128
 13092  002086  6E19               	movwf	PHYSetLongRAMAddr@value,c
 13093  002088  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 13094                           
 13095                           ;drv_mrf_miwi_24j40.c: 271: PHYSetLongRAMAddr((0x208), 0x10);
 13096  00208C  0E02               	movlw	2
 13097  00208E  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 13098  002090  0E08               	movlw	8
 13099  002092  6E17               	movwf	PHYSetLongRAMAddr@address,c
 13100  002094  0E10               	movlw	16
 13101  002096  6E19               	movwf	PHYSetLongRAMAddr@value,c
 13102  002098  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 13103                           
 13104                           ;drv_mrf_miwi_24j40.c: 273: PHYSetLongRAMAddr((0x220), 0x21);
 13105  00209C  0E02               	movlw	2
 13106  00209E  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 13107  0020A0  0E20               	movlw	32
 13108  0020A2  6E17               	movwf	PHYSetLongRAMAddr@address,c
 13109  0020A4  0E21               	movlw	33
 13110  0020A6  6E19               	movwf	PHYSetLongRAMAddr@value,c
 13111  0020A8  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 13112                           
 13113                           ;drv_mrf_miwi_24j40.c: 276: PHYSetShortRAMAddr((0x75), 0x80);
 13114  0020AC  0E80               	movlw	128
 13115  0020AE  6E17               	movwf	PHYSetShortRAMAddr@value,c
 13116  0020B0  0E75               	movlw	117
 13117  0020B2  EC48  F01C         	call	_PHYSetShortRAMAddr
 13118                           
 13119                           ;drv_mrf_miwi_24j40.c: 278: PHYSetShortRAMAddr((0x7D), 0x40);
 13120  0020B6  0E40               	movlw	64
 13121  0020B8  6E17               	movwf	PHYSetShortRAMAddr@value,c
 13122  0020BA  0E7D               	movlw	125
 13123  0020BC  EC48  F01C         	call	_PHYSetShortRAMAddr
 13124                           
 13125                           ;drv_mrf_miwi_24j40.c: 280: PHYSetShortRAMAddr((0x7F), 0x60);
 13126  0020C0  0E60               	movlw	96
 13127  0020C2  6E17               	movwf	PHYSetShortRAMAddr@value,c
 13128  0020C4  0E7F               	movlw	127
 13129  0020C6  EC48  F01C         	call	_PHYSetShortRAMAddr
 13130                           
 13131                           ;drv_mrf_miwi_24j40.c: 291: PHYSetShortRAMAddr((0x31), 0x98);
 13132  0020CA  0E98               	movlw	152
 13133  0020CC  6E17               	movwf	PHYSetShortRAMAddr@value,c
 13134  0020CE  0E31               	movlw	49
 13135  0020D0  EC48  F01C         	call	_PHYSetShortRAMAddr
 13136                           
 13137                           ;drv_mrf_miwi_24j40.c: 292: PHYSetShortRAMAddr((0x5D), 0x95);
 13138  0020D4  0E95               	movlw	149
 13139  0020D6  6E17               	movwf	PHYSetShortRAMAddr@value,c
 13140  0020D8  0E5D               	movlw	93
 13141  0020DA  EC48  F01C         	call	_PHYSetShortRAMAddr
 13142  0020DE                     l11153:
 13143                           
 13144                           ;drv_mrf_miwi_24j40.c: 296: {
 13145                           ;drv_mrf_miwi_24j40.c: 297: i = PHYGetLongRAMAddr((0x20f));
 13146  0020DE  0E02               	movlw	2
 13147  0020E0  6E18               	movwf	PHYGetLongRAMAddr@address+1,c
 13148  0020E2  0E0F               	movlw	15
 13149  0020E4  6E17               	movwf	PHYGetLongRAMAddr@address,c
 13150  0020E6  EC66  F019         	call	_PHYGetLongRAMAddr	;wreg free
 13151  0020EA  6E32               	movwf	InitMRF24J40@i,c
 13152                           
 13153                           ;drv_mrf_miwi_24j40.c: 298: }
 13154                           ;drv_mrf_miwi_24j40.c: 299: while ((i&0xA0) != 0xA0);
 13155  0020EC  5032               	movf	InitMRF24J40@i,w,c
 13156  0020EE  0BA0               	andlw	160
 13157  0020F0  0AA0               	xorlw	160
 13158  0020F2  E1F5               	bnz	l11153
 13159                           
 13160                           ;drv_mrf_miwi_24j40.c: 301: PHYSetShortRAMAddr((0x65), 0xE6);
 13161  0020F4  0EE6               	movlw	230
 13162  0020F6  6E17               	movwf	PHYSetShortRAMAddr@value,c
 13163  0020F8  0E65               	movlw	101
 13164  0020FA  EC48  F01C         	call	_PHYSetShortRAMAddr
 13165                           
 13166                           ;drv_mrf_miwi_24j40.c: 308: PHYSetLongRAMAddr((0x200), 0x03);
 13167  0020FE  0E02               	movlw	2
 13168  002100  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 13169  002102  6A17               	clrf	PHYSetLongRAMAddr@address,c
 13170  002104  0E03               	movlw	3
 13171  002106  6E19               	movwf	PHYSetLongRAMAddr@value,c
 13172  002108  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 13173                           
 13174                           ;drv_mrf_miwi_24j40.c: 309: PHYSetLongRAMAddr((0x201), 0x02);
 13175  00210C  0E02               	movlw	2
 13176  00210E  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 13177  002110  0E01               	movlw	1
 13178  002112  6E17               	movwf	PHYSetLongRAMAddr@address,c
 13179  002114  0E02               	movlw	2
 13180  002116  6E19               	movwf	PHYSetLongRAMAddr@value,c
 13181  002118  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 13182                           
 13183                           ;drv_mrf_miwi_24j40.c: 311: MiMAC_SetChannel(MACCurrentChannel, 0);
 13184  00211C  6A1D               	clrf	MiMAC_SetChannel@offsetFreq,c
 13185  00211E  0100               	movlb	0	; () banked
 13186  002120  51DC               	movf	_MACCurrentChannel& (0+255),w,b
 13187  002122  EFD6  F01A         	goto	_MiMAC_SetChannel
 13188  002126                     __end_of_InitMRF24J40:
 13189                           	opt stack 0
 13190                           tblptru	equ	0xFF8
 13191                           tblptrh	equ	0xFF7
 13192                           tblptrl	equ	0xFF6
 13193                           tablat	equ	0xFF5
 13194                           prodh	equ	0xFF4
 13195                           prodl	equ	0xFF3
 13196                           intcon	equ	0xFF2
 13197                           intcon2	equ	0xFF1
 13198                           postinc0	equ	0xFEE
 13199                           plusw0	equ	0xFEB
 13200                           wreg	equ	0xFE8
 13201                           indf1	equ	0xFE7
 13202                           postinc1	equ	0xFE6
 13203                           postdec1	equ	0xFE5
 13204                           fsr1h	equ	0xFE2
 13205                           fsr1l	equ	0xFE1
 13206                           indf2	equ	0xFDF
 13207                           postinc2	equ	0xFDE
 13208                           postdec2	equ	0xFDD
 13209                           plusw2	equ	0xFDB
 13210                           fsr2h	equ	0xFDA
 13211                           fsr2l	equ	0xFD9
 13212                           status	equ	0xFD8
 13213                           
 13214 ;; *************** function _PHYGetShortRAMAddr *****************
 13215 ;; Defined at:
 13216 ;;		line 154 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 13217 ;; Parameters:    Size  Location     Type
 13218 ;;  address         1    wreg     unsigned char 
 13219 ;; Auto vars:     Size  Location     Type
 13220 ;;  address         1   22[COMRAM] unsigned char 
 13221 ;;  tmpRFIE         1   24[COMRAM] volatile unsigned char 
 13222 ;;  toReturn        1   23[COMRAM] unsigned char 
 13223 ;; Return value:  Size  Location     Type
 13224 ;;                  1    wreg      unsigned char 
 13225 ;; Registers used:
 13226 ;;		wreg, status,2, cstack
 13227 ;; Tracked objects:
 13228 ;;		On entry : 0/0
 13229 ;;		On exit  : 0/0
 13230 ;;		Unchanged: 0/0
 13231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13233 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13235 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13236 ;;Total ram usage:        3 bytes
 13237 ;; Hardware stack levels used:    1
 13238 ;; Hardware stack levels required when called:    4
 13239 ;; This function calls:
 13240 ;;		_SPI1_Exchange8bit
 13241 ;; This function is called by:
 13242 ;;		_InitMRF24J40
 13243 ;; This function uses a non-reentrant model
 13244 ;;
 13245                           
 13246                           	psect	text48
 13247  003792                     __ptext48:
 13248                           	opt stack 0
 13249  003792                     _PHYGetShortRAMAddr:
 13250                           	opt stack 17
 13251                           
 13252                           ;incstack = 0
 13253                           ;PHYGetShortRAMAddr@address stored from wreg
 13254  003792  6E17               	movwf	PHYGetShortRAMAddr@address,c
 13255                           
 13256                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 13257                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 13258  003794  0E00               	movlw	0
 13259  003796  B8F2               	btfsc	intcon,4,c	;volatile
 13260  003798  0E01               	movlw	1
 13261  00379A  6E19               	movwf	PHYGetShortRAMAddr@tmpRFIE,c	;volatile
 13262                           
 13263                           ;drv_mrf_miwi_24j40.c: 159: INTCONbits.INT0IE = 0;
 13264  00379C  98F2               	bcf	intcon,4,c	;volatile
 13265                           
 13266                           ;drv_mrf_miwi_24j40.c: 160: LATAbits.LATA5 = 0;
 13267  00379E  9A89               	bcf	3977,5,c	;volatile
 13268                           
 13269                           ;drv_mrf_miwi_24j40.c: 161: SPI1_Exchange8bit(address);
 13270  0037A0  5017               	movf	PHYGetShortRAMAddr@address,w,c
 13271  0037A2  EC31  F01D         	call	_SPI1_Exchange8bit
 13272                           
 13273                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPI1_Exchange8bit(0x00);
 13274  0037A6  0E00               	movlw	0
 13275  0037A8  EC31  F01D         	call	_SPI1_Exchange8bit
 13276  0037AC  6E18               	movwf	PHYGetShortRAMAddr@toReturn,c
 13277                           
 13278                           ;drv_mrf_miwi_24j40.c: 163: LATAbits.LATA5 = 1;
 13279  0037AE  8A89               	bsf	3977,5,c	;volatile
 13280                           
 13281                           ;drv_mrf_miwi_24j40.c: 164: INTCONbits.INT0IE = tmpRFIE;
 13282  0037B0  B019               	btfsc	PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
 13283  0037B2  D002               	bra	u10645
 13284  0037B4  98F2               	bcf	intcon,4,c	;volatile
 13285  0037B6  D001               	bra	u10646
 13286  0037B8                     u10645:
 13287  0037B8  88F2               	bsf	intcon,4,c	;volatile
 13288  0037BA                     u10646:
 13289                           
 13290                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 13291  0037BA  5018               	movf	PHYGetShortRAMAddr@toReturn,w,c
 13292  0037BC  0012               	return		;funcret
 13293  0037BE                     __end_of_PHYGetShortRAMAddr:
 13294                           	opt stack 0
 13295                           tblptru	equ	0xFF8
 13296                           tblptrh	equ	0xFF7
 13297                           tblptrl	equ	0xFF6
 13298                           tablat	equ	0xFF5
 13299                           prodh	equ	0xFF4
 13300                           prodl	equ	0xFF3
 13301                           intcon	equ	0xFF2
 13302                           intcon2	equ	0xFF1
 13303                           postinc0	equ	0xFEE
 13304                           plusw0	equ	0xFEB
 13305                           wreg	equ	0xFE8
 13306                           indf1	equ	0xFE7
 13307                           postinc1	equ	0xFE6
 13308                           postdec1	equ	0xFE5
 13309                           fsr1h	equ	0xFE2
 13310                           fsr1l	equ	0xFE1
 13311                           indf2	equ	0xFDF
 13312                           postinc2	equ	0xFDE
 13313                           postdec2	equ	0xFDD
 13314                           plusw2	equ	0xFDB
 13315                           fsr2h	equ	0xFDA
 13316                           fsr2l	equ	0xFD9
 13317                           status	equ	0xFD8
 13318                           
 13319 ;; *************** function _PHYGetLongRAMAddr *****************
 13320 ;; Defined at:
 13321 ;;		line 185 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 13322 ;; Parameters:    Size  Location     Type
 13323 ;;  address         2   22[COMRAM] unsigned int 
 13324 ;; Auto vars:     Size  Location     Type
 13325 ;;  tmpRFIE         1   27[COMRAM] volatile unsigned char 
 13326 ;;  toReturn        1   26[COMRAM] unsigned char 
 13327 ;; Return value:  Size  Location     Type
 13328 ;;                  1    wreg      unsigned char 
 13329 ;; Registers used:
 13330 ;;		wreg, status,2, status,0, cstack
 13331 ;; Tracked objects:
 13332 ;;		On entry : 0/0
 13333 ;;		On exit  : 0/0
 13334 ;;		Unchanged: 0/0
 13335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13339 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13340 ;;Total ram usage:        6 bytes
 13341 ;; Hardware stack levels used:    1
 13342 ;; Hardware stack levels required when called:    4
 13343 ;; This function calls:
 13344 ;;		_SPI1_Exchange8bit
 13345 ;; This function is called by:
 13346 ;;		_InitMRF24J40
 13347 ;; This function uses a non-reentrant model
 13348 ;;
 13349                           
 13350                           	psect	text49
 13351  0032CC                     __ptext49:
 13352                           	opt stack 0
 13353  0032CC                     _PHYGetLongRAMAddr:
 13354                           	opt stack 17
 13355                           
 13356                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 13357                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 13358                           
 13359                           ;incstack = 0
 13360  0032CC  0E00               	movlw	0
 13361  0032CE  B8F2               	btfsc	intcon,4,c	;volatile
 13362  0032D0  0E01               	movlw	1
 13363  0032D2  6E1C               	movwf	PHYGetLongRAMAddr@tmpRFIE,c	;volatile
 13364                           
 13365                           ;drv_mrf_miwi_24j40.c: 190: INTCONbits.INT0IE = 0;
 13366  0032D4  98F2               	bcf	intcon,4,c	;volatile
 13367                           
 13368                           ;drv_mrf_miwi_24j40.c: 191: LATAbits.LATA5 = 0;
 13369  0032D6  9A89               	bcf	3977,5,c	;volatile
 13370                           
 13371                           ;drv_mrf_miwi_24j40.c: 192: SPI1_Exchange8bit(((address >> 3)&0x7F) | 0x80);
 13372  0032D8  C017  F019         	movff	PHYGetLongRAMAddr@address,??_PHYGetLongRAMAddr
 13373  0032DC  C018  F01A         	movff	PHYGetLongRAMAddr@address+1,??_PHYGetLongRAMAddr+1
 13374  0032E0  90D8               	bcf	status,0,c
 13375  0032E2  321A               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 13376  0032E4  3219               	rrcf	??_PHYGetLongRAMAddr,f,c
 13377  0032E6  90D8               	bcf	status,0,c
 13378  0032E8  321A               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 13379  0032EA  3219               	rrcf	??_PHYGetLongRAMAddr,f,c
 13380  0032EC  90D8               	bcf	status,0,c
 13381  0032EE  321A               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 13382  0032F0  3219               	rrcf	??_PHYGetLongRAMAddr,f,c
 13383  0032F2  5019               	movf	??_PHYGetLongRAMAddr,w,c
 13384  0032F4  0B7F               	andlw	127
 13385  0032F6  0980               	iorlw	128
 13386  0032F8  EC31  F01D         	call	_SPI1_Exchange8bit
 13387                           
 13388                           ;drv_mrf_miwi_24j40.c: 193: SPI1_Exchange8bit(((address << 5)&0xE0));
 13389  0032FC  3817               	swapf	PHYGetLongRAMAddr@address,w,c
 13390  0032FE  46E8               	rlncf	wreg,f,c
 13391  003300  0BE0               	andlw	224
 13392  003302  EC31  F01D         	call	_SPI1_Exchange8bit
 13393                           
 13394                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPI1_Exchange8bit(0x00);
 13395  003306  0E00               	movlw	0
 13396  003308  EC31  F01D         	call	_SPI1_Exchange8bit
 13397  00330C  6E1B               	movwf	PHYGetLongRAMAddr@toReturn,c
 13398                           
 13399                           ;drv_mrf_miwi_24j40.c: 195: LATAbits.LATA5 = 1;
 13400  00330E  8A89               	bsf	3977,5,c	;volatile
 13401                           
 13402                           ;drv_mrf_miwi_24j40.c: 196: INTCONbits.INT0IE = tmpRFIE;
 13403  003310  B01C               	btfsc	PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
 13404  003312  D002               	bra	u10655
 13405  003314  98F2               	bcf	intcon,4,c	;volatile
 13406  003316  D001               	bra	u10656
 13407  003318                     u10655:
 13408  003318  88F2               	bsf	intcon,4,c	;volatile
 13409  00331A                     u10656:
 13410                           
 13411                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 13412  00331A  501B               	movf	PHYGetLongRAMAddr@toReturn,w,c
 13413  00331C  0012               	return		;funcret
 13414  00331E                     __end_of_PHYGetLongRAMAddr:
 13415                           	opt stack 0
 13416                           tblptru	equ	0xFF8
 13417                           tblptrh	equ	0xFF7
 13418                           tblptrl	equ	0xFF6
 13419                           tablat	equ	0xFF5
 13420                           prodh	equ	0xFF4
 13421                           prodl	equ	0xFF3
 13422                           intcon	equ	0xFF2
 13423                           intcon2	equ	0xFF1
 13424                           postinc0	equ	0xFEE
 13425                           plusw0	equ	0xFEB
 13426                           wreg	equ	0xFE8
 13427                           indf1	equ	0xFE7
 13428                           postinc1	equ	0xFE6
 13429                           postdec1	equ	0xFE5
 13430                           fsr1h	equ	0xFE2
 13431                           fsr1l	equ	0xFE1
 13432                           indf2	equ	0xFDF
 13433                           postinc2	equ	0xFDE
 13434                           postdec2	equ	0xFDD
 13435                           plusw2	equ	0xFDB
 13436                           fsr2h	equ	0xFDA
 13437                           fsr2l	equ	0xFD9
 13438                           status	equ	0xFD8
 13439                           
 13440 ;; *************** function _MiMAC_SetChannel *****************
 13441 ;; Defined at:
 13442 ;;		line 1302 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 13443 ;; Parameters:    Size  Location     Type
 13444 ;;  channel         1    wreg     unsigned char 
 13445 ;;  offsetFreq      1   28[COMRAM] unsigned char 
 13446 ;; Auto vars:     Size  Location     Type
 13447 ;;  channel         1   29[COMRAM] unsigned char 
 13448 ;; Return value:  Size  Location     Type
 13449 ;;                  1    wreg      unsigned char 
 13450 ;; Registers used:
 13451 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13452 ;; Tracked objects:
 13453 ;;		On entry : 0/0
 13454 ;;		On exit  : 0/0
 13455 ;;		Unchanged: 0/0
 13456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13457 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13461 ;;Total ram usage:        2 bytes
 13462 ;; Hardware stack levels used:    1
 13463 ;; Hardware stack levels required when called:    5
 13464 ;; This function calls:
 13465 ;;		_PHYSetLongRAMAddr
 13466 ;;		_PHYSetShortRAMAddr
 13467 ;; This function is called by:
 13468 ;;		_InitMRF24J40
 13469 ;;		_MiApp_SetChannel
 13470 ;; This function uses a non-reentrant model
 13471 ;;
 13472                           
 13473                           	psect	text50
 13474  0035AC                     __ptext50:
 13475                           	opt stack 0
 13476  0035AC                     _MiMAC_SetChannel:
 13477                           	opt stack 16
 13478                           
 13479                           ;incstack = 0
 13480                           ;MiMAC_SetChannel@channel stored from wreg
 13481  0035AC  6E1E               	movwf	MiMAC_SetChannel@channel,c
 13482                           
 13483                           ;drv_mrf_miwi_24j40.c: 1304: if (channel < 11 || channel > 26)
 13484  0035AE  0E0A               	movlw	10
 13485  0035B0  641E               	cpfsgt	MiMAC_SetChannel@channel,c
 13486  0035B2  0C00               	retlw	0
 13487  0035B4  0E1A               	movlw	26
 13488  0035B6  641E               	cpfsgt	MiMAC_SetChannel@channel,c
 13489  0035B8  D001               	goto	l184
 13490  0035BA  0C00               	retlw	0
 13491  0035BC                     l184:
 13492                           
 13493                           ;drv_mrf_miwi_24j40.c: 1307: }
 13494                           ;drv_mrf_miwi_24j40.c: 1316: MACCurrentChannel = channel;
 13495  0035BC  C01E  F0DC         	movff	MiMAC_SetChannel@channel,_MACCurrentChannel
 13496                           
 13497                           ;drv_mrf_miwi_24j40.c: 1317: PHYSetLongRAMAddr((0x200), ((channel - 11) << 4) | 0x03);
 13498  0035C0  0E02               	movlw	2
 13499  0035C2  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 13500  0035C4  6A17               	clrf	PHYSetLongRAMAddr@address,c
 13501  0035C6  501E               	movf	MiMAC_SetChannel@channel,w,c
 13502  0035C8  0D10               	mullw	16
 13503  0035CA  50F3               	movf	prodl,w,c
 13504  0035CC  0F50               	addlw	80
 13505  0035CE  0903               	iorlw	3
 13506  0035D0  6E19               	movwf	PHYSetLongRAMAddr@value,c
 13507  0035D2  ECB8  F019         	call	_PHYSetLongRAMAddr	;wreg free
 13508                           
 13509                           ;drv_mrf_miwi_24j40.c: 1318: PHYSetShortRAMAddr((0x6D), 0x04);
 13510  0035D6  0E04               	movlw	4
 13511  0035D8  6E17               	movwf	PHYSetShortRAMAddr@value,c
 13512  0035DA  0E6D               	movlw	109
 13513  0035DC  EC48  F01C         	call	_PHYSetShortRAMAddr
 13514                           
 13515                           ;drv_mrf_miwi_24j40.c: 1319: PHYSetShortRAMAddr((0x6D), 0x00);
 13516  0035E0  6A17               	clrf	PHYSetShortRAMAddr@value,c
 13517  0035E2  0E6D               	movlw	109
 13518  0035E4  EC48  F01C         	call	_PHYSetShortRAMAddr
 13519                           
 13520                           ;drv_mrf_miwi_24j40.c: 1320: return 1;
 13521  0035E8  0C01               	retlw	1	;funcret
 13522  0035EA                     __end_of_MiMAC_SetChannel:
 13523                           	opt stack 0
 13524                           tblptru	equ	0xFF8
 13525                           tblptrh	equ	0xFF7
 13526                           tblptrl	equ	0xFF6
 13527                           tablat	equ	0xFF5
 13528                           prodh	equ	0xFF4
 13529                           prodl	equ	0xFF3
 13530                           intcon	equ	0xFF2
 13531                           intcon2	equ	0xFF1
 13532                           postinc0	equ	0xFEE
 13533                           plusw0	equ	0xFEB
 13534                           wreg	equ	0xFE8
 13535                           indf1	equ	0xFE7
 13536                           postinc1	equ	0xFE6
 13537                           postdec1	equ	0xFE5
 13538                           fsr1h	equ	0xFE2
 13539                           fsr1l	equ	0xFE1
 13540                           indf2	equ	0xFDF
 13541                           postinc2	equ	0xFDE
 13542                           postdec2	equ	0xFDD
 13543                           plusw2	equ	0xFDB
 13544                           fsr2h	equ	0xFDA
 13545                           fsr2l	equ	0xFD9
 13546                           status	equ	0xFD8
 13547                           
 13548 ;; *************** function _PHYSetShortRAMAddr *****************
 13549 ;; Defined at:
 13550 ;;		line 124 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 13551 ;; Parameters:    Size  Location     Type
 13552 ;;  address         1    wreg     unsigned char 
 13553 ;;  value           1   22[COMRAM] unsigned char 
 13554 ;; Auto vars:     Size  Location     Type
 13555 ;;  address         1   23[COMRAM] unsigned char 
 13556 ;;  tmpRFIE         1   24[COMRAM] volatile unsigned char 
 13557 ;; Return value:  Size  Location     Type
 13558 ;;		None               void
 13559 ;; Registers used:
 13560 ;;		wreg, status,2, cstack
 13561 ;; Tracked objects:
 13562 ;;		On entry : 0/0
 13563 ;;		On exit  : 0/0
 13564 ;;		Unchanged: 0/0
 13565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13566 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13569 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13570 ;;Total ram usage:        3 bytes
 13571 ;; Hardware stack levels used:    1
 13572 ;; Hardware stack levels required when called:    4
 13573 ;; This function calls:
 13574 ;;		_SPI1_Exchange8bit
 13575 ;; This function is called by:
 13576 ;;		_InitMRF24J40
 13577 ;;		_MiMAC_SendPacket
 13578 ;;		_MiMAC_SetChannel
 13579 ;;		_MiMAC_SetAltAddress
 13580 ;; This function uses a non-reentrant model
 13581 ;;
 13582                           
 13583                           	psect	text51
 13584  003890                     __ptext51:
 13585                           	opt stack 0
 13586  003890                     _PHYSetShortRAMAddr:
 13587                           	opt stack 18
 13588                           
 13589                           ;incstack = 0
 13590                           ;PHYSetShortRAMAddr@address stored from wreg
 13591  003890  6E18               	movwf	PHYSetShortRAMAddr@address,c
 13592                           
 13593                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 13594  003892  0E00               	movlw	0
 13595  003894  B8F2               	btfsc	intcon,4,c	;volatile
 13596  003896  0E01               	movlw	1
 13597  003898  6E19               	movwf	PHYSetShortRAMAddr@tmpRFIE,c	;volatile
 13598                           
 13599                           ;drv_mrf_miwi_24j40.c: 128: INTCONbits.INT0IE = 0;
 13600  00389A  98F2               	bcf	intcon,4,c	;volatile
 13601                           
 13602                           ;drv_mrf_miwi_24j40.c: 129: LATAbits.LATA5 = 0;
 13603  00389C  9A89               	bcf	3977,5,c	;volatile
 13604                           
 13605                           ;drv_mrf_miwi_24j40.c: 130: SPI1_Exchange8bit(address);
 13606  00389E  5018               	movf	PHYSetShortRAMAddr@address,w,c
 13607  0038A0  EC31  F01D         	call	_SPI1_Exchange8bit
 13608                           
 13609                           ;drv_mrf_miwi_24j40.c: 131: SPI1_Exchange8bit(value);
 13610  0038A4  5017               	movf	PHYSetShortRAMAddr@value,w,c
 13611  0038A6  EC31  F01D         	call	_SPI1_Exchange8bit
 13612                           
 13613                           ;drv_mrf_miwi_24j40.c: 132: LATAbits.LATA5 = 1;
 13614  0038AA  8A89               	bsf	3977,5,c	;volatile
 13615                           
 13616                           ;drv_mrf_miwi_24j40.c: 133: INTCONbits.INT0IE = tmpRFIE;
 13617  0038AC  B019               	btfsc	PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
 13618  0038AE  D002               	bra	u10635
 13619  0038B0  98F2               	bcf	intcon,4,c	;volatile
 13620  0038B2  D001               	bra	u10636
 13621  0038B4                     u10635:
 13622  0038B4  88F2               	bsf	intcon,4,c	;volatile
 13623  0038B6                     u10636:
 13624  0038B6  0012               	return		;funcret
 13625  0038B8                     __end_of_PHYSetShortRAMAddr:
 13626                           	opt stack 0
 13627                           tblptru	equ	0xFF8
 13628                           tblptrh	equ	0xFF7
 13629                           tblptrl	equ	0xFF6
 13630                           tablat	equ	0xFF5
 13631                           prodh	equ	0xFF4
 13632                           prodl	equ	0xFF3
 13633                           intcon	equ	0xFF2
 13634                           intcon2	equ	0xFF1
 13635                           postinc0	equ	0xFEE
 13636                           plusw0	equ	0xFEB
 13637                           wreg	equ	0xFE8
 13638                           indf1	equ	0xFE7
 13639                           postinc1	equ	0xFE6
 13640                           postdec1	equ	0xFE5
 13641                           fsr1h	equ	0xFE2
 13642                           fsr1l	equ	0xFE1
 13643                           indf2	equ	0xFDF
 13644                           postinc2	equ	0xFDE
 13645                           postdec2	equ	0xFDD
 13646                           plusw2	equ	0xFDB
 13647                           fsr2h	equ	0xFDA
 13648                           fsr2l	equ	0xFD9
 13649                           status	equ	0xFD8
 13650                           
 13651 ;; *************** function _PHYSetLongRAMAddr *****************
 13652 ;; Defined at:
 13653 ;;		line 90 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 13654 ;; Parameters:    Size  Location     Type
 13655 ;;  address         2   22[COMRAM] unsigned int 
 13656 ;;  value           1   24[COMRAM] unsigned char 
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;  tmpRFIE         1   27[COMRAM] volatile unsigned char 
 13659 ;; Return value:  Size  Location     Type
 13660 ;;		None               void
 13661 ;; Registers used:
 13662 ;;		wreg, status,2, status,0, cstack
 13663 ;; Tracked objects:
 13664 ;;		On entry : 0/0
 13665 ;;		On exit  : 0/0
 13666 ;;		Unchanged: 0/0
 13667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13668 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13671 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13672 ;;Total ram usage:        6 bytes
 13673 ;; Hardware stack levels used:    1
 13674 ;; Hardware stack levels required when called:    4
 13675 ;; This function calls:
 13676 ;;		_SPI1_Exchange8bit
 13677 ;; This function is called by:
 13678 ;;		_InitMRF24J40
 13679 ;;		_MiMAC_SendPacket
 13680 ;;		_MiMAC_SetChannel
 13681 ;; This function uses a non-reentrant model
 13682 ;;
 13683                           
 13684                           	psect	text52
 13685  003370                     __ptext52:
 13686                           	opt stack 0
 13687  003370                     _PHYSetLongRAMAddr:
 13688                           	opt stack 18
 13689                           
 13690                           ;drv_mrf_miwi_24j40.c: 92: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 13691                           
 13692                           ;incstack = 0
 13693  003370  0E00               	movlw	0
 13694  003372  B8F2               	btfsc	intcon,4,c	;volatile
 13695  003374  0E01               	movlw	1
 13696  003376  6E1C               	movwf	PHYSetLongRAMAddr@tmpRFIE,c	;volatile
 13697                           
 13698                           ;drv_mrf_miwi_24j40.c: 94: INTCONbits.INT0IE = 0;
 13699  003378  98F2               	bcf	intcon,4,c	;volatile
 13700                           
 13701                           ;drv_mrf_miwi_24j40.c: 95: LATAbits.LATA5 = 0;
 13702  00337A  9A89               	bcf	3977,5,c	;volatile
 13703                           
 13704                           ;drv_mrf_miwi_24j40.c: 96: SPI1_Exchange8bit((((uint8_t) (address >> 3))&0x7F) | 0x80);
 13705  00337C  C017  F01A         	movff	PHYSetLongRAMAddr@address,??_PHYSetLongRAMAddr
 13706  003380  C018  F01B         	movff	PHYSetLongRAMAddr@address+1,??_PHYSetLongRAMAddr+1
 13707  003384  90D8               	bcf	status,0,c
 13708  003386  321B               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 13709  003388  321A               	rrcf	??_PHYSetLongRAMAddr,f,c
 13710  00338A  90D8               	bcf	status,0,c
 13711  00338C  321B               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 13712  00338E  321A               	rrcf	??_PHYSetLongRAMAddr,f,c
 13713  003390  90D8               	bcf	status,0,c
 13714  003392  321B               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 13715  003394  321A               	rrcf	??_PHYSetLongRAMAddr,f,c
 13716  003396  501A               	movf	??_PHYSetLongRAMAddr,w,c
 13717  003398  0B7F               	andlw	127
 13718  00339A  0980               	iorlw	128
 13719  00339C  EC31  F01D         	call	_SPI1_Exchange8bit
 13720                           
 13721                           ;drv_mrf_miwi_24j40.c: 97: SPI1_Exchange8bit((((uint8_t) (address << 5))&0xE0) | 0x10);
 13722  0033A0  3817               	swapf	PHYSetLongRAMAddr@address,w,c
 13723  0033A2  46E8               	rlncf	wreg,f,c
 13724  0033A4  0BE0               	andlw	224
 13725  0033A6  0910               	iorlw	16
 13726  0033A8  EC31  F01D         	call	_SPI1_Exchange8bit
 13727                           
 13728                           ;drv_mrf_miwi_24j40.c: 98: SPI1_Exchange8bit(value);
 13729  0033AC  5019               	movf	PHYSetLongRAMAddr@value,w,c
 13730  0033AE  EC31  F01D         	call	_SPI1_Exchange8bit
 13731                           
 13732                           ;drv_mrf_miwi_24j40.c: 99: LATAbits.LATA5 = 1;
 13733  0033B2  8A89               	bsf	3977,5,c	;volatile
 13734                           
 13735                           ;drv_mrf_miwi_24j40.c: 100: INTCONbits.INT0IE = tmpRFIE;
 13736  0033B4  B01C               	btfsc	PHYSetLongRAMAddr@tmpRFIE,0,c	;volatile
 13737  0033B6  D002               	bra	u10625
 13738  0033B8  98F2               	bcf	intcon,4,c	;volatile
 13739  0033BA  D001               	bra	u10626
 13740  0033BC                     u10625:
 13741  0033BC  88F2               	bsf	intcon,4,c	;volatile
 13742  0033BE                     u10626:
 13743  0033BE  0012               	return		;funcret
 13744  0033C0                     __end_of_PHYSetLongRAMAddr:
 13745                           	opt stack 0
 13746                           tblptru	equ	0xFF8
 13747                           tblptrh	equ	0xFF7
 13748                           tblptrl	equ	0xFF6
 13749                           tablat	equ	0xFF5
 13750                           prodh	equ	0xFF4
 13751                           prodl	equ	0xFF3
 13752                           intcon	equ	0xFF2
 13753                           intcon2	equ	0xFF1
 13754                           postinc0	equ	0xFEE
 13755                           plusw0	equ	0xFEB
 13756                           wreg	equ	0xFE8
 13757                           indf1	equ	0xFE7
 13758                           postinc1	equ	0xFE6
 13759                           postdec1	equ	0xFE5
 13760                           fsr1h	equ	0xFE2
 13761                           fsr1l	equ	0xFE1
 13762                           indf2	equ	0xFDF
 13763                           postinc2	equ	0xFDE
 13764                           postdec2	equ	0xFDD
 13765                           plusw2	equ	0xFDB
 13766                           fsr2h	equ	0xFDA
 13767                           fsr2l	equ	0xFD9
 13768                           status	equ	0xFD8
 13769                           
 13770 ;; *************** function _SPI1_Exchange8bit *****************
 13771 ;; Defined at:
 13772 ;;		line 51 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 13773 ;; Parameters:    Size  Location     Type
 13774 ;;  data            1    wreg     unsigned char 
 13775 ;; Auto vars:     Size  Location     Type
 13776 ;;  data            1   21[COMRAM] unsigned char 
 13777 ;; Return value:  Size  Location     Type
 13778 ;;                  1    wreg      unsigned char 
 13779 ;; Registers used:
 13780 ;;		wreg, status,2
 13781 ;; Tracked objects:
 13782 ;;		On entry : 0/0
 13783 ;;		On exit  : 0/0
 13784 ;;		Unchanged: 0/0
 13785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13790 ;;Total ram usage:        1 bytes
 13791 ;; Hardware stack levels used:    1
 13792 ;; Hardware stack levels required when called:    3
 13793 ;; This function calls:
 13794 ;;		Nothing
 13795 ;; This function is called by:
 13796 ;;		_PHYSetLongRAMAddr
 13797 ;;		_PHYSetShortRAMAddr
 13798 ;;		_PHYGetShortRAMAddr
 13799 ;;		_PHYGetLongRAMAddr
 13800 ;; This function uses a non-reentrant model
 13801 ;;
 13802                           
 13803                           	psect	text53
 13804  003A62                     __ptext53:
 13805                           	opt stack 0
 13806  003A62                     _SPI1_Exchange8bit:
 13807                           	opt stack 18
 13808                           
 13809                           ;incstack = 0
 13810                           ;SPI1_Exchange8bit@data stored from wreg
 13811  003A62  6E16               	movwf	SPI1_Exchange8bit@data,c
 13812                           
 13813                           ;spi.c: 53: SSP1CON1bits.WCOL = 0;
 13814  003A64  9EC6               	bcf	4038,7,c	;volatile
 13815                           
 13816                           ;spi.c: 55: SSP1BUF = data;
 13817  003A66  C016  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
 13818  003A6A                     l798:
 13819  003A6A  A0C7               	btfss	4039,0,c	;volatile
 13820  003A6C  D7FE               	goto	l798
 13821                           
 13822                           ;spi.c: 58: }
 13823                           ;spi.c: 60: return (SSP1BUF);
 13824  003A6E  50C9               	movf	4041,w,c	;volatile
 13825  003A70  0012               	return		;funcret
 13826  003A72                     __end_of_SPI1_Exchange8bit:
 13827                           	opt stack 0
 13828                           tblptru	equ	0xFF8
 13829                           tblptrh	equ	0xFF7
 13830                           tblptrl	equ	0xFF6
 13831                           tablat	equ	0xFF5
 13832                           prodh	equ	0xFF4
 13833                           prodl	equ	0xFF3
 13834                           intcon	equ	0xFF2
 13835                           intcon2	equ	0xFF1
 13836                           postinc0	equ	0xFEE
 13837                           plusw0	equ	0xFEB
 13838                           wreg	equ	0xFE8
 13839                           indf1	equ	0xFE7
 13840                           postinc1	equ	0xFE6
 13841                           postdec1	equ	0xFE5
 13842                           fsr1h	equ	0xFE2
 13843                           fsr1l	equ	0xFE1
 13844                           indf2	equ	0xFDF
 13845                           postinc2	equ	0xFDE
 13846                           postdec2	equ	0xFDD
 13847                           plusw2	equ	0xFDB
 13848                           fsr2h	equ	0xFDA
 13849                           fsr2l	equ	0xFD9
 13850                           status	equ	0xFD8
 13851                           
 13852 ;; *************** function _AddConnection *****************
 13853 ;; Defined at:
 13854 ;;		line 2525 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 13855 ;; Parameters:    Size  Location     Type
 13856 ;;		None
 13857 ;; Auto vars:     Size  Location     Type
 13858 ;;  i               1   35[COMRAM] unsigned char 
 13859 ;;  connectionSl    1   34[COMRAM] unsigned char 
 13860 ;;  status          1   33[COMRAM] unsigned char 
 13861 ;; Return value:  Size  Location     Type
 13862 ;;                  1    wreg      unsigned char 
 13863 ;; Registers used:
 13864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13865 ;; Tracked objects:
 13866 ;;		On entry : 0/0
 13867 ;;		On exit  : 0/0
 13868 ;;		Unchanged: 0/0
 13869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13871 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13872 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13873 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13874 ;;Total ram usage:        7 bytes
 13875 ;; Hardware stack levels used:    1
 13876 ;; Hardware stack levels required when called:    6
 13877 ;; This function calls:
 13878 ;;		_EEPROM_Write
 13879 ;;		_Total_Connections
 13880 ;;		_isSameAddress
 13881 ;; This function is called by:
 13882 ;;		_P2PTasks
 13883 ;; This function uses a non-reentrant model
 13884 ;;
 13885                           
 13886                           	psect	text54
 13887  002442                     __ptext54:
 13888                           	opt stack 0
 13889  002442                     _AddConnection:
 13890                           	opt stack 19
 13891                           
 13892                           ;miwi_p2p.c: 2529: uint8_t i;
 13893                           ;miwi_p2p.c: 2530: uint8_t status = 0x00;
 13894                           
 13895                           ;incstack = 0
 13896  002442  6A22               	clrf	AddConnection@status,c
 13897                           
 13898                           ;miwi_p2p.c: 2531: uint8_t connectionSlot = 0xFF;
 13899  002444  6823               	setf	AddConnection@connectionSlot,c
 13900                           
 13901                           ;miwi_p2p.c: 2542: for(i = 0; i < 20; i++)
 13902  002446  6A24               	clrf	AddConnection@i,c
 13903  002448                     l12605:
 13904                           
 13905                           ;miwi_p2p.c: 2543: {
 13906                           ;miwi_p2p.c: 2545: if( ConnectionTable[i].status.bits.isValid )
 13907  002448  5024               	movf	AddConnection@i,w,c
 13908  00244A  0D0E               	mullw	14
 13909  00244C  0E84               	movlw	low (_ConnectionTable+12)
 13910  00244E  24F3               	addwf	prodl,w,c
 13911  002450  6ED9               	movwf	fsr2l,c
 13912  002452  0E02               	movlw	high (_ConnectionTable+12)
 13913  002454  20F4               	addwfc	prodh,w,c
 13914  002456  6EDA               	movwf	fsr2h,c
 13915  002458  AEDF               	btfss	indf2,7,c
 13916  00245A  D015               	goto	l12613
 13917                           
 13918                           ;miwi_p2p.c: 2546: {
 13919                           ;miwi_p2p.c: 2548: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 13920  00245C  C0BF  F016         	movff	_rxMessage+3,isSameAddress@Address1
 13921  002460  C0C0  F017         	movff	_rxMessage+4,isSameAddress@Address1+1
 13922  002464  5024               	movf	AddConnection@i,w,c
 13923  002466  0D0E               	mullw	14
 13924  002468  0E7C               	movlw	low (_ConnectionTable+4)
 13925  00246A  24F3               	addwf	prodl,w,c
 13926  00246C  6E18               	movwf	isSameAddress@Address2,c
 13927  00246E  0E02               	movlw	high (_ConnectionTable+4)
 13928  002470  20F4               	addwfc	prodh,w,c
 13929  002472  6E19               	movwf	isSameAddress@Address2+1,c
 13930  002474  ECDF  F01B         	call	_isSameAddress	;wreg free
 13931  002478  0900               	iorlw	0
 13932  00247A  E009               	bz	l12617
 13933                           
 13934                           ;miwi_p2p.c: 2549: {
 13935                           ;miwi_p2p.c: 2550: connectionSlot = i;
 13936  00247C  C024  F023         	movff	AddConnection@i,AddConnection@connectionSlot
 13937                           
 13938                           ;miwi_p2p.c: 2551: status = 0x01;
 13939  002480  0E01               	movlw	1
 13940  002482  6E22               	movwf	AddConnection@status,c
 13941                           
 13942                           ;miwi_p2p.c: 2552: break;
 13943  002484  D008               	goto	l12621
 13944  002486                     l12613:
 13945                           
 13946                           ;miwi_p2p.c: 2556: else if( connectionSlot == 0xFF )
 13947  002486  2823               	incf	AddConnection@connectionSlot,w,c
 13948  002488  E102               	bnz	l12617
 13949                           
 13950                           ;miwi_p2p.c: 2557: {
 13951                           ;miwi_p2p.c: 2559: connectionSlot = i;
 13952  00248A  C024  F023         	movff	AddConnection@i,AddConnection@connectionSlot
 13953  00248E                     l12617:
 13954  00248E  2A24               	incf	AddConnection@i,f,c
 13955  002490  0E13               	movlw	19
 13956  002492  6424               	cpfsgt	AddConnection@i,c
 13957  002494  D7D9               	goto	l12605
 13958  002496                     l12621:
 13959                           
 13960                           ;miwi_p2p.c: 2561: }
 13961                           ;miwi_p2p.c: 2562: }
 13962                           ;miwi_p2p.c: 2564: if( connectionSlot == 0xFF )
 13963  002496  2823               	incf	AddConnection@connectionSlot,w,c
 13964  002498  E101               	bnz	l12629
 13965                           
 13966                           ;miwi_p2p.c: 2565: {
 13967                           ;miwi_p2p.c: 2566: return 0xF1;
 13968  00249A  0CF1               	retlw	241
 13969  00249C                     l12629:
 13970                           
 13971                           ;miwi_p2p.c: 2568: else
 13972                           ;miwi_p2p.c: 2569: {
 13973                           ;miwi_p2p.c: 2570: if( ConnMode >= 0x01 )
 13974  00249C  0100               	movlb	0	; () banked
 13975  00249E  51FF               	movf	_ConnMode& (0+255),w,b
 13976  0024A0  E002               	bz	l677
 13977  0024A2                     l12631:
 13978                           
 13979                           ;miwi_p2p.c: 2571: {
 13980                           ;miwi_p2p.c: 2572: return status;
 13981  0024A2  5022               	movf	AddConnection@status,w,c
 13982  0024A4  0012               	return	
 13983  0024A6                     l677:
 13984                           
 13985                           ; BSR set to: 0
 13986                           ;miwi_p2p.c: 2573: }
 13987                           ;miwi_p2p.c: 2576: MyindexinPC = connectionSlot;
 13988  0024A6  C023  F0DD         	movff	AddConnection@connectionSlot,_MyindexinPC
 13989                           
 13990                           ;miwi_p2p.c: 2578: for(i = 0; i < 8; i++)
 13991  0024AA  6A24               	clrf	AddConnection@i,c
 13992  0024AC                     l12639:
 13993                           
 13994                           ; BSR set to: 0
 13995                           ;miwi_p2p.c: 2579: {
 13996                           ;miwi_p2p.c: 2580: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 13997  0024AC  5024               	movf	AddConnection@i,w,c
 13998  0024AE  25BF               	addwf	(_rxMessage+3)& (0+255),w,b
 13999  0024B0  6ED9               	movwf	fsr2l,c
 14000  0024B2  0E00               	movlw	0
 14001  0024B4  21C0               	addwfc	(_rxMessage+4)& (0+255),w,b
 14002  0024B6  6EDA               	movwf	fsr2h,c
 14003  0024B8  5023               	movf	AddConnection@connectionSlot,w,c
 14004  0024BA  0D0E               	mullw	14
 14005  0024BC  0E78               	movlw	low _ConnectionTable
 14006  0024BE  6E1E               	movwf	??_AddConnection& (0+255),c
 14007  0024C0  0E02               	movlw	high _ConnectionTable
 14008  0024C2  6E1F               	movwf	(??_AddConnection+1)& (0+255),c
 14009  0024C4  0E04               	movlw	4
 14010  0024C6  261E               	addwf	??_AddConnection,f,c
 14011  0024C8  0E00               	movlw	0
 14012  0024CA  221F               	addwfc	??_AddConnection+1,f,c
 14013  0024CC  50F3               	movf	prodl,w,c
 14014  0024CE  261E               	addwf	??_AddConnection,f,c
 14015  0024D0  50F4               	movf	prodh,w,c
 14016  0024D2  221F               	addwfc	??_AddConnection+1,f,c
 14017  0024D4  5024               	movf	AddConnection@i,w,c
 14018  0024D6  241E               	addwf	??_AddConnection,w,c
 14019  0024D8  6EE1               	movwf	fsr1l,c
 14020  0024DA  0E00               	movlw	0
 14021  0024DC  201F               	addwfc	??_AddConnection+1,w,c
 14022  0024DE  6EE2               	movwf	fsr1h,c
 14023  0024E0  CFDF FFE7          	movff	indf2,indf1
 14024                           
 14025                           ; BSR set to: 0
 14026  0024E4  2A24               	incf	AddConnection@i,f,c
 14027                           
 14028                           ; BSR set to: 0
 14029  0024E6  0E07               	movlw	7
 14030  0024E8  6424               	cpfsgt	AddConnection@i,c
 14031  0024EA  D7E0               	goto	l12639
 14032                           
 14033                           ; BSR set to: 0
 14034                           ;miwi_p2p.c: 2583: }
 14035                           ;miwi_p2p.c: 2588: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 14036  0024EC  5023               	movf	AddConnection@connectionSlot,w,c
 14037  0024EE  0D0E               	mullw	14
 14038  0024F0  0E84               	movlw	low (_ConnectionTable+12)
 14039  0024F2  24F3               	addwf	prodl,w,c
 14040  0024F4  6ED9               	movwf	fsr2l,c
 14041  0024F6  0E02               	movlw	high (_ConnectionTable+12)
 14042  0024F8  20F4               	addwfc	prodh,w,c
 14043  0024FA  6EDA               	movwf	fsr2h,c
 14044  0024FC  8EDF               	bsf	indf2,7,c
 14045                           
 14046                           ;miwi_p2p.c: 2589: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 14047  0024FE  EE20 F002          	lfsr	2,2
 14048  002502  51C1               	movf	(_rxMessage+5)& (0+255),w,b
 14049  002504  26D9               	addwf	fsr2l,f,c
 14050  002506  51C2               	movf	(_rxMessage+6)& (0+255),w,b
 14051  002508  22DA               	addwfc	fsr2h,f,c
 14052  00250A  50DF               	movf	indf2,w,c
 14053  00250C  6E1E               	movwf	??_AddConnection& (0+255),c
 14054  00250E  0E01               	movlw	1
 14055  002510  161E               	andwf	??_AddConnection,f,c
 14056  002512  5023               	movf	AddConnection@connectionSlot,w,c
 14057  002514  0D0E               	mullw	14
 14058  002516  0E84               	movlw	low (_ConnectionTable+12)
 14059  002518  24F3               	addwf	prodl,w,c
 14060  00251A  6ED9               	movwf	fsr2l,c
 14061  00251C  0E02               	movlw	high (_ConnectionTable+12)
 14062  00251E  20F4               	addwfc	prodh,w,c
 14063  002520  6EDA               	movwf	fsr2h,c
 14064  002522  50DF               	movf	223,w,c
 14065  002524  181E               	xorwf	??_AddConnection,w,c
 14066  002526  0BFE               	andlw	-2
 14067  002528  181E               	xorwf	??_AddConnection,w,c
 14068  00252A  6EDF               	movwf	223,c
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;miwi_p2p.c: 2593: for(i = 0; i < 1; i++)
 14072  00252C  6A24               	clrf	AddConnection@i,c
 14073  00252E                     l12653:
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;miwi_p2p.c: 2594: {
 14077                           ;miwi_p2p.c: 2595: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 14078  00252E  5024               	movf	AddConnection@i,w,c
 14079  002530  25C1               	addwf	(_rxMessage+5)& (0+255),w,b
 14080  002532  6E1E               	movwf	??_AddConnection& (0+255),c
 14081  002534  0E00               	movlw	0
 14082  002536  21C2               	addwfc	(_rxMessage+6)& (0+255),w,b
 14083  002538  6E1F               	movwf	(??_AddConnection+1)& (0+255),c
 14084  00253A  0E03               	movlw	3
 14085  00253C  241E               	addwf	??_AddConnection,w,c
 14086  00253E  6ED9               	movwf	fsr2l,c
 14087  002540  0E00               	movlw	0
 14088  002542  201F               	addwfc	??_AddConnection+1,w,c
 14089  002544  6EDA               	movwf	fsr2h,c
 14090  002546  5023               	movf	AddConnection@connectionSlot,w,c
 14091  002548  0D0E               	mullw	14
 14092  00254A  0E78               	movlw	low _ConnectionTable
 14093  00254C  6E20               	movwf	(??_AddConnection+2)& (0+255),c
 14094  00254E  0E02               	movlw	high _ConnectionTable
 14095  002550  6E21               	movwf	(??_AddConnection+3)& (0+255),c
 14096  002552  0E0D               	movlw	13
 14097  002554  2620               	addwf	??_AddConnection+2,f,c
 14098  002556  0E00               	movlw	0
 14099  002558  2221               	addwfc	??_AddConnection+3,f,c
 14100  00255A  50F3               	movf	prodl,w,c
 14101  00255C  2620               	addwf	??_AddConnection+2,f,c
 14102  00255E  50F4               	movf	prodh,w,c
 14103  002560  2221               	addwfc	??_AddConnection+3,f,c
 14104  002562  5024               	movf	AddConnection@i,w,c
 14105  002564  2420               	addwf	??_AddConnection+2,w,c
 14106  002566  6EE1               	movwf	fsr1l,c
 14107  002568  0E00               	movlw	0
 14108  00256A  2021               	addwfc	??_AddConnection+3,w,c
 14109  00256C  6EE2               	movwf	fsr1h,c
 14110  00256E  CFDF FFE7          	movff	indf2,indf1
 14111                           
 14112                           ; BSR set to: 0
 14113  002572  2A24               	incf	AddConnection@i,f,c
 14114                           
 14115                           ; BSR set to: 0
 14116  002574  5024               	movf	AddConnection@i,w,c
 14117  002576  E0DB               	bz	l12653
 14118                           
 14119                           ; BSR set to: 0
 14120                           ;miwi_p2p.c: 2596: }
 14121                           ;miwi_p2p.c: 2603: LatestConnection = connectionSlot;
 14122  002578  C023  F0DB         	movff	AddConnection@connectionSlot,_LatestConnection
 14123                           
 14124                           ;miwi_p2p.c: 2605: P2PStatus.bits.SearchConnection = 0;
 14125  00257C  99DF               	bcf	_P2PStatus& (0+255),4,b	;volatile
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;miwi_p2p.c: 2606: }
 14129                           ;miwi_p2p.c: 2607: conn_size = Total_Connections();
 14130  00257E  ECE0  F019         	call	_Total_Connections	;wreg free
 14131  002582  6E47               	movwf	_conn_size,c
 14132                           
 14133                           ; BSR set to: 0
 14134                           ;miwi_p2p.c: 2608: EEPROM_Write((uint8_t *)&conn_size, 0xBA, 1);
 14135  002584  0E47               	movlw	low _conn_size
 14136  002586  6E17               	movwf	EEPROM_Write@dest,c
 14137  002588  6A18               	clrf	EEPROM_Write@dest+1,c
 14138  00258A  0EBA               	movlw	186
 14139  00258C  6E19               	movwf	EEPROM_Write@addr,c
 14140  00258E  0E01               	movlw	1
 14141  002590  6E1A               	movwf	EEPROM_Write@count,c
 14142  002592  EC4D  F017         	call	_EEPROM_Write	;wreg free
 14143  002596  D785               	goto	l12631
 14144  002598                     __end_of_AddConnection:
 14145                           	opt stack 0
 14146                           tblptru	equ	0xFF8
 14147                           tblptrh	equ	0xFF7
 14148                           tblptrl	equ	0xFF6
 14149                           tablat	equ	0xFF5
 14150                           prodh	equ	0xFF4
 14151                           prodl	equ	0xFF3
 14152                           intcon	equ	0xFF2
 14153                           intcon2	equ	0xFF1
 14154                           postinc0	equ	0xFEE
 14155                           plusw0	equ	0xFEB
 14156                           wreg	equ	0xFE8
 14157                           indf1	equ	0xFE7
 14158                           postinc1	equ	0xFE6
 14159                           postdec1	equ	0xFE5
 14160                           fsr1h	equ	0xFE2
 14161                           fsr1l	equ	0xFE1
 14162                           indf2	equ	0xFDF
 14163                           postinc2	equ	0xFDE
 14164                           postdec2	equ	0xFDD
 14165                           plusw2	equ	0xFDB
 14166                           fsr2h	equ	0xFDA
 14167                           fsr2l	equ	0xFD9
 14168                           status	equ	0xFD8
 14169                           
 14170 ;; *************** function _isSameAddress *****************
 14171 ;; Defined at:
 14172 ;;		line 2126 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 14173 ;; Parameters:    Size  Location     Type
 14174 ;;  Address1        2   21[COMRAM] PTR unsigned char 
 14175 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 14176 ;;  Address2        2   23[COMRAM] PTR unsigned char 
 14177 ;;		 -> ConnectionTable(280), 
 14178 ;; Auto vars:     Size  Location     Type
 14179 ;;  i               1   27[COMRAM] unsigned char 
 14180 ;; Return value:  Size  Location     Type
 14181 ;;                  1    wreg      unsigned char 
 14182 ;; Registers used:
 14183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14184 ;; Tracked objects:
 14185 ;;		On entry : 0/0
 14186 ;;		On exit  : 0/0
 14187 ;;		Unchanged: 0/0
 14188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14190 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14192 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14193 ;;Total ram usage:        7 bytes
 14194 ;; Hardware stack levels used:    1
 14195 ;; Hardware stack levels required when called:    3
 14196 ;; This function calls:
 14197 ;;		Nothing
 14198 ;; This function is called by:
 14199 ;;		_P2PTasks
 14200 ;;		_AddConnection
 14201 ;; This function uses a non-reentrant model
 14202 ;;
 14203                           
 14204                           	psect	text55
 14205  0037BE                     __ptext55:
 14206                           	opt stack 0
 14207  0037BE                     _isSameAddress:
 14208                           	opt stack 22
 14209                           
 14210                           ;miwi_p2p.c: 2128: uint8_t i;
 14211                           ;miwi_p2p.c: 2130: for(i = 0; i < 8; i++)
 14212                           
 14213                           ;incstack = 0
 14214  0037BE  6A1C               	clrf	isSameAddress@i,c
 14215  0037C0                     l12063:
 14216                           
 14217                           ;miwi_p2p.c: 2131: {
 14218                           ;miwi_p2p.c: 2132: if( Address1[i] != Address2[i] )
 14219  0037C0  501C               	movf	isSameAddress@i,w,c
 14220  0037C2  2418               	addwf	isSameAddress@Address2,w,c
 14221  0037C4  6ED9               	movwf	fsr2l,c
 14222  0037C6  0E00               	movlw	0
 14223  0037C8  2019               	addwfc	isSameAddress@Address2+1,w,c
 14224  0037CA  6EDA               	movwf	fsr2h,c
 14225  0037CC  501C               	movf	isSameAddress@i,w,c
 14226  0037CE  2416               	addwf	isSameAddress@Address1,w,c
 14227  0037D0  6EE1               	movwf	fsr1l,c
 14228  0037D2  0E00               	movlw	0
 14229  0037D4  2017               	addwfc	isSameAddress@Address1+1,w,c
 14230  0037D6  6EE2               	movwf	fsr1h,c
 14231  0037D8  50DE               	movf	postinc2,w,c
 14232  0037DA  18E6               	xorwf	postinc1,w,c
 14233  0037DC  E001               	bz	l12069
 14234                           
 14235                           ;miwi_p2p.c: 2133: {
 14236                           ;miwi_p2p.c: 2134: return 0;
 14237  0037DE  0C00               	retlw	0
 14238  0037E0                     l12069:
 14239  0037E0  2A1C               	incf	isSameAddress@i,f,c
 14240  0037E2  0E07               	movlw	7
 14241  0037E4  641C               	cpfsgt	isSameAddress@i,c
 14242  0037E6  D7EC               	goto	l12063
 14243  0037E8  0C01               	retlw	1
 14244  0037EA                     __end_of_isSameAddress:
 14245                           	opt stack 0
 14246                           tblptru	equ	0xFF8
 14247                           tblptrh	equ	0xFF7
 14248                           tblptrl	equ	0xFF6
 14249                           tablat	equ	0xFF5
 14250                           prodh	equ	0xFF4
 14251                           prodl	equ	0xFF3
 14252                           intcon	equ	0xFF2
 14253                           intcon2	equ	0xFF1
 14254                           postinc0	equ	0xFEE
 14255                           plusw0	equ	0xFEB
 14256                           wreg	equ	0xFE8
 14257                           indf1	equ	0xFE7
 14258                           postinc1	equ	0xFE6
 14259                           postdec1	equ	0xFE5
 14260                           fsr1h	equ	0xFE2
 14261                           fsr1l	equ	0xFE1
 14262                           indf2	equ	0xFDF
 14263                           postinc2	equ	0xFDE
 14264                           postdec2	equ	0xFDD
 14265                           plusw2	equ	0xFDB
 14266                           fsr2h	equ	0xFDA
 14267                           fsr2l	equ	0xFD9
 14268                           status	equ	0xFD8
 14269                           
 14270 ;; *************** function _Total_Connections *****************
 14271 ;; Defined at:
 14272 ;;		line 62 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 14273 ;; Parameters:    Size  Location     Type
 14274 ;;		None
 14275 ;; Auto vars:     Size  Location     Type
 14276 ;;  i               1   22[COMRAM] unsigned char 
 14277 ;;  count           1   21[COMRAM] unsigned char 
 14278 ;; Return value:  Size  Location     Type
 14279 ;;                  1    wreg      unsigned char 
 14280 ;; Registers used:
 14281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14282 ;; Tracked objects:
 14283 ;;		On entry : F/0
 14284 ;;		On exit  : F/0
 14285 ;;		Unchanged: F/0
 14286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14291 ;;Total ram usage:        2 bytes
 14292 ;; Hardware stack levels used:    1
 14293 ;; Hardware stack levels required when called:    3
 14294 ;; This function calls:
 14295 ;;		Nothing
 14296 ;; This function is called by:
 14297 ;;		_AddConnection
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           
 14301                           	psect	text56
 14302  0033C0                     __ptext56:
 14303                           	opt stack 0
 14304  0033C0                     _Total_Connections:
 14305                           	opt stack 21
 14306                           
 14307                           ; BSR set to: 0
 14308                           ;miwi_p2p.c: 64: uint8_t count=0 , i;
 14309                           
 14310                           ;incstack = 0
 14311  0033C0  6A16               	clrf	Total_Connections@count,c
 14312                           
 14313                           ;miwi_p2p.c: 65: for (i=0;i<20;i++)
 14314  0033C2  6A17               	clrf	Total_Connections@i,c
 14315  0033C4                     l12011:
 14316                           
 14317                           ; BSR set to: 0
 14318                           ;miwi_p2p.c: 66: {
 14319                           ;miwi_p2p.c: 68: if (ConnectionTable[i].Address[0] != 0x00 || ConnectionTable[i].Address
      +                          [1] != 0x00 || ConnectionTable[i].Address[2] != 0x00)
 14320  0033C4  5017               	movf	Total_Connections@i,w,c
 14321  0033C6  0D0E               	mullw	14
 14322  0033C8  0E7C               	movlw	low (_ConnectionTable+4)
 14323  0033CA  24F3               	addwf	prodl,w,c
 14324  0033CC  6ED9               	movwf	fsr2l,c
 14325  0033CE  0E02               	movlw	high (_ConnectionTable+4)
 14326  0033D0  20F4               	addwfc	prodh,w,c
 14327  0033D2  6EDA               	movwf	fsr2h,c
 14328  0033D4  50DF               	movf	indf2,w,c
 14329  0033D6  E114               	bnz	l12017
 14330                           
 14331                           ; BSR set to: 0
 14332  0033D8  5017               	movf	Total_Connections@i,w,c
 14333  0033DA  0D0E               	mullw	14
 14334  0033DC  0E7D               	movlw	low (_ConnectionTable+5)
 14335  0033DE  24F3               	addwf	prodl,w,c
 14336  0033E0  6ED9               	movwf	fsr2l,c
 14337  0033E2  0E02               	movlw	high (_ConnectionTable+5)
 14338  0033E4  20F4               	addwfc	prodh,w,c
 14339  0033E6  6EDA               	movwf	fsr2h,c
 14340  0033E8  50DF               	movf	indf2,w,c
 14341  0033EA  E10A               	bnz	l12017
 14342                           
 14343                           ; BSR set to: 0
 14344  0033EC  5017               	movf	Total_Connections@i,w,c
 14345  0033EE  0D0E               	mullw	14
 14346  0033F0  0E7E               	movlw	low (_ConnectionTable+6)
 14347  0033F2  24F3               	addwf	prodl,w,c
 14348  0033F4  6ED9               	movwf	fsr2l,c
 14349  0033F6  0E02               	movlw	high (_ConnectionTable+6)
 14350  0033F8  20F4               	addwfc	prodh,w,c
 14351  0033FA  6EDA               	movwf	fsr2h,c
 14352  0033FC  50DF               	movf	indf2,w,c
 14353  0033FE  E001               	bz	l378
 14354  003400                     l12017:
 14355                           
 14356                           ; BSR set to: 0
 14357                           ;miwi_p2p.c: 69: {
 14358                           ;miwi_p2p.c: 70: count++;
 14359  003400  2A16               	incf	Total_Connections@count,f,c
 14360  003402                     l378:
 14361                           
 14362                           ; BSR set to: 0
 14363  003402  2A17               	incf	Total_Connections@i,f,c
 14364                           
 14365                           ; BSR set to: 0
 14366  003404  0E13               	movlw	19
 14367  003406  6417               	cpfsgt	Total_Connections@i,c
 14368  003408  D7DD               	goto	l12011
 14369                           
 14370                           ; BSR set to: 0
 14371                           ;miwi_p2p.c: 71: }
 14372                           ;miwi_p2p.c: 78: }
 14373                           ;miwi_p2p.c: 79: return count;
 14374  00340A  5016               	movf	Total_Connections@count,w,c
 14375                           
 14376                           ; BSR set to: 0
 14377  00340C  0012               	return		;funcret
 14378  00340E                     __end_of_Total_Connections:
 14379                           	opt stack 0
 14380                           tblptru	equ	0xFF8
 14381                           tblptrh	equ	0xFF7
 14382                           tblptrl	equ	0xFF6
 14383                           tablat	equ	0xFF5
 14384                           prodh	equ	0xFF4
 14385                           prodl	equ	0xFF3
 14386                           intcon	equ	0xFF2
 14387                           intcon2	equ	0xFF1
 14388                           postinc0	equ	0xFEE
 14389                           plusw0	equ	0xFEB
 14390                           wreg	equ	0xFE8
 14391                           indf1	equ	0xFE7
 14392                           postinc1	equ	0xFE6
 14393                           postdec1	equ	0xFE5
 14394                           fsr1h	equ	0xFE2
 14395                           fsr1l	equ	0xFE1
 14396                           indf2	equ	0xFDF
 14397                           postinc2	equ	0xFDE
 14398                           postdec2	equ	0xFDD
 14399                           plusw2	equ	0xFDB
 14400                           fsr2h	equ	0xFDA
 14401                           fsr2l	equ	0xFD9
 14402                           status	equ	0xFD8
 14403                           
 14404 ;; *************** function _MiApp_DiscardMessage *****************
 14405 ;; Defined at:
 14406 ;;		line 2370 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 14407 ;; Parameters:    Size  Location     Type
 14408 ;;		None
 14409 ;; Auto vars:     Size  Location     Type
 14410 ;;		None
 14411 ;; Return value:  Size  Location     Type
 14412 ;;		None               void
 14413 ;; Registers used:
 14414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14415 ;; Tracked objects:
 14416 ;;		On entry : 0/0
 14417 ;;		On exit  : 0/0
 14418 ;;		Unchanged: 0/0
 14419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14424 ;;Total ram usage:        0 bytes
 14425 ;; Hardware stack levels used:    1
 14426 ;; Hardware stack levels required when called:    4
 14427 ;; This function calls:
 14428 ;;		_MiMAC_DiscardPacket
 14429 ;; This function is called by:
 14430 ;;		_MiApp_EstablishConnection
 14431 ;;		_Process_RxMessage
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           	psect	text57
 14436  003AC6                     __ptext57:
 14437                           	opt stack 0
 14438  003AC6                     _MiApp_DiscardMessage:
 14439                           	opt stack 23
 14440                           
 14441                           ;miwi_p2p.c: 2372: P2PStatus.bits.RxHasUserData = 0;
 14442                           
 14443                           ; BSR set to: 0
 14444                           ;incstack = 0
 14445  003AC6  0100               	movlb	0	; () banked
 14446  003AC8  97DF               	bcf	_P2PStatus& (0+255),3,b	;volatile
 14447                           
 14448                           ; BSR set to: 0
 14449                           ;miwi_p2p.c: 2373: MiMAC_DiscardPacket();
 14450  003ACA  EF10  F01D         	goto	_MiMAC_DiscardPacket	;wreg free
 14451  003ACE                     __end_of_MiApp_DiscardMessage:
 14452                           	opt stack 0
 14453                           tblptru	equ	0xFF8
 14454                           tblptrh	equ	0xFF7
 14455                           tblptrl	equ	0xFF6
 14456                           tablat	equ	0xFF5
 14457                           prodh	equ	0xFF4
 14458                           prodl	equ	0xFF3
 14459                           intcon	equ	0xFF2
 14460                           intcon2	equ	0xFF1
 14461                           postinc0	equ	0xFEE
 14462                           plusw0	equ	0xFEB
 14463                           wreg	equ	0xFE8
 14464                           indf1	equ	0xFE7
 14465                           postinc1	equ	0xFE6
 14466                           postdec1	equ	0xFE5
 14467                           fsr1h	equ	0xFE2
 14468                           fsr1l	equ	0xFE1
 14469                           indf2	equ	0xFDF
 14470                           postinc2	equ	0xFDE
 14471                           postdec2	equ	0xFDD
 14472                           plusw2	equ	0xFDB
 14473                           fsr2h	equ	0xFDA
 14474                           fsr2l	equ	0xFD9
 14475                           status	equ	0xFD8
 14476                           
 14477 ;; *************** function _MiMAC_DiscardPacket *****************
 14478 ;; Defined at:
 14479 ;;		line 693 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 14480 ;; Parameters:    Size  Location     Type
 14481 ;;		None
 14482 ;; Auto vars:     Size  Location     Type
 14483 ;;		None
 14484 ;; Return value:  Size  Location     Type
 14485 ;;		None               void
 14486 ;; Registers used:
 14487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14488 ;; Tracked objects:
 14489 ;;		On entry : 0/0
 14490 ;;		On exit  : 0/0
 14491 ;;		Unchanged: 0/0
 14492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14497 ;;Total ram usage:        0 bytes
 14498 ;; Hardware stack levels used:    1
 14499 ;; Hardware stack levels required when called:    3
 14500 ;; This function calls:
 14501 ;;		Nothing
 14502 ;; This function is called by:
 14503 ;;		_MiMAC_ReceivedPacket
 14504 ;;		_P2PTasks
 14505 ;;		_MiApp_DiscardMessage
 14506 ;; This function uses a non-reentrant model
 14507 ;;
 14508                           
 14509                           	psect	text58
 14510  003A20                     __ptext58:
 14511                           	opt stack 0
 14512  003A20                     _MiMAC_DiscardPacket:
 14513                           	opt stack 21
 14514                           
 14515                           ;drv_mrf_miwi_24j40.c: 697: if (BankIndex < 2)
 14516                           
 14517                           ;incstack = 0
 14518  003A20  0E02               	movlw	2
 14519  003A22  6049               	cpfslt	_BankIndex,c
 14520  003A24  0C02               	retlw	2
 14521                           
 14522                           ;drv_mrf_miwi_24j40.c: 698: {
 14523                           ;drv_mrf_miwi_24j40.c: 699: RxBuffer[BankIndex].PayloadLen = 0;
 14524  003A26  5049               	movf	_BankIndex,w,c
 14525  003A28  0D45               	mullw	69
 14526  003A2A  0E0C               	movlw	low _RxBuffer
 14527  003A2C  24F3               	addwf	prodl,w,c
 14528  003A2E  6ED9               	movwf	fsr2l,c
 14529  003A30  0E01               	movlw	high _RxBuffer
 14530  003A32  20F4               	addwfc	prodh,w,c
 14531  003A34  6EDA               	movwf	fsr2h,c
 14532  003A36  6ADF               	clrf	indf2,c
 14533  003A38  0C00               	retlw	0	;funcret
 14534  003A3A                     __end_of_MiMAC_DiscardPacket:
 14535                           	opt stack 0
 14536                           tblptru	equ	0xFF8
 14537                           tblptrh	equ	0xFF7
 14538                           tblptrl	equ	0xFF6
 14539                           tablat	equ	0xFF5
 14540                           prodh	equ	0xFF4
 14541                           prodl	equ	0xFF3
 14542                           intcon	equ	0xFF2
 14543                           intcon2	equ	0xFF1
 14544                           postinc0	equ	0xFEE
 14545                           plusw0	equ	0xFEB
 14546                           wreg	equ	0xFE8
 14547                           indf1	equ	0xFE7
 14548                           postinc1	equ	0xFE6
 14549                           postdec1	equ	0xFE5
 14550                           fsr1h	equ	0xFE2
 14551                           fsr1l	equ	0xFE1
 14552                           indf2	equ	0xFDF
 14553                           postinc2	equ	0xFDE
 14554                           postdec2	equ	0xFDD
 14555                           plusw2	equ	0xFDB
 14556                           fsr2h	equ	0xFDA
 14557                           fsr2l	equ	0xFD9
 14558                           status	equ	0xFD8
 14559                           
 14560 ;; *************** function _MiApp_ConnectionMode *****************
 14561 ;; Defined at:
 14562 ;;		line 2962 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 14563 ;; Parameters:    Size  Location     Type
 14564 ;;  Mode            1    wreg     unsigned char 
 14565 ;; Auto vars:     Size  Location     Type
 14566 ;;  Mode            1   30[COMRAM] unsigned char 
 14567 ;; Return value:  Size  Location     Type
 14568 ;;		None               void
 14569 ;; Registers used:
 14570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14571 ;; Tracked objects:
 14572 ;;		On entry : 0/0
 14573 ;;		On exit  : 0/0
 14574 ;;		Unchanged: 0/0
 14575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14578 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14580 ;;Total ram usage:        2 bytes
 14581 ;; Hardware stack levels used:    1
 14582 ;; Hardware stack levels required when called:    6
 14583 ;; This function calls:
 14584 ;;		_EEPROM_Write
 14585 ;; This function is called by:
 14586 ;;		_Initialize_Demo
 14587 ;; This function uses a non-reentrant model
 14588 ;;
 14589                           
 14590                           	psect	text59
 14591  0036D4                     __ptext59:
 14592                           	opt stack 0
 14593  0036D4                     _MiApp_ConnectionMode:
 14594                           	opt stack 23
 14595                           
 14596                           ;incstack = 0
 14597                           ;MiApp_ConnectionMode@Mode stored from wreg
 14598  0036D4  6E1F               	movwf	MiApp_ConnectionMode@Mode,c
 14599                           
 14600                           ;miwi_p2p.c: 2964: if( Mode > 3 )
 14601  0036D6  0E03               	movlw	3
 14602  0036D8  641F               	cpfsgt	MiApp_ConnectionMode@Mode,c
 14603  0036DA  D001               	goto	l697
 14604  0036DC  0C03               	retlw	3
 14605  0036DE                     l697:
 14606                           
 14607                           ;miwi_p2p.c: 2967: }
 14608                           ;miwi_p2p.c: 2968: ConnMode = Mode;
 14609  0036DE  C01F  F0FF         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 14610                           
 14611                           ;miwi_p2p.c: 2969: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 14612  0036E2  C0FF  F01E         	movff	_ConnMode,??_MiApp_ConnectionMode
 14613  0036E6  3A1E               	swapf	??_MiApp_ConnectionMode,f,c
 14614  0036E8  0EF0               	movlw	240
 14615  0036EA  161E               	andwf	??_MiApp_ConnectionMode,f,c
 14616  0036EC  0100               	movlb	0	; () banked
 14617  0036EE  51DE               	movf	_P2PCapacityInfo& (0+255),w,b
 14618  0036F0  0B0F               	andlw	15
 14619  0036F2  101E               	iorwf	??_MiApp_ConnectionMode,w,c
 14620  0036F4  6FDE               	movwf	_P2PCapacityInfo& (0+255),b
 14621                           
 14622                           ; BSR set to: 0
 14623                           ;miwi_p2p.c: 2972: EEPROM_Write((uint8_t *)&ConnMode, 0x03, 1);
 14624  0036F6  0EFF               	movlw	low _ConnMode
 14625  0036F8  6E17               	movwf	EEPROM_Write@dest,c
 14626  0036FA  6A18               	clrf	EEPROM_Write@dest+1,c
 14627  0036FC  0E03               	movlw	3
 14628  0036FE  6E19               	movwf	EEPROM_Write@addr,c
 14629  003700  0E01               	movlw	1
 14630  003702  6E1A               	movwf	EEPROM_Write@count,c
 14631  003704  EF4D  F017         	goto	_EEPROM_Write	;wreg free
 14632  003708                     __end_of_MiApp_ConnectionMode:
 14633                           	opt stack 0
 14634                           tblptru	equ	0xFF8
 14635                           tblptrh	equ	0xFF7
 14636                           tblptrl	equ	0xFF6
 14637                           tablat	equ	0xFF5
 14638                           prodh	equ	0xFF4
 14639                           prodl	equ	0xFF3
 14640                           intcon	equ	0xFF2
 14641                           intcon2	equ	0xFF1
 14642                           postinc0	equ	0xFEE
 14643                           plusw0	equ	0xFEB
 14644                           wreg	equ	0xFE8
 14645                           indf1	equ	0xFE7
 14646                           postinc1	equ	0xFE6
 14647                           postdec1	equ	0xFE5
 14648                           fsr1h	equ	0xFE2
 14649                           fsr1l	equ	0xFE1
 14650                           indf2	equ	0xFDF
 14651                           postinc2	equ	0xFDE
 14652                           postdec2	equ	0xFDD
 14653                           plusw2	equ	0xFDB
 14654                           fsr2h	equ	0xFDA
 14655                           fsr2l	equ	0xFD9
 14656                           status	equ	0xFD8
 14657                           
 14658 ;; *************** function _EEPROM_Write *****************
 14659 ;; Defined at:
 14660 ;;		line 117 in file "../src/system_config/miwikit_pic18f46j50_24j40/eeprom.c"
 14661 ;; Parameters:    Size  Location     Type
 14662 ;;  dest            2   22[COMRAM] PTR unsigned char 
 14663 ;;		 -> myConnectionIndex_in_PanCo(1), myPANID(2), ConnMode(1), currentChannel(1), 
 14664 ;;		 -> role(1), conn_size(1), ConnectionTable(280), 
 14665 ;;  addr            1   24[COMRAM] unsigned char 
 14666 ;;  count           1   25[COMRAM] unsigned char 
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;  PageCounter     1   28[COMRAM] unsigned char 
 14669 ;;  oldRFIE         1   27[COMRAM] unsigned char 
 14670 ;; Return value:  Size  Location     Type
 14671 ;;		None               void
 14672 ;; Registers used:
 14673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14674 ;; Tracked objects:
 14675 ;;		On entry : 0/0
 14676 ;;		On exit  : 0/0
 14677 ;;		Unchanged: 0/0
 14678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14682 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14683 ;;Total ram usage:        7 bytes
 14684 ;; Hardware stack levels used:    1
 14685 ;; Hardware stack levels required when called:    5
 14686 ;; This function calls:
 14687 ;;		_MacroNop
 14688 ;;		_SPIGet2
 14689 ;;		_SPIPut2
 14690 ;; This function is called by:
 14691 ;;		_P2PTasks
 14692 ;;		_MiApp_ProtocolInit
 14693 ;;		_MiApp_SetChannel
 14694 ;;		_AddConnection
 14695 ;;		_MiApp_RemoveConnection
 14696 ;;		_MiApp_ConnectionMode
 14697 ;;		_Initialize_Demo
 14698 ;; This function uses a non-reentrant model
 14699 ;;
 14700                           
 14701                           	psect	text60
 14702  002E9A                     __ptext60:
 14703                           	opt stack 0
 14704  002E9A                     _EEPROM_Write:
 14705                           	opt stack 18
 14706                           
 14707                           ;eeprom.c: 125: uint8_t oldRFIE = INTCONbits.INT0IE;
 14708                           
 14709                           ;incstack = 0
 14710  002E9A  0E00               	movlw	0
 14711  002E9C  B8F2               	btfsc	intcon,4,c	;volatile
 14712  002E9E  0E01               	movlw	1
 14713  002EA0  6E1C               	movwf	EEPROM_Write@oldRFIE,c
 14714                           
 14715                           ;eeprom.c: 126: INTCONbits.INT0IE = 0;
 14716  002EA2  98F2               	bcf	intcon,4,c	;volatile
 14717  002EA4                     l11935:
 14718                           
 14719                           ;eeprom.c: 132: {
 14720                           ;eeprom.c: 133: LATDbits.LATD5 = 0;
 14721  002EA4  9A8C               	bcf	3980,5,c	;volatile
 14722                           
 14723                           ;eeprom.c: 134: SPIPut2(0x05);
 14724  002EA6  0E05               	movlw	5
 14725  002EA8  EC1D  F01D         	call	_SPIPut2
 14726                           
 14727                           ;eeprom.c: 135: PageCounter = SPIGet2();
 14728  002EAC  EC5E  F01D         	call	_SPIGet2	;wreg free
 14729  002EB0  6E1D               	movwf	EEPROM_Write@PageCounter,c
 14730                           
 14731                           ;eeprom.c: 136: LATDbits.LATD5 = 1;
 14732  002EB2  8A8C               	bsf	3980,5,c	;volatile
 14733                           
 14734                           ;eeprom.c: 137: MacroNop();
 14735  002EB4  EC69  F01D         	call	_MacroNop	;wreg free
 14736                           
 14737                           ;eeprom.c: 138: } while(PageCounter & 0x01 );
 14738  002EB8  B01D               	btfsc	EEPROM_Write@PageCounter,0,c
 14739  002EBA  D7F4               	goto	l11935
 14740                           
 14741                           ;eeprom.c: 140: LATDbits.LATD5 = 0;
 14742  002EBC  9A8C               	bcf	3980,5,c	;volatile
 14743                           
 14744                           ;eeprom.c: 141: SPIPut2(0x06);
 14745  002EBE  0E06               	movlw	6
 14746  002EC0  EC1D  F01D         	call	_SPIPut2
 14747                           
 14748                           ;eeprom.c: 142: LATDbits.LATD5 = 1;
 14749  002EC4  8A8C               	bsf	3980,5,c	;volatile
 14750                           
 14751                           ;eeprom.c: 143: MacroNop();
 14752  002EC6  EC69  F01D         	call	_MacroNop	;wreg free
 14753                           
 14754                           ;eeprom.c: 144: LATDbits.LATD5 = 0;
 14755  002ECA  9A8C               	bcf	3980,5,c	;volatile
 14756                           
 14757                           ;eeprom.c: 146: SPIPut2(0x02);
 14758  002ECC  0E02               	movlw	2
 14759  002ECE  EC1D  F01D         	call	_SPIPut2
 14760                           
 14761                           ;eeprom.c: 147: SPIPut2(addr);
 14762  002ED2  5019               	movf	EEPROM_Write@addr,w,c
 14763  002ED4  EC1D  F01D         	call	_SPIPut2
 14764                           
 14765                           ;eeprom.c: 149: PageCounter = 0;
 14766  002ED8  6A1D               	clrf	EEPROM_Write@PageCounter,c
 14767                           
 14768                           ;eeprom.c: 150: while( count > 0 )
 14769  002EDA  D015               	goto	l11975
 14770  002EDC                     l11961:
 14771                           
 14772                           ;eeprom.c: 151: {
 14773                           ;eeprom.c: 152: SPIPut2(*dest++);
 14774  002EDC  C017  FFD9         	movff	EEPROM_Write@dest,fsr2l
 14775  002EE0  C018  FFDA         	movff	EEPROM_Write@dest+1,fsr2h
 14776  002EE4  50DF               	movf	indf2,w,c
 14777  002EE6  EC1D  F01D         	call	_SPIPut2
 14778  002EEA  4A17               	infsnz	EEPROM_Write@dest,f,c
 14779  002EEC  2A18               	incf	EEPROM_Write@dest+1,f,c
 14780                           
 14781                           ;eeprom.c: 153: count--;
 14782  002EEE  061A               	decf	EEPROM_Write@count,f,c
 14783                           
 14784                           ;eeprom.c: 154: PageCounter++;
 14785  002EF0  2A1D               	incf	EEPROM_Write@PageCounter,f,c
 14786                           
 14787                           ;eeprom.c: 155: if( ((addr + PageCounter) & (16-1)) == 0 )
 14788  002EF2  5019               	movf	EEPROM_Write@addr,w,c
 14789  002EF4  241D               	addwf	EEPROM_Write@PageCounter,w,c
 14790  002EF6  6E1B               	movwf	??_EEPROM_Write& (0+255),c
 14791  002EF8  0E0F               	movlw	15
 14792  002EFA  161B               	andwf	??_EEPROM_Write,f,c
 14793  002EFC  E104               	bnz	l11975
 14794                           
 14795                           ;eeprom.c: 156: {
 14796                           ;eeprom.c: 157: LATDbits.LATD5 = 1;
 14797  002EFE  8A8C               	bsf	3980,5,c	;volatile
 14798                           
 14799                           ;eeprom.c: 158: addr += PageCounter;
 14800  002F00  501D               	movf	EEPROM_Write@PageCounter,w,c
 14801  002F02  2619               	addwf	EEPROM_Write@addr,f,c
 14802                           
 14803                           ;eeprom.c: 159: goto EEPROM_NEXT_PAGE;
 14804  002F04  D7CF               	goto	l11935
 14805  002F06                     l11975:
 14806  002F06  501A               	movf	EEPROM_Write@count,w,c
 14807  002F08  E1E9               	bnz	l11961
 14808                           
 14809                           ;eeprom.c: 160: }
 14810                           ;eeprom.c: 161: }
 14811                           ;eeprom.c: 162: LATDbits.LATD5 = 1;
 14812  002F0A  8A8C               	bsf	3980,5,c	;volatile
 14813                           
 14814                           ;eeprom.c: 167: INTCONbits.INT0IE = oldRFIE;
 14815  002F0C  B01C               	btfsc	EEPROM_Write@oldRFIE,0,c
 14816  002F0E  D002               	bra	u12005
 14817  002F10  98F2               	bcf	intcon,4,c	;volatile
 14818  002F12  D001               	bra	u12006
 14819  002F14                     u12005:
 14820  002F14  88F2               	bsf	intcon,4,c	;volatile
 14821  002F16                     u12006:
 14822  002F16  0012               	return		;funcret
 14823  002F18                     __end_of_EEPROM_Write:
 14824                           	opt stack 0
 14825                           tblptru	equ	0xFF8
 14826                           tblptrh	equ	0xFF7
 14827                           tblptrl	equ	0xFF6
 14828                           tablat	equ	0xFF5
 14829                           prodh	equ	0xFF4
 14830                           prodl	equ	0xFF3
 14831                           intcon	equ	0xFF2
 14832                           intcon2	equ	0xFF1
 14833                           postinc0	equ	0xFEE
 14834                           plusw0	equ	0xFEB
 14835                           wreg	equ	0xFE8
 14836                           indf1	equ	0xFE7
 14837                           postinc1	equ	0xFE6
 14838                           postdec1	equ	0xFE5
 14839                           fsr1h	equ	0xFE2
 14840                           fsr1l	equ	0xFE1
 14841                           indf2	equ	0xFDF
 14842                           postinc2	equ	0xFDE
 14843                           postdec2	equ	0xFDD
 14844                           plusw2	equ	0xFDB
 14845                           fsr2h	equ	0xFDA
 14846                           fsr2l	equ	0xFD9
 14847                           status	equ	0xFD8
 14848                           
 14849 ;; *************** function _SPIGet2 *****************
 14850 ;; Defined at:
 14851 ;;		line 129 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 14852 ;; Parameters:    Size  Location     Type
 14853 ;;		None
 14854 ;; Auto vars:     Size  Location     Type
 14855 ;;		None
 14856 ;; Return value:  Size  Location     Type
 14857 ;;                  1    wreg      unsigned char 
 14858 ;; Registers used:
 14859 ;;		wreg, status,2, cstack
 14860 ;; Tracked objects:
 14861 ;;		On entry : 0/0
 14862 ;;		On exit  : 0/0
 14863 ;;		Unchanged: 0/0
 14864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14869 ;;Total ram usage:        0 bytes
 14870 ;; Hardware stack levels used:    1
 14871 ;; Hardware stack levels required when called:    4
 14872 ;; This function calls:
 14873 ;;		_SPIPut2
 14874 ;; This function is called by:
 14875 ;;		_EEPROM_Read
 14876 ;;		_EEPROM_Write
 14877 ;; This function uses a non-reentrant model
 14878 ;;
 14879                           
 14880                           	psect	text61
 14881  003ABC                     __ptext61:
 14882                           	opt stack 0
 14883  003ABC                     _SPIGet2:
 14884                           	opt stack 18
 14885                           
 14886                           ;spi.c: 132: SPIPut2(0x00);
 14887                           
 14888                           ;incstack = 0
 14889  003ABC  0E00               	movlw	0
 14890  003ABE  EC1D  F01D         	call	_SPIPut2
 14891                           
 14892                           ;spi.c: 133: return SSP2BUF;
 14893  003AC2  5075               	movf	3957,w,c	;volatile
 14894  003AC4  0012               	return		;funcret
 14895  003AC6                     __end_of_SPIGet2:
 14896                           	opt stack 0
 14897                           tblptru	equ	0xFF8
 14898                           tblptrh	equ	0xFF7
 14899                           tblptrl	equ	0xFF6
 14900                           tablat	equ	0xFF5
 14901                           prodh	equ	0xFF4
 14902                           prodl	equ	0xFF3
 14903                           intcon	equ	0xFF2
 14904                           intcon2	equ	0xFF1
 14905                           postinc0	equ	0xFEE
 14906                           plusw0	equ	0xFEB
 14907                           wreg	equ	0xFE8
 14908                           indf1	equ	0xFE7
 14909                           postinc1	equ	0xFE6
 14910                           postdec1	equ	0xFE5
 14911                           fsr1h	equ	0xFE2
 14912                           fsr1l	equ	0xFE1
 14913                           indf2	equ	0xFDF
 14914                           postinc2	equ	0xFDE
 14915                           postdec2	equ	0xFDD
 14916                           plusw2	equ	0xFDB
 14917                           fsr2h	equ	0xFDA
 14918                           fsr2l	equ	0xFD9
 14919                           status	equ	0xFD8
 14920                           
 14921 ;; *************** function _MacroNop *****************
 14922 ;; Defined at:
 14923 ;;		line 322 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 14924 ;; Parameters:    Size  Location     Type
 14925 ;;		None
 14926 ;; Auto vars:     Size  Location     Type
 14927 ;;		None
 14928 ;; Return value:  Size  Location     Type
 14929 ;;		None               void
 14930 ;; Registers used:
 14931 ;;		None
 14932 ;; Tracked objects:
 14933 ;;		On entry : 0/0
 14934 ;;		On exit  : 0/0
 14935 ;;		Unchanged: 0/0
 14936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14941 ;;Total ram usage:        0 bytes
 14942 ;; Hardware stack levels used:    1
 14943 ;; Hardware stack levels required when called:    3
 14944 ;; This function calls:
 14945 ;;		Nothing
 14946 ;; This function is called by:
 14947 ;;		_EEPROM_Write
 14948 ;; This function uses a non-reentrant model
 14949 ;;
 14950                           
 14951                           	psect	text62
 14952  003AD2                     __ptext62:
 14953                           	opt stack 0
 14954  003AD2                     _MacroNop:
 14955                           	opt stack 19
 14956                           
 14957                           ;miwi_p2p.c: 324: __nop();
 14958                           
 14959                           ;incstack = 0
 14960  003AD2  F000               	nop	
 14961  003AD4  0012               	return		;funcret
 14962  003AD6                     __end_of_MacroNop:
 14963                           	opt stack 0
 14964                           tblptru	equ	0xFF8
 14965                           tblptrh	equ	0xFF7
 14966                           tblptrl	equ	0xFF6
 14967                           tablat	equ	0xFF5
 14968                           prodh	equ	0xFF4
 14969                           prodl	equ	0xFF3
 14970                           intcon	equ	0xFF2
 14971                           intcon2	equ	0xFF1
 14972                           postinc0	equ	0xFEE
 14973                           plusw0	equ	0xFEB
 14974                           wreg	equ	0xFE8
 14975                           indf1	equ	0xFE7
 14976                           postinc1	equ	0xFE6
 14977                           postdec1	equ	0xFE5
 14978                           fsr1h	equ	0xFE2
 14979                           fsr1l	equ	0xFE1
 14980                           indf2	equ	0xFDF
 14981                           postinc2	equ	0xFDE
 14982                           postdec2	equ	0xFDD
 14983                           plusw2	equ	0xFDB
 14984                           fsr2h	equ	0xFDA
 14985                           fsr2l	equ	0xFD9
 14986                           status	equ	0xFD8
 14987                           
 14988 ;; *************** function _DemoOutput_ChannelError *****************
 14989 ;; Defined at:
 14990 ;;		line 193 in file "../src/demo_ouput.c"
 14991 ;; Parameters:    Size  Location     Type
 14992 ;;  channel         1    wreg     unsigned char 
 14993 ;; Auto vars:     Size  Location     Type
 14994 ;;  channel         1    0[COMRAM] unsigned char 
 14995 ;; Return value:  Size  Location     Type
 14996 ;;		None               void
 14997 ;; Registers used:
 14998 ;;		wreg
 14999 ;; Tracked objects:
 15000 ;;		On entry : 0/0
 15001 ;;		On exit  : 0/0
 15002 ;;		Unchanged: 0/0
 15003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15008 ;;Total ram usage:        0 bytes
 15009 ;; Hardware stack levels used:    1
 15010 ;; Hardware stack levels required when called:    3
 15011 ;; This function calls:
 15012 ;;		Nothing
 15013 ;; This function is called by:
 15014 ;;		_Initialize_Demo
 15015 ;; This function uses a non-reentrant model
 15016 ;;
 15017                           
 15018                           	psect	text63
 15019  003AD8                     __ptext63:
 15020                           	opt stack 0
 15021  003AD8                     _DemoOutput_ChannelError:
 15022                           	opt stack 26
 15023                           
 15024                           ;incstack = 0
 15025  003AD8  0012               	return		;funcret
 15026  003ADA                     __end_of_DemoOutput_ChannelError:
 15027                           	opt stack 0
 15028                           tblptru	equ	0xFF8
 15029                           tblptrh	equ	0xFF7
 15030                           tblptrl	equ	0xFF6
 15031                           tablat	equ	0xFF5
 15032                           prodh	equ	0xFF4
 15033                           prodl	equ	0xFF3
 15034                           intcon	equ	0xFF2
 15035                           intcon2	equ	0xFF1
 15036                           postinc0	equ	0xFEE
 15037                           plusw0	equ	0xFEB
 15038                           wreg	equ	0xFE8
 15039                           indf1	equ	0xFE7
 15040                           postinc1	equ	0xFE6
 15041                           postdec1	equ	0xFE5
 15042                           fsr1h	equ	0xFE2
 15043                           fsr1l	equ	0xFE1
 15044                           indf2	equ	0xFDF
 15045                           postinc2	equ	0xFDE
 15046                           postdec2	equ	0xFDD
 15047                           plusw2	equ	0xFDB
 15048                           fsr2h	equ	0xFDA
 15049                           fsr2l	equ	0xFD9
 15050                           status	equ	0xFD8
 15051                           
 15052 ;; *************** function _DemoOutput_Channel *****************
 15053 ;; Defined at:
 15054 ;;		line 111 in file "../src/demo_ouput.c"
 15055 ;; Parameters:    Size  Location     Type
 15056 ;;  channel         1    wreg     unsigned char 
 15057 ;;  Step            1   23[BANK0 ] unsigned char 
 15058 ;; Auto vars:     Size  Location     Type
 15059 ;;  channel         1   24[BANK0 ] unsigned char 
 15060 ;; Return value:  Size  Location     Type
 15061 ;;		None               void
 15062 ;; Registers used:
 15063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15064 ;; Tracked objects:
 15065 ;;		On entry : F/0
 15066 ;;		On exit  : 0/0
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15069 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15072 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15073 ;;Total ram usage:        2 bytes
 15074 ;; Hardware stack levels used:    1
 15075 ;; Hardware stack levels required when called:    7
 15076 ;; This function calls:
 15077 ;;		_DELAY_ms
 15078 ;;		_LCDDisplay
 15079 ;; This function is called by:
 15080 ;;		_Initialize_Demo
 15081 ;; This function uses a non-reentrant model
 15082 ;;
 15083                           
 15084                           	psect	text64
 15085  0035EA                     __ptext64:
 15086                           	opt stack 0
 15087  0035EA                     _DemoOutput_Channel:
 15088                           	opt stack 22
 15089                           
 15090                           ;incstack = 0
 15091                           ;DemoOutput_Channel@channel stored from wreg
 15092  0035EA  6F78               	movwf	DemoOutput_Channel@channel& (0+255),b
 15093                           
 15094                           ;demo_ouput.c: 113: if( Step == 0 )
 15095  0035EC  0100               	movlb	0	; () banked
 15096  0035EE  5177               	movf	DemoOutput_Channel@Step& (0+255),w,b
 15097  0035F0  E10B               	bnz	l13471
 15098                           
 15099                           ; BSR set to: 0
 15100                           ;demo_ouput.c: 114: {
 15101                           ;demo_ouput.c: 115: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 15102  0035F2  0EC7               	movlw	low STR_17
 15103  0035F4  6F73               	movwf	LCDDisplay@text& (0+255),b
 15104  0035F6  0EFD               	movlw	high STR_17
 15105  0035F8  6F74               	movwf	(LCDDisplay@text+1)& (0+255),b
 15106  0035FA  C078  F075         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 15107  0035FE  0E01               	movlw	1
 15108  003600  6F76               	movwf	LCDDisplay@delay& (0+255),b
 15109  003602  EC78  F01A         	call	_LCDDisplay	;wreg free
 15110                           
 15111                           ;demo_ouput.c: 122: }
 15112  003606  D00A               	goto	l13473
 15113  003608                     l13471:
 15114                           
 15115                           ; BSR set to: 0
 15116                           ;demo_ouput.c: 123: else
 15117                           ;demo_ouput.c: 124: {
 15118                           ;demo_ouput.c: 125: LCDDisplay((char *)" Connected Peer  on Channel %d", channel, 1);
 15119  003608  0E07               	movlw	low STR_18
 15120  00360A  6F73               	movwf	LCDDisplay@text& (0+255),b
 15121  00360C  0EFE               	movlw	high STR_18
 15122  00360E  6F74               	movwf	(LCDDisplay@text+1)& (0+255),b
 15123  003610  C078  F075         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 15124  003614  0E01               	movlw	1
 15125  003616  6F76               	movwf	LCDDisplay@delay& (0+255),b
 15126  003618  EC78  F01A         	call	_LCDDisplay	;wreg free
 15127  00361C                     l13473:
 15128                           
 15129                           ;demo_ouput.c: 132: }
 15130                           ;demo_ouput.c: 133: DELAY_ms(1000);
 15131  00361C  0E03               	movlw	3
 15132  00361E  6E17               	movwf	DELAY_ms@ms+1,c
 15133  003620  0EE8               	movlw	232
 15134  003622  6E16               	movwf	DELAY_ms@ms,c
 15135  003624  EFD5  F013         	goto	_DELAY_ms	;wreg free
 15136  003628                     __end_of_DemoOutput_Channel:
 15137                           	opt stack 0
 15138                           tblptru	equ	0xFF8
 15139                           tblptrh	equ	0xFF7
 15140                           tblptrl	equ	0xFF6
 15141                           tablat	equ	0xFF5
 15142                           prodh	equ	0xFF4
 15143                           prodl	equ	0xFF3
 15144                           intcon	equ	0xFF2
 15145                           intcon2	equ	0xFF1
 15146                           postinc0	equ	0xFEE
 15147                           plusw0	equ	0xFEB
 15148                           wreg	equ	0xFE8
 15149                           indf1	equ	0xFE7
 15150                           postinc1	equ	0xFE6
 15151                           postdec1	equ	0xFE5
 15152                           fsr1h	equ	0xFE2
 15153                           fsr1l	equ	0xFE1
 15154                           indf2	equ	0xFDF
 15155                           postinc2	equ	0xFDE
 15156                           postdec2	equ	0xFDD
 15157                           plusw2	equ	0xFDB
 15158                           fsr2h	equ	0xFDA
 15159                           fsr2l	equ	0xFD9
 15160                           status	equ	0xFD8
 15161                           
 15162 ;; *************** function _DemoOutput_Greeting *****************
 15163 ;; Defined at:
 15164 ;;		line 63 in file "../src/demo_ouput.c"
 15165 ;; Parameters:    Size  Location     Type
 15166 ;;		None
 15167 ;; Auto vars:     Size  Location     Type
 15168 ;;		None
 15169 ;; Return value:  Size  Location     Type
 15170 ;;		None               void
 15171 ;; Registers used:
 15172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15173 ;; Tracked objects:
 15174 ;;		On entry : 0/0
 15175 ;;		On exit  : 0/0
 15176 ;;		Unchanged: 0/0
 15177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15182 ;;Total ram usage:        0 bytes
 15183 ;; Hardware stack levels used:    1
 15184 ;; Hardware stack levels required when called:    7
 15185 ;; This function calls:
 15186 ;;		_DELAY_ms
 15187 ;;		_LCDDisplay
 15188 ;; This function is called by:
 15189 ;;		_main
 15190 ;; This function uses a non-reentrant model
 15191 ;;
 15192                           
 15193                           	psect	text65
 15194  003992                     __ptext65:
 15195                           	opt stack 0
 15196  003992                     _DemoOutput_Greeting:
 15197                           	opt stack 23
 15198                           
 15199                           ;demo_ouput.c: 70: LCDDisplay((char *)"Simple STAR     MRF24J40 Node", 0, 1);
 15200                           
 15201                           ;incstack = 0
 15202  003992  0E26               	movlw	low STR_16
 15203  003994  0100               	movlb	0	; () banked
 15204  003996  6F73               	movwf	LCDDisplay@text& (0+255),b
 15205  003998  0EFE               	movlw	high STR_16
 15206  00399A  6F74               	movwf	(LCDDisplay@text+1)& (0+255),b
 15207  00399C  6B75               	clrf	LCDDisplay@value& (0+255),b
 15208  00399E  0E01               	movlw	1
 15209  0039A0  6F76               	movwf	LCDDisplay@delay& (0+255),b
 15210  0039A2  EC78  F01A         	call	_LCDDisplay	;wreg free
 15211                           
 15212                           ;demo_ouput.c: 108: DELAY_ms(2000);
 15213  0039A6  0E07               	movlw	7
 15214  0039A8  6E17               	movwf	DELAY_ms@ms+1,c
 15215  0039AA  0ED0               	movlw	208
 15216  0039AC  6E16               	movwf	DELAY_ms@ms,c
 15217  0039AE  EFD5  F013         	goto	_DELAY_ms	;wreg free
 15218  0039B2                     __end_of_DemoOutput_Greeting:
 15219                           	opt stack 0
 15220                           tblptru	equ	0xFF8
 15221                           tblptrh	equ	0xFF7
 15222                           tblptrl	equ	0xFF6
 15223                           tablat	equ	0xFF5
 15224                           prodh	equ	0xFF4
 15225                           prodl	equ	0xFF3
 15226                           intcon	equ	0xFF2
 15227                           intcon2	equ	0xFF1
 15228                           postinc0	equ	0xFEE
 15229                           plusw0	equ	0xFEB
 15230                           wreg	equ	0xFE8
 15231                           indf1	equ	0xFE7
 15232                           postinc1	equ	0xFE6
 15233                           postdec1	equ	0xFE5
 15234                           fsr1h	equ	0xFE2
 15235                           fsr1l	equ	0xFE1
 15236                           indf2	equ	0xFDF
 15237                           postinc2	equ	0xFDE
 15238                           postdec2	equ	0xFDD
 15239                           plusw2	equ	0xFDB
 15240                           fsr2h	equ	0xFDA
 15241                           fsr2l	equ	0xFD9
 15242                           status	equ	0xFD8
 15243                           
 15244 ;; *************** function _LCDDisplay *****************
 15245 ;; Defined at:
 15246 ;;		line 187 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 15247 ;; Parameters:    Size  Location     Type
 15248 ;;  text            2   19[BANK0 ] PTR unsigned char 
 15249 ;;		 -> STR_35(20), STR_30(28), STR_27(32), STR_26(29), 
 15250 ;;		 -> STR_25(16), STR_19(29), STR_18(31), STR_17(32), 
 15251 ;;		 -> STR_16(30), 
 15252 ;;  value           1   21[BANK0 ] unsigned char 
 15253 ;;  delay           1   22[BANK0 ] unsigned char 
 15254 ;; Auto vars:     Size  Location     Type
 15255 ;;  i               1   49[COMRAM] unsigned char 
 15256 ;; Return value:  Size  Location     Type
 15257 ;;		None               void
 15258 ;; Registers used:
 15259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15260 ;; Tracked objects:
 15261 ;;		On entry : F/0
 15262 ;;		On exit  : 0/0
 15263 ;;		Unchanged: 0/0
 15264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15265 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15268 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15269 ;;Total ram usage:        5 bytes
 15270 ;; Hardware stack levels used:    1
 15271 ;; Hardware stack levels required when called:    6
 15272 ;; This function calls:
 15273 ;;		_DELAY_ms
 15274 ;;		_LCD_Erase
 15275 ;;		_LCD_Update
 15276 ;;		_sprintf
 15277 ;; This function is called by:
 15278 ;;		_DemoOutput_Greeting
 15279 ;;		_DemoOutput_Channel
 15280 ;;		_DemoOutput_UnicastFail
 15281 ;;		_STAR_DEMO_OPTIONS_MESSAGE
 15282 ;;		_freezer_feature
 15283 ;;		_run_star_demo
 15284 ;; This function uses a non-reentrant model
 15285 ;;
 15286                           
 15287                           	psect	text66
 15288  0034F0                     __ptext66:
 15289                           	opt stack 0
 15290  0034F0                     _LCDDisplay:
 15291                           	opt stack 23
 15292                           
 15293                           ; BSR set to: 0
 15294                           ;lcd.c: 189: LCD_Erase();
 15295                           
 15296                           ;incstack = 0
 15297  0034F0  EC96  F01C         	call	_LCD_Erase	;wreg free
 15298                           
 15299                           ;lcd.c: 190: sprintf((char *)LCDText, (char*)text, value);
 15300  0034F4  0EBE               	movlw	low _LCDText
 15301  0034F6  6E22               	movwf	sprintf@sp,c
 15302  0034F8  0E01               	movlw	high _LCDText
 15303  0034FA  6E23               	movwf	sprintf@sp+1,c
 15304  0034FC  C073  F024         	movff	LCDDisplay@text,sprintf@f
 15305  003500  C074  F025         	movff	LCDDisplay@text+1,sprintf@f+1
 15306  003504  C075  F026         	movff	LCDDisplay@value,?_sprintf+4
 15307  003508  6A27               	clrf	?_sprintf+5,c
 15308  00350A  EC68  F004         	call	_sprintf	;wreg free
 15309                           
 15310                           ; BSR set to: 0
 15311                           ;lcd.c: 191: LCD_Update();
 15312  00350E  EC06  F018         	call	_LCD_Update	;wreg free
 15313                           
 15314                           ;lcd.c: 194: if( delay )
 15315  003512  0100               	movlb	0	; () banked
 15316  003514  5176               	movf	LCDDisplay@delay& (0+255),w,b
 15317  003516  B4D8               	btfsc	status,2,c
 15318  003518  0012               	return	
 15319                           
 15320                           ; BSR set to: 0
 15321                           ;lcd.c: 195: {
 15322                           ;lcd.c: 196: uint8_t i;
 15323                           ;lcd.c: 197: for(i = 0; i < 8; i++)
 15324  00351A  6A32               	clrf	LCDDisplay@i,c
 15325  00351C                     l11995:
 15326                           
 15327                           ;lcd.c: 198: {
 15328                           ;lcd.c: 199: DELAY_ms(250);
 15329  00351C  6A17               	clrf	DELAY_ms@ms+1,c
 15330  00351E  0EFA               	movlw	250
 15331  003520  6E16               	movwf	DELAY_ms@ms,c
 15332  003522  ECD5  F013         	call	_DELAY_ms	;wreg free
 15333  003526  2A32               	incf	LCDDisplay@i,f,c
 15334  003528  0E07               	movlw	7
 15335  00352A  6432               	cpfsgt	LCDDisplay@i,c
 15336  00352C  D7F7               	goto	l11995
 15337  00352E  0C07               	retlw	7
 15338  003530                     __end_of_LCDDisplay:
 15339                           	opt stack 0
 15340                           tblptru	equ	0xFF8
 15341                           tblptrh	equ	0xFF7
 15342                           tblptrl	equ	0xFF6
 15343                           tablat	equ	0xFF5
 15344                           prodh	equ	0xFF4
 15345                           prodl	equ	0xFF3
 15346                           intcon	equ	0xFF2
 15347                           intcon2	equ	0xFF1
 15348                           postinc0	equ	0xFEE
 15349                           plusw0	equ	0xFEB
 15350                           wreg	equ	0xFE8
 15351                           indf1	equ	0xFE7
 15352                           postinc1	equ	0xFE6
 15353                           postdec1	equ	0xFE5
 15354                           fsr1h	equ	0xFE2
 15355                           fsr1l	equ	0xFE1
 15356                           indf2	equ	0xFDF
 15357                           postinc2	equ	0xFDE
 15358                           postdec2	equ	0xFDD
 15359                           plusw2	equ	0xFDB
 15360                           fsr2h	equ	0xFDA
 15361                           fsr2l	equ	0xFD9
 15362                           status	equ	0xFD8
 15363                           
 15364 ;; *************** function _sprintf *****************
 15365 ;; Defined at:
 15366 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 15367 ;; Parameters:    Size  Location     Type
 15368 ;;  sp              2   33[COMRAM] PTR unsigned char 
 15369 ;;		 -> LCDText(33), 
 15370 ;;  f               2   35[COMRAM] PTR const unsigned char 
 15371 ;;		 -> STR_36(18), STR_35(20), STR_34(17), STR_33(22), 
 15372 ;;		 -> STR_32(22), STR_31(25), STR_30(28), STR_29(22), 
 15373 ;;		 -> STR_28(17), STR_27(32), STR_26(29), STR_25(16), 
 15374 ;;		 -> STR_19(29), STR_18(31), STR_17(32), STR_16(30), 
 15375 ;;		 -> STR_15(14), STR_14(16), 
 15376 ;; Auto vars:     Size  Location     Type
 15377 ;;  idx             1    0[BANK0 ] unsigned char 
 15378 ;;  tmpval          4    0        struct .
 15379 ;;  flag            2   17[BANK0 ] unsigned short 
 15380 ;;  width           2   14[BANK0 ] int 
 15381 ;;  val             2   11[BANK0 ] unsigned int 
 15382 ;;  len             2    8[BANK0 ] unsigned int 
 15383 ;;  c               1   16[BANK0 ] char 
 15384 ;;  prec            1   13[BANK0 ] char 
 15385 ;;  ap              1   10[BANK0 ] PTR void [1]
 15386 ;;		 -> ?_sprintf(2), 
 15387 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
 15388 ;;		 -> sprintf@c(1), 
 15389 ;; Return value:  Size  Location     Type
 15390 ;;                  2   33[COMRAM] int 
 15391 ;; Registers used:
 15392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15393 ;; Tracked objects:
 15394 ;;		On entry : 0/1
 15395 ;;		On exit  : F/0
 15396 ;;		Unchanged: 0/0
 15397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15398 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15399 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15400 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15401 ;;      Totals:        16      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15402 ;;Total ram usage:       35 bytes
 15403 ;; Hardware stack levels used:    1
 15404 ;; Hardware stack levels required when called:    4
 15405 ;; This function calls:
 15406 ;;		___lwdiv
 15407 ;;		___lwmod
 15408 ;;		___wmul
 15409 ;;		_isdigit
 15410 ;; This function is called by:
 15411 ;;		_LCDTRXCount
 15412 ;;		_LCDDisplay
 15413 ;;		_Source_END_DEVICE_INFO
 15414 ;;		_run_star_demo
 15415 ;; This function uses a non-reentrant model
 15416 ;;
 15417                           
 15418                           	psect	text67
 15419  0008D0                     __ptext67:
 15420                           	opt stack 0
 15421  0008D0                     _sprintf:
 15422                           	opt stack 24
 15423                           
 15424                           ;doprnt.c: 494: va_list ap;
 15425                           ;doprnt.c: 499: signed char c;
 15426                           ;doprnt.c: 501: int width;
 15427                           ;doprnt.c: 506: signed char prec;
 15428                           ;doprnt.c: 508: unsigned short flag;
 15429                           ;doprnt.c: 523: union {
 15430                           ;doprnt.c: 524: unsigned long vd;
 15431                           ;doprnt.c: 525: double integ;
 15432                           ;doprnt.c: 526: } tmpval;
 15433                           ;doprnt.c: 528: unsigned int val;
 15434                           ;doprnt.c: 529: unsigned len;
 15435                           ;doprnt.c: 530: const char * cp;
 15436                           ;doprnt.c: 533: *ap = __va_start();
 15437                           
 15438                           ;incstack = 0
 15439  0008D0  0E26               	movlw	low (?_sprintf+4)
 15440  0008D2  0100               	movlb	0	; () banked
 15441  0008D4  6F6A               	movwf	sprintf@ap& (0+255),b
 15442                           
 15443                           ;doprnt.c: 536: while(c = *f++) {
 15444  0008D6  D37F               	goto	l11887
 15445  0008D8                     l11565:
 15446                           
 15447                           ; BSR set to: 0
 15448                           ;doprnt.c: 538: if(c != '%')
 15449  0008D8  0E25               	movlw	37
 15450  0008DA  1970               	xorwf	sprintf@c& (0+255),w,b
 15451  0008DC  E009               	bz	l1360
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;doprnt.c: 540: {
 15455                           ;doprnt.c: 541: ((*sp++ = (c)));
 15456  0008DE  C022  FFD9         	movff	sprintf@sp,fsr2l
 15457  0008E2  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 15458  0008E6  C070  FFDF         	movff	sprintf@c,indf2
 15459                           
 15460                           ; BSR set to: 0
 15461  0008EA  4A22               	infsnz	sprintf@sp,f,c
 15462  0008EC  2A23               	incf	sprintf@sp+1,f,c
 15463                           
 15464                           ;doprnt.c: 542: continue;
 15465  0008EE  D373               	goto	l11887
 15466  0008F0                     l1360:
 15467                           
 15468                           ; BSR set to: 0
 15469                           ;doprnt.c: 543: }
 15470                           ;doprnt.c: 546: width = 0;
 15471  0008F0  6B6E               	clrf	sprintf@width& (0+255),b
 15472  0008F2  6B6F               	clrf	(sprintf@width+1)& (0+255),b
 15473                           
 15474                           ;doprnt.c: 548: flag = 0;
 15475  0008F4  6B71               	clrf	sprintf@flag& (0+255),b
 15476  0008F6  6B72               	clrf	(sprintf@flag+1)& (0+255),b
 15477  0008F8  D009               	goto	l11581
 15478  0008FA                     l11571:
 15479                           
 15480                           ; BSR set to: 0
 15481                           ;doprnt.c: 554: flag |= 0x08;
 15482  0008FA  8771               	bsf	sprintf@flag& (0+255),3,b
 15483  0008FC  D005               	goto	L16
 15484  0008FE                     l11573:
 15485                           
 15486                           ; BSR set to: 0
 15487                           ;doprnt.c: 561: flag |= 0x01;
 15488  0008FE  8171               	bsf	sprintf@flag& (0+255),0,b
 15489  000900  D003               	goto	L16
 15490  000902                     l11575:
 15491                           
 15492                           ; BSR set to: 0
 15493                           ;doprnt.c: 574: flag |= 0x800;
 15494  000902  8772               	bsf	(sprintf@flag+1)& (0+255),3,b
 15495  000904  D001               	goto	L16
 15496  000906                     l11577:
 15497                           
 15498                           ; BSR set to: 0
 15499                           ;doprnt.c: 580: flag |= 0x04;
 15500  000906  8571               	bsf	sprintf@flag& (0+255),2,b
 15501  000908                     L16:
 15502                           
 15503                           ;doprnt.c: 581: f++;
 15504  000908  4A24               	infsnz	sprintf@f,f,c
 15505  00090A  2A25               	incf	sprintf@f+1,f,c
 15506  00090C                     l11581:
 15507                           
 15508                           ; BSR set to: 0
 15509  00090C  C024  FFF6         	movff	sprintf@f,tblptrl
 15510  000910  C025  FFF7         	movff	sprintf@f+1,tblptrh
 15511  000914                     	if	0	;tblptru may be non-zero
 15512  000914                     	endif
 15513  000914                     	if	0	;tblptru may be non-zero
 15514  000914                     	endif
 15515  000914  0008               	tblrd		*
 15516  000916  50F5               	movf	tablat,w,c
 15517                           
 15518                           ; Switch size 1, requested type "speed"
 15519                           ; Number of cases is 4, Range of values is 32 to 48
 15520                           ; switch strategies available:
 15521                           ; Name         Instructions Cycles
 15522                           ; simple_byte           13     7 (average)
 15523                           ;	Chosen strategy is simple_byte
 15524  000918  0A20               	xorlw	32	; case 32
 15525  00091A  E0F1               	bz	l11573
 15526  00091C  0A03               	xorlw	3	; case 35
 15527  00091E  E0F1               	bz	l11575
 15528  000920  0A0E               	xorlw	14	; case 45
 15529  000922  E0EB               	bz	l11571
 15530  000924  0A1D               	xorlw	29	; case 48
 15531  000926  E0EF               	bz	l11577
 15532                           
 15533                           ; BSR set to: 0
 15534                           ;doprnt.c: 593: if(flag & 0x08)
 15535  000928  B771               	btfsc	sprintf@flag& (0+255),3,b
 15536                           
 15537                           ; BSR set to: 0
 15538                           ;doprnt.c: 594: flag &= ~0x04;
 15539  00092A  9571               	bcf	sprintf@flag& (0+255),2,b
 15540                           
 15541                           ; BSR set to: 0
 15542                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 15543  00092C  C024  FFF6         	movff	sprintf@f,tblptrl
 15544  000930  C025  FFF7         	movff	sprintf@f+1,tblptrh
 15545  000934                     	if	0	;tblptru may be non-zero
 15546  000934                     	endif
 15547  000934                     	if	0	;tblptru may be non-zero
 15548  000934                     	endif
 15549  000934  0008               	tblrd		*
 15550  000936  50F5               	movf	tablat,w,c
 15551  000938  ECF5  F01C         	call	_isdigit
 15552  00093C  E330               	bnc	l11597
 15553                           
 15554                           ;doprnt.c: 598: width = 0;
 15555  00093E  0100               	movlb	0	; () banked
 15556  000940  6B6E               	clrf	sprintf@width& (0+255),b
 15557  000942  6B6F               	clrf	(sprintf@width+1)& (0+255),b
 15558  000944                     l11589:
 15559                           
 15560                           ;doprnt.c: 600: width *= 10;
 15561  000944  C06E  F016         	movff	sprintf@width,___wmul@multiplier
 15562  000948  C06F  F017         	movff	sprintf@width+1,___wmul@multiplier+1
 15563  00094C  6A19               	clrf	___wmul@multiplicand+1,c
 15564  00094E  0E0A               	movlw	10
 15565  000950  6E18               	movwf	___wmul@multiplicand,c
 15566  000952  EC83  F01C         	call	___wmul	;wreg free
 15567  000956  C016  F06E         	movff	?___wmul,sprintf@width
 15568  00095A  C017  F06F         	movff	?___wmul+1,sprintf@width+1
 15569                           
 15570                           ;doprnt.c: 601: width += *f++ - '0';
 15571  00095E  0ED0               	movlw	208
 15572  000960  6E2E               	movwf	??_sprintf& (0+255),c
 15573  000962  682F               	setf	(??_sprintf+1)& (0+255),c
 15574  000964  C024  FFF6         	movff	sprintf@f,tblptrl
 15575  000968  C025  FFF7         	movff	sprintf@f+1,tblptrh
 15576  00096C                     	if	0	;tblptru may be non-zero
 15577  00096C                     	endif
 15578  00096C                     	if	0	;tblptru may be non-zero
 15579  00096C                     	endif
 15580  00096C  0008               	tblrd		*
 15581  00096E  50F5               	movf	tablat,w,c
 15582  000970  6E30               	movwf	(??_sprintf+2)& (0+255),c
 15583  000972  6A31               	clrf	(??_sprintf+3)& (0+255),c
 15584  000974  502E               	movf	??_sprintf,w,c
 15585  000976  2630               	addwf	??_sprintf+2,f,c
 15586  000978  502F               	movf	??_sprintf+1,w,c
 15587  00097A  2231               	addwfc	??_sprintf+3,f,c
 15588  00097C  5030               	movf	??_sprintf+2,w,c
 15589  00097E  0100               	movlb	0	; () banked
 15590  000980  276E               	addwf	sprintf@width& (0+255),f,b
 15591  000982  5031               	movf	??_sprintf+3,w,c
 15592  000984  236F               	addwfc	(sprintf@width+1)& (0+255),f,b
 15593                           
 15594                           ; BSR set to: 0
 15595  000986  4A24               	infsnz	sprintf@f,f,c
 15596  000988  2A25               	incf	sprintf@f+1,f,c
 15597                           
 15598                           ; BSR set to: 0
 15599                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 15600  00098A  C024  FFF6         	movff	sprintf@f,tblptrl
 15601  00098E  C025  FFF7         	movff	sprintf@f+1,tblptrh
 15602  000992                     	if	0	;tblptru may be non-zero
 15603  000992                     	endif
 15604  000992                     	if	0	;tblptru may be non-zero
 15605  000992                     	endif
 15606  000992  0008               	tblrd		*
 15607  000994  50F5               	movf	tablat,w,c
 15608  000996  ECF5  F01C         	call	_isdigit
 15609  00099A  E315               	bnc	l11605
 15610  00099C  D7D3               	goto	l11589
 15611  00099E                     l11597:
 15612  00099E  C024  FFF6         	movff	sprintf@f,tblptrl
 15613  0009A2  C025  FFF7         	movff	sprintf@f+1,tblptrh
 15614  0009A6                     	if	0	;tblptru may be non-zero
 15615  0009A6                     	endif
 15616  0009A6                     	if	0	;tblptru may be non-zero
 15617  0009A6                     	endif
 15618  0009A6  0008               	tblrd		*
 15619  0009A8  50F5               	movf	tablat,w,c
 15620  0009AA  0A2A               	xorlw	42
 15621  0009AC  E10C               	bnz	l11605
 15622                           
 15623                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 15624  0009AE  0100               	movlb	0	; () banked
 15625  0009B0  516A               	movf	sprintf@ap& (0+255),w,b
 15626  0009B2  6ED9               	movwf	fsr2l,c
 15627  0009B4  6ADA               	clrf	fsr2h,c
 15628  0009B6  CFDE F06E          	movff	postinc2,sprintf@width
 15629  0009BA  CFDD F06F          	movff	postdec2,sprintf@width+1
 15630                           
 15631                           ; BSR set to: 0
 15632  0009BE  0E02               	movlw	2
 15633  0009C0  276A               	addwf	sprintf@ap& (0+255),f,b
 15634                           
 15635                           ; BSR set to: 0
 15636                           ;doprnt.c: 606: f++;
 15637  0009C2  4A24               	infsnz	sprintf@f,f,c
 15638  0009C4  2A25               	incf	sprintf@f+1,f,c
 15639  0009C6                     l11605:
 15640                           
 15641                           ;doprnt.c: 608: }
 15642                           ;doprnt.c: 611: if(*f == '.') {
 15643  0009C6  C024  FFF6         	movff	sprintf@f,tblptrl
 15644  0009CA  C025  FFF7         	movff	sprintf@f+1,tblptrh
 15645  0009CE                     	if	0	;tblptru may be non-zero
 15646  0009CE                     	endif
 15647  0009CE                     	if	0	;tblptru may be non-zero
 15648  0009CE                     	endif
 15649  0009CE  0008               	tblrd		*
 15650  0009D0  50F5               	movf	tablat,w,c
 15651  0009D2  0A2E               	xorlw	46
 15652  0009D4  E132               	bnz	l1376
 15653                           
 15654                           ;doprnt.c: 612: flag |= 0x4000;
 15655  0009D6  0100               	movlb	0	; () banked
 15656  0009D8  8D72               	bsf	(sprintf@flag+1)& (0+255),6,b
 15657                           
 15658                           ;doprnt.c: 613: f++;
 15659  0009DA  4A24               	infsnz	sprintf@f,f,c
 15660  0009DC  2A25               	incf	sprintf@f+1,f,c
 15661                           
 15662                           ; BSR set to: 0
 15663                           ;doprnt.c: 615: if(*f == '*') {
 15664  0009DE  C024  FFF6         	movff	sprintf@f,tblptrl
 15665  0009E2  C025  FFF7         	movff	sprintf@f+1,tblptrh
 15666  0009E6                     	if	0	;tblptru may be non-zero
 15667  0009E6                     	endif
 15668  0009E6                     	if	0	;tblptru may be non-zero
 15669  0009E6                     	endif
 15670  0009E6  0008               	tblrd		*
 15671  0009E8  50F5               	movf	tablat,w,c
 15672  0009EA  0A2A               	xorlw	42
 15673  0009EC  E10A               	bnz	l1377
 15674                           
 15675                           ; BSR set to: 0
 15676                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 15677  0009EE  516A               	movf	sprintf@ap& (0+255),w,b
 15678  0009F0  6ED9               	movwf	fsr2l,c
 15679  0009F2  6ADA               	clrf	fsr2h,c
 15680  0009F4  50DF               	movf	indf2,w,c
 15681  0009F6  6F6D               	movwf	sprintf@prec& (0+255),b
 15682                           
 15683                           ; BSR set to: 0
 15684  0009F8  0E02               	movlw	2
 15685  0009FA  276A               	addwf	sprintf@ap& (0+255),f,b
 15686                           
 15687                           ; BSR set to: 0
 15688                           ;doprnt.c: 617: f++;
 15689  0009FC  4A24               	infsnz	sprintf@f,f,c
 15690  0009FE  2A25               	incf	sprintf@f+1,f,c
 15691                           
 15692                           ;doprnt.c: 618: } else
 15693  000A00  D08C               	goto	l11673
 15694  000A02                     l1377:
 15695                           
 15696                           ; BSR set to: 0
 15697                           ;doprnt.c: 620: {
 15698                           ;doprnt.c: 621: prec = 0;
 15699  000A02  6B6D               	clrf	sprintf@prec& (0+255),b
 15700                           
 15701                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 15702  000A04  D010               	goto	l11621
 15703  000A06                     l11617:
 15704                           
 15705                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 15706  000A06  C024  FFF6         	movff	sprintf@f,tblptrl
 15707  000A0A  C025  FFF7         	movff	sprintf@f+1,tblptrh
 15708  000A0E                     	if	0	;tblptru may be non-zero
 15709  000A0E                     	endif
 15710  000A0E                     	if	0	;tblptru may be non-zero
 15711  000A0E                     	endif
 15712  000A0E  0008               	tblrd		*
 15713  000A10  CFF5 F02E          	movff	tablat,??_sprintf
 15714  000A14  0100               	movlb	0	; () banked
 15715  000A16  516D               	movf	sprintf@prec& (0+255),w,b
 15716  000A18  0D0A               	mullw	10
 15717  000A1A  50F3               	movf	prodl,w,c
 15718  000A1C  242E               	addwf	??_sprintf,w,c
 15719  000A1E  0FD0               	addlw	208
 15720  000A20  6F6D               	movwf	sprintf@prec& (0+255),b
 15721                           
 15722                           ; BSR set to: 0
 15723  000A22  4A24               	infsnz	sprintf@f,f,c
 15724  000A24  2A25               	incf	sprintf@f+1,f,c
 15725  000A26                     l11621:
 15726                           
 15727                           ; BSR set to: 0
 15728  000A26  C024  FFF6         	movff	sprintf@f,tblptrl
 15729  000A2A  C025  FFF7         	movff	sprintf@f+1,tblptrh
 15730  000A2E                     	if	0	;tblptru may be non-zero
 15731  000A2E                     	endif
 15732  000A2E                     	if	0	;tblptru may be non-zero
 15733  000A2E                     	endif
 15734  000A2E  0008               	tblrd		*
 15735  000A30  50F5               	movf	tablat,w,c
 15736  000A32  ECF5  F01C         	call	_isdigit
 15737  000A36  E371               	bnc	l11673
 15738  000A38  D7E6               	goto	l11617
 15739  000A3A                     l1376:
 15740                           
 15741                           ;doprnt.c: 626: prec = 0;
 15742  000A3A  0100               	movlb	0	; () banked
 15743  000A3C  6B6D               	clrf	sprintf@prec& (0+255),b
 15744  000A3E  D06D               	goto	l11673
 15745  000A40                     l11623:
 15746                           
 15747                           ; BSR set to: 0
 15748                           ;doprnt.c: 691: flag |= 0x40;
 15749  000A40  8D71               	bsf	sprintf@flag& (0+255),6,b
 15750                           
 15751                           ;doprnt.c: 693: break;
 15752  000A42  D089               	goto	l11675
 15753  000A44                     l11625:
 15754                           
 15755                           ; BSR set to: 0
 15756                           ;doprnt.c: 714: flag |= 0x20;
 15757  000A44  8B71               	bsf	sprintf@flag& (0+255),5,b
 15758  000A46                     l1391:
 15759                           
 15760                           ; BSR set to: 0
 15761                           ;doprnt.c: 721: flag |= 0x80;
 15762  000A46  8F71               	bsf	sprintf@flag& (0+255),7,b
 15763                           
 15764                           ;doprnt.c: 723: break;
 15765  000A48  D086               	goto	l11675
 15766  000A4A                     l11627:
 15767                           
 15768                           ; BSR set to: 0
 15769                           ;doprnt.c: 753: if(prec && prec < len)
 15770  000A4A  516D               	movf	sprintf@prec& (0+255),w,b
 15771  000A4C  E00F               	bz	l11633
 15772                           
 15773                           ; BSR set to: 0
 15774  000A4E  C06D  F02E         	movff	sprintf@prec,??_sprintf
 15775  000A52  6A2F               	clrf	(??_sprintf+1)& (0+255),c
 15776  000A54  BE2E               	btfsc	??_sprintf& (0+255),7,c
 15777  000A56  062F               	decf	(??_sprintf+1)& (0+255),f,c
 15778  000A58  5168               	movf	sprintf@len& (0+255),w,b
 15779  000A5A  5C2E               	subwf	??_sprintf,w,c
 15780  000A5C  5169               	movf	(sprintf@len+1)& (0+255),w,b
 15781  000A5E  582F               	subwfb	??_sprintf+1,w,c
 15782  000A60  E205               	bc	l11633
 15783                           
 15784                           ; BSR set to: 0
 15785                           ;doprnt.c: 754: len = prec;
 15786  000A62  516D               	movf	sprintf@prec& (0+255),w,b
 15787  000A64  6F68               	movwf	sprintf@len& (0+255),b
 15788  000A66  6B69               	clrf	(sprintf@len+1)& (0+255),b
 15789  000A68  BF68               	btfsc	sprintf@len& (0+255),7,b
 15790  000A6A  0769               	decf	(sprintf@len+1)& (0+255),f,b
 15791  000A6C                     l11633:
 15792                           
 15793                           ; BSR set to: 0
 15794                           ;doprnt.c: 757: if(width > len)
 15795  000A6C  516E               	movf	sprintf@width& (0+255),w,b
 15796  000A6E  5D68               	subwf	sprintf@len& (0+255),w,b
 15797  000A70  516F               	movf	(sprintf@width+1)& (0+255),w,b
 15798  000A72  5969               	subwfb	(sprintf@len+1)& (0+255),w,b
 15799  000A74  E205               	bc	l1394
 15800                           
 15801                           ; BSR set to: 0
 15802                           ;doprnt.c: 758: width -= len;
 15803  000A76  5168               	movf	sprintf@len& (0+255),w,b
 15804  000A78  5F6E               	subwf	sprintf@width& (0+255),f,b
 15805  000A7A  5169               	movf	(sprintf@len+1)& (0+255),w,b
 15806  000A7C  5B6F               	subwfb	(sprintf@width+1)& (0+255),f,b
 15807  000A7E  D002               	goto	l1395
 15808  000A80                     l1394:
 15809                           
 15810                           ; BSR set to: 0
 15811                           ;doprnt.c: 759: else
 15812                           ;doprnt.c: 760: width = 0;
 15813  000A80  6B6E               	clrf	sprintf@width& (0+255),b
 15814  000A82  6B6F               	clrf	(sprintf@width+1)& (0+255),b
 15815  000A84                     l1395:
 15816                           
 15817                           ; BSR set to: 0
 15818                           ;doprnt.c: 762: if(!(flag & 0x08))
 15819  000A84  B771               	btfsc	sprintf@flag& (0+255),3,b
 15820  000A86  D01D               	goto	l11651
 15821  000A88  D008               	goto	l11643
 15822  000A8A                     l11639:
 15823                           
 15824                           ; BSR set to: 0
 15825                           ;doprnt.c: 765: ((*sp++ = (' ')));
 15826  000A8A  C022  FFD9         	movff	sprintf@sp,fsr2l
 15827  000A8E  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 15828  000A92  0E20               	movlw	32
 15829  000A94  6EDF               	movwf	indf2,c
 15830                           
 15831                           ; BSR set to: 0
 15832  000A96  4A22               	infsnz	sprintf@sp,f,c
 15833  000A98  2A23               	incf	sprintf@sp+1,f,c
 15834  000A9A                     l11643:
 15835                           
 15836                           ; BSR set to: 0
 15837  000A9A  076E               	decf	sprintf@width& (0+255),f,b
 15838  000A9C  A0D8               	btfss	status,0,c
 15839  000A9E  076F               	decf	(sprintf@width+1)& (0+255),f,b
 15840  000AA0  296E               	incf	sprintf@width& (0+255),w,b
 15841  000AA2  E1F3               	bnz	l11639
 15842  000AA4  296F               	incf	(sprintf@width+1)& (0+255),w,b
 15843  000AA6  E00D               	bz	l11651
 15844  000AA8  D7F0               	goto	l11639
 15845  000AAA                     l11645:
 15846                           
 15847                           ; BSR set to: 0
 15848                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 15849  000AAA  5167               	movf	sprintf@cp& (0+255),w,b
 15850  000AAC  6ED9               	movwf	fsr2l,c
 15851  000AAE  6ADA               	clrf	fsr2h,c
 15852  000AB0  C022  FFE1         	movff	sprintf@sp,fsr1l
 15853  000AB4  C023  FFE2         	movff	sprintf@sp+1,fsr1h
 15854  000AB8  CFDF FFE7          	movff	indf2,indf1
 15855                           
 15856                           ; BSR set to: 0
 15857  000ABC  2B67               	incf	sprintf@cp& (0+255),f,b
 15858                           
 15859                           ; BSR set to: 0
 15860  000ABE  4A22               	infsnz	sprintf@sp,f,c
 15861  000AC0  2A23               	incf	sprintf@sp+1,f,c
 15862  000AC2                     l11651:
 15863                           
 15864                           ; BSR set to: 0
 15865  000AC2  0768               	decf	sprintf@len& (0+255),f,b
 15866  000AC4  A0D8               	btfss	status,0,c
 15867  000AC6  0769               	decf	(sprintf@len+1)& (0+255),f,b
 15868  000AC8  2968               	incf	sprintf@len& (0+255),w,b
 15869  000ACA  E1EF               	bnz	l11645
 15870  000ACC  2969               	incf	(sprintf@len+1)& (0+255),w,b
 15871  000ACE  E1ED               	bnz	l11645
 15872                           
 15873                           ; BSR set to: 0
 15874                           ;doprnt.c: 770: if(flag & 0x08)
 15875  000AD0  A771               	btfss	sprintf@flag& (0+255),3,b
 15876  000AD2  D281               	goto	l11887
 15877  000AD4  D008               	goto	l11659
 15878  000AD6                     l11655:
 15879                           
 15880                           ; BSR set to: 0
 15881                           ;doprnt.c: 772: ((*sp++ = (' ')));
 15882  000AD6  C022  FFD9         	movff	sprintf@sp,fsr2l
 15883  000ADA  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 15884  000ADE  0E20               	movlw	32
 15885  000AE0  6EDF               	movwf	indf2,c
 15886                           
 15887                           ; BSR set to: 0
 15888  000AE2  4A22               	infsnz	sprintf@sp,f,c
 15889  000AE4  2A23               	incf	sprintf@sp+1,f,c
 15890  000AE6                     l11659:
 15891                           
 15892                           ; BSR set to: 0
 15893  000AE6  076E               	decf	sprintf@width& (0+255),f,b
 15894  000AE8  A0D8               	btfss	status,0,c
 15895  000AEA  076F               	decf	(sprintf@width+1)& (0+255),f,b
 15896  000AEC  296E               	incf	sprintf@width& (0+255),w,b
 15897  000AEE  E1F3               	bnz	l11655
 15898  000AF0  296F               	incf	(sprintf@width+1)& (0+255),w,b
 15899  000AF2  E101 D270          	bz	l11887
 15900  000AF6  D7EF               	goto	l11655
 15901  000AF8                     l11661:
 15902                           
 15903                           ; BSR set to: 0
 15904                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 15905  000AF8  516A               	movf	sprintf@ap& (0+255),w,b
 15906  000AFA  6ED9               	movwf	fsr2l,c
 15907  000AFC  6ADA               	clrf	fsr2h,c
 15908  000AFE  50DF               	movf	indf2,w,c
 15909  000B00  6F70               	movwf	sprintf@c& (0+255),b
 15910                           
 15911                           ; BSR set to: 0
 15912  000B02  0E02               	movlw	2
 15913  000B04  276A               	addwf	sprintf@ap& (0+255),f,b
 15914  000B06                     l11665:
 15915                           
 15916                           ; BSR set to: 0
 15917                           ;doprnt.c: 805: cp = (char *)&c;
 15918  000B06  0E70               	movlw	low sprintf@c
 15919  000B08  6F67               	movwf	sprintf@cp& (0+255),b
 15920                           
 15921                           ; BSR set to: 0
 15922                           ;doprnt.c: 806: len = 1;
 15923  000B0A  0E00               	movlw	0
 15924  000B0C  6F69               	movwf	(sprintf@len+1)& (0+255),b
 15925  000B0E  0E01               	movlw	1
 15926  000B10  6F68               	movwf	sprintf@len& (0+255),b
 15927                           
 15928                           ;doprnt.c: 807: goto dostring;
 15929  000B12  D79B               	goto	l11627
 15930  000B14                     l11669:
 15931                           
 15932                           ; BSR set to: 0
 15933                           ;doprnt.c: 818: flag |= 0xC0;
 15934  000B14  0EC0               	movlw	192
 15935  000B16  1371               	iorwf	sprintf@flag& (0+255),f,b
 15936                           
 15937                           ;doprnt.c: 819: break;
 15938  000B18  D01E               	goto	l11675
 15939  000B1A                     l11673:
 15940  000B1A  C024  FFF6         	movff	sprintf@f,tblptrl
 15941  000B1E  C025  FFF7         	movff	sprintf@f+1,tblptrh
 15942  000B22  4A24               	infsnz	sprintf@f,f,c
 15943  000B24  2A25               	incf	sprintf@f+1,f,c
 15944  000B26                     	if	0	;tblptru may be non-zero
 15945  000B26                     	endif
 15946  000B26                     	if	0	;tblptru may be non-zero
 15947  000B26                     	endif
 15948  000B26  0008               	tblrd		*
 15949  000B28  CFF5 F070          	movff	tablat,sprintf@c
 15950  000B2C  0100               	movlb	0	; () banked
 15951  000B2E  5170               	movf	sprintf@c& (0+255),w,b
 15952                           
 15953                           ; Switch size 1, requested type "speed"
 15954                           ; Number of cases is 8, Range of values is 0 to 120
 15955                           ; switch strategies available:
 15956                           ; Name         Instructions Cycles
 15957                           ; simple_byte           25    13 (average)
 15958                           ;	Chosen strategy is simple_byte
 15959  000B30  E101 D25D          	bz	l11889
 15960  000B34  0A58               	xorlw	88	; case 88
 15961  000B36  E086               	bz	l11625
 15962  000B38  0A3B               	xorlw	59	; case 99
 15963  000B3A  E0DE               	bz	l11661
 15964  000B3C  0A07               	xorlw	7	; case 100
 15965  000B3E  E00B               	bz	l11675
 15966  000B40  0A0D               	xorlw	13	; case 105
 15967  000B42  E009               	bz	l11675
 15968  000B44  0A06               	xorlw	6	; case 111
 15969  000B46  E101 D77B          	bz	l11623
 15970  000B4A  0A1A               	xorlw	26	; case 117
 15971  000B4C  E0E3               	bz	l11669
 15972  000B4E  0A0D               	xorlw	13	; case 120
 15973  000B50  E101 D779          	bz	l1391
 15974  000B54  D7D8               	goto	l11665
 15975  000B56                     l11675:
 15976                           
 15977                           ; BSR set to: 0
 15978                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 15979  000B56  C071  F02E         	movff	sprintf@flag,??_sprintf
 15980  000B5A  0EC0               	movlw	192
 15981  000B5C  162E               	andwf	??_sprintf,f,c
 15982  000B5E  E112               	bnz	l11687
 15983                           
 15984                           ; BSR set to: 0
 15985                           ;doprnt.c: 1253: {
 15986                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 15987  000B60  516A               	movf	sprintf@ap& (0+255),w,b
 15988  000B62  6ED9               	movwf	fsr2l,c
 15989  000B64  6ADA               	clrf	fsr2h,c
 15990  000B66  CFDE F06B          	movff	postinc2,sprintf@val
 15991  000B6A  CFDD F06C          	movff	postdec2,sprintf@val+1
 15992                           
 15993                           ; BSR set to: 0
 15994  000B6E  0E02               	movlw	2
 15995  000B70  276A               	addwf	sprintf@ap& (0+255),f,b
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;doprnt.c: 1261: if((int)val < 0) {
 15999  000B72  AF6C               	btfss	(sprintf@val+1)& (0+255),7,b
 16000  000B74  D010               	goto	l11691
 16001                           
 16002                           ; BSR set to: 0
 16003                           ;doprnt.c: 1262: flag |= 0x03;
 16004  000B76  0E03               	movlw	3
 16005  000B78  1371               	iorwf	sprintf@flag& (0+255),f,b
 16006                           
 16007                           ; BSR set to: 0
 16008                           ;doprnt.c: 1263: val = -val;
 16009  000B7A  6D6B               	negf	sprintf@val& (0+255),b
 16010  000B7C  1F6C               	comf	(sprintf@val+1)& (0+255),f,b
 16011  000B7E  B0D8               	btfsc	status,0,c
 16012  000B80  2B6C               	incf	(sprintf@val+1)& (0+255),f,b
 16013  000B82  D009               	goto	l11691
 16014  000B84                     l11687:
 16015                           
 16016                           ; BSR set to: 0
 16017                           ;doprnt.c: 1268: else
 16018                           ;doprnt.c: 1273: {
 16019                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 16020  000B84  516A               	movf	sprintf@ap& (0+255),w,b
 16021  000B86  6ED9               	movwf	fsr2l,c
 16022  000B88  6ADA               	clrf	fsr2h,c
 16023  000B8A  CFDE F06B          	movff	postinc2,sprintf@val
 16024  000B8E  CFDD F06C          	movff	postdec2,sprintf@val+1
 16025                           
 16026                           ; BSR set to: 0
 16027  000B92  0E02               	movlw	2
 16028  000B94  276A               	addwf	sprintf@ap& (0+255),f,b
 16029  000B96                     l11691:
 16030                           
 16031                           ; BSR set to: 0
 16032                           ;doprnt.c: 1287: }
 16033                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 16034  000B96  516D               	movf	sprintf@prec& (0+255),w,b
 16035  000B98  E147               	bnz	l11741
 16036                           
 16037                           ; BSR set to: 0
 16038  000B9A  516B               	movf	sprintf@val& (0+255),w,b
 16039  000B9C  116C               	iorwf	(sprintf@val+1)& (0+255),w,b
 16040  000B9E  E144               	bnz	l11741
 16041                           
 16042                           ; BSR set to: 0
 16043                           ;doprnt.c: 1291: prec++;
 16044  000BA0  2B6D               	incf	sprintf@prec& (0+255),f,b
 16045  000BA2  D042               	goto	l11741
 16046  000BA4                     l11697:
 16047                           
 16048                           ; BSR set to: 0
 16049                           ;doprnt.c: 1302: case 0xC0:
 16050                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 16051  000BA4  0E01               	movlw	1
 16052  000BA6  6F70               	movwf	sprintf@c& (0+255),b
 16053  000BA8                     l11699:
 16054                           
 16055                           ; BSR set to: 0
 16056  000BA8  0E05               	movlw	5
 16057  000BAA  1970               	xorwf	sprintf@c& (0+255),w,b
 16058  000BAC  E046               	bz	l11743
 16059                           
 16060                           ; BSR set to: 0
 16061                           ;doprnt.c: 1306: if(val < dpowers[c])
 16062  000BAE  5170               	movf	sprintf@c& (0+255),w,b
 16063  000BB0  0D02               	mullw	2
 16064  000BB2  0E83               	movlw	low _dpowers
 16065  000BB4  24F3               	addwf	prodl,w,c
 16066  000BB6  6EF6               	movwf	tblptrl,c
 16067  000BB8  0EFD               	movlw	high _dpowers
 16068  000BBA  20F4               	addwfc	prodh,w,c
 16069  000BBC  6EF7               	movwf	tblptrh,c
 16070  000BBE                     	if	0	;There are less than 3 active tblptr bytes
 16071  000BBE                     	endif
 16072  000BBE  0009               	tblrd		*+
 16073  000BC0  50F5               	movf	tablat,w,c
 16074  000BC2  5D6B               	subwf	sprintf@val& (0+255),w,b
 16075  000BC4  0009               	tblrd		*+
 16076  000BC6  50F5               	movf	tablat,w,c
 16077  000BC8  596C               	subwfb	(sprintf@val+1)& (0+255),w,b
 16078  000BCA  E337               	bnc	l11743
 16079                           
 16080                           ; BSR set to: 0
 16081  000BCC  2B70               	incf	sprintf@c& (0+255),f,b
 16082  000BCE  D7EC               	goto	l11699
 16083  000BD0                     l11711:
 16084                           
 16085                           ; BSR set to: 0
 16086                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 16087  000BD0  0E01               	movlw	1
 16088  000BD2  6F70               	movwf	sprintf@c& (0+255),b
 16089  000BD4                     l11713:
 16090                           
 16091                           ; BSR set to: 0
 16092  000BD4  0E04               	movlw	4
 16093  000BD6  1970               	xorwf	sprintf@c& (0+255),w,b
 16094  000BD8  E030               	bz	l11743
 16095                           
 16096                           ; BSR set to: 0
 16097                           ;doprnt.c: 1317: if(val < hexpowers[c])
 16098  000BDA  5170               	movf	sprintf@c& (0+255),w,b
 16099  000BDC  0D02               	mullw	2
 16100  000BDE  0E8D               	movlw	low _hexpowers
 16101  000BE0  24F3               	addwf	prodl,w,c
 16102  000BE2  6EF6               	movwf	tblptrl,c
 16103  000BE4  0EFD               	movlw	high _hexpowers
 16104  000BE6  20F4               	addwfc	prodh,w,c
 16105  000BE8  6EF7               	movwf	tblptrh,c
 16106  000BEA                     	if	0	;There are less than 3 active tblptr bytes
 16107  000BEA                     	endif
 16108  000BEA  0009               	tblrd		*+
 16109  000BEC  50F5               	movf	tablat,w,c
 16110  000BEE  5D6B               	subwf	sprintf@val& (0+255),w,b
 16111  000BF0  0009               	tblrd		*+
 16112  000BF2  50F5               	movf	tablat,w,c
 16113  000BF4  596C               	subwfb	(sprintf@val+1)& (0+255),w,b
 16114  000BF6  E321               	bnc	l11743
 16115                           
 16116                           ; BSR set to: 0
 16117  000BF8  2B70               	incf	sprintf@c& (0+255),f,b
 16118  000BFA  D7EC               	goto	l11713
 16119  000BFC                     l11725:
 16120                           
 16121                           ; BSR set to: 0
 16122                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 16123  000BFC  0E01               	movlw	1
 16124  000BFE  6F70               	movwf	sprintf@c& (0+255),b
 16125  000C00                     l11727:
 16126                           
 16127                           ; BSR set to: 0
 16128  000C00  0E06               	movlw	6
 16129  000C02  1970               	xorwf	sprintf@c& (0+255),w,b
 16130  000C04  E01A               	bz	l11743
 16131                           
 16132                           ; BSR set to: 0
 16133                           ;doprnt.c: 1329: if(val < octpowers[c])
 16134  000C06  5170               	movf	sprintf@c& (0+255),w,b
 16135  000C08  0D02               	mullw	2
 16136  000C0A  0E77               	movlw	low _octpowers
 16137  000C0C  24F3               	addwf	prodl,w,c
 16138  000C0E  6EF6               	movwf	tblptrl,c
 16139  000C10  0EFD               	movlw	high _octpowers
 16140  000C12  20F4               	addwfc	prodh,w,c
 16141  000C14  6EF7               	movwf	tblptrh,c
 16142  000C16                     	if	0	;There are less than 3 active tblptr bytes
 16143  000C16                     	endif
 16144  000C16  0009               	tblrd		*+
 16145  000C18  50F5               	movf	tablat,w,c
 16146  000C1A  5D6B               	subwf	sprintf@val& (0+255),w,b
 16147  000C1C  0009               	tblrd		*+
 16148  000C1E  50F5               	movf	tablat,w,c
 16149  000C20  596C               	subwfb	(sprintf@val+1)& (0+255),w,b
 16150  000C22  E30B               	bnc	l11743
 16151                           
 16152                           ; BSR set to: 0
 16153  000C24  2B70               	incf	sprintf@c& (0+255),f,b
 16154  000C26  D7EC               	goto	l11727
 16155  000C28                     l11741:
 16156                           
 16157                           ; BSR set to: 0
 16158  000C28  5171               	movf	sprintf@flag& (0+255),w,b
 16159  000C2A  0BC0               	andlw	192
 16160                           
 16161                           ; Switch size 1, requested type "speed"
 16162                           ; Number of cases is 4, Range of values is 0 to 192
 16163                           ; switch strategies available:
 16164                           ; Name         Instructions Cycles
 16165                           ; simple_byte           13     7 (average)
 16166                           ;	Chosen strategy is simple_byte
 16167  000C2C  E0BB               	bz	l11697
 16168  000C2E  0A40               	xorlw	64	; case 64
 16169  000C30  E0E5               	bz	l11725
 16170  000C32  0AC0               	xorlw	192	; case 128
 16171  000C34  E0CD               	bz	l11711
 16172  000C36  0A40               	xorlw	64	; case 192
 16173  000C38  E0B5               	bz	l11697
 16174  000C3A                     l11743:
 16175                           
 16176                           ; BSR set to: 0
 16177                           ;doprnt.c: 1339: if(c < prec)
 16178  000C3A  5170               	movf	sprintf@c& (0+255),w,b
 16179  000C3C  0A80               	xorlw	128
 16180  000C3E  6E2E               	movwf	??_sprintf& (0+255),c
 16181  000C40  516D               	movf	sprintf@prec& (0+255),w,b
 16182  000C42  0A80               	xorlw	128
 16183  000C44  5C2E               	subwf	??_sprintf& (0+255),w,c
 16184  000C46  E203               	bc	l11747
 16185                           
 16186                           ; BSR set to: 0
 16187                           ;doprnt.c: 1340: c = prec;
 16188  000C48  C06D  F070         	movff	sprintf@prec,sprintf@c
 16189  000C4C  D009               	goto	l11751
 16190  000C4E                     l11747:
 16191                           
 16192                           ; BSR set to: 0
 16193                           ;doprnt.c: 1341: else if(prec < c)
 16194  000C4E  516D               	movf	sprintf@prec& (0+255),w,b
 16195  000C50  0A80               	xorlw	128
 16196  000C52  6E2E               	movwf	??_sprintf& (0+255),c
 16197  000C54  5170               	movf	sprintf@c& (0+255),w,b
 16198  000C56  0A80               	xorlw	128
 16199  000C58  5C2E               	subwf	??_sprintf& (0+255),w,c
 16200  000C5A  E202               	bc	l11751
 16201                           
 16202                           ; BSR set to: 0
 16203                           ;doprnt.c: 1342: prec = c;
 16204  000C5C  C070  F06D         	movff	sprintf@c,sprintf@prec
 16205  000C60                     l11751:
 16206                           
 16207                           ; BSR set to: 0
 16208                           ;doprnt.c: 1345: if(width && flag & 0x03)
 16209  000C60  516E               	movf	sprintf@width& (0+255),w,b
 16210  000C62  116F               	iorwf	(sprintf@width+1)& (0+255),w,b
 16211  000C64  E008               	bz	l11757
 16212                           
 16213                           ; BSR set to: 0
 16214  000C66  C071  F02E         	movff	sprintf@flag,??_sprintf
 16215  000C6A  0E03               	movlw	3
 16216  000C6C  162E               	andwf	??_sprintf,f,c
 16217  000C6E  E003               	bz	l11757
 16218                           
 16219                           ; BSR set to: 0
 16220                           ;doprnt.c: 1346: width--;
 16221  000C70  076E               	decf	sprintf@width& (0+255),f,b
 16222  000C72  A0D8               	btfss	status,0,c
 16223  000C74  076F               	decf	(sprintf@width+1)& (0+255),f,b
 16224  000C76                     l11757:
 16225                           
 16226                           ; BSR set to: 0
 16227                           ;doprnt.c: 1348: if(flag & 0x4000) {
 16228  000C76  AD72               	btfss	(sprintf@flag+1)& (0+255),6,b
 16229  000C78  D013               	goto	l11763
 16230                           
 16231                           ; BSR set to: 0
 16232                           ;doprnt.c: 1349: if(width > prec)
 16233  000C7A  0E80               	movlw	128
 16234  000C7C  BF6D               	btfsc	sprintf@prec& (0+255),7,b
 16235  000C7E  0E7F               	movlw	127
 16236  000C80  6E2E               	movwf	??_sprintf& (0+255),c
 16237  000C82  516E               	movf	sprintf@width& (0+255),w,b
 16238  000C84  5D6D               	subwf	sprintf@prec& (0+255),w,b
 16239  000C86  516F               	movf	(sprintf@width+1)& (0+255),w,b
 16240  000C88  0A80               	xorlw	128
 16241  000C8A  582E               	subwfb	??_sprintf& (0+255),w,c
 16242  000C8C  E207               	bc	l1434
 16243                           
 16244                           ; BSR set to: 0
 16245                           ;doprnt.c: 1350: width -= prec;
 16246  000C8E  516D               	movf	sprintf@prec& (0+255),w,b
 16247  000C90  5F6E               	subwf	sprintf@width& (0+255),f,b
 16248  000C92  0E00               	movlw	0
 16249  000C94  BF6D               	btfsc	sprintf@prec& (0+255),7,b
 16250  000C96  0EFF               	movlw	255
 16251  000C98  5B6F               	subwfb	(sprintf@width+1)& (0+255),f,b
 16252  000C9A  D002               	goto	l11763
 16253  000C9C                     l1434:
 16254                           
 16255                           ; BSR set to: 0
 16256                           ;doprnt.c: 1351: else
 16257                           ;doprnt.c: 1352: width = 0;
 16258  000C9C  6B6E               	clrf	sprintf@width& (0+255),b
 16259  000C9E  6B6F               	clrf	(sprintf@width+1)& (0+255),b
 16260  000CA0                     l11763:
 16261                           
 16262                           ; BSR set to: 0
 16263                           ;doprnt.c: 1353: }
 16264                           ;doprnt.c: 1357: if((flag & (
 16265                           ;doprnt.c: 1359: 0x04|
 16266                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 16267  000CA0  0EC4               	movlw	196
 16268  000CA2  6E2E               	movwf	??_sprintf& (0+255),c
 16269  000CA4  0E08               	movlw	8
 16270  000CA6  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 16271  000CA8  C071  F030         	movff	sprintf@flag,??_sprintf+2
 16272  000CAC  C072  F031         	movff	sprintf@flag+1,??_sprintf+3
 16273  000CB0  502E               	movf	??_sprintf,w,c
 16274  000CB2  1630               	andwf	??_sprintf+2,f,c
 16275  000CB4  502F               	movf	??_sprintf+1,w,c
 16276  000CB6  1631               	andwf	??_sprintf+3,f,c
 16277  000CB8  0E40               	movlw	64
 16278  000CBA  1830               	xorwf	??_sprintf+2,w,c
 16279  000CBC  E10A               	bnz	l11769
 16280  000CBE  0E08               	movlw	8
 16281  000CC0  1831               	xorwf	??_sprintf+3,w,c
 16282  000CC2  E107               	bnz	l11769
 16283                           
 16284                           ; BSR set to: 0
 16285                           ;doprnt.c: 1362: if(width)
 16286  000CC4  516E               	movf	sprintf@width& (0+255),w,b
 16287  000CC6  116F               	iorwf	(sprintf@width+1)& (0+255),w,b
 16288  000CC8  E024               	bz	l11775
 16289                           
 16290                           ; BSR set to: 0
 16291                           ;doprnt.c: 1363: width--;
 16292  000CCA  076E               	decf	sprintf@width& (0+255),f,b
 16293  000CCC  A0D8               	btfss	status,0,c
 16294  000CCE  076F               	decf	(sprintf@width+1)& (0+255),f,b
 16295  000CD0  D020               	goto	l11775
 16296  000CD2                     l11769:
 16297                           
 16298                           ; BSR set to: 0
 16299                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 16300  000CD2  0EC0               	movlw	192
 16301  000CD4  6E2E               	movwf	??_sprintf& (0+255),c
 16302  000CD6  0E08               	movlw	8
 16303  000CD8  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 16304  000CDA  C071  F030         	movff	sprintf@flag,??_sprintf+2
 16305  000CDE  C072  F031         	movff	sprintf@flag+1,??_sprintf+3
 16306  000CE2  502E               	movf	??_sprintf,w,c
 16307  000CE4  1630               	andwf	??_sprintf+2,f,c
 16308  000CE6  502F               	movf	??_sprintf+1,w,c
 16309  000CE8  1631               	andwf	??_sprintf+3,f,c
 16310  000CEA  0E80               	movlw	128
 16311  000CEC  1830               	xorwf	??_sprintf+2,w,c
 16312  000CEE  E111               	bnz	l11775
 16313  000CF0  0E08               	movlw	8
 16314  000CF2  1831               	xorwf	??_sprintf+3,w,c
 16315  000CF4  E10E               	bnz	l11775
 16316                           
 16317                           ; BSR set to: 0
 16318                           ;doprnt.c: 1372: if(width > 2)
 16319  000CF6  BF6F               	btfsc	(sprintf@width+1)& (0+255),7,b
 16320  000CF8  D00A               	goto	l1440
 16321  000CFA  516F               	movf	(sprintf@width+1)& (0+255),w,b
 16322  000CFC  E103               	bnz	u11700
 16323  000CFE  0E03               	movlw	3
 16324  000D00  5D6E               	subwf	sprintf@width& (0+255),w,b
 16325  000D02  E305               	bnc	l1440
 16326  000D04                     u11700:
 16327                           
 16328                           ; BSR set to: 0
 16329                           ;doprnt.c: 1373: width -= 2;
 16330  000D04  0EFE               	movlw	254
 16331  000D06  276E               	addwf	sprintf@width& (0+255),f,b
 16332  000D08  0EFF               	movlw	255
 16333  000D0A  236F               	addwfc	(sprintf@width+1)& (0+255),f,b
 16334  000D0C  D002               	goto	l11775
 16335  000D0E                     l1440:
 16336                           
 16337                           ; BSR set to: 0
 16338                           ;doprnt.c: 1374: else
 16339                           ;doprnt.c: 1375: width = 0;
 16340  000D0E  6B6E               	clrf	sprintf@width& (0+255),b
 16341  000D10  6B6F               	clrf	(sprintf@width+1)& (0+255),b
 16342  000D12                     l11775:
 16343                           
 16344                           ; BSR set to: 0
 16345                           ;doprnt.c: 1376: }
 16346                           ;doprnt.c: 1381: if(width > c)
 16347  000D12  0E80               	movlw	128
 16348  000D14  BF70               	btfsc	sprintf@c& (0+255),7,b
 16349  000D16  0E7F               	movlw	127
 16350  000D18  6E2E               	movwf	??_sprintf& (0+255),c
 16351  000D1A  516E               	movf	sprintf@width& (0+255),w,b
 16352  000D1C  5D70               	subwf	sprintf@c& (0+255),w,b
 16353  000D1E  516F               	movf	(sprintf@width+1)& (0+255),w,b
 16354  000D20  0A80               	xorlw	128
 16355  000D22  582E               	subwfb	??_sprintf& (0+255),w,c
 16356  000D24  E207               	bc	l1442
 16357                           
 16358                           ; BSR set to: 0
 16359                           ;doprnt.c: 1382: width -= c;
 16360  000D26  5170               	movf	sprintf@c& (0+255),w,b
 16361  000D28  5F6E               	subwf	sprintf@width& (0+255),f,b
 16362  000D2A  0E00               	movlw	0
 16363  000D2C  BF70               	btfsc	sprintf@c& (0+255),7,b
 16364  000D2E  0EFF               	movlw	255
 16365  000D30  5B6F               	subwfb	(sprintf@width+1)& (0+255),f,b
 16366  000D32  D002               	goto	l1443
 16367  000D34                     l1442:
 16368                           
 16369                           ; BSR set to: 0
 16370                           ;doprnt.c: 1383: else
 16371                           ;doprnt.c: 1384: width = 0;
 16372  000D34  6B6E               	clrf	sprintf@width& (0+255),b
 16373  000D36  6B6F               	clrf	(sprintf@width+1)& (0+255),b
 16374  000D38                     l1443:
 16375                           
 16376                           ; BSR set to: 0
 16377                           ;doprnt.c: 1387: if(flag & 0x04) {
 16378  000D38  A571               	btfss	sprintf@flag& (0+255),2,b
 16379  000D3A  D04F               	goto	l11813
 16380                           
 16381                           ; BSR set to: 0
 16382                           ;doprnt.c: 1392: if(flag & 0x03)
 16383  000D3C  C071  F02E         	movff	sprintf@flag,??_sprintf
 16384  000D40  0E03               	movlw	3
 16385  000D42  162E               	andwf	??_sprintf,f,c
 16386  000D44  E009               	bz	l1445
 16387                           
 16388                           ; BSR set to: 0
 16389                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 16390  000D46  C022  FFD9         	movff	sprintf@sp,fsr2l
 16391  000D4A  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16392  000D4E  0E2D               	movlw	45
 16393  000D50  6EDF               	movwf	indf2,c
 16394  000D52                     l11783:
 16395                           
 16396                           ; BSR set to: 0
 16397  000D52  4A22               	infsnz	sprintf@sp,f,c
 16398  000D54  2A23               	incf	sprintf@sp+1,f,c
 16399  000D56  D031               	goto	l11805
 16400  000D58                     l1445:
 16401                           
 16402                           ; BSR set to: 0
 16403                           ;doprnt.c: 1396: else
 16404                           ;doprnt.c: 1399: if(flag & 0x01)
 16405  000D58  A171               	btfss	sprintf@flag& (0+255),0,b
 16406  000D5A  D006               	goto	l11789
 16407                           
 16408                           ; BSR set to: 0
 16409                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 16410  000D5C  C022  FFD9         	movff	sprintf@sp,fsr2l
 16411  000D60  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16412  000D64  0E20               	movlw	32
 16413  000D66  D7F4               	goto	L17
 16414  000D68                     l11789:
 16415                           
 16416                           ; BSR set to: 0
 16417                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 16418  000D68  0EC0               	movlw	192
 16419  000D6A  6E2E               	movwf	??_sprintf& (0+255),c
 16420  000D6C  0E08               	movlw	8
 16421  000D6E  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 16422  000D70  C071  F030         	movff	sprintf@flag,??_sprintf+2
 16423  000D74  C072  F031         	movff	sprintf@flag+1,??_sprintf+3
 16424  000D78  502E               	movf	??_sprintf,w,c
 16425  000D7A  1630               	andwf	??_sprintf+2,f,c
 16426  000D7C  502F               	movf	??_sprintf+1,w,c
 16427  000D7E  1631               	andwf	??_sprintf+3,f,c
 16428  000D80  0E80               	movlw	128
 16429  000D82  1830               	xorwf	??_sprintf+2,w,c
 16430  000D84  E11A               	bnz	l11805
 16431  000D86  0E08               	movlw	8
 16432  000D88  1831               	xorwf	??_sprintf+3,w,c
 16433  000D8A  E117               	bnz	l11805
 16434                           
 16435                           ; BSR set to: 0
 16436                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 16437  000D8C  C022  FFD9         	movff	sprintf@sp,fsr2l
 16438  000D90  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16439  000D94  0E30               	movlw	48
 16440  000D96  6EDF               	movwf	indf2,c
 16441                           
 16442                           ; BSR set to: 0
 16443  000D98  4A22               	infsnz	sprintf@sp,f,c
 16444  000D9A  2A23               	incf	sprintf@sp+1,f,c
 16445                           
 16446                           ; BSR set to: 0
 16447                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 16448  000D9C  BB71               	btfsc	sprintf@flag& (0+255),5,b
 16449  000D9E  D003               	goto	l11799
 16450                           
 16451                           ; BSR set to: 0
 16452  000DA0  6B62               	clrf	(_sprintf$3880+1)& (0+255),b
 16453  000DA2  0E78               	movlw	120
 16454  000DA4  D002               	goto	L18
 16455  000DA6                     l11799:
 16456                           
 16457                           ; BSR set to: 0
 16458  000DA6  6B62               	clrf	(_sprintf$3880+1)& (0+255),b
 16459  000DA8  0E58               	movlw	88
 16460  000DAA                     L18:
 16461  000DAA  6F61               	movwf	_sprintf$3880& (0+255),b
 16462                           
 16463                           ; BSR set to: 0
 16464  000DAC  C022  FFD9         	movff	sprintf@sp,fsr2l
 16465  000DB0  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16466  000DB4  C061  FFDF         	movff	_sprintf$3880,indf2
 16467  000DB8  D7CC               	goto	l11783
 16468  000DBA                     l11805:
 16469                           
 16470                           ; BSR set to: 0
 16471                           ;doprnt.c: 1412: }
 16472                           ;doprnt.c: 1415: if(width)
 16473  000DBA  516E               	movf	sprintf@width& (0+255),w,b
 16474  000DBC  116F               	iorwf	(sprintf@width+1)& (0+255),w,b
 16475  000DBE  E101 D0F2          	bz	l11877
 16476                           
 16477                           ; BSR set to: 0
 16478                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 16479  000DC2  C022  FFD9         	movff	sprintf@sp,fsr2l
 16480  000DC6  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16481  000DCA  0E30               	movlw	48
 16482  000DCC  6EDF               	movwf	indf2,c
 16483                           
 16484                           ; BSR set to: 0
 16485  000DCE  4A22               	infsnz	sprintf@sp,f,c
 16486  000DD0  2A23               	incf	sprintf@sp+1,f,c
 16487                           
 16488                           ; BSR set to: 0
 16489                           ;doprnt.c: 1418: while(--width);
 16490  000DD2  076E               	decf	sprintf@width& (0+255),f,b
 16491  000DD4  A0D8               	btfss	status,0,c
 16492  000DD6  076F               	decf	(sprintf@width+1)& (0+255),f,b
 16493  000DD8  D7F0               	goto	l11805
 16494  000DDA                     l11813:
 16495                           
 16496                           ; BSR set to: 0
 16497                           ;doprnt.c: 1422: {
 16498                           ;doprnt.c: 1424: if(width
 16499                           ;doprnt.c: 1426: && !(flag & 0x08)
 16500                           ;doprnt.c: 1428: )
 16501  000DDA  516E               	movf	sprintf@width& (0+255),w,b
 16502  000DDC  116F               	iorwf	(sprintf@width+1)& (0+255),w,b
 16503  000DDE  E010               	bz	l11823
 16504                           
 16505                           ; BSR set to: 0
 16506  000DE0  B771               	btfsc	sprintf@flag& (0+255),3,b
 16507  000DE2  D00E               	goto	l11823
 16508  000DE4                     l11817:
 16509                           
 16510                           ; BSR set to: 0
 16511                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 16512  000DE4  C022  FFD9         	movff	sprintf@sp,fsr2l
 16513  000DE8  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16514  000DEC  0E20               	movlw	32
 16515  000DEE  6EDF               	movwf	indf2,c
 16516                           
 16517                           ; BSR set to: 0
 16518  000DF0  4A22               	infsnz	sprintf@sp,f,c
 16519  000DF2  2A23               	incf	sprintf@sp+1,f,c
 16520                           
 16521                           ; BSR set to: 0
 16522                           ;doprnt.c: 1431: while(--width);
 16523  000DF4  076E               	decf	sprintf@width& (0+255),f,b
 16524  000DF6  A0D8               	btfss	status,0,c
 16525  000DF8  076F               	decf	(sprintf@width+1)& (0+255),f,b
 16526  000DFA  516E               	movf	sprintf@width& (0+255),w,b
 16527  000DFC  116F               	iorwf	(sprintf@width+1)& (0+255),w,b
 16528  000DFE  E1F2               	bnz	l11817
 16529  000E00                     l11823:
 16530                           
 16531                           ; BSR set to: 0
 16532                           ;doprnt.c: 1438: if(flag & 0x03)
 16533  000E00  C071  F02E         	movff	sprintf@flag,??_sprintf
 16534  000E04  0E03               	movlw	3
 16535  000E06  162E               	andwf	??_sprintf,f,c
 16536  000E08  E009               	bz	l1461
 16537                           
 16538                           ; BSR set to: 0
 16539                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 16540  000E0A  C022  FFD9         	movff	sprintf@sp,fsr2l
 16541  000E0E  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16542  000E12  0E2D               	movlw	45
 16543  000E14  6EDF               	movwf	indf2,c
 16544                           
 16545                           ; BSR set to: 0
 16546  000E16  4A22               	infsnz	sprintf@sp,f,c
 16547  000E18  2A23               	incf	sprintf@sp+1,f,c
 16548  000E1A  D008               	goto	l11833
 16549  000E1C                     l1461:
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;doprnt.c: 1443: else if(flag & 0x01)
 16553  000E1C  A171               	btfss	sprintf@flag& (0+255),0,b
 16554  000E1E  D006               	goto	l11833
 16555                           
 16556                           ; BSR set to: 0
 16557                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 16558  000E20  C022  FFD9         	movff	sprintf@sp,fsr2l
 16559  000E24  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16560  000E28  0E20               	movlw	32
 16561  000E2A  D7F4               	goto	L19
 16562  000E2C                     l11833:
 16563                           
 16564                           ; BSR set to: 0
 16565                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 16566  000E2C  0EC0               	movlw	192
 16567  000E2E  6E2E               	movwf	??_sprintf& (0+255),c
 16568  000E30  0E08               	movlw	8
 16569  000E32  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 16570  000E34  C071  F030         	movff	sprintf@flag,??_sprintf+2
 16571  000E38  C072  F031         	movff	sprintf@flag+1,??_sprintf+3
 16572  000E3C  502E               	movf	??_sprintf,w,c
 16573  000E3E  1630               	andwf	??_sprintf+2,f,c
 16574  000E40  502F               	movf	??_sprintf+1,w,c
 16575  000E42  1631               	andwf	??_sprintf+3,f,c
 16576  000E44  0E40               	movlw	64
 16577  000E46  1830               	xorwf	??_sprintf+2,w,c
 16578  000E48  E10C               	bnz	l11839
 16579  000E4A  0E08               	movlw	8
 16580  000E4C  1831               	xorwf	??_sprintf+3,w,c
 16581  000E4E  E109               	bnz	l11839
 16582                           
 16583                           ; BSR set to: 0
 16584                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 16585  000E50  C022  FFD9         	movff	sprintf@sp,fsr2l
 16586  000E54  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16587  000E58  0E30               	movlw	48
 16588  000E5A  6EDF               	movwf	indf2,c
 16589  000E5C                     l11837:
 16590                           
 16591                           ; BSR set to: 0
 16592  000E5C  4A22               	infsnz	sprintf@sp,f,c
 16593  000E5E  2A23               	incf	sprintf@sp+1,f,c
 16594  000E60  D0A2               	goto	l11877
 16595  000E62                     l11839:
 16596                           
 16597                           ; BSR set to: 0
 16598                           ;doprnt.c: 1450: else
 16599                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 16600  000E62  0EC0               	movlw	192
 16601  000E64  6E2E               	movwf	??_sprintf& (0+255),c
 16602  000E66  0E08               	movlw	8
 16603  000E68  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 16604  000E6A  C071  F030         	movff	sprintf@flag,??_sprintf+2
 16605  000E6E  C072  F031         	movff	sprintf@flag+1,??_sprintf+3
 16606  000E72  502E               	movf	??_sprintf,w,c
 16607  000E74  1630               	andwf	??_sprintf+2,f,c
 16608  000E76  502F               	movf	??_sprintf+1,w,c
 16609  000E78  1631               	andwf	??_sprintf+3,f,c
 16610  000E7A  0E80               	movlw	128
 16611  000E7C  1830               	xorwf	??_sprintf+2,w,c
 16612  000E7E  E11B               	bnz	l1457
 16613  000E80  0E08               	movlw	8
 16614  000E82  1831               	xorwf	??_sprintf+3,w,c
 16615  000E84  E001 D08F          	bnz	l11877
 16616                           
 16617                           ; BSR set to: 0
 16618                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 16619  000E88  C022  FFD9         	movff	sprintf@sp,fsr2l
 16620  000E8C  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16621  000E90  0E30               	movlw	48
 16622  000E92  6EDF               	movwf	indf2,c
 16623                           
 16624                           ; BSR set to: 0
 16625  000E94  4A22               	infsnz	sprintf@sp,f,c
 16626  000E96  2A23               	incf	sprintf@sp+1,f,c
 16627                           
 16628                           ; BSR set to: 0
 16629                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 16630  000E98  BB71               	btfsc	sprintf@flag& (0+255),5,b
 16631  000E9A  D003               	goto	l11849
 16632                           
 16633                           ; BSR set to: 0
 16634  000E9C  6B64               	clrf	(_sprintf$3881+1)& (0+255),b
 16635  000E9E  0E78               	movlw	120
 16636  000EA0  D002               	goto	L20
 16637  000EA2                     l11849:
 16638                           
 16639                           ; BSR set to: 0
 16640  000EA2  6B64               	clrf	(_sprintf$3881+1)& (0+255),b
 16641  000EA4  0E58               	movlw	88
 16642  000EA6                     L20:
 16643  000EA6  6F63               	movwf	_sprintf$3881& (0+255),b
 16644                           
 16645                           ; BSR set to: 0
 16646  000EA8  C022  FFD9         	movff	sprintf@sp,fsr2l
 16647  000EAC  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16648  000EB0  C063  FFDF         	movff	_sprintf$3881,indf2
 16649  000EB4  D7D3               	goto	l11837
 16650  000EB6                     l1457:
 16651                           
 16652                           ; BSR set to: 0
 16653                           ;doprnt.c: 1466: }
 16654                           ;doprnt.c: 1469: }
 16655                           ;doprnt.c: 1474: while(prec--) {
 16656  000EB6  D077               	goto	l11877
 16657  000EB8                     l11855:
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;doprnt.c: 1486: case 0xC0:
 16661                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 16662  000EB8  516D               	movf	sprintf@prec& (0+255),w,b
 16663  000EBA  0D02               	mullw	2
 16664  000EBC  0E83               	movlw	low _dpowers
 16665  000EBE  24F3               	addwf	prodl,w,c
 16666  000EC0  6EF6               	movwf	tblptrl,c
 16667  000EC2  0EFD               	movlw	high _dpowers
 16668  000EC4  20F4               	addwfc	prodh,w,c
 16669  000EC6  6EF7               	movwf	tblptrh,c
 16670  000EC8                     	if	0	;There are less than 3 active tblptr bytes
 16671  000EC8                     	endif
 16672  000EC8  0009               	tblrd		*+
 16673  000ECA  CFF5 F018          	movff	tablat,___lwdiv@divisor
 16674  000ECE  000A               	tblrd		*-
 16675  000ED0  CFF5 F019          	movff	tablat,___lwdiv@divisor+1
 16676  000ED4  C06B  F016         	movff	sprintf@val,___lwdiv@dividend
 16677  000ED8  C06C  F017         	movff	sprintf@val+1,___lwdiv@dividend+1
 16678  000EDC  EC53  F01A         	call	___lwdiv	;wreg free
 16679  000EE0  C016  F01D         	movff	?___lwdiv,___lwmod@dividend
 16680  000EE4  C017  F01E         	movff	?___lwdiv+1,___lwmod@dividend+1
 16681  000EE8  6A20               	clrf	___lwmod@divisor+1,c
 16682  000EEA  0E0A               	movlw	10
 16683  000EEC  6E1F               	movwf	___lwmod@divisor,c
 16684  000EEE  EC14  F01B         	call	___lwmod	;wreg free
 16685  000EF2  501D               	movf	?___lwmod,w,c
 16686  000EF4  D045               	goto	L21
 16687  000EF6                     l11857:
 16688                           
 16689                           ; BSR set to: 0
 16690                           ;doprnt.c: 1499: {
 16691                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 16692  000EF6  C06B  F016         	movff	sprintf@val,___lwdiv@dividend
 16693  000EFA  C06C  F017         	movff	sprintf@val+1,___lwdiv@dividend+1
 16694  000EFE  516D               	movf	sprintf@prec& (0+255),w,b
 16695  000F00  0D02               	mullw	2
 16696  000F02  0E8D               	movlw	low _hexpowers
 16697  000F04  24F3               	addwf	prodl,w,c
 16698  000F06  6EF6               	movwf	tblptrl,c
 16699  000F08  0EFD               	movlw	high _hexpowers
 16700  000F0A  20F4               	addwfc	prodh,w,c
 16701  000F0C  6EF7               	movwf	tblptrh,c
 16702  000F0E                     	if	0	;There are less than 3 active tblptr bytes
 16703  000F0E                     	endif
 16704  000F0E  0009               	tblrd		*+
 16705  000F10  CFF5 F018          	movff	tablat,___lwdiv@divisor
 16706  000F14  000A               	tblrd		*-
 16707  000F16  CFF5 F019          	movff	tablat,___lwdiv@divisor+1
 16708  000F1A  EC53  F01A         	call	___lwdiv	;wreg free
 16709  000F1E  5016               	movf	?___lwdiv,w,c
 16710  000F20  0B0F               	andlw	15
 16711  000F22  6F60               	movwf	sprintf@idx& (0+255),b
 16712                           
 16713                           ; BSR set to: 0
 16714                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 16715  000F24  BB71               	btfsc	sprintf@flag& (0+255),5,b
 16716  000F26  D004               	goto	l11863
 16717                           
 16718                           ; BSR set to: 0
 16719  000F28  0E5F               	movlw	low STR_38
 16720  000F2A  6F65               	movwf	_sprintf$3887& (0+255),b
 16721  000F2C  0EFF               	movlw	high STR_38
 16722  000F2E  D003               	goto	L22
 16723  000F30                     l11863:
 16724                           
 16725                           ; BSR set to: 0
 16726  000F30  0E4E               	movlw	low STR_37
 16727  000F32  6F65               	movwf	_sprintf$3887& (0+255),b
 16728  000F34  0EFF               	movlw	high STR_37
 16729  000F36                     L22:
 16730  000F36  6F66               	movwf	(_sprintf$3887+1)& (0+255),b
 16731                           
 16732                           ; BSR set to: 0
 16733  000F38  5160               	movf	sprintf@idx& (0+255),w,b
 16734  000F3A  2565               	addwf	_sprintf$3887& (0+255),w,b
 16735  000F3C  6E2E               	movwf	??_sprintf& (0+255),c
 16736  000F3E  0E00               	movlw	0
 16737  000F40  2166               	addwfc	(_sprintf$3887+1)& (0+255),w,b
 16738  000F42  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 16739  000F44  C02E  FFF6         	movff	??_sprintf,tblptrl
 16740  000F48  C02F  FFF7         	movff	??_sprintf+1,tblptrh
 16741  000F4C                     	if	0	;tblptru may be non-zero
 16742  000F4C                     	endif
 16743  000F4C                     	if	0	;tblptru may be non-zero
 16744  000F4C                     	endif
 16745  000F4C  0008               	tblrd		*
 16746  000F4E  CFF5 F070          	movff	tablat,sprintf@c
 16747                           
 16748                           ;doprnt.c: 1508: }
 16749                           ;doprnt.c: 1510: break;
 16750  000F52  D022               	goto	l11873
 16751  000F54                     l11867:
 16752                           
 16753                           ; BSR set to: 0
 16754                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 16755  000F54  C06B  F016         	movff	sprintf@val,___lwdiv@dividend
 16756  000F58  C06C  F017         	movff	sprintf@val+1,___lwdiv@dividend+1
 16757  000F5C  516D               	movf	sprintf@prec& (0+255),w,b
 16758  000F5E  0D02               	mullw	2
 16759  000F60  0E77               	movlw	low _octpowers
 16760  000F62  24F3               	addwf	prodl,w,c
 16761  000F64  6EF6               	movwf	tblptrl,c
 16762  000F66  0EFD               	movlw	high _octpowers
 16763  000F68  20F4               	addwfc	prodh,w,c
 16764  000F6A  6EF7               	movwf	tblptrh,c
 16765  000F6C                     	if	0	;There are less than 3 active tblptr bytes
 16766  000F6C                     	endif
 16767  000F6C  0009               	tblrd		*+
 16768  000F6E  CFF5 F018          	movff	tablat,___lwdiv@divisor
 16769  000F72  000A               	tblrd		*-
 16770  000F74  CFF5 F019          	movff	tablat,___lwdiv@divisor+1
 16771  000F78  EC53  F01A         	call	___lwdiv	;wreg free
 16772  000F7C  5016               	movf	?___lwdiv,w,c
 16773  000F7E  0B07               	andlw	7
 16774  000F80                     L21:
 16775  000F80  0F30               	addlw	48
 16776  000F82  6F70               	movwf	sprintf@c& (0+255),b
 16777                           
 16778                           ;doprnt.c: 1520: break;
 16779  000F84  D009               	goto	l11873
 16780  000F86                     l11871:
 16781                           
 16782                           ; BSR set to: 0
 16783  000F86  5171               	movf	sprintf@flag& (0+255),w,b
 16784  000F88  0BC0               	andlw	192
 16785                           
 16786                           ; Switch size 1, requested type "speed"
 16787                           ; Number of cases is 4, Range of values is 0 to 192
 16788                           ; switch strategies available:
 16789                           ; Name         Instructions Cycles
 16790                           ; simple_byte           13     7 (average)
 16791                           ;	Chosen strategy is simple_byte
 16792  000F8A  E096               	bz	l11855
 16793  000F8C  0A40               	xorlw	64	; case 64
 16794  000F8E  E0E2               	bz	l11867
 16795  000F90  0AC0               	xorlw	192	; case 128
 16796  000F92  E0B1               	bz	l11857
 16797  000F94  0A40               	xorlw	64	; case 192
 16798  000F96  E090               	bz	l11855
 16799  000F98                     l11873:
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;doprnt.c: 1524: ((*sp++ = (c)));
 16803  000F98  C022  FFD9         	movff	sprintf@sp,fsr2l
 16804  000F9C  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16805  000FA0  C070  FFDF         	movff	sprintf@c,indf2
 16806  000FA4  D75B               	goto	l11837
 16807  000FA6                     l11877:
 16808                           
 16809                           ; BSR set to: 0
 16810  000FA6  076D               	decf	sprintf@prec& (0+255),f,b
 16811  000FA8  296D               	incf	sprintf@prec& (0+255),w,b
 16812  000FAA  E1ED               	bnz	l11871
 16813                           
 16814                           ; BSR set to: 0
 16815                           ;doprnt.c: 1525: }
 16816                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 16817  000FAC  B771               	btfsc	sprintf@flag& (0+255),3,b
 16818                           
 16819                           ; BSR set to: 0
 16820  000FAE  BF6F               	btfsc	(sprintf@width+1)& (0+255),7,b
 16821  000FB0  D012               	goto	l11887
 16822  000FB2  516F               	movf	(sprintf@width+1)& (0+255),w,b
 16823  000FB4  E102               	bnz	u11900
 16824  000FB6  056E               	decf	sprintf@width& (0+255),w,b
 16825  000FB8  E30E               	bnc	l11887
 16826  000FBA                     u11900:
 16827  000FBA                     l11881:
 16828                           
 16829                           ; BSR set to: 0
 16830                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 16831  000FBA  C022  FFD9         	movff	sprintf@sp,fsr2l
 16832  000FBE  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16833  000FC2  0E20               	movlw	32
 16834  000FC4  6EDF               	movwf	indf2,c
 16835                           
 16836                           ; BSR set to: 0
 16837  000FC6  4A22               	infsnz	sprintf@sp,f,c
 16838  000FC8  2A23               	incf	sprintf@sp+1,f,c
 16839                           
 16840                           ; BSR set to: 0
 16841                           ;doprnt.c: 1531: while(--width);
 16842  000FCA  076E               	decf	sprintf@width& (0+255),f,b
 16843  000FCC  A0D8               	btfss	status,0,c
 16844  000FCE  076F               	decf	(sprintf@width+1)& (0+255),f,b
 16845  000FD0  516E               	movf	sprintf@width& (0+255),w,b
 16846  000FD2  116F               	iorwf	(sprintf@width+1)& (0+255),w,b
 16847  000FD4  E1F2               	bnz	l11881
 16848  000FD6                     l11887:
 16849                           
 16850                           ; BSR set to: 0
 16851  000FD6  C024  FFF6         	movff	sprintf@f,tblptrl
 16852  000FDA  C025  FFF7         	movff	sprintf@f+1,tblptrh
 16853  000FDE  4A24               	infsnz	sprintf@f,f,c
 16854  000FE0  2A25               	incf	sprintf@f+1,f,c
 16855  000FE2                     	if	0	;tblptru may be non-zero
 16856  000FE2                     	endif
 16857  000FE2                     	if	0	;tblptru may be non-zero
 16858  000FE2                     	endif
 16859  000FE2  0008               	tblrd		*
 16860  000FE4  CFF5 F070          	movff	tablat,sprintf@c
 16861  000FE8  5170               	movf	sprintf@c& (0+255),w,b
 16862  000FEA  E001 D475          	bnz	l11565
 16863  000FEE                     l11889:
 16864                           
 16865                           ; BSR set to: 0
 16866                           ;doprnt.c: 1538: *sp = 0;
 16867  000FEE  C022  FFD9         	movff	sprintf@sp,fsr2l
 16868  000FF2  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 16869  000FF6  6ADF               	clrf	indf2,c
 16870                           
 16871                           ; BSR set to: 0
 16872  000FF8  0C00               	retlw	0	;funcret
 16873  000FFA                     __end_of_sprintf:
 16874                           	opt stack 0
 16875                           tblptru	equ	0xFF8
 16876                           tblptrh	equ	0xFF7
 16877                           tblptrl	equ	0xFF6
 16878                           tablat	equ	0xFF5
 16879                           prodh	equ	0xFF4
 16880                           prodl	equ	0xFF3
 16881                           intcon	equ	0xFF2
 16882                           intcon2	equ	0xFF1
 16883                           postinc0	equ	0xFEE
 16884                           plusw0	equ	0xFEB
 16885                           wreg	equ	0xFE8
 16886                           indf1	equ	0xFE7
 16887                           postinc1	equ	0xFE6
 16888                           postdec1	equ	0xFE5
 16889                           fsr1h	equ	0xFE2
 16890                           fsr1l	equ	0xFE1
 16891                           indf2	equ	0xFDF
 16892                           postinc2	equ	0xFDE
 16893                           postdec2	equ	0xFDD
 16894                           plusw2	equ	0xFDB
 16895                           fsr2h	equ	0xFDA
 16896                           fsr2l	equ	0xFD9
 16897                           status	equ	0xFD8
 16898                           
 16899 ;; *************** function _isdigit *****************
 16900 ;; Defined at:
 16901 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 16902 ;; Parameters:    Size  Location     Type
 16903 ;;  c               1    wreg     unsigned char 
 16904 ;; Auto vars:     Size  Location     Type
 16905 ;;  c               1   23[COMRAM] unsigned char 
 16906 ;; Return value:  Size  Location     Type
 16907 ;;		None               void
 16908 ;; Registers used:
 16909 ;;		wreg, status,2, status,0
 16910 ;; Tracked objects:
 16911 ;;		On entry : F/0
 16912 ;;		On exit  : 0/0
 16913 ;;		Unchanged: 0/0
 16914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16919 ;;Total ram usage:        3 bytes
 16920 ;; Hardware stack levels used:    1
 16921 ;; Hardware stack levels required when called:    3
 16922 ;; This function calls:
 16923 ;;		Nothing
 16924 ;; This function is called by:
 16925 ;;		_sprintf
 16926 ;; This function uses a non-reentrant model
 16927 ;;
 16928                           
 16929                           	psect	text68
 16930  0039EA                     __ptext68:
 16931                           	opt stack 0
 16932  0039EA                     _isdigit:
 16933                           	opt stack 24
 16934                           
 16935                           ; BSR set to: 0
 16936                           ;incstack = 0
 16937                           ;isdigit@c stored from wreg
 16938  0039EA  6E18               	movwf	isdigit@c,c
 16939  0039EC  6A17               	clrf	_isdigit$4111,c
 16940  0039EE  0E3A               	movlw	58
 16941  0039F0  6018               	cpfslt	isdigit@c,c
 16942  0039F2  D005               	goto	l11473
 16943  0039F4  0E2F               	movlw	47
 16944  0039F6  6418               	cpfsgt	isdigit@c,c
 16945  0039F8  D002               	goto	l11473
 16946  0039FA  0E01               	movlw	1
 16947  0039FC  6E17               	movwf	_isdigit$4111,c
 16948  0039FE                     l11473:
 16949  0039FE  C017  F016         	movff	_isdigit$4111,??_isdigit
 16950  003A02  3016               	rrcf	??_isdigit,w,c
 16951  003A04  0012               	return		;funcret
 16952  003A06                     __end_of_isdigit:
 16953                           	opt stack 0
 16954                           tblptru	equ	0xFF8
 16955                           tblptrh	equ	0xFF7
 16956                           tblptrl	equ	0xFF6
 16957                           tablat	equ	0xFF5
 16958                           prodh	equ	0xFF4
 16959                           prodl	equ	0xFF3
 16960                           intcon	equ	0xFF2
 16961                           intcon2	equ	0xFF1
 16962                           postinc0	equ	0xFEE
 16963                           plusw0	equ	0xFEB
 16964                           wreg	equ	0xFE8
 16965                           indf1	equ	0xFE7
 16966                           postinc1	equ	0xFE6
 16967                           postdec1	equ	0xFE5
 16968                           fsr1h	equ	0xFE2
 16969                           fsr1l	equ	0xFE1
 16970                           indf2	equ	0xFDF
 16971                           postinc2	equ	0xFDE
 16972                           postdec2	equ	0xFDD
 16973                           plusw2	equ	0xFDB
 16974                           fsr2h	equ	0xFDA
 16975                           fsr2l	equ	0xFD9
 16976                           status	equ	0xFD8
 16977                           
 16978 ;; *************** function ___wmul *****************
 16979 ;; Defined at:
 16980 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 16981 ;; Parameters:    Size  Location     Type
 16982 ;;  multiplier      2   21[COMRAM] unsigned int 
 16983 ;;  multiplicand    2   23[COMRAM] unsigned int 
 16984 ;; Auto vars:     Size  Location     Type
 16985 ;;  product         2   25[COMRAM] unsigned int 
 16986 ;; Return value:  Size  Location     Type
 16987 ;;                  2   21[COMRAM] unsigned int 
 16988 ;; Registers used:
 16989 ;;		wreg, status,2, status,0, prodl, prodh
 16990 ;; Tracked objects:
 16991 ;;		On entry : 0/0
 16992 ;;		On exit  : 0/0
 16993 ;;		Unchanged: 0/0
 16994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16996 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16998 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16999 ;;Total ram usage:        6 bytes
 17000 ;; Hardware stack levels used:    1
 17001 ;; Hardware stack levels required when called:    3
 17002 ;; This function calls:
 17003 ;;		Nothing
 17004 ;; This function is called by:
 17005 ;;		_sprintf
 17006 ;; This function uses a non-reentrant model
 17007 ;;
 17008                           
 17009                           	psect	text69
 17010  003906                     __ptext69:
 17011                           	opt stack 0
 17012  003906                     ___wmul:
 17013                           	opt stack 24
 17014                           
 17015                           ;incstack = 0
 17016  003906  5016               	movf	___wmul@multiplier,w,c
 17017  003908  0218               	mulwf	___wmul@multiplicand,c
 17018  00390A  CFF3 F01A          	movff	prodl,___wmul@product
 17019  00390E  CFF4 F01B          	movff	prodh,___wmul@product+1
 17020  003912  5016               	movf	___wmul@multiplier,w,c
 17021  003914  0219               	mulwf	___wmul@multiplicand+1,c
 17022  003916  50F3               	movf	prodl,w,c
 17023  003918  261B               	addwf	___wmul@product+1,f,c
 17024  00391A  5017               	movf	___wmul@multiplier+1,w,c
 17025  00391C  0218               	mulwf	___wmul@multiplicand,c
 17026  00391E  50F3               	movf	prodl,w,c
 17027  003920  261B               	addwf	___wmul@product+1,f,c
 17028  003922  C01A  F016         	movff	___wmul@product,?___wmul
 17029  003926  C01B  F017         	movff	___wmul@product+1,?___wmul+1
 17030  00392A  0012               	return		;funcret
 17031  00392C                     __end_of___wmul:
 17032                           	opt stack 0
 17033                           tblptru	equ	0xFF8
 17034                           tblptrh	equ	0xFF7
 17035                           tblptrl	equ	0xFF6
 17036                           tablat	equ	0xFF5
 17037                           prodh	equ	0xFF4
 17038                           prodl	equ	0xFF3
 17039                           intcon	equ	0xFF2
 17040                           intcon2	equ	0xFF1
 17041                           postinc0	equ	0xFEE
 17042                           plusw0	equ	0xFEB
 17043                           wreg	equ	0xFE8
 17044                           indf1	equ	0xFE7
 17045                           postinc1	equ	0xFE6
 17046                           postdec1	equ	0xFE5
 17047                           fsr1h	equ	0xFE2
 17048                           fsr1l	equ	0xFE1
 17049                           indf2	equ	0xFDF
 17050                           postinc2	equ	0xFDE
 17051                           postdec2	equ	0xFDD
 17052                           plusw2	equ	0xFDB
 17053                           fsr2h	equ	0xFDA
 17054                           fsr2l	equ	0xFD9
 17055                           status	equ	0xFD8
 17056                           
 17057 ;; *************** function ___lwmod *****************
 17058 ;; Defined at:
 17059 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 17060 ;; Parameters:    Size  Location     Type
 17061 ;;  dividend        2   28[COMRAM] unsigned int 
 17062 ;;  divisor         2   30[COMRAM] unsigned int 
 17063 ;; Auto vars:     Size  Location     Type
 17064 ;;  counter         1   32[COMRAM] unsigned char 
 17065 ;; Return value:  Size  Location     Type
 17066 ;;                  2   28[COMRAM] unsigned int 
 17067 ;; Registers used:
 17068 ;;		wreg, status,2, status,0
 17069 ;; Tracked objects:
 17070 ;;		On entry : F/0
 17071 ;;		On exit  : F/0
 17072 ;;		Unchanged: F/0
 17073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17077 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17078 ;;Total ram usage:        5 bytes
 17079 ;; Hardware stack levels used:    1
 17080 ;; Hardware stack levels required when called:    3
 17081 ;; This function calls:
 17082 ;;		Nothing
 17083 ;; This function is called by:
 17084 ;;		_sprintf
 17085 ;; This function uses a non-reentrant model
 17086 ;;
 17087                           
 17088                           	psect	text70
 17089  003628                     __ptext70:
 17090                           	opt stack 0
 17091  003628                     ___lwmod:
 17092                           	opt stack 24
 17093                           
 17094                           ; BSR set to: 0
 17095                           
 17096                           ;incstack = 0
 17097  003628  501F               	movf	___lwmod@divisor,w,c
 17098  00362A  1020               	iorwf	___lwmod@divisor+1,w,c
 17099  00362C  E017               	bz	l1900
 17100                           
 17101                           ; BSR set to: 0
 17102  00362E  0E01               	movlw	1
 17103  003630  6E21               	movwf	___lwmod@counter,c
 17104  003632  D004               	goto	l11511
 17105  003634                     l11509:
 17106                           
 17107                           ; BSR set to: 0
 17108  003634  90D8               	bcf	status,0,c
 17109  003636  361F               	rlcf	___lwmod@divisor,f,c
 17110  003638  3620               	rlcf	___lwmod@divisor+1,f,c
 17111  00363A  2A21               	incf	___lwmod@counter,f,c
 17112  00363C                     l11511:
 17113                           
 17114                           ; BSR set to: 0
 17115  00363C  AE20               	btfss	___lwmod@divisor+1,7,c
 17116  00363E  D7FA               	goto	l11509
 17117  003640                     l11513:
 17118                           
 17119                           ; BSR set to: 0
 17120  003640  501F               	movf	___lwmod@divisor,w,c
 17121  003642  5C1D               	subwf	___lwmod@dividend,w,c
 17122  003644  5020               	movf	___lwmod@divisor+1,w,c
 17123  003646  581E               	subwfb	___lwmod@dividend+1,w,c
 17124  003648  E304               	bnc	l11517
 17125                           
 17126                           ; BSR set to: 0
 17127  00364A  501F               	movf	___lwmod@divisor,w,c
 17128  00364C  5E1D               	subwf	___lwmod@dividend,f,c
 17129  00364E  5020               	movf	___lwmod@divisor+1,w,c
 17130  003650  5A1E               	subwfb	___lwmod@dividend+1,f,c
 17131  003652                     l11517:
 17132                           
 17133                           ; BSR set to: 0
 17134  003652  90D8               	bcf	status,0,c
 17135  003654  3220               	rrcf	___lwmod@divisor+1,f,c
 17136  003656  321F               	rrcf	___lwmod@divisor,f,c
 17137                           
 17138                           ; BSR set to: 0
 17139  003658  2E21               	decfsz	___lwmod@counter,f,c
 17140  00365A  D7F2               	goto	l11513
 17141  00365C                     l1900:
 17142                           
 17143                           ; BSR set to: 0
 17144  00365C  C01D  F01D         	movff	___lwmod@dividend,?___lwmod
 17145  003660  C01E  F01E         	movff	___lwmod@dividend+1,?___lwmod+1
 17146                           
 17147                           ; BSR set to: 0
 17148  003664  0012               	return		;funcret
 17149  003666                     __end_of___lwmod:
 17150                           	opt stack 0
 17151                           tblptru	equ	0xFF8
 17152                           tblptrh	equ	0xFF7
 17153                           tblptrl	equ	0xFF6
 17154                           tablat	equ	0xFF5
 17155                           prodh	equ	0xFF4
 17156                           prodl	equ	0xFF3
 17157                           intcon	equ	0xFF2
 17158                           intcon2	equ	0xFF1
 17159                           postinc0	equ	0xFEE
 17160                           plusw0	equ	0xFEB
 17161                           wreg	equ	0xFE8
 17162                           indf1	equ	0xFE7
 17163                           postinc1	equ	0xFE6
 17164                           postdec1	equ	0xFE5
 17165                           fsr1h	equ	0xFE2
 17166                           fsr1l	equ	0xFE1
 17167                           indf2	equ	0xFDF
 17168                           postinc2	equ	0xFDE
 17169                           postdec2	equ	0xFDD
 17170                           plusw2	equ	0xFDB
 17171                           fsr2h	equ	0xFDA
 17172                           fsr2l	equ	0xFD9
 17173                           status	equ	0xFD8
 17174                           
 17175 ;; *************** function ___lwdiv *****************
 17176 ;; Defined at:
 17177 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 17178 ;; Parameters:    Size  Location     Type
 17179 ;;  dividend        2   21[COMRAM] unsigned int 
 17180 ;;  divisor         2   23[COMRAM] unsigned int 
 17181 ;; Auto vars:     Size  Location     Type
 17182 ;;  quotient        2   26[COMRAM] unsigned int 
 17183 ;;  counter         1   25[COMRAM] unsigned char 
 17184 ;; Return value:  Size  Location     Type
 17185 ;;                  2   21[COMRAM] unsigned int 
 17186 ;; Registers used:
 17187 ;;		wreg, status,2, status,0
 17188 ;; Tracked objects:
 17189 ;;		On entry : F/0
 17190 ;;		On exit  : F/0
 17191 ;;		Unchanged: F/0
 17192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17193 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17194 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17196 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17197 ;;Total ram usage:        7 bytes
 17198 ;; Hardware stack levels used:    1
 17199 ;; Hardware stack levels required when called:    3
 17200 ;; This function calls:
 17201 ;;		Nothing
 17202 ;; This function is called by:
 17203 ;;		_sprintf
 17204 ;; This function uses a non-reentrant model
 17205 ;;
 17206                           
 17207                           	psect	text71
 17208  0034A6                     __ptext71:
 17209                           	opt stack 0
 17210  0034A6                     ___lwdiv:
 17211                           	opt stack 24
 17212                           
 17213                           ; BSR set to: 0
 17214                           
 17215                           ; BSR set to: 0
 17216                           ;incstack = 0
 17217  0034A6  6A1B               	clrf	___lwdiv@quotient,c
 17218  0034A8  6A1C               	clrf	___lwdiv@quotient+1,c
 17219                           
 17220                           ; BSR set to: 0
 17221  0034AA  5018               	movf	___lwdiv@divisor,w,c
 17222  0034AC  1019               	iorwf	___lwdiv@divisor+1,w,c
 17223  0034AE  E01B               	bz	l1890
 17224                           
 17225                           ; BSR set to: 0
 17226  0034B0  0E01               	movlw	1
 17227  0034B2  6E1A               	movwf	___lwdiv@counter,c
 17228  0034B4  D004               	goto	l11491
 17229  0034B6                     l11489:
 17230                           
 17231                           ; BSR set to: 0
 17232  0034B6  90D8               	bcf	status,0,c
 17233  0034B8  3618               	rlcf	___lwdiv@divisor,f,c
 17234  0034BA  3619               	rlcf	___lwdiv@divisor+1,f,c
 17235  0034BC  2A1A               	incf	___lwdiv@counter,f,c
 17236  0034BE                     l11491:
 17237                           
 17238                           ; BSR set to: 0
 17239  0034BE  AE19               	btfss	___lwdiv@divisor+1,7,c
 17240  0034C0  D7FA               	goto	l11489
 17241  0034C2                     l11493:
 17242                           
 17243                           ; BSR set to: 0
 17244  0034C2  90D8               	bcf	status,0,c
 17245  0034C4  361B               	rlcf	___lwdiv@quotient,f,c
 17246  0034C6  361C               	rlcf	___lwdiv@quotient+1,f,c
 17247                           
 17248                           ; BSR set to: 0
 17249  0034C8  5018               	movf	___lwdiv@divisor,w,c
 17250  0034CA  5C16               	subwf	___lwdiv@dividend,w,c
 17251  0034CC  5019               	movf	___lwdiv@divisor+1,w,c
 17252  0034CE  5817               	subwfb	___lwdiv@dividend+1,w,c
 17253  0034D0  E305               	bnc	l11501
 17254                           
 17255                           ; BSR set to: 0
 17256  0034D2  5018               	movf	___lwdiv@divisor,w,c
 17257  0034D4  5E16               	subwf	___lwdiv@dividend,f,c
 17258  0034D6  5019               	movf	___lwdiv@divisor+1,w,c
 17259  0034D8  5A17               	subwfb	___lwdiv@dividend+1,f,c
 17260                           
 17261                           ; BSR set to: 0
 17262  0034DA  801B               	bsf	___lwdiv@quotient,0,c
 17263  0034DC                     l11501:
 17264                           
 17265                           ; BSR set to: 0
 17266  0034DC  90D8               	bcf	status,0,c
 17267  0034DE  3219               	rrcf	___lwdiv@divisor+1,f,c
 17268  0034E0  3218               	rrcf	___lwdiv@divisor,f,c
 17269                           
 17270                           ; BSR set to: 0
 17271  0034E2  2E1A               	decfsz	___lwdiv@counter,f,c
 17272  0034E4  D7EE               	goto	l11493
 17273  0034E6                     l1890:
 17274                           
 17275                           ; BSR set to: 0
 17276  0034E6  C01B  F016         	movff	___lwdiv@quotient,?___lwdiv
 17277  0034EA  C01C  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17278                           
 17279                           ; BSR set to: 0
 17280  0034EE  0012               	return		;funcret
 17281  0034F0                     __end_of___lwdiv:
 17282                           	opt stack 0
 17283                           tblptru	equ	0xFF8
 17284                           tblptrh	equ	0xFF7
 17285                           tblptrl	equ	0xFF6
 17286                           tablat	equ	0xFF5
 17287                           prodh	equ	0xFF4
 17288                           prodl	equ	0xFF3
 17289                           intcon	equ	0xFF2
 17290                           intcon2	equ	0xFF1
 17291                           postinc0	equ	0xFEE
 17292                           plusw0	equ	0xFEB
 17293                           wreg	equ	0xFE8
 17294                           indf1	equ	0xFE7
 17295                           postinc1	equ	0xFE6
 17296                           postdec1	equ	0xFE5
 17297                           fsr1h	equ	0xFE2
 17298                           fsr1l	equ	0xFE1
 17299                           indf2	equ	0xFDF
 17300                           postinc2	equ	0xFDE
 17301                           postdec2	equ	0xFDD
 17302                           plusw2	equ	0xFDB
 17303                           fsr2h	equ	0xFDA
 17304                           fsr2l	equ	0xFD9
 17305                           status	equ	0xFD8
 17306                           
 17307 ;; *************** function _LCD_Update *****************
 17308 ;; Defined at:
 17309 ;;		line 132 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 17310 ;; Parameters:    Size  Location     Type
 17311 ;;		None
 17312 ;; Auto vars:     Size  Location     Type
 17313 ;;  i               1   23[COMRAM] unsigned char 
 17314 ;; Return value:  Size  Location     Type
 17315 ;;		None               void
 17316 ;; Registers used:
 17317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17318 ;; Tracked objects:
 17319 ;;		On entry : F/0
 17320 ;;		On exit  : 0/0
 17321 ;;		Unchanged: 0/0
 17322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17326 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17327 ;;Total ram usage:        1 bytes
 17328 ;; Hardware stack levels used:    1
 17329 ;; Hardware stack levels required when called:    5
 17330 ;; This function calls:
 17331 ;;		_LCD_WriteCmd
 17332 ;;		_LCD_WriteData
 17333 ;; This function is called by:
 17334 ;;		_LCDTRXCount
 17335 ;;		_LCDDisplay
 17336 ;;		_Source_END_DEVICE_INFO
 17337 ;;		_run_star_demo
 17338 ;; This function uses a non-reentrant model
 17339 ;;
 17340                           
 17341                           	psect	text72
 17342  00300C                     __ptext72:
 17343                           	opt stack 0
 17344  00300C                     _LCD_Update:
 17345                           	opt stack 23
 17346                           
 17347                           ; BSR set to: 0
 17348                           ;lcd.c: 134: uint8_t i;
 17349                           ;lcd.c: 136: LCD_WriteCmd(0x80 | 0x00);
 17350                           
 17351                           ; BSR set to: 0
 17352                           ;incstack = 0
 17353  00300C  0E80               	movlw	128
 17354  00300E  EC41  F01D         	call	_LCD_WriteCmd
 17355                           
 17356                           ;lcd.c: 138: for(i = 0; i < 16; i++)
 17357  003012  6A18               	clrf	LCD_Update@i,c
 17358  003014                     l11901:
 17359                           
 17360                           ;lcd.c: 139: {
 17361                           ;lcd.c: 140: if( LCDText[i] == 0 )
 17362  003014  0EBE               	movlw	low _LCDText
 17363  003016  2418               	addwf	LCD_Update@i,w,c
 17364  003018  6ED9               	movwf	fsr2l,c
 17365  00301A  6ADA               	clrf	fsr2h,c
 17366  00301C  0E01               	movlw	high _LCDText
 17367  00301E  22DA               	addwfc	fsr2h,f,c
 17368  003020  50DF               	movf	indf2,w,c
 17369  003022  E104               	bnz	l11905
 17370                           
 17371                           ;lcd.c: 141: {
 17372                           ;lcd.c: 142: LCD_WriteData(' ');
 17373  003024  0E20               	movlw	32
 17374  003026  EC39  F01D         	call	_LCD_WriteData
 17375                           
 17376                           ;lcd.c: 143: }
 17377  00302A  D009               	goto	l11907
 17378  00302C                     l11905:
 17379                           
 17380                           ;lcd.c: 144: else
 17381                           ;lcd.c: 145: {
 17382                           ;lcd.c: 146: LCD_WriteData(LCDText[i]);
 17383  00302C  0EBE               	movlw	low _LCDText
 17384  00302E  2418               	addwf	LCD_Update@i,w,c
 17385  003030  6ED9               	movwf	fsr2l,c
 17386  003032  6ADA               	clrf	fsr2h,c
 17387  003034  0E01               	movlw	high _LCDText
 17388  003036  22DA               	addwfc	fsr2h,f,c
 17389  003038  50DF               	movf	indf2,w,c
 17390  00303A  EC39  F01D         	call	_LCD_WriteData
 17391  00303E                     l11907:
 17392  00303E  2A18               	incf	LCD_Update@i,f,c
 17393  003040  0E0F               	movlw	15
 17394  003042  6418               	cpfsgt	LCD_Update@i,c
 17395  003044  D7E7               	goto	l11901
 17396                           
 17397                           ;lcd.c: 147: }
 17398                           ;lcd.c: 148: }
 17399                           ;lcd.c: 150: LCD_WriteCmd(0x80 | 0x40);
 17400  003046  0EC0               	movlw	192
 17401  003048  EC41  F01D         	call	_LCD_WriteCmd
 17402                           
 17403                           ;lcd.c: 152: for(i = 16; i < 32; i++)
 17404  00304C  0E10               	movlw	16
 17405  00304E  6E18               	movwf	LCD_Update@i,c
 17406  003050                     l11919:
 17407                           
 17408                           ;lcd.c: 153: {
 17409                           ;lcd.c: 154: if( LCDText[i] == 0 )
 17410  003050  0EBE               	movlw	low _LCDText
 17411  003052  2418               	addwf	LCD_Update@i,w,c
 17412  003054  6ED9               	movwf	fsr2l,c
 17413  003056  6ADA               	clrf	fsr2h,c
 17414  003058  0E01               	movlw	high _LCDText
 17415  00305A  22DA               	addwfc	fsr2h,f,c
 17416  00305C  50DF               	movf	indf2,w,c
 17417  00305E  E104               	bnz	l11923
 17418                           
 17419                           ;lcd.c: 155: {
 17420                           ;lcd.c: 156: LCD_WriteData(' ');
 17421  003060  0E20               	movlw	32
 17422  003062  EC39  F01D         	call	_LCD_WriteData
 17423                           
 17424                           ;lcd.c: 157: }
 17425  003066  D009               	goto	l11925
 17426  003068                     l11923:
 17427                           
 17428                           ;lcd.c: 158: else
 17429                           ;lcd.c: 159: {
 17430                           ;lcd.c: 160: LCD_WriteData(LCDText[i]);
 17431  003068  0EBE               	movlw	low _LCDText
 17432  00306A  2418               	addwf	LCD_Update@i,w,c
 17433  00306C  6ED9               	movwf	fsr2l,c
 17434  00306E  6ADA               	clrf	fsr2h,c
 17435  003070  0E01               	movlw	high _LCDText
 17436  003072  22DA               	addwfc	fsr2h,f,c
 17437  003074  50DF               	movf	indf2,w,c
 17438  003076  EC39  F01D         	call	_LCD_WriteData
 17439  00307A                     l11925:
 17440  00307A  2A18               	incf	LCD_Update@i,f,c
 17441  00307C  0E1F               	movlw	31
 17442  00307E  6418               	cpfsgt	LCD_Update@i,c
 17443  003080  D7E7               	goto	l11919
 17444  003082  0C1F               	retlw	31
 17445  003084                     __end_of_LCD_Update:
 17446                           	opt stack 0
 17447                           tblptru	equ	0xFF8
 17448                           tblptrh	equ	0xFF7
 17449                           tblptrl	equ	0xFF6
 17450                           tablat	equ	0xFF5
 17451                           prodh	equ	0xFF4
 17452                           prodl	equ	0xFF3
 17453                           intcon	equ	0xFF2
 17454                           intcon2	equ	0xFF1
 17455                           postinc0	equ	0xFEE
 17456                           plusw0	equ	0xFEB
 17457                           wreg	equ	0xFE8
 17458                           indf1	equ	0xFE7
 17459                           postinc1	equ	0xFE6
 17460                           postdec1	equ	0xFE5
 17461                           fsr1h	equ	0xFE2
 17462                           fsr1l	equ	0xFE1
 17463                           indf2	equ	0xFDF
 17464                           postinc2	equ	0xFDE
 17465                           postdec2	equ	0xFDD
 17466                           plusw2	equ	0xFDB
 17467                           fsr2h	equ	0xFDA
 17468                           fsr2l	equ	0xFD9
 17469                           status	equ	0xFD8
 17470                           
 17471 ;; *************** function _LCD_WriteData *****************
 17472 ;; Defined at:
 17473 ;;		line 43 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 17474 ;; Parameters:    Size  Location     Type
 17475 ;;  data            1    wreg     unsigned char 
 17476 ;; Auto vars:     Size  Location     Type
 17477 ;;  data            1   22[COMRAM] unsigned char 
 17478 ;; Return value:  Size  Location     Type
 17479 ;;		None               void
 17480 ;; Registers used:
 17481 ;;		wreg, status,2, cstack
 17482 ;; Tracked objects:
 17483 ;;		On entry : 0/0
 17484 ;;		On exit  : 0/0
 17485 ;;		Unchanged: 0/0
 17486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17490 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17491 ;;Total ram usage:        1 bytes
 17492 ;; Hardware stack levels used:    1
 17493 ;; Hardware stack levels required when called:    4
 17494 ;; This function calls:
 17495 ;;		_SPIPut2
 17496 ;; This function is called by:
 17497 ;;		_LCD_Update
 17498 ;; This function uses a non-reentrant model
 17499 ;;
 17500                           
 17501                           	psect	text73
 17502  003A72                     __ptext73:
 17503                           	opt stack 0
 17504  003A72                     _LCD_WriteData:
 17505                           	opt stack 23
 17506                           
 17507                           ;incstack = 0
 17508                           ;LCD_WriteData@data stored from wreg
 17509  003A72  6E17               	movwf	LCD_WriteData@data,c
 17510                           
 17511                           ;lcd.c: 45: LATDbits.LATD7 = 0;
 17512  003A74  9E8C               	bcf	3980,7,c	;volatile
 17513                           
 17514                           ;lcd.c: 46: LATDbits.LATD3 = 1;
 17515  003A76  868C               	bsf	3980,3,c	;volatile
 17516                           
 17517                           ;lcd.c: 48: SPIPut2(data);
 17518  003A78  5017               	movf	LCD_WriteData@data,w,c
 17519  003A7A  EC1D  F01D         	call	_SPIPut2
 17520                           
 17521                           ;lcd.c: 50: LATDbits.LATD7 = 1;
 17522  003A7E  8E8C               	bsf	3980,7,c	;volatile
 17523  003A80  0012               	return		;funcret
 17524  003A82                     __end_of_LCD_WriteData:
 17525                           	opt stack 0
 17526                           tblptru	equ	0xFF8
 17527                           tblptrh	equ	0xFF7
 17528                           tblptrl	equ	0xFF6
 17529                           tablat	equ	0xFF5
 17530                           prodh	equ	0xFF4
 17531                           prodl	equ	0xFF3
 17532                           intcon	equ	0xFF2
 17533                           intcon2	equ	0xFF1
 17534                           postinc0	equ	0xFEE
 17535                           plusw0	equ	0xFEB
 17536                           wreg	equ	0xFE8
 17537                           indf1	equ	0xFE7
 17538                           postinc1	equ	0xFE6
 17539                           postdec1	equ	0xFE5
 17540                           fsr1h	equ	0xFE2
 17541                           fsr1l	equ	0xFE1
 17542                           indf2	equ	0xFDF
 17543                           postinc2	equ	0xFDE
 17544                           postdec2	equ	0xFDD
 17545                           plusw2	equ	0xFDB
 17546                           fsr2h	equ	0xFDA
 17547                           fsr2l	equ	0xFD9
 17548                           status	equ	0xFD8
 17549                           
 17550 ;; *************** function _LCD_Erase *****************
 17551 ;; Defined at:
 17552 ;;		line 101 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 17553 ;; Parameters:    Size  Location     Type
 17554 ;;		None
 17555 ;; Auto vars:     Size  Location     Type
 17556 ;;		None
 17557 ;; Return value:  Size  Location     Type
 17558 ;;		None               void
 17559 ;; Registers used:
 17560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17561 ;; Tracked objects:
 17562 ;;		On entry : 0/1
 17563 ;;		On exit  : 0/0
 17564 ;;		Unchanged: 0/0
 17565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17570 ;;Total ram usage:        0 bytes
 17571 ;; Hardware stack levels used:    1
 17572 ;; Hardware stack levels required when called:    5
 17573 ;; This function calls:
 17574 ;;		_DELAY_ms
 17575 ;;		_LCD_WriteCmd
 17576 ;;		_memset
 17577 ;; This function is called by:
 17578 ;;		_LCDTRXCount
 17579 ;;		_LCDDisplay
 17580 ;;		_Source_END_DEVICE_INFO
 17581 ;;		_run_star_demo
 17582 ;; This function uses a non-reentrant model
 17583 ;;
 17584                           
 17585                           	psect	text74
 17586  00392C                     __ptext74:
 17587                           	opt stack 0
 17588  00392C                     _LCD_Erase:
 17589                           	opt stack 23
 17590                           
 17591                           ;lcd.c: 104: LCD_WriteCmd(0x01);;
 17592                           
 17593                           ;incstack = 0
 17594  00392C  0E01               	movlw	1
 17595  00392E  EC41  F01D         	call	_LCD_WriteCmd
 17596                           
 17597                           ;lcd.c: 105: DELAY_ms(2);
 17598  003932  6A17               	clrf	DELAY_ms@ms+1,c
 17599  003934  0E02               	movlw	2
 17600  003936  6E16               	movwf	DELAY_ms@ms,c
 17601  003938  ECD5  F013         	call	_DELAY_ms	;wreg free
 17602                           
 17603                           ;lcd.c: 108: memset(LCDText, ' ', 32);
 17604  00393C  0EBE               	movlw	low _LCDText
 17605  00393E  6E16               	movwf	memset@p1,c
 17606  003940  0E01               	movlw	high _LCDText
 17607  003942  6E17               	movwf	memset@p1+1,c
 17608  003944  6A19               	clrf	memset@c+1,c
 17609  003946  0E20               	movlw	32
 17610  003948  6E18               	movwf	memset@c,c
 17611  00394A  6A1B               	clrf	memset@n+1,c
 17612  00394C  6E1A               	movwf	memset@n,c
 17613  00394E  EF0B  F01C         	goto	_memset	;wreg free
 17614  003952                     __end_of_LCD_Erase:
 17615                           	opt stack 0
 17616                           tblptru	equ	0xFF8
 17617                           tblptrh	equ	0xFF7
 17618                           tblptrl	equ	0xFF6
 17619                           tablat	equ	0xFF5
 17620                           prodh	equ	0xFF4
 17621                           prodl	equ	0xFF3
 17622                           intcon	equ	0xFF2
 17623                           intcon2	equ	0xFF1
 17624                           postinc0	equ	0xFEE
 17625                           plusw0	equ	0xFEB
 17626                           wreg	equ	0xFE8
 17627                           indf1	equ	0xFE7
 17628                           postinc1	equ	0xFE6
 17629                           postdec1	equ	0xFE5
 17630                           fsr1h	equ	0xFE2
 17631                           fsr1l	equ	0xFE1
 17632                           indf2	equ	0xFDF
 17633                           postinc2	equ	0xFDE
 17634                           postdec2	equ	0xFDD
 17635                           plusw2	equ	0xFDB
 17636                           fsr2h	equ	0xFDA
 17637                           fsr2l	equ	0xFD9
 17638                           status	equ	0xFD8
 17639                           
 17640 ;; *************** function _memset *****************
 17641 ;; Defined at:
 17642 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 17643 ;; Parameters:    Size  Location     Type
 17644 ;;  p1              2   21[COMRAM] PTR void 
 17645 ;;		 -> LCDText(33), 
 17646 ;;  c               2   23[COMRAM] int 
 17647 ;;  n               2   25[COMRAM] unsigned int 
 17648 ;; Auto vars:     Size  Location     Type
 17649 ;;  p               2   27[COMRAM] PTR unsigned char 
 17650 ;;		 -> LCDText(33), 
 17651 ;; Return value:  Size  Location     Type
 17652 ;;                  2   21[COMRAM] PTR void 
 17653 ;; Registers used:
 17654 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17655 ;; Tracked objects:
 17656 ;;		On entry : 0/1
 17657 ;;		On exit  : 0/0
 17658 ;;		Unchanged: 0/0
 17659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17660 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17663 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17664 ;;Total ram usage:        8 bytes
 17665 ;; Hardware stack levels used:    1
 17666 ;; Hardware stack levels required when called:    3
 17667 ;; This function calls:
 17668 ;;		Nothing
 17669 ;; This function is called by:
 17670 ;;		_LCD_Erase
 17671 ;; This function uses a non-reentrant model
 17672 ;;
 17673                           
 17674                           	psect	text75
 17675  003816                     __ptext75:
 17676                           	opt stack 0
 17677  003816                     _memset:
 17678                           	opt stack 24
 17679                           
 17680                           ;incstack = 0
 17681  003816  C016  F01C         	movff	memset@p1,memset@p
 17682  00381A  C017  F01D         	movff	memset@p1+1,memset@p+1
 17683  00381E  D008               	goto	l11463
 17684  003820                     l11459:
 17685  003820  C01C  FFD9         	movff	memset@p,fsr2l
 17686  003824  C01D  FFDA         	movff	memset@p+1,fsr2h
 17687  003828  C018  FFDF         	movff	memset@c,indf2
 17688  00382C  4A1C               	infsnz	memset@p,f,c
 17689  00382E  2A1D               	incf	memset@p+1,f,c
 17690  003830                     l11463:
 17691  003830  061A               	decf	memset@n,f,c
 17692  003832  A0D8               	btfss	status,0,c
 17693  003834  061B               	decf	memset@n+1,f,c
 17694  003836  281A               	incf	memset@n,w,c
 17695  003838  E1F3               	bnz	l11459
 17696  00383A  281B               	incf	memset@n+1,w,c
 17697  00383C  E1F1               	bnz	l11459
 17698  00383E  0012               	return		;funcret
 17699  003840                     __end_of_memset:
 17700                           	opt stack 0
 17701                           tblptru	equ	0xFF8
 17702                           tblptrh	equ	0xFF7
 17703                           tblptrl	equ	0xFF6
 17704                           tablat	equ	0xFF5
 17705                           prodh	equ	0xFF4
 17706                           prodl	equ	0xFF3
 17707                           intcon	equ	0xFF2
 17708                           intcon2	equ	0xFF1
 17709                           postinc0	equ	0xFEE
 17710                           plusw0	equ	0xFEB
 17711                           wreg	equ	0xFE8
 17712                           indf1	equ	0xFE7
 17713                           postinc1	equ	0xFE6
 17714                           postdec1	equ	0xFE5
 17715                           fsr1h	equ	0xFE2
 17716                           fsr1l	equ	0xFE1
 17717                           indf2	equ	0xFDF
 17718                           postinc2	equ	0xFDE
 17719                           postdec2	equ	0xFDD
 17720                           plusw2	equ	0xFDB
 17721                           fsr2h	equ	0xFDA
 17722                           fsr2l	equ	0xFD9
 17723                           status	equ	0xFD8
 17724                           
 17725 ;; *************** function _LCD_WriteCmd *****************
 17726 ;; Defined at:
 17727 ;;		line 32 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 17728 ;; Parameters:    Size  Location     Type
 17729 ;;  data            1    wreg     unsigned char 
 17730 ;; Auto vars:     Size  Location     Type
 17731 ;;  data            1   22[COMRAM] unsigned char 
 17732 ;; Return value:  Size  Location     Type
 17733 ;;		None               void
 17734 ;; Registers used:
 17735 ;;		wreg, status,2, cstack
 17736 ;; Tracked objects:
 17737 ;;		On entry : 0/F
 17738 ;;		On exit  : 0/0
 17739 ;;		Unchanged: 0/0
 17740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17745 ;;Total ram usage:        1 bytes
 17746 ;; Hardware stack levels used:    1
 17747 ;; Hardware stack levels required when called:    4
 17748 ;; This function calls:
 17749 ;;		_SPIPut2
 17750 ;; This function is called by:
 17751 ;;		_LCD_Initialize
 17752 ;;		_LCD_Erase
 17753 ;;		_LCD_Update
 17754 ;; This function uses a non-reentrant model
 17755 ;;
 17756                           
 17757                           	psect	text76
 17758  003A82                     __ptext76:
 17759                           	opt stack 0
 17760  003A82                     _LCD_WriteCmd:
 17761                           	opt stack 23
 17762                           
 17763                           ;incstack = 0
 17764                           ;LCD_WriteCmd@data stored from wreg
 17765  003A82  6E17               	movwf	LCD_WriteCmd@data,c
 17766                           
 17767                           ;lcd.c: 34: LATDbits.LATD7 = 0;
 17768  003A84  9E8C               	bcf	3980,7,c	;volatile
 17769                           
 17770                           ;lcd.c: 35: LATDbits.LATD3 = 0;
 17771  003A86  968C               	bcf	3980,3,c	;volatile
 17772                           
 17773                           ;lcd.c: 37: SPIPut2(data);
 17774  003A88  5017               	movf	LCD_WriteCmd@data,w,c
 17775  003A8A  EC1D  F01D         	call	_SPIPut2
 17776                           
 17777                           ;lcd.c: 39: LATDbits.LATD7 = 1;
 17778  003A8E  8E8C               	bsf	3980,7,c	;volatile
 17779  003A90  0012               	return		;funcret
 17780  003A92                     __end_of_LCD_WriteCmd:
 17781                           	opt stack 0
 17782                           tblptru	equ	0xFF8
 17783                           tblptrh	equ	0xFF7
 17784                           tblptrl	equ	0xFF6
 17785                           tablat	equ	0xFF5
 17786                           prodh	equ	0xFF4
 17787                           prodl	equ	0xFF3
 17788                           intcon	equ	0xFF2
 17789                           intcon2	equ	0xFF1
 17790                           postinc0	equ	0xFEE
 17791                           plusw0	equ	0xFEB
 17792                           wreg	equ	0xFE8
 17793                           indf1	equ	0xFE7
 17794                           postinc1	equ	0xFE6
 17795                           postdec1	equ	0xFE5
 17796                           fsr1h	equ	0xFE2
 17797                           fsr1l	equ	0xFE1
 17798                           indf2	equ	0xFDF
 17799                           postinc2	equ	0xFDE
 17800                           postdec2	equ	0xFDD
 17801                           plusw2	equ	0xFDB
 17802                           fsr2h	equ	0xFDA
 17803                           fsr2l	equ	0xFD9
 17804                           status	equ	0xFD8
 17805                           
 17806 ;; *************** function _SPIPut2 *****************
 17807 ;; Defined at:
 17808 ;;		line 80 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 17809 ;; Parameters:    Size  Location     Type
 17810 ;;  v               1    wreg     unsigned char 
 17811 ;; Auto vars:     Size  Location     Type
 17812 ;;  v               1   21[COMRAM] unsigned char 
 17813 ;;  i               1    0        unsigned char 
 17814 ;; Return value:  Size  Location     Type
 17815 ;;		None               void
 17816 ;; Registers used:
 17817 ;;		wreg
 17818 ;; Tracked objects:
 17819 ;;		On entry : 0/0
 17820 ;;		On exit  : 0/0
 17821 ;;		Unchanged: 0/0
 17822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17827 ;;Total ram usage:        1 bytes
 17828 ;; Hardware stack levels used:    1
 17829 ;; Hardware stack levels required when called:    3
 17830 ;; This function calls:
 17831 ;;		Nothing
 17832 ;; This function is called by:
 17833 ;;		_EEPROM_Read
 17834 ;;		_EEPROM_Write
 17835 ;;		_SPIGet2
 17836 ;;		_LCD_WriteCmd
 17837 ;;		_LCD_WriteData
 17838 ;; This function uses a non-reentrant model
 17839 ;;
 17840                           
 17841                           	psect	text77
 17842  003A3A                     __ptext77:
 17843                           	opt stack 0
 17844  003A3A                     _SPIPut2:
 17845                           	opt stack 23
 17846                           
 17847                           ;incstack = 0
 17848                           ;SPIPut2@v stored from wreg
 17849  003A3A  6E16               	movwf	SPIPut2@v,c
 17850                           
 17851                           ;spi.c: 82: uint8_t i;
 17852                           ;spi.c: 88: PIR3bits.SSP2IF = 0;
 17853  003A3C  9EA4               	bcf	4004,7,c	;volatile
 17854  003A3E                     l804:
 17855                           
 17856                           ;spi.c: 90: {
 17857                           ;spi.c: 92: SSP2CON1bits.WCOL = 0;
 17858  003A3E  9E72               	bcf	3954,7,c	;volatile
 17859                           
 17860                           ;spi.c: 95: SSP2BUF = v;
 17861  003A40  C016  FF75         	movff	SPIPut2@v,3957	;volatile
 17862                           
 17863                           ;spi.c: 98: } while( SSP2CON1bits.WCOL );
 17864  003A44  BE72               	btfsc	3954,7,c	;volatile
 17865  003A46  D7FB               	goto	l804
 17866  003A48                     l806:
 17867  003A48  AEA4               	btfss	4004,7,c	;volatile
 17868  003A4A  D7FE               	goto	l806
 17869                           
 17870                           ;spi.c: 106: PIR3bits.SSP2IF = 0;
 17871  003A4C  9EA4               	bcf	4004,7,c	;volatile
 17872  003A4E  0012               	return		;funcret
 17873  003A50                     __end_of_SPIPut2:
 17874                           	opt stack 0
 17875                           tblptru	equ	0xFF8
 17876                           tblptrh	equ	0xFF7
 17877                           tblptrl	equ	0xFF6
 17878                           tablat	equ	0xFF5
 17879                           prodh	equ	0xFF4
 17880                           prodl	equ	0xFF3
 17881                           intcon	equ	0xFF2
 17882                           intcon2	equ	0xFF1
 17883                           postinc0	equ	0xFEE
 17884                           plusw0	equ	0xFEB
 17885                           wreg	equ	0xFE8
 17886                           indf1	equ	0xFE7
 17887                           postinc1	equ	0xFE6
 17888                           postdec1	equ	0xFE5
 17889                           fsr1h	equ	0xFE2
 17890                           fsr1l	equ	0xFE1
 17891                           indf2	equ	0xFDF
 17892                           postinc2	equ	0xFDE
 17893                           postdec2	equ	0xFDD
 17894                           plusw2	equ	0xFDB
 17895                           fsr2h	equ	0xFDA
 17896                           fsr2l	equ	0xFD9
 17897                           status	equ	0xFD8
 17898                           
 17899 ;; *************** function _DELAY_ms *****************
 17900 ;; Defined at:
 17901 ;;		line 108 in file "../src/system_config/miwikit_pic18f46j50_24j40/delay.c"
 17902 ;; Parameters:    Size  Location     Type
 17903 ;;  ms              2   21[COMRAM] unsigned int 
 17904 ;; Auto vars:     Size  Location     Type
 17905 ;;  cyclesRequir    4   31[COMRAM] long 
 17906 ;; Return value:  Size  Location     Type
 17907 ;;		None               void
 17908 ;; Registers used:
 17909 ;;		wreg, status,2, status,0, prodl, prodh
 17910 ;; Tracked objects:
 17911 ;;		On entry : 0/F
 17912 ;;		On exit  : 0/0
 17913 ;;		Unchanged: 0/0
 17914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17916 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17917 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17918 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17919 ;;Total ram usage:       14 bytes
 17920 ;; Hardware stack levels used:    1
 17921 ;; Hardware stack levels required when called:    3
 17922 ;; This function calls:
 17923 ;;		Nothing
 17924 ;; This function is called by:
 17925 ;;		_SYSTEM_Initialize
 17926 ;;		_LCD_Initialize
 17927 ;;		_LCD_Erase
 17928 ;;		_LCDDisplay
 17929 ;;		_DemoOutput_Greeting
 17930 ;;		_DemoOutput_Channel
 17931 ;;		_Source_END_DEVICE_INFO
 17932 ;;		_Process_RxMessage
 17933 ;;		_run_star_demo
 17934 ;; This function uses a non-reentrant model
 17935 ;;
 17936                           
 17937                           	psect	text78
 17938  0027AA                     __ptext78:
 17939                           	opt stack 0
 17940  0027AA                     _DELAY_ms:
 17941                           	opt stack 24
 17942                           
 17943                           ;delay.c: 115: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 17944                           
 17945                           ;incstack = 0
 17946  0027AA  5016               	movf	DELAY_ms@ms,w,c
 17947  0027AC  6E18               	movwf	??_DELAY_ms& (0+255),c
 17948  0027AE  5017               	movf	DELAY_ms@ms+1,w,c
 17949  0027B0  6E19               	movwf	(??_DELAY_ms+1)& (0+255),c
 17950  0027B2  6A1A               	clrf	(??_DELAY_ms+2)& (0+255),c
 17951  0027B4  6A1B               	clrf	(??_DELAY_ms+3)& (0+255),c
 17952  0027B6  0EA0               	movlw	160
 17953  0027B8  0218               	mulwf	??_DELAY_ms& (0+255),c
 17954  0027BA  CFF3 F01C          	movff	prodl,??_DELAY_ms+4
 17955  0027BE  CFF4 F01D          	movff	prodh,??_DELAY_ms+5
 17956  0027C2  6A1E               	clrf	(??_DELAY_ms+6)& (0+255),c
 17957  0027C4  6A1F               	clrf	(??_DELAY_ms+7)& (0+255),c
 17958  0027C6  0219               	mulwf	(??_DELAY_ms+1)& (0+255),c
 17959  0027C8  50F3               	movf	prodl,w,c
 17960  0027CA  261D               	addwf	(??_DELAY_ms+5)& (0+255),f,c
 17961  0027CC  50F4               	movf	prodh,w,c
 17962  0027CE  221E               	addwfc	(??_DELAY_ms+6)& (0+255),f,c
 17963  0027D0  0E00               	movlw	0
 17964  0027D2  221F               	addwfc	(??_DELAY_ms+7)& (0+255),f,c
 17965  0027D4  0E0F               	movlw	15
 17966  0027D6  0218               	mulwf	??_DELAY_ms& (0+255),c
 17967  0027D8  50F3               	movf	prodl,w,c
 17968  0027DA  261D               	addwf	(??_DELAY_ms+5)& (0+255),f,c
 17969  0027DC  50F4               	movf	prodh,w,c
 17970  0027DE  221E               	addwfc	(??_DELAY_ms+6)& (0+255),f,c
 17971  0027E0  0E00               	movlw	0
 17972  0027E2  221F               	addwfc	(??_DELAY_ms+7)& (0+255),f,c
 17973  0027E4  0EA0               	movlw	160
 17974  0027E6  021A               	mulwf	(??_DELAY_ms+2)& (0+255),c
 17975  0027E8  50F3               	movf	prodl,w,c
 17976  0027EA  261E               	addwf	(??_DELAY_ms+6)& (0+255),f,c
 17977  0027EC  50F4               	movf	prodh,w,c
 17978  0027EE  221F               	addwfc	(??_DELAY_ms+7)& (0+255),f,c
 17979  0027F0  0E0F               	movlw	15
 17980  0027F2  0219               	mulwf	(??_DELAY_ms+1)& (0+255),c
 17981  0027F4  50F3               	movf	prodl,w,c
 17982  0027F6  261E               	addwf	(??_DELAY_ms+6)& (0+255),f,c
 17983  0027F8  50F4               	movf	prodh,w,c
 17984  0027FA  221F               	addwfc	(??_DELAY_ms+7)& (0+255),f,c
 17985  0027FC  0E00               	movlw	0
 17986  0027FE  0218               	mulwf	??_DELAY_ms& (0+255),c
 17987  002800  50F3               	movf	prodl,w,c
 17988  002802  261E               	addwf	(??_DELAY_ms+6)& (0+255),f,c
 17989  002804  50F4               	movf	prodh,w,c
 17990  002806  221F               	addwfc	(??_DELAY_ms+7)& (0+255),f,c
 17991  002808  0EA0               	movlw	160
 17992  00280A  021B               	mulwf	(??_DELAY_ms+3)& (0+255),c
 17993  00280C  50F3               	movf	prodl,w,c
 17994  00280E  261F               	addwf	(??_DELAY_ms+7)& (0+255),f,c
 17995  002810  0E0F               	movlw	15
 17996  002812  021A               	mulwf	(??_DELAY_ms+2)& (0+255),c
 17997  002814  50F3               	movf	prodl,w,c
 17998  002816  261F               	addwf	(??_DELAY_ms+7)& (0+255),f,c
 17999  002818  0E00               	movlw	0
 18000  00281A  0219               	mulwf	(??_DELAY_ms+1)& (0+255),c
 18001  00281C  50F3               	movf	prodl,w,c
 18002  00281E  261F               	addwf	(??_DELAY_ms+7)& (0+255),f,c
 18003  002820  0E00               	movlw	0
 18004  002822  0218               	mulwf	??_DELAY_ms& (0+255),c
 18005  002824  50F3               	movf	prodl,w,c
 18006  002826  261F               	addwf	(??_DELAY_ms+7)& (0+255),f,c
 18007  002828  C01C  F020         	movff	??_DELAY_ms+4,DELAY_ms@cyclesRequiredForEntireDelay
 18008  00282C  C01D  F021         	movff	??_DELAY_ms+5,DELAY_ms@cyclesRequiredForEntireDelay+1
 18009  002830  C01E  F022         	movff	??_DELAY_ms+6,DELAY_ms@cyclesRequiredForEntireDelay+2
 18010  002834  C01F  F023         	movff	??_DELAY_ms+7,DELAY_ms@cyclesRequiredForEntireDelay+3
 18011                           
 18012                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 18013  002838  0E56               	movlw	86
 18014  00283A  2620               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
 18015  00283C  0EFF               	movlw	255
 18016  00283E  2221               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 18017  002840  2222               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 18018  002842  2223               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 18019                           
 18020                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 18021  002844  BE23               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 18022  002846  0CFF               	retlw	255
 18023  002848  5023               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 18024  00284A  1022               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 18025  00284C  1021               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 18026  00284E  E10B               	bnz	l722
 18027  002850  0EC4               	movlw	196
 18028  002852  5C20               	subwf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
 18029  002854  E208               	bc	l722
 18030  002856  0012               	return	
 18031  002858                     l723:
 18032                           
 18033                           ;delay.c: 128: {
 18034                           ;delay.c: 129: __nop();
 18035  002858  F000               	nop	
 18036                           
 18037                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 18038  00285A  0ED9               	movlw	217
 18039  00285C  2620               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
 18040  00285E  0EFF               	movlw	255
 18041  002860  2221               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 18042  002862  2222               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 18043  002864  2223               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 18044  002866                     l722:
 18045  002866  BE23               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 18046  002868  0012               	return	
 18047  00286A  5023               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 18048  00286C  1022               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 18049  00286E  1021               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 18050  002870  E1F3               	bnz	l723
 18051  002872  0420               	decf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
 18052  002874  E2F1               	bc	l723
 18053  002876  0012               	return		;funcret
 18054  002878                     __end_of_DELAY_ms:
 18055                           	opt stack 0
 18056                           tblptru	equ	0xFF8
 18057                           tblptrh	equ	0xFF7
 18058                           tblptrl	equ	0xFF6
 18059                           tablat	equ	0xFF5
 18060                           prodh	equ	0xFF4
 18061                           prodl	equ	0xFF3
 18062                           intcon	equ	0xFF2
 18063                           intcon2	equ	0xFF1
 18064                           postinc0	equ	0xFEE
 18065                           plusw0	equ	0xFEB
 18066                           wreg	equ	0xFE8
 18067                           indf1	equ	0xFE7
 18068                           postinc1	equ	0xFE6
 18069                           postdec1	equ	0xFE5
 18070                           fsr1h	equ	0xFE2
 18071                           fsr1l	equ	0xFE1
 18072                           indf2	equ	0xFDF
 18073                           postinc2	equ	0xFDE
 18074                           postdec2	equ	0xFDD
 18075                           plusw2	equ	0xFDB
 18076                           fsr2h	equ	0xFDA
 18077                           fsr2l	equ	0xFD9
 18078                           status	equ	0xFD8
 18079                           
 18080 ;; *************** function _high_isr *****************
 18081 ;; Defined at:
 18082 ;;		line 1852 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 18083 ;; Parameters:    Size  Location     Type
 18084 ;;		None
 18085 ;; Auto vars:     Size  Location     Type
 18086 ;;  results         1   16[COMRAM] struct _DRIVER_UINT8_UNI
 18087 ;;  RxBank          1   19[COMRAM] unsigned char 
 18088 ;;  flags           2   17[COMRAM] struct .
 18089 ;;  i               1   20[COMRAM] unsigned char 
 18090 ;; Return value:  Size  Location     Type
 18091 ;;		None               void
 18092 ;; Registers used:
 18093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18094 ;; Tracked objects:
 18095 ;;		On entry : 0/0
 18096 ;;		On exit  : 0/0
 18097 ;;		Unchanged: 0/0
 18098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18100 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18101 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18102 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18103 ;;Total ram usage:       14 bytes
 18104 ;; Hardware stack levels used:    1
 18105 ;; Hardware stack levels required when called:    2
 18106 ;; This function calls:
 18107 ;;		_UserInterruptHandler
 18108 ;;		i2_PHYGetLongRAMAddr
 18109 ;;		i2_PHYGetShortRAMAddr
 18110 ;;		i2_PHYSetShortRAMAddr
 18111 ;; This function is called by:
 18112 ;;		Interrupt level 2
 18113 ;; This function uses a non-reentrant model
 18114 ;;
 18115                           
 18116                           	psect	intcode
 18117  000008                     __pintcode:
 18118                           	opt stack 0
 18119  000008                     _high_isr:
 18120                           	opt stack 14
 18121                           
 18122                           ;incstack = 0
 18123  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18124  00000A  CFD9 F00D          	movff	fsr2l,??_high_isr+5
 18125  00000E  CFDA F00E          	movff	fsr2h,??_high_isr+6
 18126  000012  CFF3 F00F          	movff	prodl,??_high_isr+7
 18127  000016  CFF4 F010          	movff	prodh,??_high_isr+8
 18128                           
 18129                           ;drv_mrf_miwi_24j40.c: 1867: if (INTCONbits.INT0IE && INTCONbits.INT0IF)
 18130  00001A  B8F2               	btfsc	intcon,4,c	;volatile
 18131  00001C  A2F2               	btfss	intcon,1,c	;volatile
 18132  00001E  D0A2               	goto	i2l8063
 18133                           
 18134                           ;drv_mrf_miwi_24j40.c: 1868: {
 18135                           ;drv_mrf_miwi_24j40.c: 1869: uint8_t i;
 18136                           ;drv_mrf_miwi_24j40.c: 1873: INTCONbits.INT0IF = 0;
 18137  000020  92F2               	bcf	intcon,1,c	;volatile
 18138                           
 18139                           ;drv_mrf_miwi_24j40.c: 1877: {
 18140                           ;drv_mrf_miwi_24j40.c: 1878: MRF24J40_IFREG flags;
 18141                           ;drv_mrf_miwi_24j40.c: 1881: flags.Val = PHYGetShortRAMAddr((0x62));
 18142  000022  0E62               	movlw	98
 18143  000024  ECF5  F01B         	call	i2_PHYGetShortRAMAddr
 18144  000028  6E12               	movwf	high_isr@flags,c
 18145                           
 18146                           ;drv_mrf_miwi_24j40.c: 1883: if (flags.bits.RF_TXIF)
 18147  00002A  A012               	btfss	high_isr@flags,0,c
 18148  00002C  D00F               	goto	i2l213
 18149                           
 18150                           ;drv_mrf_miwi_24j40.c: 1884: {
 18151                           ;drv_mrf_miwi_24j40.c: 1887: MRF24J40Status.bits.TX_BUSY = 0;
 18152  00002E  903F               	bcf	_MRF24J40Status,0,c	;volatile
 18153                           
 18154                           ;drv_mrf_miwi_24j40.c: 1889: if (MRF24J40Status.bits.SEC_IF)
 18155  000030  BC3F               	btfsc	_MRF24J40Status,6,c	;volatile
 18156                           
 18157                           ;drv_mrf_miwi_24j40.c: 1890: {
 18158                           ;drv_mrf_miwi_24j40.c: 1891: MRF24J40Status.bits.SEC_IF = 0;
 18159  000032  9C3F               	bcf	_MRF24J40Status,6,c	;volatile
 18160                           
 18161                           ;drv_mrf_miwi_24j40.c: 1892: }
 18162                           ;drv_mrf_miwi_24j40.c: 1894: failureCounter = 0;
 18163  000034  0100               	movlb	0	; () banked
 18164  000036  6BD5               	clrf	_failureCounter& (0+255),b	;volatile
 18165  000038  6BD6               	clrf	(_failureCounter+1)& (0+255),b	;volatile
 18166                           
 18167                           ;drv_mrf_miwi_24j40.c: 1898: if (MRF24J40Status.bits.TX_PENDING_ACK)
 18168  00003A  A23F               	btfss	_MRF24J40Status,1,c	;volatile
 18169  00003C  D007               	goto	i2l213
 18170                           
 18171                           ; BSR set to: 0
 18172                           ;drv_mrf_miwi_24j40.c: 1899: {
 18173                           ;drv_mrf_miwi_24j40.c: 1900: DRIVER_UINT8_UNION results;
 18174                           ;drv_mrf_miwi_24j40.c: 1903: results.Val = PHYGetShortRAMAddr((0x48));
 18175  00003E  0E48               	movlw	72
 18176  000040  ECF5  F01B         	call	i2_PHYGetShortRAMAddr
 18177  000044  6E11               	movwf	high_isr@results,c
 18178                           
 18179                           ;drv_mrf_miwi_24j40.c: 1905: if (results.bits.b0 == 1)
 18180  000046  B011               	btfsc	high_isr@results,0,c
 18181                           
 18182                           ;drv_mrf_miwi_24j40.c: 1906: {
 18183                           ;drv_mrf_miwi_24j40.c: 1909: MRF24J40Status.bits.TX_FAIL = 1;
 18184  000048  843F               	bsf	_MRF24J40Status,2,c	;volatile
 18185                           
 18186                           ;drv_mrf_miwi_24j40.c: 1910: }
 18187                           ;drv_mrf_miwi_24j40.c: 1914: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 18188  00004A  923F               	bcf	_MRF24J40Status,1,c	;volatile
 18189  00004C                     i2l213:
 18190                           
 18191                           ;drv_mrf_miwi_24j40.c: 1916: }
 18192                           ;drv_mrf_miwi_24j40.c: 1918: }
 18193                           ;drv_mrf_miwi_24j40.c: 1920: if (flags.bits.RF_RXIF)
 18194  00004C  A612               	btfss	high_isr@flags,3,c
 18195  00004E  D083               	goto	i2l8059
 18196                           
 18197                           ;drv_mrf_miwi_24j40.c: 1921: {
 18198                           ;drv_mrf_miwi_24j40.c: 1922: uint8_t RxBank = 0xFF;
 18199  000050  6814               	setf	high_isr@RxBank,c
 18200                           
 18201                           ;drv_mrf_miwi_24j40.c: 1924: for (i = 0; i < 2; i++)
 18202  000052  6A15               	clrf	high_isr@i,c
 18203  000054                     i2l8027:
 18204                           
 18205                           ;drv_mrf_miwi_24j40.c: 1925: {
 18206                           ;drv_mrf_miwi_24j40.c: 1926: if (RxBuffer[i].PayloadLen == 0)
 18207  000054  5015               	movf	high_isr@i,w,c
 18208  000056  0D45               	mullw	69
 18209  000058  0E0C               	movlw	low _RxBuffer
 18210  00005A  24F3               	addwf	prodl,w,c
 18211  00005C  6ED9               	movwf	fsr2l,c
 18212  00005E  0E01               	movlw	high _RxBuffer
 18213  000060  20F4               	addwfc	prodh,w,c
 18214  000062  6EDA               	movwf	fsr2h,c
 18215  000064  50DF               	movf	indf2,w,c
 18216  000066  E103               	bnz	i2l8031
 18217                           
 18218                           ;drv_mrf_miwi_24j40.c: 1927: {
 18219                           ;drv_mrf_miwi_24j40.c: 1928: RxBank = i;
 18220  000068  C015  F014         	movff	high_isr@i,high_isr@RxBank
 18221                           
 18222                           ;drv_mrf_miwi_24j40.c: 1929: break;
 18223  00006C  D004               	goto	i2l8035
 18224  00006E                     i2l8031:
 18225  00006E  2A15               	incf	high_isr@i,f,c
 18226  000070  0E01               	movlw	1
 18227  000072  6415               	cpfsgt	high_isr@i,c
 18228  000074  D7EF               	goto	i2l8027
 18229  000076                     i2l8035:
 18230                           
 18231                           ;drv_mrf_miwi_24j40.c: 1930: }
 18232                           ;drv_mrf_miwi_24j40.c: 1931: }
 18233                           ;drv_mrf_miwi_24j40.c: 1934: if (RxBank < 2)
 18234  000076  0E02               	movlw	2
 18235  000078  6014               	cpfslt	high_isr@RxBank,c
 18236  00007A  D068               	goto	i2l8057
 18237                           
 18238                           ;drv_mrf_miwi_24j40.c: 1935: {
 18239                           ;drv_mrf_miwi_24j40.c: 1941: PHYSetShortRAMAddr((0x73), 0x04);
 18240  00007C  0E04               	movlw	4
 18241  00007E  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 18242  000080  0E73               	movlw	115
 18243  000082  EC5C  F01C         	call	i2_PHYSetShortRAMAddr
 18244                           
 18245                           ;drv_mrf_miwi_24j40.c: 1945: RxBuffer[RxBank].PayloadLen = PHYGetLongRAMAddr(0x300) + 2;
 18246  000086  5014               	movf	high_isr@RxBank,w,c
 18247  000088  0D45               	mullw	69
 18248  00008A  0E0C               	movlw	low _RxBuffer
 18249  00008C  24F3               	addwf	prodl,w,c
 18250  00008E  6ED9               	movwf	fsr2l,c
 18251  000090  0E01               	movlw	high _RxBuffer
 18252  000092  20F4               	addwfc	prodh,w,c
 18253  000094  6EDA               	movwf	fsr2h,c
 18254  000096  0E03               	movlw	3
 18255  000098  6E03               	movwf	i2PHYGetLongRAMAddr@address+1,c
 18256  00009A  6A02               	clrf	i2PHYGetLongRAMAddr@address,c
 18257  00009C  EC8F  F019         	call	i2_PHYGetLongRAMAddr	;wreg free
 18258  0000A0  0F02               	addlw	2
 18259  0000A2  6EDF               	movwf	indf2,c
 18260                           
 18261                           ;drv_mrf_miwi_24j40.c: 1946: if (RxBuffer[RxBank].PayloadLen < (40+0+8+8+12))
 18262  0000A4  5014               	movf	high_isr@RxBank,w,c
 18263  0000A6  0D45               	mullw	69
 18264  0000A8  0E0C               	movlw	low _RxBuffer
 18265  0000AA  24F3               	addwf	prodl,w,c
 18266  0000AC  6ED9               	movwf	fsr2l,c
 18267  0000AE  0E01               	movlw	high _RxBuffer
 18268  0000B0  20F4               	addwfc	prodh,w,c
 18269  0000B2  6EDA               	movwf	fsr2h,c
 18270  0000B4  0E44               	movlw	68
 18271  0000B6  60DF               	cpfslt	indf2,c
 18272  0000B8  D03F               	goto	i2l8055
 18273                           
 18274                           ;drv_mrf_miwi_24j40.c: 1947: {
 18275                           ;drv_mrf_miwi_24j40.c: 1949: MRF24J40Status.bits.RX_BUFFERED = 1;
 18276  0000BA  8A3F               	bsf	_MRF24J40Status,5,c	;volatile
 18277                           
 18278                           ;drv_mrf_miwi_24j40.c: 1952: for (i = 1; i <= RxBuffer[RxBank].PayloadLen + 2; i++)
 18279  0000BC  0E01               	movlw	1
 18280  0000BE  6E15               	movwf	high_isr@i,c
 18281  0000C0  D01A               	goto	i2l8051
 18282  0000C2                     i2l8047:
 18283                           
 18284                           ;drv_mrf_miwi_24j40.c: 1953: {
 18285                           ;drv_mrf_miwi_24j40.c: 1954: RxBuffer[RxBank].Payload[i - 1] = PHYGetLongRAMAddr(0x300 +
      +                           i);
 18286  0000C2  5014               	movf	high_isr@RxBank,w,c
 18287  0000C4  0D45               	mullw	69
 18288  0000C6  0E0C               	movlw	low _RxBuffer
 18289  0000C8  6E08               	movwf	??_high_isr& (0+255),c
 18290  0000CA  0E01               	movlw	high _RxBuffer
 18291  0000CC  6E09               	movwf	(??_high_isr+1)& (0+255),c
 18292  0000CE  50F3               	movf	prodl,w,c
 18293  0000D0  2608               	addwf	??_high_isr,f,c
 18294  0000D2  50F4               	movf	prodh,w,c
 18295  0000D4  2209               	addwfc	??_high_isr+1,f,c
 18296  0000D6  5015               	movf	high_isr@i,w,c
 18297  0000D8  2408               	addwf	??_high_isr,w,c
 18298  0000DA  6ED9               	movwf	fsr2l,c
 18299  0000DC  0E00               	movlw	0
 18300  0000DE  2009               	addwfc	??_high_isr+1,w,c
 18301  0000E0  6EDA               	movwf	fsr2h,c
 18302  0000E2  0E00               	movlw	0
 18303  0000E4  2415               	addwf	high_isr@i,w,c
 18304  0000E6  6E02               	movwf	i2PHYGetLongRAMAddr@address,c
 18305  0000E8  6A03               	clrf	i2PHYGetLongRAMAddr@address+1,c
 18306  0000EA  0E03               	movlw	3
 18307  0000EC  2203               	addwfc	i2PHYGetLongRAMAddr@address+1,f,c
 18308  0000EE  EC8F  F019         	call	i2_PHYGetLongRAMAddr	;wreg free
 18309  0000F2  6EDF               	movwf	indf2,c
 18310  0000F4  2A15               	incf	high_isr@i,f,c
 18311  0000F6                     i2l8051:
 18312  0000F6  5015               	movf	high_isr@i,w,c
 18313  0000F8  6E08               	movwf	??_high_isr& (0+255),c
 18314  0000FA  6A09               	clrf	(??_high_isr+1)& (0+255),c
 18315  0000FC  5014               	movf	high_isr@RxBank,w,c
 18316  0000FE  0D45               	mullw	69
 18317  000100  0E0C               	movlw	low _RxBuffer
 18318  000102  24F3               	addwf	prodl,w,c
 18319  000104  6ED9               	movwf	fsr2l,c
 18320  000106  0E01               	movlw	high _RxBuffer
 18321  000108  20F4               	addwfc	prodh,w,c
 18322  00010A  6EDA               	movwf	fsr2h,c
 18323  00010C  50DF               	movf	indf2,w,c
 18324  00010E  6E0A               	movwf	(??_high_isr+2)& (0+255),c
 18325  000110  6A0B               	clrf	(??_high_isr+3)& (0+255),c
 18326  000112  0E02               	movlw	2
 18327  000114  260A               	addwf	??_high_isr+2,f,c
 18328  000116  0E00               	movlw	0
 18329  000118  220B               	addwfc	??_high_isr+3,f,c
 18330  00011A  5008               	movf	??_high_isr,w,c
 18331  00011C  5C0A               	subwf	??_high_isr+2,w,c
 18332  00011E  500B               	movf	??_high_isr+3,w,c
 18333  000120  0A80               	xorlw	128
 18334  000122  6E0C               	movwf	(??_high_isr+4)& (0+255),c
 18335  000124  5009               	movf	??_high_isr+1,w,c
 18336  000126  0A80               	xorlw	128
 18337  000128  580C               	subwfb	(??_high_isr+4)& (0+255),w,c
 18338  00012A  E2CB               	bc	i2l8047
 18339                           
 18340                           ;drv_mrf_miwi_24j40.c: 1955: }
 18341                           ;drv_mrf_miwi_24j40.c: 1956: PHYSetShortRAMAddr((0x1B), 0x01);
 18342  00012C  0E01               	movlw	1
 18343  00012E  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 18344  000130  0E1B               	movlw	27
 18345  000132  EC5C  F01C         	call	i2_PHYSetShortRAMAddr
 18346                           
 18347                           ;drv_mrf_miwi_24j40.c: 1957: } else
 18348  000136  D005               	goto	i2l226
 18349  000138                     i2l8055:
 18350                           
 18351                           ;drv_mrf_miwi_24j40.c: 1958: {
 18352                           ;drv_mrf_miwi_24j40.c: 1961: PHYSetShortRAMAddr((0x1B), 0x01);
 18353  000138  0E01               	movlw	1
 18354  00013A  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 18355  00013C  0E1B               	movlw	27
 18356  00013E  EC5C  F01C         	call	i2_PHYSetShortRAMAddr
 18357  000142                     i2l226:
 18358                           
 18359                           ;drv_mrf_miwi_24j40.c: 1962: }
 18360                           ;drv_mrf_miwi_24j40.c: 1965: PHYSetShortRAMAddr((0x73), 0x00);
 18361  000142  6A02               	clrf	i2PHYSetShortRAMAddr@value,c
 18362  000144  0E73               	movlw	115
 18363  000146  EC5C  F01C         	call	i2_PHYSetShortRAMAddr
 18364                           
 18365                           ;drv_mrf_miwi_24j40.c: 1966: } else
 18366  00014A  D005               	goto	i2l8059
 18367  00014C                     i2l8057:
 18368                           
 18369                           ;drv_mrf_miwi_24j40.c: 1967: {
 18370                           ;drv_mrf_miwi_24j40.c: 1970: PHYSetShortRAMAddr((0x1B), 0x01);
 18371  00014C  0E01               	movlw	1
 18372  00014E  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 18373  000150  0E1B               	movlw	27
 18374  000152  EC5C  F01C         	call	i2_PHYSetShortRAMAddr
 18375  000156                     i2l8059:
 18376                           
 18377                           ;drv_mrf_miwi_24j40.c: 1977: }
 18378                           ;drv_mrf_miwi_24j40.c: 1979: }
 18379                           ;drv_mrf_miwi_24j40.c: 1982: if (flags.bits.SECIF)
 18380  000156  A812               	btfss	high_isr@flags,4,c
 18381  000158  D005               	goto	i2l8063
 18382                           
 18383                           ;drv_mrf_miwi_24j40.c: 1983: {
 18384                           ;drv_mrf_miwi_24j40.c: 1984: PHYSetShortRAMAddr((0x59), 0x80);
 18385  00015A  0E80               	movlw	128
 18386  00015C  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 18387  00015E  0E59               	movlw	89
 18388  000160  EC5C  F01C         	call	i2_PHYSetShortRAMAddr
 18389  000164                     i2l8063:
 18390                           
 18391                           ;drv_mrf_miwi_24j40.c: 1985: }
 18392                           ;drv_mrf_miwi_24j40.c: 1986: }
 18393                           ;drv_mrf_miwi_24j40.c: 1987: }
 18394                           ;drv_mrf_miwi_24j40.c: 1992: if (PIR1bits.TMR1IF)
 18395  000164  B09E               	btfsc	3998,0,c	;volatile
 18396                           
 18397                           ;drv_mrf_miwi_24j40.c: 1993: {
 18398                           ;drv_mrf_miwi_24j40.c: 1994: if (PIE1bits.TMR1IE)
 18399  000166  A09D               	btfss	3997,0,c	;volatile
 18400  000168  D005               	goto	i2l8075
 18401                           
 18402                           ;drv_mrf_miwi_24j40.c: 1995: {
 18403                           ;drv_mrf_miwi_24j40.c: 1997: PIR1bits.TMR1IF = 0;
 18404  00016A  909E               	bcf	3998,0,c	;volatile
 18405                           
 18406                           ;drv_mrf_miwi_24j40.c: 1998: timerExtension1++;
 18407  00016C  2A41               	incf	_timerExtension1,f,c	;volatile
 18408                           
 18409                           ;drv_mrf_miwi_24j40.c: 1999: if (timerExtension1 == 0)
 18410  00016E  5041               	movf	_timerExtension1,w,c	;volatile
 18411  000170  E101               	bnz	i2l8075
 18412                           
 18413                           ;drv_mrf_miwi_24j40.c: 2000: {
 18414                           ;drv_mrf_miwi_24j40.c: 2001: timerExtension2++;
 18415  000172  2A42               	incf	_timerExtension2,f,c	;volatile
 18416  000174                     i2l8075:
 18417                           
 18418                           ;drv_mrf_miwi_24j40.c: 2002: }
 18419                           ;drv_mrf_miwi_24j40.c: 2003: }
 18420                           ;drv_mrf_miwi_24j40.c: 2004: }
 18421                           ;drv_mrf_miwi_24j40.c: 2006: UserInterruptHandler();
 18422  000174  EC6D  F01D         	call	_UserInterruptHandler	;wreg free
 18423  000178  C010  FFF4         	movff	??_high_isr+8,prodh
 18424  00017C  C00F  FFF3         	movff	??_high_isr+7,prodl
 18425  000180  C00E  FFDA         	movff	??_high_isr+6,fsr2h
 18426  000184  C00D  FFD9         	movff	??_high_isr+5,fsr2l
 18427  000188  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18428  00018A  0011               	retfie		f
 18429  00018C                     __end_of_high_isr:
 18430                           	opt stack 0
 18431                           tblptru	equ	0xFF8
 18432                           tblptrh	equ	0xFF7
 18433                           tblptrl	equ	0xFF6
 18434                           tablat	equ	0xFF5
 18435                           prodh	equ	0xFF4
 18436                           prodl	equ	0xFF3
 18437                           intcon	equ	0xFF2
 18438                           intcon2	equ	0xFF1
 18439                           postinc0	equ	0xFEE
 18440                           plusw0	equ	0xFEB
 18441                           wreg	equ	0xFE8
 18442                           indf1	equ	0xFE7
 18443                           postinc1	equ	0xFE6
 18444                           postdec1	equ	0xFE5
 18445                           fsr1h	equ	0xFE2
 18446                           fsr1l	equ	0xFE1
 18447                           indf2	equ	0xFDF
 18448                           postinc2	equ	0xFDE
 18449                           postdec2	equ	0xFDD
 18450                           plusw2	equ	0xFDB
 18451                           fsr2h	equ	0xFDA
 18452                           fsr2l	equ	0xFD9
 18453                           status	equ	0xFD8
 18454                           
 18455 ;; *************** function i2_PHYSetShortRAMAddr *****************
 18456 ;; Defined at:
 18457 ;;		line 124 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 18458 ;; Parameters:    Size  Location     Type
 18459 ;;  address         1    wreg     unsigned char 
 18460 ;;  value           1    1[COMRAM] unsigned char 
 18461 ;; Auto vars:     Size  Location     Type
 18462 ;;  address         1    2[COMRAM] unsigned char 
 18463 ;;  PHYSetShortR    1    3[COMRAM] volatile unsigned char 
 18464 ;; Return value:  Size  Location     Type
 18465 ;;		None               void
 18466 ;; Registers used:
 18467 ;;		wreg, status,2, cstack
 18468 ;; Tracked objects:
 18469 ;;		On entry : 0/0
 18470 ;;		On exit  : 0/0
 18471 ;;		Unchanged: 0/0
 18472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18473 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18476 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18477 ;;Total ram usage:        3 bytes
 18478 ;; Hardware stack levels used:    1
 18479 ;; Hardware stack levels required when called:    1
 18480 ;; This function calls:
 18481 ;;		i2_SPI1_Exchange8bit
 18482 ;; This function is called by:
 18483 ;;		_high_isr
 18484 ;; This function uses a non-reentrant model
 18485 ;;
 18486                           
 18487                           	psect	text80
 18488  0038B8                     __ptext80:
 18489                           	opt stack 0
 18490  0038B8                     i2_PHYSetShortRAMAddr:
 18491                           	opt stack 14
 18492                           
 18493                           ;incstack = 0
 18494                           ;i2PHYSetShortRAMAddr@address stored from wreg
 18495  0038B8  6E03               	movwf	i2PHYSetShortRAMAddr@address,c
 18496                           
 18497                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 18498  0038BA  0E00               	movlw	0
 18499  0038BC  B8F2               	btfsc	intcon,4,c	;volatile
 18500  0038BE  0E01               	movlw	1
 18501  0038C0  6E04               	movwf	i2PHYSetShortRAMAddr@tmpRFIE,c	;volatile
 18502                           
 18503                           ;drv_mrf_miwi_24j40.c: 128: INTCONbits.INT0IE = 0;
 18504  0038C2  98F2               	bcf	intcon,4,c	;volatile
 18505                           
 18506                           ;drv_mrf_miwi_24j40.c: 129: LATAbits.LATA5 = 0;
 18507  0038C4  9A89               	bcf	3977,5,c	;volatile
 18508                           
 18509                           ;drv_mrf_miwi_24j40.c: 130: SPI1_Exchange8bit(address);
 18510  0038C6  5003               	movf	i2PHYSetShortRAMAddr@address,w,c
 18511  0038C8  EC49  F01D         	call	i2_SPI1_Exchange8bit
 18512                           
 18513                           ;drv_mrf_miwi_24j40.c: 131: SPI1_Exchange8bit(value);
 18514  0038CC  5002               	movf	i2PHYSetShortRAMAddr@value,w,c
 18515  0038CE  EC49  F01D         	call	i2_SPI1_Exchange8bit
 18516                           
 18517                           ;drv_mrf_miwi_24j40.c: 132: LATAbits.LATA5 = 1;
 18518  0038D2  8A89               	bsf	3977,5,c	;volatile
 18519                           
 18520                           ;drv_mrf_miwi_24j40.c: 133: INTCONbits.INT0IE = tmpRFIE;
 18521  0038D4  B004               	btfsc	i2PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
 18522  0038D6  D002               	bra	i2u702_45
 18523  0038D8  98F2               	bcf	intcon,4,c	;volatile
 18524  0038DA  D001               	bra	i2u702_46
 18525  0038DC                     i2u702_45:
 18526  0038DC  88F2               	bsf	intcon,4,c	;volatile
 18527  0038DE                     i2u702_46:
 18528  0038DE  0012               	return		;funcret
 18529  0038E0                     __end_ofi2_PHYSetShortRAMAddr:
 18530                           	opt stack 0
 18531                           tblptru	equ	0xFF8
 18532                           tblptrh	equ	0xFF7
 18533                           tblptrl	equ	0xFF6
 18534                           tablat	equ	0xFF5
 18535                           prodh	equ	0xFF4
 18536                           prodl	equ	0xFF3
 18537                           intcon	equ	0xFF2
 18538                           intcon2	equ	0xFF1
 18539                           postinc0	equ	0xFEE
 18540                           plusw0	equ	0xFEB
 18541                           wreg	equ	0xFE8
 18542                           indf1	equ	0xFE7
 18543                           postinc1	equ	0xFE6
 18544                           postdec1	equ	0xFE5
 18545                           fsr1h	equ	0xFE2
 18546                           fsr1l	equ	0xFE1
 18547                           indf2	equ	0xFDF
 18548                           postinc2	equ	0xFDE
 18549                           postdec2	equ	0xFDD
 18550                           plusw2	equ	0xFDB
 18551                           fsr2h	equ	0xFDA
 18552                           fsr2l	equ	0xFD9
 18553                           status	equ	0xFD8
 18554                           
 18555 ;; *************** function i2_PHYGetShortRAMAddr *****************
 18556 ;; Defined at:
 18557 ;;		line 154 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 18558 ;; Parameters:    Size  Location     Type
 18559 ;;  address         1    wreg     unsigned char 
 18560 ;; Auto vars:     Size  Location     Type
 18561 ;;  address         1    1[COMRAM] unsigned char 
 18562 ;;  PHYGetShortR    1    3[COMRAM] volatile unsigned char 
 18563 ;;  PHYGetShortR    1    2[COMRAM] unsigned char 
 18564 ;; Return value:  Size  Location     Type
 18565 ;;                  1    wreg      unsigned char 
 18566 ;; Registers used:
 18567 ;;		wreg, status,2, cstack
 18568 ;; Tracked objects:
 18569 ;;		On entry : 0/0
 18570 ;;		On exit  : 0/0
 18571 ;;		Unchanged: 0/0
 18572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18574 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18576 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18577 ;;Total ram usage:        3 bytes
 18578 ;; Hardware stack levels used:    1
 18579 ;; Hardware stack levels required when called:    1
 18580 ;; This function calls:
 18581 ;;		i2_SPI1_Exchange8bit
 18582 ;; This function is called by:
 18583 ;;		_high_isr
 18584 ;; This function uses a non-reentrant model
 18585 ;;
 18586                           
 18587                           	psect	text81
 18588  0037EA                     __ptext81:
 18589                           	opt stack 0
 18590  0037EA                     i2_PHYGetShortRAMAddr:
 18591                           	opt stack 14
 18592                           
 18593                           ;incstack = 0
 18594                           ;i2PHYGetShortRAMAddr@address stored from wreg
 18595  0037EA  6E02               	movwf	i2PHYGetShortRAMAddr@address,c
 18596                           
 18597                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 18598                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 18599  0037EC  0E00               	movlw	0
 18600  0037EE  B8F2               	btfsc	intcon,4,c	;volatile
 18601  0037F0  0E01               	movlw	1
 18602  0037F2  6E04               	movwf	i2PHYGetShortRAMAddr@tmpRFIE,c	;volatile
 18603                           
 18604                           ;drv_mrf_miwi_24j40.c: 159: INTCONbits.INT0IE = 0;
 18605  0037F4  98F2               	bcf	intcon,4,c	;volatile
 18606                           
 18607                           ;drv_mrf_miwi_24j40.c: 160: LATAbits.LATA5 = 0;
 18608  0037F6  9A89               	bcf	3977,5,c	;volatile
 18609                           
 18610                           ;drv_mrf_miwi_24j40.c: 161: SPI1_Exchange8bit(address);
 18611  0037F8  5002               	movf	i2PHYGetShortRAMAddr@address,w,c
 18612  0037FA  EC49  F01D         	call	i2_SPI1_Exchange8bit
 18613                           
 18614                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPI1_Exchange8bit(0x00);
 18615  0037FE  0E00               	movlw	0
 18616  003800  EC49  F01D         	call	i2_SPI1_Exchange8bit
 18617  003804  6E03               	movwf	i2PHYGetShortRAMAddr@toReturn,c
 18618                           
 18619                           ;drv_mrf_miwi_24j40.c: 163: LATAbits.LATA5 = 1;
 18620  003806  8A89               	bsf	3977,5,c	;volatile
 18621                           
 18622                           ;drv_mrf_miwi_24j40.c: 164: INTCONbits.INT0IE = tmpRFIE;
 18623  003808  B004               	btfsc	i2PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
 18624  00380A  D002               	bra	i2u703_45
 18625  00380C  98F2               	bcf	intcon,4,c	;volatile
 18626  00380E  D001               	bra	i2u703_46
 18627  003810                     i2u703_45:
 18628  003810  88F2               	bsf	intcon,4,c	;volatile
 18629  003812                     i2u703_46:
 18630                           
 18631                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 18632  003812  5003               	movf	i2PHYGetShortRAMAddr@toReturn,w,c
 18633  003814  0012               	return		;funcret
 18634  003816                     __end_ofi2_PHYGetShortRAMAddr:
 18635                           	opt stack 0
 18636                           tblptru	equ	0xFF8
 18637                           tblptrh	equ	0xFF7
 18638                           tblptrl	equ	0xFF6
 18639                           tablat	equ	0xFF5
 18640                           prodh	equ	0xFF4
 18641                           prodl	equ	0xFF3
 18642                           intcon	equ	0xFF2
 18643                           intcon2	equ	0xFF1
 18644                           postinc0	equ	0xFEE
 18645                           plusw0	equ	0xFEB
 18646                           wreg	equ	0xFE8
 18647                           indf1	equ	0xFE7
 18648                           postinc1	equ	0xFE6
 18649                           postdec1	equ	0xFE5
 18650                           fsr1h	equ	0xFE2
 18651                           fsr1l	equ	0xFE1
 18652                           indf2	equ	0xFDF
 18653                           postinc2	equ	0xFDE
 18654                           postdec2	equ	0xFDD
 18655                           plusw2	equ	0xFDB
 18656                           fsr2h	equ	0xFDA
 18657                           fsr2l	equ	0xFD9
 18658                           status	equ	0xFD8
 18659                           
 18660 ;; *************** function i2_PHYGetLongRAMAddr *****************
 18661 ;; Defined at:
 18662 ;;		line 185 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 18663 ;; Parameters:    Size  Location     Type
 18664 ;;  address         2    1[COMRAM] unsigned int 
 18665 ;; Auto vars:     Size  Location     Type
 18666 ;;  PHYGetLongRA    1    6[COMRAM] volatile unsigned char 
 18667 ;;  PHYGetLongRA    1    5[COMRAM] unsigned char 
 18668 ;; Return value:  Size  Location     Type
 18669 ;;                  1    wreg      unsigned char 
 18670 ;; Registers used:
 18671 ;;		wreg, status,2, status,0, cstack
 18672 ;; Tracked objects:
 18673 ;;		On entry : 0/0
 18674 ;;		On exit  : 0/0
 18675 ;;		Unchanged: 0/0
 18676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18679 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18680 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18681 ;;Total ram usage:        6 bytes
 18682 ;; Hardware stack levels used:    1
 18683 ;; Hardware stack levels required when called:    1
 18684 ;; This function calls:
 18685 ;;		i2_SPI1_Exchange8bit
 18686 ;; This function is called by:
 18687 ;;		_high_isr
 18688 ;; This function uses a non-reentrant model
 18689 ;;
 18690                           
 18691                           	psect	text82
 18692  00331E                     __ptext82:
 18693                           	opt stack 0
 18694  00331E                     i2_PHYGetLongRAMAddr:
 18695                           	opt stack 14
 18696                           
 18697                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 18698                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 18699                           
 18700                           ;incstack = 0
 18701  00331E  0E00               	movlw	0
 18702  003320  B8F2               	btfsc	intcon,4,c	;volatile
 18703  003322  0E01               	movlw	1
 18704  003324  6E07               	movwf	i2PHYGetLongRAMAddr@tmpRFIE,c	;volatile
 18705                           
 18706                           ;drv_mrf_miwi_24j40.c: 190: INTCONbits.INT0IE = 0;
 18707  003326  98F2               	bcf	intcon,4,c	;volatile
 18708                           
 18709                           ;drv_mrf_miwi_24j40.c: 191: LATAbits.LATA5 = 0;
 18710  003328  9A89               	bcf	3977,5,c	;volatile
 18711                           
 18712                           ;drv_mrf_miwi_24j40.c: 192: SPI1_Exchange8bit(((address >> 3)&0x7F) | 0x80);
 18713  00332A  C002  F004         	movff	i2PHYGetLongRAMAddr@address,??i2_PHYGetLongRAMAddr
 18714  00332E  C003  F005         	movff	i2PHYGetLongRAMAddr@address+1,??i2_PHYGetLongRAMAddr+1
 18715  003332  90D8               	bcf	status,0,c
 18716  003334  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 18717  003336  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 18718  003338  90D8               	bcf	status,0,c
 18719  00333A  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 18720  00333C  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 18721  00333E  90D8               	bcf	status,0,c
 18722  003340  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 18723  003342  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 18724  003344  5004               	movf	??i2_PHYGetLongRAMAddr,w,c
 18725  003346  0B7F               	andlw	127
 18726  003348  0980               	iorlw	128
 18727  00334A  EC49  F01D         	call	i2_SPI1_Exchange8bit
 18728                           
 18729                           ;drv_mrf_miwi_24j40.c: 193: SPI1_Exchange8bit(((address << 5)&0xE0));
 18730  00334E  3802               	swapf	i2PHYGetLongRAMAddr@address,w,c
 18731  003350  46E8               	rlncf	wreg,f,c
 18732  003352  0BE0               	andlw	224
 18733  003354  EC49  F01D         	call	i2_SPI1_Exchange8bit
 18734                           
 18735                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPI1_Exchange8bit(0x00);
 18736  003358  0E00               	movlw	0
 18737  00335A  EC49  F01D         	call	i2_SPI1_Exchange8bit
 18738  00335E  6E06               	movwf	i2PHYGetLongRAMAddr@toReturn,c
 18739                           
 18740                           ;drv_mrf_miwi_24j40.c: 195: LATAbits.LATA5 = 1;
 18741  003360  8A89               	bsf	3977,5,c	;volatile
 18742                           
 18743                           ;drv_mrf_miwi_24j40.c: 196: INTCONbits.INT0IE = tmpRFIE;
 18744  003362  B007               	btfsc	i2PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
 18745  003364  D002               	bra	i2u704_45
 18746  003366  98F2               	bcf	intcon,4,c	;volatile
 18747  003368  D001               	bra	i2u704_46
 18748  00336A                     i2u704_45:
 18749  00336A  88F2               	bsf	intcon,4,c	;volatile
 18750  00336C                     i2u704_46:
 18751                           
 18752                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 18753  00336C  5006               	movf	i2PHYGetLongRAMAddr@toReturn,w,c
 18754  00336E  0012               	return		;funcret
 18755  003370                     __end_ofi2_PHYGetLongRAMAddr:
 18756                           	opt stack 0
 18757                           tblptru	equ	0xFF8
 18758                           tblptrh	equ	0xFF7
 18759                           tblptrl	equ	0xFF6
 18760                           tablat	equ	0xFF5
 18761                           prodh	equ	0xFF4
 18762                           prodl	equ	0xFF3
 18763                           intcon	equ	0xFF2
 18764                           intcon2	equ	0xFF1
 18765                           postinc0	equ	0xFEE
 18766                           plusw0	equ	0xFEB
 18767                           wreg	equ	0xFE8
 18768                           indf1	equ	0xFE7
 18769                           postinc1	equ	0xFE6
 18770                           postdec1	equ	0xFE5
 18771                           fsr1h	equ	0xFE2
 18772                           fsr1l	equ	0xFE1
 18773                           indf2	equ	0xFDF
 18774                           postinc2	equ	0xFDE
 18775                           postdec2	equ	0xFDD
 18776                           plusw2	equ	0xFDB
 18777                           fsr2h	equ	0xFDA
 18778                           fsr2l	equ	0xFD9
 18779                           status	equ	0xFD8
 18780                           
 18781 ;; *************** function i2_SPI1_Exchange8bit *****************
 18782 ;; Defined at:
 18783 ;;		line 51 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 18784 ;; Parameters:    Size  Location     Type
 18785 ;;  data            1    wreg     unsigned char 
 18786 ;; Auto vars:     Size  Location     Type
 18787 ;;  data            1    0[COMRAM] unsigned char 
 18788 ;; Return value:  Size  Location     Type
 18789 ;;                  1    wreg      unsigned char 
 18790 ;; Registers used:
 18791 ;;		wreg, status,2
 18792 ;; Tracked objects:
 18793 ;;		On entry : 0/0
 18794 ;;		On exit  : 0/0
 18795 ;;		Unchanged: 0/0
 18796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18801 ;;Total ram usage:        1 bytes
 18802 ;; Hardware stack levels used:    1
 18803 ;; This function calls:
 18804 ;;		Nothing
 18805 ;; This function is called by:
 18806 ;;		i2_PHYSetShortRAMAddr
 18807 ;;		i2_PHYGetShortRAMAddr
 18808 ;;		i2_PHYGetLongRAMAddr
 18809 ;; This function uses a non-reentrant model
 18810 ;;
 18811                           
 18812                           	psect	text83
 18813  003A92                     __ptext83:
 18814                           	opt stack 0
 18815  003A92                     i2_SPI1_Exchange8bit:
 18816                           	opt stack 14
 18817                           
 18818                           ;incstack = 0
 18819                           ;i2SPI1_Exchange8bit@data stored from wreg
 18820  003A92  6E01               	movwf	i2SPI1_Exchange8bit@data,c
 18821                           
 18822                           ;spi.c: 53: SSP1CON1bits.WCOL = 0;
 18823  003A94  9EC6               	bcf	4038,7,c	;volatile
 18824                           
 18825                           ;spi.c: 55: SSP1BUF = data;
 18826  003A96  C001  FFC9         	movff	i2SPI1_Exchange8bit@data,4041	;volatile
 18827  003A9A                     i2l798:
 18828  003A9A  A0C7               	btfss	4039,0,c	;volatile
 18829  003A9C  D7FE               	goto	i2l798
 18830                           
 18831                           ;spi.c: 58: }
 18832                           ;spi.c: 60: return (SSP1BUF);
 18833  003A9E  50C9               	movf	4041,w,c	;volatile
 18834  003AA0  0012               	return		;funcret
 18835  003AA2                     __end_ofi2_SPI1_Exchange8bit:
 18836                           	opt stack 0
 18837                           tblptru	equ	0xFF8
 18838                           tblptrh	equ	0xFF7
 18839                           tblptrl	equ	0xFF6
 18840                           tablat	equ	0xFF5
 18841                           prodh	equ	0xFF4
 18842                           prodl	equ	0xFF3
 18843                           intcon	equ	0xFF2
 18844                           intcon2	equ	0xFF1
 18845                           postinc0	equ	0xFEE
 18846                           plusw0	equ	0xFEB
 18847                           wreg	equ	0xFE8
 18848                           indf1	equ	0xFE7
 18849                           postinc1	equ	0xFE6
 18850                           postdec1	equ	0xFE5
 18851                           fsr1h	equ	0xFE2
 18852                           fsr1l	equ	0xFE1
 18853                           indf2	equ	0xFDF
 18854                           postinc2	equ	0xFDE
 18855                           postdec2	equ	0xFDD
 18856                           plusw2	equ	0xFDB
 18857                           fsr2h	equ	0xFDA
 18858                           fsr2l	equ	0xFD9
 18859                           status	equ	0xFD8
 18860                           
 18861 ;; *************** function _UserInterruptHandler *****************
 18862 ;; Defined at:
 18863 ;;		line 205 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 18864 ;; Parameters:    Size  Location     Type
 18865 ;;		None
 18866 ;; Auto vars:     Size  Location     Type
 18867 ;;		None
 18868 ;; Return value:  Size  Location     Type
 18869 ;;		None               void
 18870 ;; Registers used:
 18871 ;;		None
 18872 ;; Tracked objects:
 18873 ;;		On entry : 0/0
 18874 ;;		On exit  : 0/0
 18875 ;;		Unchanged: 0/0
 18876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18881 ;;Total ram usage:        0 bytes
 18882 ;; Hardware stack levels used:    1
 18883 ;; This function calls:
 18884 ;;		Nothing
 18885 ;; This function is called by:
 18886 ;;		_high_isr
 18887 ;; This function uses a non-reentrant model
 18888 ;;
 18889                           
 18890                           	psect	text84
 18891  003ADA                     __ptext84:
 18892                           	opt stack 0
 18893  003ADA                     _UserInterruptHandler:
 18894                           	opt stack 15
 18895                           
 18896                           ;incstack = 0
 18897  003ADA  0012               	return		;funcret
 18898  003ADC                     __end_of_UserInterruptHandler:
 18899                           	opt stack 0
 18900                           tblptru	equ	0xFF8
 18901                           tblptrh	equ	0xFF7
 18902                           tblptrl	equ	0xFF6
 18903                           tablat	equ	0xFF5
 18904                           prodh	equ	0xFF4
 18905                           prodl	equ	0xFF3
 18906                           intcon	equ	0xFF2
 18907                           intcon2	equ	0xFF1
 18908                           postinc0	equ	0xFEE
 18909                           plusw0	equ	0xFEB
 18910                           wreg	equ	0xFE8
 18911                           indf1	equ	0xFE7
 18912                           postinc1	equ	0xFE6
 18913                           postdec1	equ	0xFE5
 18914                           fsr1h	equ	0xFE2
 18915                           fsr1l	equ	0xFE1
 18916                           indf2	equ	0xFDF
 18917                           postinc2	equ	0xFDE
 18918                           postdec2	equ	0xFDD
 18919                           plusw2	equ	0xFDB
 18920                           fsr2h	equ	0xFDA
 18921                           fsr2l	equ	0xFD9
 18922                           status	equ	0xFD8
 18923                           tblptru	equ	0xFF8
 18924                           tblptrh	equ	0xFF7
 18925                           tblptrl	equ	0xFF6
 18926                           tablat	equ	0xFF5
 18927                           prodh	equ	0xFF4
 18928                           prodl	equ	0xFF3
 18929                           intcon	equ	0xFF2
 18930                           intcon2	equ	0xFF1
 18931                           postinc0	equ	0xFEE
 18932                           plusw0	equ	0xFEB
 18933                           wreg	equ	0xFE8
 18934                           indf1	equ	0xFE7
 18935                           postinc1	equ	0xFE6
 18936                           postdec1	equ	0xFE5
 18937                           fsr1h	equ	0xFE2
 18938                           fsr1l	equ	0xFE1
 18939                           indf2	equ	0xFDF
 18940                           postinc2	equ	0xFDE
 18941                           postdec2	equ	0xFDD
 18942                           plusw2	equ	0xFDB
 18943                           fsr2h	equ	0xFDA
 18944                           fsr2l	equ	0xFD9
 18945                           status	equ	0xFD8
 18946                           
 18947                           	psect	rparam
 18948  0000                     tblptru	equ	0xFF8
 18949                           tblptrh	equ	0xFF7
 18950                           tblptrl	equ	0xFF6
 18951                           tablat	equ	0xFF5
 18952                           prodh	equ	0xFF4
 18953                           prodl	equ	0xFF3
 18954                           intcon	equ	0xFF2
 18955                           intcon2	equ	0xFF1
 18956                           postinc0	equ	0xFEE
 18957                           plusw0	equ	0xFEB
 18958                           wreg	equ	0xFE8
 18959                           indf1	equ	0xFE7
 18960                           postinc1	equ	0xFE6
 18961                           postdec1	equ	0xFE5
 18962                           fsr1h	equ	0xFE2
 18963                           fsr1l	equ	0xFE1
 18964                           indf2	equ	0xFDF
 18965                           postinc2	equ	0xFDE
 18966                           postdec2	equ	0xFDD
 18967                           plusw2	equ	0xFDB
 18968                           fsr2h	equ	0xFDA
 18969                           fsr2l	equ	0xFD9
 18970                           status	equ	0xFD8
 18971                           
 18972                           	psect	temp
 18973  00004A                     btemp:
 18974                           	opt stack 0
 18975  00004A                     	ds	1
 18976  0000                     int$flags	set	btemp
 18977                           tblptru	equ	0xFF8
 18978                           tblptrh	equ	0xFF7
 18979                           tblptrl	equ	0xFF6
 18980                           tablat	equ	0xFF5
 18981                           prodh	equ	0xFF4
 18982                           prodl	equ	0xFF3
 18983                           intcon	equ	0xFF2
 18984                           intcon2	equ	0xFF1
 18985                           postinc0	equ	0xFEE
 18986                           plusw0	equ	0xFEB
 18987                           wreg	equ	0xFE8
 18988                           indf1	equ	0xFE7
 18989                           postinc1	equ	0xFE6
 18990                           postdec1	equ	0xFE5
 18991                           fsr1h	equ	0xFE2
 18992                           fsr1l	equ	0xFE1
 18993                           indf2	equ	0xFDF
 18994                           postinc2	equ	0xFDE
 18995                           postdec2	equ	0xFDD
 18996                           plusw2	equ	0xFDB
 18997                           fsr2h	equ	0xFDA
 18998                           fsr2l	equ	0xFD9
 18999                           status	equ	0xFD8


Data Sizes:
    Strings     609
    Constant    156
    Data        3
    BSS         719
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      73
    BANK0           160     92     160
    BANK1           256     18     249
    BANK2           256      0     120
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf$3887	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_38(CODE[17]), STR_37(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_36(CODE[18]), STR_35(CODE[20]), STR_34(CODE[17]), STR_33(CODE[22]), 
		 -> STR_32(CODE[22]), STR_31(CODE[25]), STR_30(CODE[28]), STR_29(CODE[22]), 
		 -> STR_28(CODE[17]), STR_27(CODE[32]), STR_26(CODE[29]), STR_25(CODE[16]), 
		 -> STR_19(CODE[29]), STR_18(CODE[31]), STR_17(CODE[32]), STR_16(CODE[30]), 
		 -> STR_15(CODE[14]), STR_14(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    Source_END_DEVICE_INFO@SrAddr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 32
		 -> STR_35(CODE[20]), STR_30(CODE[28]), STR_27(CODE[32]), STR_26(CODE[29]), 
		 -> STR_25(CODE[16]), STR_19(CODE[29]), STR_18(CODE[31]), STR_17(CODE[32]), 
		 -> STR_16(CODE[30]), 

    sp__memset	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    EEPROM_Write@dest	PTR unsigned char  size(2) Largest target is 280
		 -> myConnectionIndex_in_PanCo(BANK0[1]), myPANID(BANK0[2]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), 
		 -> role(COMRAM[1]), conn_size(COMRAM[1]), ConnectionTable(BIGRAM[280]), 

    Read_MAC_Address@myAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    EEPROM_Read@dest	PTR unsigned char  size(2) Largest target is 280
		 -> myConnectionIndex_in_PanCo(BANK0[1]), myPANID(BANK0[2]), ConnMode(BANK0[1]), currentChannel(BANK0[1]), 
		 -> myLongAddress(BANK1[8]), role(COMRAM[1]), conn_size(COMRAM[1]), ConnectionTable(BIGRAM[280]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 280
		 -> ConnectionTable(BIGRAM[280]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    SW_Ack_SrED@Dest_Addr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 280
		 -> ConnectionTable(BIGRAM[280]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 280
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[280]), RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 280
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[280]), RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S1116$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK1[138]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    S1116$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK1[138]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    Forward_Packet_PANCr_to_EDy@fw_payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    Forward_Packet_PANCr_to_EDy@EDxAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    store_connection_tb@payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    Find_Index@DestAddr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    NVMalloc@location	PTR unsigned int  size(1) Largest target is 2
		 -> nvmmyIndex(BANK0[2]), nvmRole(BANK0[2]), nvmEdc(BANK0[2]), nvmOutFrameCounter(BANK0[2]), 
		 -> nvmConnectionTable(BANK0[2]), nvmConnMode(BANK0[2]), nvmCurrentChannel(BANK0[2]), nvmMyPANID(BANK0[2]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(1) Largest target is 2
		 -> myPANID(BANK0[2]), MAC_PANID(COMRAM[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(1) Largest target is 2
		 -> MiApp_StartConnection@tmp(COMRAM[2]), MiApp_ProtocolInit@tmp(BANK0[2]), P2PTasks@tmp(BANK0[2]), myNetworkAddress(COMRAM[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 40
		 -> TxBuffer(BANK1[40]), 

    S475$DestAddress	PTR unsigned char  size(2) Largest target is 280
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[280]), RxBuffer(BANK1[138]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 280
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[280]), RxBuffer(BANK1[138]), 

    S42$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S431$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK1[138]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    S431$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK1[138]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 


Critical Paths under _main in COMRAM

    _freezer_feature->_LCDDisplay
    _SYSTEM_Initialize->_DELAY_ms
    _LCD_Initialize->_DELAY_ms
    _run_star_demo->_LCDDisplay
    _Source_END_DEVICE_INFO->_sprintf
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _ButtonPressed->_MiWi_TickGet
    _STAR_DEMO_OPTIONS_MESSAGE->_LCDDisplay
    _Read_MAC_Address->_EEPROM_Read
    _MiApp_StartConnection->_MiWi_TickGet
    _NVMInit->_NVMalloc
    _MiMAC_Init->_InitMRF24J40
    _MiApp_SetChannel->_MiMAC_SetChannel
    _EEPROM_Read->_SPIPut2
    _store_connection_tb->_handle_lost_connection
    _DemoOutput_UnicastFail->_LCDDisplay
    _MiMAC_SendPacket->_InitMRF24J40
    _MiMAC_SetAltAddress->_PHYSetShortRAMAddr
    _InitMRF24J40->_MiMAC_SetChannel
    _PHYGetShortRAMAddr->_SPI1_Exchange8bit
    _PHYGetLongRAMAddr->_SPI1_Exchange8bit
    _MiMAC_SetChannel->_PHYSetLongRAMAddr
    _PHYSetShortRAMAddr->_SPI1_Exchange8bit
    _PHYSetLongRAMAddr->_SPI1_Exchange8bit
    _AddConnection->_EEPROM_Write
    _MiApp_ConnectionMode->_EEPROM_Write
    _EEPROM_Write->_SPIPut2
    _SPIGet2->_SPIPut2
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Update->_LCD_WriteCmd
    _LCD_Update->_LCD_WriteData
    _LCD_WriteData->_SPIPut2
    _LCD_Erase->_DELAY_ms
    _LCD_WriteCmd->_SPIPut2

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_PHYGetLongRAMAddr
    i2_PHYSetShortRAMAddr->i2_SPI1_Exchange8bit
    i2_PHYGetShortRAMAddr->i2_SPI1_Exchange8bit
    i2_PHYGetLongRAMAddr->i2_SPI1_Exchange8bit

Critical Paths under _main in BANK0

    _freezer_feature->_LCDDisplay
    _Run_Demo->_run_star_demo
    _run_star_demo->_MiApp_EstablishConnection
    _Source_END_DEVICE_INFO->_sprintf
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _MiApp_BroadcastPacket->_SendPacket
    _Initialize_Demo->_MiApp_EstablishConnection
    _STAR_DEMO_OPTIONS_MESSAGE->_LCDDisplay
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_Forward_Packet_PANCr_to_EDy
    _send_link_status->_SendPacket
    _SW_Ack_SrED->_SendPacket
    _MiApp_BroadcastConnectionTable->_SendPacket
    _Forward_Packet_PANCr_to_EDy->_MiApp_UnicastConnection
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _DemoOutput_UnicastFail->_LCDDisplay
    _Find_InActiveDevices->_MiApp_RemoveConnection
    _MiApp_RemoveConnection->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _Run_Demo->_run_star_demo
    _run_star_demo->_MiApp_EstablishConnection
    _Initialize_Demo->_MiApp_EstablishConnection

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 1981090
                                             17 BANK1      1     1      0
                _DemoOutput_Greeting
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                      1     1      0   20561
                                             23 BANK0      1     1      0
                      _ButtonPressed
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    5708
                           _DELAY_ms
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2896
                           _DELAY_ms
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0 1392094
                      _run_star_demo
 ---------------------------------------------------------------------------------
 (2) _run_star_demo                                       13    13      0 1392094
                                             85 BANK0      7     7      0
                                             12 BANK1      5     5      0
                      _ButtonPressed
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
                         _LCDDisplay
                          _LCD_Erase
                         _LCD_Update
              _MiApp_BroadcastPacket
          _MiApp_EstablishConnection
            _MiApp_UnicastConnection
                  _MiApp_UnicastStar
                       _MiWi_TickGet
                  _Process_RxMessage
          _STAR_DEMO_OPTIONS_MESSAGE
                            ___lbmod
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     779
                                             21 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _Process_RxMessage                                    1     1      0  407478
                                             80 BANK0      1     1      0
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
          _STAR_DEMO_OPTIONS_MESSAGE
             _Source_END_DEVICE_INFO
 ---------------------------------------------------------------------------------
 (4) _Source_END_DEVICE_INFO                               2     0      2   16634
                                             19 BANK0      2     0      2
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _DemoOutput_UpdateTxRx                                2     1      1   14297
                                             20 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (5) _LCDTRXCount                                          2     1      1   13850
                                             49 COMRAM     1     0      1
                                             19 BANK0      1     1      0
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastStar                                   14    14      0  404638
                                             80 BANK0      4     4      0
                                              0 BANK1      9     9      0
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_BroadcastPacket                                1     1      0   50288
                                             43 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     612
                                             31 COMRAM     8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      1     1      0  540002
                                             85 BANK0      1     1      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
                       _EEPROM_Write
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
              _MiApp_StartConnection
                   _Read_MAC_Address
          _STAR_DEMO_OPTIONS_MESSAGE
 ---------------------------------------------------------------------------------
 (3) _STAR_DEMO_OPTIONS_MESSAGE                            1     1      0   19901
                                             23 BANK0      1     1      0
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _Read_MAC_Address                                     5     3      2    3953
                                             26 COMRAM     5     3      2
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (2) _MiApp_StartConnection                                8     3      5    4724
                                             31 COMRAM     8     3      5
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   7     7      0   55887
                                              4 BANK0      7     7      0
                        _EEPROM_Read
                       _EEPROM_Write
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
                            _NVMInit
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    1791
                                             26 COMRAM     1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             5     2      3    1757
                                             21 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           4     1      3   24336
                                              0 BANK0      4     1      3
                       _InitMRF24J40
 ---------------------------------------------------------------------------------
 (2) _MiApp_SetChannel                                     1     1      0   16838
                                             30 COMRAM     1     1      0
                       _EEPROM_Write
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          4     0      4    3152
                                             22 COMRAM     4     0      4
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _MiApp_EstablishConnection                           18    17      1  405222
                                             80 BANK0      5     4      1
                                              0 BANK1     12    12      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0  353738
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            25    25      0  353738
                                             56 BANK0     24    24      0
                      _AddConnection
                       _EEPROM_Write
               _Find_InActiveDevices
                         _Find_Index
        _Forward_Packet_PANCr_to_EDy
     _MiApp_BroadcastConnectionTable
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                        _SW_Ack_SrED
                         _SendPacket
                      _isSameAddress
                   _send_link_status
                _store_connection_tb
 ---------------------------------------------------------------------------------
 (6) _store_connection_tb                                  8     6      2     975
                                             28 COMRAM     6     4      2
             _handle_lost_connection
 ---------------------------------------------------------------------------------
 (7) _handle_lost_connection                               7     7      0     192
                                             21 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (6) _send_link_status                                     1     1      0   50294
                                             43 BANK0      1     1      0
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _SW_Ack_SrED                                          2     0      2   50339
                                             43 BANK0      2     0      2
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                 8     8      0     408
                                             21 COMRAM     8     8      0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiApp_BroadcastConnectionTable                      12    12      0   52752
                                             43 BANK0     12    12      0
                         _SendPacket
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     848
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     872
                                             21 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _Forward_Packet_PANCr_to_EDy                          7     2      5   71581
                                             49 BANK0      7     2      5
             _DemoOutput_UnicastFail
            _MiApp_UnicastConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_UnicastConnection                              2     1      1   50991
                                             47 BANK0      2     1      1
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (8) _MiApp_UnicastAddress                                 4     0      4   50623
                                             43 BANK0      4     0      4
                         _SendPacket
 ---------------------------------------------------------------------------------
 (7) _DemoOutput_UnicastFail                               0     0      0   19859
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (6) _Find_Index                                           5     3      2     483
                                             21 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _Find_InActiveDevices                                 2     2      0   56458
                                             49 BANK0      2     2      0
             _MiApp_RemoveConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_RemoveConnection                               6     6      0   56152
                                             43 BANK0      6     6      0
                       _EEPROM_Write
                         _SendPacket
 ---------------------------------------------------------------------------------
 (7) _SendPacket                                          16    10      6   50246
                                             27 BANK0     16    10      6
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (8) _MiMAC_SendPacket                                    27    17     10   43386
                                              0 BANK0     27    17     10
                       _InitMRF24J40
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (3) _MiWi_TickGet                                        10     6      4     516
                                             21 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (9) _MiMAC_SetAltAddress                                  2     1      1    3864
                                             25 COMRAM     2     1      1
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (9) _InitMRF24J40                                        20    20      0   24035
                                             30 COMRAM    20    20      0
                   _MiMAC_SetChannel
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (10) _PHYGetShortRAMAddr                                  3     3      0     180
                                             22 COMRAM     3     3      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (10) _PHYGetLongRAMAddr                                   6     4      2     493
                                             22 COMRAM     6     4      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (10) _MiMAC_SetChannel                                    2     1      1   11598
                                             28 COMRAM     2     1      1
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (9) _PHYSetShortRAMAddr                                   3     2      1    3044
                                             22 COMRAM     3     2      1
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (9) _PHYSetLongRAMAddr                                    6     3      3    8144
                                             22 COMRAM     6     3      3
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (10) _SPI1_Exchange8bit                                   1     1      0      42
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        7     7      0    7458
                                             29 COMRAM     7     7      0
                       _EEPROM_Write
                  _Total_Connections
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     3      4     952
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0     276
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MiApp_ConnectionMode                                 2     2      0    5240
                                             29 COMRAM     2     2      0
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (8) _EEPROM_Write                                         7     3      4    5156
                                             22 COMRAM     7     3      4
                           _MacroNop
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (9) _SPIGet2                                              0     0      0      42
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (9) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   23039
                                             23 BANK0      2     1      1
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   22671
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   19859
                                             49 COMRAM     1     1      0
                                             19 BANK0      4     0      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    27     12    9740
                                             33 COMRAM    16     4     12
                                              0 BANK0     19    19      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     138
                                             21 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     566
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     566
                                             28 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1068
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           1     1      0     528
                                             23 COMRAM     1     1      0
                       _LCD_WriteCmd
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteData                                        1     1      0      84
                                             22 COMRAM     1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            0     0      0    3377
                           _DELAY_ms
                       _LCD_WriteCmd
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     481
                                             21 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteCmd                                         1     1      0      84
                                             22 COMRAM     1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (5) _SPIPut2                                              2     2      0      42
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _DELAY_ms                                            14    12      2    2812
                                             21 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _high_isr                                           14    14      0     859
                                              7 COMRAM    14    14      0
               _UserInterruptHandler
                i2_PHYGetLongRAMAddr
               i2_PHYGetShortRAMAddr
               i2_PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (16) i2_PHYSetShortRAMAddr                                3     2      1     245
                                              1 COMRAM     3     2      1
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (16) i2_PHYGetShortRAMAddr                                3     3      0      90
                                              1 COMRAM     3     3      0
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (16) i2_PHYGetLongRAMAddr                                 6     4      2     164
                                              1 COMRAM     6     4      2
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (17) i2_SPI1_Exchange8bit                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _UserInterruptHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DemoOutput_Greeting
     _DELAY_ms
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _Initialize_Demo
     _DemoOutput_Channel
       _DELAY_ms
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DemoOutput_ChannelError
     _EEPROM_Write
       _MacroNop
       _SPIGet2
         _SPIPut2
       _SPIPut2
     _MiApp_ConnectionMode
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Total_Connections
             _isSameAddress
           _EEPROM_Write
             _MacroNop
             _SPIGet2
               _SPIPut2
             _SPIPut2
           _Find_InActiveDevices
             _MiApp_RemoveConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                   _DELAY_ms
                   _LCD_WriteCmd
                     _SPIPut2
                   _memset
                 _LCD_Update
                   _LCD_WriteCmd
                     _SPIPut2
                   _LCD_WriteData
                     _SPIPut2
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
           _MiApp_BroadcastConnectionTable
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             ___awdiv
             ___awmod
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiMAC_DiscardPacket
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
           _isSameAddress
           _send_link_status
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
           _store_connection_tb
             _handle_lost_connection
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _InitMRF24J40
             _MiMAC_SetChannel
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _PHYGetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYGetShortRAMAddr
               _SPI1_Exchange8bit
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
     _MiApp_ProtocolInit
       _EEPROM_Read
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _MiApp_SetChannel
         _EEPROM_Write
           _MacroNop
           _SPIGet2
             _SPIPut2
           _SPIPut2
         _MiMAC_SetChannel
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
       _MiMAC_Init
         _InitMRF24J40
           _MiMAC_SetChannel
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _PHYGetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYGetShortRAMAddr
             _SPI1_Exchange8bit
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPI1_Exchange8bit
       _NVMInit
         _NVMalloc
     _MiApp_SetChannel
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _MiMAC_SetChannel
         _PHYSetLongRAMAddr
           _SPI1_Exchange8bit
         _PHYSetShortRAMAddr
           _SPI1_Exchange8bit
     _MiApp_StartConnection
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPI1_Exchange8bit
       _MiWi_TickGet
     _Read_MAC_Address
       _EEPROM_Read
         _SPIGet2
           _SPIPut2
         _SPIPut2
     _STAR_DEMO_OPTIONS_MESSAGE
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
   _Run_Demo
     _run_star_demo
       _ButtonPressed
         _MiWi_TickGet
       _DELAY_ms
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _LCD_Erase
             _DELAY_ms
             _LCD_WriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCD_WriteCmd
               _SPIPut2
             _LCD_WriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _MiApp_BroadcastPacket
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _MiApp_EstablishConnection
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _Total_Connections
               _isSameAddress
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _EEPROM_Write
                   _MacroNop
                   _SPIGet2
                     _SPIPut2
                   _SPIPut2
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                     _DELAY_ms
                     _LCD_WriteCmd
                       _SPIPut2
                     _memset
                   _LCD_Update
                     _LCD_WriteCmd
                       _SPIPut2
                     _LCD_WriteData
                       _SPIPut2
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPI1_Exchange8bit
                           _PHYSetShortRAMAddr
                             _SPI1_Exchange8bit
                         _PHYGetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYGetShortRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
       _MiApp_UnicastStar
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _Total_Connections
               _isSameAddress
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _EEPROM_Write
                   _MacroNop
                   _SPIGet2
                     _SPIPut2
                   _SPIPut2
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                     _DELAY_ms
                     _LCD_WriteCmd
                       _SPIPut2
                     _memset
                   _LCD_Update
                     _LCD_WriteCmd
                       _SPIPut2
                     _LCD_WriteData
                       _SPIPut2
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPI1_Exchange8bit
                           _PHYSetShortRAMAddr
                             _SPI1_Exchange8bit
                         _PHYGetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYGetShortRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _MiWi_TickGet
       _Process_RxMessage
         _DELAY_ms
         _DemoOutput_UpdateTxRx
           _LCDTRXCount
             _LCD_Erase
               _DELAY_ms
               _LCD_WriteCmd
                 _SPIPut2
               _memset
             _LCD_Update
               _LCD_WriteCmd
                 _SPIPut2
               _LCD_WriteData
                 _SPIPut2
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _Total_Connections
               _isSameAddress
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Find_InActiveDevices
               _MiApp_RemoveConnection
                 _EEPROM_Write
                   _MacroNop
                   _SPIGet2
                     _SPIPut2
                   _SPIPut2
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                     _DELAY_ms
                     _LCD_WriteCmd
                       _SPIPut2
                     _memset
                   _LCD_Update
                     _LCD_WriteCmd
                       _SPIPut2
                     _LCD_WriteData
                       _SPIPut2
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPI1_Exchange8bit
                           _PHYSetShortRAMAddr
                             _SPI1_Exchange8bit
                         _PHYGetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYGetShortRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
             _MiApp_BroadcastConnectionTable
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
               ___awdiv
               ___awmod
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             _isSameAddress
             _send_link_status
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _store_connection_tb
               _handle_lost_connection
         _STAR_DEMO_OPTIONS_MESSAGE
           _LCDDisplay
             _DELAY_ms
             _LCD_Erase
               _DELAY_ms
               _LCD_WriteCmd
                 _SPIPut2
               _memset
             _LCD_Update
               _LCD_WriteCmd
                 _SPIPut2
               _LCD_WriteData
                 _SPIPut2
             _sprintf
               ___lwdiv
               ___lwmod
                 ___lwdiv (ARG)
               ___wmul
               _isdigit
         _Source_END_DEVICE_INFO
           _DELAY_ms
           _LCD_Erase
             _DELAY_ms
             _LCD_WriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCD_WriteCmd
               _SPIPut2
             _LCD_WriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _STAR_DEMO_OPTIONS_MESSAGE
         _LCDDisplay
           _DELAY_ms
           _LCD_Erase
             _DELAY_ms
             _LCD_WriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCD_WriteCmd
               _SPIPut2
             _LCD_WriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       ___lbmod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _SYSTEM_Initialize
     _DELAY_ms
     _LCD_Initialize
       _DELAY_ms
       _LCD_WriteCmd
         _SPIPut2
   _TMR1_Initialize
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit

 _high_isr (ROOT)
   _UserInterruptHandler
   i2_PHYGetLongRAMAddr
     i2_SPI1_Exchange8bit
   i2_PHYGetShortRAMAddr
     i2_SPI1_Exchange8bit
   i2_PHYSetShortRAMAddr
     i2_SPI1_Exchange8bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0     118      35        7.4%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      78      10       46.9%
BITBANK1           100      0       0       7        0.0%
BANK1              100     12      F9       8       97.3%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5C      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      49       1       77.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     25A       6        0.0%
DATA                 0      0     372       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Feb 14 00:02:14 2016

                            _SPI1_Exchange8bit 3A62                         _PUSH_BUTTON_press_time 0100  
                                            _i 0040                                 _LCD_Initialize 2878  
                     ??_Source_END_DEVICE_INFO 0032                            EEPROM_Write@oldRFIE 001C  
                          P2PTasks@final_index 00A7                              _Process_RxMessage 340E  
                    __end_of_MiApp_UnicastStar 2B40                           ?_MiMAC_DiscardPacket 0001  
                               ?_isSameAddress 0016                             ?_SPI1_Exchange8bit 0001  
                                           l71 1F7E                                             l83 1FDA  
                                           l77 1FC6                                   ___awdiv@sign 001B  
                                           _t1 0104                                             _t2 0108  
                                  ?_LCD_Update 0001                            ___wmul@multiplicand 0018  
                          MiApp_ProtocolInit@i 006A                          Find_InActiveDevices@i 0092  
                           ?_Process_RxMessage 0001                      i2PHYSetShortRAMAddr@value 0002  
                      MiApp_RemoveConnection@i 0090                        MiApp_RemoveConnection@j 008B  
                                   _MiMAC_Init 3666                                _P2PCapacityInfo 00DE  
                                          l112 1220                                            l105 10A4  
                                          l114 12AE                                            l117 1374  
                                          l109 1162                                            l143 1A42  
                                          l160 1BCA                                            l165 1C44  
                                          l166 1C6C                                            l184 35BC  
                                          l506 06E0                                            l535 08CA  
                                          l464 08BA                                            l722 2866  
                                          l378 3402                                            l723 2858  
                                          l627 23AE                                            l539 21A0  
                                          l804 3A3E                                            l493 0576  
                                          l806 3A48                                            l567 1D9C  
                                          l677 24A6                                            l846 3462  
                                          l697 36DE                                            l849 347E  
                                          l798 3A6A                                    P2PTasks@tmp 00A1  
                  __size_of_PHYSetShortRAMAddr 0028                                _timer1ReloadVal 00D9  
                          ??_SPI1_Exchange8bit 0016                    __end_of_MiMAC_SetAltAddress 327A  
                                 ___awmod@sign 001B                                ??_AddConnection 001E  
                                  LCDDisplay@i 0032                                            prod 000FF3  
                                          wreg 000FE8                            ??_Process_RxMessage 0033  
                                NVMInit@result 001B              __end_of_MiApp_EstablishConnection 2442  
               __size_of_MiApp_StartConnection 0052                  __end_of_MiApp_StartConnection 32CC  
                            _Total_Connections 33C0                           i2_PHYSetShortRAMAddr 38B8  
                                         l1204 2BF8                                           l1117 2DB6  
                                         l1320 17DC                                           l1323 18E2  
                                         l1316 16CA                                           l1309 15D0  
                                         l1440 0D0E                                           l1360 08F0  
                                         l1442 0D34                                           l1434 0C9C  
                                         l1443 0D38                                           l1461 0E1C  
                                         l1445 0D58                                           l1391 0A46  
                                         l1376 0A3A                                           l1457 0EB6  
                                         l1377 0A02                                           l1394 0A80  
                                         l1395 0A84                                           l1900 365C  
                                         l1890 34E6           __size_of_Forward_Packet_PANCr_to_EDy 009A  
                                         STR_1 FF29                                           STR_2 FFDA  
                                         STR_3 FFCE                                           STR_5 FFC0  
                                         STR_9 FD95                         __size_of_ButtonPressed 0088  
                    DemoOutput_Channel@channel 0078                                           _TMR1 000FCE  
                                         _MiWi FCF9                             ?_Total_Connections 0001  
                    MiApp_StartConnection@Mode 0025                         MiApp_UnicastStar@SecEn 01E7  
                   MiMAC_SetChannel@offsetFreq 001D                                           _main 3952  
                              __end_of_SPIGet2 3AC6                                __end_of_NVMInit 2D92  
                                         _role 0048                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           indf1 000FE7  
                                         fsr1l 000FE1                                           indf2 000FDF  
                                         fsr2l 000FD9                                           btemp 004A  
                              __end_of_SPIPut2 3A50                             __size_of_LCD_Erase 0026  
       __end_of_MiApp_BroadcastConnectionTable 1F40        __size_of_MiApp_BroadcastConnectionTable 0216  
               _MiApp_BroadcastConnectionTable 1D2A                                 ??_InitMRF24J40 001F  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 018C                         __size_of_run_star_demo 04D0  
                    __end_of_SPI1_Exchange8bit 3A72                               __end_of_DELAY_ms 2878  
                        MiApp_ProtocolInit@tmp 0064                                  ?_LCD_WriteCmd 0001  
                                 _sprintf$3880 0061                                   _sprintf$3881 0063  
                                 _sprintf$3887 0065                            ??_Total_Connections 0016  
                       __end_of_LCD_Initialize 2942                                  _LCD_WriteData 3A72  
                    __end_of_Process_RxMessage 345A                                   ___param_bank 000010  
                            _PHYGetLongRAMAddr 32CC                          ??_MiMAC_DiscardPacket 0016  
                         __end_of_EEPROM_Write 2F18                             ?_PHYGetLongRAMAddr 0017  
                             __end_of_P2PTasks 08D0                   __end_of_MiApp_DiscardMessage 3ACE  
                             _send_link_status 356E                                  __CFG_PLLDIV$2 000000  
                                   _Find_Index 2C70                                          l11101 1F4E  
                                        l11111 1FA2                                          l11103 1F5A  
                                        l10153 374E                                          l12011 33C4  
                                        l11123 1FF0                                          l11109 1F96  
                                        l12101 25F2                                          l11135 202A  
                                        l11311 1B22                                          l11303 1B0A  
                                        l11223 1A12                                          l11215 1A02  
                                        l12031 3090                                          l12017 3400  
                                        l11153 20DE                                          l11401 1CCA  
                                        l12105 25FE                                          l12113 263E  
                                        l12201 319A                                          l11331 1B8C  
                                        l11315 1B32                                          l11227 1A1C  
                                        l11501 34DC                                          l11413 1CDA  
                                        l11237 1A3C                                          l12213 31C2  
                                        l12205 31AC                                          l12037 30C2  
                                        l13005 0872                                          l11511 363C  
                                        l12063 37C0                                          l11343 1BCC  
                                        l11351 1BF2                                          l12151 2FB6  
                                        l12039 30C4                                          l13015 0876  
                                        l11513 3640                                          l11177 348A  
                                        l11257 1A5E                                          l12129 268E  
                                        l12161 2FD2                                          l12145 2FA6  
                                        l12209 31B6                                          l12313 1314  
                                        l12225 1014                                          l13017 08BC  
                                        l13105 388E                                          l11371 1C46  
                                        l11267 1A74                                          l12411 2CF2  
                                        l12243 103E                                          l12235 101C  
                                        l12227 1018                                          l13203 2428  
                                        l13131 2B3C                                          l11517 3652  
                                        l11509 3634                                          l11621 0A26  
                                        l11605 09C6                                          l12069 37E0  
                                        l11293 1AEC                                          l12085 25A2  
                                        l12413 2CF4                                          l12157 2FC6  
                                        l12173 2FF6                                          l12333 13EA  
                                        l12253 107A                                          l11463 3830  
                                        l11711 0BD0                                          l11623 0A40  
                                        l11359 1C1A                                          l11295 1AF2  
                                        l11287 1AD6                                          l12159 2FCE  
                                        l12343 142A                                          l12327 13B4  
                                        l12351 1430                                          l12239 1036  
                                        l12431 26F8                                          l13207 2434  
                                        l13303 2134                                          l13119 2AE2  
                                        l11473 39FE                                          l11713 0BD4  
                                        l11633 0A6C                                          l11625 0A44  
                                        l11617 0A06                                          l11393 1CA6  
                                        l11385 1C90                                          l12177 3002  
                                        l12169 2FEC                                          l12193 3182  
                                        l12521 1D4A                                          l12361 146A  
                                        l12281 11C4                                          l12353 1454  
                                        l12441 279E                                          l13401 2E1C  
                                        l13049 3982                                          l13129 2B36  
                                        l11459 3820                                          l11491 34BE  
                                        l11643 0A9A                                          l11651 0AC2  
                                        l11627 0A4A                                          l11571 08FA  
                                        l11379 1C70                                          l12363 1470  
                                        l12339 1414                                          l12267 1106  
                                        l12427 26D2                                          l13075 3684  
                                        l13331 223A                                          l13235 2DDA  
                                        l13243 2E18                                          l11901 3014  
                                        l11493 34C2                                          l11805 0DBA  
                                        l11813 0DDA                                          l11725 0BFC  
                                        l11741 0C28                                          l11661 0AF8  
                                        l11645 0AAA                                          l11573 08FE  
                                        l11581 090C                                          l11565 08D8  
                                        l12621 2496                                          l12613 2486  
                                        l12605 2448                                          l11397 1CAC  
                                        l12197 318E                                          l12189 3176  
                                        l12365 147A                                          l12701 027E  
                                        l13157 2338                                          l13149 230A  
                                        l13093 378A                                          l13341 228A  
                                        l13317 21A4                                          l11823 0E00  
                                        l11751 0C60                                          l11727 0C00  
                                        l11743 0C3A                                          l11655 0AD6  
                                        l11639 0A8A                                          l11575 0902  
                                        l12631 24A2                                          l12199 3196  
                                        l12527 1D98                                          l12519 1D44  
                                        l12375 1480                                          l12711 02D8  
                                        l13087 3776                                          l13415 2E6A  
                                        l11905 302C                                          l11489 34B6  
                                        l11833 0E2C                                          l11817 0DE4  
                                        l11665 0B06                                          l11673 0B1A  
                                        l11577 0906                                          l12617 248E  
                                        l12465 2B9C                                          l12545 1DFC  
                                        l12377 14AA                                          l13193 23EC  
                                        l13329 21CC                                          l13265 344A  
                                        l13601 193A                                          l13513 15DE  
                                        l13505 15BA                                          l11923 3068  
                                        l11907 303E                                          l11763 0CA0  
                                        l11747 0C4E                                          l11691 0B96  
                                        l11659 0AE6                                          l11675 0B56  
                                        l12563 1E90                                          l12299 1284  
                                        l13371 327E                                          l13603 193E  
                                        l11925 307A                                          l11837 0E5C  
                                        l11757 0C76                                          l11669 0B14  
                                        l11589 0944                                          l11597 099E  
                                        l12653 252E                                          l12629 249C  
                                        l12397 2C74                                          l12581 1F00  
                                        l12557 1E7A                                          l13269 3454  
                                        l13285 38FE                                          l13277 38E8  
                                        l13541 1788                                          l13525 1758  
                                        l13605 1942                                          l11919 3050  
                                        l11871 0F86                                          l11863 0F30  
                                        l11855 0EB8                                          l11839 0E62  
                                        l11783 0D52                                          l11775 0D12  
                                        l11687 0B84                                          l13471 3608  
                                        l11935 2EA4                                          l12639 24AC  
                                        l12479 2BD4                                          l12575 1EC0  
                                        l12815 046E                                          l12727 034A  
                                        l13551 17D6                                          l13519 165C  
                                        l13607 194A                                          l11881 0FBA  
                                        l11857 0EF6                                          l11873 0F98  
                                        l11849 0EA2                                          l11769 0CD2  
                                        l11697 0BA4                                          l13473 361C  
                                        l11961 2EDC                                          l12497 320A  
                                        l12489 31CE                                          l12593 1F1E  
                                        l12585 1F08                                          l12577 1EC4  
                                        l12913 0688                                          l12905 0636  
                                        l12809 045A                                          l12745 0384  
                                        l13385 32C0                                          l13617 1964  
                                        l13537 1780                                          l13609 1952  
                                        l11867 0F54                                          l11699 0BA8  
                                        l12499 3218                                          l12579 1EC6  
                                        l12907 065A                                          l12843 04EE  
                                        l12827 0490                                          l12747 038A  
                                        l12739 036C                                          l13571 1866  
                                        l13635 19EE                                          l13811 396C  
                                        l11877 0FA6                                          l11789 0D68  
                                        l12597 1F36                                          l12941 0702  
                                        l12933 06E6                                          l12925 06CA  
                                        l12773 0402                                          l12765 03CA  
                                        l12693 023C                                          l13549 17CE  
                                        l13493 156C                                          l11799 0DA6  
                                        l11887 0FD6                                          l11975 2F06  
                                        l12855 052A                                          l12839 04E6  
                                        l12791 041A                                          l12759 03AE  
                                        l12687 01FC                                          l13583 18C2  
                                        l13575 186E                                          l13479 1544  
                                        l13743 3852                                          l11889 0FEE  
                                        l12937 06FA                                          l12881 0594  
                                        l12769 03D2                                          l12777 0408  
                                        l13497 1574                                          l13489 1562  
                                        l11995 351C                                          l12963 0780  
                                        l12955 0774                                          l12867 054C  
                                        l13595 1902                                          l13755 3860  
                                        l12981 07DC                                          l12973 07A8  
                                        l12949 076E                                          l12893 0612  
                                        l12877 058C                                          l13791 2C56  
                                        l13775 2C12                                          l12993 07F8  
                                        l12897 0618                                          l13787 2C40  
                                        l12997 0800                                          l12989 07F0  
                                        ?_main 0001                                __end_of___awdiv 300C  
                                        STR_20 FFE6                  MiApp_EstablishConnection@Mode 00B0  
                                        STR_21 FE9A                                          STR_14 FFA2  
                                        STR_22 FEB6                                          STR_30 FE7E  
                                        STR_23 FFEF                                          STR_15 FFB2  
                                        STR_31 FED0                                          STR_32 FEE9  
                                        STR_16 FE26                                          STR_33 FEE9  
                                        STR_25 FF92                                          STR_17 FDC7  
                                        STR_34 FF70                                          STR_26 FE44  
                                        STR_18 FE07                                          STR_35 FF15  
                                        STR_19 FE61                                          STR_27 FDE7  
                                        STR_28 FF81                                          STR_36 FF3C  
                              __end_of___awmod 31CC                                          STR_37 FF4E  
                                        STR_29 FEFF                                          STR_38 FF5F  
                              __end_of___lbmod 3906                                          u11120 1D18  
                                        u12005 2F14                                          u12006 2F16  
                                        u11320 29AA                                          u11240 2952  
                                        u11260 296A                                          u13020 0398  
                              ___awdiv@divisor 0018                                          u11341 29DA  
                                        u13030 03A4                                          _T1CON 000FCD  
                                        u10625 33BC                                          u10626 33BE  
                                        u11338 29AE                                          u11258 2956  
                                        u10635 38B4                                          u11700 0D04  
                                        u10636 38B6                                          u10645 37B8  
                                        u11285 2984                                          u10646 37BA  
                                        u11286 2988                                          u11278 296E  
                                        u10655 3318                                          u11295 2990  
                                        u10656 331A                                          u11296 2994  
                                        u12360 100C                                          u11900 0FBA  
                                        u13500 2386                                    LCD_Update@i 0018  
                                        u10870 1A30                                          u13600 2E14  
                                        u13460 2B32                                          u12920 02F8  
                                        u13705 22A6                                          u12850 0228  
                                        u13706 22AA                                          u12940 0320  
                                        u12860 0266                                          u12935 030E  
                                        u12928 02FC                                          u13920 19B2  
                                        u12937 0312                                          u12890 02C2  
                                        u12965 033A                                          u12958 0324  
                                        u12967 033E                                __end_of___lwdiv 34F0  
                              __end_of___lwmod 3666                                          i2l213 004C  
                                        i2l226 0142                                ___awdiv@counter 001A  
                                        i2l798 3A9A                            ??_PHYGetLongRAMAddr 0019  
                                        _TMR1H 000FCF                                          _TMR0L 000FD6  
                                        _TMR1L 000FCE                               SendPacket@tParam 0084  
                                P2PTasks@tick2 00A3                                  P2PTasks@tick3 00A8  
                       ?_DemoOutput_UpdateTxRx 0074                     __end_of_PHYGetShortRAMAddr 37BE  
                    __end_of_Total_Connections 340E                                          _RxNum 00E1  
                       run_star_demo@select_ed 01F7                                          _TxNum 00E3  
                          __size_of_LCDDisplay 0040                  __size_of_MiApp_ConnectionMode 0034  
                              __end_of_dpowers FD8D                          ?i2_PHYSetShortRAMAddr 0002  
                             SendPacket@status 0082                     store_connection_tb@payload 001D  
                __size_of_MiApp_UnicastAddress 001C                                    _SW_Ack_SrED 3708  
                              __end_of_isdigit 3A06                                          _tick1 00CA  
                                        _tick4 00CE                        __end_of_TMR1_Initialize 3A20  
                             __end_of_NVMalloc 3766                                          tablat 000FF5  
                                InitMRF24J40@i 0032                                  InitMRF24J40@j 0030  
                               ButtonPressed@t 0024                    __end_ofi2_SPI1_Exchange8bit 3AA2  
                                        plusw0 000FEB                                          plusw2 000FDB  
                          __size_of_LCD_Update 0078                        ?_MiApp_RemoveConnection 0001  
                                        status 000FD8                                __end_of_sprintf 0FFA  
                       run_star_demo@update_ed 01F4                               EEPROM_Write@addr 0019  
                             EEPROM_Write@dest 0017                      __end_of_PHYGetLongRAMAddr 331E  
                               ??_LCD_WriteCmd 0017                                 ?_LCD_WriteData 0001  
                    __size_of_MiMAC_SetChannel 003E                           __size_of_EEPROM_Read 002C  
                    __size_of_Read_MAC_Address 0080                    __end_of_DemoOutput_Greeting 39B2  
                              ?_LCD_Initialize 0001                                   __end_of_MiWi FD77  
                              __initialization 2F18                                ??_isSameAddress 001A  
                    __size_of_MiMAC_SendPacket 0332           STAR_DEMO_OPTIONS_MESSAGE@NetworkRole 0077  
                             __end_of_MacroNop 3AD6                                   __end_of_main 3972  
                      handle_lost_connection@i 001C                     __size_of_MiApp_UnicastStar 009A  
                                high_isr@flags 0012                __size_of_Source_END_DEVICE_INFO 006E  
                                _ButtonPressed 2D92                              _MACCurrentChannel 00DC  
                    PHYGetShortRAMAddr@address 0017         MiApp_UnicastConnection@ConnectionIndex 0090  
                                       ??_main 0033                                    ?_MiMAC_Init 0060  
                      _DemoOutput_ChannelError 3AD8                                  __activetblptr 000002  
                            __end_of_LCD_Erase 3952                                  _run_star_demo 1528  
                         __end_of_MiWi_TickGet 34A6                        MiApp_SetChannel@channel 001F  
                         store_connection_tb@i 0022                           store_connection_tb@j 0021  
                 __size_of_store_connection_tb 00DC                      PHYGetShortRAMAddr@tmpRFIE 0019  
                             __end_of_Run_Demo 3AD2              MiApp_ProtocolInit@bNetworkFreezer 0066  
                         _MiMAC_ReceivedPacket 0FFA                      PHYSetShortRAMAddr@address 0018  
                                   _SendPacket 2942                                      ??_SPIGet2 0017  
                                    ??_NVMInit 001B                                         _EECON2 000FA7  
                                       _ANCON0 000F48                                         _ANCON1 000F49  
                                    ??_SPIPut2 0016                               ___awdiv@dividend 0016  
                     ?_MiApp_UnicastConnection 008F                                 P2PTasks@p_1519 00AD  
                                       _T1GCON 000F9A                 __end_of_MiApp_RemoveConnection 26CE  
                               __CFG_WDTEN$OFF 000000                                         i2l8031 006E  
                                       i2l8051 00F6                                         i2l8035 0076  
                                       i2l8027 0054                                         i2l8047 00C2  
                                       i2l8055 0138                                         i2l8063 0164  
                                       i2l8057 014C                                         i2l8075 0174  
                                       i2l8059 0156                    __end_ofi2_PHYGetLongRAMAddr 3370  
                                       _OSCCON 000FD3                                         _RPOR21 000EDB  
                                       _RPINR1 000EE7                                         _RPOR19 000ED9  
                    PHYSetShortRAMAddr@tmpRFIE 0019                    i2PHYGetLongRAMAddr@toReturn 0006  
              MiApp_StartConnection@ChannelMap 0021                          SPI1_Exchange8bit@data 0016  
                         __size_of_LCDTRXCount 003E                  __size_of_UserInterruptHandler 0002  
                      ?_DemoOutput_UnicastFail 0001                     __size_of_SPI1_Exchange8bit 0010  
                               P2PTasks@status 00AE                                 __CFG_XINST$OFF 000000  
                                       _TxData 00E2                     __size_of_Process_RxMessage 004C  
                             LCD_WriteCmd@data 0017                               __end_of_high_isr 018C  
                                       ___wmul 3906                        ??_MiApp_BroadcastPacket 0033  
                                    ??___awdiv 001A                                 ?_ButtonPressed 0001  
                                    ??___awmod 001A                                      ??___lbmod 0017  
                     __size_of_freezer_feature 0028                      __size_of_MiApp_SetChannel 0028  
                                    ??___lwdiv 001A                                      ??___lwmod 0021  
                                       _memset 3816                                    ?_Find_Index 0016  
                                       clear_0 2F20                                         clear_1 2F32  
                                       clear_2 2F3E                                         clear_3 2F4A  
                                       clear_4 2F56                               ___awdiv@quotient 001C  
                                       _nvmEdc 00F2                                ___awmod@divisor 0018  
                              ___awmod@counter 001A                                   NVMalloc@size 0016  
                               ?_run_star_demo 0001                           __end_of_InitMRF24J40 2126  
                                 __pdataCOMRAM 0049                                      ??_isdigit 0016  
                               LCDDisplay@text 0073                                   __mediumconst FCF8  
                        ?_MiMAC_ReceivedPacket 0001                    __size_of_DemoOutput_Channel 003E  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                   __size_of_Total_Connections 004E                                         tblptru 000FF8  
                       ??i2_PHYSetShortRAMAddr 0003                    ??_MiApp_EstablishConnection 00B1  
                     MiApp_StartConnection@tmp 0026                                      ?_DELAY_ms 0016  
                                   _TxSynCount 00E4                                      ??_sprintf 002E  
                       _Source_END_DEVICE_INFO 30F6                               ?_TMR1_Initialize 0001  
                            _SYSTEM_Initialize 29FC                                      ?_P2PTasks 0001  
                              ___lbmod@divisor 0016                           _MiApp_DiscardMessage 3AC6  
                          _PUSH_BUTTON_pressed 00E0                                     __accesstop 0060  
                      __end_of__initialization 2F86                                ___lbmod@counter 0018  
                __size_of_Find_InActiveDevices 0058                              EEPROM_Write@count 001A  
               __end_of_DemoOutput_UnicastFail 3A62                                ??_LCD_WriteData 0017  
                                    P2PTasks@i 00AF                                      P2PTasks@p 00AC  
                           ?_SYSTEM_Initialize 0001                   i2PHYGetShortRAMAddr@toReturn 0003  
                          __size_of_MiMAC_Init 003A                                  ___rparam_used 000001  
                               _chk_sel_status 00E5                               _LatestConnection 00DB  
                   __size_of_PHYGetLongRAMAddr 0052  MiApp_BroadcastConnectionTable@broadcast_count 0093  
                        __size_of_EEPROM_Write 007E                                   ??_LCDDisplay 0032  
                   _myConnectionIndex_in_PanCo 00FD                                 __pcstackCOMRAM 0001  
                MiMAC_ReceivedPacket@bIntraPAN 001D          Forward_Packet_PANCr_to_EDy@fw_payload 0091  
                               high_isr@RxBank 0014                                   __pidataBANK0 3AD6  
                          ??_SYSTEM_Initialize 0024                       __size_of_Initialize_Demo 0096  
                    ??_DemoOutput_ChannelError 0016                                   ??_LCD_Update 0018  
                   i2PHYGetLongRAMAddr@address 0002                        run_star_demo@switch_val 01F6  
                 ?_Forward_Packet_PANCr_to_EDy 0091                                      ?_NVMalloc 0016  
                   SendPacket@DestinationPANID 007B                                _ConnectionTable 0278  
              __end_of_MiApp_UnicastConnection 36D4                           __end_of_LCD_WriteCmd 3A92  
                   i2PHYGetLongRAMAddr@tmpRFIE 0007                          InitMRF24J40@_dcnt_705 0024  
                                   ??_DELAY_ms 0018                      _END_DEVICES_Short_Address 0200  
                                  ?_SendPacket 007B                             __end_of_LCDDisplay 3530  
                    __end_of_SYSTEM_Initialize 2AA6                                   sprintf@width 006E  
                        isSameAddress@Address1 0016                          isSameAddress@Address2 0018  
                                    ?_MacroNop 0001                                   _EEPROM_Write 2E9A  
                                   __pbssBANK0 00BC                                     __pbssBANK1 0100  
                                   __pbssBANK2 0200                          ?_MiApp_DiscardMessage 0001  
                     __end_of_send_link_status 35AC                                     ??_P2PTasks 0098  
                  __size_of_MiApp_ProtocolInit 01BC                            __size_of_Find_Index 0094  
                           __end_of_LCD_Update 3084                      SendPacket@SecurityEnabled 0080  
                               isSameAddress@i 001C                     MiApp_BroadcastPacket@SecEn 008B  
                __size_ofi2_PHYGetShortRAMAddr 002C                                P2PTasks@FW_Stat 00A0  
                          InitMRF24J40@_ms_706 002C                               _MiMAC_SetChannel 35AC  
                           MiMAC_SendPacket@t1 006E                             MiMAC_SendPacket@t2 0072  
                    _MiApp_EstablishConnection 22E2                       MiMAC_SetAltAddress@PANID 001A  
                             _Read_MAC_Address 2E1A                     PHYGetShortRAMAddr@toReturn 0018  
                              ??_ButtonPressed 0020                               _MiMAC_SendPacket 19F8  
                                    ?_Run_Demo 0001                                        ?___wmul 0016  
                        __size_of_MiWi_TickGet 004C                                        ?_memset 0016  
                              ??_run_star_demo 00B5                     __end_of_PHYSetShortRAMAddr 38B8  
             run_star_demo@sw_layer_ack_status 01F3                                     ??_NVMalloc 0019  
                      ??_DemoOutput_UpdateTxRx 0033                              ??_freezer_feature 0033  
                ??_Forward_Packet_PANCr_to_EDy 0033                         ??_MiMAC_ReceivedPacket 0016  
                           __CFG_OSC$INTOSCPLL 000000                                        _LCDText 01BE  
                              __CFG_WDTPS$2048 000000                          __end_of_AddConnection 2598  
                                      _RPINR21 000EFB                                 _failureCounter 00D5  
                                      _SSP1BUF 000FC9                                        _SSP2BUF 000F75  
                                      _SPIGet2 3ABC                                   ?_SW_Ack_SrED 008B  
                                      _NVMInit 2D04                                        _SPIPut2 3A3A  
                                    ?_high_isr 0001                                     ??_MacroNop 0016  
                 __size_of_MiMAC_SetAltAddress 0056             __size_of_STAR_DEMO_OPTIONS_MESSAGE 0020  
                        _MiApp_StartConnection 327A                        i2SPI1_Exchange8bit@data 0001  
                             ??_LCD_Initialize 0024                     ?_STAR_DEMO_OPTIONS_MESSAGE 0001  
                  AddConnection@connectionSlot 0023                                _timerExtension1 0041  
                              _timerExtension2 0042                       MiApp_ConnectionMode@Mode 001F  
                             _AdditionalNodeID 00FE                    __end_of_MiMAC_DiscardPacket 3A3A  
                              P2PTasks@tmpTick 009C                             _PHYGetShortRAMAddr 3792  
                                   DELAY_ms@ms 0016                                   _MiWi_TickGet 345A  
                                      __Hparam 0000                            _store_connection_tb 26CE  
                                      __Lparam 0000                   __end_of_MiApp_ConnectionMode 3708  
                 __end_of_MiApp_UnicastAddress 39EA                                     ??_Run_Demo 0033  
                            LCD_WriteData@data 0017                                        ___awdiv 2F94  
                                      ___awmod 3164                                        ___lbmod 38E0  
                          ?_PHYGetShortRAMAddr 0001                                __size_of___wmul 0026  
                             _MiApp_SetChannel 3868                            __size_of_SendPacket 00BA  
                                      ___lwdiv 34A6                                        ___lwmod 3628  
                     ??_handle_lost_connection 0016                          __size_of_InitMRF24J40 01E6  
                                      __pcinit 2F18                                __size_of_memset 002A  
               DemoOutput_ChannelError@channel 0001                                        __ramtop 0F00  
                                      __ptext0 3952                                        __ptext1 3840  
                                 ??_MiMAC_Init 0033                                        __ptext2 3A06  
                                      __ptext3 29FC                                        __ptext4 2878  
                                      __ptext5 3ACE                                        __ptext6 1528  
                                      __ptext7 38E0                                        __ptext8 340E  
                                      __ptext9 30F6                                        _myPANID 00EA  
                            __end_of_hexpowers FD95                                      _T1CONbits 000FCD  
                                      _dpowers FD83                  Initialize_Demo@freezer_enable 00B5  
                     ??_MiApp_MessageAvailable 0033                                        _rec_ack 00E9  
                                      _isdigit 39EA                              ??_Initialize_Demo 0033  
                                _myLongAddress 01DF                                      _MAC_PANID 0043  
                             ___awmod@dividend 0016                           ?_store_connection_tb 001D  
                       DemoOutput_Channel@Step 0077                                        _nvmRole 00F8  
                                    _P2PStatus 00DF                                      _LCD_Erase 392C  
                                  _MyindexinPC 00DD                           ??_PHYGetShortRAMAddr 0017  
                   __size_of_SYSTEM_Initialize 00AA                                        _sprintf 08D0  
                       ??_MiApp_DiscardMessage 0016                                     ??_high_isr 0008  
                         end_of_initialization 2F86                   MiApp_RemoveConnection@j_1690 008D  
                            __end_of_octpowers FD83                                  ??_EEPROM_Read 001B  
                                      memset@c 0018                                        memset@n 001A  
                                      memset@p 001C                  MiMAC_SendPacket@MACPayloadLen 0069  
                                __Lmediumconst FCF8                                LCDDisplay@delay 0076  
                                   _nvmMyPANID 00F4              __end_of_STAR_DEMO_OPTIONS_MESSAGE 3992  
                              InitMRF24J40@_ms 0028                                LCDDisplay@value 0075  
                                 _InitMRF24J40 1F40                             __end_of_MiMAC_Init 36A0  
                 __size_ofi2_SPI1_Exchange8bit 0010                   MiApp_UnicastConnection@SecEn 008F  
             __size_of_MiApp_UnicastConnection 0034                        MiMAC_SetChannel@channel 001E  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc1 000FE6  
                                      postinc2 000FDE                          __end_of_isSameAddress 37EA  
         DELAY_ms@cyclesRequiredForEntireDelay 0020                 __size_of_MiApp_BroadcastPacket 001C  
                                 ??_Find_Index 0018                     run_star_demo@PressedButton 01F5  
                __end_of_MiApp_BroadcastPacket 39CE                          __size_of_LCD_WriteCmd 0010  
                 __size_of_DemoOutput_Greeting 0020                                      _PORTBbits 000F81  
                             NVMalloc@location 0018                   __end_of_UserInterruptHandler 3ADC  
                        ??_store_connection_tb 001F                                     _nvmmyIndex 00FA  
                      ?_Source_END_DEVICE_INFO 0073                               ___lbmod@dividend 0017  
                                    _TRISAbits 000F92                                      _TRISBbits 000F93  
                                    _TRISCbits 000F94                                      _TRISDbits 000F95  
                                    _TRISEbits 000F96                                     ?_LCD_Erase 0001  
                                    _BankIndex 0049                         ?_MiApp_StartConnection 0020  
                            __size_of_DELAY_ms 00CE                                  ??_LCDTRXCount 0033  
                                  ___lbmod@rem 0019                     MiMAC_SendPacket@transParam 0060  
                   MiMAC_SetAltAddress@Address 001B                      MiApp_UnicastAddress@SecEn 008E  
                           __end_of_Find_Index 2D04                              __size_of_P2PTasks 0740  
                                 _LCD_WriteCmd 3A82                   __size_ofi2_PHYGetLongRAMAddr 0052  
                          __end_of_EEPROM_Read 3792                  freezer_feature@PressedButton1 0077  
                               __end_of___wmul 392C                __size_of_handle_lost_connection 0072  
                     PHYGetLongRAMAddr@address 0017                   __end_of_Find_InActiveDevices 3224  
                                __pidataCOMRAM 3ADC             __size_of_MiApp_EstablishConnection 0160  
                               __end_of_memset 3840                     __end_of_DemoOutput_Channel 3628  
               __end_of_Source_END_DEVICE_INFO 3164                      Read_MAC_Address@myAddress 001B  
                     PHYSetLongRAMAddr@address 0017                __size_of_MiApp_MessageAvailable 000C  
                     __end_of_MiMAC_SetChannel 35EA                              __size_of_NVMalloc 002E  
                          start_initialization 2F18                       __end_of_Read_MAC_Address 2E9A  
                     PHYGetLongRAMAddr@tmpRFIE 001C                       __end_of_MiMAC_SendPacket 1D2A  
                                 ??_SendPacket 0081                           _MiApp_ConnectionMode 36D4  
                 MiMAC_SendPacket@headerLength 0078                           _MiApp_UnicastAddress 39CE  
                __size_ofi2_PHYSetShortRAMAddr 0028                       PHYSetLongRAMAddr@tmpRFIE 001C  
                         __size_of_SW_Ack_SrED 0030                                high_isr@results 0011  
                      EEPROM_Write@PageCounter 001D                              ?_send_link_status 0001  
            Forward_Packet_PANCr_to_EDy@status 0096                              __size_of_MacroNop 0004  
                           ??_send_link_status 0033                                 _currentChannel 00FC  
                        __end_of_LCD_WriteData 3A82                            __end_of_LCDTRXCount 356E  
  MiApp_EstablishConnection@connectionInterval 01E9                       __size_of_TMR1_Initialize 001A  
                              _freezer_feature 3840                                       ??___wmul 001A  
            MiApp_UnicastAddress@PermanentAddr 008D                    i2PHYGetShortRAMAddr@address 0002  
                                  __pdataBANK0 00FE                             __end_of_SendPacket 29FC  
                          _MiMAC_SetAltAddress 3224                                       ??_memset 001C  
                            __size_of_Run_Demo 0004                   __end_ofi2_PHYGetShortRAMAddr 3816  
               __size_of_DemoOutput_UpdateTxRx 000E                                    __pbssBIGRAM 0278  
                      MiWi_TickGet@currentTime 001C                  __end_of_DemoOutput_UpdateTxRx 3AB0  
                  i2PHYGetShortRAMAddr@tmpRFIE 0004                                    __pbssCOMRAM 0033  
                     ??_MiApp_RemoveConnection 0033                                  __pcstackBANK0 0060  
                                __pcstackBANK1 01E7                    i2PHYSetShortRAMAddr@address 0003  
                        ?_MiApp_ConnectionMode 0001                            SendPacket@Broadcast 0083  
                                  ??_LCD_Erase 0024         MiApp_UnicastAddress@DestinationAddress 008B  
                        ?_MiApp_UnicastAddress 008B                                   _isdigit$4111 0017  
                                     ?_SPIGet2 0001                                       ?_NVMInit 0001  
                   __end_of_MiApp_ProtocolInit 22E2                                       ?_SPIPut2 0001  
                           _PHYSetShortRAMAddr 3890                     MiApp_EstablishConnection@i 01F2  
                     __end_of_MiApp_SetChannel 3890                              Read_MAC_Address@i 001F  
                       _handle_lost_connection 3084                           ?_MiMAC_SetAltAddress 001A  
                       PHYSetLongRAMAddr@value 0019                                    MiMAC_Init@i 0063  
                      PHYSetShortRAMAddr@value 0017                              __size_of_high_isr 0184  
                                  sprintf@flag 0071                    i2PHYSetShortRAMAddr@tmpRFIE 0004  
                 MiMAC_ReceivedPacket@addrMode 001B                    ??_STAR_DEMO_OPTIONS_MESSAGE 0033  
                                  _EEPROM_Read 3766                                    sprintf@prec 006D  
                          ?_PHYSetShortRAMAddr 0017                            MiMAC_SendPacket@loc 007A  
                       _MiApp_MessageAvailable 3AB0                           _UserInterruptHandler 3ADA  
                            MiMAC_SendPacket@i 0079                               ___lwdiv@dividend 0016  
                      _MiApp_UnicastConnection 36A0                       ?_DemoOutput_ChannelError 0001  
                                    __pintcode 0008                                  __pmediumconst FCF8  
                              _Initialize_Demo 2BDA                          __end_of_ButtonPressed 2E1A  
                                     ?___awdiv 0016                                       ?___awmod 0016  
                                     ?___lbmod 0016                                       ?___lwdiv 0016  
                                     ?___lwmod 001D                                      _end_nodes 00E7  
                                    _conn_size 0047                          __end_of_run_star_demo 19F8  
                 Forward_Packet_PANCr_to_EDy@i 0097                           ??_PHYSetShortRAMAddr 0018  
                            _PHYSetLongRAMAddr 3370                                       ?_isdigit 0001  
                                     SPIPut2@v 0016                  __size_of_MiMAC_ReceivedPacket 052E  
                           ?_PHYSetLongRAMAddr 0017                            i2_SPI1_Exchange8bit 3A92  
                                     _DELAY_ms 27AA                            AddConnection@status 0022  
                                    _hexpowers FD8D                       ??_DemoOutput_UnicastFail 0033  
                             ___lwdiv@quotient 001B                                       ?_sprintf 0022  
                        ??_MiMAC_SetAltAddress 001B                                      _link_stat 0250  
                                  _LCDTRXCount 3530                                       _P2PTasks 0190  
                          ??_PHYSetLongRAMAddr 001A                            _DemoOutput_Greeting 3992  
                         _Find_InActiveDevices 31CC                        __end_of_freezer_feature 3868  
                               ___wmul@product 001A                                       _LATAbits 000F89  
                                     _LATCbits 000F8B                                       _LATDbits 000F8C  
                                     _LATEbits 000F8D                          ?_UserInterruptHandler 0001  
                                    _octpowers FD77                                       _PIE1bits 000F9D  
                    PHYGetLongRAMAddr@toReturn 001B                     DemoOutput_UpdateTxRx@RxNum 0074  
                   DemoOutput_UpdateTxRx@TxNum 0075                                       _PIR1bits 000F9E  
                                     _PIR3bits 000FA4                                       i2u702_45 38DC  
                                     i2u702_46 38DE                                       i2u703_45 3810  
                                     i2u703_46 3812                                       i2u704_45 336A  
                                     i2u704_46 336C                           ?i2_SPI1_Exchange8bit 0001  
                                    _rxMessage 00BC                             _nvmConnectionTable 00EE  
                 MiMAC_SendPacket@frameControl 0077                                       _SSP1CON1 000FC6  
                                     _SSP2CON1 000F72                         __size_of_AddConnection 0156  
          MiApp_BroadcastConnectionTable@count 0092                                       _SSP1STAT 000FC7  
                                     _SSP2STAT 000F73                   __size_of_MiMAC_DiscardPacket 001A  
     MiApp_EstablishConnection@ActiveScanIndex 0001              MiApp_StartConnection@ScanDuration 0020  
          __end_of_Forward_Packet_PANCr_to_EDy 2BDA                    _Forward_Packet_PANCr_to_EDy 2B40  
                                  _MACRxPacket 0033                           ?_DemoOutput_Greeting 0001  
                    _STAR_DEMO_OPTIONS_MESSAGE 3972                              ??_TMR1_Initialize 0016  
                    __end_of_PHYSetLongRAMAddr 33C0                                       _NVMalloc 3738  
                            ___wmul@multiplier 0016                                      high_isr@i 0015  
              ?_MiApp_BroadcastConnectionTable 0001               ??_MiApp_BroadcastConnectionTable 008B  
                       ??_MiApp_ConnectionMode 001E                             main@freezer_enable 01F8  
                       ??_MiApp_UnicastAddress 0033                        ??_MiApp_StartConnection 0025  
              __size_of_MiApp_RemoveConnection 0136                            SendPacket@isCommand 007F  
                          i2_PHYGetLongRAMAddr 331E                                 _nextEEPosition 00D7  
                                     _ConnMode 00FF                                    _INTCON2bits 000FF1  
               MiApp_EstablishConnection@retry 01E8                    __size_of_PHYGetShortRAMAddr 002C  
        Forward_Packet_PANCr_to_EDy@EDxAddress 0094                                       _MacroNop 3AD2  
                             __size_of_SPIGet2 000A                               __size_of_NVMInit 008E  
                             __size_of_SPIPut2 0016                  __size_of_MiApp_DiscardMessage 0008  
                        ?_Find_InActiveDevices 0001          MiApp_RemoveConnection@ConnectionIndex 008F  
              __end_of_DemoOutput_ChannelError 3ADA                      ??_MiApp_UnicastConnection 0033  
                      __end_of_Initialize_Demo 2C70                           i2_PHYGetShortRAMAddr 37EA  
                          _display_connections 00E6                                       _RxBuffer 010C  
                                     __Hrparam 0000                          ??i2_SPI1_Exchange8bit 0001  
                                     _TxBuffer 0196                           ?i2_PHYGetLongRAMAddr 0002  
                                 _nvmDelayTick 00C6                                       __Lrparam 0000  
                                     _Run_Demo 3ACE                             Total_Connections@i 0017  
                      __size_of_LCD_Initialize 00CA                MiApp_BroadcastConnectionTable@i 0095  
              MiApp_BroadcastConnectionTable@j 0096                MiApp_BroadcastConnectionTable@k 0094  
                        MiMAC_ReceivedPacket@i 001C                               __size_of___awdiv 0078  
                             __size_of___awmod 0068                               __size_of___lbmod 0026  
                  __end_of_store_connection_tb 27AA                          ??_DemoOutput_Greeting 0033  
                             __size_of___lwdiv 004A                               __size_of___lwmod 003E  
                        _MiApp_BroadcastPacket 39B2                                     sprintf@idx 0060  
                                   sprintf@len 0068                                     sprintf@val 006B  
                              _lost_connection 00E8                              InitMRF24J40@_dcnt 0020  
                             __size_of_isdigit 001C                              ?_MiMAC_SetChannel 001D  
                              ___lwdiv@divisor 0018                              ?_Read_MAC_Address 001B  
                                   _IEEESeqNum 003E                                ___lwdiv@counter 001A  
                                     __ptext10 3AA2                                       __ptext11 3530  
                                     __ptext20 2D04                                       __ptext12 2AA6  
                                     __ptext21 3738                                       __ptext13 39B2  
                                     __ptext30 356E                                       __ptext22 3666  
                                     __ptext14 2D92                                       __ptext31 3708  
                                     __ptext23 3868                                       __ptext15 2BDA  
                                     __ptext40 2C70                                       __ptext32 0FFA  
                                     __ptext24 3766                                       __ptext16 3972  
                                     __ptext41 31CC                                       __ptext33 1D2A  
                                     __ptext25 22E2                                       __ptext17 2E1A  
                                     __ptext50 35AC                                       __ptext42 2598  
                                     __ptext34 3164                                       __ptext26 3AB0  
                                     __ptext18 327A                                       __ptext51 3890  
                                     __ptext43 2942                                       __ptext35 2F94  
                                     __ptext27 0190                                       __ptext19 2126  
                                     __ptext60 2E9A                                       __ptext52 3370  
                                     __ptext44 19F8                                       __ptext36 2B40  
                                     __ptext28 26CE                                       __ptext61 3ABC  
                                     __ptext53 3A62                                       __ptext45 345A  
                                     __ptext37 36A0                                       __ptext29 3084  
                                     __ptext70 3628                                       __ptext62 3AD2  
                                     __ptext54 2442                                       __ptext46 3224  
                                     __ptext38 39CE                                       __ptext71 34A6  
                                     __ptext63 3AD8                                       __ptext55 37BE  
                                     __ptext47 1F40                                       __ptext39 3A50  
                                     __ptext80 38B8                                       __ptext72 300C  
                                     __ptext64 35EA                                       __ptext56 33C0  
                                     __ptext48 3792                                       __ptext81 37EA  
                                     __ptext73 3A72                                       __ptext65 3992  
                                     __ptext57 3AC6                                       __ptext49 32CC  
                                     __ptext82 331E                                       __ptext74 392C  
                                     __ptext66 34F0                                       __ptext58 3A20  
                                     __ptext83 3A92                                       __ptext75 3816  
                                     __ptext67 08D0                                       __ptext59 36D4  
                                     __ptext84 3ADA                                       __ptext76 3A82  
                                     __ptext68 39EA                                       __ptext77 3A3A  
                                     __ptext69 3906                                       __ptext78 27AA  
                                 _SSP1CON1bits 000FC6                                  _AddConnection 2442  
                           ??_MiMAC_SetChannel 001E                              ?_MiMAC_SendPacket 0060  
              __size_of_DemoOutput_UnicastFail 0012                                       _high_isr 0008  
                           ??_Read_MAC_Address 001D                                   _SSP2CON1bits 000F72  
                                ?_EEPROM_Write 0017                   Source_END_DEVICE_INFO@SrAddr 0073  
                             __size_of_sprintf 072A                         __size_of_isSameAddress 002C  
                           ??_MiMAC_SendPacket 006A                             _DemoOutput_Channel 35EA  
                       ??_UserInterruptHandler 0001                                  __size_of_main 0020  
                             ?_freezer_feature 0001                          ?i2_PHYGetShortRAMAddr 0001  
                        ??i2_PHYGetLongRAMAddr 0004                         _MiApp_RemoveConnection 2598  
                          ?_DemoOutput_Channel 0077                                     _LCDDisplay 34F0  
                 __end_ofi2_PHYSetShortRAMAddr 38E0                                       int$flags 004A  
                           LCDTRXCount@rxCount 0032                    MiApp_EstablishConnection@t1 01EA  
                  MiApp_EstablishConnection@t2 01EE                             LCDTRXCount@txCount 0073  
                                 _SSP1STATbits 000FC7                                     _LCD_Update 300C  
                    __size_of_send_link_status 003E                            MiApp_UnicastStar@t1 01E8  
                          MiApp_UnicastStar@t2 01EC                     __size_of_PHYSetLongRAMAddr 0050  
                   MiMAC_SendPacket@MACPayload 0067                          __CFG_CPUDIV$OSC3_PLL3 000000  
                                  Find_Index@i 001A                          _permanent_connections 0264  
                                  _OSCTUNEbits 000F9B                                     _INTCONbits 000FF2  
                               AddConnection@i 0024                           ??_DemoOutput_Channel 0033  
                   handle_lost_connection@stat 001B                        ?_handle_lost_connection 0001  
                               ?_AddConnection 0001                    ButtonPressed@tickDifference 0020  
                                     isdigit@c 0018                               _myNetworkAddress 0045  
                                     memset@p1 0016                                  ??_SW_Ack_SrED 0033  
                               ??_EEPROM_Write 001B                                    _nvmConnMode 00EC  
                         SW_Ack_SrED@Dest_Addr 008B                         Total_Connections@count 0016  
                  MiApp_ProtocolInit@initValue 0067                         ??_Find_InActiveDevices 0091  
                                     intlevel2 0000                              ?_MiApp_SetChannel 0001  
                                    sprintf@ap 006A                                      sprintf@cp 0067  
                                    sprintf@sp 0022                        ?_MiApp_MessageAvailable 0001  
                             ___lwmod@dividend 001D                                   ?_EEPROM_Read 0017  
                           ??_MiApp_SetChannel 001F                               ?_Initialize_Demo 0001  
                                ?_MiWi_TickGet 0016                             _MiApp_ProtocolInit 2126  
                 SendPacket@DestinationAddress 007D                         _DemoOutput_UnicastFail 3A50  
                                _MACInitParams 00D2                            MiMAC_Init@initValue 0060  
                               _MRF24J40Status 003F                                  _isSameAddress 37BE  
                          ?_MiApp_ProtocolInit 0001                     MiWi_TickGet@failureCounter 001B  
                            _MiApp_UnicastStar 2AA6                         ?_MiApp_BroadcastPacket 0001  
                                     sprintf@c 0070                                       sprintf@f 0024  
                           ?_MiApp_UnicastStar 0001                                     _PPSCONbits 000EFF  
             __size_of_DemoOutput_ChannelError 0002                 __end_of_handle_lost_connection 30F6  
                              ___lwmod@divisor 001F     MiApp_EstablishConnection@tmpConnectionMode 01E7  
                              ___lwmod@counter 0021                     ?_MiApp_EstablishConnection 00B0  
                       __size_of_LCD_WriteData 0010                          _DemoOutput_UpdateTxRx 3AA2  
                                   _WDTCONbits 000FC0                            ??_MiApp_UnicastStar 00B0  
               __end_of_MiApp_MessageAvailable 3ABC                            _MiMAC_DiscardPacket 3A20  
                           _nvmOutFrameCounter 00F6                              _nvmCurrentChannel 00F0  
                         ??_MiApp_ProtocolInit 0033                                   ?_LCDTRXCount 0032  
                  send_link_status@send_status 008B                         ??i2_PHYGetShortRAMAddr 0002  
                             EEPROM_Read@count 001A                                 ??_MiWi_TickGet 001A  
            Process_RxMessage@User_data_status 00B0                            __end_of_SW_Ack_SrED 3738  
                              EEPROM_Read@addr 0019                                EEPROM_Read@dest 0017  
                                ?_InitMRF24J40 0001               Forward_Packet_PANCr_to_EDy@index 0093  
                              _TMR1_Initialize 3A06                       MiMAC_SendPacket@IntraPAN 0076  
                 __end_of_MiMAC_ReceivedPacket 1528                             Find_Index@DestAddr 0016  
                                  ?_LCDDisplay 0073  
