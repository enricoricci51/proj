

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Sun Feb 14 03:15:27 2016

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   100                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   101                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   102  0000                     
   103                           	psect	idataCOMRAM
   104  003449                     __pidataCOMRAM:
   105                           	opt stack 0
   106                           
   107                           ;initializer for _BankIndex
   108  003449  FF                 	db	255
   109                           
   110                           ;initializer for _role
   111  00344A  01                 	db	1
   112                           
   113                           	psect	idataBANK0
   114  003446                     __pidataBANK0:
   115                           	opt stack 0
   116                           
   117                           ;initializer for _AdditionalNodeID
   118  003446  01                 	db	1
   119                           
   120                           ;initializer for _chk_sel_status
   121  003447  01                 	db	1
   122                           
   123                           ;initializer for _ConnMode
   124  003448  03                 	db	3
   125                           
   126                           	psect	mediumconst
   127  00FCE4                     __pmediumconst:
   128                           	opt stack 0
   129  00FCE4  00                 	db	0
   130  00FCE5                     _MiWi:
   131                           	opt stack 0
   132  00FCE5  20                 	db	32
   133  00FCE6  B2                 	db	178
   134  00FCE7  20                 	db	32
   135  00FCE8  20                 	db	32
   136  00FCE9  20                 	db	32
   137  00FCEA  B2                 	db	178
   138  00FCEB  20                 	db	32
   139  00FCEC  20                 	db	32
   140  00FCED  B2                 	db	178
   141  00FCEE  20                 	db	32
   142  00FCEF  B2                 	db	178
   143  00FCF0  20                 	db	32
   144  00FCF1  20                 	db	32
   145  00FCF2  20                 	db	32
   146  00FCF3  20                 	db	32
   147  00FCF4  20                 	db	32
   148  00FCF5  B2                 	db	178
   149  00FCF6  20                 	db	32
   150  00FCF7  B2                 	db	178
   151  00FCF8  0D                 	db	13
   152  00FCF9  0A                 	db	10
   153  00FCFA  B2                 	db	178
   154  00FCFB  20                 	db	32
   155  00FCFC  B2                 	db	178
   156  00FCFD  20                 	db	32
   157  00FCFE  B2                 	db	178
   158  00FCFF  20                 	db	32
   159  00FD00  B2                 	db	178
   160  00FD01  20                 	db	32
   161  00FD02  20                 	db	32
   162  00FD03  20                 	db	32
   163  00FD04  B2                 	db	178
   164  00FD05  20                 	db	32
   165  00FD06  20                 	db	32
   166  00FD07  B2                 	db	178
   167  00FD08  20                 	db	32
   168  00FD09  20                 	db	32
   169  00FD0A  B2                 	db	178
   170  00FD0B  20                 	db	32
   171  00FD0C  20                 	db	32
   172  00FD0D  0D                 	db	13
   173  00FD0E  0A                 	db	10
   174  00FD0F  B2                 	db	178
   175  00FD10  20                 	db	32
   176  00FD11  20                 	db	32
   177  00FD12  B2                 	db	178
   178  00FD13  20                 	db	32
   179  00FD14  20                 	db	32
   180  00FD15  B2                 	db	178
   181  00FD16  20                 	db	32
   182  00FD17  B2                 	db	178
   183  00FD18  20                 	db	32
   184  00FD19  B2                 	db	178
   185  00FD1A  20                 	db	32
   186  00FD1B  20                 	db	32
   187  00FD1C  B2                 	db	178
   188  00FD1D  20                 	db	32
   189  00FD1E  20                 	db	32
   190  00FD1F  B2                 	db	178
   191  00FD20  20                 	db	32
   192  00FD21  B2                 	db	178
   193  00FD22  0D                 	db	13
   194  00FD23  0A                 	db	10
   195  00FD24  B2                 	db	178
   196  00FD25  20                 	db	32
   197  00FD26  20                 	db	32
   198  00FD27  B2                 	db	178
   199  00FD28  20                 	db	32
   200  00FD29  20                 	db	32
   201  00FD2A  B2                 	db	178
   202  00FD2B  20                 	db	32
   203  00FD2C  B2                 	db	178
   204  00FD2D  20                 	db	32
   205  00FD2E  20                 	db	32
   206  00FD2F  B2                 	db	178
   207  00FD30  20                 	db	32
   208  00FD31  B2                 	db	178
   209  00FD32  20                 	db	32
   210  00FD33  B2                 	db	178
   211  00FD34  20                 	db	32
   212  00FD35  20                 	db	32
   213  00FD36  B2                 	db	178
   214  00FD37  0D                 	db	13
   215  00FD38  0A                 	db	10
   216  00FD39  B2                 	db	178
   217  00FD3A  20                 	db	32
   218  00FD3B  20                 	db	32
   219  00FD3C  B2                 	db	178
   220  00FD3D  20                 	db	32
   221  00FD3E  20                 	db	32
   222  00FD3F  B2                 	db	178
   223  00FD40  20                 	db	32
   224  00FD41  B2                 	db	178
   225  00FD42  20                 	db	32
   226  00FD43  20                 	db	32
   227  00FD44  20                 	db	32
   228  00FD45  B2                 	db	178
   229  00FD46  20                 	db	32
   230  00FD47  B2                 	db	178
   231  00FD48  20                 	db	32
   232  00FD49  20                 	db	32
   233  00FD4A  20                 	db	32
   234  00FD4B  B2                 	db	178
   235  00FD4C  0D                 	db	13
   236  00FD4D  0A                 	db	10
   237  00FD4E  20                 	db	32
   238  00FD4F  20                 	db	32
   239  00FD50  20                 	db	32
   240  00FD51  20                 	db	32
   241  00FD52  20                 	db	32
   242  00FD53  20                 	db	32
   243  00FD54  20                 	db	32
   244  00FD55  20                 	db	32
   245  00FD56  20                 	db	32
   246  00FD57  20                 	db	32
   247  00FD58  20                 	db	32
   248  00FD59  20                 	db	32
   249  00FD5A  20                 	db	32
   250  00FD5B  20                 	db	32
   251  00FD5C  20                 	db	32
   252  00FD5D  20                 	db	32
   253  00FD5E  20                 	db	32
   254  00FD5F  20                 	db	32
   255  00FD60  20                 	db	32
   256  00FD61  0D                 	db	13
   257  00FD62  0A                 	db	10
   258  00FD63                     __end_of_MiWi:
   259                           	opt stack 0
   260  00FD63                     _octpowers:
   261                           	opt stack 0
   262  00FD63  0001               	dw	1
   263  00FD65  0008               	dw	8
   264  00FD67  0040               	dw	64
   265  00FD69  0200               	dw	512
   266  00FD6B  1000               	dw	4096
   267  00FD6D  8000               	dw	32768
   268  00FD6F                     __end_of_octpowers:
   269                           	opt stack 0
   270  00FD6F                     _dpowers:
   271                           	opt stack 0
   272  00FD6F  0001               	dw	1
   273  00FD71  000A               	dw	10
   274  00FD73  0064               	dw	100
   275  00FD75  03E8               	dw	1000
   276  00FD77  2710               	dw	10000
   277  00FD79                     __end_of_dpowers:
   278                           	opt stack 0
   279  00FD79                     _hexpowers:
   280                           	opt stack 0
   281  00FD79  0001               	dw	1
   282  00FD7B  0010               	dw	16
   283  00FD7D  0100               	dw	256
   284  00FD7F  1000               	dw	4096
   285  00FD81                     __end_of_hexpowers:
   286                           	opt stack 0
   287  0000                     _PPSCONbits	set	3839
   288  0000                     _RPINR1	set	3815
   289  0000                     _RPINR21	set	3835
   290  0000                     _RPOR19	set	3801
   291  0000                     _RPOR21	set	3803
   292  0000                     _ANCON0	set	3912
   293  0000                     _ANCON1	set	3913
   294  0000                     _TMR1	set	4046
   295  0000                     _EECON2	set	4007
   296  0000                     _INTCON2bits	set	4081
   297  0000                     _INTCONbits	set	4082
   298  0000                     _LATAbits	set	3977
   299  0000                     _LATCbits	set	3979
   300  0000                     _LATDbits	set	3980
   301  0000                     _LATEbits	set	3981
   302  0000                     _OSCCON	set	4051
   303  0000                     _OSCTUNEbits	set	3995
   304  0000                     _PIE1bits	set	3997
   305  0000                     _PIR1bits	set	3998
   306  0000                     _PIR3bits	set	4004
   307  0000                     _PORTBbits	set	3969
   308  0000                     _SSP1BUF	set	4041
   309  0000                     _SSP1CON1	set	4038
   310  0000                     _SSP1CON1bits	set	4038
   311  0000                     _SSP1STAT	set	4039
   312  0000                     _SSP1STATbits	set	4039
   313  0000                     _SSP2BUF	set	3957
   314  0000                     _SSP2CON1	set	3954
   315  0000                     _SSP2CON1bits	set	3954
   316  0000                     _SSP2STAT	set	3955
   317  0000                     _T1CON	set	4045
   318  0000                     _T1CONbits	set	4045
   319  0000                     _T1GCON	set	3994
   320  0000                     _TMR0L	set	4054
   321  0000                     _TMR1H	set	4047
   322  0000                     _TMR1L	set	4046
   323  0000                     _TRISAbits	set	3986
   324  0000                     _TRISBbits	set	3987
   325  0000                     _TRISCbits	set	3988
   326  0000                     _TRISDbits	set	3989
   327  0000                     _TRISEbits	set	3990
   328  0000                     _WDTCONbits	set	4032
   329  00FD81                     STR_9:
   330  00FD81  0D                 	db	13
   331  00FD82  0A                 	db	10
   332  00FD83  0D                 	db	13
   333  00FD84  0A                 	db	10
   334  00FD85  43                 	db	67	;'C'
   335  00FD86  6F                 	db	111	;'o'
   336  00FD87  6E                 	db	110	;'n'
   337  00FD88  6E                 	db	110	;'n'
   338  00FD89  65                 	db	101	;'e'
   339  00FD8A  63                 	db	99	;'c'
   340  00FD8B  74                 	db	116	;'t'
   341  00FD8C  69                 	db	105	;'i'
   342  00FD8D  6F                 	db	111	;'o'
   343  00FD8E  6E                 	db	110	;'n'
   344  00FD8F  20                 	db	32
   345  00FD90  20                 	db	32
   346  00FD91  20                 	db	32
   347  00FD92  20                 	db	32
   348  00FD93  20                 	db	32
   349  00FD94  50                 	db	80	;'P'
   350  00FD95  65                 	db	101	;'e'
   351  00FD96  65                 	db	101	;'e'
   352  00FD97  72                 	db	114	;'r'
   353  00FD98  4C                 	db	76	;'L'
   354  00FD99  6F                 	db	111	;'o'
   355  00FD9A  6E                 	db	110	;'n'
   356  00FD9B  67                 	db	103	;'g'
   357  00FD9C  41                 	db	65	;'A'
   358  00FD9D  64                 	db	100	;'d'
   359  00FD9E  64                 	db	100	;'d'
   360  00FD9F  72                 	db	114	;'r'
   361  00FDA0  65                 	db	101	;'e'
   362  00FDA1  73                 	db	115	;'s'
   363  00FDA2  73                 	db	115	;'s'
   364  00FDA3  20                 	db	32
   365  00FDA4  20                 	db	32
   366  00FDA5  20                 	db	32
   367  00FDA6  20                 	db	32
   368  00FDA7  20                 	db	32
   369  00FDA8  50                 	db	80	;'P'
   370  00FDA9  65                 	db	101	;'e'
   371  00FDAA  65                 	db	101	;'e'
   372  00FDAB  72                 	db	114	;'r'
   373  00FDAC  49                 	db	73	;'I'
   374  00FDAD  6E                 	db	110	;'n'
   375  00FDAE  66                 	db	102	;'f'
   376  00FDAF  6F                 	db	111	;'o'
   377  00FDB0  0D                 	db	13
   378  00FDB1  0A                 	db	10
   379  00FDB2  00                 	db	0
   380  00FDB3                     STR_26:
   381  00FDB3  50                 	db	80	;'P'
   382  00FDB4  43                 	db	67	;'C'
   383  00FDB5  20                 	db	32
   384  00FDB6  3A                 	db	58	;':'
   385  00FDB7  53                 	db	83	;'S'
   386  00FDB8  57                 	db	87	;'W'
   387  00FDB9  31                 	db	49	;'1'
   388  00FDBA  20                 	db	32
   389  00FDBB  6F                 	db	111	;'o'
   390  00FDBC  72                 	db	114	;'r'
   391  00FDBD  20                 	db	32
   392  00FDBE  53                 	db	83	;'S'
   393  00FDBF  57                 	db	87	;'W'
   394  00FDC0  32                 	db	50	;'2'
   395  00FDC1  20                 	db	32
   396  00FDC2  20                 	db	32
   397  00FDC3  74                 	db	116	;'t'
   398  00FDC4  6F                 	db	111	;'o'
   399  00FDC5  20                 	db	32
   400  00FDC6  42                 	db	66	;'B'
   401  00FDC7  72                 	db	114	;'r'
   402  00FDC8  6F                 	db	111	;'o'
   403  00FDC9  61                 	db	97	;'a'
   404  00FDCA  64                 	db	100	;'d'
   405  00FDCB  43                 	db	67	;'C'
   406  00FDCC  61                 	db	97	;'a'
   407  00FDCD  73                 	db	115	;'s'
   408  00FDCE  74                 	db	116	;'t'
   409  00FDCF  20                 	db	32
   410  00FDD0  6D                 	db	109	;'m'
   411  00FDD1  73                 	db	115	;'s'
   412  00FDD2  67                 	db	103	;'g'
   413  00FDD3  00                 	db	0
   414  00FDD4                     STR_17:
   415  00FDD4  43                 	db	67	;'C'
   416  00FDD5  6F                 	db	111	;'o'
   417  00FDD6  6E                 	db	110	;'n'
   418  00FDD7  6E                 	db	110	;'n'
   419  00FDD8  65                 	db	101	;'e'
   420  00FDD9  63                 	db	99	;'c'
   421  00FDDA  74                 	db	116	;'t'
   422  00FDDB  69                 	db	105	;'i'
   423  00FDDC  6E                 	db	110	;'n'
   424  00FDDD  67                 	db	103	;'g'
   425  00FDDE  20                 	db	32
   426  00FDDF  50                 	db	80	;'P'
   427  00FDE0  65                 	db	101	;'e'
   428  00FDE1  65                 	db	101	;'e'
   429  00FDE2  72                 	db	114	;'r'
   430  00FDE3  20                 	db	32
   431  00FDE4  20                 	db	32
   432  00FDE5  6F                 	db	111	;'o'
   433  00FDE6  6E                 	db	110	;'n'
   434  00FDE7  20                 	db	32
   435  00FDE8  43                 	db	67	;'C'
   436  00FDE9  68                 	db	104	;'h'
   437  00FDEA  61                 	db	97	;'a'
   438  00FDEB  6E                 	db	110	;'n'
   439  00FDEC  6E                 	db	110	;'n'
   440  00FDED  65                 	db	101	;'e'
   441  00FDEE  6C                 	db	108	;'l'
   442  00FDEF  20                 	db	32
   443  00FDF0  25                 	db	37
   444  00FDF1  64                 	db	100	;'d'
   445  00FDF2  20                 	db	32
   446  00FDF3  00                 	db	0
   447  00FDF4                     STR_27:
   448  00FDF4  53                 	db	83	;'S'
   449  00FDF5  57                 	db	87	;'W'
   450  00FDF6  31                 	db	49	;'1'
   451  00FDF7  20                 	db	32
   452  00FDF8  3A                 	db	58	;':'
   453  00FDF9  20                 	db	32
   454  00FDFA  55                 	db	85	;'U'
   455  00FDFB  6E                 	db	110	;'n'
   456  00FDFC  69                 	db	105	;'i'
   457  00FDFD  63                 	db	99	;'c'
   458  00FDFE  61                 	db	97	;'a'
   459  00FDFF  73                 	db	115	;'s'
   460  00FE00  74                 	db	116	;'t'
   461  00FE01  20                 	db	32
   462  00FE02  20                 	db	32
   463  00FE03  20                 	db	32
   464  00FE04  53                 	db	83	;'S'
   465  00FE05  57                 	db	87	;'W'
   466  00FE06  32                 	db	50	;'2'
   467  00FE07  20                 	db	32
   468  00FE08  3A                 	db	58	;':'
   469  00FE09  20                 	db	32
   470  00FE0A  4E                 	db	78	;'N'
   471  00FE0B  65                 	db	101	;'e'
   472  00FE0C  78                 	db	120	;'x'
   473  00FE0D  74                 	db	116	;'t'
   474  00FE0E  20                 	db	32
   475  00FE0F  4E                 	db	78	;'N'
   476  00FE10  6F                 	db	111	;'o'
   477  00FE11  64                 	db	100	;'d'
   478  00FE12  65                 	db	101	;'e'
   479  00FE13  00                 	db	0
   480  00FE14                     STR_16:
   481  00FE14  53                 	db	83	;'S'
   482  00FE15  69                 	db	105	;'i'
   483  00FE16  6D                 	db	109	;'m'
   484  00FE17  70                 	db	112	;'p'
   485  00FE18  6C                 	db	108	;'l'
   486  00FE19  65                 	db	101	;'e'
   487  00FE1A  20                 	db	32
   488  00FE1B  53                 	db	83	;'S'
   489  00FE1C  54                 	db	84	;'T'
   490  00FE1D  41                 	db	65	;'A'
   491  00FE1E  52                 	db	82	;'R'
   492  00FE1F  20                 	db	32
   493  00FE20  20                 	db	32
   494  00FE21  20                 	db	32
   495  00FE22  20                 	db	32
   496  00FE23  20                 	db	32
   497  00FE24  4D                 	db	77	;'M'
   498  00FE25  52                 	db	82	;'R'
   499  00FE26  46                 	db	70	;'F'
   500  00FE27  32                 	db	50	;'2'
   501  00FE28  34                 	db	52	;'4'
   502  00FE29  4A                 	db	74	;'J'
   503  00FE2A  34                 	db	52	;'4'
   504  00FE2B  30                 	db	48	;'0'
   505  00FE2C  20                 	db	32
   506  00FE2D  4E                 	db	78	;'N'
   507  00FE2E  6F                 	db	111	;'o'
   508  00FE2F  64                 	db	100	;'d'
   509  00FE30  65                 	db	101	;'e'
   510  00FE31  31                 	db	49	;'1'
   511  00FE32  00                 	db	0
   512  00FE33                     STR_18:
   513  00FE33  20                 	db	32
   514  00FE34  43                 	db	67	;'C'
   515  00FE35  6F                 	db	111	;'o'
   516  00FE36  6E                 	db	110	;'n'
   517  00FE37  6E                 	db	110	;'n'
   518  00FE38  65                 	db	101	;'e'
   519  00FE39  63                 	db	99	;'c'
   520  00FE3A  74                 	db	116	;'t'
   521  00FE3B  65                 	db	101	;'e'
   522  00FE3C  64                 	db	100	;'d'
   523  00FE3D  20                 	db	32
   524  00FE3E  50                 	db	80	;'P'
   525  00FE3F  65                 	db	101	;'e'
   526  00FE40  65                 	db	101	;'e'
   527  00FE41  72                 	db	114	;'r'
   528  00FE42  20                 	db	32
   529  00FE43  20                 	db	32
   530  00FE44  6F                 	db	111	;'o'
   531  00FE45  6E                 	db	110	;'n'
   532  00FE46  20                 	db	32
   533  00FE47  43                 	db	67	;'C'
   534  00FE48  68                 	db	104	;'h'
   535  00FE49  61                 	db	97	;'a'
   536  00FE4A  6E                 	db	110	;'n'
   537  00FE4B  6E                 	db	110	;'n'
   538  00FE4C  65                 	db	101	;'e'
   539  00FE4D  6C                 	db	108	;'l'
   540  00FE4E  20                 	db	32
   541  00FE4F  25                 	db	37
   542  00FE50  64                 	db	100	;'d'
   543  00FE51  00                 	db	0
   544  00FE52                     STR_19:
   545  00FE52  53                 	db	83	;'S'
   546  00FE53  57                 	db	87	;'W'
   547  00FE54  31                 	db	49	;'1'
   548  00FE55  3A                 	db	58	;':'
   549  00FE56  20                 	db	32
   550  00FE57  42                 	db	66	;'B'
   551  00FE58  72                 	db	114	;'r'
   552  00FE59  6F                 	db	111	;'o'
   553  00FE5A  61                 	db	97	;'a'
   554  00FE5B  64                 	db	100	;'d'
   555  00FE5C  63                 	db	99	;'c'
   556  00FE5D  61                 	db	97	;'a'
   557  00FE5E  73                 	db	115	;'s'
   558  00FE5F  74                 	db	116	;'t'
   559  00FE60  20                 	db	32
   560  00FE61  20                 	db	32
   561  00FE62  53                 	db	83	;'S'
   562  00FE63  57                 	db	87	;'W'
   563  00FE64  32                 	db	50	;'2'
   564  00FE65  3A                 	db	58	;':'
   565  00FE66  20                 	db	32
   566  00FE67  55                 	db	85	;'U'
   567  00FE68  6E                 	db	110	;'n'
   568  00FE69  69                 	db	105	;'i'
   569  00FE6A  63                 	db	99	;'c'
   570  00FE6B  61                 	db	97	;'a'
   571  00FE6C  73                 	db	115	;'s'
   572  00FE6D  74                 	db	116	;'t'
   573  00FE6E  00                 	db	0
   574  00FE6F                     STR_30:
   575  00FE6F  53                 	db	83	;'S'
   576  00FE70  57                 	db	87	;'W'
   577  00FE71  31                 	db	49	;'1'
   578  00FE72  3A                 	db	58	;':'
   579  00FE73  4E                 	db	78	;'N'
   580  00FE74  65                 	db	101	;'e'
   581  00FE75  77                 	db	119	;'w'
   582  00FE76  20                 	db	32
   583  00FE77  4E                 	db	78	;'N'
   584  00FE78  65                 	db	101	;'e'
   585  00FE79  74                 	db	116	;'t'
   586  00FE7A  77                 	db	119	;'w'
   587  00FE7B  6F                 	db	111	;'o'
   588  00FE7C  72                 	db	114	;'r'
   589  00FE7D  6B                 	db	107	;'k'
   590  00FE7E  20                 	db	32
   591  00FE7F  53                 	db	83	;'S'
   592  00FE80  57                 	db	87	;'W'
   593  00FE81  32                 	db	50	;'2'
   594  00FE82  3A                 	db	58	;':'
   595  00FE83  46                 	db	70	;'F'
   596  00FE84  72                 	db	114	;'r'
   597  00FE85  65                 	db	101	;'e'
   598  00FE86  65                 	db	101	;'e'
   599  00FE87  7A                 	db	122	;'z'
   600  00FE88  65                 	db	101	;'e'
   601  00FE89  72                 	db	114	;'r'
   602  00FE8A  00                 	db	0
   603  00FE8B  42                 	db	66	;'B'
   604  00FE8C  72                 	db	114	;'r'
   605  00FE8D  6F                 	db	111	;'o'
   606  00FE8E  61                 	db	97	;'a'
   607  00FE8F  64                 	db	100	;'d'
   608  00FE90  63                 	db	99	;'c'
   609  00FE91  61                 	db	97	;'a'
   610  00FE92  73                 	db	115	;'s'
   611  00FE93  74                 	db	116	;'t'
   612  00FE94  20                 	db	32
   613  00FE95  50                 	db	80	;'P'
   614  00FE96  61                 	db	97	;'a'
   615  00FE97  63                 	db	99	;'c'
   616  00FE98  6B                 	db	107	;'k'
   617  00FE99  65                 	db	101	;'e'
   618  00FE9A  74                 	db	116	;'t'
   619  00FE9B  20                 	db	32
   620  00FE9C  77                 	db	119	;'w'
   621  00FE9D  69                 	db	105	;'i'
   622  00FE9E  74                 	db	116	;'t'
   623  00FE9F  68                 	db	104	;'h'
   624  00FEA0  20                 	db	32
   625  00FEA1  52                 	db	82	;'R'
   626  00FEA2  53                 	db	83	;'S'
   627  00FEA3  53                 	db	83	;'S'
   628  00FEA4  49                 	db	73	;'I'
   629  00FEA5  20                 	db	32
   630  00FEA6  00                 	db	0
   631  00FEA7  55                 	db	85	;'U'
   632  00FEA8  6E                 	db	110	;'n'
   633  00FEA9  69                 	db	105	;'i'
   634  00FEAA  63                 	db	99	;'c'
   635  00FEAB  61                 	db	97	;'a'
   636  00FEAC  73                 	db	115	;'s'
   637  00FEAD  74                 	db	116	;'t'
   638  00FEAE  20                 	db	32
   639  00FEAF  50                 	db	80	;'P'
   640  00FEB0  61                 	db	97	;'a'
   641  00FEB1  63                 	db	99	;'c'
   642  00FEB2  6B                 	db	107	;'k'
   643  00FEB3  65                 	db	101	;'e'
   644  00FEB4  74                 	db	116	;'t'
   645  00FEB5  20                 	db	32
   646  00FEB6  77                 	db	119	;'w'
   647  00FEB7  69                 	db	105	;'i'
   648  00FEB8  74                 	db	116	;'t'
   649  00FEB9  68                 	db	104	;'h'
   650  00FEBA  20                 	db	32
   651  00FEBB  52                 	db	82	;'R'
   652  00FEBC  53                 	db	83	;'S'
   653  00FEBD  53                 	db	83	;'S'
   654  00FEBE  49                 	db	73	;'I'
   655  00FEBF  20                 	db	32
   656  00FEC0  00                 	db	0
   657  00FEC1                     STR_33:
   658  00FEC1  52                 	db	82	;'R'
   659  00FEC2  42                 	db	66	;'B'
   660  00FEC3  30                 	db	48	;'0'
   661  00FEC4  3A                 	db	58	;':'
   662  00FEC5  25                 	db	37
   663  00FEC6  30                 	db	48	;'0'
   664  00FEC7  32                 	db	50	;'2'
   665  00FEC8  64                 	db	100	;'d'
   666  00FEC9  2D                 	db	45
   667  00FECA  25                 	db	37
   668  00FECB  30                 	db	48	;'0'
   669  00FECC  32                 	db	50	;'2'
   670  00FECD  78                 	db	120	;'x'
   671  00FECE  25                 	db	37
   672  00FECF  30                 	db	48	;'0'
   673  00FED0  32                 	db	50	;'2'
   674  00FED1  78                 	db	120	;'x'
   675  00FED2  25                 	db	37
   676  00FED3  30                 	db	48	;'0'
   677  00FED4  32                 	db	50	;'2'
   678  00FED5  78                 	db	120	;'x'
   679  00FED6  2D                 	db	45
   680  00FED7  6D                 	db	109	;'m'
   681  00FED8  65                 	db	101	;'e'
   682  00FED9  00                 	db	0
   683  00FEDA                     STR_34:
   684  00FEDA  52                 	db	82	;'R'
   685  00FEDB  42                 	db	66	;'B'
   686  00FEDC  30                 	db	48	;'0'
   687  00FEDD  3A                 	db	58	;':'
   688  00FEDE  25                 	db	37
   689  00FEDF  30                 	db	48	;'0'
   690  00FEE0  32                 	db	50	;'2'
   691  00FEE1  64                 	db	100	;'d'
   692  00FEE2  2D                 	db	45
   693  00FEE3  25                 	db	37
   694  00FEE4  30                 	db	48	;'0'
   695  00FEE5  32                 	db	50	;'2'
   696  00FEE6  78                 	db	120	;'x'
   697  00FEE7  25                 	db	37
   698  00FEE8  30                 	db	48	;'0'
   699  00FEE9  32                 	db	50	;'2'
   700  00FEEA  78                 	db	120	;'x'
   701  00FEEB  25                 	db	37
   702  00FEEC  30                 	db	48	;'0'
   703  00FEED  32                 	db	50	;'2'
   704  00FEEE  78                 	db	120	;'x'
   705  00FEEF  00                 	db	0
   706  00FEF0  20                 	db	32
   707  00FEF1  41                 	db	65	;'A'
   708  00FEF2  64                 	db	100	;'d'
   709  00FEF3  64                 	db	100	;'d'
   710  00FEF4  72                 	db	114	;'r'
   711  00FEF5  65                 	db	101	;'e'
   712  00FEF6  73                 	db	115	;'s'
   713  00FEF7  73                 	db	115	;'s'
   714  00FEF8  3A                 	db	58	;':'
   715  00FEF9  25                 	db	37
   716  00FEFA  30                 	db	48	;'0'
   717  00FEFB  32                 	db	50	;'2'
   718  00FEFC  78                 	db	120	;'x'
   719  00FEFD  25                 	db	37
   720  00FEFE  30                 	db	48	;'0'
   721  00FEFF  32                 	db	50	;'2'
   722  00FF00  78                 	db	120	;'x'
   723  00FF01  25                 	db	37
   724  00FF02  30                 	db	48	;'0'
   725  00FF03  32                 	db	50	;'2'
   726  00FF04  78                 	db	120	;'x'
   727  00FF05  00                 	db	0
   728  00FF06                     STR_37:
   729  00FF06  44                 	db	68	;'D'
   730  00FF07  61                 	db	97	;'a'
   731  00FF08  74                 	db	116	;'t'
   732  00FF09  61                 	db	97	;'a'
   733  00FF0A  5F                 	db	95	;'_'
   734  00FF0B  53                 	db	83	;'S'
   735  00FF0C  65                 	db	101	;'e'
   736  00FF0D  6E                 	db	110	;'n'
   737  00FF0E  64                 	db	100	;'d'
   738  00FF0F  69                 	db	105	;'i'
   739  00FF10  6E                 	db	110	;'n'
   740  00FF11  67                 	db	103	;'g'
   741  00FF12  5F                 	db	95	;'_'
   742  00FF13  46                 	db	70	;'F'
   743  00FF14  61                 	db	97	;'a'
   744  00FF15  69                 	db	105	;'i'
   745  00FF16  6C                 	db	108	;'l'
   746  00FF17  21                 	db	33
   747  00FF18  21                 	db	33
   748  00FF19  00                 	db	0
   749  00FF1A  0D                 	db	13
   750  00FF1B  0A                 	db	10
   751  00FF1C  0D                 	db	13
   752  00FF1D  0A                 	db	10
   753  00FF1E  4D                 	db	77	;'M'
   754  00FF1F  79                 	db	121	;'y'
   755  00FF20  20                 	db	32
   756  00FF21  41                 	db	65	;'A'
   757  00FF22  64                 	db	100	;'d'
   758  00FF23  64                 	db	100	;'d'
   759  00FF24  72                 	db	114	;'r'
   760  00FF25  65                 	db	101	;'e'
   761  00FF26  73                 	db	115	;'s'
   762  00FF27  73                 	db	115	;'s'
   763  00FF28  3A                 	db	58	;':'
   764  00FF29  20                 	db	32
   765  00FF2A  30                 	db	48	;'0'
   766  00FF2B  78                 	db	120	;'x'
   767  00FF2C  00                 	db	0
   768  00FF2D                     STR_39:
   769  00FF2D  30                 	db	48	;'0'
   770  00FF2E  31                 	db	49	;'1'
   771  00FF2F  32                 	db	50	;'2'
   772  00FF30  33                 	db	51	;'3'
   773  00FF31  34                 	db	52	;'4'
   774  00FF32  35                 	db	53	;'5'
   775  00FF33  36                 	db	54	;'6'
   776  00FF34  37                 	db	55	;'7'
   777  00FF35  38                 	db	56	;'8'
   778  00FF36  39                 	db	57	;'9'
   779  00FF37  41                 	db	65	;'A'
   780  00FF38  42                 	db	66	;'B'
   781  00FF39  43                 	db	67	;'C'
   782  00FF3A  44                 	db	68	;'D'
   783  00FF3B  45                 	db	69	;'E'
   784  00FF3C  46                 	db	70	;'F'
   785  00FF3D  00                 	db	0
   786  00FF3E                     STR_40:
   787  00FF3E  30                 	db	48	;'0'
   788  00FF3F  31                 	db	49	;'1'
   789  00FF40  32                 	db	50	;'2'
   790  00FF41  33                 	db	51	;'3'
   791  00FF42  34                 	db	52	;'4'
   792  00FF43  35                 	db	53	;'5'
   793  00FF44  36                 	db	54	;'6'
   794  00FF45  37                 	db	55	;'7'
   795  00FF46  38                 	db	56	;'8'
   796  00FF47  39                 	db	57	;'9'
   797  00FF48  61                 	db	97	;'a'
   798  00FF49  62                 	db	98	;'b'
   799  00FF4A  63                 	db	99	;'c'
   800  00FF4B  64                 	db	100	;'d'
   801  00FF4C  65                 	db	101	;'e'
   802  00FF4D  66                 	db	102	;'f'
   803  00FF4E  00                 	db	0
   804  00FF4F                     STR_36:
   805  00FF4F  52                 	db	82	;'R'
   806  00FF50  42                 	db	66	;'B'
   807  00FF51  32                 	db	50	;'2'
   808  00FF52  3A                 	db	58	;':'
   809  00FF53  20                 	db	32
   810  00FF54  43                 	db	67	;'C'
   811  00FF55  68                 	db	104	;'h'
   812  00FF56  61                 	db	97	;'a'
   813  00FF57  6E                 	db	110	;'n'
   814  00FF58  67                 	db	103	;'g'
   815  00FF59  65                 	db	101	;'e'
   816  00FF5A  20                 	db	32
   817  00FF5B  6E                 	db	110	;'n'
   818  00FF5C  6F                 	db	111	;'o'
   819  00FF5D  64                 	db	100	;'d'
   820  00FF5E  65                 	db	101	;'e'
   821  00FF5F  00                 	db	0
   822  00FF60  44                 	db	68	;'D'
   823  00FF61  61                 	db	97	;'a'
   824  00FF62  74                 	db	116	;'t'
   825  00FF63  61                 	db	97	;'a'
   826  00FF64  20                 	db	32
   827  00FF65  50                 	db	80	;'P'
   828  00FF66  61                 	db	97	;'a'
   829  00FF67  63                 	db	99	;'c'
   830  00FF68  6B                 	db	107	;'k'
   831  00FF69  65                 	db	101	;'e'
   832  00FF6A  74                 	db	116	;'t'
   833  00FF6B  20                 	db	32
   834  00FF6C  66                 	db	102	;'f'
   835  00FF6D  72                 	db	114	;'r'
   836  00FF6E  6F                 	db	111	;'o'
   837  00FF6F  6D                 	db	109	;'m'
   838  00FF70  00                 	db	0
   839  00FF71                     STR_25:
   840  00FF71  20                 	db	32
   841  00FF72  55                 	db	85	;'U'
   842  00FF73  6E                 	db	110	;'n'
   843  00FF74  69                 	db	105	;'i'
   844  00FF75  63                 	db	99	;'c'
   845  00FF76  61                 	db	97	;'a'
   846  00FF77  73                 	db	115	;'s'
   847  00FF78  74                 	db	116	;'t'
   848  00FF79  20                 	db	32
   849  00FF7A  46                 	db	70	;'F'
   850  00FF7B  61                 	db	97	;'a'
   851  00FF7C  69                 	db	105	;'i'
   852  00FF7D  6C                 	db	108	;'l'
   853  00FF7E  65                 	db	101	;'e'
   854  00FF7F  64                 	db	100	;'d'
   855  00FF80  00                 	db	0
   856  00FF81                     STR_14:
   857  00FF81  54                 	db	84	;'T'
   858  00FF82  58                 	db	88	;'X'
   859  00FF83  3A                 	db	58	;':'
   860  00FF84  25                 	db	37
   861  00FF85  33                 	db	51	;'3'
   862  00FF86  64                 	db	100	;'d'
   863  00FF87  20                 	db	32
   864  00FF88  2C                 	db	44
   865  00FF89  20                 	db	32
   866  00FF8A  52                 	db	82	;'R'
   867  00FF8B  58                 	db	88	;'X'
   868  00FF8C  3A                 	db	58	;':'
   869  00FF8D  25                 	db	37
   870  00FF8E  33                 	db	51	;'3'
   871  00FF8F  64                 	db	100	;'d'
   872  00FF90  00                 	db	0
   873  00FF91                     STR_15:
   874  00FF91  4D                 	db	77	;'M'
   875  00FF92  65                 	db	101	;'e'
   876  00FF93  73                 	db	115	;'s'
   877  00FF94  73                 	db	115	;'s'
   878  00FF95  61                 	db	97	;'a'
   879  00FF96  67                 	db	103	;'g'
   880  00FF97  65                 	db	101	;'e'
   881  00FF98  20                 	db	32
   882  00FF99  43                 	db	67	;'C'
   883  00FF9A  6F                 	db	111	;'o'
   884  00FF9B  75                 	db	117	;'u'
   885  00FF9C  6E                 	db	110	;'n'
   886  00FF9D  74                 	db	116	;'t'
   887  00FF9E  00                 	db	0
   888  00FF9F                     STR_5:
   889  00FF9F  20                 	db	32
   890  00FFA0  20                 	db	32
   891  00FFA1  20                 	db	32
   892  00FFA2  20                 	db	32
   893  00FFA3  20                 	db	32
   894  00FFA4  20                 	db	32
   895  00FFA5  20                 	db	32
   896  00FFA6  20                 	db	32
   897  00FFA7  20                 	db	32
   898  00FFA8  20                 	db	32
   899  00FFA9  20                 	db	32
   900  00FFAA  20                 	db	32
   901  00FFAB  20                 	db	32
   902  00FFAC  00                 	db	0
   903  00FFAD                     STR_38:
   904  00FFAD  53                 	db	83	;'S'
   905  00FFAE  6C                 	db	108	;'l'
   906  00FFAF  65                 	db	101	;'e'
   907  00FFB0  65                 	db	101	;'e'
   908  00FFB1  70                 	db	112	;'p'
   909  00FFB2  69                 	db	105	;'i'
   910  00FFB3  6E                 	db	110	;'n'
   911  00FFB4  67                 	db	103	;'g'
   912  00FFB5  21                 	db	33
   913  00FFB6  21                 	db	33
   914  00FFB7  21                 	db	33
   915  00FFB8  00                 	db	0
   916  00FFB9                     STR_3:
   917  00FFB9  20                 	db	32
   918  00FFBA  20                 	db	32
   919  00FFBB  43                 	db	67	;'C'
   920  00FFBC  68                 	db	104	;'h'
   921  00FFBD  61                 	db	97	;'a'
   922  00FFBE  6E                 	db	110	;'n'
   923  00FFBF  6E                 	db	110	;'n'
   924  00FFC0  65                 	db	101	;'e'
   925  00FFC1  6C                 	db	108	;'l'
   926  00FFC2  3A                 	db	58	;':'
   927  00FFC3  20                 	db	32
   928  00FFC4  00                 	db	0
   929  00FFC5  20                 	db	32
   930  00FFC6  20                 	db	32
   931  00FFC7  50                 	db	80	;'P'
   932  00FFC8  41                 	db	65	;'A'
   933  00FFC9  4E                 	db	78	;'N'
   934  00FFCA  49                 	db	73	;'I'
   935  00FFCB  44                 	db	68	;'D'
   936  00FFCC  3A                 	db	58	;':'
   937  00FFCD  20                 	db	32
   938  00FFCE  30                 	db	48	;'0'
   939  00FFCF  78                 	db	120	;'x'
   940  00FFD0  00                 	db	0
   941  00FFD1                     STR_32:
   942  00FFD1  57                 	db	87	;'W'
   943  00FFD2  6F                 	db	111	;'o'
   944  00FFD3  6B                 	db	107	;'k'
   945  00FFD4  65                 	db	101	;'e'
   946  00FFD5  20                 	db	32
   947  00FFD6  55                 	db	85	;'U'
   948  00FFD7  70                 	db	112	;'p'
   949  00FFD8  21                 	db	33
   950  00FFD9  21                 	db	33
   951  00FFDA  21                 	db	33
   952  00FFDB  00                 	db	0
   953  00FFDC                     STR_31:
   954  00FFDC  53                 	db	83	;'S'
   955  00FFDD  6C                 	db	108	;'l'
   956  00FFDE  65                 	db	101	;'e'
   957  00FFDF  65                 	db	101	;'e'
   958  00FFE0  70                 	db	112	;'p'
   959  00FFE1  69                 	db	105	;'i'
   960  00FFE2  6E                 	db	110	;'n'
   961  00FFE3  67                 	db	103	;'g'
   962  00FFE4  21                 	db	33
   963  00FFE5  21                 	db	33
   964  00FFE6  00                 	db	0
   965  00FFE7  53                 	db	83	;'S'
   966  00FFE8  65                 	db	101	;'e'
   967  00FFE9  63                 	db	99	;'c'
   968  00FFEA  75                 	db	117	;'u'
   969  00FFEB  72                 	db	114	;'r'
   970  00FFEC  65                 	db	101	;'e'
   971  00FFED  64                 	db	100	;'d'
   972  00FFEE  20                 	db	32
   973  00FFEF  00                 	db	0
   974  00FFF0  20                 	db	32
   975  00FFF1  66                 	db	102	;'f'
   976  00FFF2  72                 	db	114	;'r'
   977  00FFF3  6F                 	db	111	;'o'
   978  00FFF4  6D                 	db	109	;'m'
   979  00FFF5  20                 	db	32
   980  00FFF6  00                 	db	0
   981  0000                     
   982                           ; #config settings
   983  00FFF7  00                 	db	0	; dummy byte at the end
   984  0000                     
   985                           	psect	cinit
   986  002862                     __pcinit:
   987                           	opt stack 0
   988  002862                     start_initialization:
   989                           	opt stack 0
   990  002862                     __initialization:
   991                           	opt stack 0
   992                           
   993                           ; Clear objects allocated to BIGRAM (560 bytes)
   994  002862  EE02  F0A0         	lfsr	0,__pbssBIGRAM
   995  002866  EE12 F030          	lfsr	1,560
   996  00286A                     clear_0:
   997  00286A  6AEE               	clrf	postinc0,c
   998  00286C  50E5               	movf	postdec1,w,c
   999  00286E  50E1               	movf	fsr1l,w,c
  1000  002870  E1FC               	bnz	clear_0
  1001  002872  50E2               	movf	fsr1h,w,c
  1002  002874  E1FA               	bnz	clear_0
  1003                           
  1004                           ; Clear objects allocated to BANK2 (160 bytes)
  1005  002876  EE02  F000         	lfsr	0,__pbssBANK2
  1006  00287A  0EA0               	movlw	160
  1007  00287C                     clear_1:
  1008  00287C  6AEE               	clrf	postinc0,c
  1009  00287E  06E8               	decf	wreg,f,c
  1010  002880  E1FD               	bnz	clear_1
  1011                           
  1012                           ; Clear objects allocated to BANK1 (223 bytes)
  1013  002882  EE01  F000         	lfsr	0,__pbssBANK1
  1014  002886  0EDF               	movlw	223
  1015  002888                     clear_2:
  1016  002888  6AEE               	clrf	postinc0,c
  1017  00288A  06E8               	decf	wreg,f,c
  1018  00288C  E1FD               	bnz	clear_2
  1019                           
  1020                           ; Clear objects allocated to BANK0 (79 bytes)
  1021  00288E  EE00  F060         	lfsr	0,__pbssBANK0
  1022  002892  0E4F               	movlw	79
  1023  002894                     clear_3:
  1024  002894  6AEE               	clrf	postinc0,c
  1025  002896  06E8               	decf	wreg,f,c
  1026  002898  E1FD               	bnz	clear_3
  1027                           
  1028                           ; Clear objects allocated to COMRAM (21 bytes)
  1029  00289A  EE00  F033         	lfsr	0,__pbssCOMRAM
  1030  00289E  0E15               	movlw	21
  1031  0028A0                     clear_4:
  1032  0028A0  6AEE               	clrf	postinc0,c
  1033  0028A2  06E8               	decf	wreg,f,c
  1034  0028A4  E1FD               	bnz	clear_4
  1035                           
  1036                           ; Initialize objects allocated to BANK0 (3 bytes)
  1037                           ; load TBLPTR registers with __pidataBANK0
  1038  0028A6  0E46               	movlw	low __pidataBANK0
  1039  0028A8  6EF6               	movwf	tblptrl,c
  1040  0028AA  0E34               	movlw	high __pidataBANK0
  1041  0028AC  6EF7               	movwf	tblptrh,c
  1042  0028AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1043  0028B0  6EF8               	movwf	tblptru,c
  1044  0028B2  0009               	tblrd		*+	;fetch initializer
  1045  0028B4  CFF5 F0FB          	movff	tablat,__pdataBANK0
  1046  0028B8  0009               	tblrd		*+	;fetch initializer
  1047  0028BA  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
  1048  0028BE  0009               	tblrd		*+	;fetch initializer
  1049  0028C0  CFF5 F0FD          	movff	tablat,__pdataBANK0+2
  1050                           
  1051                           ; Initialize objects allocated to COMRAM (2 bytes)
  1052                           ; load TBLPTR registers with __pidataCOMRAM
  1053  0028C4  0E49               	movlw	low __pidataCOMRAM
  1054  0028C6  6EF6               	movwf	tblptrl,c
  1055  0028C8  0E34               	movlw	high __pidataCOMRAM
  1056  0028CA  6EF7               	movwf	tblptrh,c
  1057  0028CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1058  0028CE  6EF8               	movwf	tblptru,c
  1059  0028D0  0009               	tblrd		*+	;fetch initializer
  1060  0028D2  CFF5 F048          	movff	tablat,__pdataCOMRAM
  1061  0028D6  0009               	tblrd		*+	;fetch initializer
  1062  0028D8  CFF5 F049          	movff	tablat,__pdataCOMRAM+1
  1063  0028DC                     end_of_initialization:
  1064                           	opt stack 0
  1065  0028DC                     __end_of__initialization:
  1066                           	opt stack 0
  1067  0028DC  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1068  0028DE  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1069  0028E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1070  0028E2  6EF8               	movwf	tblptru,c
  1071  0028E4  0100               	movlb	0
  1072  0028E6  EF83  F019         	goto	_main	;jump to C main() function
  1073                           tblptru	equ	0xFF8
  1074                           tblptrh	equ	0xFF7
  1075                           tblptrl	equ	0xFF6
  1076                           tablat	equ	0xFF5
  1077                           postinc0	equ	0xFEE
  1078                           wreg	equ	0xFE8
  1079                           postdec1	equ	0xFE5
  1080                           fsr1h	equ	0xFE2
  1081                           fsr1l	equ	0xFE1
  1082                           
  1083                           	psect	bssCOMRAM
  1084  000033                     __pbssCOMRAM:
  1085                           	opt stack 0
  1086  000033                     _MACRxPacket:
  1087                           	opt stack 0
  1088  000033                     	ds	11
  1089  00003E                     _IEEESeqNum:
  1090                           	opt stack 0
  1091  00003E                     	ds	1
  1092  00003F                     _MRF24J40Status:
  1093                           	opt stack 0
  1094  00003F                     	ds	1
  1095  000040                     _i:
  1096                           	opt stack 0
  1097  000040                     	ds	1
  1098  000041                     _timerExtension1:
  1099                           	opt stack 0
  1100  000041                     	ds	1
  1101  000042                     _timerExtension2:
  1102                           	opt stack 0
  1103  000042                     	ds	1
  1104  000043                     _MAC_PANID:
  1105                           	opt stack 0
  1106  000043                     	ds	2
  1107  000045                     _myNetworkAddress:
  1108                           	opt stack 0
  1109  000045                     	ds	2
  1110  000047                     _conn_size:
  1111                           	opt stack 0
  1112  000047                     	ds	1
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           postinc0	equ	0xFEE
  1118                           wreg	equ	0xFE8
  1119                           postdec1	equ	0xFE5
  1120                           fsr1h	equ	0xFE2
  1121                           fsr1l	equ	0xFE1
  1122                           
  1123                           	psect	dataCOMRAM
  1124  000048                     __pdataCOMRAM:
  1125                           	opt stack 0
  1126  000048                     _BankIndex:
  1127                           	opt stack 0
  1128  000048                     	ds	1
  1129  000049                     _role:
  1130                           	opt stack 0
  1131  000049                     	ds	1
  1132                           tblptru	equ	0xFF8
  1133                           tblptrh	equ	0xFF7
  1134                           tblptrl	equ	0xFF6
  1135                           tablat	equ	0xFF5
  1136                           postinc0	equ	0xFEE
  1137                           wreg	equ	0xFE8
  1138                           postdec1	equ	0xFE5
  1139                           fsr1h	equ	0xFE2
  1140                           fsr1l	equ	0xFE1
  1141                           
  1142                           	psect	bssBANK0
  1143  000060                     __pbssBANK0:
  1144                           	opt stack 0
  1145  000060                     _rxMessage:
  1146                           	opt stack 0
  1147  000060                     	ds	10
  1148  00006A                     _DataRequestTimer:
  1149                           	opt stack 0
  1150  00006A                     	ds	4
  1151  00006E                     _PUSH_BUTTON_press_time:
  1152                           	opt stack 0
  1153  00006E                     	ds	4
  1154  000072                     _nvmDelayTick:
  1155                           	opt stack 0
  1156  000072                     	ds	4
  1157  000076                     _t1:
  1158                           	opt stack 0
  1159  000076                     	ds	4
  1160  00007A                     _t2:
  1161                           	opt stack 0
  1162  00007A                     	ds	4
  1163  00007E                     _t3:
  1164                           	opt stack 0
  1165  00007E                     	ds	4
  1166  000082                     _tt1:
  1167                           	opt stack 0
  1168  000082                     	ds	4
  1169  000086                     _MACInitParams:
  1170                           	opt stack 0
  1171  000086                     	ds	3
  1172  000089                     _failureCounter:
  1173                           	opt stack 0
  1174  000089                     	ds	2
  1175  00008B                     _nextEEPosition:
  1176                           	opt stack 0
  1177  00008B                     	ds	2
  1178  00008D                     _timer1ReloadVal:
  1179                           	opt stack 0
  1180  00008D                     	ds	2
  1181  00008F                     _LatestConnection:
  1182                           	opt stack 0
  1183  00008F                     	ds	1
  1184  000090                     _MACCurrentChannel:
  1185                           	opt stack 0
  1186  000090                     	ds	1
  1187  000091                     _P2PCapacityInfo:
  1188                           	opt stack 0
  1189  000091                     	ds	1
  1190  000092                     _P2PStatus:
  1191                           	opt stack 0
  1192  000092                     	ds	1
  1193  000093                     _PUSH_BUTTON_pressed:
  1194                           	opt stack 0
  1195  000093                     	ds	1
  1196  000094                     _RxNum:
  1197                           	opt stack 0
  1198  000094                     	ds	1
  1199  000095                     _TxData:
  1200                           	opt stack 0
  1201  000095                     	ds	1
  1202  000096                     _TxNum:
  1203                           	opt stack 0
  1204  000096                     	ds	1
  1205  000097                     _awake:
  1206                           	opt stack 0
  1207  000097                     	ds	1
  1208  000098                     _end_nodes:
  1209                           	opt stack 0
  1210  000098                     	ds	1
  1211  000099                     _fix_me:
  1212                           	opt stack 0
  1213  000099                     	ds	1
  1214  00009A                     _rec_ack:
  1215                           	opt stack 0
  1216  00009A                     	ds	1
  1217  00009B                     _myPANID:
  1218                           	opt stack 0
  1219  00009B                     	ds	2
  1220  00009D                     _nvmConnMode:
  1221                           	opt stack 0
  1222  00009D                     	ds	2
  1223  00009F                     _nvmConnectionTable:
  1224                           	opt stack 0
  1225  00009F                     	ds	2
  1226  0000A1                     _nvmCurrentChannel:
  1227                           	opt stack 0
  1228  0000A1                     	ds	2
  1229  0000A3                     _nvmEdc:
  1230                           	opt stack 0
  1231  0000A3                     	ds	2
  1232  0000A5                     _nvmMyPANID:
  1233                           	opt stack 0
  1234  0000A5                     	ds	2
  1235  0000A7                     _nvmOutFrameCounter:
  1236                           	opt stack 0
  1237  0000A7                     	ds	2
  1238  0000A9                     _nvmRole:
  1239                           	opt stack 0
  1240  0000A9                     	ds	2
  1241  0000AB                     _nvmmyIndex:
  1242                           	opt stack 0
  1243  0000AB                     	ds	2
  1244  0000AD                     _currentChannel:
  1245                           	opt stack 0
  1246  0000AD                     	ds	1
  1247  0000AE                     _myConnectionIndex_in_PanCo:
  1248                           	opt stack 0
  1249  0000AE                     	ds	1
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           postinc0	equ	0xFEE
  1255                           wreg	equ	0xFE8
  1256                           postdec1	equ	0xFE5
  1257                           fsr1h	equ	0xFE2
  1258                           fsr1l	equ	0xFE1
  1259                           
  1260                           	psect	dataBANK0
  1261  0000FB                     __pdataBANK0:
  1262                           	opt stack 0
  1263  0000FB                     _AdditionalNodeID:
  1264                           	opt stack 0
  1265  0000FB                     	ds	1
  1266  0000FC                     _chk_sel_status:
  1267                           	opt stack 0
  1268  0000FC                     	ds	1
  1269  0000FD                     _ConnMode:
  1270                           	opt stack 0
  1271  0000FD                     	ds	1
  1272                           tblptru	equ	0xFF8
  1273                           tblptrh	equ	0xFF7
  1274                           tblptrl	equ	0xFF6
  1275                           tablat	equ	0xFF5
  1276                           postinc0	equ	0xFEE
  1277                           wreg	equ	0xFE8
  1278                           postdec1	equ	0xFE5
  1279                           fsr1h	equ	0xFE2
  1280                           fsr1l	equ	0xFE1
  1281                           
  1282                           	psect	bssBANK1
  1283  000100                     __pbssBANK1:
  1284                           	opt stack 0
  1285  000100                     _tt2:
  1286                           	opt stack 0
  1287  000100                     	ds	4
  1288  000104                     _RxBuffer:
  1289                           	opt stack 0
  1290  000104                     	ds	138
  1291  00018E                     _TxBuffer:
  1292                           	opt stack 0
  1293  00018E                     	ds	40
  1294  0001B6                     _LCDText:
  1295                           	opt stack 0
  1296  0001B6                     	ds	33
  1297  0001D7                     _myLongAddress:
  1298                           	opt stack 0
  1299  0001D7                     	ds	8
  1300                           tblptru	equ	0xFF8
  1301                           tblptrh	equ	0xFF7
  1302                           tblptrl	equ	0xFF6
  1303                           tablat	equ	0xFF5
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           postdec1	equ	0xFE5
  1307                           fsr1h	equ	0xFE2
  1308                           fsr1l	equ	0xFE1
  1309                           
  1310                           	psect	bssBANK2
  1311  000200                     __pbssBANK2:
  1312                           	opt stack 0
  1313  000200                     _END_DEVICES_Short_Address:
  1314                           	opt stack 0
  1315  000200                     	ds	160
  1316                           tblptru	equ	0xFF8
  1317                           tblptrh	equ	0xFF7
  1318                           tblptrl	equ	0xFF6
  1319                           tablat	equ	0xFF5
  1320                           postinc0	equ	0xFEE
  1321                           wreg	equ	0xFE8
  1322                           postdec1	equ	0xFE5
  1323                           fsr1h	equ	0xFE2
  1324                           fsr1l	equ	0xFE1
  1325                           
  1326                           	psect	bssBIGRAM
  1327  0002A0                     __pbssBIGRAM:
  1328                           	opt stack 0
  1329  0002A0                     _ConnectionTable:
  1330                           	opt stack 0
  1331  0002A0                     	ds	560
  1332                           tblptru	equ	0xFF8
  1333                           tblptrh	equ	0xFF7
  1334                           tblptrl	equ	0xFF6
  1335                           tablat	equ	0xFF5
  1336                           postinc0	equ	0xFEE
  1337                           wreg	equ	0xFE8
  1338                           postdec1	equ	0xFE5
  1339                           fsr1h	equ	0xFE2
  1340                           fsr1l	equ	0xFE1
  1341                           
  1342                           	psect	cstackBANK1
  1343  0001DF                     __pcstackBANK1:
  1344                           	opt stack 0
  1345  0001DF                     MiApp_UnicastStar@SecEn:
  1346                           	opt stack 0
  1347  0001DF                     MiApp_EstablishConnection@tmpConnectionMode:
  1348                           	opt stack 0
  1349                           
  1350                           ; 1 bytes @ 0x0
  1351  0001DF                     	ds	1
  1352  0001E0                     MiApp_EstablishConnection@retry:
  1353                           	opt stack 0
  1354  0001E0                     MiApp_UnicastStar@t1:
  1355                           	opt stack 0
  1356                           
  1357                           ; 4 bytes @ 0x1
  1358  0001E0                     	ds	1
  1359  0001E1                     MiApp_EstablishConnection@connectionInterval:
  1360                           	opt stack 0
  1361                           
  1362                           ; 1 bytes @ 0x2
  1363  0001E1                     	ds	1
  1364  0001E2                     MiApp_EstablishConnection@t1:
  1365                           	opt stack 0
  1366                           
  1367                           ; 4 bytes @ 0x3
  1368  0001E2                     	ds	2
  1369  0001E4                     MiApp_UnicastStar@t2:
  1370                           	opt stack 0
  1371                           
  1372                           ; 4 bytes @ 0x5
  1373  0001E4                     	ds	2
  1374  0001E6                     MiApp_EstablishConnection@t2:
  1375                           	opt stack 0
  1376                           
  1377                           ; 4 bytes @ 0x7
  1378  0001E6                     	ds	4
  1379  0001EA                     MiApp_EstablishConnection@i:
  1380                           	opt stack 0
  1381                           
  1382                           ; 1 bytes @ 0xB
  1383  0001EA                     	ds	1
  1384  0001EB                     ??_run_star_demo:
  1385                           
  1386                           ; 0 bytes @ 0xC
  1387  0001EB                     	ds	7
  1388  0001F2                     run_star_demo@sw_layer_ack_status:
  1389                           	opt stack 0
  1390                           
  1391                           ; 1 bytes @ 0x13
  1392  0001F2                     	ds	1
  1393  0001F3                     run_star_demo@update_ed:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0x14
  1397  0001F3                     	ds	1
  1398  0001F4                     run_star_demo@PressedButton:
  1399                           	opt stack 0
  1400                           
  1401                           ; 1 bytes @ 0x15
  1402  0001F4                     	ds	1
  1403  0001F5                     run_star_demo@switch_val:
  1404                           	opt stack 0
  1405                           
  1406                           ; 1 bytes @ 0x16
  1407  0001F5                     	ds	1
  1408  0001F6                     run_star_demo@select_ed:
  1409                           	opt stack 0
  1410                           
  1411                           ; 1 bytes @ 0x17
  1412  0001F6                     	ds	1
  1413                           tblptru	equ	0xFF8
  1414                           tblptrh	equ	0xFF7
  1415                           tblptrl	equ	0xFF6
  1416                           tablat	equ	0xFF5
  1417                           postinc0	equ	0xFEE
  1418                           wreg	equ	0xFE8
  1419                           postdec1	equ	0xFE5
  1420                           fsr1h	equ	0xFE2
  1421                           fsr1l	equ	0xFE1
  1422                           
  1423                           	psect	cstackBANK0
  1424  0000AF                     __pcstackBANK0:
  1425                           	opt stack 0
  1426  0000AF                     MiMAC_PowerState@PowerState:
  1427                           	opt stack 0
  1428  0000AF                     sprintf@idx:
  1429                           	opt stack 0
  1430  0000AF                     MiMAC_Init@initValue:
  1431                           	opt stack 0
  1432  0000AF                     MiMAC_SendPacket@transParam:
  1433                           	opt stack 0
  1434                           
  1435                           ; 7 bytes @ 0x0
  1436  0000AF                     	ds	1
  1437  0000B0                     _sprintf$3947:
  1438                           	opt stack 0
  1439  0000B0                     MiMAC_PowerState@t1:
  1440                           	opt stack 0
  1441                           
  1442                           ; 4 bytes @ 0x1
  1443  0000B0                     	ds	2
  1444  0000B2                     MiMAC_Init@i:
  1445                           	opt stack 0
  1446  0000B2                     _sprintf$3948:
  1447                           	opt stack 0
  1448                           
  1449                           ; 2 bytes @ 0x3
  1450  0000B2                     	ds	1
  1451  0000B3                     MiApp_ProtocolInit@tmp:
  1452                           	opt stack 0
  1453                           
  1454                           ; 2 bytes @ 0x4
  1455  0000B3                     	ds	1
  1456  0000B4                     MiMAC_PowerState@results:
  1457                           	opt stack 0
  1458  0000B4                     _sprintf$3954:
  1459                           	opt stack 0
  1460                           
  1461                           ; 2 bytes @ 0x5
  1462  0000B4                     	ds	1
  1463  0000B5                     MiApp_ProtocolInit@bNetworkFreezer:
  1464                           	opt stack 0
  1465  0000B5                     MiMAC_PowerState@t2:
  1466                           	opt stack 0
  1467                           
  1468                           ; 4 bytes @ 0x6
  1469  0000B5                     	ds	1
  1470  0000B6                     sprintf@cp:
  1471                           	opt stack 0
  1472  0000B6                     MiMAC_SendPacket@MACPayload:
  1473                           	opt stack 0
  1474  0000B6                     MiApp_ProtocolInit@initValue:
  1475                           	opt stack 0
  1476                           
  1477                           ; 3 bytes @ 0x7
  1478  0000B6                     	ds	1
  1479  0000B7                     sprintf@len:
  1480                           	opt stack 0
  1481                           
  1482                           ; 2 bytes @ 0x8
  1483  0000B7                     	ds	1
  1484  0000B8                     MiMAC_SendPacket@MACPayloadLen:
  1485                           	opt stack 0
  1486                           
  1487                           ; 1 bytes @ 0x9
  1488  0000B8                     	ds	1
  1489  0000B9                     ??_MiMAC_SendPacket:
  1490  0000B9                     MiApp_ProtocolInit@i:
  1491                           	opt stack 0
  1492  0000B9                     sprintf@ap:
  1493                           	opt stack 0
  1494                           
  1495                           ; 1 bytes @ 0xA
  1496  0000B9                     	ds	1
  1497  0000BA                     sprintf@val:
  1498                           	opt stack 0
  1499                           
  1500                           ; 2 bytes @ 0xB
  1501  0000BA                     	ds	2
  1502  0000BC                     sprintf@prec:
  1503                           	opt stack 0
  1504                           
  1505                           ; 1 bytes @ 0xD
  1506  0000BC                     	ds	1
  1507  0000BD                     sprintf@width:
  1508                           	opt stack 0
  1509  0000BD                     MiMAC_SendPacket@t1:
  1510                           	opt stack 0
  1511                           
  1512                           ; 4 bytes @ 0xE
  1513  0000BD                     	ds	2
  1514  0000BF                     sprintf@c:
  1515                           	opt stack 0
  1516                           
  1517                           ; 1 bytes @ 0x10
  1518  0000BF                     	ds	1
  1519  0000C0                     sprintf@flag:
  1520                           	opt stack 0
  1521                           
  1522                           ; 2 bytes @ 0x11
  1523  0000C0                     	ds	1
  1524  0000C1                     MiMAC_SendPacket@t2:
  1525                           	opt stack 0
  1526                           
  1527                           ; 4 bytes @ 0x12
  1528  0000C1                     	ds	1
  1529  0000C2                     LCDTRXCount@txCount:
  1530                           	opt stack 0
  1531  0000C2                     LCDDisplay@text:
  1532                           	opt stack 0
  1533                           
  1534                           ; 2 bytes @ 0x13
  1535  0000C2                     	ds	1
  1536  0000C3                     DemoOutput_UpdateTxRx@RxNum:
  1537                           	opt stack 0
  1538                           
  1539                           ; 1 bytes @ 0x14
  1540  0000C3                     	ds	1
  1541  0000C4                     LCDDisplay@value:
  1542                           	opt stack 0
  1543  0000C4                     DemoOutput_UpdateTxRx@TxNum:
  1544                           	opt stack 0
  1545                           
  1546                           ; 1 bytes @ 0x15
  1547  0000C4                     	ds	1
  1548  0000C5                     MiMAC_SendPacket@IntraPAN:
  1549                           	opt stack 0
  1550  0000C5                     LCDDisplay@delay:
  1551                           	opt stack 0
  1552                           
  1553                           ; 1 bytes @ 0x16
  1554  0000C5                     	ds	1
  1555  0000C6                     MiMAC_SendPacket@frameControl:
  1556                           	opt stack 0
  1557  0000C6                     DemoOutput_Channel@Step:
  1558                           	opt stack 0
  1559  0000C6                     STAR_DEMO_OPTIONS_MESSAGE@NetworkRole:
  1560                           	opt stack 0
  1561  0000C6                     freezer_feature@PressedButton1:
  1562                           	opt stack 0
  1563                           
  1564                           ; 1 bytes @ 0x17
  1565  0000C6                     	ds	1
  1566  0000C7                     MiMAC_SendPacket@headerLength:
  1567                           	opt stack 0
  1568  0000C7                     DemoOutput_Channel@channel:
  1569                           	opt stack 0
  1570                           
  1571                           ; 1 bytes @ 0x18
  1572  0000C7                     	ds	1
  1573  0000C8                     MiMAC_SendPacket@i:
  1574                           	opt stack 0
  1575                           
  1576                           ; 1 bytes @ 0x19
  1577  0000C8                     	ds	1
  1578  0000C9                     MiMAC_SendPacket@loc:
  1579                           	opt stack 0
  1580                           
  1581                           ; 1 bytes @ 0x1A
  1582  0000C9                     	ds	1
  1583  0000CA                     SendPacket@DestinationPANID:
  1584                           	opt stack 0
  1585                           
  1586                           ; 2 bytes @ 0x1B
  1587  0000CA                     	ds	2
  1588  0000CC                     SendPacket@DestinationAddress:
  1589                           	opt stack 0
  1590                           
  1591                           ; 2 bytes @ 0x1D
  1592  0000CC                     	ds	2
  1593  0000CE                     SendPacket@isCommand:
  1594                           	opt stack 0
  1595                           
  1596                           ; 1 bytes @ 0x1F
  1597  0000CE                     	ds	1
  1598  0000CF                     SendPacket@SecurityEnabled:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x20
  1602  0000CF                     	ds	1
  1603  0000D0                     ??_SendPacket:
  1604                           
  1605                           ; 0 bytes @ 0x21
  1606  0000D0                     	ds	1
  1607  0000D1                     SendPacket@status:
  1608                           	opt stack 0
  1609                           
  1610                           ; 1 bytes @ 0x22
  1611  0000D1                     	ds	1
  1612  0000D2                     SendPacket@Broadcast:
  1613                           	opt stack 0
  1614                           
  1615                           ; 1 bytes @ 0x23
  1616  0000D2                     	ds	1
  1617  0000D3                     SendPacket@tParam:
  1618                           	opt stack 0
  1619                           
  1620                           ; 7 bytes @ 0x24
  1621  0000D3                     	ds	7
  1622  0000DA                     CheckForData@tmpTxData:
  1623                           	opt stack 0
  1624  0000DA                     MiApp_UnicastAddress@DestinationAddress:
  1625                           	opt stack 0
  1626  0000DA                     SW_Ack_SrED@Dest_Addr:
  1627                           	opt stack 0
  1628                           
  1629                           ; 2 bytes @ 0x2B
  1630  0000DA                     	ds	1
  1631  0000DB                     CheckForData@firstuint8_t:
  1632                           	opt stack 0
  1633                           
  1634                           ; 1 bytes @ 0x2C
  1635  0000DB                     	ds	1
  1636  0000DC                     MiApp_UnicastAddress@PermanentAddr:
  1637                           	opt stack 0
  1638                           
  1639                           ; 1 bytes @ 0x2D
  1640  0000DC                     	ds	1
  1641  0000DD                     MiApp_UnicastAddress@SecEn:
  1642                           	opt stack 0
  1643                           
  1644                           ; 1 bytes @ 0x2E
  1645  0000DD                     	ds	1
  1646  0000DE                     MiApp_UnicastConnection@SecEn:
  1647                           	opt stack 0
  1648                           
  1649                           ; 1 bytes @ 0x2F
  1650  0000DE                     	ds	1
  1651  0000DF                     MiApp_UnicastConnection@ConnectionIndex:
  1652                           	opt stack 0
  1653                           
  1654                           ; 1 bytes @ 0x30
  1655  0000DF                     	ds	1
  1656  0000E0                     Forward_Packet_PANCr_to_EDy@fw_payload:
  1657                           	opt stack 0
  1658                           
  1659                           ; 2 bytes @ 0x31
  1660  0000E0                     	ds	2
  1661  0000E2                     Forward_Packet_PANCr_to_EDy@index:
  1662                           	opt stack 0
  1663                           
  1664                           ; 1 bytes @ 0x33
  1665  0000E2                     	ds	1
  1666  0000E3                     Forward_Packet_PANCr_to_EDy@EDxAddress:
  1667                           	opt stack 0
  1668                           
  1669                           ; 2 bytes @ 0x34
  1670  0000E3                     	ds	2
  1671  0000E5                     Forward_Packet_PANCr_to_EDy@status:
  1672                           	opt stack 0
  1673                           
  1674                           ; 1 bytes @ 0x36
  1675  0000E5                     	ds	1
  1676  0000E6                     Forward_Packet_PANCr_to_EDy@i:
  1677                           	opt stack 0
  1678                           
  1679                           ; 1 bytes @ 0x37
  1680  0000E6                     	ds	1
  1681  0000E7                     ??_P2PTasks:
  1682                           
  1683                           ; 0 bytes @ 0x38
  1684  0000E7                     	ds	4
  1685  0000EB                     P2PTasks@FW_Stat:
  1686                           	opt stack 0
  1687                           
  1688                           ; 1 bytes @ 0x3C
  1689  0000EB                     	ds	1
  1690  0000EC                     P2PTasks@tmp:
  1691                           	opt stack 0
  1692                           
  1693                           ; 2 bytes @ 0x3D
  1694  0000EC                     	ds	2
  1695  0000EE                     P2PTasks@final_index:
  1696                           	opt stack 0
  1697                           
  1698                           ; 1 bytes @ 0x3F
  1699  0000EE                     	ds	1
  1700  0000EF                     P2PTasks@tmpTick:
  1701                           	opt stack 0
  1702                           
  1703                           ; 4 bytes @ 0x40
  1704  0000EF                     	ds	4
  1705  0000F3                     P2PTasks@i:
  1706                           	opt stack 0
  1707                           
  1708                           ; 1 bytes @ 0x44
  1709  0000F3                     	ds	1
  1710  0000F4                     ??_MiApp_UnicastStar:
  1711  0000F4                     MiApp_TransceiverPowerState@Mode:
  1712                           	opt stack 0
  1713  0000F4                     MiApp_EstablishConnection@Mode:
  1714                           	opt stack 0
  1715                           
  1716                           ; 1 bytes @ 0x45
  1717  0000F4                     	ds	1
  1718  0000F5                     ??_MiApp_EstablishConnection:
  1719                           
  1720                           ; 0 bytes @ 0x46
  1721  0000F5                     	ds	4
  1722  0000F9                     Initialize_Demo@freezer_enable:
  1723                           	opt stack 0
  1724                           
  1725                           ; 1 bytes @ 0x4A
  1726  0000F9                     	ds	1
  1727  0000FA                     main@freezer_enable:
  1728                           	opt stack 0
  1729                           
  1730                           ; 1 bytes @ 0x4B
  1731  0000FA                     	ds	1
  1732                           tblptru	equ	0xFF8
  1733                           tblptrh	equ	0xFF7
  1734                           tblptrl	equ	0xFF6
  1735                           tablat	equ	0xFF5
  1736                           postinc0	equ	0xFEE
  1737                           wreg	equ	0xFE8
  1738                           postdec1	equ	0xFE5
  1739                           fsr1h	equ	0xFE2
  1740                           fsr1l	equ	0xFE1
  1741                           
  1742                           	psect	cstackCOMRAM
  1743  000001                     __pcstackCOMRAM:
  1744                           	opt stack 0
  1745  000001                     i2SPI1_Exchange8bit@data:
  1746                           	opt stack 0
  1747                           
  1748                           ; 1 bytes @ 0x0
  1749  000001                     	ds	1
  1750  000002                     i2PHYSetShortRAMAddr@value:
  1751                           	opt stack 0
  1752  000002                     i2PHYGetShortRAMAddr@address:
  1753                           	opt stack 0
  1754  000002                     i2PHYGetLongRAMAddr@address:
  1755                           	opt stack 0
  1756                           
  1757                           ; 2 bytes @ 0x1
  1758  000002                     	ds	1
  1759  000003                     i2PHYSetShortRAMAddr@address:
  1760                           	opt stack 0
  1761  000003                     i2PHYGetShortRAMAddr@toReturn:
  1762                           	opt stack 0
  1763                           
  1764                           ; 1 bytes @ 0x2
  1765  000003                     	ds	1
  1766  000004                     ??i2_PHYGetLongRAMAddr:
  1767  000004                     i2PHYSetShortRAMAddr@tmpRFIE:
  1768                           	opt stack 0
  1769  000004                     i2PHYGetShortRAMAddr@tmpRFIE:
  1770                           	opt stack 0
  1771                           
  1772                           ; 1 bytes @ 0x3
  1773  000004                     	ds	2
  1774  000006                     i2PHYGetLongRAMAddr@toReturn:
  1775                           	opt stack 0
  1776                           
  1777                           ; 1 bytes @ 0x5
  1778  000006                     	ds	1
  1779  000007                     i2PHYGetLongRAMAddr@tmpRFIE:
  1780                           	opt stack 0
  1781                           
  1782                           ; 1 bytes @ 0x6
  1783  000007                     	ds	1
  1784  000008                     ??_high_isr:
  1785                           
  1786                           ; 0 bytes @ 0x7
  1787  000008                     	ds	9
  1788  000011                     high_isr@results:
  1789                           	opt stack 0
  1790                           
  1791                           ; 1 bytes @ 0x10
  1792  000011                     	ds	1
  1793  000012                     high_isr@flags:
  1794                           	opt stack 0
  1795                           
  1796                           ; 2 bytes @ 0x11
  1797  000012                     	ds	2
  1798  000014                     high_isr@RxBank:
  1799                           	opt stack 0
  1800                           
  1801                           ; 1 bytes @ 0x13
  1802  000014                     	ds	1
  1803  000015                     high_isr@i:
  1804                           	opt stack 0
  1805                           
  1806                           ; 1 bytes @ 0x14
  1807  000015                     	ds	1
  1808  000016                     ??_isdigit:
  1809  000016                     ??_MiMAC_ReceivedPacket:
  1810  000016                     ??_handle_lost_connection:
  1811  000016                     ?___wmul:
  1812                           	opt stack 0
  1813  000016                     ?___lwdiv:
  1814                           	opt stack 0
  1815  000016                     ?_MiWi_TickGet:
  1816                           	opt stack 0
  1817  000016                     Total_Connections@count:
  1818                           	opt stack 0
  1819  000016                     SPI1_Exchange8bit@data:
  1820                           	opt stack 0
  1821  000016                     SPIPut2@v:
  1822                           	opt stack 0
  1823  000016                     NVMalloc@size:
  1824                           	opt stack 0
  1825  000016                     Find_Index@DestAddr:
  1826                           	opt stack 0
  1827  000016                     isSameAddress@Address1:
  1828                           	opt stack 0
  1829  000016                     DELAY_ms@ms:
  1830                           	opt stack 0
  1831  000016                     ___wmul@multiplier:
  1832                           	opt stack 0
  1833  000016                     ___lwdiv@dividend:
  1834                           	opt stack 0
  1835  000016                     memset@p1:
  1836                           	opt stack 0
  1837                           
  1838                           ; 2 bytes @ 0x15
  1839  000016                     	ds	1
  1840  000017                     PHYSetShortRAMAddr@value:
  1841                           	opt stack 0
  1842  000017                     PHYGetShortRAMAddr@address:
  1843                           	opt stack 0
  1844  000017                     Total_Connections@i:
  1845                           	opt stack 0
  1846  000017                     LCD_WriteCmd@data:
  1847                           	opt stack 0
  1848  000017                     LCD_WriteData@data:
  1849                           	opt stack 0
  1850  000017                     _isdigit$4178:
  1851                           	opt stack 0
  1852  000017                     PHYSetLongRAMAddr@address:
  1853                           	opt stack 0
  1854  000017                     PHYGetLongRAMAddr@address:
  1855                           	opt stack 0
  1856  000017                     EEPROM_Read@dest:
  1857                           	opt stack 0
  1858  000017                     EEPROM_Write@dest:
  1859                           	opt stack 0
  1860                           
  1861                           ; 2 bytes @ 0x16
  1862  000017                     	ds	1
  1863  000018                     ??_DELAY_ms:
  1864  000018                     PHYSetShortRAMAddr@address:
  1865                           	opt stack 0
  1866  000018                     PHYGetShortRAMAddr@toReturn:
  1867                           	opt stack 0
  1868  000018                     NVMalloc@location:
  1869                           	opt stack 0
  1870  000018                     LCD_Update@i:
  1871                           	opt stack 0
  1872  000018                     isdigit@c:
  1873                           	opt stack 0
  1874  000018                     isSameAddress@Address2:
  1875                           	opt stack 0
  1876  000018                     ___wmul@multiplicand:
  1877                           	opt stack 0
  1878  000018                     ___lwdiv@divisor:
  1879                           	opt stack 0
  1880  000018                     memset@c:
  1881                           	opt stack 0
  1882                           
  1883                           ; 2 bytes @ 0x17
  1884  000018                     	ds	1
  1885  000019                     ??_PHYGetLongRAMAddr:
  1886  000019                     ??_NVMalloc:
  1887  000019                     PHYSetLongRAMAddr@value:
  1888                           	opt stack 0
  1889  000019                     PHYSetShortRAMAddr@tmpRFIE:
  1890                           	opt stack 0
  1891  000019                     PHYGetShortRAMAddr@tmpRFIE:
  1892                           	opt stack 0
  1893  000019                     EEPROM_Read@addr:
  1894                           	opt stack 0
  1895  000019                     EEPROM_Write@addr:
  1896                           	opt stack 0
  1897                           
  1898                           ; 1 bytes @ 0x18
  1899  000019                     	ds	1
  1900  00001A                     ??_MiWi_TickGet:
  1901  00001A                     ??_PHYSetLongRAMAddr:
  1902  00001A                     MiMAC_SetAltAddress@PANID:
  1903                           	opt stack 0
  1904  00001A                     Find_Index@i:
  1905                           	opt stack 0
  1906  00001A                     EEPROM_Read@count:
  1907                           	opt stack 0
  1908  00001A                     EEPROM_Write@count:
  1909                           	opt stack 0
  1910  00001A                     ___lwdiv@counter:
  1911                           	opt stack 0
  1912  00001A                     ___wmul@product:
  1913                           	opt stack 0
  1914  00001A                     memset@n:
  1915                           	opt stack 0
  1916                           
  1917                           ; 2 bytes @ 0x19
  1918  00001A                     	ds	1
  1919  00001B                     ??_EEPROM_Write:
  1920  00001B                     PHYGetLongRAMAddr@toReturn:
  1921                           	opt stack 0
  1922  00001B                     MiMAC_ReceivedPacket@addrMode:
  1923                           	opt stack 0
  1924  00001B                     MiMAC_SetAltAddress@Address:
  1925                           	opt stack 0
  1926  00001B                     NVMInit@result:
  1927                           	opt stack 0
  1928  00001B                     MiWi_TickGet@failureCounter:
  1929                           	opt stack 0
  1930  00001B                     Read_MAC_Address@myAddress:
  1931                           	opt stack 0
  1932  00001B                     ___lwdiv@quotient:
  1933                           	opt stack 0
  1934                           
  1935                           ; 2 bytes @ 0x1A
  1936  00001B                     	ds	1
  1937  00001C                     PHYSetLongRAMAddr@tmpRFIE:
  1938                           	opt stack 0
  1939  00001C                     PHYGetLongRAMAddr@tmpRFIE:
  1940                           	opt stack 0
  1941  00001C                     MiMAC_ReceivedPacket@i:
  1942                           	opt stack 0
  1943  00001C                     handle_lost_connection@i:
  1944                           	opt stack 0
  1945  00001C                     isSameAddress@i:
  1946                           	opt stack 0
  1947  00001C                     EEPROM_Write@oldRFIE:
  1948                           	opt stack 0
  1949  00001C                     memset@p:
  1950                           	opt stack 0
  1951  00001C                     MiWi_TickGet@currentTime:
  1952                           	opt stack 0
  1953                           
  1954                           ; 4 bytes @ 0x1B
  1955  00001C                     	ds	1
  1956  00001D                     ??_Read_MAC_Address:
  1957  00001D                     ?___lwmod:
  1958                           	opt stack 0
  1959  00001D                     MiMAC_ReceivedPacket@bIntraPAN:
  1960                           	opt stack 0
  1961  00001D                     MiMAC_SetChannel@offsetFreq:
  1962                           	opt stack 0
  1963  00001D                     EEPROM_Write@PageCounter:
  1964                           	opt stack 0
  1965  00001D                     store_connection_tb@payload:
  1966                           	opt stack 0
  1967  00001D                     ___lwmod@dividend:
  1968                           	opt stack 0
  1969                           
  1970                           ; 2 bytes @ 0x1C
  1971  00001D                     	ds	1
  1972  00001E                     ??_AddConnection:
  1973  00001E                     ??_MiApp_ConnectionMode:
  1974  00001E                     MiMAC_SetChannel@channel:
  1975                           	opt stack 0
  1976                           
  1977                           ; 1 bytes @ 0x1D
  1978  00001E                     	ds	1
  1979  00001F                     ??_InitMRF24J40:
  1980  00001F                     ??_store_connection_tb:
  1981  00001F                     MiApp_SetChannel@channel:
  1982                           	opt stack 0
  1983  00001F                     MiApp_ConnectionMode@Mode:
  1984                           	opt stack 0
  1985  00001F                     Read_MAC_Address@i:
  1986                           	opt stack 0
  1987  00001F                     ___lwmod@divisor:
  1988                           	opt stack 0
  1989                           
  1990                           ; 2 bytes @ 0x1E
  1991  00001F                     	ds	1
  1992  000020                     InitMRF24J40@_dcnt:
  1993                           	opt stack 0
  1994  000020                     DELAY_ms@cyclesRequiredForEntireDelay:
  1995                           	opt stack 0
  1996  000020                     ButtonPressed@tickDifference:
  1997                           	opt stack 0
  1998                           
  1999                           ; 4 bytes @ 0x1F
  2000  000020                     	ds	1
  2001  000021                     store_connection_tb@j:
  2002                           	opt stack 0
  2003  000021                     ___lwmod@counter:
  2004                           	opt stack 0
  2005                           
  2006                           ; 1 bytes @ 0x20
  2007  000021                     	ds	1
  2008  000022                     ?_sprintf:
  2009                           	opt stack 0
  2010  000022                     store_connection_tb@i:
  2011                           	opt stack 0
  2012  000022                     sprintf@sp:
  2013                           	opt stack 0
  2014                           
  2015                           ; 2 bytes @ 0x21
  2016  000022                     	ds	1
  2017  000023                     AddConnection@connectionSlot:
  2018                           	opt stack 0
  2019                           
  2020                           ; 1 bytes @ 0x22
  2021  000023                     	ds	1
  2022  000024                     AddConnection@i:
  2023                           	opt stack 0
  2024  000024                     sprintf@f:
  2025                           	opt stack 0
  2026  000024                     InitMRF24J40@_dcnt_705:
  2027                           	opt stack 0
  2028  000024                     ButtonPressed@t:
  2029                           	opt stack 0
  2030                           
  2031                           ; 4 bytes @ 0x23
  2032  000024                     	ds	4
  2033  000028                     InitMRF24J40@_ms:
  2034                           	opt stack 0
  2035                           
  2036                           ; 4 bytes @ 0x27
  2037  000028                     	ds	4
  2038  00002C                     InitMRF24J40@_ms_706:
  2039                           	opt stack 0
  2040                           
  2041                           ; 4 bytes @ 0x2B
  2042  00002C                     	ds	2
  2043  00002E                     ??_sprintf:
  2044                           
  2045                           ; 0 bytes @ 0x2D
  2046  00002E                     	ds	2
  2047  000030                     InitMRF24J40@j:
  2048                           	opt stack 0
  2049                           
  2050                           ; 2 bytes @ 0x2F
  2051  000030                     	ds	2
  2052  000032                     InitMRF24J40@i:
  2053                           	opt stack 0
  2054  000032                     LCDTRXCount@rxCount:
  2055                           	opt stack 0
  2056  000032                     LCDDisplay@i:
  2057                           	opt stack 0
  2058                           
  2059                           ; 1 bytes @ 0x31
  2060  000032                     	ds	1
  2061  000033                     tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           postinc0	equ	0xFEE
  2066                           wreg	equ	0xFE8
  2067                           postdec1	equ	0xFE5
  2068                           fsr1h	equ	0xFE2
  2069                           fsr1l	equ	0xFE1
  2070                           
  2071                           ; 0 bytes @ 0x32
  2072 ;;
  2073 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2074 ;;
  2075 ;; *************** function _main *****************
  2076 ;; Defined at:
  2077 ;;		line 56 in file "../src/main.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  freezer_enab    1   75[BANK0 ] unsigned char 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;		None               void
  2084 ;; Registers used:
  2085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : F/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2094 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2095 ;;Total ram usage:        1 bytes
  2096 ;; Hardware stack levels required when called:   17
  2097 ;; This function calls:
  2098 ;;		_DemoOutput_Greeting
  2099 ;;		_Initialize_Demo
  2100 ;;		_Run_Demo
  2101 ;;		_SYSTEM_Initialize
  2102 ;;		_TMR1_Initialize
  2103 ;;		_freezer_feature
  2104 ;; This function is called by:
  2105 ;;		Startup code after reset
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text0
  2110  003306                     __ptext0:
  2111                           	opt stack 0
  2112  003306                     _main:
  2113                           	opt stack 14
  2114                           
  2115                           ;main.c: 60: SYSTEM_Initialize();
  2116                           
  2117                           ;incstack = 0
  2118  003306  ECB1  F012         	call	_SYSTEM_Initialize	;wreg free
  2119                           
  2120                           ;main.c: 62: TMR1_Initialize();
  2121  00330A  ECAE  F019         	call	_TMR1_Initialize	;wreg free
  2122                           
  2123                           ;main.c: 64: DemoOutput_Greeting();
  2124  00330E  EC73  F019         	call	_DemoOutput_Greeting	;wreg free
  2125                           
  2126                           ;main.c: 68: freezer_enable = freezer_feature();
  2127  003312  ECED  F018         	call	_freezer_feature	;wreg free
  2128  003316  6FFA               	movwf	main@freezer_enable& (0+255),b
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;main.c: 72: Initialize_Demo(freezer_enable);
  2132  003318  51FA               	movf	main@freezer_enable& (0+255),w,b
  2133  00331A  ECB0  F015         	call	_Initialize_Demo
  2134  00331E                     l12502:
  2135                           
  2136                           ;main.c: 74: {
  2137                           ;main.c: 76: Run_Demo();
  2138  00331E  EC1B  F01A         	call	_Run_Demo	;wreg free
  2139  003322  D7FD               	goto	l12502
  2140  003324                     __end_of_main:
  2141                           	opt stack 0
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           postinc0	equ	0xFEE
  2147                           wreg	equ	0xFE8
  2148                           postdec1	equ	0xFE5
  2149                           fsr1h	equ	0xFE2
  2150                           fsr1l	equ	0xFE1
  2151                           
  2152 ;; *************** function _freezer_feature *****************
  2153 ;; Defined at:
  2154 ;;		line 74 in file "../src/task.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  PressedButto    1   23[BANK0 ] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      unsigned char 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : F/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2169 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2171 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2172 ;;Total ram usage:        1 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    7
  2175 ;; This function calls:
  2176 ;;		_ButtonPressed
  2177 ;;		_LCDDisplay
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	text1
  2184  0031DA                     __ptext1:
  2185                           	opt stack 0
  2186  0031DA                     _freezer_feature:
  2187                           	opt stack 23
  2188                           
  2189                           ;task.c: 79: LCDDisplay((char *)"SW1:New Network SW2:Freezer", 0, 0);
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;incstack = 0
  2193  0031DA  0E6F               	movlw	low STR_30
  2194  0031DC  0100               	movlb	0	; () banked
  2195  0031DE  6FC2               	movwf	LCDDisplay@text& (0+255),b
  2196  0031E0  0EFE               	movlw	high STR_30
  2197  0031E2  6FC3               	movwf	(LCDDisplay@text+1)& (0+255),b
  2198  0031E4  6BC4               	clrf	LCDDisplay@value& (0+255),b
  2199  0031E6  6BC5               	clrf	LCDDisplay@delay& (0+255),b
  2200  0031E8  EC64  F017         	call	_LCDDisplay	;wreg free
  2201  0031EC                     l12438:
  2202                           
  2203                           ;task.c: 82: {
  2204                           ;task.c: 83: uint8_t PressedButton1 = ButtonPressed();
  2205  0031EC  EC75  F014         	call	_ButtonPressed	;wreg free
  2206  0031F0  0100               	movlb	0	; () banked
  2207  0031F2  6FC6               	movwf	freezer_feature@PressedButton1& (0+255),b
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;task.c: 84: if (PressedButton1 == 1)
  2211  0031F4  05C6               	decf	freezer_feature@PressedButton1& (0+255),w,b
  2212  0031F6  E101               	bnz	l12450
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;task.c: 85: {
  2216                           ;task.c: 86: return 0;
  2217  0031F8  0C00               	retlw	0
  2218  0031FA                     l12450:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;task.c: 89: else if (PressedButton1 == 2)
  2222  0031FA  0E02               	movlw	2
  2223  0031FC  19C6               	xorwf	freezer_feature@PressedButton1& (0+255),w,b
  2224  0031FE  E1F6               	bnz	l12438
  2225                           
  2226                           ; BSR set to: 0
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;task.c: 90: {
  2230                           ;task.c: 91: return 1;
  2231  003200  0C01               	retlw	1	;funcret
  2232  003202                     __end_of_freezer_feature:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           postinc0	equ	0xFEE
  2239                           wreg	equ	0xFE8
  2240                           postdec1	equ	0xFE5
  2241                           fsr1h	equ	0xFE2
  2242                           fsr1l	equ	0xFE1
  2243                           
  2244 ;; *************** function _TMR1_Initialize *****************
  2245 ;; Defined at:
  2246 ;;		line 175 in file "../src/system_config/miwikit_pic18f46j50_24j40/symbol.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;		None               void
  2253 ;; Registers used:
  2254 ;;		wreg, status,2
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    3
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text2
  2275  00335C                     __ptext2:
  2276                           	opt stack 0
  2277  00335C                     _TMR1_Initialize:
  2278                           	opt stack 27
  2279                           
  2280                           ;symbol.c: 179: T1CON = 0x38;
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;incstack = 0
  2284  00335C  0E38               	movlw	56
  2285  00335E  6ECD               	movwf	4045,c	;volatile
  2286                           
  2287                           ;symbol.c: 182: T1GCON = 0x00;
  2288  003360  6A9A               	clrf	3994,c	;volatile
  2289                           
  2290                           ;symbol.c: 185: TMR1H = 0x00;
  2291  003362  6ACF               	clrf	4047,c	;volatile
  2292                           
  2293                           ;symbol.c: 188: TMR1L = 0x00;
  2294  003364  6ACE               	clrf	4046,c	;volatile
  2295                           
  2296                           ;symbol.c: 191: timer1ReloadVal = TMR1;
  2297  003366  CFCE F08D          	movff	4046,_timer1ReloadVal	;volatile
  2298  00336A  CFCF F08E          	movff	4047,_timer1ReloadVal+1	;volatile
  2299                           
  2300                           ;symbol.c: 194: PIR1bits.TMR1IF = 0;
  2301  00336E  909E               	bcf	3998,0,c	;volatile
  2302                           
  2303                           ;symbol.c: 197: PIE1bits.TMR1IE = 1;
  2304  003370  809D               	bsf	3997,0,c	;volatile
  2305                           
  2306                           ;symbol.c: 200: T1CONbits.TMR1ON = 1;
  2307  003372  80CD               	bsf	4045,0,c	;volatile
  2308  003374  0012               	return		;funcret
  2309  003376                     __end_of_TMR1_Initialize:
  2310                           	opt stack 0
  2311                           tblptru	equ	0xFF8
  2312                           tblptrh	equ	0xFF7
  2313                           tblptrl	equ	0xFF6
  2314                           tablat	equ	0xFF5
  2315                           postinc0	equ	0xFEE
  2316                           wreg	equ	0xFE8
  2317                           postdec1	equ	0xFE5
  2318                           fsr1h	equ	0xFE2
  2319                           fsr1l	equ	0xFE1
  2320                           
  2321 ;; *************** function _SYSTEM_Initialize *****************
  2322 ;; Defined at:
  2323 ;;		line 47 in file "../src/system_config/miwikit_pic18f46j50_24j40/system.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;		None               void
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    6
  2344 ;; This function calls:
  2345 ;;		_DELAY_ms
  2346 ;;		_LCD_Initialize
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text3
  2353  002562                     __ptext3:
  2354                           	opt stack 0
  2355  002562                     _SYSTEM_Initialize:
  2356                           	opt stack 24
  2357                           
  2358                           ;system.c: 52: OSCCON = 0x78;
  2359                           
  2360                           ;incstack = 0
  2361  002562  0E78               	movlw	120
  2362  002564  6ED3               	movwf	4051,c	;volatile
  2363                           
  2364                           ;system.c: 53: OSCTUNEbits.PLLEN = 1;
  2365  002566  8C9B               	bsf	3995,6,c	;volatile
  2366                           
  2367                           ;system.c: 54: WDTCONbits.SWDTEN = 0;
  2368  002568  90C0               	bcf	4032,0,c	;volatile
  2369                           
  2370                           ;system.c: 60: EECON2 = 0x55;
  2371  00256A  0E55               	movlw	85
  2372  00256C  6EA7               	movwf	4007,c	;volatile
  2373                           
  2374                           ;system.c: 61: EECON2 = 0xAA;
  2375  00256E  0EAA               	movlw	170
  2376  002570  6EA7               	movwf	4007,c	;volatile
  2377                           
  2378                           ;system.c: 62: PPSCONbits.IOLOCK = 0;
  2379  002572  010E               	movlb	14	; () banked
  2380  002574  91FF               	bcf	255,0,b	;volatile
  2381                           
  2382                           ;system.c: 64: RPINR1 = 17;
  2383  002576  0E11               	movlw	17
  2384  002578  6FE7               	movwf	231,b	;volatile
  2385                           
  2386                           ;system.c: 65: RPINR21 = 23;
  2387  00257A  0E17               	movlw	23
  2388  00257C  6FFB               	movwf	251,b	;volatile
  2389                           
  2390                           ;system.c: 66: RPOR21 = 10;
  2391  00257E  0E0A               	movlw	10
  2392  002580  6FDB               	movwf	219,b	;volatile
  2393                           
  2394                           ;system.c: 67: RPOR19 = 9;
  2395  002582  0E09               	movlw	9
  2396  002584  6FD9               	movwf	217,b	;volatile
  2397                           
  2398                           ;system.c: 70: EECON2 = 0x55;
  2399  002586  0E55               	movlw	85
  2400  002588  6EA7               	movwf	4007,c	;volatile
  2401                           
  2402                           ;system.c: 71: EECON2 = 0xAA;
  2403  00258A  0EAA               	movlw	170
  2404  00258C  6EA7               	movwf	4007,c	;volatile
  2405                           
  2406                           ; BSR set to: 14
  2407                           ;system.c: 72: PPSCONbits.IOLOCK = 1;
  2408  00258E  81FF               	bsf	255,0,b	;volatile
  2409                           
  2410                           ;system.c: 77: ANCON0 = 0xFC;
  2411  002590  0EFC               	movlw	252
  2412  002592  010F               	movlb	15	; () banked
  2413  002594  6F48               	movwf	72,b	;volatile
  2414                           
  2415                           ;system.c: 78: ANCON1 = 0x1F;
  2416  002596  0E1F               	movlw	31
  2417  002598  6F49               	movwf	73,b	;volatile
  2418                           
  2419                           ; BSR set to: 15
  2420                           ;system.c: 83: LATCbits.LATC2 = 0;
  2421  00259A  948B               	bcf	3979,2,c	;volatile
  2422                           
  2423                           ; BSR set to: 15
  2424                           ;system.c: 84: LATAbits.LATA6 = 0;
  2425  00259C  9C89               	bcf	3977,6,c	;volatile
  2426                           
  2427                           ; BSR set to: 15
  2428                           ;system.c: 85: LATAbits.LATA7 = 0;
  2429  00259E  9E89               	bcf	3977,7,c	;volatile
  2430                           
  2431                           ; BSR set to: 15
  2432                           ;system.c: 86: TRISCbits.TRISC2 = 0;
  2433  0025A0  9494               	bcf	3988,2,c	;volatile
  2434                           
  2435                           ; BSR set to: 15
  2436                           ;system.c: 87: TRISAbits.TRISA6 = 0;
  2437  0025A2  9C92               	bcf	3986,6,c	;volatile
  2438                           
  2439                           ; BSR set to: 15
  2440                           ;system.c: 88: TRISAbits.TRISA7 = 0;
  2441  0025A4  9E92               	bcf	3986,7,c	;volatile
  2442                           
  2443                           ; BSR set to: 15
  2444                           ;system.c: 90: TRISBbits.TRISB1 = 1;
  2445  0025A6  8293               	bsf	3987,1,c	;volatile
  2446                           
  2447                           ; BSR set to: 15
  2448                           ;system.c: 91: TRISBbits.TRISB2 = 1;
  2449  0025A8  8493               	bsf	3987,2,c	;volatile
  2450                           
  2451                           ; BSR set to: 15
  2452                           ;system.c: 93: INTCON2bits.RBPU = 0;
  2453  0025AA  9EF1               	bcf	intcon2,7,c	;volatile
  2454                           
  2455                           ; BSR set to: 15
  2456                           ;system.c: 98: TRISAbits.TRISA1 = 1;
  2457  0025AC  8292               	bsf	3986,1,c	;volatile
  2458                           
  2459                           ; BSR set to: 15
  2460                           ;system.c: 99: TRISAbits.TRISA0 = 1;
  2461  0025AE  8092               	bsf	3986,0,c	;volatile
  2462                           
  2463                           ; BSR set to: 15
  2464                           ;system.c: 107: LATAbits.LATA5 = 1;
  2465  0025B0  8A89               	bsf	3977,5,c	;volatile
  2466                           
  2467                           ; BSR set to: 15
  2468                           ;system.c: 108: LATDbits.LATD0 = 1;
  2469  0025B2  808C               	bsf	3980,0,c	;volatile
  2470                           
  2471                           ; BSR set to: 15
  2472                           ;system.c: 109: LATDbits.LATD1 = 1;
  2473  0025B4  828C               	bsf	3980,1,c	;volatile
  2474                           
  2475                           ; BSR set to: 15
  2476                           ;system.c: 111: TRISAbits.TRISA5 = 0;
  2477  0025B6  9A92               	bcf	3986,5,c	;volatile
  2478                           
  2479                           ; BSR set to: 15
  2480                           ;system.c: 112: TRISDbits.TRISD0 = 0;
  2481  0025B8  9095               	bcf	3989,0,c	;volatile
  2482                           
  2483                           ; BSR set to: 15
  2484                           ;system.c: 113: TRISDbits.TRISD1 = 0;
  2485  0025BA  9295               	bcf	3989,1,c	;volatile
  2486                           
  2487                           ; BSR set to: 15
  2488                           ;system.c: 114: TRISBbits.TRISB0 = 1;
  2489  0025BC  8093               	bsf	3987,0,c	;volatile
  2490                           
  2491                           ; BSR set to: 15
  2492                           ;system.c: 117: INTCON2bits.INTEDG0 = 0;
  2493  0025BE  9CF1               	bcf	intcon2,6,c	;volatile
  2494                           
  2495                           ; BSR set to: 15
  2496                           ;system.c: 119: INTCONbits.INT0IF = 0;
  2497  0025C0  92F2               	bcf	intcon,1,c	;volatile
  2498                           
  2499                           ; BSR set to: 15
  2500                           ;system.c: 120: INTCONbits.INT0IE = 1;
  2501  0025C2  88F2               	bsf	intcon,4,c	;volatile
  2502                           
  2503                           ; BSR set to: 15
  2504                           ;system.c: 125: TRISBbits.TRISB5 = 1;
  2505  0025C4  8A93               	bsf	3987,5,c	;volatile
  2506                           
  2507                           ; BSR set to: 15
  2508                           ;system.c: 126: TRISCbits.TRISC7 = 0;
  2509  0025C6  9E94               	bcf	3988,7,c	;volatile
  2510                           
  2511                           ; BSR set to: 15
  2512                           ;system.c: 127: TRISBbits.TRISB4 = 0;
  2513  0025C8  9893               	bcf	3987,4,c	;volatile
  2514                           
  2515                           ;system.c: 129: SSP1STAT = 0xC0;
  2516  0025CA  0EC0               	movlw	192
  2517  0025CC  6EC7               	movwf	4039,c	;volatile
  2518                           
  2519                           ;system.c: 130: SSP1CON1 = 0x20;
  2520  0025CE  0E20               	movlw	32
  2521  0025D0  6EC6               	movwf	4038,c	;volatile
  2522                           
  2523                           ; BSR set to: 15
  2524                           ;system.c: 137: LATDbits.LATD5 = 1;
  2525  0025D2  8A8C               	bsf	3980,5,c	;volatile
  2526                           
  2527                           ; BSR set to: 15
  2528                           ;system.c: 138: TRISDbits.TRISD5 = 0;
  2529  0025D4  9A95               	bcf	3989,5,c	;volatile
  2530                           
  2531                           ; BSR set to: 15
  2532                           ;system.c: 139: LATEbits.LATE2 = 1;
  2533  0025D6  848D               	bsf	3981,2,c	;volatile
  2534                           
  2535                           ; BSR set to: 15
  2536                           ;system.c: 140: TRISEbits.TRISE2 = 0;
  2537  0025D8  9496               	bcf	3990,2,c	;volatile
  2538                           
  2539                           ; BSR set to: 15
  2540                           ;system.c: 146: LATEbits.LATE1 = 0;
  2541  0025DA  928D               	bcf	3981,1,c	;volatile
  2542                           
  2543                           ; BSR set to: 15
  2544                           ;system.c: 147: LATDbits.LATD7 = 1;
  2545  0025DC  8E8C               	bsf	3980,7,c	;volatile
  2546                           
  2547                           ; BSR set to: 15
  2548                           ;system.c: 148: LATDbits.LATD3 = 0;
  2549  0025DE  968C               	bcf	3980,3,c	;volatile
  2550                           
  2551                           ; BSR set to: 15
  2552                           ;system.c: 149: LATEbits.LATE0 = 0;
  2553  0025E0  908D               	bcf	3981,0,c	;volatile
  2554                           
  2555                           ; BSR set to: 15
  2556                           ;system.c: 150: TRISEbits.TRISE1 = 0;
  2557  0025E2  9296               	bcf	3990,1,c	;volatile
  2558                           
  2559                           ; BSR set to: 15
  2560                           ;system.c: 151: TRISDbits.TRISD7 = 0;
  2561  0025E4  9E95               	bcf	3989,7,c	;volatile
  2562                           
  2563                           ; BSR set to: 15
  2564                           ;system.c: 152: TRISDbits.TRISD3 = 0;
  2565  0025E6  9695               	bcf	3989,3,c	;volatile
  2566                           
  2567                           ; BSR set to: 15
  2568                           ;system.c: 153: TRISEbits.TRISE0 = 0;
  2569  0025E8  9096               	bcf	3990,0,c	;volatile
  2570                           
  2571                           ; BSR set to: 15
  2572                           ;system.c: 159: TRISDbits.TRISD6 = 1;
  2573  0025EA  8C95               	bsf	3989,6,c	;volatile
  2574                           
  2575                           ; BSR set to: 15
  2576                           ;system.c: 160: TRISDbits.TRISD2 = 0;
  2577  0025EC  9495               	bcf	3989,2,c	;volatile
  2578                           
  2579                           ; BSR set to: 15
  2580                           ;system.c: 161: TRISDbits.TRISD4 = 0;
  2581  0025EE  9895               	bcf	3989,4,c	;volatile
  2582                           
  2583                           ; BSR set to: 15
  2584                           ;system.c: 163: SSP2STAT = 0x00;
  2585  0025F0  6A73               	clrf	3955,c	;volatile
  2586                           
  2587                           ;system.c: 164: SSP2CON1 = 0x31;
  2588  0025F2  0E31               	movlw	49
  2589  0025F4  6E72               	movwf	3954,c	;volatile
  2590                           
  2591                           ; BSR set to: 15
  2592                           ;system.c: 166: PIR3bits.SSP2IF = 0;
  2593  0025F6  9EA4               	bcf	4004,7,c	;volatile
  2594                           
  2595                           ; BSR set to: 15
  2596                           ;system.c: 167: DELAY_ms(100);
  2597  0025F8  6A17               	clrf	DELAY_ms@ms+1,c
  2598  0025FA  0E64               	movlw	100
  2599  0025FC  6E16               	movwf	DELAY_ms@ms,c
  2600  0025FE  EC88  F011         	call	_DELAY_ms	;wreg free
  2601                           
  2602                           ;system.c: 168: LCD_Initialize();
  2603  002602  ECEF  F011         	call	_LCD_Initialize	;wreg free
  2604                           
  2605                           ;system.c: 173: INTCONbits.GIEH = 1;
  2606  002606  8EF2               	bsf	intcon,7,c	;volatile
  2607                           
  2608                           ;system.c: 174: INTCONbits.GIEL = 1;
  2609  002608  8CF2               	bsf	intcon,6,c	;volatile
  2610  00260A  0012               	return		;funcret
  2611  00260C                     __end_of_SYSTEM_Initialize:
  2612                           	opt stack 0
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           intcon	equ	0xFF2
  2618                           intcon2	equ	0xFF1
  2619                           postinc0	equ	0xFEE
  2620                           wreg	equ	0xFE8
  2621                           postdec1	equ	0xFE5
  2622                           fsr1h	equ	0xFE2
  2623                           fsr1l	equ	0xFE1
  2624                           
  2625 ;; *************** function _LCD_Initialize *****************
  2626 ;; Defined at:
  2627 ;;		line 54 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;		None               void
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/F
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2645 ;;Total ram usage:        0 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    5
  2648 ;; This function calls:
  2649 ;;		_DELAY_ms
  2650 ;;		_LCD_WriteCmd
  2651 ;; This function is called by:
  2652 ;;		_SYSTEM_Initialize
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text4
  2657  0023DE                     __ptext4:
  2658                           	opt stack 0
  2659  0023DE                     _LCD_Initialize:
  2660                           	opt stack 24
  2661                           
  2662                           ;lcd.c: 56: LATDbits.LATD7 = 1;
  2663                           
  2664                           ;incstack = 0
  2665  0023DE  8E8C               	bsf	3980,7,c	;volatile
  2666                           
  2667                           ;lcd.c: 57: LATEbits.LATE0 = 0;
  2668  0023E0  908D               	bcf	3981,0,c	;volatile
  2669                           
  2670                           ;lcd.c: 58: DELAY_ms(8);
  2671  0023E2  6A17               	clrf	DELAY_ms@ms+1,c
  2672  0023E4  0E08               	movlw	8
  2673  0023E6  6E16               	movwf	DELAY_ms@ms,c
  2674  0023E8  EC88  F011         	call	_DELAY_ms	;wreg free
  2675                           
  2676                           ;lcd.c: 59: LATEbits.LATE0 = 1;
  2677  0023EC  808D               	bsf	3981,0,c	;volatile
  2678                           
  2679                           ;lcd.c: 60: DELAY_ms(80);
  2680  0023EE  6A17               	clrf	DELAY_ms@ms+1,c
  2681  0023F0  0E50               	movlw	80
  2682  0023F2  6E16               	movwf	DELAY_ms@ms,c
  2683  0023F4  EC88  F011         	call	_DELAY_ms	;wreg free
  2684                           
  2685                           ;lcd.c: 61: LCD_WriteCmd(0x30);
  2686  0023F8  0E30               	movlw	48
  2687  0023FA  ECF5  F019         	call	_LCD_WriteCmd
  2688                           
  2689                           ;lcd.c: 62: DELAY_ms(8);
  2690  0023FE  6A17               	clrf	DELAY_ms@ms+1,c
  2691  002400  0E08               	movlw	8
  2692  002402  6E16               	movwf	DELAY_ms@ms,c
  2693  002404  EC88  F011         	call	_DELAY_ms	;wreg free
  2694                           
  2695                           ;lcd.c: 63: LCD_WriteCmd(0x30);
  2696  002408  0E30               	movlw	48
  2697  00240A  ECF5  F019         	call	_LCD_WriteCmd
  2698                           
  2699                           ;lcd.c: 64: DELAY_ms(1);
  2700  00240E  6A17               	clrf	DELAY_ms@ms+1,c
  2701  002410  0E01               	movlw	1
  2702  002412  6E16               	movwf	DELAY_ms@ms,c
  2703  002414  EC88  F011         	call	_DELAY_ms	;wreg free
  2704                           
  2705                           ;lcd.c: 65: LCD_WriteCmd(0x30);
  2706  002418  0E30               	movlw	48
  2707  00241A  ECF5  F019         	call	_LCD_WriteCmd
  2708                           
  2709                           ;lcd.c: 66: DELAY_ms(1);
  2710  00241E  6A17               	clrf	DELAY_ms@ms+1,c
  2711  002420  0E01               	movlw	1
  2712  002422  6E16               	movwf	DELAY_ms@ms,c
  2713  002424  EC88  F011         	call	_DELAY_ms	;wreg free
  2714                           
  2715                           ;lcd.c: 67: LCD_WriteCmd(0x39);
  2716  002428  0E39               	movlw	57
  2717  00242A  ECF5  F019         	call	_LCD_WriteCmd
  2718                           
  2719                           ;lcd.c: 68: DELAY_ms(1);
  2720  00242E  6A17               	clrf	DELAY_ms@ms+1,c
  2721  002430  0E01               	movlw	1
  2722  002432  6E16               	movwf	DELAY_ms@ms,c
  2723  002434  EC88  F011         	call	_DELAY_ms	;wreg free
  2724                           
  2725                           ;lcd.c: 69: LCD_WriteCmd(0x14);
  2726  002438  0E14               	movlw	20
  2727  00243A  ECF5  F019         	call	_LCD_WriteCmd
  2728                           
  2729                           ;lcd.c: 70: DELAY_ms(1);
  2730  00243E  6A17               	clrf	DELAY_ms@ms+1,c
  2731  002440  0E01               	movlw	1
  2732  002442  6E16               	movwf	DELAY_ms@ms,c
  2733  002444  EC88  F011         	call	_DELAY_ms	;wreg free
  2734                           
  2735                           ;lcd.c: 71: LCD_WriteCmd(0x56);
  2736  002448  0E56               	movlw	86
  2737  00244A  ECF5  F019         	call	_LCD_WriteCmd
  2738                           
  2739                           ;lcd.c: 72: DELAY_ms(1);
  2740  00244E  6A17               	clrf	DELAY_ms@ms+1,c
  2741  002450  0E01               	movlw	1
  2742  002452  6E16               	movwf	DELAY_ms@ms,c
  2743  002454  EC88  F011         	call	_DELAY_ms	;wreg free
  2744                           
  2745                           ;lcd.c: 73: LCD_WriteCmd(0x6D);
  2746  002458  0E6D               	movlw	109
  2747  00245A  ECF5  F019         	call	_LCD_WriteCmd
  2748                           
  2749                           ;lcd.c: 74: DELAY_ms(1);
  2750  00245E  6A17               	clrf	DELAY_ms@ms+1,c
  2751  002460  0E01               	movlw	1
  2752  002462  6E16               	movwf	DELAY_ms@ms,c
  2753  002464  EC88  F011         	call	_DELAY_ms	;wreg free
  2754                           
  2755                           ;lcd.c: 75: LCD_WriteCmd(0x70);
  2756  002468  0E70               	movlw	112
  2757  00246A  ECF5  F019         	call	_LCD_WriteCmd
  2758                           
  2759                           ;lcd.c: 76: DELAY_ms(1);
  2760  00246E  6A17               	clrf	DELAY_ms@ms+1,c
  2761  002470  0E01               	movlw	1
  2762  002472  6E16               	movwf	DELAY_ms@ms,c
  2763  002474  EC88  F011         	call	_DELAY_ms	;wreg free
  2764                           
  2765                           ;lcd.c: 77: LCD_WriteCmd(0x0E);
  2766  002478  0E0E               	movlw	14
  2767  00247A  ECF5  F019         	call	_LCD_WriteCmd
  2768                           
  2769                           ;lcd.c: 78: DELAY_ms(1);
  2770  00247E  6A17               	clrf	DELAY_ms@ms+1,c
  2771  002480  0E01               	movlw	1
  2772  002482  6E16               	movwf	DELAY_ms@ms,c
  2773  002484  EC88  F011         	call	_DELAY_ms	;wreg free
  2774                           
  2775                           ;lcd.c: 79: LCD_WriteCmd(0x06);
  2776  002488  0E06               	movlw	6
  2777  00248A  ECF5  F019         	call	_LCD_WriteCmd
  2778                           
  2779                           ;lcd.c: 80: DELAY_ms(1);
  2780  00248E  6A17               	clrf	DELAY_ms@ms+1,c
  2781  002490  0E01               	movlw	1
  2782  002492  6E16               	movwf	DELAY_ms@ms,c
  2783  002494  EC88  F011         	call	_DELAY_ms	;wreg free
  2784                           
  2785                           ;lcd.c: 81: LCD_WriteCmd(0x01);
  2786  002498  0E01               	movlw	1
  2787  00249A  ECF5  F019         	call	_LCD_WriteCmd
  2788                           
  2789                           ;lcd.c: 82: DELAY_ms(40);
  2790  00249E  6A17               	clrf	DELAY_ms@ms+1,c
  2791  0024A0  0E28               	movlw	40
  2792  0024A2  6E16               	movwf	DELAY_ms@ms,c
  2793  0024A4  EF88  F011         	goto	_DELAY_ms	;wreg free
  2794  0024A8                     __end_of_LCD_Initialize:
  2795                           	opt stack 0
  2796                           tblptru	equ	0xFF8
  2797                           tblptrh	equ	0xFF7
  2798                           tblptrl	equ	0xFF6
  2799                           tablat	equ	0xFF5
  2800                           intcon	equ	0xFF2
  2801                           intcon2	equ	0xFF1
  2802                           postinc0	equ	0xFEE
  2803                           wreg	equ	0xFE8
  2804                           postdec1	equ	0xFE5
  2805                           fsr1h	equ	0xFE2
  2806                           fsr1l	equ	0xFE1
  2807                           
  2808 ;; *************** function _Run_Demo *****************
  2809 ;; Defined at:
  2810 ;;		line 199 in file "../src/task.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;		None               void
  2817 ;; Registers used:
  2818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : F/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;Total ram usage:        0 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:   16
  2831 ;; This function calls:
  2832 ;;		_run_star_demo
  2833 ;; This function is called by:
  2834 ;;		_main
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text5
  2839  003436                     __ptext5:
  2840                           	opt stack 0
  2841  003436                     _Run_Demo:
  2842                           	opt stack 14
  2843                           
  2844                           ;task.c: 202: run_star_demo();
  2845                           
  2846                           ;incstack = 0
  2847  003436  EF5D  F004         	goto	_run_star_demo	;wreg free
  2848  00343A                     __end_of_Run_Demo:
  2849                           	opt stack 0
  2850                           tblptru	equ	0xFF8
  2851                           tblptrh	equ	0xFF7
  2852                           tblptrl	equ	0xFF6
  2853                           tablat	equ	0xFF5
  2854                           intcon	equ	0xFF2
  2855                           intcon2	equ	0xFF1
  2856                           postinc0	equ	0xFEE
  2857                           wreg	equ	0xFE8
  2858                           postdec1	equ	0xFE5
  2859                           fsr1h	equ	0xFE2
  2860                           fsr1l	equ	0xFE1
  2861                           
  2862 ;; *************** function _run_star_demo *****************
  2863 ;; Defined at:
  2864 ;;		line 85 in file "../src/star_demo.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;		None
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  switch_val      1   22[BANK1 ] unsigned char 
  2869 ;;  sw_layer_ack    1   19[BANK1 ] unsigned char 
  2870 ;;  mac_ack_stat    1    0        unsigned char 
  2871 ;;  select_ed       1   23[BANK1 ] unsigned char 
  2872 ;;  update_ed       1   20[BANK1 ] unsigned char 
  2873 ;;  PressedButto    1   21[BANK1 ] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;		None               void
  2876 ;; Registers used:
  2877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : F/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2884 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2885 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2886 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;Total ram usage:       12 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:   15
  2890 ;; This function calls:
  2891 ;;		_ButtonPressed
  2892 ;;		_CheckForData
  2893 ;;		_DELAY_ms
  2894 ;;		_DemoOutput_UpdateTxRx
  2895 ;;		_LCDDisplay
  2896 ;;		_LCD_BacklightOFF
  2897 ;;		_LCD_BacklightON
  2898 ;;		_LCD_Erase
  2899 ;;		_LCD_Update
  2900 ;;		_MiApp_ConnectionMode
  2901 ;;		_MiApp_DiscardMessage
  2902 ;;		_MiApp_EstablishConnection
  2903 ;;		_MiApp_MessageAvailable
  2904 ;;		_MiApp_SetChannel
  2905 ;;		_MiApp_TransceiverPowerState
  2906 ;;		_MiApp_UnicastConnection
  2907 ;;		_MiApp_UnicastStar
  2908 ;;		_MiWi_TickGet
  2909 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  2910 ;;		_sprintf
  2911 ;; This function is called by:
  2912 ;;		_Run_Demo
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text6
  2917  0008BA                     __ptext6:
  2918                           	opt stack 0
  2919  0008BA                     _run_star_demo:
  2920                           	opt stack 14
  2921                           
  2922                           ;star_demo.c: 88: t1 = MiWi_TickGet();
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;incstack = 0
  2926  0008BA  EC19  F017         	call	_MiWi_TickGet	;wreg free
  2927  0008BE  C016  F076         	movff	?_MiWi_TickGet,_t1
  2928  0008C2  C017  F077         	movff	?_MiWi_TickGet+1,_t1+1
  2929  0008C6  C018  F078         	movff	?_MiWi_TickGet+2,_t1+2
  2930  0008CA  C019  F079         	movff	?_MiWi_TickGet+3,_t1+3
  2931                           
  2932                           ;star_demo.c: 89: LCDDisplay((char *)"Sleeping!!", 0, 0);
  2933  0008CE  0EDC               	movlw	low STR_31
  2934  0008D0  0100               	movlb	0	; () banked
  2935  0008D2  6FC2               	movwf	LCDDisplay@text& (0+255),b
  2936  0008D4  0EFF               	movlw	high STR_31
  2937  0008D6  6FC3               	movwf	(LCDDisplay@text+1)& (0+255),b
  2938  0008D8  6BC4               	clrf	LCDDisplay@value& (0+255),b
  2939  0008DA  6BC5               	clrf	LCDDisplay@delay& (0+255),b
  2940  0008DC  EC64  F017         	call	_LCDDisplay	;wreg free
  2941  0008E0                     l12154:
  2942                           
  2943                           ;star_demo.c: 91: {
  2944                           ;star_demo.c: 93: t2 = MiWi_TickGet();
  2945  0008E0  EC19  F017         	call	_MiWi_TickGet	;wreg free
  2946  0008E4  C016  F07A         	movff	?_MiWi_TickGet,_t2
  2947  0008E8  C017  F07B         	movff	?_MiWi_TickGet+1,_t2+1
  2948  0008EC  C018  F07C         	movff	?_MiWi_TickGet+2,_t2+2
  2949  0008F0  C019  F07D         	movff	?_MiWi_TickGet+3,_t2+3
  2950                           
  2951                           ;star_demo.c: 95: if(((t2.Val - t1.Val) > (((uint32_t)(16000000)/32) * 20)))
  2952  0008F4  0100               	movlb	0	; () banked
  2953  0008F6  5176               	movf	_t1& (0+255),w,b
  2954  0008F8  5D7A               	subwf	_t2& (0+255),w,b
  2955  0008FA  0101               	movlb	1	; () banked
  2956  0008FC  6FEB               	movwf	??_run_star_demo& (0+255),b
  2957  0008FE  0100               	movlb	0	; () banked
  2958  000900  5177               	movf	(_t1+1)& (0+255),w,b
  2959  000902  597B               	subwfb	(_t2+1)& (0+255),w,b
  2960  000904  0101               	movlb	1	; () banked
  2961  000906  6FEC               	movwf	(??_run_star_demo+1)& (0+255),b
  2962  000908  0100               	movlb	0	; () banked
  2963  00090A  5178               	movf	(_t1+2)& (0+255),w,b
  2964  00090C  597C               	subwfb	(_t2+2)& (0+255),w,b
  2965  00090E  0101               	movlb	1	; () banked
  2966  000910  6FED               	movwf	(??_run_star_demo+2)& (0+255),b
  2967  000912  0100               	movlb	0	; () banked
  2968  000914  5179               	movf	(_t1+3)& (0+255),w,b
  2969  000916  597D               	subwfb	(_t2+3)& (0+255),w,b
  2970  000918  0101               	movlb	1	; () banked
  2971  00091A  6FEE               	movwf	(??_run_star_demo+3)& (0+255),b
  2972  00091C  51EE               	movf	(??_run_star_demo+3)& (0+255),w,b
  2973  00091E  E108               	bnz	u11920
  2974  000920  0E81               	movlw	129
  2975  000922  5DEB               	subwf	??_run_star_demo& (0+255),w,b
  2976  000924  0E96               	movlw	150
  2977  000926  59EC               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  2978  000928  0E98               	movlw	152
  2979  00092A  59ED               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  2980  00092C  E201 D25C          	bnc	l12314
  2981  000930                     u11920:
  2982                           
  2983                           ; BSR set to: 1
  2984                           ;star_demo.c: 96: {
  2985                           ;star_demo.c: 97: awake = 1;
  2986  000930  0E01               	movlw	1
  2987  000932  0100               	movlb	0	; () banked
  2988  000934  6F97               	movwf	_awake& (0+255),b
  2989                           
  2990                           ; BSR set to: 0
  2991                           ;star_demo.c: 99: LCD_BacklightON();
  2992  000936  EC1D  F01A         	call	_LCD_BacklightON	;wreg free
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;star_demo.c: 102: MiApp_TransceiverPowerState(0x02);
  2996  00093A  0E02               	movlw	2
  2997  00093C  EC37  F015         	call	_MiApp_TransceiverPowerState
  2998                           
  2999                           ;star_demo.c: 103: LCDDisplay((char *)"Woke Up!!!", 0, 0);
  3000  000940  0ED1               	movlw	low STR_32
  3001  000942  0100               	movlb	0	; () banked
  3002  000944  6FC2               	movwf	LCDDisplay@text& (0+255),b
  3003  000946  0EFF               	movlw	high STR_32
  3004  000948  6FC3               	movwf	(LCDDisplay@text+1)& (0+255),b
  3005  00094A  6BC4               	clrf	LCDDisplay@value& (0+255),b
  3006  00094C  6BC5               	clrf	LCDDisplay@delay& (0+255),b
  3007  00094E  EC64  F017         	call	_LCDDisplay	;wreg free
  3008                           
  3009                           ;star_demo.c: 104: DELAY_ms(1000);
  3010  000952  0E03               	movlw	3
  3011  000954  6E17               	movwf	DELAY_ms@ms+1,c
  3012  000956  0EE8               	movlw	232
  3013  000958  6E16               	movwf	DELAY_ms@ms,c
  3014  00095A  EC88  F011         	call	_DELAY_ms	;wreg free
  3015                           
  3016                           ;star_demo.c: 105: STAR_DEMO_OPTIONS_MESSAGE (0);
  3017  00095E  0E00               	movlw	0
  3018  000960  EC63  F019         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3019                           
  3020                           ;star_demo.c: 106: tt1 = MiWi_TickGet();
  3021  000964  EC19  F017         	call	_MiWi_TickGet	;wreg free
  3022  000968  C016  F082         	movff	?_MiWi_TickGet,_tt1
  3023  00096C  C017  F083         	movff	?_MiWi_TickGet+1,_tt1+1
  3024  000970  C018  F084         	movff	?_MiWi_TickGet+2,_tt1+2
  3025  000974  C019  F085         	movff	?_MiWi_TickGet+3,_tt1+3
  3026  000978  D237               	goto	l12314
  3027  00097A                     l12172:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;star_demo.c: 109: {
  3031                           ;star_demo.c: 110: tt2 = MiWi_TickGet();
  3032  00097A  EC19  F017         	call	_MiWi_TickGet	;wreg free
  3033  00097E  C016  F100         	movff	?_MiWi_TickGet,_tt2
  3034  000982  C017  F101         	movff	?_MiWi_TickGet+1,_tt2+1
  3035  000986  C018  F102         	movff	?_MiWi_TickGet+2,_tt2+2
  3036  00098A  C019  F103         	movff	?_MiWi_TickGet+3,_tt2+3
  3037                           
  3038                           ;star_demo.c: 111: if(((tt2.Val - tt1.Val) > (((uint32_t)(16000000)/32) * 10)))
  3039  00098E  0100               	movlb	0	; () banked
  3040  000990  5182               	movf	_tt1& (0+255),w,b
  3041  000992  0101               	movlb	1	; () banked
  3042  000994  5D00               	subwf	_tt2& (0+255),w,b
  3043  000996  6FEB               	movwf	??_run_star_demo& (0+255),b
  3044  000998  0100               	movlb	0	; () banked
  3045  00099A  5183               	movf	(_tt1+1)& (0+255),w,b
  3046  00099C  0101               	movlb	1	; () banked
  3047  00099E  5901               	subwfb	(_tt2+1)& (0+255),w,b
  3048  0009A0  6FEC               	movwf	(??_run_star_demo+1)& (0+255),b
  3049  0009A2  0100               	movlb	0	; () banked
  3050  0009A4  5184               	movf	(_tt1+2)& (0+255),w,b
  3051  0009A6  0101               	movlb	1	; () banked
  3052  0009A8  5902               	subwfb	(_tt2+2)& (0+255),w,b
  3053  0009AA  6FED               	movwf	(??_run_star_demo+2)& (0+255),b
  3054  0009AC  0100               	movlb	0	; () banked
  3055  0009AE  5185               	movf	(_tt1+3)& (0+255),w,b
  3056  0009B0  0101               	movlb	1	; () banked
  3057  0009B2  5903               	subwfb	(_tt2+3)& (0+255),w,b
  3058  0009B4  6FEE               	movwf	(??_run_star_demo+3)& (0+255),b
  3059  0009B6  51EE               	movf	(??_run_star_demo+3)& (0+255),w,b
  3060  0009B8  E107               	bnz	u11930
  3061  0009BA  0E41               	movlw	65
  3062  0009BC  5DEB               	subwf	??_run_star_demo& (0+255),w,b
  3063  0009BE  0E4B               	movlw	75
  3064  0009C0  59EC               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  3065  0009C2  0E4C               	movlw	76
  3066  0009C4  59ED               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  3067  0009C6  E30C               	bnc	l12180
  3068  0009C8                     u11930:
  3069                           
  3070                           ; BSR set to: 1
  3071                           ;star_demo.c: 112: {
  3072                           ;star_demo.c: 116: CheckForData();
  3073  0009C8  ECEA  F015         	call	_CheckForData	;wreg free
  3074                           
  3075                           ;star_demo.c: 117: tt1 = MiWi_TickGet();
  3076  0009CC  EC19  F017         	call	_MiWi_TickGet	;wreg free
  3077  0009D0  C016  F082         	movff	?_MiWi_TickGet,_tt1
  3078  0009D4  C017  F083         	movff	?_MiWi_TickGet+1,_tt1+1
  3079  0009D8  C018  F084         	movff	?_MiWi_TickGet+2,_tt1+2
  3080  0009DC  C019  F085         	movff	?_MiWi_TickGet+3,_tt1+3
  3081  0009E0                     l12180:
  3082                           
  3083                           ;star_demo.c: 118: }
  3084                           ;star_demo.c: 126: if( MiApp_MessageAvailable())
  3085  0009E0  EC0C  F01A         	call	_MiApp_MessageAvailable	;wreg free
  3086  0009E4  0900               	iorlw	0
  3087  0009E6  E010               	bz	l12190
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;star_demo.c: 127: {
  3091                           ;star_demo.c: 133: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  3092  0009E8  2B94               	incf	_RxNum& (0+255),f,b
  3093  0009EA  C094  F0C3         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3094  0009EE  5196               	movf	_TxNum& (0+255),w,b
  3095  0009F0  EC05  F01A         	call	_DemoOutput_UpdateTxRx
  3096                           
  3097                           ;star_demo.c: 134: DELAY_ms(2000);
  3098  0009F4  0E07               	movlw	7
  3099  0009F6  6E17               	movwf	DELAY_ms@ms+1,c
  3100  0009F8  0ED0               	movlw	208
  3101  0009FA  6E16               	movwf	DELAY_ms@ms,c
  3102  0009FC  EC88  F011         	call	_DELAY_ms	;wreg free
  3103                           
  3104                           ;star_demo.c: 136: LATAbits.LATA7 ^= 1;
  3105  000A00  7E89               	btg	3977,7,c	;volatile
  3106                           
  3107                           ;star_demo.c: 144: MiApp_DiscardMessage();
  3108  000A02  EC17  F01A         	call	_MiApp_DiscardMessage	;wreg free
  3109                           
  3110                           ;star_demo.c: 149: }
  3111  000A06  D19C               	goto	l12290
  3112  000A08                     l12190:
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;star_demo.c: 150: else
  3116                           ;star_demo.c: 151: {
  3117                           ;star_demo.c: 158: uint8_t PressedButton = ButtonPressed();
  3118  000A08  EC75  F014         	call	_ButtonPressed	;wreg free
  3119  000A0C  0101               	movlb	1	; () banked
  3120  000A0E  6FF4               	movwf	run_star_demo@PressedButton& (0+255),b
  3121                           
  3122                           ; BSR set to: 1
  3123                           ;star_demo.c: 159: if ( PressedButton == 1 || PressedButton == 2)
  3124  000A10  05F4               	decf	run_star_demo@PressedButton& (0+255),w,b
  3125  000A12  E004               	bz	l1346
  3126                           
  3127                           ; BSR set to: 1
  3128  000A14  0E02               	movlw	2
  3129  000A16  19F4               	xorwf	run_star_demo@PressedButton& (0+255),w,b
  3130  000A18  E001 D192          	bnz	l12290
  3131  000A1C                     l1346:
  3132                           
  3133                           ; BSR set to: 1
  3134                           ;star_demo.c: 160: {
  3135                           ;star_demo.c: 162: uint8_t select_ed =0;
  3136  000A1C  6BF6               	clrf	run_star_demo@select_ed& (0+255),b
  3137                           
  3138                           ; BSR set to: 1
  3139                           ;star_demo.c: 163: bool update_ed = 1;
  3140  000A1E  0E01               	movlw	1
  3141  000A20  6FF3               	movwf	run_star_demo@update_ed& (0+255),b
  3142                           
  3143                           ;star_demo.c: 164: while(update_ed == 1)
  3144  000A22  D187               	goto	l12286
  3145  000A24                     l12198:
  3146                           
  3147                           ; BSR set to: 1
  3148                           ;star_demo.c: 165: {
  3149                           ;star_demo.c: 168: LCD_Erase();
  3150  000A24  EC50  F019         	call	_LCD_Erase	;wreg free
  3151                           
  3152                           ;star_demo.c: 169: if (myConnectionIndex_in_PanCo == select_ed)
  3153  000A28  0101               	movlb	1	; () banked
  3154  000A2A  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3155  000A2C  0100               	movlb	0	; () banked
  3156  000A2E  19AE               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3157  000A30  E138               	bnz	l12204
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;star_demo.c: 170: {
  3161                           ;star_demo.c: 171: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x-me",END_DEVICE
      +                          S_Short_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[
      +                          0],
  3162                           ;star_demo.c: 172: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3163  000A32  0EB6               	movlw	low _LCDText
  3164  000A34  6E22               	movwf	sprintf@sp,c
  3165  000A36  0E01               	movlw	high _LCDText
  3166  000A38  6E23               	movwf	sprintf@sp+1,c
  3167  000A3A  0EC1               	movlw	low STR_33
  3168  000A3C  6E24               	movwf	sprintf@f,c
  3169  000A3E  0EFE               	movlw	high STR_33
  3170  000A40  6E25               	movwf	sprintf@f+1,c
  3171  000A42  0101               	movlb	1	; () banked
  3172  000A44  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3173  000A46  0D04               	mullw	4
  3174  000A48  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  3175  000A4A  24F3               	addwf	prodl,w,c
  3176  000A4C  6ED9               	movwf	fsr2l,c
  3177  000A4E  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  3178  000A50  20F4               	addwfc	prodh,w,c
  3179  000A52  6EDA               	movwf	fsr2h,c
  3180  000A54  50DF               	movf	indf2,w,c
  3181  000A56  6E26               	movwf	?_sprintf+4,c
  3182  000A58  6A27               	clrf	?_sprintf+5,c
  3183  000A5A  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3184  000A5C  0D04               	mullw	4
  3185  000A5E  0E00               	movlw	low _END_DEVICES_Short_Address
  3186  000A60  24F3               	addwf	prodl,w,c
  3187  000A62  6ED9               	movwf	fsr2l,c
  3188  000A64  0E02               	movlw	high _END_DEVICES_Short_Address
  3189  000A66  20F4               	addwfc	prodh,w,c
  3190  000A68  6EDA               	movwf	fsr2h,c
  3191  000A6A  50DF               	movf	indf2,w,c
  3192  000A6C  6E28               	movwf	?_sprintf+6,c
  3193  000A6E  6A29               	clrf	?_sprintf+7,c
  3194  000A70  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3195  000A72  0D04               	mullw	4
  3196  000A74  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3197  000A76  24F3               	addwf	prodl,w,c
  3198  000A78  6ED9               	movwf	fsr2l,c
  3199  000A7A  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  3200  000A7C  20F4               	addwfc	prodh,w,c
  3201  000A7E  6EDA               	movwf	fsr2h,c
  3202  000A80  50DF               	movf	indf2,w,c
  3203  000A82  6E2A               	movwf	?_sprintf+8,c
  3204  000A84  6A2B               	clrf	?_sprintf+9,c
  3205  000A86  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3206  000A88  0D04               	mullw	4
  3207  000A8A  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3208  000A8C  24F3               	addwf	prodl,w,c
  3209  000A8E  6ED9               	movwf	fsr2l,c
  3210  000A90  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  3211  000A92  20F4               	addwfc	prodh,w,c
  3212  000A94  6EDA               	movwf	fsr2h,c
  3213  000A96  50DF               	movf	indf2,w,c
  3214  000A98  6E2C               	movwf	?_sprintf+10,c
  3215  000A9A  6A2D               	clrf	?_sprintf+11,c
  3216  000A9C  ECC8  F000         	call	_sprintf	;wreg free
  3217                           
  3218                           ;star_demo.c: 173: }
  3219  000AA0  D037               	goto	l1350
  3220  000AA2                     l12204:
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;star_demo.c: 174: else
  3224                           ;star_demo.c: 175: {
  3225                           ;star_demo.c: 176: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3226                           ;star_demo.c: 177: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3227  000AA2  0EB6               	movlw	low _LCDText
  3228  000AA4  6E22               	movwf	sprintf@sp,c
  3229  000AA6  0E01               	movlw	high _LCDText
  3230  000AA8  6E23               	movwf	sprintf@sp+1,c
  3231  000AAA  0EDA               	movlw	low STR_34
  3232  000AAC  6E24               	movwf	sprintf@f,c
  3233  000AAE  0EFE               	movlw	high STR_34
  3234  000AB0  6E25               	movwf	sprintf@f+1,c
  3235  000AB2  0101               	movlb	1	; () banked
  3236  000AB4  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3237  000AB6  0D04               	mullw	4
  3238  000AB8  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  3239  000ABA  24F3               	addwf	prodl,w,c
  3240  000ABC  6ED9               	movwf	fsr2l,c
  3241  000ABE  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  3242  000AC0  20F4               	addwfc	prodh,w,c
  3243  000AC2  6EDA               	movwf	fsr2h,c
  3244  000AC4  50DF               	movf	indf2,w,c
  3245  000AC6  6E26               	movwf	?_sprintf+4,c
  3246  000AC8  6A27               	clrf	?_sprintf+5,c
  3247  000ACA  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3248  000ACC  0D04               	mullw	4
  3249  000ACE  0E00               	movlw	low _END_DEVICES_Short_Address
  3250  000AD0  24F3               	addwf	prodl,w,c
  3251  000AD2  6ED9               	movwf	fsr2l,c
  3252  000AD4  0E02               	movlw	high _END_DEVICES_Short_Address
  3253  000AD6  20F4               	addwfc	prodh,w,c
  3254  000AD8  6EDA               	movwf	fsr2h,c
  3255  000ADA  50DF               	movf	indf2,w,c
  3256  000ADC  6E28               	movwf	?_sprintf+6,c
  3257  000ADE  6A29               	clrf	?_sprintf+7,c
  3258  000AE0  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3259  000AE2  0D04               	mullw	4
  3260  000AE4  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3261  000AE6  24F3               	addwf	prodl,w,c
  3262  000AE8  6ED9               	movwf	fsr2l,c
  3263  000AEA  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  3264  000AEC  20F4               	addwfc	prodh,w,c
  3265  000AEE  6EDA               	movwf	fsr2h,c
  3266  000AF0  50DF               	movf	indf2,w,c
  3267  000AF2  6E2A               	movwf	?_sprintf+8,c
  3268  000AF4  6A2B               	clrf	?_sprintf+9,c
  3269  000AF6  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3270  000AF8  0D04               	mullw	4
  3271  000AFA  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3272  000AFC  24F3               	addwf	prodl,w,c
  3273  000AFE  6ED9               	movwf	fsr2l,c
  3274  000B00  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  3275  000B02  20F4               	addwfc	prodh,w,c
  3276  000B04  6EDA               	movwf	fsr2h,c
  3277  000B06  50DF               	movf	indf2,w,c
  3278  000B08  6E2C               	movwf	?_sprintf+10,c
  3279  000B0A  6A2D               	clrf	?_sprintf+11,c
  3280  000B0C  ECC8  F000         	call	_sprintf	;wreg free
  3281  000B10                     l1350:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;star_demo.c: 178: }
  3285                           ;star_demo.c: 179: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3286                           ;star_demo.c: 180: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3287  000B10  0EB6               	movlw	low _LCDText
  3288  000B12  6E22               	movwf	sprintf@sp,c
  3289  000B14  0E01               	movlw	high _LCDText
  3290  000B16  6E23               	movwf	sprintf@sp+1,c
  3291  000B18  0EDA               	movlw	low STR_34
  3292  000B1A  6E24               	movwf	sprintf@f,c
  3293  000B1C  0EFE               	movlw	high STR_34
  3294  000B1E  6E25               	movwf	sprintf@f+1,c
  3295  000B20  0101               	movlb	1	; () banked
  3296  000B22  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3297  000B24  0D04               	mullw	4
  3298  000B26  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  3299  000B28  24F3               	addwf	prodl,w,c
  3300  000B2A  6ED9               	movwf	fsr2l,c
  3301  000B2C  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  3302  000B2E  20F4               	addwfc	prodh,w,c
  3303  000B30  6EDA               	movwf	fsr2h,c
  3304  000B32  50DF               	movf	indf2,w,c
  3305  000B34  6E26               	movwf	?_sprintf+4,c
  3306  000B36  6A27               	clrf	?_sprintf+5,c
  3307  000B38  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3308  000B3A  0D04               	mullw	4
  3309  000B3C  0E00               	movlw	low _END_DEVICES_Short_Address
  3310  000B3E  24F3               	addwf	prodl,w,c
  3311  000B40  6ED9               	movwf	fsr2l,c
  3312  000B42  0E02               	movlw	high _END_DEVICES_Short_Address
  3313  000B44  20F4               	addwfc	prodh,w,c
  3314  000B46  6EDA               	movwf	fsr2h,c
  3315  000B48  50DF               	movf	indf2,w,c
  3316  000B4A  6E28               	movwf	?_sprintf+6,c
  3317  000B4C  6A29               	clrf	?_sprintf+7,c
  3318  000B4E  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3319  000B50  0D04               	mullw	4
  3320  000B52  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3321  000B54  24F3               	addwf	prodl,w,c
  3322  000B56  6ED9               	movwf	fsr2l,c
  3323  000B58  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  3324  000B5A  20F4               	addwfc	prodh,w,c
  3325  000B5C  6EDA               	movwf	fsr2h,c
  3326  000B5E  50DF               	movf	indf2,w,c
  3327  000B60  6E2A               	movwf	?_sprintf+8,c
  3328  000B62  6A2B               	clrf	?_sprintf+9,c
  3329  000B64  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3330  000B66  0D04               	mullw	4
  3331  000B68  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3332  000B6A  24F3               	addwf	prodl,w,c
  3333  000B6C  6ED9               	movwf	fsr2l,c
  3334  000B6E  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  3335  000B70  20F4               	addwfc	prodh,w,c
  3336  000B72  6EDA               	movwf	fsr2h,c
  3337  000B74  50DF               	movf	indf2,w,c
  3338  000B76  6E2C               	movwf	?_sprintf+10,c
  3339  000B78  6A2D               	clrf	?_sprintf+11,c
  3340  000B7A  ECC8  F000         	call	_sprintf	;wreg free
  3341                           
  3342                           ;star_demo.c: 181: sprintf((char *)&(LCDText[16]), (char*)"RB2: Change node");
  3343  000B7E  0EC6               	movlw	low (_LCDText+16)
  3344  000B80  6E22               	movwf	sprintf@sp,c
  3345  000B82  0E01               	movlw	high (_LCDText+16)
  3346  000B84  6E23               	movwf	sprintf@sp+1,c
  3347  000B86  0E4F               	movlw	low STR_36
  3348  000B88  6E24               	movwf	sprintf@f,c
  3349  000B8A  0EFF               	movlw	high STR_36
  3350  000B8C  6E25               	movwf	sprintf@f+1,c
  3351  000B8E  ECC8  F000         	call	_sprintf	;wreg free
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;star_demo.c: 182: LCD_Update();
  3355  000B92  EC74  F015         	call	_LCD_Update	;wreg free
  3356                           
  3357                           ;star_demo.c: 183: chk_sel_status = 1;
  3358  000B96  0E01               	movlw	1
  3359  000B98  0100               	movlb	0	; () banked
  3360  000B9A  6FFC               	movwf	_chk_sel_status& (0+255),b
  3361                           
  3362                           ;star_demo.c: 184: bool sw_layer_ack_status , mac_ack_status;
  3363                           ;star_demo.c: 185: while(chk_sel_status)
  3364  000B9C  D0C6               	goto	l12284
  3365  000B9E                     l12210:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;star_demo.c: 186: {
  3369                           ;star_demo.c: 187: uint8_t switch_val = ButtonPressed();
  3370  000B9E  EC75  F014         	call	_ButtonPressed	;wreg free
  3371  000BA2  0101               	movlb	1	; () banked
  3372  000BA4  6FF5               	movwf	run_star_demo@switch_val& (0+255),b
  3373                           
  3374                           ; BSR set to: 1
  3375                           ;star_demo.c: 188: if(switch_val == 1)
  3376  000BA6  05F5               	decf	run_star_demo@switch_val& (0+255),w,b
  3377  000BA8  E001 D0A0          	bnz	l12274
  3378                           
  3379                           ; BSR set to: 1
  3380                           ;star_demo.c: 189: {
  3381                           ;star_demo.c: 190: update_ed = 0;
  3382  000BAC  6BF3               	clrf	run_star_demo@update_ed& (0+255),b
  3383                           
  3384                           ;star_demo.c: 191: chk_sel_status = 0;
  3385  000BAE  0100               	movlb	0	; () banked
  3386  000BB0  6BFC               	clrf	_chk_sel_status& (0+255),b
  3387                           
  3388                           ;star_demo.c: 192: update_ed = 0;
  3389  000BB2  0101               	movlb	1	; () banked
  3390  000BB4  6BF3               	clrf	run_star_demo@update_ed& (0+255),b
  3391                           
  3392                           ; BSR set to: 1
  3393                           ;star_demo.c: 197: if (myConnectionIndex_in_PanCo == select_ed)
  3394  000BB6  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3395  000BB8  0100               	movlb	0	; () banked
  3396  000BBA  19AE               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3397  000BBC  E11F               	bnz	l1354
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;star_demo.c: 198: {
  3401                           ;star_demo.c: 199: {TxData = 0;};
  3402  000BBE  6B95               	clrf	_TxData& (0+255),b
  3403                           
  3404                           ;star_demo.c: 200: for (i = 0 ; i < 21 ; i++)
  3405  000BC0  6A40               	clrf	_i,c
  3406  000BC2                     l12220:
  3407                           
  3408                           ; BSR set to: 0
  3409  000BC2  0E14               	movlw	20
  3410  000BC4  6440               	cpfsgt	_i,c
  3411  000BC6  D001               	goto	l12224
  3412  000BC8  D012               	goto	l12232
  3413  000BCA                     l12224:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;star_demo.c: 201: {
  3417                           ;star_demo.c: 202: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  3418  000BCA  0EE5               	movlw	low _MiWi
  3419  000BCC  2440               	addwf	_i,w,c
  3420  000BCE  6EF6               	movwf	tblptrl,c
  3421  000BD0  6AF7               	clrf	tblptrh,c
  3422  000BD2  0EFC               	movlw	high _MiWi
  3423  000BD4  22F7               	addwfc	tblptrh,f,c
  3424  000BD6                     	if	0	;There are less than 3 active tblptr bytes
  3425  000BD6                     	endif
  3426  000BD6  0E8E               	movlw	low _TxBuffer
  3427  000BD8  2595               	addwf	_TxData& (0+255),w,b
  3428  000BDA  6ED9               	movwf	fsr2l,c
  3429  000BDC  6ADA               	clrf	fsr2h,c
  3430  000BDE  0E01               	movlw	high _TxBuffer
  3431  000BE0  22DA               	addwfc	fsr2h,f,c
  3432  000BE2  0008               	tblrd		*
  3433  000BE4  CFF5 FFDF          	movff	tablat,indf2
  3434                           
  3435                           ; BSR set to: 0
  3436  000BE8  2B95               	incf	_TxData& (0+255),f,b
  3437                           
  3438                           ; BSR set to: 0
  3439  000BEA  2A40               	incf	_i,f,c
  3440  000BEC  D7EA               	goto	l12220
  3441  000BEE                     l12232:
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;star_demo.c: 203: }
  3445                           ;star_demo.c: 210: mac_ack_status = MiApp_UnicastConnection (0, 0);
  3446  000BEE  0E00               	movlw	0
  3447  000BF0  6BDE               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  3448  000BF2  EC1D  F018         	call	_MiApp_UnicastConnection
  3449  000BF6                     l12234:
  3450                           
  3451                           ;star_demo.c: 212: TxNum++;
  3452  000BF6  0100               	movlb	0	; () banked
  3453  000BF8  2B96               	incf	_TxNum& (0+255),f,b
  3454                           
  3455                           ;star_demo.c: 213: }
  3456  000BFA  D097               	goto	l12284
  3457  000BFC                     l1354:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;star_demo.c: 214: else
  3461                           ;star_demo.c: 215: {
  3462                           ;star_demo.c: 220: {TxData = 0;};
  3463  000BFC  6B95               	clrf	_TxData& (0+255),b
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;star_demo.c: 221: TxBuffer[TxData++] = 0xCC;
  3467  000BFE  0E8E               	movlw	low _TxBuffer
  3468  000C00  2595               	addwf	_TxData& (0+255),w,b
  3469  000C02  6ED9               	movwf	fsr2l,c
  3470  000C04  6ADA               	clrf	fsr2h,c
  3471  000C06  0E01               	movlw	high _TxBuffer
  3472  000C08  22DA               	addwfc	fsr2h,f,c
  3473  000C0A  0ECC               	movlw	204
  3474  000C0C  6EDF               	movwf	indf2,c
  3475                           
  3476                           ; BSR set to: 0
  3477  000C0E  2B95               	incf	_TxData& (0+255),f,b
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;star_demo.c: 222: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[0];
  3481  000C10  0101               	movlb	1	; () banked
  3482  000C12  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3483  000C14  0D04               	mullw	4
  3484  000C16  0E00               	movlw	low _END_DEVICES_Short_Address
  3485  000C18  24F3               	addwf	prodl,w,c
  3486  000C1A  6ED9               	movwf	fsr2l,c
  3487  000C1C  0E02               	movlw	high _END_DEVICES_Short_Address
  3488  000C1E  20F4               	addwfc	prodh,w,c
  3489  000C20  6EDA               	movwf	fsr2h,c
  3490  000C22  0E8E               	movlw	low _TxBuffer
  3491  000C24  0100               	movlb	0	; () banked
  3492  000C26  2595               	addwf	_TxData& (0+255),w,b
  3493  000C28  6EE1               	movwf	fsr1l,c
  3494  000C2A  6AE2               	clrf	fsr1h,c
  3495  000C2C  0E01               	movlw	high _TxBuffer
  3496  000C2E  22E2               	addwfc	fsr1h,f,c
  3497  000C30  CFDF FFE7          	movff	indf2,indf1
  3498                           
  3499                           ; BSR set to: 0
  3500  000C34  2B95               	incf	_TxData& (0+255),f,b
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;star_demo.c: 223: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[1];
  3504  000C36  0101               	movlb	1	; () banked
  3505  000C38  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3506  000C3A  0D04               	mullw	4
  3507  000C3C  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  3508  000C3E  24F3               	addwf	prodl,w,c
  3509  000C40  6ED9               	movwf	fsr2l,c
  3510  000C42  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  3511  000C44  20F4               	addwfc	prodh,w,c
  3512  000C46  6EDA               	movwf	fsr2h,c
  3513  000C48  0E8E               	movlw	low _TxBuffer
  3514  000C4A  0100               	movlb	0	; () banked
  3515  000C4C  2595               	addwf	_TxData& (0+255),w,b
  3516  000C4E  6EE1               	movwf	fsr1l,c
  3517  000C50  6AE2               	clrf	fsr1h,c
  3518  000C52  0E01               	movlw	high _TxBuffer
  3519  000C54  22E2               	addwfc	fsr1h,f,c
  3520  000C56  CFDF FFE7          	movff	indf2,indf1
  3521                           
  3522                           ; BSR set to: 0
  3523  000C5A  2B95               	incf	_TxData& (0+255),f,b
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;star_demo.c: 224: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[2];
  3527  000C5C  0101               	movlb	1	; () banked
  3528  000C5E  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3529  000C60  0D04               	mullw	4
  3530  000C62  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  3531  000C64  24F3               	addwf	prodl,w,c
  3532  000C66  6ED9               	movwf	fsr2l,c
  3533  000C68  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  3534  000C6A  20F4               	addwfc	prodh,w,c
  3535  000C6C  6EDA               	movwf	fsr2h,c
  3536  000C6E  0E8E               	movlw	low _TxBuffer
  3537  000C70  0100               	movlb	0	; () banked
  3538  000C72  2595               	addwf	_TxData& (0+255),w,b
  3539  000C74  6EE1               	movwf	fsr1l,c
  3540  000C76  6AE2               	clrf	fsr1h,c
  3541  000C78  0E01               	movlw	high _TxBuffer
  3542  000C7A  22E2               	addwfc	fsr1h,f,c
  3543  000C7C  CFDF FFE7          	movff	indf2,indf1
  3544                           
  3545                           ; BSR set to: 0
  3546  000C80  2B95               	incf	_TxData& (0+255),f,b
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;star_demo.c: 225: for (i = 4 ; i < 25 ; i++)
  3550  000C82  0E04               	movlw	4
  3551  000C84  6E40               	movwf	_i,c
  3552  000C86                     l12254:
  3553                           
  3554                           ; BSR set to: 0
  3555  000C86  0E18               	movlw	24
  3556  000C88  6440               	cpfsgt	_i,c
  3557  000C8A  D001               	goto	l12258
  3558  000C8C  D01E               	goto	l12266
  3559  000C8E                     l12258:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;star_demo.c: 226: {
  3563                           ;star_demo.c: 227: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i-4];
  3564  000C8E  0EFC               	movlw	252
  3565  000C90  0101               	movlb	1	; () banked
  3566  000C92  6FEB               	movwf	??_run_star_demo& (0+255),b
  3567  000C94  69EC               	setf	(??_run_star_demo+1)& (0+255),b
  3568  000C96  5040               	movf	_i,w,c
  3569  000C98  6FED               	movwf	(??_run_star_demo+2)& (0+255),b
  3570  000C9A  6BEE               	clrf	(??_run_star_demo+3)& (0+255),b
  3571  000C9C  51EB               	movf	??_run_star_demo& (0+255),w,b
  3572  000C9E  27ED               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3573  000CA0  51EC               	movf	(??_run_star_demo+1)& (0+255),w,b
  3574  000CA2  23EE               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3575  000CA4  0EE5               	movlw	low _MiWi
  3576  000CA6  25ED               	addwf	(??_run_star_demo+2)& (0+255),w,b
  3577  000CA8  6EF6               	movwf	tblptrl,c
  3578  000CAA  0EFC               	movlw	high _MiWi
  3579  000CAC  21EE               	addwfc	(??_run_star_demo+3)& (0+255),w,b
  3580  000CAE  6EF7               	movwf	tblptrh,c
  3581  000CB0                     	if	0	;There are less than 3 active tblptr bytes
  3582  000CB0                     	endif
  3583  000CB0  0E8E               	movlw	low _TxBuffer
  3584  000CB2  0100               	movlb	0	; () banked
  3585  000CB4  2595               	addwf	_TxData& (0+255),w,b
  3586  000CB6  6ED9               	movwf	fsr2l,c
  3587  000CB8  6ADA               	clrf	fsr2h,c
  3588  000CBA  0E01               	movlw	high _TxBuffer
  3589  000CBC  22DA               	addwfc	fsr2h,f,c
  3590  000CBE  0008               	tblrd		*
  3591  000CC0  CFF5 FFDF          	movff	tablat,indf2
  3592                           
  3593                           ; BSR set to: 0
  3594  000CC4  2B95               	incf	_TxData& (0+255),f,b
  3595                           
  3596                           ; BSR set to: 0
  3597  000CC6  2A40               	incf	_i,f,c
  3598  000CC8  D7DE               	goto	l12254
  3599  000CCA                     l12266:
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;star_demo.c: 228: }
  3603                           ;star_demo.c: 232: sw_layer_ack_status = MiApp_UnicastStar (0);
  3604  000CCA  0E00               	movlw	0
  3605  000CCC  EC06  F013         	call	_MiApp_UnicastStar
  3606  000CD0  0101               	movlb	1	; () banked
  3607  000CD2  6FF2               	movwf	run_star_demo@sw_layer_ack_status& (0+255),b
  3608                           
  3609                           ; BSR set to: 1
  3610                           ;star_demo.c: 237: if (sw_layer_ack_status)
  3611  000CD4  51F2               	movf	run_star_demo@sw_layer_ack_status& (0+255),w,b
  3612  000CD6  E18F               	bnz	l12234
  3613                           
  3614                           ; BSR set to: 1
  3615                           ;star_demo.c: 241: else
  3616                           ;star_demo.c: 242: {
  3617                           ;star_demo.c: 243: LCDDisplay((char *)"Data_Sending_Fail!!", 0, 0);
  3618  000CD8  0E06               	movlw	low STR_37
  3619  000CDA  0100               	movlb	0	; () banked
  3620  000CDC  6FC2               	movwf	LCDDisplay@text& (0+255),b
  3621  000CDE  0EFF               	movlw	high STR_37
  3622  000CE0  6FC3               	movwf	(LCDDisplay@text+1)& (0+255),b
  3623  000CE2  6BC4               	clrf	LCDDisplay@value& (0+255),b
  3624  000CE4  6BC5               	clrf	LCDDisplay@delay& (0+255),b
  3625  000CE6  EC64  F017         	call	_LCDDisplay	;wreg free
  3626  000CEA  D01F               	goto	l12284
  3627  000CEC                     l12274:
  3628                           
  3629                           ; BSR set to: 1
  3630                           ;star_demo.c: 252: else if(switch_val == 2)
  3631  000CEC  0E02               	movlw	2
  3632  000CEE  19F5               	xorwf	run_star_demo@switch_val& (0+255),w,b
  3633  000CF0  E11C               	bnz	l12284
  3634                           
  3635                           ; BSR set to: 1
  3636                           ;star_demo.c: 253: {
  3637                           ;star_demo.c: 254: if (select_ed > end_nodes-1)
  3638  000CF2  51F6               	movf	run_star_demo@select_ed& (0+255),w,b
  3639  000CF4  6FEB               	movwf	??_run_star_demo& (0+255),b
  3640  000CF6  6BEC               	clrf	(??_run_star_demo+1)& (0+255),b
  3641  000CF8  69ED               	setf	(??_run_star_demo+2)& (0+255),b
  3642  000CFA  69EE               	setf	(??_run_star_demo+3)& (0+255),b
  3643  000CFC  0100               	movlb	0	; () banked
  3644  000CFE  5198               	movf	_end_nodes& (0+255),w,b
  3645  000D00  0101               	movlb	1	; () banked
  3646  000D02  6FEF               	movwf	(??_run_star_demo+4)& (0+255),b
  3647  000D04  6BF0               	clrf	(??_run_star_demo+5)& (0+255),b
  3648  000D06  51ED               	movf	(??_run_star_demo+2)& (0+255),w,b
  3649  000D08  27EF               	addwf	(??_run_star_demo+4)& (0+255),f,b
  3650  000D0A  51EE               	movf	(??_run_star_demo+3)& (0+255),w,b
  3651  000D0C  23F0               	addwfc	(??_run_star_demo+5)& (0+255),f,b
  3652  000D0E  51EB               	movf	??_run_star_demo& (0+255),w,b
  3653  000D10  5DEF               	subwf	(??_run_star_demo+4)& (0+255),w,b
  3654  000D12  51F0               	movf	(??_run_star_demo+5)& (0+255),w,b
  3655  000D14  0A80               	xorlw	128
  3656  000D16  6FF1               	movwf	(??_run_star_demo+6)& (0+255),b
  3657  000D18  51EC               	movf	(??_run_star_demo+1)& (0+255),w,b
  3658  000D1A  0A80               	xorlw	128
  3659  000D1C  59F1               	subwfb	(??_run_star_demo+6)& (0+255),w,b
  3660  000D1E  E202               	bc	l12280
  3661                           
  3662                           ; BSR set to: 1
  3663                           ;star_demo.c: 255: {
  3664                           ;star_demo.c: 256: select_ed = 0;
  3665  000D20  6BF6               	clrf	run_star_demo@select_ed& (0+255),b
  3666                           
  3667                           ;star_demo.c: 257: }
  3668  000D22  D001               	goto	l12282
  3669  000D24                     l12280:
  3670                           
  3671                           ; BSR set to: 1
  3672                           ;star_demo.c: 258: else
  3673                           ;star_demo.c: 259: {
  3674                           ;star_demo.c: 260: select_ed = select_ed+1;
  3675  000D24  2BF6               	incf	run_star_demo@select_ed& (0+255),f,b
  3676  000D26                     l12282:
  3677                           
  3678                           ; BSR set to: 1
  3679                           ;star_demo.c: 261: }
  3680                           ;star_demo.c: 262: chk_sel_status = 0;
  3681  000D26  0100               	movlb	0	; () banked
  3682  000D28  6BFC               	clrf	_chk_sel_status& (0+255),b
  3683  000D2A                     l12284:
  3684  000D2A  0100               	movlb	0	; () banked
  3685  000D2C  51FC               	movf	_chk_sel_status& (0+255),w,b
  3686  000D2E  E001 D736          	bnz	l12210
  3687  000D32                     l12286:
  3688  000D32  0101               	movlb	1	; () banked
  3689  000D34  05F3               	decf	run_star_demo@update_ed& (0+255),w,b
  3690  000D36  E101 D675          	bz	l12198
  3691                           
  3692                           ; BSR set to: 1
  3693                           ;star_demo.c: 264: }
  3694                           ;star_demo.c: 265: }
  3695                           ;star_demo.c: 267: }
  3696                           ;star_demo.c: 268: STAR_DEMO_OPTIONS_MESSAGE (0);
  3697  000D3A  0E00               	movlw	0
  3698  000D3C  EC63  F019         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3699  000D40                     l12290:
  3700                           
  3701                           ;star_demo.c: 269: }
  3702                           ;star_demo.c: 270: }
  3703                           ;star_demo.c: 271: if (fix_me == 1)
  3704  000D40  0100               	movlb	0	; () banked
  3705  000D42  0599               	decf	_fix_me& (0+255),w,b
  3706  000D44  E10D               	bnz	l12298
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;star_demo.c: 272: {
  3710                           ;star_demo.c: 273: MiApp_SetChannel(myChannel);
  3711  000D46  0E19               	movlw	25
  3712  000D48  EC01  F019         	call	_MiApp_SetChannel
  3713                           
  3714                           ;star_demo.c: 274: MiApp_ConnectionMode(0x00);
  3715  000D4C  0E00               	movlw	0
  3716  000D4E  EC37  F018         	call	_MiApp_ConnectionMode
  3717  000D52                     l12296:
  3718  000D52  0100               	movlb	0	; () banked
  3719  000D54  6BF4               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  3720  000D56  EC36  F00F         	call	_MiApp_EstablishConnection
  3721  000D5A  0AFF               	xorlw	255
  3722  000D5C  E0FA               	bz	l12296
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;star_demo.c: 276: fix_me = 0;
  3726  000D5E  6B99               	clrf	_fix_me& (0+255),b
  3727  000D60                     l12298:
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;star_demo.c: 277: }
  3731                           ;star_demo.c: 278: t3 = MiWi_TickGet();
  3732  000D60  EC19  F017         	call	_MiWi_TickGet	;wreg free
  3733  000D64  C016  F07E         	movff	?_MiWi_TickGet,_t3
  3734  000D68  C017  F07F         	movff	?_MiWi_TickGet+1,_t3+1
  3735  000D6C  C018  F080         	movff	?_MiWi_TickGet+2,_t3+2
  3736  000D70  C019  F081         	movff	?_MiWi_TickGet+3,_t3+3
  3737                           
  3738                           ;star_demo.c: 279: if(((t3.Val - t2.Val) > (((uint32_t)(16000000)/32) * 40)))
  3739  000D74  0100               	movlb	0	; () banked
  3740  000D76  517A               	movf	_t2& (0+255),w,b
  3741  000D78  5D7E               	subwf	_t3& (0+255),w,b
  3742  000D7A  0101               	movlb	1	; () banked
  3743  000D7C  6FEB               	movwf	??_run_star_demo& (0+255),b
  3744  000D7E  0100               	movlb	0	; () banked
  3745  000D80  517B               	movf	(_t2+1)& (0+255),w,b
  3746  000D82  597F               	subwfb	(_t3+1)& (0+255),w,b
  3747  000D84  0101               	movlb	1	; () banked
  3748  000D86  6FEC               	movwf	(??_run_star_demo+1)& (0+255),b
  3749  000D88  0100               	movlb	0	; () banked
  3750  000D8A  517C               	movf	(_t2+2)& (0+255),w,b
  3751  000D8C  5980               	subwfb	(_t3+2)& (0+255),w,b
  3752  000D8E  0101               	movlb	1	; () banked
  3753  000D90  6FED               	movwf	(??_run_star_demo+2)& (0+255),b
  3754  000D92  0100               	movlb	0	; () banked
  3755  000D94  517D               	movf	(_t2+3)& (0+255),w,b
  3756  000D96  5981               	subwfb	(_t3+3)& (0+255),w,b
  3757  000D98  0101               	movlb	1	; () banked
  3758  000D9A  6FEE               	movwf	(??_run_star_demo+3)& (0+255),b
  3759  000D9C  05EB               	decf	??_run_star_demo& (0+255),w,b
  3760  000D9E  0E2D               	movlw	45
  3761  000DA0  59EC               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  3762  000DA2  0E31               	movlw	49
  3763  000DA4  59ED               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  3764  000DA6  0E01               	movlw	1
  3765  000DA8  59EE               	subwfb	(??_run_star_demo+3)& (0+255),w,b
  3766  000DAA  E31E               	bnc	l12314
  3767                           
  3768                           ; BSR set to: 1
  3769                           ;star_demo.c: 280: {
  3770                           ;star_demo.c: 281: awake = 0;
  3771  000DAC  0100               	movlb	0	; () banked
  3772  000DAE  6B97               	clrf	_awake& (0+255),b
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;star_demo.c: 283: LCD_BacklightOFF();
  3776  000DB0  EC1F  F01A         	call	_LCD_BacklightOFF	;wreg free
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;star_demo.c: 285: MiApp_TransceiverPowerState(0x00);
  3780  000DB4  0E00               	movlw	0
  3781  000DB6  EC37  F015         	call	_MiApp_TransceiverPowerState
  3782                           
  3783                           ;star_demo.c: 286: LCDDisplay((char *)"Sleeping!!!", 0, 0);
  3784  000DBA  0EAD               	movlw	low STR_38
  3785  000DBC  0100               	movlb	0	; () banked
  3786  000DBE  6FC2               	movwf	LCDDisplay@text& (0+255),b
  3787  000DC0  0EFF               	movlw	high STR_38
  3788  000DC2  6FC3               	movwf	(LCDDisplay@text+1)& (0+255),b
  3789  000DC4  6BC4               	clrf	LCDDisplay@value& (0+255),b
  3790  000DC6  6BC5               	clrf	LCDDisplay@delay& (0+255),b
  3791  000DC8  EC64  F017         	call	_LCDDisplay	;wreg free
  3792                           
  3793                           ;star_demo.c: 287: DELAY_ms(1000);
  3794  000DCC  0E03               	movlw	3
  3795  000DCE  6E17               	movwf	DELAY_ms@ms+1,c
  3796  000DD0  0EE8               	movlw	232
  3797  000DD2  6E16               	movwf	DELAY_ms@ms,c
  3798  000DD4  EC88  F011         	call	_DELAY_ms	;wreg free
  3799                           
  3800                           ;star_demo.c: 288: t1 = t3;
  3801  000DD8  C07E  F076         	movff	_t3,_t1
  3802  000DDC  C07F  F077         	movff	_t3+1,_t1+1
  3803  000DE0  C080  F078         	movff	_t3+2,_t1+2
  3804  000DE4  C081  F079         	movff	_t3+3,_t1+3
  3805  000DE8                     l12314:
  3806  000DE8  0100               	movlb	0	; () banked
  3807  000DEA  5197               	movf	_awake& (0+255),w,b
  3808  000DEC  E101 D578          	bz	l12154
  3809  000DF0  D5C4               	goto	l12172
  3810  000DF2                     __end_of_run_star_demo:
  3811                           	opt stack 0
  3812                           tblptru	equ	0xFF8
  3813                           tblptrh	equ	0xFF7
  3814                           tblptrl	equ	0xFF6
  3815                           tablat	equ	0xFF5
  3816                           prodh	equ	0xFF4
  3817                           prodl	equ	0xFF3
  3818                           intcon	equ	0xFF2
  3819                           intcon2	equ	0xFF1
  3820                           postinc0	equ	0xFEE
  3821                           wreg	equ	0xFE8
  3822                           indf1	equ	0xFE7
  3823                           postdec1	equ	0xFE5
  3824                           fsr1h	equ	0xFE2
  3825                           fsr1l	equ	0xFE1
  3826                           indf2	equ	0xFDF
  3827                           fsr2h	equ	0xFDA
  3828                           fsr2l	equ	0xFD9
  3829                           
  3830 ;; *************** function _STAR_DEMO_OPTIONS_MESSAGE *****************
  3831 ;; Defined at:
  3832 ;;		line 212 in file "../src/demo_ouput.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  NetworkRole     1    wreg     unsigned char 
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;  NetworkRole     1   23[BANK0 ] unsigned char 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;		None               void
  3839 ;; Registers used:
  3840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3849 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;Total ram usage:        1 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    7
  3853 ;; This function calls:
  3854 ;;		_LCDDisplay
  3855 ;; This function is called by:
  3856 ;;		_run_star_demo
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text7
  3861  0032C6                     __ptext7:
  3862                           	opt stack 0
  3863  0032C6                     _STAR_DEMO_OPTIONS_MESSAGE:
  3864                           	opt stack 21
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;incstack = 0
  3868                           ;STAR_DEMO_OPTIONS_MESSAGE@NetworkRole stored from wreg
  3869  0032C6  0100               	movlb	0	; () banked
  3870  0032C8  6FC6               	movwf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),b
  3871                           
  3872                           ;demo_ouput.c: 214: if (NetworkRole)
  3873  0032CA  51C6               	movf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),w,b
  3874  0032CC  E004               	bz	l11960
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;demo_ouput.c: 215: {
  3878                           ;demo_ouput.c: 219: LCDDisplay((char *)"PC :SW1 or SW2  to BroadCast msg", 0, 0);
  3879  0032CE  0EB3               	movlw	low STR_26
  3880  0032D0  6FC2               	movwf	LCDDisplay@text& (0+255),b
  3881  0032D2  0EFD               	movlw	high STR_26
  3882  0032D4  D003               	goto	L22
  3883  0032D6                     l11960:
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;demo_ouput.c: 222: else
  3887                           ;demo_ouput.c: 223: {
  3888                           ;demo_ouput.c: 227: LCDDisplay((char *)"SW1 : Unicast   SW2 : Next Node", 0, 0);
  3889  0032D6  0EF4               	movlw	low STR_27
  3890  0032D8  6FC2               	movwf	LCDDisplay@text& (0+255),b
  3891  0032DA  0EFD               	movlw	high STR_27
  3892  0032DC                     L22:
  3893  0032DC  6FC3               	movwf	(LCDDisplay@text+1)& (0+255),b
  3894  0032DE  6BC4               	clrf	LCDDisplay@value& (0+255),b
  3895  0032E0  6BC5               	clrf	LCDDisplay@delay& (0+255),b
  3896  0032E2  EF64  F017         	goto	_LCDDisplay	;wreg free
  3897  0032E6                     __end_of_STAR_DEMO_OPTIONS_MESSAGE:
  3898                           	opt stack 0
  3899                           tblptru	equ	0xFF8
  3900                           tblptrh	equ	0xFF7
  3901                           tblptrl	equ	0xFF6
  3902                           tablat	equ	0xFF5
  3903                           prodh	equ	0xFF4
  3904                           prodl	equ	0xFF3
  3905                           intcon	equ	0xFF2
  3906                           intcon2	equ	0xFF1
  3907                           postinc0	equ	0xFEE
  3908                           wreg	equ	0xFE8
  3909                           indf1	equ	0xFE7
  3910                           postdec1	equ	0xFE5
  3911                           fsr1h	equ	0xFE2
  3912                           fsr1l	equ	0xFE1
  3913                           indf2	equ	0xFDF
  3914                           fsr2h	equ	0xFDA
  3915                           fsr2l	equ	0xFD9
  3916                           
  3917 ;; *************** function _MiApp_UnicastStar *****************
  3918 ;; Defined at:
  3919 ;;		line 1974 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  SecEn           1    wreg     unsigned char 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  SecEn           1    0[BANK1 ] unsigned char 
  3924 ;;  t2              4    5[BANK1 ] struct _MIWI_TICK
  3925 ;;  t1              4    1[BANK1 ] struct _MIWI_TICK
  3926 ;;  status          1    0        unsigned char 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  1    wreg      unsigned char 
  3929 ;; Registers used:
  3930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : F/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3939 ;;      Totals:         0       4       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3940 ;;Total ram usage:       13 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:   14
  3943 ;; This function calls:
  3944 ;;		_MiApp_MessageAvailable
  3945 ;;		_MiWi_TickGet
  3946 ;;		_SendPacket
  3947 ;; This function is called by:
  3948 ;;		_run_star_demo
  3949 ;; This function uses a non-reentrant model
  3950 ;;
  3951                           
  3952                           	psect	text8
  3953  00260C                     __ptext8:
  3954                           	opt stack 0
  3955  00260C                     _MiApp_UnicastStar:
  3956                           	opt stack 14
  3957                           
  3958                           ;incstack = 0
  3959                           ;MiApp_UnicastStar@SecEn stored from wreg
  3960  00260C  0101               	movlb	1	; () banked
  3961  00260E  6FDF               	movwf	MiApp_UnicastStar@SecEn& (0+255),b
  3962                           
  3963                           ;miwi_p2p.c: 1976: rec_ack = 0;
  3964  002610  0100               	movlb	0	; () banked
  3965  002612  6B9A               	clrf	_rec_ack& (0+255),b
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;miwi_p2p.c: 1977: bool status;
  3969                           ;miwi_p2p.c: 1982: status = SendPacket(0, myPANID, ConnectionTable[0].Address, 1, SecEn)
      +                          ;
  3970  002614  C09B  F0CA         	movff	_myPANID,SendPacket@DestinationPANID
  3971  002618  C09C  F0CB         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  3972  00261C  0EA4               	movlw	low (_ConnectionTable+4)
  3973  00261E  6FCC               	movwf	SendPacket@DestinationAddress& (0+255),b
  3974  002620  0E02               	movlw	high (_ConnectionTable+4)
  3975  002622  6FCD               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  3976  002624  0E01               	movlw	1
  3977  002626  6FCE               	movwf	SendPacket@isCommand& (0+255),b
  3978  002628  C1DF  F0CF         	movff	MiApp_UnicastStar@SecEn,SendPacket@SecurityEnabled
  3979  00262C  0E00               	movlw	0
  3980  00262E  EC54  F012         	call	_SendPacket
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;miwi_p2p.c: 1987: MIWI_TICK t1, t2;
  3984                           ;miwi_p2p.c: 1989: t1 = MiWi_TickGet();
  3985  002632  EC19  F017         	call	_MiWi_TickGet	;wreg free
  3986  002636  C016  F1E0         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t1
  3987  00263A  C017  F1E1         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t1+1
  3988  00263E  C018  F1E2         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t1+2
  3989  002642  C019  F1E3         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t1+3
  3990                           
  3991                           ;miwi_p2p.c: 1990: while (!rec_ack)
  3992  002646  D02A               	goto	l11856
  3993  002648                     l11846:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;miwi_p2p.c: 1991: {
  3997                           ;miwi_p2p.c: 1992: t2 = MiWi_TickGet();
  3998  002648  EC19  F017         	call	_MiWi_TickGet	;wreg free
  3999  00264C  C016  F1E4         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t2
  4000  002650  C017  F1E5         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t2+1
  4001  002654  C018  F1E6         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t2+2
  4002  002658  C019  F1E7         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t2+3
  4003                           
  4004                           ;miwi_p2p.c: 1993: MiApp_MessageAvailable();
  4005  00265C  EC0C  F01A         	call	_MiApp_MessageAvailable	;wreg free
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;miwi_p2p.c: 1996: if((t2.Val - t1.Val) > ((((uint32_t)(16000000)/32)/10)))
  4009  002660  0101               	movlb	1	; () banked
  4010  002662  51E0               	movf	MiApp_UnicastStar@t1& (0+255),w,b
  4011  002664  5DE4               	subwf	MiApp_UnicastStar@t2& (0+255),w,b
  4012  002666  0100               	movlb	0	; () banked
  4013  002668  6FF4               	movwf	??_MiApp_UnicastStar& (0+255),b
  4014  00266A  0101               	movlb	1	; () banked
  4015  00266C  51E1               	movf	(MiApp_UnicastStar@t1+1)& (0+255),w,b
  4016  00266E  59E5               	subwfb	(MiApp_UnicastStar@t2+1)& (0+255),w,b
  4017  002670  0100               	movlb	0	; () banked
  4018  002672  6FF5               	movwf	(??_MiApp_UnicastStar+1)& (0+255),b
  4019  002674  0101               	movlb	1	; () banked
  4020  002676  51E2               	movf	(MiApp_UnicastStar@t1+2)& (0+255),w,b
  4021  002678  59E6               	subwfb	(MiApp_UnicastStar@t2+2)& (0+255),w,b
  4022  00267A  0100               	movlb	0	; () banked
  4023  00267C  6FF6               	movwf	(??_MiApp_UnicastStar+2)& (0+255),b
  4024  00267E  0101               	movlb	1	; () banked
  4025  002680  51E3               	movf	(MiApp_UnicastStar@t1+3)& (0+255),w,b
  4026  002682  59E7               	subwfb	(MiApp_UnicastStar@t2+3)& (0+255),w,b
  4027  002684  0100               	movlb	0	; () banked
  4028  002686  6FF7               	movwf	(??_MiApp_UnicastStar+3)& (0+255),b
  4029  002688  51F7               	movf	(??_MiApp_UnicastStar+3)& (0+255),w,b
  4030  00268A  11F6               	iorwf	(??_MiApp_UnicastStar+2)& (0+255),w,b
  4031  00268C  E105               	bnz	u11660
  4032  00268E  0E51               	movlw	81
  4033  002690  5DF4               	subwf	??_MiApp_UnicastStar& (0+255),w,b
  4034  002692  0EC3               	movlw	195
  4035  002694  59F5               	subwfb	(??_MiApp_UnicastStar+1)& (0+255),w,b
  4036  002696  E302               	bnc	l11856
  4037  002698                     u11660:
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;miwi_p2p.c: 1997: {
  4041                           ;miwi_p2p.c: 1998: if (rec_ack != 1)
  4042  002698  059A               	decf	_rec_ack& (0+255),w,b
  4043  00269A  E103               	bnz	l11858
  4044  00269C                     l11856:
  4045  00269C  0100               	movlb	0	; () banked
  4046  00269E  519A               	movf	_rec_ack& (0+255),w,b
  4047  0026A0  E0D3               	bz	l11846
  4048  0026A2                     l11858:
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;miwi_p2p.c: 2001: }
  4052                           ;miwi_p2p.c: 2002: }
  4053                           ;miwi_p2p.c: 2003: }
  4054                           ;miwi_p2p.c: 2006: return rec_ack;
  4055  0026A2  519A               	movf	_rec_ack& (0+255),w,b
  4056                           
  4057                           ; BSR set to: 0
  4058  0026A4  0012               	return		;funcret
  4059  0026A6                     __end_of_MiApp_UnicastStar:
  4060                           	opt stack 0
  4061                           tblptru	equ	0xFF8
  4062                           tblptrh	equ	0xFF7
  4063                           tblptrl	equ	0xFF6
  4064                           tablat	equ	0xFF5
  4065                           prodh	equ	0xFF4
  4066                           prodl	equ	0xFF3
  4067                           intcon	equ	0xFF2
  4068                           intcon2	equ	0xFF1
  4069                           postinc0	equ	0xFEE
  4070                           wreg	equ	0xFE8
  4071                           indf1	equ	0xFE7
  4072                           postdec1	equ	0xFE5
  4073                           fsr1h	equ	0xFE2
  4074                           fsr1l	equ	0xFE1
  4075                           indf2	equ	0xFDF
  4076                           fsr2h	equ	0xFDA
  4077                           fsr2l	equ	0xFD9
  4078                           
  4079 ;; *************** function _MiApp_TransceiverPowerState *****************
  4080 ;; Defined at:
  4081 ;;		line 1321 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  Mode            1    wreg     unsigned char 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  Mode            1   69[BANK0 ] unsigned char 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      unsigned char 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : F/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4096 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4098 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4099 ;;Total ram usage:        1 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:   13
  4102 ;; This function calls:
  4103 ;;		_CheckForData
  4104 ;;		_EEPROM_Write
  4105 ;;		_MiMAC_PowerState
  4106 ;;		_P2PTasks
  4107 ;; This function is called by:
  4108 ;;		_run_star_demo
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text9
  4113  002A6E                     __ptext9:
  4114                           	opt stack 0
  4115  002A6E                     _MiApp_TransceiverPowerState:
  4116                           	opt stack 15
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;incstack = 0
  4120                           ;MiApp_TransceiverPowerState@Mode stored from wreg
  4121  002A6E  6FF4               	movwf	MiApp_TransceiverPowerState@Mode& (0+255),b
  4122                           
  4123                           ;miwi_p2p.c: 1325: switch(Mode)
  4124  002A70  D033               	goto	l11838
  4125  002A72                     l537:
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;miwi_p2p.c: 1328: {
  4129                           ;miwi_p2p.c: 1330: if( P2PStatus.bits.SaveConnection )
  4130  002A72  A392               	btfss	_P2PStatus& (0+255),1,b	;volatile
  4131  002A74  D00C               	goto	l11816
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;miwi_p2p.c: 1331: {
  4135                           ;miwi_p2p.c: 1332: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)40 * sizeof(C
      +                          ONNECTION_ENTRY));
  4136  002A76  0EA0               	movlw	low _ConnectionTable
  4137  002A78  6E17               	movwf	EEPROM_Write@dest,c
  4138  002A7A  0E02               	movlw	high _ConnectionTable
  4139  002A7C  6E18               	movwf	EEPROM_Write@dest+1,c
  4140  002A7E  0E04               	movlw	4
  4141  002A80  6E19               	movwf	EEPROM_Write@addr,c
  4142  002A82  0E30               	movlw	48
  4143  002A84  6E1A               	movwf	EEPROM_Write@count,c
  4144  002A86  ECF8  F014         	call	_EEPROM_Write	;wreg free
  4145                           
  4146                           ;miwi_p2p.c: 1333: P2PStatus.bits.SaveConnection = 0;
  4147  002A8A  0100               	movlb	0	; () banked
  4148  002A8C  9392               	bcf	_P2PStatus& (0+255),1,b	;volatile
  4149  002A8E                     l11816:
  4150                           
  4151                           ; BSR set to: 0
  4152                           ;miwi_p2p.c: 1334: }
  4153                           ;miwi_p2p.c: 1336: if( MiMAC_PowerState(0x00) )
  4154  002A8E  0E00               	movlw	0
  4155  002A90  EC8B  F010         	call	_MiMAC_PowerState
  4156  002A94  0900               	iorlw	0
  4157  002A96  B4D8               	btfsc	status,2,c
  4158  002A98  0012               	return	
  4159                           
  4160                           ;miwi_p2p.c: 1337: {
  4161                           ;miwi_p2p.c: 1338: P2PStatus.bits.Sleeping = 1;
  4162  002A9A  0100               	movlb	0	; () banked
  4163  002A9C  8192               	bsf	_P2PStatus& (0+255),0,b	;volatile
  4164                           
  4165                           ;miwi_p2p.c: 1339: return 0x00;
  4166                           ;	Return value of _MiApp_TransceiverPowerState is never used
  4167  002A9E  0012               	return	
  4168  002AA0                     l11820:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;miwi_p2p.c: 1345: {
  4172                           ;miwi_p2p.c: 1346: if( MiMAC_PowerState(0xFF) )
  4173  002AA0  0EFF               	movlw	255
  4174  002AA2  EC8B  F010         	call	_MiMAC_PowerState
  4175  002AA6  0900               	iorlw	0
  4176  002AA8  B4D8               	btfsc	status,2,c
  4177  002AAA  0012               	return	
  4178                           
  4179                           ;miwi_p2p.c: 1347: {
  4180                           ;miwi_p2p.c: 1348: P2PStatus.bits.Sleeping = 0;
  4181  002AAC  0100               	movlb	0	; () banked
  4182  002AAE  9192               	bcf	_P2PStatus& (0+255),0,b	;volatile
  4183                           
  4184                           ;miwi_p2p.c: 1349: return 0x00;
  4185                           ;	Return value of _MiApp_TransceiverPowerState is never used
  4186  002AB0  0012               	return	
  4187  002AB2                     l11824:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;miwi_p2p.c: 1355: {
  4191                           ;miwi_p2p.c: 1356: if( 0 == MiMAC_PowerState(0xFF) )
  4192  002AB2  0EFF               	movlw	255
  4193  002AB4  EC8B  F010         	call	_MiMAC_PowerState
  4194  002AB8  0900               	iorlw	0
  4195  002ABA  E101               	bnz	l544
  4196  002ABC  0012               	return	
  4197  002ABE                     l544:
  4198                           
  4199                           ;miwi_p2p.c: 1359: }
  4200                           ;miwi_p2p.c: 1360: P2PStatus.bits.Sleeping = 0;
  4201  002ABE  0100               	movlb	0	; () banked
  4202  002AC0  9192               	bcf	_P2PStatus& (0+255),0,b	;volatile
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;miwi_p2p.c: 1361: if( CheckForData() == 0 )
  4206  002AC2  ECEA  F015         	call	_CheckForData	;wreg free
  4207  002AC6  0900               	iorlw	0
  4208  002AC8  E103               	bnz	l11834
  4209  002ACA  0012               	return	
  4210  002ACC                     l11832:
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;miwi_p2p.c: 1366: {
  4214                           ;miwi_p2p.c: 1367: P2PTasks();
  4215  002ACC  EC90  F009         	call	_P2PTasks	;wreg free
  4216  002AD0                     l11834:
  4217  002AD0  0100               	movlb	0	; () banked
  4218  002AD2  A592               	btfss	_P2PStatus& (0+255),2,b	;volatile
  4219  002AD4  0012               	return	
  4220  002AD6  D7FA               	goto	l11832
  4221  002AD8                     l11838:
  4222  002AD8  0100               	movlb	0	; () banked
  4223  002ADA  51F4               	movf	MiApp_TransceiverPowerState@Mode& (0+255),w,b
  4224                           
  4225                           ; Switch size 1, requested type "speed"
  4226                           ; Number of cases is 3, Range of values is 0 to 2
  4227                           ; switch strategies available:
  4228                           ; Name         Instructions Cycles
  4229                           ; simple_byte           10     6 (average)
  4230                           ;	Chosen strategy is simple_byte
  4231  002ADC  E0CA               	bz	l537
  4232  002ADE  0A01               	xorlw	1	; case 1
  4233  002AE0  E0DF               	bz	l11820
  4234  002AE2  0A03               	xorlw	3	; case 2
  4235  002AE4  E0E6               	bz	l11824
  4236  002AE6  0012               	return		;funcret
  4237  002AE8                     __end_of_MiApp_TransceiverPowerState:
  4238                           	opt stack 0
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           prodh	equ	0xFF4
  4244                           prodl	equ	0xFF3
  4245                           intcon	equ	0xFF2
  4246                           intcon2	equ	0xFF1
  4247                           postinc0	equ	0xFEE
  4248                           wreg	equ	0xFE8
  4249                           indf1	equ	0xFE7
  4250                           postdec1	equ	0xFE5
  4251                           fsr1h	equ	0xFE2
  4252                           fsr1l	equ	0xFE1
  4253                           indf2	equ	0xFDF
  4254                           fsr2h	equ	0xFDA
  4255                           fsr2l	equ	0xFD9
  4256                           status	equ	0xFD8
  4257                           
  4258 ;; *************** function _MiMAC_PowerState *****************
  4259 ;; Defined at:
  4260 ;;		line 1148 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  PowerState      1    wreg     unsigned char 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  PowerState      1    0[BANK0 ] unsigned char 
  4265 ;;  t2              4    6[BANK0 ] struct _MIWI_TICK
  4266 ;;  t1              4    1[BANK0 ] struct _MIWI_TICK
  4267 ;;  results         1    5[BANK0 ] unsigned char 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      unsigned char 
  4270 ;; Registers used:
  4271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4278 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4280 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4281 ;;Total ram usage:       10 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:    7
  4284 ;; This function calls:
  4285 ;;		_InitMRF24J40
  4286 ;;		_MiMAC_SetAltAddress
  4287 ;;		_MiWi_TickGet
  4288 ;;		_PHYGetLongRAMAddr
  4289 ;;		_PHYGetShortRAMAddr
  4290 ;;		_PHYSetShortRAMAddr
  4291 ;; This function is called by:
  4292 ;;		_MiApp_TransceiverPowerState
  4293 ;; This function uses a non-reentrant model
  4294 ;;
  4295                           
  4296                           	psect	text10
  4297  002116                     __ptext10:
  4298                           	opt stack 0
  4299  002116                     _MiMAC_PowerState:
  4300                           	opt stack 20
  4301                           
  4302                           ;incstack = 0
  4303                           ;MiMAC_PowerState@PowerState stored from wreg
  4304  002116  0100               	movlb	0	; () banked
  4305  002118  6FAF               	movwf	MiMAC_PowerState@PowerState& (0+255),b
  4306                           
  4307                           ;drv_mrf_miwi_24j40.c: 1150: switch (PowerState)
  4308  00211A  D084               	goto	l11678
  4309  00211C                     l185:
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;drv_mrf_miwi_24j40.c: 1153: {
  4313                           ;drv_mrf_miwi_24j40.c: 1155: LATDbits.LATD1 = 0;
  4314  00211C  928C               	bcf	3980,1,c	;volatile
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;drv_mrf_miwi_24j40.c: 1164: PHYSetShortRAMAddr((0x55), 0x04);
  4318  00211E  0E04               	movlw	4
  4319  002120  6E17               	movwf	PHYSetShortRAMAddr@value,c
  4320  002122  0E55               	movlw	85
  4321  002124  EC15  F019         	call	_PHYSetShortRAMAddr
  4322                           
  4323                           ;drv_mrf_miwi_24j40.c: 1167: PHYSetShortRAMAddr((0x45), 0x80);
  4324  002128  0E80               	movlw	128
  4325  00212A  6E17               	movwf	PHYSetShortRAMAddr@value,c
  4326  00212C  0E45               	movlw	69
  4327  00212E  EC15  F019         	call	_PHYSetShortRAMAddr
  4328                           
  4329                           ;drv_mrf_miwi_24j40.c: 1168: PHYSetShortRAMAddr((0x1B), 0x60);
  4330  002132  0E60               	movlw	96
  4331  002134  6E17               	movwf	PHYSetShortRAMAddr@value,c
  4332  002136  0E1B               	movlw	27
  4333  002138  EC15  F019         	call	_PHYSetShortRAMAddr
  4334                           
  4335                           ;drv_mrf_miwi_24j40.c: 1169: PHYSetShortRAMAddr((0x6B), 0x80);
  4336  00213C  0E80               	movlw	128
  4337  00213E  6E17               	movwf	PHYSetShortRAMAddr@value,c
  4338  002140  0E6B               	movlw	107
  4339  002142  EC15  F019         	call	_PHYSetShortRAMAddr
  4340                           
  4341                           ;drv_mrf_miwi_24j40.c: 1170: }
  4342                           ;drv_mrf_miwi_24j40.c: 1171: break;
  4343  002146  0C01               	retlw	1
  4344  002148                     l187:
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;drv_mrf_miwi_24j40.c: 1174: {
  4348                           ;drv_mrf_miwi_24j40.c: 1179: uint8_t results;
  4349                           ;drv_mrf_miwi_24j40.c: 1180: MIWI_TICK t1, t2;
  4350                           ;drv_mrf_miwi_24j40.c: 1183: LATDbits.LATD1 = 1;
  4351  002148  828C               	bsf	3980,1,c	;volatile
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;drv_mrf_miwi_24j40.c: 1185: t1 = MiWi_TickGet();
  4355  00214A  EC19  F017         	call	_MiWi_TickGet	;wreg free
  4356  00214E  C016  F0B0         	movff	?_MiWi_TickGet,MiMAC_PowerState@t1
  4357  002152  C017  F0B1         	movff	?_MiWi_TickGet+1,MiMAC_PowerState@t1+1
  4358  002156  C018  F0B2         	movff	?_MiWi_TickGet+2,MiMAC_PowerState@t1+2
  4359  00215A  C019  F0B3         	movff	?_MiWi_TickGet+3,MiMAC_PowerState@t1+3
  4360  00215E                     l188:
  4361                           
  4362                           ;drv_mrf_miwi_24j40.c: 1188: {
  4363                           ;drv_mrf_miwi_24j40.c: 1189: t2 = MiWi_TickGet();
  4364  00215E  EC19  F017         	call	_MiWi_TickGet	;wreg free
  4365  002162  C016  F0B5         	movff	?_MiWi_TickGet,MiMAC_PowerState@t2
  4366  002166  C017  F0B6         	movff	?_MiWi_TickGet+1,MiMAC_PowerState@t2+1
  4367  00216A  C018  F0B7         	movff	?_MiWi_TickGet+2,MiMAC_PowerState@t2+2
  4368  00216E  C019  F0B8         	movff	?_MiWi_TickGet+3,MiMAC_PowerState@t2+3
  4369                           
  4370                           ;drv_mrf_miwi_24j40.c: 1190: t2.Val = (t2.Val - t1.Val);
  4371  002172  0100               	movlb	0	; () banked
  4372  002174  51B0               	movf	MiMAC_PowerState@t1& (0+255),w,b
  4373  002176  5FB5               	subwf	MiMAC_PowerState@t2& (0+255),f,b
  4374  002178  51B1               	movf	(MiMAC_PowerState@t1+1)& (0+255),w,b
  4375  00217A  5BB6               	subwfb	(MiMAC_PowerState@t2+1)& (0+255),f,b
  4376  00217C  51B2               	movf	(MiMAC_PowerState@t1+2)& (0+255),w,b
  4377  00217E  5BB7               	subwfb	(MiMAC_PowerState@t2+2)& (0+255),f,b
  4378  002180  51B3               	movf	(MiMAC_PowerState@t1+3)& (0+255),w,b
  4379  002182  5BB8               	subwfb	(MiMAC_PowerState@t2+3)& (0+255),f,b
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;drv_mrf_miwi_24j40.c: 1193: if (t2.Val > (((uint32_t)(16000000)/32)/10))
  4383  002184  51B8               	movf	(MiMAC_PowerState@t2+3)& (0+255),w,b
  4384  002186  11B7               	iorwf	(MiMAC_PowerState@t2+2)& (0+255),w,b
  4385  002188  E105               	bnz	u11500
  4386  00218A  0E51               	movlw	81
  4387  00218C  5DB5               	subwf	MiMAC_PowerState@t2& (0+255),w,b
  4388  00218E  0EC3               	movlw	195
  4389  002190  59B6               	subwfb	(MiMAC_PowerState@t2+1)& (0+255),w,b
  4390  002192  E308               	bnc	l11648
  4391  002194                     u11500:
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;drv_mrf_miwi_24j40.c: 1194: {
  4395                           ;drv_mrf_miwi_24j40.c: 1195: InitMRF24J40();
  4396  002194  EC74  F00D         	call	_InitMRF24J40	;wreg free
  4397                           
  4398                           ;drv_mrf_miwi_24j40.c: 1197: MiMAC_SetAltAddress(myNetworkAddress.v, MAC_PANID.v);
  4399  002198  0E43               	movlw	low _MAC_PANID
  4400  00219A  6E1A               	movwf	MiMAC_SetAltAddress@PANID,c
  4401  00219C  0E45               	movlw	_myNetworkAddress& (0+255)
  4402  00219E  EC4D  F016         	call	_MiMAC_SetAltAddress
  4403                           
  4404                           ;drv_mrf_miwi_24j40.c: 1198: break;
  4405  0021A2  D007               	goto	l11654
  4406  0021A4                     l11648:
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;drv_mrf_miwi_24j40.c: 1199: }
  4410                           ;drv_mrf_miwi_24j40.c: 1201: results = PHYGetShortRAMAddr((0x62));
  4411  0021A4  0E62               	movlw	98
  4412  0021A6  EC96  F018         	call	_PHYGetShortRAMAddr
  4413  0021AA  0100               	movlb	0	; () banked
  4414  0021AC  6FB4               	movwf	MiMAC_PowerState@results& (0+255),b
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;drv_mrf_miwi_24j40.c: 1202: if ((results & 0x40) != 0x00)
  4418  0021AE  ADB4               	btfss	MiMAC_PowerState@results& (0+255),6,b
  4419  0021B0  D7D6               	goto	l188
  4420  0021B2                     l11654:
  4421                           
  4422                           ;drv_mrf_miwi_24j40.c: 1209: {
  4423                           ;drv_mrf_miwi_24j40.c: 1210: t2 = MiWi_TickGet();
  4424  0021B2  EC19  F017         	call	_MiWi_TickGet	;wreg free
  4425  0021B6  C016  F0B5         	movff	?_MiWi_TickGet,MiMAC_PowerState@t2
  4426  0021BA  C017  F0B6         	movff	?_MiWi_TickGet+1,MiMAC_PowerState@t2+1
  4427  0021BE  C018  F0B7         	movff	?_MiWi_TickGet+2,MiMAC_PowerState@t2+2
  4428  0021C2  C019  F0B8         	movff	?_MiWi_TickGet+3,MiMAC_PowerState@t2+3
  4429                           
  4430                           ;drv_mrf_miwi_24j40.c: 1211: t2.Val = (t2.Val - t1.Val);
  4431  0021C6  0100               	movlb	0	; () banked
  4432  0021C8  51B0               	movf	MiMAC_PowerState@t1& (0+255),w,b
  4433  0021CA  5FB5               	subwf	MiMAC_PowerState@t2& (0+255),f,b
  4434  0021CC  51B1               	movf	(MiMAC_PowerState@t1+1)& (0+255),w,b
  4435  0021CE  5BB6               	subwfb	(MiMAC_PowerState@t2+1)& (0+255),f,b
  4436  0021D0  51B2               	movf	(MiMAC_PowerState@t1+2)& (0+255),w,b
  4437  0021D2  5BB7               	subwfb	(MiMAC_PowerState@t2+2)& (0+255),f,b
  4438  0021D4  51B3               	movf	(MiMAC_PowerState@t1+3)& (0+255),w,b
  4439  0021D6  5BB8               	subwfb	(MiMAC_PowerState@t2+3)& (0+255),f,b
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;drv_mrf_miwi_24j40.c: 1214: if (t2.Val > (((uint32_t)(16000000)/32)/10))
  4443  0021D8  51B8               	movf	(MiMAC_PowerState@t2+3)& (0+255),w,b
  4444  0021DA  11B7               	iorwf	(MiMAC_PowerState@t2+2)& (0+255),w,b
  4445  0021DC  E105               	bnz	u11520
  4446  0021DE  0E51               	movlw	81
  4447  0021E0  5DB5               	subwf	MiMAC_PowerState@t2& (0+255),w,b
  4448  0021E2  0EC3               	movlw	195
  4449  0021E4  59B6               	subwfb	(MiMAC_PowerState@t2+1)& (0+255),w,b
  4450  0021E6  E308               	bnc	l11664
  4451  0021E8                     u11520:
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;drv_mrf_miwi_24j40.c: 1215: {
  4455                           ;drv_mrf_miwi_24j40.c: 1216: InitMRF24J40();
  4456  0021E8  EC74  F00D         	call	_InitMRF24J40	;wreg free
  4457                           
  4458                           ;drv_mrf_miwi_24j40.c: 1218: MiMAC_SetAltAddress(myNetworkAddress.v, MAC_PANID.v);
  4459  0021EC  0E43               	movlw	low _MAC_PANID
  4460  0021EE  6E1A               	movwf	MiMAC_SetAltAddress@PANID,c
  4461  0021F0  0E45               	movlw	_myNetworkAddress& (0+255)
  4462  0021F2  EC4D  F016         	call	_MiMAC_SetAltAddress
  4463                           
  4464                           ;drv_mrf_miwi_24j40.c: 1219: break;
  4465  0021F6  D00C               	goto	l11670
  4466  0021F8                     l11664:
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;drv_mrf_miwi_24j40.c: 1220: }
  4470                           ;drv_mrf_miwi_24j40.c: 1222: results = PHYGetLongRAMAddr((0x20f));
  4471  0021F8  0E02               	movlw	2
  4472  0021FA  6E18               	movwf	PHYGetLongRAMAddr@address+1,c
  4473  0021FC  0E0F               	movlw	15
  4474  0021FE  6E17               	movwf	PHYGetLongRAMAddr@address,c
  4475  002200  EC78  F016         	call	_PHYGetLongRAMAddr	;wreg free
  4476  002204  0100               	movlb	0	; () banked
  4477  002206  6FB4               	movwf	MiMAC_PowerState@results& (0+255),b
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;drv_mrf_miwi_24j40.c: 1223: if ((results & 0xE0) == 0xA0)
  4481  002208  51B4               	movf	MiMAC_PowerState@results& (0+255),w,b
  4482  00220A  0BE0               	andlw	224
  4483  00220C  0AA0               	xorlw	160
  4484  00220E  E1D1               	bnz	l11654
  4485  002210                     l11670:
  4486                           
  4487                           ;drv_mrf_miwi_24j40.c: 1226: }
  4488                           ;drv_mrf_miwi_24j40.c: 1228: }
  4489                           ;drv_mrf_miwi_24j40.c: 1230: PHYSetShortRAMAddr((0x6D), 0x04);
  4490  002210  0E04               	movlw	4
  4491  002212  6E17               	movwf	PHYSetShortRAMAddr@value,c
  4492  002214  0E6D               	movlw	109
  4493  002216  EC15  F019         	call	_PHYSetShortRAMAddr
  4494                           
  4495                           ;drv_mrf_miwi_24j40.c: 1231: PHYSetShortRAMAddr((0x6D), 0x00);
  4496  00221A  6A17               	clrf	PHYSetShortRAMAddr@value,c
  4497  00221C  0E6D               	movlw	109
  4498  00221E  EC15  F019         	call	_PHYSetShortRAMAddr
  4499                           
  4500                           ;drv_mrf_miwi_24j40.c: 1252: }
  4501                           ;drv_mrf_miwi_24j40.c: 1253: break;
  4502  002222  0C01               	retlw	1
  4503  002224                     l11678:
  4504  002224  0100               	movlb	0	; () banked
  4505  002226  51AF               	movf	MiMAC_PowerState@PowerState& (0+255),w,b
  4506                           
  4507                           ; Switch size 1, requested type "speed"
  4508                           ; Number of cases is 2, Range of values is 0 to 255
  4509                           ; switch strategies available:
  4510                           ; Name         Instructions Cycles
  4511                           ; simple_byte            7     4 (average)
  4512                           ;	Chosen strategy is simple_byte
  4513  002228  E101 D778          	bz	l185
  4514  00222C  0AFF               	xorlw	255	; case 255
  4515  00222E  A4D8               	btfss	status,2,c
  4516  002230  0C00               	retlw	0
  4517  002232  D78A               	goto	l187
  4518  002234                     __end_of_MiMAC_PowerState:
  4519                           	opt stack 0
  4520                           tblptru	equ	0xFF8
  4521                           tblptrh	equ	0xFF7
  4522                           tblptrl	equ	0xFF6
  4523                           tablat	equ	0xFF5
  4524                           prodh	equ	0xFF4
  4525                           prodl	equ	0xFF3
  4526                           intcon	equ	0xFF2
  4527                           intcon2	equ	0xFF1
  4528                           postinc0	equ	0xFEE
  4529                           wreg	equ	0xFE8
  4530                           indf1	equ	0xFE7
  4531                           postdec1	equ	0xFE5
  4532                           fsr1h	equ	0xFE2
  4533                           fsr1l	equ	0xFE1
  4534                           indf2	equ	0xFDF
  4535                           fsr2h	equ	0xFDA
  4536                           fsr2l	equ	0xFD9
  4537                           status	equ	0xFD8
  4538                           
  4539 ;; *************** function _CheckForData *****************
  4540 ;; Defined at:
  4541 ;;		line 1399 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  firstuint8_t    1   44[BANK0 ] unsigned char 
  4546 ;;  tmpTxData       1   43[BANK0 ] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      unsigned char 
  4549 ;; Registers used:
  4550 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : E/1
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4557 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4559 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4560 ;;Total ram usage:        2 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    9
  4563 ;; This function calls:
  4564 ;;		_MiWi_TickGet
  4565 ;;		_SendPacket
  4566 ;; This function is called by:
  4567 ;;		_MiApp_TransceiverPowerState
  4568 ;;		_run_star_demo
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text11
  4573  002BD4                     __ptext11:
  4574                           	opt stack 0
  4575  002BD4                     _CheckForData:
  4576                           	opt stack 18
  4577                           
  4578                           ;miwi_p2p.c: 1401: uint8_t tmpTxData = TxData;
  4579                           
  4580                           ;incstack = 0
  4581  002BD4  C095  F0DA         	movff	_TxData,CheckForData@tmpTxData
  4582                           
  4583                           ;miwi_p2p.c: 1402: uint8_t firstuint8_t = TxBuffer[0];
  4584  002BD8  C18E  F0DB         	movff	_TxBuffer,CheckForData@firstuint8_t
  4585                           
  4586                           ;miwi_p2p.c: 1404: {TxData = 0;};
  4587  002BDC  0100               	movlb	0	; () banked
  4588  002BDE  6B95               	clrf	_TxData& (0+255),b
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;miwi_p2p.c: 1405: TxBuffer[TxData++] = 0x04;
  4592  002BE0  0E8E               	movlw	low _TxBuffer
  4593  002BE2  2595               	addwf	_TxData& (0+255),w,b
  4594  002BE4  6ED9               	movwf	fsr2l,c
  4595  002BE6  6ADA               	clrf	fsr2h,c
  4596  002BE8  0E01               	movlw	high _TxBuffer
  4597  002BEA  22DA               	addwfc	fsr2h,f,c
  4598  002BEC  0E04               	movlw	4
  4599  002BEE  6EDF               	movwf	indf2,c
  4600                           
  4601                           ; BSR set to: 0
  4602  002BF0  2B95               	incf	_TxData& (0+255),f,b
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;miwi_p2p.c: 1425: if( SendPacket(0, myPANID, ConnectionTable[0].Address, 1, 0) )
  4606  002BF2  C09B  F0CA         	movff	_myPANID,SendPacket@DestinationPANID
  4607  002BF6  C09C  F0CB         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  4608  002BFA  0EA4               	movlw	low (_ConnectionTable+4)
  4609  002BFC  6FCC               	movwf	SendPacket@DestinationAddress& (0+255),b
  4610  002BFE  0E02               	movlw	high (_ConnectionTable+4)
  4611  002C00  6FCD               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  4612  002C02  0E01               	movlw	1
  4613  002C04  6FCE               	movwf	SendPacket@isCommand& (0+255),b
  4614  002C06  0E00               	movlw	0
  4615  002C08  6BCF               	clrf	SendPacket@SecurityEnabled& (0+255),b
  4616  002C0A  EC54  F012         	call	_SendPacket
  4617  002C0E  0900               	iorlw	0
  4618  002C10  E010               	bz	l553
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;miwi_p2p.c: 1434: {
  4622                           ;miwi_p2p.c: 1435: P2PStatus.bits.DataRequesting = 1;
  4623  002C12  8592               	bsf	_P2PStatus& (0+255),2,b	;volatile
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;miwi_p2p.c: 1439: DataRequestTimer = MiWi_TickGet();
  4627  002C14  EC19  F017         	call	_MiWi_TickGet	;wreg free
  4628  002C18  C016  F06A         	movff	?_MiWi_TickGet,_DataRequestTimer
  4629  002C1C  C017  F06B         	movff	?_MiWi_TickGet+1,_DataRequestTimer+1
  4630  002C20  C018  F06C         	movff	?_MiWi_TickGet+2,_DataRequestTimer+2
  4631  002C24  C019  F06D         	movff	?_MiWi_TickGet+3,_DataRequestTimer+3
  4632                           
  4633                           ;miwi_p2p.c: 1440: TxBuffer[0] = firstuint8_t;
  4634  002C28  C0DB  F18E         	movff	CheckForData@firstuint8_t,_TxBuffer
  4635                           
  4636                           ;miwi_p2p.c: 1441: TxData = tmpTxData;
  4637  002C2C  C0DA  F095         	movff	CheckForData@tmpTxData,_TxData
  4638                           
  4639                           ;miwi_p2p.c: 1455: return 1;
  4640  002C30  0C01               	retlw	1
  4641  002C32                     l553:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;miwi_p2p.c: 1456: }
  4645                           ;miwi_p2p.c: 1457: TxBuffer[0] = firstuint8_t;
  4646  002C32  C0DB  F18E         	movff	CheckForData@firstuint8_t,_TxBuffer
  4647                           
  4648                           ;miwi_p2p.c: 1458: TxData = tmpTxData;
  4649  002C36  C0DA  F095         	movff	CheckForData@tmpTxData,_TxData
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;miwi_p2p.c: 1462: return 0;
  4653  002C3A  0C00               	retlw	0	;funcret
  4654  002C3C                     __end_of_CheckForData:
  4655                           	opt stack 0
  4656                           tblptru	equ	0xFF8
  4657                           tblptrh	equ	0xFF7
  4658                           tblptrl	equ	0xFF6
  4659                           tablat	equ	0xFF5
  4660                           prodh	equ	0xFF4
  4661                           prodl	equ	0xFF3
  4662                           intcon	equ	0xFF2
  4663                           intcon2	equ	0xFF1
  4664                           postinc0	equ	0xFEE
  4665                           wreg	equ	0xFE8
  4666                           indf1	equ	0xFE7
  4667                           postdec1	equ	0xFE5
  4668                           fsr1h	equ	0xFE2
  4669                           fsr1l	equ	0xFE1
  4670                           indf2	equ	0xFDF
  4671                           fsr2h	equ	0xFDA
  4672                           fsr2l	equ	0xFD9
  4673                           status	equ	0xFD8
  4674                           
  4675 ;; *************** function _LCD_BacklightON *****************
  4676 ;; Defined at:
  4677 ;;		line 111 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;		None
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;		None
  4682 ;; Return value:  Size  Location     Type
  4683 ;;		None               void
  4684 ;; Registers used:
  4685 ;;		None
  4686 ;; Tracked objects:
  4687 ;;		On entry : F/0
  4688 ;;		On exit  : F/0
  4689 ;;		Unchanged: F/0
  4690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4695 ;;Total ram usage:        0 bytes
  4696 ;; Hardware stack levels used:    1
  4697 ;; Hardware stack levels required when called:    3
  4698 ;; This function calls:
  4699 ;;		Nothing
  4700 ;; This function is called by:
  4701 ;;		_run_star_demo
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text12
  4706  00343A                     __ptext12:
  4707                           	opt stack 0
  4708  00343A                     _LCD_BacklightON:
  4709                           	opt stack 25
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;lcd.c: 113: LATEbits.LATE1 = 1;
  4713                           
  4714                           ;incstack = 0
  4715  00343A  828D               	bsf	3981,1,c	;volatile
  4716                           
  4717                           ; BSR set to: 0
  4718  00343C  0012               	return		;funcret
  4719  00343E                     __end_of_LCD_BacklightON:
  4720                           	opt stack 0
  4721                           tblptru	equ	0xFF8
  4722                           tblptrh	equ	0xFF7
  4723                           tblptrl	equ	0xFF6
  4724                           tablat	equ	0xFF5
  4725                           prodh	equ	0xFF4
  4726                           prodl	equ	0xFF3
  4727                           intcon	equ	0xFF2
  4728                           intcon2	equ	0xFF1
  4729                           postinc0	equ	0xFEE
  4730                           wreg	equ	0xFE8
  4731                           indf1	equ	0xFE7
  4732                           postdec1	equ	0xFE5
  4733                           fsr1h	equ	0xFE2
  4734                           fsr1l	equ	0xFE1
  4735                           indf2	equ	0xFDF
  4736                           fsr2h	equ	0xFDA
  4737                           fsr2l	equ	0xFD9
  4738                           status	equ	0xFD8
  4739                           
  4740 ;; *************** function _LCD_BacklightOFF *****************
  4741 ;; Defined at:
  4742 ;;		line 116 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;		None
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;		None               void
  4749 ;; Registers used:
  4750 ;;		None
  4751 ;; Tracked objects:
  4752 ;;		On entry : F/0
  4753 ;;		On exit  : F/0
  4754 ;;		Unchanged: F/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4760 ;;Total ram usage:        0 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; Hardware stack levels required when called:    3
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_run_star_demo
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text13
  4771  00343E                     __ptext13:
  4772                           	opt stack 0
  4773  00343E                     _LCD_BacklightOFF:
  4774                           	opt stack 25
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;lcd.c: 118: LATEbits.LATE1 = 0;
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;incstack = 0
  4781  00343E  928D               	bcf	3981,1,c	;volatile
  4782                           
  4783                           ; BSR set to: 0
  4784  003440  0012               	return		;funcret
  4785  003442                     __end_of_LCD_BacklightOFF:
  4786                           	opt stack 0
  4787                           tblptru	equ	0xFF8
  4788                           tblptrh	equ	0xFF7
  4789                           tblptrl	equ	0xFF6
  4790                           tablat	equ	0xFF5
  4791                           prodh	equ	0xFF4
  4792                           prodl	equ	0xFF3
  4793                           intcon	equ	0xFF2
  4794                           intcon2	equ	0xFF1
  4795                           postinc0	equ	0xFEE
  4796                           wreg	equ	0xFE8
  4797                           indf1	equ	0xFE7
  4798                           postdec1	equ	0xFE5
  4799                           fsr1h	equ	0xFE2
  4800                           fsr1l	equ	0xFE1
  4801                           indf2	equ	0xFDF
  4802                           fsr2h	equ	0xFDA
  4803                           fsr2l	equ	0xFD9
  4804                           status	equ	0xFD8
  4805                           
  4806 ;; *************** function _DemoOutput_UpdateTxRx *****************
  4807 ;; Defined at:
  4808 ;;		line 188 in file "../src/demo_ouput.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  TxNum           1    wreg     unsigned char 
  4811 ;;  RxNum           1   20[BANK0 ] unsigned char 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;  TxNum           1   21[BANK0 ] unsigned char 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;		None               void
  4816 ;; Registers used:
  4817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : F/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4823 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4826 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4827 ;;Total ram usage:        2 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    7
  4830 ;; This function calls:
  4831 ;;		_LCDTRXCount
  4832 ;; This function is called by:
  4833 ;;		_run_star_demo
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text14
  4838  00340A                     __ptext14:
  4839                           	opt stack 0
  4840  00340A                     _DemoOutput_UpdateTxRx:
  4841                           	opt stack 21
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;incstack = 0
  4845                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  4846  00340A  6FC4               	movwf	DemoOutput_UpdateTxRx@TxNum& (0+255),b
  4847                           
  4848                           ;demo_ouput.c: 190: LCDTRXCount(TxNum, RxNum);
  4849  00340C  C0C3  F032         	movff	DemoOutput_UpdateTxRx@RxNum,LCDTRXCount@rxCount
  4850  003410  0100               	movlb	0	; () banked
  4851  003412  51C4               	movf	DemoOutput_UpdateTxRx@TxNum& (0+255),w,b
  4852  003414  EF84  F017         	goto	_LCDTRXCount
  4853  003418                     __end_of_DemoOutput_UpdateTxRx:
  4854                           	opt stack 0
  4855                           tblptru	equ	0xFF8
  4856                           tblptrh	equ	0xFF7
  4857                           tblptrl	equ	0xFF6
  4858                           tablat	equ	0xFF5
  4859                           prodh	equ	0xFF4
  4860                           prodl	equ	0xFF3
  4861                           intcon	equ	0xFF2
  4862                           intcon2	equ	0xFF1
  4863                           postinc0	equ	0xFEE
  4864                           wreg	equ	0xFE8
  4865                           indf1	equ	0xFE7
  4866                           postdec1	equ	0xFE5
  4867                           fsr1h	equ	0xFE2
  4868                           fsr1l	equ	0xFE1
  4869                           indf2	equ	0xFDF
  4870                           fsr2h	equ	0xFDA
  4871                           fsr2l	equ	0xFD9
  4872                           status	equ	0xFD8
  4873                           
  4874 ;; *************** function _LCDTRXCount *****************
  4875 ;; Defined at:
  4876 ;;		line 120 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  txCount         1    wreg     unsigned char 
  4879 ;;  rxCount         1   49[COMRAM] unsigned char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  txCount         1   19[BANK0 ] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;		None               void
  4884 ;; Registers used:
  4885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : F/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4891 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4894 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4895 ;;Total ram usage:        2 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    6
  4898 ;; This function calls:
  4899 ;;		_LCD_Erase
  4900 ;;		_LCD_Update
  4901 ;;		_sprintf
  4902 ;; This function is called by:
  4903 ;;		_DemoOutput_UpdateTxRx
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text15
  4908  002F08                     __ptext15:
  4909                           	opt stack 0
  4910  002F08                     _LCDTRXCount:
  4911                           	opt stack 21
  4912                           
  4913                           ;incstack = 0
  4914                           ;LCDTRXCount@txCount stored from wreg
  4915  002F08  6FC2               	movwf	LCDTRXCount@txCount& (0+255),b
  4916                           
  4917                           ;lcd.c: 123: LCD_Erase();
  4918  002F0A  EC50  F019         	call	_LCD_Erase	;wreg free
  4919                           
  4920                           ;lcd.c: 124: sprintf((char *)LCDText, (char*)"TX:%3d , RX:%3d", txCount , rxCount);
  4921  002F0E  0EB6               	movlw	low _LCDText
  4922  002F10  6E22               	movwf	sprintf@sp,c
  4923  002F12  0E01               	movlw	high _LCDText
  4924  002F14  6E23               	movwf	sprintf@sp+1,c
  4925  002F16  0E81               	movlw	low STR_14
  4926  002F18  6E24               	movwf	sprintf@f,c
  4927  002F1A  0EFF               	movlw	high STR_14
  4928  002F1C  6E25               	movwf	sprintf@f+1,c
  4929  002F1E  C0C2  F026         	movff	LCDTRXCount@txCount,?_sprintf+4
  4930  002F22  6A27               	clrf	?_sprintf+5,c
  4931  002F24  C032  F028         	movff	LCDTRXCount@rxCount,?_sprintf+6
  4932  002F28  6A29               	clrf	?_sprintf+7,c
  4933  002F2A  ECC8  F000         	call	_sprintf	;wreg free
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;lcd.c: 125: sprintf((char *)&(LCDText[16]), (char*)"Message Count");
  4937  002F2E  0EC6               	movlw	low (_LCDText+16)
  4938  002F30  6E22               	movwf	sprintf@sp,c
  4939  002F32  0E01               	movlw	high (_LCDText+16)
  4940  002F34  6E23               	movwf	sprintf@sp+1,c
  4941  002F36  0E91               	movlw	low STR_15
  4942  002F38  6E24               	movwf	sprintf@f,c
  4943  002F3A  0EFF               	movlw	high STR_15
  4944  002F3C  6E25               	movwf	sprintf@f+1,c
  4945  002F3E  ECC8  F000         	call	_sprintf	;wreg free
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;lcd.c: 126: LCD_Update();
  4949  002F42  EF74  F015         	goto	_LCD_Update	;wreg free
  4950  002F46                     __end_of_LCDTRXCount:
  4951                           	opt stack 0
  4952                           tblptru	equ	0xFF8
  4953                           tblptrh	equ	0xFF7
  4954                           tblptrl	equ	0xFF6
  4955                           tablat	equ	0xFF5
  4956                           prodh	equ	0xFF4
  4957                           prodl	equ	0xFF3
  4958                           intcon	equ	0xFF2
  4959                           intcon2	equ	0xFF1
  4960                           postinc0	equ	0xFEE
  4961                           wreg	equ	0xFE8
  4962                           indf1	equ	0xFE7
  4963                           postdec1	equ	0xFE5
  4964                           fsr1h	equ	0xFE2
  4965                           fsr1l	equ	0xFE1
  4966                           indf2	equ	0xFDF
  4967                           fsr2h	equ	0xFDA
  4968                           fsr2l	equ	0xFD9
  4969                           status	equ	0xFD8
  4970                           
  4971 ;; *************** function _ButtonPressed *****************
  4972 ;; Defined at:
  4973 ;;		line 260 in file "../src/demo_ouput.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  t               4   35[COMRAM] struct _MIWI_TICK
  4978 ;;  tickDifferen    4   31[COMRAM] struct _MIWI_TICK
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  1    wreg      unsigned char 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2, status,0, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4989 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4991 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4992 ;;Total ram usage:        8 bytes
  4993 ;; Hardware stack levels used:    1
  4994 ;; Hardware stack levels required when called:    4
  4995 ;; This function calls:
  4996 ;;		_MiWi_TickGet
  4997 ;; This function is called by:
  4998 ;;		_freezer_feature
  4999 ;;		_run_star_demo
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text16
  5004  0028EA                     __ptext16:
  5005                           	opt stack 0
  5006  0028EA                     _ButtonPressed:
  5007                           	opt stack 25
  5008                           
  5009                           ;demo_ouput.c: 262: MIWI_TICK tickDifference;
  5010                           ;demo_ouput.c: 264: if(PORTBbits.RB1 == 0)
  5011                           
  5012                           ;incstack = 0
  5013  0028EA  B281               	btfsc	3969,1,c	;volatile
  5014  0028EC  D010               	goto	l1112
  5015                           
  5016                           ;demo_ouput.c: 265: {
  5017                           ;demo_ouput.c: 267: if(PUSH_BUTTON_pressed == 0)
  5018  0028EE  0100               	movlb	0	; () banked
  5019  0028F0  5193               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  5020  0028F2  E13D               	bnz	l11992
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;demo_ouput.c: 268: {
  5024                           ;demo_ouput.c: 269: PUSH_BUTTON_pressed = 1;
  5025  0028F4  0E01               	movlw	1
  5026  0028F6  6F93               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;demo_ouput.c: 270: PUSH_BUTTON_press_time = MiWi_TickGet();
  5030  0028F8  EC19  F017         	call	_MiWi_TickGet	;wreg free
  5031  0028FC  C016  F06E         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  5032  002900  C017  F06F         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  5033  002904  C018  F070         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  5034  002908  C019  F071         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  5035                           
  5036                           ;demo_ouput.c: 271: return 1;
  5037  00290C  0C01               	retlw	1
  5038  00290E                     l1112:
  5039                           
  5040                           ;demo_ouput.c: 274: else if(PORTBbits.RB2 == 0)
  5041  00290E  B481               	btfsc	3969,2,c	;volatile
  5042  002910  D010               	goto	l11984
  5043                           
  5044                           ;demo_ouput.c: 275: {
  5045                           ;demo_ouput.c: 277: if(PUSH_BUTTON_pressed == 0)
  5046  002912  0100               	movlb	0	; () banked
  5047  002914  5193               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  5048  002916  E12B               	bnz	l11992
  5049                           
  5050                           ; BSR set to: 0
  5051                           ;demo_ouput.c: 278: {
  5052                           ;demo_ouput.c: 279: PUSH_BUTTON_pressed = 1;
  5053  002918  0E01               	movlw	1
  5054  00291A  6F93               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;demo_ouput.c: 280: PUSH_BUTTON_press_time = MiWi_TickGet();
  5058  00291C  EC19  F017         	call	_MiWi_TickGet	;wreg free
  5059  002920  C016  F06E         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  5060  002924  C017  F06F         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  5061  002928  C018  F070         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  5062  00292C  C019  F071         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  5063                           
  5064                           ;demo_ouput.c: 281: return 2;
  5065  002930  0C02               	retlw	2
  5066  002932                     l11984:
  5067                           
  5068                           ;demo_ouput.c: 284: else
  5069                           ;demo_ouput.c: 285: {
  5070                           ;demo_ouput.c: 287: MIWI_TICK t = MiWi_TickGet();
  5071  002932  EC19  F017         	call	_MiWi_TickGet	;wreg free
  5072  002936  C016  F024         	movff	?_MiWi_TickGet,ButtonPressed@t
  5073  00293A  C017  F025         	movff	?_MiWi_TickGet+1,ButtonPressed@t+1
  5074  00293E  C018  F026         	movff	?_MiWi_TickGet+2,ButtonPressed@t+2
  5075  002942  C019  F027         	movff	?_MiWi_TickGet+3,ButtonPressed@t+3
  5076                           
  5077                           ;demo_ouput.c: 290: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  5078  002946  0100               	movlb	0	; () banked
  5079  002948  516E               	movf	_PUSH_BUTTON_press_time& (0+255),w,b
  5080  00294A  5C24               	subwf	ButtonPressed@t,w,c
  5081  00294C  6E20               	movwf	ButtonPressed@tickDifference,c
  5082  00294E  516F               	movf	(_PUSH_BUTTON_press_time+1)& (0+255),w,b
  5083  002950  5825               	subwfb	ButtonPressed@t+1,w,c
  5084  002952  6E21               	movwf	ButtonPressed@tickDifference+1,c
  5085  002954  5170               	movf	(_PUSH_BUTTON_press_time+2)& (0+255),w,b
  5086  002956  5826               	subwfb	ButtonPressed@t+2,w,c
  5087  002958  6E22               	movwf	ButtonPressed@tickDifference+2,c
  5088  00295A  5171               	movf	(_PUSH_BUTTON_press_time+3)& (0+255),w,b
  5089  00295C  5827               	subwfb	ButtonPressed@t+3,w,c
  5090  00295E  6E23               	movwf	ButtonPressed@tickDifference+3,c
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;demo_ouput.c: 293: if(tickDifference.Val > 0x00003FFF)
  5094  002960  5023               	movf	ButtonPressed@tickDifference+3,w,c
  5095  002962  1022               	iorwf	ButtonPressed@tickDifference+2,w,c
  5096  002964  E103               	bnz	u11820
  5097  002966  0E40               	movlw	64
  5098  002968  5C21               	subwf	ButtonPressed@tickDifference+1,w,c
  5099  00296A  E301               	bnc	l11992
  5100  00296C                     u11820:
  5101                           
  5102                           ; BSR set to: 0
  5103                           ;demo_ouput.c: 294: {
  5104                           ;demo_ouput.c: 295: PUSH_BUTTON_pressed = 0;
  5105  00296C  6B93               	clrf	_PUSH_BUTTON_pressed& (0+255),b
  5106  00296E                     l11992:
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;demo_ouput.c: 296: }
  5110                           ;demo_ouput.c: 297: }
  5111                           ;demo_ouput.c: 299: return 0;
  5112  00296E  0C00               	retlw	0	;funcret
  5113  002970                     __end_of_ButtonPressed:
  5114                           	opt stack 0
  5115                           tblptru	equ	0xFF8
  5116                           tblptrh	equ	0xFF7
  5117                           tblptrl	equ	0xFF6
  5118                           tablat	equ	0xFF5
  5119                           prodh	equ	0xFF4
  5120                           prodl	equ	0xFF3
  5121                           intcon	equ	0xFF2
  5122                           intcon2	equ	0xFF1
  5123                           postinc0	equ	0xFEE
  5124                           wreg	equ	0xFE8
  5125                           indf1	equ	0xFE7
  5126                           postdec1	equ	0xFE5
  5127                           fsr1h	equ	0xFE2
  5128                           fsr1l	equ	0xFE1
  5129                           indf2	equ	0xFDF
  5130                           fsr2h	equ	0xFDA
  5131                           fsr2l	equ	0xFD9
  5132                           status	equ	0xFD8
  5133                           
  5134 ;; *************** function _Initialize_Demo *****************
  5135 ;; Defined at:
  5136 ;;		line 97 in file "../src/task.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  freezer_enab    1    wreg     unsigned char 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  freezer_enab    1   74[BANK0 ] unsigned char 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;                  1    wreg      unsigned char 
  5143 ;; Registers used:
  5144 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5145 ;; Tracked objects:
  5146 ;;		On entry : F/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5151 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5153 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5154 ;;Total ram usage:        1 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:   15
  5157 ;; This function calls:
  5158 ;;		_DemoOutput_Channel
  5159 ;;		_DemoOutput_ChannelError
  5160 ;;		_DemoOutput_Instruction
  5161 ;;		_EEPROM_Write
  5162 ;;		_MiApp_ConnectionMode
  5163 ;;		_MiApp_EstablishConnection
  5164 ;;		_MiApp_ProtocolInit
  5165 ;;		_MiApp_SetChannel
  5166 ;;		_Read_MAC_Address
  5167 ;; This function is called by:
  5168 ;;		_main
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text17
  5173  002B60                     __ptext17:
  5174                           	opt stack 0
  5175  002B60                     _Initialize_Demo:
  5176                           	opt stack 15
  5177                           
  5178                           ;incstack = 0
  5179                           ;Initialize_Demo@freezer_enable stored from wreg
  5180  002B60  6FF9               	movwf	Initialize_Demo@freezer_enable& (0+255),b
  5181                           
  5182                           ;task.c: 100: Read_MAC_Address(myLongAddress);
  5183  002B62  0ED7               	movlw	low _myLongAddress
  5184  002B64  6E1B               	movwf	Read_MAC_Address@myAddress,c
  5185  002B66  0E01               	movlw	high _myLongAddress
  5186  002B68  6E1C               	movwf	Read_MAC_Address@myAddress+1,c
  5187  002B6A  ECB8  F014         	call	_Read_MAC_Address	;wreg free
  5188                           
  5189                           ;task.c: 103: if (freezer_enable)
  5190  002B6E  0100               	movlb	0	; () banked
  5191  002B70  51F9               	movf	Initialize_Demo@freezer_enable& (0+255),w,b
  5192  002B72  E003               	bz	l1219
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;task.c: 104: {
  5196                           ;task.c: 105: MiApp_ProtocolInit(1);
  5197  002B74  0E01               	movlw	1
  5198  002B76  EF67  F00E         	goto	_MiApp_ProtocolInit
  5199  002B7A                     l1219:
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;task.c: 107: else
  5203                           ;task.c: 108: {
  5204                           ;task.c: 109: LATAbits.LATA6 = 0;
  5205  002B7A  9C89               	bcf	3977,6,c	;volatile
  5206                           
  5207                           ;task.c: 110: LATAbits.LATA7 = 0;
  5208  002B7C  9E89               	bcf	3977,7,c	;volatile
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;task.c: 122: MiApp_ProtocolInit(0);
  5212  002B7E  0E00               	movlw	0
  5213  002B80  EC67  F00E         	call	_MiApp_ProtocolInit
  5214  002B84  0E19               	movlw	25
  5215  002B86  EC01  F019         	call	_MiApp_SetChannel
  5216  002B8A  0900               	iorlw	0
  5217  002B8C  E101               	bnz	l12470
  5218  002B8E  0C19               	retlw	25
  5219  002B90                     l12470:
  5220                           
  5221                           ;task.c: 133: }
  5222                           ;task.c: 144: MiApp_ConnectionMode(0x00);
  5223  002B90  0E00               	movlw	0
  5224  002B92  EC37  F018         	call	_MiApp_ConnectionMode
  5225  002B96  0E00               	movlw	0
  5226  002B98  0100               	movlb	0	; () banked
  5227  002B9A  6FC6               	movwf	DemoOutput_Channel@Step& (0+255),b
  5228  002B9C  0E19               	movlw	25
  5229  002B9E  ECC2  F017         	call	_DemoOutput_Channel
  5230                           
  5231                           ;task.c: 159: i = MiApp_EstablishConnection(0xFF , 0x00);
  5232  002BA2  0100               	movlb	0	; () banked
  5233  002BA4  6BF4               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  5234  002BA6  EC36  F00F         	call	_MiApp_EstablishConnection
  5235  002BAA  6E40               	movwf	_i,c
  5236                           
  5237                           ; BSR set to: 0
  5238                           ;task.c: 164: if( i != 0xFF )
  5239  002BAC  2840               	incf	_i,w,c
  5240  002BAE  E006               	bz	l12482
  5241                           
  5242                           ; BSR set to: 0
  5243  002BB0  0E01               	movlw	1
  5244  002BB2  6FC6               	movwf	DemoOutput_Channel@Step& (0+255),b
  5245  002BB4  0E19               	movlw	25
  5246  002BB6  ECC2  F017         	call	_DemoOutput_Channel
  5247                           
  5248                           ;task.c: 167: role = 0;
  5249  002BBA  6A49               	clrf	_role,c
  5250  002BBC                     l12482:
  5251                           
  5252                           ;task.c: 168: }
  5253                           ;task.c: 170: EEPROM_Write((uint8_t *)&role, 0xB8, 1);
  5254  002BBC  0E49               	movlw	low _role
  5255  002BBE  6E17               	movwf	EEPROM_Write@dest,c
  5256  002BC0  6A18               	clrf	EEPROM_Write@dest+1,c
  5257  002BC2  0EB8               	movlw	184
  5258  002BC4  6E19               	movwf	EEPROM_Write@addr,c
  5259  002BC6  0E01               	movlw	1
  5260  002BC8  6E1A               	movwf	EEPROM_Write@count,c
  5261  002BCA  ECF8  F014         	call	_EEPROM_Write	;wreg free
  5262                           
  5263                           ;task.c: 187: LATAbits.LATA6 = 1;
  5264  002BCE  8C89               	bsf	3977,6,c	;volatile
  5265                           
  5266                           ;task.c: 188: DemoOutput_Instruction();
  5267  002BD0  EFDC  F019         	goto	_DemoOutput_Instruction	;wreg free
  5268  002BD4                     __end_of_Initialize_Demo:
  5269                           	opt stack 0
  5270                           tblptru	equ	0xFF8
  5271                           tblptrh	equ	0xFF7
  5272                           tblptrl	equ	0xFF6
  5273                           tablat	equ	0xFF5
  5274                           prodh	equ	0xFF4
  5275                           prodl	equ	0xFF3
  5276                           intcon	equ	0xFF2
  5277                           intcon2	equ	0xFF1
  5278                           postinc0	equ	0xFEE
  5279                           wreg	equ	0xFE8
  5280                           indf1	equ	0xFE7
  5281                           postdec1	equ	0xFE5
  5282                           fsr1h	equ	0xFE2
  5283                           fsr1l	equ	0xFE1
  5284                           indf2	equ	0xFDF
  5285                           fsr2h	equ	0xFDA
  5286                           fsr2l	equ	0xFD9
  5287                           status	equ	0xFD8
  5288                           
  5289 ;; *************** function _Read_MAC_Address *****************
  5290 ;; Defined at:
  5291 ;;		line 83 in file "../src/system_config/miwikit_pic18f46j50_24j40/eeprom.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  myAddress       2   26[COMRAM] PTR unsigned char 
  5294 ;;		 -> myLongAddress(8), 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  i               1   30[COMRAM] unsigned char 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;		None               void
  5299 ;; Registers used:
  5300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;Total ram usage:        5 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    6
  5313 ;; This function calls:
  5314 ;;		_EEPROM_Read
  5315 ;; This function is called by:
  5316 ;;		_Initialize_Demo
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text18
  5321  002970                     __ptext18:
  5322                           	opt stack 0
  5323  002970                     _Read_MAC_Address:
  5324                           	opt stack 23
  5325                           
  5326                           ;eeprom.c: 88: {
  5327                           ;eeprom.c: 89: for(i = 0; i < 3; i++)
  5328                           
  5329                           ;incstack = 0
  5330  002970  6A1F               	clrf	Read_MAC_Address@i,c
  5331  002972                     l12074:
  5332                           
  5333                           ;eeprom.c: 90: {
  5334                           ;eeprom.c: 91: EEPROM_Read(&(myAddress[8-1-i]), 0xFA+i, 1);
  5335  002972  501F               	movf	Read_MAC_Address@i,w,c
  5336  002974  5C1B               	subwf	Read_MAC_Address@myAddress,w,c
  5337  002976  6E1D               	movwf	??_Read_MAC_Address& (0+255),c
  5338  002978  0E00               	movlw	0
  5339  00297A  581C               	subwfb	Read_MAC_Address@myAddress+1,w,c
  5340  00297C  6E1E               	movwf	(??_Read_MAC_Address+1)& (0+255),c
  5341  00297E  0E07               	movlw	7
  5342  002980  241D               	addwf	??_Read_MAC_Address,w,c
  5343  002982  6E17               	movwf	EEPROM_Read@dest,c
  5344  002984  0E00               	movlw	0
  5345  002986  201E               	addwfc	??_Read_MAC_Address+1,w,c
  5346  002988  6E18               	movwf	EEPROM_Read@dest+1,c
  5347  00298A  501F               	movf	Read_MAC_Address@i,w,c
  5348  00298C  0FFA               	addlw	250
  5349  00298E  6E19               	movwf	EEPROM_Read@addr,c
  5350  002990  0E01               	movlw	1
  5351  002992  6E1A               	movwf	EEPROM_Read@count,c
  5352  002994  EC80  F018         	call	_EEPROM_Read	;wreg free
  5353  002998  2A1F               	incf	Read_MAC_Address@i,f,c
  5354  00299A  0E02               	movlw	2
  5355  00299C  641F               	cpfsgt	Read_MAC_Address@i,c
  5356  00299E  D7E9               	goto	l12074
  5357                           
  5358                           ;eeprom.c: 95: {
  5359                           ;eeprom.c: 96: myAddress[4] = 0xFF;
  5360  0029A0  EE20 F004          	lfsr	2,4
  5361  0029A4  501B               	movf	Read_MAC_Address@myAddress,w,c
  5362  0029A6  26D9               	addwf	fsr2l,f,c
  5363  0029A8  501C               	movf	Read_MAC_Address@myAddress+1,w,c
  5364  0029AA  22DA               	addwfc	fsr2h,f,c
  5365  0029AC  68DF               	setf	indf2,c
  5366                           
  5367                           ;eeprom.c: 98: }
  5368                           ;eeprom.c: 99: myAddress[3] = 0xFE;
  5369  0029AE  EE20 F003          	lfsr	2,3
  5370  0029B2  501B               	movf	Read_MAC_Address@myAddress,w,c
  5371  0029B4  26D9               	addwf	fsr2l,f,c
  5372  0029B6  501C               	movf	Read_MAC_Address@myAddress+1,w,c
  5373  0029B8  22DA               	addwfc	fsr2h,f,c
  5374  0029BA  0EFE               	movlw	254
  5375  0029BC  6EDF               	movwf	indf2,c
  5376                           
  5377                           ;eeprom.c: 101: for(i = 0; i < 3; i++)
  5378  0029BE  6A1F               	clrf	Read_MAC_Address@i,c
  5379  0029C0                     l12088:
  5380                           
  5381                           ;eeprom.c: 102: {
  5382                           ;eeprom.c: 103: EEPROM_Read(&(myAddress[2-i]), 0xFA+3+i, 1);
  5383  0029C0  501F               	movf	Read_MAC_Address@i,w,c
  5384  0029C2  5C1B               	subwf	Read_MAC_Address@myAddress,w,c
  5385  0029C4  6E1D               	movwf	??_Read_MAC_Address& (0+255),c
  5386  0029C6  0E00               	movlw	0
  5387  0029C8  581C               	subwfb	Read_MAC_Address@myAddress+1,w,c
  5388  0029CA  6E1E               	movwf	(??_Read_MAC_Address+1)& (0+255),c
  5389  0029CC  0E02               	movlw	2
  5390  0029CE  241D               	addwf	??_Read_MAC_Address,w,c
  5391  0029D0  6E17               	movwf	EEPROM_Read@dest,c
  5392  0029D2  0E00               	movlw	0
  5393  0029D4  201E               	addwfc	??_Read_MAC_Address+1,w,c
  5394  0029D6  6E18               	movwf	EEPROM_Read@dest+1,c
  5395  0029D8  501F               	movf	Read_MAC_Address@i,w,c
  5396  0029DA  0FFD               	addlw	253
  5397  0029DC  6E19               	movwf	EEPROM_Read@addr,c
  5398  0029DE  0E01               	movlw	1
  5399  0029E0  6E1A               	movwf	EEPROM_Read@count,c
  5400  0029E2  EC80  F018         	call	_EEPROM_Read	;wreg free
  5401  0029E6  2A1F               	incf	Read_MAC_Address@i,f,c
  5402  0029E8  0E02               	movlw	2
  5403  0029EA  641F               	cpfsgt	Read_MAC_Address@i,c
  5404  0029EC  D7E9               	goto	l12088
  5405  0029EE  0C02               	retlw	2
  5406  0029F0                     __end_of_Read_MAC_Address:
  5407                           	opt stack 0
  5408                           tblptru	equ	0xFF8
  5409                           tblptrh	equ	0xFF7
  5410                           tblptrl	equ	0xFF6
  5411                           tablat	equ	0xFF5
  5412                           prodh	equ	0xFF4
  5413                           prodl	equ	0xFF3
  5414                           intcon	equ	0xFF2
  5415                           intcon2	equ	0xFF1
  5416                           postinc0	equ	0xFEE
  5417                           wreg	equ	0xFE8
  5418                           indf1	equ	0xFE7
  5419                           postdec1	equ	0xFE5
  5420                           fsr1h	equ	0xFE2
  5421                           fsr1l	equ	0xFE1
  5422                           indf2	equ	0xFDF
  5423                           fsr2h	equ	0xFDA
  5424                           fsr2l	equ	0xFD9
  5425                           status	equ	0xFD8
  5426                           
  5427 ;; *************** function _MiApp_ProtocolInit *****************
  5428 ;; Defined at:
  5429 ;;		line 1130 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  bNetworkFree    1    wreg     unsigned char 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  bNetworkFree    1    6[BANK0 ] unsigned char 
  5434 ;;  tmp             2    4[BANK0 ] unsigned int 
  5435 ;;  initValue       3    7[BANK0 ] struct .
  5436 ;;  i               1   10[BANK0 ] unsigned char 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  1    wreg      unsigned char 
  5439 ;; Registers used:
  5440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5441 ;; Tracked objects:
  5442 ;;		On entry : F/0
  5443 ;;		On exit  : F/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5447 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5449 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5450 ;;Total ram usage:        7 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; Hardware stack levels required when called:    8
  5453 ;; This function calls:
  5454 ;;		_EEPROM_Read
  5455 ;;		_EEPROM_Write
  5456 ;;		_MiApp_SetChannel
  5457 ;;		_MiMAC_Init
  5458 ;;		_MiMAC_SetAltAddress
  5459 ;;		_NVMInit
  5460 ;; This function is called by:
  5461 ;;		_Initialize_Demo
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text19
  5466  001CCE                     __ptext19:
  5467                           	opt stack 0
  5468  001CCE                     _MiApp_ProtocolInit:
  5469                           	opt stack 21
  5470                           
  5471                           ;incstack = 0
  5472                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  5473  001CCE  6FB5               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
  5474                           
  5475                           ;miwi_p2p.c: 1132: uint8_t i;
  5476                           ;miwi_p2p.c: 1134: MACINIT_PARAM initValue;
  5477                           ;miwi_p2p.c: 1137: NVMInit();
  5478  001CD0  ECEA  F013         	call	_NVMInit	;wreg free
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;miwi_p2p.c: 1141: P2PStatus.Val = 0;
  5482  001CD4  6B92               	clrf	_P2PStatus& (0+255),b	;volatile
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;miwi_p2p.c: 1142: if (!bNetworkFreezer)
  5486  001CD6  51B5               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5487  001CD8  E129               	bnz	l525
  5488                           
  5489                           ; BSR set to: 0
  5490                           ;miwi_p2p.c: 1143: {
  5491                           ;miwi_p2p.c: 1144: for(i = 0; i < 40; i++)
  5492  001CDA  6BB9               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5493  001CDC                     l12008:
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;miwi_p2p.c: 1145: {
  5497                           ;miwi_p2p.c: 1146: ConnectionTable[i].status.Val = 0;
  5498  001CDC  51B9               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5499  001CDE  0D0E               	mullw	14
  5500  001CE0  0EAC               	movlw	low (_ConnectionTable+12)
  5501  001CE2  24F3               	addwf	prodl,w,c
  5502  001CE4  6ED9               	movwf	fsr2l,c
  5503  001CE6  0E02               	movlw	high (_ConnectionTable+12)
  5504  001CE8  20F4               	addwfc	prodh,w,c
  5505  001CEA  6EDA               	movwf	fsr2h,c
  5506  001CEC  6ADF               	clrf	indf2,c
  5507                           
  5508                           ;miwi_p2p.c: 1147: ConnectionTable[i].Address[0] = 0x00;
  5509  001CEE  51B9               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5510  001CF0  0D0E               	mullw	14
  5511  001CF2  0EA4               	movlw	low (_ConnectionTable+4)
  5512  001CF4  24F3               	addwf	prodl,w,c
  5513  001CF6  6ED9               	movwf	fsr2l,c
  5514  001CF8  0E02               	movlw	high (_ConnectionTable+4)
  5515  001CFA  20F4               	addwfc	prodh,w,c
  5516  001CFC  6EDA               	movwf	fsr2h,c
  5517  001CFE  6ADF               	clrf	indf2,c
  5518                           
  5519                           ;miwi_p2p.c: 1148: ConnectionTable[i].Address[1] = 0x00;
  5520  001D00  51B9               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5521  001D02  0D0E               	mullw	14
  5522  001D04  0EA5               	movlw	low (_ConnectionTable+5)
  5523  001D06  24F3               	addwf	prodl,w,c
  5524  001D08  6ED9               	movwf	fsr2l,c
  5525  001D0A  0E02               	movlw	high (_ConnectionTable+5)
  5526  001D0C  20F4               	addwfc	prodh,w,c
  5527  001D0E  6EDA               	movwf	fsr2h,c
  5528  001D10  6ADF               	clrf	indf2,c
  5529                           
  5530                           ;miwi_p2p.c: 1149: ConnectionTable[i].Address[2] = 0x00;
  5531  001D12  51B9               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5532  001D14  0D0E               	mullw	14
  5533  001D16  0EA6               	movlw	low (_ConnectionTable+6)
  5534  001D18  24F3               	addwf	prodl,w,c
  5535  001D1A  6ED9               	movwf	fsr2l,c
  5536  001D1C  0E02               	movlw	high (_ConnectionTable+6)
  5537  001D1E  20F4               	addwfc	prodh,w,c
  5538  001D20  6EDA               	movwf	fsr2h,c
  5539  001D22  6ADF               	clrf	indf2,c
  5540                           
  5541                           ; BSR set to: 0
  5542  001D24  2BB9               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5543                           
  5544                           ; BSR set to: 0
  5545  001D26  0E27               	movlw	39
  5546  001D28  65B9               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5547  001D2A  D7D8               	goto	l12008
  5548  001D2C                     l525:
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;miwi_p2p.c: 1154: }
  5552                           ;miwi_p2p.c: 1155: }
  5553                           ;miwi_p2p.c: 1157: TxData = 0;
  5554  001D2C  6B95               	clrf	_TxData& (0+255),b
  5555                           
  5556                           ;miwi_p2p.c: 1166: for (i=0;i<40;i++)
  5557  001D2E  6BB9               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5558  001D30                     l12018:
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;miwi_p2p.c: 1167: {
  5562  001D30  2BB9               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5563                           
  5564                           ; BSR set to: 0
  5565  001D32  0E27               	movlw	39
  5566  001D34  65B9               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5567  001D36  D7FC               	goto	l12018
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;miwi_p2p.c: 1170: }
  5571                           ;miwi_p2p.c: 1180: if( bNetworkFreezer )
  5572  001D38  51B5               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5573  001D3A  E045               	bz	l12032
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;miwi_p2p.c: 1181: {
  5577                           ;miwi_p2p.c: 1182: EEPROM_Read( (uint8_t *)&currentChannel, 0x02, 1);
  5578  001D3C  0EAD               	movlw	low _currentChannel
  5579  001D3E  6E17               	movwf	EEPROM_Read@dest,c
  5580  001D40  6A18               	clrf	EEPROM_Read@dest+1,c
  5581  001D42  0E02               	movlw	2
  5582  001D44  6E19               	movwf	EEPROM_Read@addr,c
  5583  001D46  0E01               	movlw	1
  5584  001D48  6E1A               	movwf	EEPROM_Read@count,c
  5585  001D4A  EC80  F018         	call	_EEPROM_Read	;wreg free
  5586                           
  5587                           ;miwi_p2p.c: 1183: if( currentChannel >= 32 )
  5588  001D4E  0E1F               	movlw	31
  5589  001D50  0100               	movlb	0	; () banked
  5590  001D52  65AD               	cpfsgt	_currentChannel& (0+255),b
  5591  001D54  D001               	goto	l12030
  5592  001D56  0C1F               	retlw	31
  5593  001D58                     l12030:
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;miwi_p2p.c: 1186: }
  5597                           ;miwi_p2p.c: 1189: EEPROM_Read( (uint8_t *)myPANID.v, 0x00, 2);
  5598  001D58  0E9B               	movlw	low _myPANID
  5599  001D5A  6E17               	movwf	EEPROM_Read@dest,c
  5600  001D5C  6A18               	clrf	EEPROM_Read@dest+1,c
  5601  001D5E  6A19               	clrf	EEPROM_Read@addr,c
  5602  001D60  0E02               	movlw	2
  5603  001D62  6E1A               	movwf	EEPROM_Read@count,c
  5604  001D64  EC80  F018         	call	_EEPROM_Read	;wreg free
  5605                           
  5606                           ;miwi_p2p.c: 1191: EEPROM_Read( (uint8_t *)&ConnMode,0x03, 1);
  5607  001D68  0EFD               	movlw	low _ConnMode
  5608  001D6A  6E17               	movwf	EEPROM_Read@dest,c
  5609  001D6C  6A18               	clrf	EEPROM_Read@dest+1,c
  5610  001D6E  0E03               	movlw	3
  5611  001D70  6E19               	movwf	EEPROM_Read@addr,c
  5612  001D72  0E01               	movlw	1
  5613  001D74  6E1A               	movwf	EEPROM_Read@count,c
  5614  001D76  EC80  F018         	call	_EEPROM_Read	;wreg free
  5615                           
  5616                           ;miwi_p2p.c: 1192: EEPROM_Read( (uint8_t *)ConnectionTable, 0x04, (uint16_t)40 * sizeof(
      +                          CONNECTION_ENTRY));
  5617  001D7A  0EA0               	movlw	low _ConnectionTable
  5618  001D7C  6E17               	movwf	EEPROM_Read@dest,c
  5619  001D7E  0E02               	movlw	high _ConnectionTable
  5620  001D80  6E18               	movwf	EEPROM_Read@dest+1,c
  5621  001D82  0E04               	movlw	4
  5622  001D84  6E19               	movwf	EEPROM_Read@addr,c
  5623  001D86  0E30               	movlw	48
  5624  001D88  6E1A               	movwf	EEPROM_Read@count,c
  5625  001D8A  EC80  F018         	call	_EEPROM_Read	;wreg free
  5626                           
  5627                           ;miwi_p2p.c: 1195: EEPROM_Read( (uint8_t *)&role, 0xB8, 1);
  5628  001D8E  0E49               	movlw	low _role
  5629  001D90  6E17               	movwf	EEPROM_Read@dest,c
  5630  001D92  6A18               	clrf	EEPROM_Read@dest+1,c
  5631  001D94  0EB8               	movlw	184
  5632  001D96  6E19               	movwf	EEPROM_Read@addr,c
  5633  001D98  0E01               	movlw	1
  5634  001D9A  6E1A               	movwf	EEPROM_Read@count,c
  5635  001D9C  EC80  F018         	call	_EEPROM_Read	;wreg free
  5636                           
  5637                           ;miwi_p2p.c: 1196: EEPROM_Read( (uint8_t *)&myConnectionIndex_in_PanCo, 0xBB, 1);
  5638  001DA0  0EAE               	movlw	low _myConnectionIndex_in_PanCo
  5639  001DA2  6E17               	movwf	EEPROM_Read@dest,c
  5640  001DA4  6A18               	clrf	EEPROM_Read@dest+1,c
  5641  001DA6  0EBB               	movlw	187
  5642  001DA8  6E19               	movwf	EEPROM_Read@addr,c
  5643  001DAA  0E01               	movlw	1
  5644  001DAC  6E1A               	movwf	EEPROM_Read@count,c
  5645  001DAE  EC80  F018         	call	_EEPROM_Read	;wreg free
  5646                           
  5647                           ;miwi_p2p.c: 1198: EEPROM_Read( (uint8_t *)&conn_size, 0xBA, 1);
  5648  001DB2  0E47               	movlw	low _conn_size
  5649  001DB4  6E17               	movwf	EEPROM_Read@dest,c
  5650  001DB6  6A18               	clrf	EEPROM_Read@dest+1,c
  5651  001DB8  0EBA               	movlw	186
  5652  001DBA  6E19               	movwf	EEPROM_Read@addr,c
  5653  001DBC  0E01               	movlw	1
  5654  001DBE  6E1A               	movwf	EEPROM_Read@count,c
  5655  001DC0  EC80  F018         	call	_EEPROM_Read	;wreg free
  5656                           
  5657                           ;miwi_p2p.c: 1210: }
  5658  001DC4  D028               	goto	l12042
  5659  001DC6                     l12032:
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;miwi_p2p.c: 1211: else
  5663                           ;miwi_p2p.c: 1212: {
  5664                           ;miwi_p2p.c: 1214: myPANID.Val = 0x1234;
  5665  001DC6  0E12               	movlw	18
  5666  001DC8  6F9C               	movwf	(_myPANID+1)& (0+255),b
  5667  001DCA  0E34               	movlw	52
  5668  001DCC  6F9B               	movwf	_myPANID& (0+255),b
  5669                           
  5670                           ; BSR set to: 0
  5671                           ;miwi_p2p.c: 1215: EEPROM_Write((uint8_t *)myPANID.v, 0x00, 2);
  5672  001DCE  0E9B               	movlw	low _myPANID
  5673  001DD0  6E17               	movwf	EEPROM_Write@dest,c
  5674  001DD2  6A18               	clrf	EEPROM_Write@dest+1,c
  5675  001DD4  6A19               	clrf	EEPROM_Write@addr,c
  5676  001DD6  0E02               	movlw	2
  5677  001DD8  6E1A               	movwf	EEPROM_Write@count,c
  5678  001DDA  ECF8  F014         	call	_EEPROM_Write	;wreg free
  5679                           
  5680                           ;miwi_p2p.c: 1217: EEPROM_Write((uint8_t *)&currentChannel, 0x02, 1);
  5681  001DDE  0EAD               	movlw	low _currentChannel
  5682  001DE0  6E17               	movwf	EEPROM_Write@dest,c
  5683  001DE2  6A18               	clrf	EEPROM_Write@dest+1,c
  5684  001DE4  0E02               	movlw	2
  5685  001DE6  6E19               	movwf	EEPROM_Write@addr,c
  5686  001DE8  0E01               	movlw	1
  5687  001DEA  6E1A               	movwf	EEPROM_Write@count,c
  5688  001DEC  ECF8  F014         	call	_EEPROM_Write	;wreg free
  5689                           
  5690                           ;miwi_p2p.c: 1218: EEPROM_Write((uint8_t *)&ConnMode, 0x03, 1);
  5691  001DF0  0EFD               	movlw	low _ConnMode
  5692  001DF2  6E17               	movwf	EEPROM_Write@dest,c
  5693  001DF4  6A18               	clrf	EEPROM_Write@dest+1,c
  5694  001DF6  0E03               	movlw	3
  5695  001DF8  6E19               	movwf	EEPROM_Write@addr,c
  5696  001DFA  0E01               	movlw	1
  5697  001DFC  6E1A               	movwf	EEPROM_Write@count,c
  5698  001DFE  ECF8  F014         	call	_EEPROM_Write	;wreg free
  5699                           
  5700                           ;miwi_p2p.c: 1219: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)40 * sizeof(C
      +                          ONNECTION_ENTRY));
  5701  001E02  0EA0               	movlw	low _ConnectionTable
  5702  001E04  6E17               	movwf	EEPROM_Write@dest,c
  5703  001E06  0E02               	movlw	high _ConnectionTable
  5704  001E08  6E18               	movwf	EEPROM_Write@dest+1,c
  5705  001E0A  0E04               	movlw	4
  5706  001E0C  6E19               	movwf	EEPROM_Write@addr,c
  5707  001E0E  0E30               	movlw	48
  5708  001E10  6E1A               	movwf	EEPROM_Write@count,c
  5709  001E12  ECF8  F014         	call	_EEPROM_Write	;wreg free
  5710  001E16                     l12042:
  5711                           
  5712                           ;miwi_p2p.c: 1221: }
  5713                           ;miwi_p2p.c: 1228: initValue.PAddress = myLongAddress;
  5714  001E16  0ED7               	movlw	low _myLongAddress
  5715  001E18  0100               	movlb	0	; () banked
  5716  001E1A  6FB7               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
  5717  001E1C  0E01               	movlw	high _myLongAddress
  5718  001E1E  6FB8               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
  5719                           
  5720                           ; BSR set to: 0
  5721                           ;miwi_p2p.c: 1229: initValue.actionFlags.bits.CCAEnable = 1;
  5722  001E20  83B6               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;miwi_p2p.c: 1230: initValue.actionFlags.bits.PAddrLength = 8;
  5726  001E22  51B6               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
  5727  001E24  0B87               	andlw	-121
  5728  001E26  0940               	iorlw	64
  5729  001E28  6FB6               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;miwi_p2p.c: 1231: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
  5733  001E2A  B1B5               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
  5734  001E2C  D002               	bra	u11885
  5735  001E2E  95B6               	bcf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5736  001E30  D002               	bra	u11886
  5737  001E32                     u11885:
  5738  001E32  0100               	movlb	0	; () banked
  5739  001E34  85B6               	bsf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5740  001E36                     u11886:
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;miwi_p2p.c: 1232: initValue.actionFlags.bits.RepeaterMode = 0;
  5744  001E36  91B6               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;miwi_p2p.c: 1234: MiMAC_Init(initValue);
  5748  001E38  C0B6  F0AF         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
  5749  001E3C  C0B7  F0B0         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
  5750  001E40  C0B8  F0B1         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
  5751  001E44  EC00  F018         	call	_MiMAC_Init	;wreg free
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;miwi_p2p.c: 1237: {
  5755                           ;miwi_p2p.c: 1238: uint16_t tmp = 0xFFFF;
  5756  001E48  69B3               	setf	MiApp_ProtocolInit@tmp& (0+255),b
  5757  001E4A  69B4               	setf	(MiApp_ProtocolInit@tmp+1)& (0+255),b
  5758                           
  5759                           ; BSR set to: 0
  5760                           ;miwi_p2p.c: 1239: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
  5761  001E4C  0E9B               	movlw	low _myPANID
  5762  001E4E  6E1A               	movwf	MiMAC_SetAltAddress@PANID,c
  5763  001E50  0EB3               	movlw	MiApp_ProtocolInit@tmp& (0+255)
  5764  001E52  EC4D  F016         	call	_MiMAC_SetAltAddress
  5765                           
  5766                           ;miwi_p2p.c: 1240: }
  5767                           ;miwi_p2p.c: 1243: MiApp_SetChannel(currentChannel);
  5768  001E56  0100               	movlb	0	; () banked
  5769  001E58  51AD               	movf	_currentChannel& (0+255),w,b
  5770  001E5A  EC01  F019         	call	_MiApp_SetChannel
  5771                           
  5772                           ;miwi_p2p.c: 1254: P2PCapacityInfo = 0;
  5773  001E5E  0100               	movlb	0	; () banked
  5774  001E60  6B91               	clrf	_P2PCapacityInfo& (0+255),b
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;miwi_p2p.c: 1261: P2PCapacityInfo |= (ConnMode << 4);
  5778  001E62  39FD               	swapf	_ConnMode& (0+255),w,b
  5779  001E64  0BF0               	andlw	240
  5780  001E66  1391               	iorwf	_P2PCapacityInfo& (0+255),f,b
  5781                           
  5782                           ; BSR set to: 0
  5783                           ;miwi_p2p.c: 1263: INTCONbits.INT0IE = 1;
  5784  001E68  88F2               	bsf	intcon,4,c	;volatile
  5785                           
  5786                           ; BSR set to: 0
  5787  001E6A  0012               	return		;funcret
  5788  001E6C                     __end_of_MiApp_ProtocolInit:
  5789                           	opt stack 0
  5790                           tblptru	equ	0xFF8
  5791                           tblptrh	equ	0xFF7
  5792                           tblptrl	equ	0xFF6
  5793                           tablat	equ	0xFF5
  5794                           prodh	equ	0xFF4
  5795                           prodl	equ	0xFF3
  5796                           intcon	equ	0xFF2
  5797                           intcon2	equ	0xFF1
  5798                           postinc0	equ	0xFEE
  5799                           wreg	equ	0xFE8
  5800                           indf1	equ	0xFE7
  5801                           postdec1	equ	0xFE5
  5802                           fsr1h	equ	0xFE2
  5803                           fsr1l	equ	0xFE1
  5804                           indf2	equ	0xFDF
  5805                           fsr2h	equ	0xFDA
  5806                           fsr2l	equ	0xFD9
  5807                           status	equ	0xFD8
  5808                           
  5809 ;; *************** function _NVMInit *****************
  5810 ;; Defined at:
  5811 ;;		line 631 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;		None
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  result          1   26[COMRAM] unsigned char 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      unsigned char 
  5818 ;; Registers used:
  5819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : F/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5826 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5829 ;;Total ram usage:        1 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    4
  5832 ;; This function calls:
  5833 ;;		_NVMalloc
  5834 ;; This function is called by:
  5835 ;;		_MiApp_ProtocolInit
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           	psect	text20
  5840  0027D4                     __ptext20:
  5841                           	opt stack 0
  5842  0027D4                     _NVMInit:
  5843                           	opt stack 24
  5844                           
  5845                           ;miwi_nvm.c: 633: bool result = 1;
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;incstack = 0
  5849  0027D4  0E01               	movlw	1
  5850  0027D6  6E1B               	movwf	NVMInit@result,c
  5851                           
  5852                           ;miwi_nvm.c: 635: nextEEPosition = 0;
  5853  0027D8  0100               	movlb	0	; () banked
  5854  0027DA  6B8B               	clrf	_nextEEPosition& (0+255),b
  5855  0027DC  6B8C               	clrf	(_nextEEPosition+1)& (0+255),b
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;miwi_nvm.c: 637: result &= NVMalloc(2, &nvmMyPANID);
  5859  0027DE  6A17               	clrf	NVMalloc@size+1,c
  5860  0027E0  0E02               	movlw	2
  5861  0027E2  6E16               	movwf	NVMalloc@size,c
  5862  0027E4  0EA5               	movlw	low _nvmMyPANID
  5863  0027E6  6E18               	movwf	NVMalloc@location,c
  5864  0027E8  EC69  F018         	call	_NVMalloc	;wreg free
  5865  0027EC  161B               	andwf	NVMInit@result,f,c
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;miwi_nvm.c: 638: result &= NVMalloc(1, &nvmCurrentChannel);
  5869  0027EE  6A17               	clrf	NVMalloc@size+1,c
  5870  0027F0  0E01               	movlw	1
  5871  0027F2  6E16               	movwf	NVMalloc@size,c
  5872  0027F4  0EA1               	movlw	low _nvmCurrentChannel
  5873  0027F6  6E18               	movwf	NVMalloc@location,c
  5874  0027F8  EC69  F018         	call	_NVMalloc	;wreg free
  5875  0027FC  161B               	andwf	NVMInit@result,f,c
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;miwi_nvm.c: 639: result &= NVMalloc(1, &nvmConnMode);
  5879  0027FE  6A17               	clrf	NVMalloc@size+1,c
  5880  002800  0E01               	movlw	1
  5881  002802  6E16               	movwf	NVMalloc@size,c
  5882  002804  0E9D               	movlw	low _nvmConnMode
  5883  002806  6E18               	movwf	NVMalloc@location,c
  5884  002808  EC69  F018         	call	_NVMalloc	;wreg free
  5885  00280C  161B               	andwf	NVMInit@result,f,c
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;miwi_nvm.c: 640: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 40, &nvmConnectionTable)
      +                          ;
  5889  00280E  0E02               	movlw	2
  5890  002810  6E17               	movwf	NVMalloc@size+1,c
  5891  002812  0E30               	movlw	48
  5892  002814  6E16               	movwf	NVMalloc@size,c
  5893  002816  0E9F               	movlw	low _nvmConnectionTable
  5894  002818  6E18               	movwf	NVMalloc@location,c
  5895  00281A  EC69  F018         	call	_NVMalloc	;wreg free
  5896  00281E  161B               	andwf	NVMInit@result,f,c
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;miwi_nvm.c: 641: result &= NVMalloc(4, &nvmOutFrameCounter);
  5900  002820  6A17               	clrf	NVMalloc@size+1,c
  5901  002822  0E04               	movlw	4
  5902  002824  6E16               	movwf	NVMalloc@size,c
  5903  002826  0EA7               	movlw	low _nvmOutFrameCounter
  5904  002828  6E18               	movwf	NVMalloc@location,c
  5905  00282A  EC69  F018         	call	_NVMalloc	;wreg free
  5906  00282E  161B               	andwf	NVMInit@result,f,c
  5907                           
  5908                           ; BSR set to: 0
  5909                           ;miwi_nvm.c: 642: result &= NVMalloc(1,&nvmEdc);
  5910  002830  6A17               	clrf	NVMalloc@size+1,c
  5911  002832  0E01               	movlw	1
  5912  002834  6E16               	movwf	NVMalloc@size,c
  5913  002836  0EA3               	movlw	low _nvmEdc
  5914  002838  6E18               	movwf	NVMalloc@location,c
  5915  00283A  EC69  F018         	call	_NVMalloc	;wreg free
  5916  00283E  161B               	andwf	NVMInit@result,f,c
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;miwi_nvm.c: 645: result &= NVMalloc(1,&nvmRole);
  5920  002840  6A17               	clrf	NVMalloc@size+1,c
  5921  002842  0E01               	movlw	1
  5922  002844  6E16               	movwf	NVMalloc@size,c
  5923  002846  0EA9               	movlw	low _nvmRole
  5924  002848  6E18               	movwf	NVMalloc@location,c
  5925  00284A  EC69  F018         	call	_NVMalloc	;wreg free
  5926  00284E  161B               	andwf	NVMInit@result,f,c
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;miwi_nvm.c: 646: result &= NVMalloc(1,&nvmmyIndex);
  5930  002850  6A17               	clrf	NVMalloc@size+1,c
  5931  002852  0E01               	movlw	1
  5932  002854  6E16               	movwf	NVMalloc@size,c
  5933  002856  0EAB               	movlw	low _nvmmyIndex
  5934  002858  6E18               	movwf	NVMalloc@location,c
  5935  00285A  EC69  F018         	call	_NVMalloc	;wreg free
  5936  00285E  161B               	andwf	NVMInit@result,f,c
  5937                           
  5938                           ; BSR set to: 0
  5939  002860  0012               	return		;funcret
  5940  002862                     __end_of_NVMInit:
  5941                           	opt stack 0
  5942                           tblptru	equ	0xFF8
  5943                           tblptrh	equ	0xFF7
  5944                           tblptrl	equ	0xFF6
  5945                           tablat	equ	0xFF5
  5946                           prodh	equ	0xFF4
  5947                           prodl	equ	0xFF3
  5948                           intcon	equ	0xFF2
  5949                           intcon2	equ	0xFF1
  5950                           postinc0	equ	0xFEE
  5951                           wreg	equ	0xFE8
  5952                           indf1	equ	0xFE7
  5953                           postdec1	equ	0xFE5
  5954                           fsr1h	equ	0xFE2
  5955                           fsr1l	equ	0xFE1
  5956                           indf2	equ	0xFDF
  5957                           fsr2h	equ	0xFDA
  5958                           fsr2l	equ	0xFD9
  5959                           status	equ	0xFD8
  5960                           
  5961 ;; *************** function _NVMalloc *****************
  5962 ;; Defined at:
  5963 ;;		line 616 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  size            2   21[COMRAM] unsigned int 
  5966 ;;  location        1   23[COMRAM] PTR unsigned int 
  5967 ;;		 -> nvmmyIndex(2), nvmRole(2), nvmEdc(2), nvmOutFrameCounter(2), 
  5968 ;;		 -> nvmConnectionTable(2), nvmConnMode(2), nvmCurrentChannel(2), nvmMyPANID(2), 
  5969 ;; Auto vars:     Size  Location     Type
  5970 ;;		None
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  1    wreg      unsigned char 
  5973 ;; Registers used:
  5974 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : F/0
  5977 ;;		On exit  : F/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5980 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5982 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5983 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5984 ;;Total ram usage:        5 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    3
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_NVMInit
  5991 ;; This function uses a non-reentrant model
  5992 ;;
  5993                           
  5994                           	psect	text21
  5995  0030D2                     __ptext21:
  5996                           	opt stack 0
  5997  0030D2                     _NVMalloc:
  5998                           	opt stack 24
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;miwi_nvm.c: 620: if ((nextEEPosition + size) > 32768)
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;incstack = 0
  6005  0030D2  5016               	movf	NVMalloc@size,w,c
  6006  0030D4  258B               	addwf	_nextEEPosition& (0+255),w,b
  6007  0030D6  6E19               	movwf	??_NVMalloc& (0+255),c
  6008  0030D8  5017               	movf	NVMalloc@size+1,w,c
  6009  0030DA  218C               	addwfc	(_nextEEPosition+1)& (0+255),w,b
  6010  0030DC  6E1A               	movwf	(??_NVMalloc+1)& (0+255),c
  6011  0030DE  0419               	decf	??_NVMalloc,w,c
  6012  0030E0  0E80               	movlw	128
  6013  0030E2  581A               	subwfb	??_NVMalloc+1,w,c
  6014  0030E4  E301               	bnc	l11690
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;miwi_nvm.c: 621: {
  6018                           ;miwi_nvm.c: 622: return 0;
  6019  0030E6  0C00               	retlw	0
  6020  0030E8                     l11690:
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;miwi_nvm.c: 623: }
  6024                           ;miwi_nvm.c: 625: *location = nextEEPosition;
  6025  0030E8  5018               	movf	NVMalloc@location,w,c
  6026  0030EA  6ED9               	movwf	fsr2l,c
  6027  0030EC  6ADA               	clrf	fsr2h,c
  6028  0030EE  C08B  FFDE         	movff	_nextEEPosition,postinc2
  6029  0030F2  C08C  FFDD         	movff	_nextEEPosition+1,postdec2
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;miwi_nvm.c: 626: nextEEPosition += size;
  6033  0030F6  5016               	movf	NVMalloc@size,w,c
  6034  0030F8  278B               	addwf	_nextEEPosition& (0+255),f,b
  6035  0030FA  5017               	movf	NVMalloc@size+1,w,c
  6036  0030FC  238C               	addwfc	(_nextEEPosition+1)& (0+255),f,b
  6037                           
  6038                           ; BSR set to: 0
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;miwi_nvm.c: 627: return 1;
  6042  0030FE  0C01               	retlw	1	;funcret
  6043  003100                     __end_of_NVMalloc:
  6044                           	opt stack 0
  6045                           tblptru	equ	0xFF8
  6046                           tblptrh	equ	0xFF7
  6047                           tblptrl	equ	0xFF6
  6048                           tablat	equ	0xFF5
  6049                           prodh	equ	0xFF4
  6050                           prodl	equ	0xFF3
  6051                           intcon	equ	0xFF2
  6052                           intcon2	equ	0xFF1
  6053                           postinc0	equ	0xFEE
  6054                           wreg	equ	0xFE8
  6055                           indf1	equ	0xFE7
  6056                           postdec1	equ	0xFE5
  6057                           fsr1h	equ	0xFE2
  6058                           fsr1l	equ	0xFE1
  6059                           indf2	equ	0xFDF
  6060                           postinc2	equ	0xFDE
  6061                           postdec2	equ	0xFDD
  6062                           fsr2h	equ	0xFDA
  6063                           fsr2l	equ	0xFD9
  6064                           status	equ	0xFD8
  6065                           
  6066 ;; *************** function _MiMAC_Init *****************
  6067 ;; Defined at:
  6068 ;;		line 1465 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  initValue       3    0[BANK0 ] struct .
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  i               1    3[BANK0 ] unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      unsigned char 
  6075 ;; Registers used:
  6076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : F/0
  6079 ;;		On exit  : F/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6082 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6085 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6086 ;;Total ram usage:        4 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; Hardware stack levels required when called:    7
  6089 ;; This function calls:
  6090 ;;		_InitMRF24J40
  6091 ;; This function is called by:
  6092 ;;		_MiApp_ProtocolInit
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           	psect	text22
  6097  003000                     __ptext22:
  6098                           	opt stack 0
  6099  003000                     _MiMAC_Init:
  6100                           	opt stack 21
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;drv_mrf_miwi_24j40.c: 1467: uint8_t i;
  6104                           ;drv_mrf_miwi_24j40.c: 1469: MACInitParams = initValue;
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;incstack = 0
  6108  003000  C0AF  F086         	movff	MiMAC_Init@initValue,_MACInitParams
  6109  003004  C0B0  F087         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
  6110  003008  C0B1  F088         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
  6111                           
  6112                           ;drv_mrf_miwi_24j40.c: 1471: IEEESeqNum = TMR0L;
  6113  00300C  CFD6 F03E          	movff	4054,_IEEESeqNum	;volatile
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;drv_mrf_miwi_24j40.c: 1473: MACCurrentChannel = 11;
  6117  003010  0E0B               	movlw	11
  6118  003012  6F90               	movwf	_MACCurrentChannel& (0+255),b
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;drv_mrf_miwi_24j40.c: 1475: InitMRF24J40();
  6122  003014  EC74  F00D         	call	_InitMRF24J40	;wreg free
  6123                           
  6124                           ;drv_mrf_miwi_24j40.c: 1477: MRF24J40Status.Val = 0;
  6125  003018  6A3F               	clrf	_MRF24J40Status,c	;volatile
  6126                           
  6127                           ;drv_mrf_miwi_24j40.c: 1479: for (i = 0; i < 2; i++)
  6128  00301A  0100               	movlb	0	; () banked
  6129  00301C  6BB2               	clrf	MiMAC_Init@i& (0+255),b
  6130  00301E                     l11754:
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;drv_mrf_miwi_24j40.c: 1480: {
  6134                           ;drv_mrf_miwi_24j40.c: 1481: RxBuffer[i].PayloadLen = 0;
  6135  00301E  51B2               	movf	MiMAC_Init@i& (0+255),w,b
  6136  003020  0D45               	mullw	69
  6137  003022  0E04               	movlw	low _RxBuffer
  6138  003024  24F3               	addwf	prodl,w,c
  6139  003026  6ED9               	movwf	fsr2l,c
  6140  003028  0E01               	movlw	high _RxBuffer
  6141  00302A  20F4               	addwfc	prodh,w,c
  6142  00302C  6EDA               	movwf	fsr2h,c
  6143  00302E  6ADF               	clrf	indf2,c
  6144                           
  6145                           ; BSR set to: 0
  6146  003030  2BB2               	incf	MiMAC_Init@i& (0+255),f,b
  6147                           
  6148                           ; BSR set to: 0
  6149  003032  0E01               	movlw	1
  6150  003034  65B2               	cpfsgt	MiMAC_Init@i& (0+255),b
  6151  003036  D7F3               	goto	l11754
  6152  003038  0C01               	retlw	1
  6153  00303A                     __end_of_MiMAC_Init:
  6154                           	opt stack 0
  6155                           tblptru	equ	0xFF8
  6156                           tblptrh	equ	0xFF7
  6157                           tblptrl	equ	0xFF6
  6158                           tablat	equ	0xFF5
  6159                           prodh	equ	0xFF4
  6160                           prodl	equ	0xFF3
  6161                           intcon	equ	0xFF2
  6162                           intcon2	equ	0xFF1
  6163                           postinc0	equ	0xFEE
  6164                           wreg	equ	0xFE8
  6165                           indf1	equ	0xFE7
  6166                           postdec1	equ	0xFE5
  6167                           fsr1h	equ	0xFE2
  6168                           fsr1l	equ	0xFE1
  6169                           indf2	equ	0xFDF
  6170                           postinc2	equ	0xFDE
  6171                           postdec2	equ	0xFDD
  6172                           fsr2h	equ	0xFDA
  6173                           fsr2l	equ	0xFD9
  6174                           status	equ	0xFD8
  6175                           
  6176 ;; *************** function _MiApp_SetChannel *****************
  6177 ;; Defined at:
  6178 ;;		line 2378 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  channel         1    wreg     unsigned char 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  channel         1   30[COMRAM] unsigned char 
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      unsigned char 
  6185 ;; Registers used:
  6186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : F/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6196 ;;Total ram usage:        1 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    6
  6199 ;; This function calls:
  6200 ;;		_EEPROM_Write
  6201 ;;		_MiMAC_SetChannel
  6202 ;; This function is called by:
  6203 ;;		_MiApp_ProtocolInit
  6204 ;;		_Initialize_Demo
  6205 ;;		_run_star_demo
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	text23
  6210  003202                     __ptext23:
  6211                           	opt stack 0
  6212  003202                     _MiApp_SetChannel:
  6213                           	opt stack 22
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;incstack = 0
  6217                           ;MiApp_SetChannel@channel stored from wreg
  6218  003202  6E1F               	movwf	MiApp_SetChannel@channel,c
  6219                           
  6220                           ;miwi_p2p.c: 2380: if( MiMAC_SetChannel(channel, 0) )
  6221  003204  6A1D               	clrf	MiMAC_SetChannel@offsetFreq,c
  6222  003206  501F               	movf	MiApp_SetChannel@channel,w,c
  6223  003208  ECA3  F017         	call	_MiMAC_SetChannel
  6224  00320C  0900               	iorlw	0
  6225  00320E  E00C               	bz	l11806
  6226                           
  6227                           ;miwi_p2p.c: 2381: {
  6228                           ;miwi_p2p.c: 2382: currentChannel = channel;
  6229  003210  C01F  F0AD         	movff	MiApp_SetChannel@channel,_currentChannel
  6230                           
  6231                           ;miwi_p2p.c: 2384: EEPROM_Write((uint8_t *)&currentChannel, 0x02, 1);
  6232  003214  0EAD               	movlw	low _currentChannel
  6233  003216  6E17               	movwf	EEPROM_Write@dest,c
  6234  003218  6A18               	clrf	EEPROM_Write@dest+1,c
  6235  00321A  0E02               	movlw	2
  6236  00321C  6E19               	movwf	EEPROM_Write@addr,c
  6237  00321E  0E01               	movlw	1
  6238  003220  6E1A               	movwf	EEPROM_Write@count,c
  6239  003222  ECF8  F014         	call	_EEPROM_Write	;wreg free
  6240                           
  6241                           ;miwi_p2p.c: 2386: return 1;
  6242  003226  0C01               	retlw	1
  6243  003228                     l11806:
  6244                           
  6245                           ;miwi_p2p.c: 2387: }
  6246                           ;miwi_p2p.c: 2388: return 0;
  6247  003228  0C00               	retlw	0	;funcret
  6248  00322A                     __end_of_MiApp_SetChannel:
  6249                           	opt stack 0
  6250                           tblptru	equ	0xFF8
  6251                           tblptrh	equ	0xFF7
  6252                           tblptrl	equ	0xFF6
  6253                           tablat	equ	0xFF5
  6254                           prodh	equ	0xFF4
  6255                           prodl	equ	0xFF3
  6256                           intcon	equ	0xFF2
  6257                           intcon2	equ	0xFF1
  6258                           postinc0	equ	0xFEE
  6259                           wreg	equ	0xFE8
  6260                           indf1	equ	0xFE7
  6261                           postdec1	equ	0xFE5
  6262                           fsr1h	equ	0xFE2
  6263                           fsr1l	equ	0xFE1
  6264                           indf2	equ	0xFDF
  6265                           postinc2	equ	0xFDE
  6266                           postdec2	equ	0xFDD
  6267                           fsr2h	equ	0xFDA
  6268                           fsr2l	equ	0xFD9
  6269                           status	equ	0xFD8
  6270                           
  6271 ;; *************** function _EEPROM_Read *****************
  6272 ;; Defined at:
  6273 ;;		line 57 in file "../src/system_config/miwikit_pic18f46j50_24j40/eeprom.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  dest            2   22[COMRAM] PTR unsigned char 
  6276 ;;		 -> myConnectionIndex_in_PanCo(1), myPANID(2), currentChannel(1), ConnMode(1), 
  6277 ;;		 -> myLongAddress(8), role(1), conn_size(1), ConnectionTable(560), 
  6278 ;;  addr            1   24[COMRAM] unsigned char 
  6279 ;;  count           1   25[COMRAM] unsigned char 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;		None
  6282 ;; Return value:  Size  Location     Type
  6283 ;;		None               void
  6284 ;; Registers used:
  6285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6294 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6295 ;;Total ram usage:        4 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; Hardware stack levels required when called:    5
  6298 ;; This function calls:
  6299 ;;		_SPIGet2
  6300 ;;		_SPIPut2
  6301 ;; This function is called by:
  6302 ;;		_MiApp_ProtocolInit
  6303 ;;		_Read_MAC_Address
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text24
  6308  003100                     __ptext24:
  6309                           	opt stack 0
  6310  003100                     _EEPROM_Read:
  6311                           	opt stack 23
  6312                           
  6313                           ;eeprom.c: 59: LATDbits.LATD5 = 0;
  6314                           
  6315                           ;incstack = 0
  6316  003100  9A8C               	bcf	3980,5,c	;volatile
  6317                           
  6318                           ;eeprom.c: 60: SPIPut2(0x03);
  6319  003102  0E03               	movlw	3
  6320  003104  ECC8  F019         	call	_SPIPut2
  6321                           
  6322                           ;eeprom.c: 61: SPIPut2(addr);
  6323  003108  5019               	movf	EEPROM_Read@addr,w,c
  6324  00310A  ECC8  F019         	call	_SPIPut2
  6325                           
  6326                           ;eeprom.c: 62: while( count )
  6327  00310E  D00A               	goto	l11794
  6328  003110                     l11788:
  6329                           
  6330                           ;eeprom.c: 63: {
  6331                           ;eeprom.c: 64: *dest++ = SPIGet2();
  6332  003110  EC12  F01A         	call	_SPIGet2	;wreg free
  6333  003114  C017  FFD9         	movff	EEPROM_Read@dest,fsr2l
  6334  003118  C018  FFDA         	movff	EEPROM_Read@dest+1,fsr2h
  6335  00311C  6EDF               	movwf	indf2,c
  6336  00311E  4A17               	infsnz	EEPROM_Read@dest,f,c
  6337  003120  2A18               	incf	EEPROM_Read@dest+1,f,c
  6338                           
  6339                           ;eeprom.c: 65: count--;
  6340  003122  061A               	decf	EEPROM_Read@count,f,c
  6341  003124                     l11794:
  6342  003124  501A               	movf	EEPROM_Read@count,w,c
  6343  003126  E1F4               	bnz	l11788
  6344                           
  6345                           ;eeprom.c: 66: }
  6346                           ;eeprom.c: 67: LATDbits.LATD5 = 1;
  6347  003128  8A8C               	bsf	3980,5,c	;volatile
  6348  00312A  0012               	return		;funcret
  6349  00312C                     __end_of_EEPROM_Read:
  6350                           	opt stack 0
  6351                           tblptru	equ	0xFF8
  6352                           tblptrh	equ	0xFF7
  6353                           tblptrl	equ	0xFF6
  6354                           tablat	equ	0xFF5
  6355                           prodh	equ	0xFF4
  6356                           prodl	equ	0xFF3
  6357                           intcon	equ	0xFF2
  6358                           intcon2	equ	0xFF1
  6359                           postinc0	equ	0xFEE
  6360                           wreg	equ	0xFE8
  6361                           indf1	equ	0xFE7
  6362                           postdec1	equ	0xFE5
  6363                           fsr1h	equ	0xFE2
  6364                           fsr1l	equ	0xFE1
  6365                           indf2	equ	0xFDF
  6366                           postinc2	equ	0xFDE
  6367                           postdec2	equ	0xFDD
  6368                           fsr2h	equ	0xFDA
  6369                           fsr2l	equ	0xFD9
  6370                           status	equ	0xFD8
  6371                           
  6372 ;; *************** function _MiApp_EstablishConnection *****************
  6373 ;; Defined at:
  6374 ;;		line 2260 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  ActiveScanIn    1    wreg     unsigned char 
  6377 ;;  Mode            1   69[BANK0 ] unsigned char 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  ActiveScanIn    1    0[COMRAM] unsigned char 
  6380 ;;  i               1   11[BANK1 ] unsigned char 
  6381 ;;  t2              4    7[BANK1 ] struct _MIWI_TICK
  6382 ;;  t1              4    3[BANK1 ] struct _MIWI_TICK
  6383 ;;  connectionIn    1    2[BANK1 ] unsigned char 
  6384 ;;  retry           1    1[BANK1 ] unsigned char 
  6385 ;;  tmpConnectio    1    0[BANK1 ] unsigned char 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  1    wreg      unsigned char 
  6388 ;; Registers used:
  6389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6390 ;; Tracked objects:
  6391 ;;		On entry : F/0
  6392 ;;		On exit  : F/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6395 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6396 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6397 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6398 ;;      Totals:         0       5      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6399 ;;Total ram usage:       17 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:   14
  6402 ;; This function calls:
  6403 ;;		_MiApp_DiscardMessage
  6404 ;;		_MiApp_MessageAvailable
  6405 ;;		_MiWi_TickGet
  6406 ;;		_SendPacket
  6407 ;; This function is called by:
  6408 ;;		_Initialize_Demo
  6409 ;;		_run_star_demo
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text25
  6414  001E6C                     __ptext25:
  6415                           	opt stack 0
  6416  001E6C                     _MiApp_EstablishConnection:
  6417                           	opt stack 14
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;miwi_p2p.c: 2262: uint8_t tmpConnectionMode = ConnMode;
  6421                           
  6422                           ;incstack = 0
  6423  001E6C  C0FD  F1DF         	movff	_ConnMode,MiApp_EstablishConnection@tmpConnectionMode
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;miwi_p2p.c: 2263: uint8_t retry = 3;
  6427  001E70  0E03               	movlw	3
  6428  001E72  0101               	movlb	1	; () banked
  6429  001E74  6FE0               	movwf	MiApp_EstablishConnection@retry& (0+255),b
  6430                           
  6431                           ; BSR set to: 1
  6432                           ;miwi_p2p.c: 2264: uint8_t connectionInterval = 0;
  6433  001E76  6BE1               	clrf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6434                           
  6435                           ; BSR set to: 1
  6436                           ;miwi_p2p.c: 2265: MIWI_TICK t1, t2;
  6437                           ;miwi_p2p.c: 2266: tick1 = MiWi_TickGet();
  6438  001E78  EC19  F017         	call	_MiWi_TickGet	;wreg free
  6439                           
  6440                           ;miwi_p2p.c: 2267: if( Mode == 0x01 )
  6441  001E7C  0100               	movlb	0	; () banked
  6442  001E7E  05F4               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
  6443  001E80  E101               	bnz	l11876
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;miwi_p2p.c: 2268: {
  6447                           ;miwi_p2p.c: 2269: return 0xFF;
  6448  001E82  0CFF               	retlw	255
  6449  001E84                     l11876:
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;miwi_p2p.c: 2270: }
  6453                           ;miwi_p2p.c: 2272: t1 = MiWi_TickGet();
  6454  001E84  EC19  F017         	call	_MiWi_TickGet	;wreg free
  6455  001E88  C016  F1E2         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
  6456  001E8C  C017  F1E3         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
  6457  001E90  C018  F1E4         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
  6458  001E94  C019  F1E5         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
  6459                           
  6460                           ;miwi_p2p.c: 2274: t1.Val -= (((uint32_t)(16000000)/32));
  6461  001E98  0E20               	movlw	32
  6462  001E9A  0101               	movlb	1	; () banked
  6463  001E9C  5FE2               	subwf	MiApp_EstablishConnection@t1& (0+255),f,b
  6464  001E9E  0EA1               	movlw	161
  6465  001EA0  5BE3               	subwfb	(MiApp_EstablishConnection@t1+1)& (0+255),f,b
  6466  001EA2  0E07               	movlw	7
  6467  001EA4  5BE4               	subwfb	(MiApp_EstablishConnection@t1+2)& (0+255),f,b
  6468  001EA6  0E00               	movlw	0
  6469  001EA8  5BE5               	subwfb	(MiApp_EstablishConnection@t1+3)& (0+255),f,b
  6470                           
  6471                           ; BSR set to: 1
  6472                           ;miwi_p2p.c: 2275: ConnMode = 0x00;
  6473  001EAA  0100               	movlb	0	; () banked
  6474  001EAC  6BFD               	clrf	_ConnMode& (0+255),b
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;miwi_p2p.c: 2276: P2PStatus.bits.SearchConnection = 1;
  6478  001EAE  8992               	bsf	_P2PStatus& (0+255),4,b	;volatile
  6479                           
  6480                           ;miwi_p2p.c: 2277: while( P2PStatus.bits.SearchConnection )
  6481  001EB0  D087               	goto	l11936
  6482  001EB2                     l11884:
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;miwi_p2p.c: 2278: {
  6486                           ;miwi_p2p.c: 2279: t2 = MiWi_TickGet();
  6487  001EB2  EC19  F017         	call	_MiWi_TickGet	;wreg free
  6488  001EB6  C016  F1E6         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
  6489  001EBA  C017  F1E7         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
  6490  001EBE  C018  F1E8         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
  6491  001EC2  C019  F1E9         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
  6492                           
  6493                           ;miwi_p2p.c: 2280: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
  6494  001EC6  0101               	movlb	1	; () banked
  6495  001EC8  51E2               	movf	MiApp_EstablishConnection@t1& (0+255),w,b
  6496  001ECA  5DE6               	subwf	MiApp_EstablishConnection@t2& (0+255),w,b
  6497  001ECC  0100               	movlb	0	; () banked
  6498  001ECE  6FF5               	movwf	??_MiApp_EstablishConnection& (0+255),b
  6499  001ED0  0101               	movlb	1	; () banked
  6500  001ED2  51E3               	movf	(MiApp_EstablishConnection@t1+1)& (0+255),w,b
  6501  001ED4  59E7               	subwfb	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
  6502  001ED6  0100               	movlb	0	; () banked
  6503  001ED8  6FF6               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
  6504  001EDA  0101               	movlb	1	; () banked
  6505  001EDC  51E4               	movf	(MiApp_EstablishConnection@t1+2)& (0+255),w,b
  6506  001EDE  59E8               	subwfb	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
  6507  001EE0  0100               	movlb	0	; () banked
  6508  001EE2  6FF7               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
  6509  001EE4  0101               	movlb	1	; () banked
  6510  001EE6  51E5               	movf	(MiApp_EstablishConnection@t1+3)& (0+255),w,b
  6511  001EE8  59E9               	subwfb	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
  6512  001EEA  0100               	movlb	0	; () banked
  6513  001EEC  6FF8               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
  6514  001EEE  51F8               	movf	(??_MiApp_EstablishConnection+3)& (0+255),w,b
  6515  001EF0  E107               	bnz	u11700
  6516  001EF2  0E21               	movlw	33
  6517  001EF4  5DF5               	subwf	??_MiApp_EstablishConnection& (0+255),w,b
  6518  001EF6  0EA1               	movlw	161
  6519  001EF8  59F6               	subwfb	(??_MiApp_EstablishConnection+1)& (0+255),w,b
  6520  001EFA  0E07               	movlw	7
  6521  001EFC  59F7               	subwfb	(??_MiApp_EstablishConnection+2)& (0+255),w,b
  6522  001EFE  E35A               	bnc	l11932
  6523  001F00                     u11700:
  6524                           
  6525                           ; BSR set to: 0
  6526                           ;miwi_p2p.c: 2281: {
  6527                           ;miwi_p2p.c: 2282: t1.Val = t2.Val;
  6528  001F00  C1E6  F1E2         	movff	MiApp_EstablishConnection@t2,MiApp_EstablishConnection@t1
  6529  001F04  C1E7  F1E3         	movff	MiApp_EstablishConnection@t2+1,MiApp_EstablishConnection@t1+1
  6530  001F08  C1E8  F1E4         	movff	MiApp_EstablishConnection@t2+2,MiApp_EstablishConnection@t1+2
  6531  001F0C  C1E9  F1E5         	movff	MiApp_EstablishConnection@t2+3,MiApp_EstablishConnection@t1+3
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;miwi_p2p.c: 2284: if( connectionInterval-- > 0 )
  6535  001F10  0101               	movlb	1	; () banked
  6536  001F12  07E1               	decf	MiApp_EstablishConnection@connectionInterval& (0+255),f,b
  6537  001F14  29E1               	incf	MiApp_EstablishConnection@connectionInterval& (0+255),w,b
  6538  001F16  E154               	bnz	l11936
  6539                           
  6540                           ; BSR set to: 1
  6541                           ;miwi_p2p.c: 2287: }
  6542                           ;miwi_p2p.c: 2288: connectionInterval = 2-1;
  6543  001F18  0E01               	movlw	1
  6544  001F1A  6FE1               	movwf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6545                           
  6546                           ; BSR set to: 1
  6547                           ;miwi_p2p.c: 2289: if( retry-- == 0 )
  6548  001F1C  07E0               	decf	MiApp_EstablishConnection@retry& (0+255),f,b
  6549  001F1E  29E0               	incf	MiApp_EstablishConnection@retry& (0+255),w,b
  6550  001F20  E103               	bnz	l622
  6551                           
  6552                           ; BSR set to: 1
  6553                           ;miwi_p2p.c: 2290: {
  6554                           ;miwi_p2p.c: 2292: P2PStatus.bits.SearchConnection = 0;
  6555  001F22  0100               	movlb	0	; () banked
  6556  001F24  9992               	bcf	_P2PStatus& (0+255),4,b	;volatile
  6557  001F26  0CFF               	retlw	255
  6558  001F28                     l622:
  6559                           
  6560                           ; BSR set to: 1
  6561                           ;miwi_p2p.c: 2294: }
  6562                           ;miwi_p2p.c: 2295: {TxData = 0;};
  6563  001F28  0100               	movlb	0	; () banked
  6564  001F2A  6B95               	clrf	_TxData& (0+255),b
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;miwi_p2p.c: 2296: TxBuffer[TxData++] = 0x81;
  6568  001F2C  0E8E               	movlw	low _TxBuffer
  6569  001F2E  2595               	addwf	_TxData& (0+255),w,b
  6570  001F30  6ED9               	movwf	fsr2l,c
  6571  001F32  6ADA               	clrf	fsr2h,c
  6572  001F34  0E01               	movlw	high _TxBuffer
  6573  001F36  22DA               	addwfc	fsr2h,f,c
  6574  001F38  0E81               	movlw	129
  6575  001F3A  6EDF               	movwf	indf2,c
  6576                           
  6577                           ; BSR set to: 0
  6578  001F3C  2B95               	incf	_TxData& (0+255),f,b
  6579                           
  6580                           ; BSR set to: 0
  6581                           ;miwi_p2p.c: 2297: TxBuffer[TxData++] = currentChannel;
  6582  001F3E  0E8E               	movlw	low _TxBuffer
  6583  001F40  2595               	addwf	_TxData& (0+255),w,b
  6584  001F42  6ED9               	movwf	fsr2l,c
  6585  001F44  6ADA               	clrf	fsr2h,c
  6586  001F46  0E01               	movlw	high _TxBuffer
  6587  001F48  22DA               	addwfc	fsr2h,f,c
  6588  001F4A  C0AD  FFDF         	movff	_currentChannel,indf2
  6589  001F4E  2B95               	incf	_TxData& (0+255),f,b
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;miwi_p2p.c: 2298: TxBuffer[TxData++] = P2PCapacityInfo;
  6593  001F50  0E8E               	movlw	low _TxBuffer
  6594  001F52  2595               	addwf	_TxData& (0+255),w,b
  6595  001F54  6ED9               	movwf	fsr2l,c
  6596  001F56  6ADA               	clrf	fsr2h,c
  6597  001F58  0E01               	movlw	high _TxBuffer
  6598  001F5A  22DA               	addwfc	fsr2h,f,c
  6599  001F5C  C091  FFDF         	movff	_P2PCapacityInfo,indf2
  6600                           
  6601                           ; BSR set to: 0
  6602  001F60  2B95               	incf	_TxData& (0+255),f,b
  6603                           
  6604                           ;miwi_p2p.c: 2300: {
  6605                           ;miwi_p2p.c: 2301: TxBuffer[TxData++] = 0xAA;
  6606  001F62  0E8E               	movlw	low _TxBuffer
  6607  001F64  2595               	addwf	_TxData& (0+255),w,b
  6608  001F66  6ED9               	movwf	fsr2l,c
  6609  001F68  6ADA               	clrf	fsr2h,c
  6610  001F6A  0E01               	movlw	high _TxBuffer
  6611  001F6C  22DA               	addwfc	fsr2h,f,c
  6612  001F6E  0EAA               	movlw	170
  6613  001F70  6EDF               	movwf	indf2,c
  6614                           
  6615                           ; BSR set to: 0
  6616  001F72  2B95               	incf	_TxData& (0+255),f,b
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;miwi_p2p.c: 2302: }
  6620                           ;miwi_p2p.c: 2305: {
  6621                           ;miwi_p2p.c: 2306: uint8_t i;
  6622                           ;miwi_p2p.c: 2308: for(i = 0; i < 1; i++)
  6623  001F74  0101               	movlb	1	; () banked
  6624  001F76  6BEA               	clrf	MiApp_EstablishConnection@i& (0+255),b
  6625  001F78                     l11922:
  6626                           
  6627                           ; BSR set to: 1
  6628                           ;miwi_p2p.c: 2309: {
  6629                           ;miwi_p2p.c: 2310: TxBuffer[TxData++] = AdditionalNodeID[i];
  6630  001F78  51EA               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6631  001F7A  0FFB               	addlw	low _AdditionalNodeID
  6632  001F7C  6ED9               	movwf	fsr2l,c
  6633  001F7E  6ADA               	clrf	fsr2h,c
  6634  001F80  0E8E               	movlw	low _TxBuffer
  6635  001F82  0100               	movlb	0	; () banked
  6636  001F84  2595               	addwf	_TxData& (0+255),w,b
  6637  001F86  6EE1               	movwf	fsr1l,c
  6638  001F88  6AE2               	clrf	fsr1h,c
  6639  001F8A  0E01               	movlw	high _TxBuffer
  6640  001F8C  22E2               	addwfc	fsr1h,f,c
  6641  001F8E  CFDF FFE7          	movff	indf2,indf1
  6642                           
  6643                           ; BSR set to: 0
  6644  001F92  2B95               	incf	_TxData& (0+255),f,b
  6645                           
  6646                           ; BSR set to: 0
  6647  001F94  0101               	movlb	1	; () banked
  6648  001F96  2BEA               	incf	MiApp_EstablishConnection@i& (0+255),f,b
  6649                           
  6650                           ; BSR set to: 1
  6651  001F98  51EA               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6652  001F9A  E0EE               	bz	l11922
  6653                           
  6654                           ; BSR set to: 1
  6655                           ;miwi_p2p.c: 2311: }
  6656                           ;miwi_p2p.c: 2312: }
  6657                           ;miwi_p2p.c: 2327: SendPacket(1, myPANID, (0), 1, 0);
  6658  001F9C  C09B  F0CA         	movff	_myPANID,SendPacket@DestinationPANID
  6659  001FA0  C09C  F0CB         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  6660  001FA4  0100               	movlb	0	; () banked
  6661  001FA6  6BCC               	clrf	SendPacket@DestinationAddress& (0+255),b
  6662  001FA8  6BCD               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  6663  001FAA  0E01               	movlw	1
  6664  001FAC  6FCE               	movwf	SendPacket@isCommand& (0+255),b
  6665  001FAE  6BCF               	clrf	SendPacket@SecurityEnabled& (0+255),b
  6666  001FB0  EC54  F012         	call	_SendPacket
  6667  001FB4                     l11932:
  6668                           
  6669                           ; BSR set to: 0
  6670                           ;miwi_p2p.c: 2344: }
  6671                           ;miwi_p2p.c: 2346: if( MiApp_MessageAvailable())
  6672  001FB4  EC0C  F01A         	call	_MiApp_MessageAvailable	;wreg free
  6673  001FB8  0900               	iorlw	0
  6674  001FBA  E002               	bz	l11936
  6675                           
  6676                           ; BSR set to: 0
  6677                           ;miwi_p2p.c: 2347: {
  6678                           ;miwi_p2p.c: 2348: MiApp_DiscardMessage();
  6679  001FBC  EC17  F01A         	call	_MiApp_DiscardMessage	;wreg free
  6680  001FC0                     l11936:
  6681  001FC0  0100               	movlb	0	; () banked
  6682  001FC2  B992               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  6683  001FC4  D776               	goto	l11884
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;miwi_p2p.c: 2349: }
  6687                           ;miwi_p2p.c: 2351: }
  6688                           ;miwi_p2p.c: 2353: ConnMode = tmpConnectionMode;
  6689  001FC6  C1DF  F0FD         	movff	MiApp_EstablishConnection@tmpConnectionMode,_ConnMode
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;miwi_p2p.c: 2360: return LatestConnection;
  6693  001FCA  518F               	movf	_LatestConnection& (0+255),w,b
  6694                           
  6695                           ; BSR set to: 0
  6696  001FCC  0012               	return		;funcret
  6697  001FCE                     __end_of_MiApp_EstablishConnection:
  6698                           	opt stack 0
  6699                           tblptru	equ	0xFF8
  6700                           tblptrh	equ	0xFF7
  6701                           tblptrl	equ	0xFF6
  6702                           tablat	equ	0xFF5
  6703                           prodh	equ	0xFF4
  6704                           prodl	equ	0xFF3
  6705                           intcon	equ	0xFF2
  6706                           intcon2	equ	0xFF1
  6707                           postinc0	equ	0xFEE
  6708                           wreg	equ	0xFE8
  6709                           indf1	equ	0xFE7
  6710                           postdec1	equ	0xFE5
  6711                           fsr1h	equ	0xFE2
  6712                           fsr1l	equ	0xFE1
  6713                           indf2	equ	0xFDF
  6714                           postinc2	equ	0xFDE
  6715                           postdec2	equ	0xFDD
  6716                           fsr2h	equ	0xFDA
  6717                           fsr2l	equ	0xFD9
  6718                           status	equ	0xFD8
  6719                           
  6720 ;; *************** function _MiApp_MessageAvailable *****************
  6721 ;; Defined at:
  6722 ;;		line 2392 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;		None
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;		None
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  1    wreg      unsigned char 
  6729 ;; Registers used:
  6730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/1
  6733 ;;		On exit  : F/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6740 ;;Total ram usage:        0 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; Hardware stack levels required when called:   13
  6743 ;; This function calls:
  6744 ;;		_P2PTasks
  6745 ;; This function is called by:
  6746 ;;		_MiApp_UnicastStar
  6747 ;;		_MiApp_EstablishConnection
  6748 ;;		_run_star_demo
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text26
  6753  003418                     __ptext26:
  6754                           	opt stack 0
  6755  003418                     _MiApp_MessageAvailable:
  6756                           	opt stack 14
  6757                           
  6758                           ;miwi_p2p.c: 2394: P2PTasks();
  6759                           
  6760                           ; BSR set to: 0
  6761                           ;incstack = 0
  6762  003418  EC90  F009         	call	_P2PTasks	;wreg free
  6763                           
  6764                           ;miwi_p2p.c: 2396: return P2PStatus.bits.RxHasUserData;
  6765  00341C  0100               	movlb	0	; () banked
  6766  00341E  B792               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  6767  003420  0C01               	retlw	1
  6768                           
  6769                           ; BSR set to: 0
  6770  003422  0C00               	retlw	0	;funcret
  6771  003424                     __end_of_MiApp_MessageAvailable:
  6772                           	opt stack 0
  6773                           tblptru	equ	0xFF8
  6774                           tblptrh	equ	0xFF7
  6775                           tblptrl	equ	0xFF6
  6776                           tablat	equ	0xFF5
  6777                           prodh	equ	0xFF4
  6778                           prodl	equ	0xFF3
  6779                           intcon	equ	0xFF2
  6780                           intcon2	equ	0xFF1
  6781                           postinc0	equ	0xFEE
  6782                           wreg	equ	0xFE8
  6783                           indf1	equ	0xFE7
  6784                           postdec1	equ	0xFE5
  6785                           fsr1h	equ	0xFE2
  6786                           fsr1l	equ	0xFE1
  6787                           indf2	equ	0xFDF
  6788                           postinc2	equ	0xFDE
  6789                           postdec2	equ	0xFDD
  6790                           fsr2h	equ	0xFDA
  6791                           fsr2l	equ	0xFD9
  6792                           status	equ	0xFD8
  6793                           
  6794 ;; *************** function _P2PTasks *****************
  6795 ;; Defined at:
  6796 ;;		line 344 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;		None
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;  tmp             2   61[BANK0 ] unsigned int 
  6801 ;;  final_index     1   63[BANK0 ] unsigned char 
  6802 ;;  FW_Stat         1   60[BANK0 ] unsigned char 
  6803 ;;  tmpTick         4   64[BANK0 ] struct _MIWI_TICK
  6804 ;;  tick3           4    0        struct _MIWI_TICK
  6805 ;;  tick2           4    0        struct _MIWI_TICK
  6806 ;;  i               1   68[BANK0 ] unsigned char 
  6807 ;;  broadcast_st    1    0        unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;		None               void
  6810 ;; Registers used:
  6811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6818 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6819 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6820 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6821 ;;Total ram usage:       13 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:   12
  6824 ;; This function calls:
  6825 ;;		_AddConnection
  6826 ;;		_EEPROM_Write
  6827 ;;		_Find_Index
  6828 ;;		_Forward_Packet_PANCr_to_EDy
  6829 ;;		_MiMAC_DiscardPacket
  6830 ;;		_MiMAC_ReceivedPacket
  6831 ;;		_MiMAC_SetAltAddress
  6832 ;;		_MiWi_TickGet
  6833 ;;		_SW_Ack_SrED
  6834 ;;		_SendPacket
  6835 ;;		_isSameAddress
  6836 ;;		_store_connection_tb
  6837 ;; This function is called by:
  6838 ;;		_MiApp_TransceiverPowerState
  6839 ;;		_MiApp_MessageAvailable
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text27
  6844  001320                     __ptext27:
  6845                           	opt stack 0
  6846  001320                     _P2PTasks:
  6847                           	opt stack 14
  6848                           
  6849                           ;miwi_p2p.c: 346: uint8_t i;
  6850                           ;miwi_p2p.c: 347: MIWI_TICK tmpTick ,tick2 , tick3 ;
  6851                           ;miwi_p2p.c: 348: bool broadcast_status;
  6852                           ;miwi_p2p.c: 351: tick2 = MiWi_TickGet();
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;incstack = 0
  6856  001320  EC19  F017         	call	_MiWi_TickGet	;wreg free
  6857                           
  6858                           ;miwi_p2p.c: 352: tick3 = MiWi_TickGet();
  6859  001324  EC19  F017         	call	_MiWi_TickGet	;wreg free
  6860                           
  6861                           ;miwi_p2p.c: 411: if( P2PStatus.bits.DataRequesting )
  6862  001328  0100               	movlb	0	; () banked
  6863  00132A  A592               	btfss	_P2PStatus& (0+255),2,b	;volatile
  6864  00132C  D01E               	goto	l467
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;miwi_p2p.c: 412: {
  6868                           ;miwi_p2p.c: 413: tmpTick = MiWi_TickGet();
  6869  00132E  EC19  F017         	call	_MiWi_TickGet	;wreg free
  6870  001332  C016  F0EF         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  6871  001336  C017  F0F0         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  6872  00133A  C018  F0F1         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  6873  00133E  C019  F0F2         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  6874                           
  6875                           ;miwi_p2p.c: 414: if( (tmpTick.Val - DataRequestTimer.Val) > 0x00003FFF )
  6876  001342  0100               	movlb	0	; () banked
  6877  001344  516A               	movf	_DataRequestTimer& (0+255),w,b
  6878  001346  5DEF               	subwf	P2PTasks@tmpTick& (0+255),w,b
  6879  001348  6FE7               	movwf	??_P2PTasks& (0+255),b
  6880  00134A  516B               	movf	(_DataRequestTimer+1)& (0+255),w,b
  6881  00134C  59F0               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  6882  00134E  6FE8               	movwf	(??_P2PTasks+1)& (0+255),b
  6883  001350  516C               	movf	(_DataRequestTimer+2)& (0+255),w,b
  6884  001352  59F1               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  6885  001354  6FE9               	movwf	(??_P2PTasks+2)& (0+255),b
  6886  001356  516D               	movf	(_DataRequestTimer+3)& (0+255),w,b
  6887  001358  59F2               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  6888  00135A  6FEA               	movwf	(??_P2PTasks+3)& (0+255),b
  6889  00135C  51EA               	movf	(??_P2PTasks+3)& (0+255),w,b
  6890  00135E  11E9               	iorwf	(??_P2PTasks+2)& (0+255),w,b
  6891  001360  E103               	bnz	u11150
  6892  001362  0E40               	movlw	64
  6893  001364  5DE8               	subwf	(??_P2PTasks+1)& (0+255),w,b
  6894  001366  E301               	bnc	l467
  6895  001368                     u11150:
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;miwi_p2p.c: 415: {
  6899                           ;miwi_p2p.c: 419: P2PStatus.bits.DataRequesting = 0;
  6900  001368  9592               	bcf	_P2PStatus& (0+255),2,b	;volatile
  6901  00136A                     l467:
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;miwi_p2p.c: 424: }
  6905                           ;miwi_p2p.c: 425: }
  6906                           ;miwi_p2p.c: 429: if( P2PStatus.bits.SaveConnection )
  6907  00136A  A392               	btfss	_P2PStatus& (0+255),1,b	;volatile
  6908  00136C  D02B               	goto	l11432
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;miwi_p2p.c: 430: {
  6912                           ;miwi_p2p.c: 431: tmpTick = MiWi_TickGet();
  6913  00136E  EC19  F017         	call	_MiWi_TickGet	;wreg free
  6914  001372  C016  F0EF         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  6915  001376  C017  F0F0         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  6916  00137A  C018  F0F1         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  6917  00137E  C019  F0F2         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  6918                           
  6919                           ;miwi_p2p.c: 433: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(16000000)/32)) )
  6920  001382  0100               	movlb	0	; () banked
  6921  001384  5172               	movf	_nvmDelayTick& (0+255),w,b
  6922  001386  5DEF               	subwf	P2PTasks@tmpTick& (0+255),w,b
  6923  001388  6FE7               	movwf	??_P2PTasks& (0+255),b
  6924  00138A  5173               	movf	(_nvmDelayTick+1)& (0+255),w,b
  6925  00138C  59F0               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  6926  00138E  6FE8               	movwf	(??_P2PTasks+1)& (0+255),b
  6927  001390  5174               	movf	(_nvmDelayTick+2)& (0+255),w,b
  6928  001392  59F1               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  6929  001394  6FE9               	movwf	(??_P2PTasks+2)& (0+255),b
  6930  001396  5175               	movf	(_nvmDelayTick+3)& (0+255),w,b
  6931  001398  59F2               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  6932  00139A  6FEA               	movwf	(??_P2PTasks+3)& (0+255),b
  6933  00139C  51EA               	movf	(??_P2PTasks+3)& (0+255),w,b
  6934  00139E  E107               	bnz	u11170
  6935  0013A0  0E21               	movlw	33
  6936  0013A2  5DE7               	subwf	??_P2PTasks& (0+255),w,b
  6937  0013A4  0EA1               	movlw	161
  6938  0013A6  59E8               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  6939  0013A8  0E07               	movlw	7
  6940  0013AA  59E9               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  6941  0013AC  E30B               	bnc	l11432
  6942  0013AE                     u11170:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;miwi_p2p.c: 434: {
  6946                           ;miwi_p2p.c: 435: P2PStatus.bits.SaveConnection = 0;
  6947  0013AE  9392               	bcf	_P2PStatus& (0+255),1,b	;volatile
  6948                           
  6949                           ; BSR set to: 0
  6950                           ;miwi_p2p.c: 436: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)40 * sizeof(CO
      +                          NNECTION_ENTRY));
  6951  0013B0  0EA0               	movlw	low _ConnectionTable
  6952  0013B2  6E17               	movwf	EEPROM_Write@dest,c
  6953  0013B4  0E02               	movlw	high _ConnectionTable
  6954  0013B6  6E18               	movwf	EEPROM_Write@dest+1,c
  6955  0013B8  0E04               	movlw	4
  6956  0013BA  6E19               	movwf	EEPROM_Write@addr,c
  6957  0013BC  0E30               	movlw	48
  6958  0013BE  6E1A               	movwf	EEPROM_Write@count,c
  6959  0013C0  ECF8  F014         	call	_EEPROM_Write	;wreg free
  6960  0013C4                     l11432:
  6961                           
  6962                           ;miwi_p2p.c: 438: }
  6963                           ;miwi_p2p.c: 439: }
  6964                           ;miwi_p2p.c: 457: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
  6965  0013C4  0100               	movlb	0	; () banked
  6966  0013C6  B792               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  6967  0013C8  0012               	return	
  6968                           
  6969                           ; BSR set to: 0
  6970  0013CA  ECF9  F006         	call	_MiMAC_ReceivedPacket	;wreg free
  6971  0013CE  0900               	iorlw	0
  6972  0013D0  B4D8               	btfsc	status,2,c
  6973  0013D2  0012               	return	
  6974                           
  6975                           ;miwi_p2p.c: 458: {
  6976                           ;miwi_p2p.c: 459: bool FW_Stat = 0;
  6977  0013D4  0100               	movlb	0	; () banked
  6978  0013D6  6BEB               	clrf	P2PTasks@FW_Stat& (0+255),b
  6979                           
  6980                           ;miwi_p2p.c: 460: rxMessage.flags.Val = 0;
  6981  0013D8  6B60               	clrf	_rxMessage& (0+255),b
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;miwi_p2p.c: 461: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
  6985  0013DA  A433               	btfss	_MACRxPacket,2,c
  6986  0013DC  D003               	goto	u11200
  6987  0013DE  6BE7               	clrf	??_P2PTasks& (0+255),b
  6988  0013E0  2BE7               	incf	??_P2PTasks& (0+255),f,b
  6989  0013E2  D002               	goto	u11208
  6990  0013E4                     u11200:
  6991  0013E4  0100               	movlb	0	; () banked
  6992  0013E6  6BE7               	clrf	??_P2PTasks& (0+255),b
  6993  0013E8                     u11208:
  6994  0013E8  5160               	movf	_rxMessage& (0+255),w,b
  6995  0013EA  19E7               	xorwf	??_P2PTasks& (0+255),w,b
  6996  0013EC  0BFC               	andlw	-4
  6997  0013EE  19E7               	xorwf	??_P2PTasks& (0+255),w,b
  6998  0013F0  6F60               	movwf	_rxMessage& (0+255),b
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;miwi_p2p.c: 462: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
  7002  0013F2  A633               	btfss	_MACRxPacket,3,c
  7003  0013F4  D002               	bra	u11215
  7004  0013F6  8760               	bsf	_rxMessage& (0+255),3,b
  7005  0013F8  D002               	bra	u11217
  7006  0013FA                     u11215:
  7007  0013FA  0100               	movlb	0	; () banked
  7008  0013FC  9760               	bcf	_rxMessage& (0+255),3,b
  7009  0013FE                     u11217:
  7010                           
  7011                           ;miwi_p2p.c: 463: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
  7012  0013FE  5033               	movf	_MACRxPacket,w,c
  7013  001400  0B03               	andlw	3
  7014  001402  06E8               	decf	wreg,f,c
  7015  001404  E103               	bnz	u11220
  7016  001406  6BE7               	clrf	??_P2PTasks& (0+255),b
  7017  001408  2BE7               	incf	??_P2PTasks& (0+255),f,b
  7018  00140A  D002               	goto	u11238
  7019  00140C                     u11220:
  7020  00140C  0100               	movlb	0	; () banked
  7021  00140E  6BE7               	clrf	??_P2PTasks& (0+255),b
  7022  001410                     u11238:
  7023  001410  3BE7               	swapf	??_P2PTasks& (0+255),f,b
  7024  001412  47E7               	rlncf	??_P2PTasks& (0+255),f,b
  7025  001414  5160               	movf	_rxMessage& (0+255),w,b
  7026  001416  19E7               	xorwf	??_P2PTasks& (0+255),w,b
  7027  001418  0BDF               	andlw	-33
  7028  00141A  19E7               	xorwf	??_P2PTasks& (0+255),w,b
  7029  00141C  6F60               	movwf	_rxMessage& (0+255),b
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;miwi_p2p.c: 464: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
  7033  00141E  AE33               	btfss	_MACRxPacket,7,c
  7034  001420  D002               	bra	u11245
  7035  001422  8D60               	bsf	_rxMessage& (0+255),6,b
  7036  001424  D002               	bra	u11247
  7037  001426                     u11245:
  7038  001426  0100               	movlb	0	; () banked
  7039  001428  9D60               	bcf	_rxMessage& (0+255),6,b
  7040  00142A                     u11247:
  7041                           
  7042                           ; BSR set to: 0
  7043                           ;miwi_p2p.c: 465: if( MACRxPacket.flags.bits.sourcePrsnt )
  7044  00142A  AE33               	btfss	_MACRxPacket,7,c
  7045  00142C  D004               	goto	l11448
  7046                           
  7047                           ; BSR set to: 0
  7048                           ;miwi_p2p.c: 466: {
  7049                           ;miwi_p2p.c: 467: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
  7050  00142E  C034  F063         	movff	_MACRxPacket+1,_rxMessage+3
  7051  001432  C035  F064         	movff	_MACRxPacket+2,_rxMessage+4
  7052  001436                     l11448:
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;miwi_p2p.c: 468: }
  7056                           ;miwi_p2p.c: 470: rxMessage.SourcePANID.Val = MACRxPacket.SourcePANID.Val;
  7057  001436  C03C  F061         	movff	_MACRxPacket+9,_rxMessage+1
  7058  00143A  C03D  F062         	movff	_MACRxPacket+10,_rxMessage+2
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;miwi_p2p.c: 473: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
  7062  00143E  C038  F067         	movff	_MACRxPacket+5,_rxMessage+7
  7063                           
  7064                           ;miwi_p2p.c: 474: rxMessage.Payload = MACRxPacket.Payload;
  7065  001442  C036  F065         	movff	_MACRxPacket+3,_rxMessage+5
  7066  001446  C037  F066         	movff	_MACRxPacket+4,_rxMessage+6
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;miwi_p2p.c: 483: rxMessage.PacketLQI = MACRxPacket.LQIValue;
  7070  00144A  C03A  F069         	movff	_MACRxPacket+7,_rxMessage+9
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;miwi_p2p.c: 484: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
  7074  00144E  C039  F068         	movff	_MACRxPacket+6,_rxMessage+8
  7075                           
  7076                           ; BSR set to: 0
  7077                           ;miwi_p2p.c: 487: if( rxMessage.flags.bits.command )
  7078  001452  AB60               	btfss	_rxMessage& (0+255),5,b
  7079  001454  D1A1               	goto	l473
  7080  001456  D183               	goto	l11620
  7081  001458                     l11462:
  7082                           
  7083                           ;miwi_p2p.c: 498: {
  7084                           ;miwi_p2p.c: 505: MiMAC_DiscardPacket();
  7085  001458  ECBB  F019         	call	_MiMAC_DiscardPacket	;wreg free
  7086                           
  7087                           ;miwi_p2p.c: 506: break;
  7088  00145C  D19E               	goto	l517
  7089  00145E                     l11468:
  7090                           
  7091                           ; BSR set to: 0
  7092                           ;miwi_p2p.c: 631: {
  7093                           ;miwi_p2p.c: 632: if(ConnMode > 0x02)
  7094  00145E  0E02               	movlw	2
  7095  001460  65FD               	cpfsgt	_ConnMode& (0+255),b
  7096  001462  D001               	goto	l11472
  7097  001464  D7F9               	goto	l11462
  7098  001466                     l11472:
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;miwi_p2p.c: 636: }
  7102                           ;miwi_p2p.c: 637: if( currentChannel != rxMessage.Payload[1] )
  7103  001466  EE20 F001          	lfsr	2,1
  7104  00146A  5165               	movf	(_rxMessage+5)& (0+255),w,b
  7105  00146C  26D9               	addwf	fsr2l,f,c
  7106  00146E  5166               	movf	(_rxMessage+6)& (0+255),w,b
  7107  001470  22DA               	addwfc	fsr2h,f,c
  7108  001472  51AD               	movf	_currentChannel& (0+255),w,b
  7109  001474  18DE               	xorwf	postinc2,w,c
  7110  001476  E1F0               	bnz	l11462
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;miwi_p2p.c: 641: }
  7114                           ;miwi_p2p.c: 643: {TxData = 0;};
  7115  001478  6B95               	clrf	_TxData& (0+255),b
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;miwi_p2p.c: 644: TxBuffer[TxData++] = 0x97;
  7119  00147A  0E8E               	movlw	low _TxBuffer
  7120  00147C  2595               	addwf	_TxData& (0+255),w,b
  7121  00147E  6ED9               	movwf	fsr2l,c
  7122  001480  6ADA               	clrf	fsr2h,c
  7123  001482  0E01               	movlw	high _TxBuffer
  7124  001484  22DA               	addwfc	fsr2h,f,c
  7125  001486  0E97               	movlw	151
  7126  001488  6EDF               	movwf	indf2,c
  7127                           
  7128                           ; BSR set to: 0
  7129  00148A  2B95               	incf	_TxData& (0+255),f,b
  7130                           
  7131                           ; BSR set to: 0
  7132                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = P2PCapacityInfo;
  7133  00148C  0E8E               	movlw	low _TxBuffer
  7134  00148E  2595               	addwf	_TxData& (0+255),w,b
  7135  001490  6ED9               	movwf	fsr2l,c
  7136  001492  6ADA               	clrf	fsr2h,c
  7137  001494  0E01               	movlw	high _TxBuffer
  7138  001496  22DA               	addwfc	fsr2h,f,c
  7139  001498  C091  FFDF         	movff	_P2PCapacityInfo,indf2
  7140  00149C  2B95               	incf	_TxData& (0+255),f,b
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;miwi_p2p.c: 647: for(i = 0; i < 1; i++)
  7144  00149E  6BF3               	clrf	P2PTasks@i& (0+255),b
  7145  0014A0                     l11488:
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;miwi_p2p.c: 648: {
  7149                           ;miwi_p2p.c: 649: TxBuffer[TxData++] = AdditionalNodeID[i];
  7150  0014A0  51F3               	movf	P2PTasks@i& (0+255),w,b
  7151  0014A2  0FFB               	addlw	low _AdditionalNodeID
  7152  0014A4  6ED9               	movwf	fsr2l,c
  7153  0014A6  6ADA               	clrf	fsr2h,c
  7154  0014A8  0E8E               	movlw	low _TxBuffer
  7155  0014AA  2595               	addwf	_TxData& (0+255),w,b
  7156  0014AC  6EE1               	movwf	fsr1l,c
  7157  0014AE  6AE2               	clrf	fsr1h,c
  7158  0014B0  0E01               	movlw	high _TxBuffer
  7159  0014B2  22E2               	addwfc	fsr1h,f,c
  7160  0014B4  CFDF FFE7          	movff	indf2,indf1
  7161                           
  7162                           ; BSR set to: 0
  7163  0014B8  2B95               	incf	_TxData& (0+255),f,b
  7164                           
  7165                           ; BSR set to: 0
  7166  0014BA  2BF3               	incf	P2PTasks@i& (0+255),f,b
  7167                           
  7168                           ; BSR set to: 0
  7169  0014BC  51F3               	movf	P2PTasks@i& (0+255),w,b
  7170  0014BE  E0F0               	bz	l11488
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;miwi_p2p.c: 650: }
  7174                           ;miwi_p2p.c: 652: MiMAC_DiscardPacket();
  7175  0014C0  ECBB  F019         	call	_MiMAC_DiscardPacket	;wreg free
  7176                           
  7177                           ;miwi_p2p.c: 663: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
  7178  0014C4  C061  F0CA         	movff	_rxMessage+1,SendPacket@DestinationPANID
  7179  0014C8  C062  F0CB         	movff	_rxMessage+2,SendPacket@DestinationPANID+1
  7180  0014CC  C063  F0CC         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7181  0014D0  C064  F0CD         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7182  0014D4  0E01               	movlw	1
  7183  0014D6  0100               	movlb	0	; () banked
  7184  0014D8  6FCE               	movwf	SendPacket@isCommand& (0+255),b
  7185  0014DA  0E00               	movlw	0
  7186  0014DC  B760               	btfsc	_rxMessage& (0+255),3,b
  7187  0014DE  0E01               	movlw	1
  7188  0014E0  6FCF               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7189  0014E2  0E00               	movlw	0
  7190  0014E4  EC54  F012         	call	_SendPacket
  7191                           
  7192                           ;miwi_p2p.c: 668: }
  7193                           ;miwi_p2p.c: 669: break;
  7194  0014E8  D158               	goto	l517
  7195  0014EA                     l484:
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;miwi_p2p.c: 677: {
  7199                           ;miwi_p2p.c: 678: {TxData = 0;};
  7200  0014EA  6B95               	clrf	_TxData& (0+255),b
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;miwi_p2p.c: 679: TxBuffer[TxData++] = 0x92;
  7204  0014EC  0E8E               	movlw	low _TxBuffer
  7205  0014EE  2595               	addwf	_TxData& (0+255),w,b
  7206  0014F0  6ED9               	movwf	fsr2l,c
  7207  0014F2  6ADA               	clrf	fsr2h,c
  7208  0014F4  0E01               	movlw	high _TxBuffer
  7209  0014F6  22DA               	addwfc	fsr2h,f,c
  7210  0014F8  0E92               	movlw	146
  7211  0014FA  6EDF               	movwf	indf2,c
  7212                           
  7213                           ; BSR set to: 0
  7214  0014FC  2B95               	incf	_TxData& (0+255),f,b
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;miwi_p2p.c: 681: for(i = 0; i < 40; i++)
  7218  0014FE  6BF3               	clrf	P2PTasks@i& (0+255),b
  7219  001500                     l11510:
  7220                           
  7221                           ; BSR set to: 0
  7222                           ;miwi_p2p.c: 682: {
  7223                           ;miwi_p2p.c: 684: if( ConnectionTable[i].status.bits.isValid )
  7224  001500  51F3               	movf	P2PTasks@i& (0+255),w,b
  7225  001502  0D0E               	mullw	14
  7226  001504  0EAC               	movlw	low (_ConnectionTable+12)
  7227  001506  24F3               	addwf	prodl,w,c
  7228  001508  6ED9               	movwf	fsr2l,c
  7229  00150A  0E02               	movlw	high (_ConnectionTable+12)
  7230  00150C  20F4               	addwfc	prodh,w,c
  7231  00150E  6EDA               	movwf	fsr2h,c
  7232  001510  AEDF               	btfss	indf2,7,c
  7233  001512  D035               	goto	l11522
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;miwi_p2p.c: 685: {
  7237                           ;miwi_p2p.c: 687: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7238  001514  C063  F016         	movff	_rxMessage+3,isSameAddress@Address1
  7239  001518  C064  F017         	movff	_rxMessage+4,isSameAddress@Address1+1
  7240  00151C  51F3               	movf	P2PTasks@i& (0+255),w,b
  7241  00151E  0D0E               	mullw	14
  7242  001520  0EA4               	movlw	low (_ConnectionTable+4)
  7243  001522  24F3               	addwf	prodl,w,c
  7244  001524  6E18               	movwf	isSameAddress@Address2,c
  7245  001526  0E02               	movlw	high (_ConnectionTable+4)
  7246  001528  20F4               	addwfc	prodh,w,c
  7247  00152A  6E19               	movwf	isSameAddress@Address2+1,c
  7248  00152C  ECAC  F018         	call	_isSameAddress	;wreg free
  7249  001530  0900               	iorlw	0
  7250  001532  E025               	bz	l11522
  7251                           
  7252                           ;miwi_p2p.c: 688: {
  7253                           ;miwi_p2p.c: 691: ConnectionTable[i].status.Val = 0;
  7254  001534  0100               	movlb	0	; () banked
  7255  001536  51F3               	movf	P2PTasks@i& (0+255),w,b
  7256  001538  0D0E               	mullw	14
  7257  00153A  0EAC               	movlw	low (_ConnectionTable+12)
  7258  00153C  24F3               	addwf	prodl,w,c
  7259  00153E  6ED9               	movwf	fsr2l,c
  7260  001540  0E02               	movlw	high (_ConnectionTable+12)
  7261  001542  20F4               	addwfc	prodh,w,c
  7262  001544  6EDA               	movwf	fsr2h,c
  7263  001546  6ADF               	clrf	indf2,c
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;miwi_p2p.c: 693: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * siz
      +                          eof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7267  001548  51F3               	movf	P2PTasks@i& (0+255),w,b
  7268  00154A  0D0E               	mullw	14
  7269  00154C  0EA0               	movlw	low _ConnectionTable
  7270  00154E  24F3               	addwf	prodl,w,c
  7271  001550  6E17               	movwf	EEPROM_Write@dest,c
  7272  001552  0E02               	movlw	high _ConnectionTable
  7273  001554  20F4               	addwfc	prodh,w,c
  7274  001556  6E18               	movwf	EEPROM_Write@dest+1,c
  7275  001558  51F3               	movf	P2PTasks@i& (0+255),w,b
  7276  00155A  0D0E               	mullw	14
  7277  00155C  50F3               	movf	prodl,w,c
  7278  00155E  0F04               	addlw	4
  7279  001560  6E19               	movwf	EEPROM_Write@addr,c
  7280  001562  0E0E               	movlw	14
  7281  001564  6E1A               	movwf	EEPROM_Write@count,c
  7282  001566  ECF8  F014         	call	_EEPROM_Write	;wreg free
  7283                           
  7284                           ;miwi_p2p.c: 695: TxBuffer[TxData++] = 0x00;
  7285  00156A  0E8E               	movlw	low _TxBuffer
  7286  00156C  0100               	movlb	0	; () banked
  7287  00156E  2595               	addwf	_TxData& (0+255),w,b
  7288  001570  6ED9               	movwf	fsr2l,c
  7289  001572  6ADA               	clrf	fsr2h,c
  7290  001574  0E01               	movlw	high _TxBuffer
  7291  001576  22DA               	addwfc	fsr2h,f,c
  7292  001578  6ADF               	clrf	indf2,c
  7293                           
  7294                           ; BSR set to: 0
  7295  00157A  2B95               	incf	_TxData& (0+255),f,b
  7296                           
  7297                           ;miwi_p2p.c: 697: break;
  7298  00157C  D005               	goto	l11526
  7299  00157E                     l11522:
  7300  00157E  0100               	movlb	0	; () banked
  7301  001580  2BF3               	incf	P2PTasks@i& (0+255),f,b
  7302                           
  7303                           ; BSR set to: 0
  7304  001582  0E27               	movlw	39
  7305  001584  65F3               	cpfsgt	P2PTasks@i& (0+255),b
  7306  001586  D7BC               	goto	l11510
  7307  001588                     l11526:
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;miwi_p2p.c: 698: }
  7311                           ;miwi_p2p.c: 699: }
  7312                           ;miwi_p2p.c: 700: }
  7313                           ;miwi_p2p.c: 702: MiMAC_DiscardPacket();
  7314  001588  ECBB  F019         	call	_MiMAC_DiscardPacket	;wreg free
  7315                           
  7316                           ;miwi_p2p.c: 704: if( i == 40 )
  7317  00158C  0E28               	movlw	40
  7318  00158E  0100               	movlb	0	; () banked
  7319  001590  19F3               	xorwf	P2PTasks@i& (0+255),w,b
  7320  001592  E109               	bnz	l11534
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;miwi_p2p.c: 705: {
  7324                           ;miwi_p2p.c: 707: TxBuffer[TxData++] = 0xF0;
  7325  001594  0E8E               	movlw	low _TxBuffer
  7326  001596  2595               	addwf	_TxData& (0+255),w,b
  7327  001598  6ED9               	movwf	fsr2l,c
  7328  00159A  6ADA               	clrf	fsr2h,c
  7329  00159C  0E01               	movlw	high _TxBuffer
  7330  00159E  22DA               	addwfc	fsr2h,f,c
  7331  0015A0  0EF0               	movlw	240
  7332  0015A2  6EDF               	movwf	indf2,c
  7333                           
  7334                           ; BSR set to: 0
  7335  0015A4  2B95               	incf	_TxData& (0+255),f,b
  7336  0015A6                     l11534:
  7337                           
  7338                           ; BSR set to: 0
  7339                           ;miwi_p2p.c: 708: }
  7340                           ;miwi_p2p.c: 717: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
  7341  0015A6  C061  F0CA         	movff	_rxMessage+1,SendPacket@DestinationPANID
  7342  0015AA  C062  F0CB         	movff	_rxMessage+2,SendPacket@DestinationPANID+1
  7343  0015AE  C063  F0CC         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7344  0015B2  C064  F0CD         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7345  0015B6  0E01               	movlw	1
  7346  0015B8  6FCE               	movwf	SendPacket@isCommand& (0+255),b
  7347  0015BA  0E00               	movlw	0
  7348  0015BC  B760               	btfsc	_rxMessage& (0+255),3,b
  7349  0015BE  0E01               	movlw	1
  7350  0015C0  6FCF               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7351  0015C2  0E00               	movlw	0
  7352  0015C4  EC54  F012         	call	_SendPacket
  7353                           
  7354                           ;miwi_p2p.c: 723: }
  7355                           ;miwi_p2p.c: 724: break;
  7356  0015C8  D0E8               	goto	l517
  7357  0015CA                     l11536:
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;miwi_p2p.c: 732: case 0x01:
  7361                           ;miwi_p2p.c: 734: if( myPANID.Val == 0xFFFF )
  7362  0015CA  299B               	incf	_myPANID& (0+255),w,b
  7363  0015CC  E115               	bnz	l11542
  7364  0015CE  299C               	incf	(_myPANID+1)& (0+255),w,b
  7365  0015D0  E113               	bnz	l11542
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;miwi_p2p.c: 735: {
  7369                           ;miwi_p2p.c: 736: myPANID.Val = rxMessage.SourcePANID.Val;
  7370  0015D2  C061  F09B         	movff	_rxMessage+1,_myPANID
  7371  0015D6  C062  F09C         	movff	_rxMessage+2,_myPANID+1
  7372                           
  7373                           ;miwi_p2p.c: 737: {
  7374                           ;miwi_p2p.c: 738: uint16_t tmp = 0xFFFF;
  7375  0015DA  69EC               	setf	P2PTasks@tmp& (0+255),b
  7376  0015DC  69ED               	setf	(P2PTasks@tmp+1)& (0+255),b
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;miwi_p2p.c: 739: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
  7380  0015DE  0E9B               	movlw	low _myPANID
  7381  0015E0  6E1A               	movwf	MiMAC_SetAltAddress@PANID,c
  7382  0015E2  0EEC               	movlw	P2PTasks@tmp& (0+255)
  7383  0015E4  EC4D  F016         	call	_MiMAC_SetAltAddress
  7384                           
  7385                           ;miwi_p2p.c: 740: }
  7386                           ;miwi_p2p.c: 742: EEPROM_Write((uint8_t *)myPANID.v, 0x00, 2);
  7387  0015E8  0E9B               	movlw	low _myPANID
  7388  0015EA  6E17               	movwf	EEPROM_Write@dest,c
  7389  0015EC  6A18               	clrf	EEPROM_Write@dest+1,c
  7390  0015EE  6A19               	clrf	EEPROM_Write@addr,c
  7391  0015F0  0E02               	movlw	2
  7392  0015F2  6E1A               	movwf	EEPROM_Write@count,c
  7393  0015F4  ECF8  F014         	call	_EEPROM_Write	;wreg free
  7394  0015F8                     l11542:
  7395                           
  7396                           ;miwi_p2p.c: 744: }
  7397                           ;miwi_p2p.c: 746: AddConnection();
  7398  0015F8  ECE7  F00F         	call	_AddConnection	;wreg free
  7399                           
  7400                           ;miwi_p2p.c: 748: myConnectionIndex_in_PanCo = rxMessage.Payload[2];
  7401  0015FC  0100               	movlb	0	; () banked
  7402  0015FE  EE20 F002          	lfsr	2,2
  7403  001602  5165               	movf	(_rxMessage+5)& (0+255),w,b
  7404  001604  26D9               	addwf	fsr2l,f,c
  7405  001606  5166               	movf	(_rxMessage+6)& (0+255),w,b
  7406  001608  22DA               	addwfc	fsr2h,f,c
  7407  00160A  50DF               	movf	indf2,w,c
  7408  00160C  6FAE               	movwf	_myConnectionIndex_in_PanCo& (0+255),b
  7409                           
  7410                           ; BSR set to: 0
  7411                           ;miwi_p2p.c: 749: EEPROM_Write( (uint8_t *)&myConnectionIndex_in_PanCo, 0xBB, 1);
  7412  00160E  0EAE               	movlw	low _myConnectionIndex_in_PanCo
  7413  001610  6E17               	movwf	EEPROM_Write@dest,c
  7414  001612  6A18               	clrf	EEPROM_Write@dest+1,c
  7415  001614  0EBB               	movlw	187
  7416  001616  6E19               	movwf	EEPROM_Write@addr,c
  7417  001618  0E01               	movlw	1
  7418  00161A  6E1A               	movwf	EEPROM_Write@count,c
  7419  00161C  ECF8  F014         	call	_EEPROM_Write	;wreg free
  7420                           
  7421                           ;miwi_p2p.c: 753: P2PStatus.bits.SaveConnection = 1;
  7422  001620  0100               	movlb	0	; () banked
  7423  001622  8392               	bsf	_P2PStatus& (0+255),1,b	;volatile
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;miwi_p2p.c: 754: nvmDelayTick = MiWi_TickGet();
  7427  001624  EC19  F017         	call	_MiWi_TickGet	;wreg free
  7428  001628  C016  F072         	movff	?_MiWi_TickGet,_nvmDelayTick
  7429  00162C  C017  F073         	movff	?_MiWi_TickGet+1,_nvmDelayTick+1
  7430  001630  C018  F074         	movff	?_MiWi_TickGet+2,_nvmDelayTick+2
  7431  001634  C019  F075         	movff	?_MiWi_TickGet+3,_nvmDelayTick+3
  7432                           
  7433                           ;miwi_p2p.c: 756: break;
  7434  001638  D70F               	goto	l11462
  7435  00163A                     l11554:
  7436                           
  7437                           ; BSR set to: 0
  7438  00163A  EE20 F001          	lfsr	2,1
  7439  00163E  5165               	movf	(_rxMessage+5)& (0+255),w,b
  7440  001640  26D9               	addwf	fsr2l,f,c
  7441  001642  5166               	movf	(_rxMessage+6)& (0+255),w,b
  7442  001644  22DA               	addwfc	fsr2h,f,c
  7443  001646  50DF               	movf	indf2,w,c
  7444                           
  7445                           ; Switch size 1, requested type "speed"
  7446                           ; Number of cases is 2, Range of values is 0 to 1
  7447                           ; switch strategies available:
  7448                           ; Name         Instructions Cycles
  7449                           ; simple_byte            7     4 (average)
  7450                           ;	Chosen strategy is simple_byte
  7451  001648  E0C0               	bz	l11536
  7452  00164A  0A01               	xorlw	1	; case 1
  7453  00164C  E0BE               	bz	l11536
  7454  00164E  D704               	goto	l11462
  7455  001650                     l497:
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;miwi_p2p.c: 766: {
  7459                           ;miwi_p2p.c: 767: if( P2PStatus.bits.Resync )
  7460  001650  BB92               	btfsc	_P2PStatus& (0+255),5,b	;volatile
  7461                           
  7462                           ; BSR set to: 0
  7463                           ;miwi_p2p.c: 768: {
  7464                           ;miwi_p2p.c: 769: P2PStatus.bits.Resync = 0;
  7465  001652  9B92               	bcf	_P2PStatus& (0+255),5,b	;volatile
  7466  001654  D701               	goto	l11462
  7467  001656                     l11562:
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;miwi_p2p.c: 817: {
  7471                           ;miwi_p2p.c: 818: if( rxMessage.Payload[1] == 0x00 )
  7472  001656  EE20 F001          	lfsr	2,1
  7473  00165A  5165               	movf	(_rxMessage+5)& (0+255),w,b
  7474  00165C  26D9               	addwf	fsr2l,f,c
  7475  00165E  5166               	movf	(_rxMessage+6)& (0+255),w,b
  7476  001660  22DA               	addwfc	fsr2h,f,c
  7477  001662  50DF               	movf	indf2,w,c
  7478  001664  E001 D6F8          	bnz	l11462
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;miwi_p2p.c: 819: {
  7482                           ;miwi_p2p.c: 820: for(i = 0; i < 40; i++)
  7483  001668  6BF3               	clrf	P2PTasks@i& (0+255),b
  7484  00166A                     l11570:
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;miwi_p2p.c: 821: {
  7488                           ;miwi_p2p.c: 823: if( ConnectionTable[i].status.bits.isValid )
  7489  00166A  51F3               	movf	P2PTasks@i& (0+255),w,b
  7490  00166C  0D0E               	mullw	14
  7491  00166E  0EAC               	movlw	low (_ConnectionTable+12)
  7492  001670  24F3               	addwf	prodl,w,c
  7493  001672  6ED9               	movwf	fsr2l,c
  7494  001674  0E02               	movlw	high (_ConnectionTable+12)
  7495  001676  20F4               	addwfc	prodh,w,c
  7496  001678  6EDA               	movwf	fsr2h,c
  7497  00167A  AEDF               	btfss	indf2,7,c
  7498  00167C  D02C               	goto	l11578
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;miwi_p2p.c: 824: {
  7502                           ;miwi_p2p.c: 826: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7503  00167E  C063  F016         	movff	_rxMessage+3,isSameAddress@Address1
  7504  001682  C064  F017         	movff	_rxMessage+4,isSameAddress@Address1+1
  7505  001686  51F3               	movf	P2PTasks@i& (0+255),w,b
  7506  001688  0D0E               	mullw	14
  7507  00168A  0EA4               	movlw	low (_ConnectionTable+4)
  7508  00168C  24F3               	addwf	prodl,w,c
  7509  00168E  6E18               	movwf	isSameAddress@Address2,c
  7510  001690  0E02               	movlw	high (_ConnectionTable+4)
  7511  001692  20F4               	addwfc	prodh,w,c
  7512  001694  6E19               	movwf	isSameAddress@Address2+1,c
  7513  001696  ECAC  F018         	call	_isSameAddress	;wreg free
  7514  00169A  0900               	iorlw	0
  7515  00169C  E01C               	bz	l11578
  7516                           
  7517                           ;miwi_p2p.c: 827: {
  7518                           ;miwi_p2p.c: 829: ConnectionTable[i].status.Val = 0;
  7519  00169E  0100               	movlb	0	; () banked
  7520  0016A0  51F3               	movf	P2PTasks@i& (0+255),w,b
  7521  0016A2  0D0E               	mullw	14
  7522  0016A4  0EAC               	movlw	low (_ConnectionTable+12)
  7523  0016A6  24F3               	addwf	prodl,w,c
  7524  0016A8  6ED9               	movwf	fsr2l,c
  7525  0016AA  0E02               	movlw	high (_ConnectionTable+12)
  7526  0016AC  20F4               	addwfc	prodh,w,c
  7527  0016AE  6EDA               	movwf	fsr2h,c
  7528  0016B0  6ADF               	clrf	indf2,c
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;miwi_p2p.c: 831: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * siz
      +                          eof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7532  0016B2  51F3               	movf	P2PTasks@i& (0+255),w,b
  7533  0016B4  0D0E               	mullw	14
  7534  0016B6  0EA0               	movlw	low _ConnectionTable
  7535  0016B8  24F3               	addwf	prodl,w,c
  7536  0016BA  6E17               	movwf	EEPROM_Write@dest,c
  7537  0016BC  0E02               	movlw	high _ConnectionTable
  7538  0016BE  20F4               	addwfc	prodh,w,c
  7539  0016C0  6E18               	movwf	EEPROM_Write@dest+1,c
  7540  0016C2  51F3               	movf	P2PTasks@i& (0+255),w,b
  7541  0016C4  0D0E               	mullw	14
  7542  0016C6  50F3               	movf	prodl,w,c
  7543  0016C8  0F04               	addlw	4
  7544  0016CA  6E19               	movwf	EEPROM_Write@addr,c
  7545  0016CC  0E0E               	movlw	14
  7546  0016CE  6E1A               	movwf	EEPROM_Write@count,c
  7547  0016D0  ECF8  F014         	call	_EEPROM_Write	;wreg free
  7548                           
  7549                           ;miwi_p2p.c: 833: break;
  7550  0016D4  D6C1               	goto	l11462
  7551  0016D6                     l11578:
  7552  0016D6  0100               	movlb	0	; () banked
  7553  0016D8  2BF3               	incf	P2PTasks@i& (0+255),f,b
  7554                           
  7555                           ; BSR set to: 0
  7556  0016DA  0E27               	movlw	39
  7557  0016DC  65F3               	cpfsgt	P2PTasks@i& (0+255),b
  7558  0016DE  D7C5               	goto	l11570
  7559  0016E0  D6BB               	goto	l11462
  7560  0016E2                     l11584:
  7561                           
  7562                           ; BSR set to: 0
  7563                           ;miwi_p2p.c: 1016: {
  7564                           ;miwi_p2p.c: 1017: if (!role)
  7565  0016E2  5049               	movf	_role,w,c
  7566  0016E4  E001 D6B8          	bnz	l11462
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;miwi_p2p.c: 1018: {
  7570                           ;miwi_p2p.c: 1019: rec_ack = 1;
  7571  0016E8  0E01               	movlw	1
  7572  0016EA  6F9A               	movwf	_rec_ack& (0+255),b
  7573  0016EC  D6B5               	goto	l11462
  7574  0016EE                     l11592:
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;miwi_p2p.c: 1029: {
  7578                           ;miwi_p2p.c: 1030: if (!role)
  7579  0016EE  5049               	movf	_role,w,c
  7580  0016F0  E001 D6B2          	bnz	l11462
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;miwi_p2p.c: 1031: {
  7584                           ;miwi_p2p.c: 1033: end_nodes = rxMessage.Payload[1]-1;
  7585  0016F4  EE20 F001          	lfsr	2,1
  7586  0016F8  5165               	movf	(_rxMessage+5)& (0+255),w,b
  7587  0016FA  26D9               	addwf	fsr2l,f,c
  7588  0016FC  5166               	movf	(_rxMessage+6)& (0+255),w,b
  7589  0016FE  22DA               	addwfc	fsr2h,f,c
  7590  001700  50DF               	movf	indf2,w,c
  7591  001702  6FE7               	movwf	??_P2PTasks& (0+255),b
  7592  001704  05E7               	decf	??_P2PTasks& (0+255),w,b
  7593  001706  6F98               	movwf	_end_nodes& (0+255),b
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;miwi_p2p.c: 1034: store_connection_tb(rxMessage.Payload);
  7597  001708  C065  F01D         	movff	_rxMessage+5,store_connection_tb@payload
  7598  00170C  C066  F01E         	movff	_rxMessage+6,store_connection_tb@payload+1
  7599  001710  EC1A  F011         	call	_store_connection_tb	;wreg free
  7600  001714  D6A1               	goto	l11462
  7601  001716                     l11602:
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;miwi_p2p.c: 1043: {
  7605                           ;miwi_p2p.c: 1044: if (role)
  7606  001716  5049               	movf	_role,w,c
  7607  001718  E101 D69E          	bz	l11462
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;miwi_p2p.c: 1045: {
  7611                           ;miwi_p2p.c: 1047: uint8_t final_index;
  7612                           ;miwi_p2p.c: 1048: final_index = Find_Index(rxMessage.Payload);
  7613  00171C  C065  F016         	movff	_rxMessage+5,Find_Index@DestAddr
  7614  001720  C066  F017         	movff	_rxMessage+6,Find_Index@DestAddr+1
  7615  001724  ECA0  F013         	call	_Find_Index	;wreg free
  7616  001728  0100               	movlb	0	; () banked
  7617  00172A  6FEE               	movwf	P2PTasks@final_index& (0+255),b
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;miwi_p2p.c: 1049: if (final_index != 0xFF)
  7621  00172C  29EE               	incf	P2PTasks@final_index& (0+255),w,b
  7622  00172E  E00D               	bz	l11610
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;miwi_p2p.c: 1050: {
  7626                           ;miwi_p2p.c: 1051: FW_Stat = Forward_Packet_PANCr_to_EDy (rxMessage.Payload , final_inde
      +                          x , rxMessage.SourceAddress);
  7627  001730  C065  F0E0         	movff	_rxMessage+5,Forward_Packet_PANCr_to_EDy@fw_payload
  7628  001734  C066  F0E1         	movff	_rxMessage+6,Forward_Packet_PANCr_to_EDy@fw_payload+1
  7629  001738  C0EE  F0E2         	movff	P2PTasks@final_index,Forward_Packet_PANCr_to_EDy@index
  7630  00173C  C063  F0E3         	movff	_rxMessage+3,Forward_Packet_PANCr_to_EDy@EDxAddress
  7631  001740  C064  F0E4         	movff	_rxMessage+4,Forward_Packet_PANCr_to_EDy@EDxAddress+1
  7632  001744  EC53  F013         	call	_Forward_Packet_PANCr_to_EDy	;wreg free
  7633  001748  6FEB               	movwf	P2PTasks@FW_Stat& (0+255),b
  7634  00174A                     l11610:
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;miwi_p2p.c: 1052: }
  7638                           ;miwi_p2p.c: 1054: if (FW_Stat)
  7639  00174A  51EB               	movf	P2PTasks@FW_Stat& (0+255),w,b
  7640  00174C  E101 D684          	bz	l11462
  7641                           
  7642                           ; BSR set to: 0
  7643                           ;miwi_p2p.c: 1055: {
  7644                           ;miwi_p2p.c: 1056: SW_Ack_SrED (rxMessage.SourceAddress);
  7645  001750  C063  F0DA         	movff	_rxMessage+3,SW_Ack_SrED@Dest_Addr
  7646  001754  C064  F0DB         	movff	_rxMessage+4,SW_Ack_SrED@Dest_Addr+1
  7647  001758  EC51  F018         	call	_SW_Ack_SrED	;wreg free
  7648  00175C  D67D               	goto	l11462
  7649  00175E                     l11620:
  7650                           
  7651                           ; BSR set to: 0
  7652  00175E  C065  FFD9         	movff	_rxMessage+5,fsr2l
  7653  001762  C066  FFDA         	movff	_rxMessage+6,fsr2h
  7654  001766  50DF               	movf	indf2,w,c
  7655                           
  7656                           ; Switch size 1, requested type "speed"
  7657                           ; Number of cases is 9, Range of values is 119 to 218
  7658                           ; switch strategies available:
  7659                           ; Name         Instructions Cycles
  7660                           ; simple_byte           28    15 (average)
  7661                           ;	Chosen strategy is simple_byte
  7662  001768  0A77               	xorlw	119	; case 119
  7663  00176A  E0C1               	bz	l11592
  7664  00176C  0AF6               	xorlw	246	; case 129
  7665  00176E  E101 D673          	bz	l11462
  7666  001772  0A03               	xorlw	3	; case 130
  7667  001774  E101 D6B9          	bz	l484
  7668  001778  0A05               	xorlw	5	; case 135
  7669  00177A  E101 D670          	bz	l11468
  7670  00177E  0A16               	xorlw	22	; case 145
  7671  001780  E101 D75B          	bz	l11554
  7672  001784  0A03               	xorlw	3	; case 146
  7673  001786  E101 D766          	bz	l11562
  7674  00178A  0A05               	xorlw	5	; case 151
  7675  00178C  E101 D760          	bz	l497
  7676  001790  0A5B               	xorlw	91	; case 204
  7677  001792  E0C1               	bz	l11602
  7678  001794  0A16               	xorlw	22	; case 218
  7679  001796  E0A5               	bz	l11584
  7680  001798                     l473:
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;miwi_p2p.c: 1101: else
  7684                           ;miwi_p2p.c: 1102: {
  7685                           ;miwi_p2p.c: 1103: P2PStatus.bits.RxHasUserData = 1;
  7686  001798  8792               	bsf	_P2PStatus& (0+255),3,b	;volatile
  7687  00179A                     l517:
  7688                           
  7689                           ;miwi_p2p.c: 1104: }
  7690                           ;miwi_p2p.c: 1107: if( P2PStatus.bits.DataRequesting && P2PStatus.bits.RxHasUserData )
  7691  00179A  0100               	movlb	0	; () banked
  7692  00179C  B592               	btfsc	_P2PStatus& (0+255),2,b	;volatile
  7693                           
  7694                           ; BSR set to: 0
  7695  00179E  A792               	btfss	_P2PStatus& (0+255),3,b	;volatile
  7696  0017A0  D001               	goto	l11626
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;miwi_p2p.c: 1108: {
  7700                           ;miwi_p2p.c: 1109: P2PStatus.bits.DataRequesting = 0;
  7701  0017A2  9592               	bcf	_P2PStatus& (0+255),2,b	;volatile
  7702  0017A4                     l11626:
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;miwi_p2p.c: 1110: }
  7706                           ;miwi_p2p.c: 1113: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
  7707  0017A4  5167               	movf	(_rxMessage+7)& (0+255),w,b
  7708  0017A6  E004               	bz	l521
  7709                           
  7710                           ; BSR set to: 0
  7711  0017A8  B992               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  7712  0017AA  D002               	goto	l521
  7713                           
  7714                           ; BSR set to: 0
  7715  0017AC  AB92               	btfss	_P2PStatus& (0+255),5,b	;volatile
  7716  0017AE  0012               	return	
  7717  0017B0                     l521:
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;miwi_p2p.c: 1114: {
  7721                           ;miwi_p2p.c: 1115: P2PStatus.bits.RxHasUserData = 0;
  7722  0017B0  9792               	bcf	_P2PStatus& (0+255),3,b	;volatile
  7723                           
  7724                           ; BSR set to: 0
  7725                           ;miwi_p2p.c: 1116: MiMAC_DiscardPacket();
  7726  0017B2  EFBB  F019         	goto	_MiMAC_DiscardPacket	;wreg free
  7727  0017B6                     __end_of_P2PTasks:
  7728                           	opt stack 0
  7729                           tblptru	equ	0xFF8
  7730                           tblptrh	equ	0xFF7
  7731                           tblptrl	equ	0xFF6
  7732                           tablat	equ	0xFF5
  7733                           prodh	equ	0xFF4
  7734                           prodl	equ	0xFF3
  7735                           intcon	equ	0xFF2
  7736                           intcon2	equ	0xFF1
  7737                           postinc0	equ	0xFEE
  7738                           wreg	equ	0xFE8
  7739                           indf1	equ	0xFE7
  7740                           postdec1	equ	0xFE5
  7741                           fsr1h	equ	0xFE2
  7742                           fsr1l	equ	0xFE1
  7743                           indf2	equ	0xFDF
  7744                           postinc2	equ	0xFDE
  7745                           postdec2	equ	0xFDD
  7746                           fsr2h	equ	0xFDA
  7747                           fsr2l	equ	0xFD9
  7748                           status	equ	0xFD8
  7749                           
  7750 ;; *************** function _store_connection_tb *****************
  7751 ;; Defined at:
  7752 ;;		line 150 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  payload         2   28[COMRAM] PTR unsigned char 
  7755 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  i               1   33[COMRAM] unsigned char 
  7758 ;;  j               1   32[COMRAM] unsigned char 
  7759 ;;  connections_    1    0        unsigned char 
  7760 ;;  k               1    0        unsigned char 
  7761 ;; Return value:  Size  Location     Type
  7762 ;;		None               void
  7763 ;; Registers used:
  7764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7765 ;; Tracked objects:
  7766 ;;		On entry : F/0
  7767 ;;		On exit  : F/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7773 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7774 ;;Total ram usage:        6 bytes
  7775 ;; Hardware stack levels used:    1
  7776 ;; Hardware stack levels required when called:    4
  7777 ;; This function calls:
  7778 ;;		_handle_lost_connection
  7779 ;; This function is called by:
  7780 ;;		_P2PTasks
  7781 ;; This function uses a non-reentrant model
  7782 ;;
  7783                           
  7784                           	psect	text28
  7785  002234                     __ptext28:
  7786                           	opt stack 0
  7787  002234                     _store_connection_tb:
  7788                           	opt stack 21
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;miwi_p2p.c: 154: for (i=4; i < 40; i++)
  7792                           
  7793                           ;incstack = 0
  7794  002234  0E04               	movlw	4
  7795  002236  6E22               	movwf	store_connection_tb@i,c
  7796  002238                     l11286:
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;miwi_p2p.c: 155: {
  7800                           ;miwi_p2p.c: 156: if (i % 4 == 0 && (i+3) < 40)
  7801  002238  C022  F01F         	movff	store_connection_tb@i,??_store_connection_tb
  7802  00223C  0E03               	movlw	3
  7803  00223E  161F               	andwf	??_store_connection_tb,f,c
  7804  002240  E161               	bnz	l11300
  7805                           
  7806                           ; BSR set to: 0
  7807  002242  5022               	movf	store_connection_tb@i,w,c
  7808  002244  6E1F               	movwf	??_store_connection_tb& (0+255),c
  7809  002246  6A20               	clrf	(??_store_connection_tb+1)& (0+255),c
  7810  002248  0E03               	movlw	3
  7811  00224A  261F               	addwf	??_store_connection_tb,f,c
  7812  00224C  0E00               	movlw	0
  7813  00224E  2220               	addwfc	??_store_connection_tb+1,f,c
  7814  002250  BE20               	btfsc	??_store_connection_tb+1,7,c
  7815  002252  D005               	goto	l11290
  7816  002254  5020               	movf	??_store_connection_tb+1,w,c
  7817  002256  E156               	bnz	l11300
  7818  002258  0E28               	movlw	40
  7819  00225A  5C1F               	subwf	??_store_connection_tb,w,c
  7820  00225C  E253               	bc	l11300
  7821  00225E                     l11290:
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;miwi_p2p.c: 157: {
  7825                           ;miwi_p2p.c: 158: j = payload[i+3];
  7826  00225E  5022               	movf	store_connection_tb@i,w,c
  7827  002260  241D               	addwf	store_connection_tb@payload,w,c
  7828  002262  6E1F               	movwf	??_store_connection_tb& (0+255),c
  7829  002264  0E00               	movlw	0
  7830  002266  201E               	addwfc	store_connection_tb@payload+1,w,c
  7831  002268  6E20               	movwf	(??_store_connection_tb+1)& (0+255),c
  7832  00226A  0E03               	movlw	3
  7833  00226C  241F               	addwf	??_store_connection_tb,w,c
  7834  00226E  6ED9               	movwf	fsr2l,c
  7835  002270  0E00               	movlw	0
  7836  002272  2020               	addwfc	??_store_connection_tb+1,w,c
  7837  002274  6EDA               	movwf	fsr2h,c
  7838  002276  50DF               	movf	indf2,w,c
  7839  002278  6E21               	movwf	store_connection_tb@j,c
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;miwi_p2p.c: 159: END_DEVICES_Short_Address[j].connection_slot = j;
  7843  00227A  5021               	movf	store_connection_tb@j,w,c
  7844  00227C  0D04               	mullw	4
  7845  00227E  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  7846  002280  24F3               	addwf	prodl,w,c
  7847  002282  6ED9               	movwf	fsr2l,c
  7848  002284  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  7849  002286  20F4               	addwfc	prodh,w,c
  7850  002288  6EDA               	movwf	fsr2h,c
  7851  00228A  C021  FFDF         	movff	store_connection_tb@j,indf2
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;miwi_p2p.c: 160: END_DEVICES_Short_Address[j].Address[0] = payload[i];
  7855  00228E  5022               	movf	store_connection_tb@i,w,c
  7856  002290  241D               	addwf	store_connection_tb@payload,w,c
  7857  002292  6ED9               	movwf	fsr2l,c
  7858  002294  0E00               	movlw	0
  7859  002296  201E               	addwfc	store_connection_tb@payload+1,w,c
  7860  002298  6EDA               	movwf	fsr2h,c
  7861  00229A  5021               	movf	store_connection_tb@j,w,c
  7862  00229C  0D04               	mullw	4
  7863  00229E  0E00               	movlw	low _END_DEVICES_Short_Address
  7864  0022A0  24F3               	addwf	prodl,w,c
  7865  0022A2  6EE1               	movwf	fsr1l,c
  7866  0022A4  0E02               	movlw	high _END_DEVICES_Short_Address
  7867  0022A6  20F4               	addwfc	prodh,w,c
  7868  0022A8  6EE2               	movwf	fsr1h,c
  7869  0022AA  CFDF FFE7          	movff	indf2,indf1
  7870                           
  7871                           ; BSR set to: 0
  7872                           ;miwi_p2p.c: 161: END_DEVICES_Short_Address[j].Address[1] = payload[i+1];
  7873  0022AE  5022               	movf	store_connection_tb@i,w,c
  7874  0022B0  241D               	addwf	store_connection_tb@payload,w,c
  7875  0022B2  6E1F               	movwf	??_store_connection_tb& (0+255),c
  7876  0022B4  0E00               	movlw	0
  7877  0022B6  201E               	addwfc	store_connection_tb@payload+1,w,c
  7878  0022B8  6E20               	movwf	(??_store_connection_tb+1)& (0+255),c
  7879  0022BA  281F               	incf	??_store_connection_tb,w,c
  7880  0022BC  6ED9               	movwf	fsr2l,c
  7881  0022BE  0E00               	movlw	0
  7882  0022C0  2020               	addwfc	??_store_connection_tb+1,w,c
  7883  0022C2  6EDA               	movwf	fsr2h,c
  7884  0022C4  5021               	movf	store_connection_tb@j,w,c
  7885  0022C6  0D04               	mullw	4
  7886  0022C8  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  7887  0022CA  24F3               	addwf	prodl,w,c
  7888  0022CC  6EE1               	movwf	fsr1l,c
  7889  0022CE  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  7890  0022D0  20F4               	addwfc	prodh,w,c
  7891  0022D2  6EE2               	movwf	fsr1h,c
  7892  0022D4  CFDF FFE7          	movff	indf2,indf1
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;miwi_p2p.c: 162: END_DEVICES_Short_Address[j].Address[2] = payload[i+2];
  7896  0022D8  5022               	movf	store_connection_tb@i,w,c
  7897  0022DA  241D               	addwf	store_connection_tb@payload,w,c
  7898  0022DC  6E1F               	movwf	??_store_connection_tb& (0+255),c
  7899  0022DE  0E00               	movlw	0
  7900  0022E0  201E               	addwfc	store_connection_tb@payload+1,w,c
  7901  0022E2  6E20               	movwf	(??_store_connection_tb+1)& (0+255),c
  7902  0022E4  0E02               	movlw	2
  7903  0022E6  241F               	addwf	??_store_connection_tb,w,c
  7904  0022E8  6ED9               	movwf	fsr2l,c
  7905  0022EA  0E00               	movlw	0
  7906  0022EC  2020               	addwfc	??_store_connection_tb+1,w,c
  7907  0022EE  6EDA               	movwf	fsr2h,c
  7908  0022F0  5021               	movf	store_connection_tb@j,w,c
  7909  0022F2  0D04               	mullw	4
  7910  0022F4  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  7911  0022F6  24F3               	addwf	prodl,w,c
  7912  0022F8  6EE1               	movwf	fsr1l,c
  7913  0022FA  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  7914  0022FC  20F4               	addwfc	prodh,w,c
  7915  0022FE  6EE2               	movwf	fsr1h,c
  7916  002300  CFDF FFE7          	movff	indf2,indf1
  7917  002304                     l11300:
  7918                           
  7919                           ; BSR set to: 0
  7920  002304  2A22               	incf	store_connection_tb@i,f,c
  7921                           
  7922                           ; BSR set to: 0
  7923  002306  0E27               	movlw	39
  7924  002308  6422               	cpfsgt	store_connection_tb@i,c
  7925  00230A  D796               	goto	l11286
  7926  00230C  EF1E  F016         	goto	_handle_lost_connection
  7927  002310                     __end_of_store_connection_tb:
  7928                           	opt stack 0
  7929                           tblptru	equ	0xFF8
  7930                           tblptrh	equ	0xFF7
  7931                           tblptrl	equ	0xFF6
  7932                           tablat	equ	0xFF5
  7933                           prodh	equ	0xFF4
  7934                           prodl	equ	0xFF3
  7935                           intcon	equ	0xFF2
  7936                           intcon2	equ	0xFF1
  7937                           postinc0	equ	0xFEE
  7938                           wreg	equ	0xFE8
  7939                           indf1	equ	0xFE7
  7940                           postdec1	equ	0xFE5
  7941                           fsr1h	equ	0xFE2
  7942                           fsr1l	equ	0xFE1
  7943                           indf2	equ	0xFDF
  7944                           postinc2	equ	0xFDE
  7945                           postdec2	equ	0xFDD
  7946                           fsr2h	equ	0xFDA
  7947                           fsr2l	equ	0xFD9
  7948                           status	equ	0xFD8
  7949                           
  7950 ;; *************** function _handle_lost_connection *****************
  7951 ;; Defined at:
  7952 ;;		line 127 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;		None
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;  i               1   27[COMRAM] unsigned char 
  7957 ;;  stat            1    0        unsigned char 
  7958 ;; Return value:  Size  Location     Type
  7959 ;;		None               void
  7960 ;; Registers used:
  7961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7962 ;; Tracked objects:
  7963 ;;		On entry : F/0
  7964 ;;		On exit  : F/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7969 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7970 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7971 ;;Total ram usage:        7 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:    3
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_store_connection_tb
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           	psect	text29
  7982  002C3C                     __ptext29:
  7983                           	opt stack 0
  7984  002C3C                     _handle_lost_connection:
  7985                           	opt stack 21
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;miwi_p2p.c: 131: if (!role)
  7989                           
  7990                           ; BSR set to: 0
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;incstack = 0
  7994  002C3C  5049               	movf	_role,w,c
  7995  002C3E  A4D8               	btfss	status,2,c
  7996  002C40  0012               	return	
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;miwi_p2p.c: 132: {
  8000                           ;miwi_p2p.c: 133: for (i=0;i<end_nodes+1;i++)
  8001  002C42  6A1C               	clrf	handle_lost_connection@i,c
  8002  002C44  D016               	goto	l10992
  8003  002C46                     l10984:
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;miwi_p2p.c: 134: {
  8007                           ;miwi_p2p.c: 135: if (myLongAddress[0] == END_DEVICES_Short_Address[i].Address[0] && myL
      +                          ongAddress[1] == END_DEVICES_Short_Address[i].Address[1])
  8008  002C46  501C               	movf	handle_lost_connection@i,w,c
  8009  002C48  0D04               	mullw	4
  8010  002C4A  0E00               	movlw	low _END_DEVICES_Short_Address
  8011  002C4C  24F3               	addwf	prodl,w,c
  8012  002C4E  6ED9               	movwf	fsr2l,c
  8013  002C50  0E02               	movlw	high _END_DEVICES_Short_Address
  8014  002C52  20F4               	addwfc	prodh,w,c
  8015  002C54  6EDA               	movwf	fsr2h,c
  8016  002C56  0101               	movlb	1	; () banked
  8017  002C58  51D7               	movf	_myLongAddress& (0+255),w,b
  8018  002C5A  18DE               	xorwf	postinc2,w,c
  8019  002C5C  E109               	bnz	l10990
  8020                           
  8021                           ; BSR set to: 1
  8022  002C5E  501C               	movf	handle_lost_connection@i,w,c
  8023  002C60  0D04               	mullw	4
  8024  002C62  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  8025  002C64  24F3               	addwf	prodl,w,c
  8026  002C66  6ED9               	movwf	fsr2l,c
  8027  002C68  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  8028  002C6A  20F4               	addwfc	prodh,w,c
  8029  002C6C  6EDA               	movwf	fsr2h,c
  8030  002C6E  50DE               	movf	postinc2,w,c
  8031  002C70                     l10990:
  8032                           
  8033                           ; BSR set to: 1
  8034  002C70  2A1C               	incf	handle_lost_connection@i,f,c
  8035  002C72                     l10992:
  8036  002C72  0100               	movlb	0	; () banked
  8037  002C74  5198               	movf	_end_nodes& (0+255),w,b
  8038  002C76  6E16               	movwf	??_handle_lost_connection& (0+255),c
  8039  002C78  6A17               	clrf	(??_handle_lost_connection+1)& (0+255),c
  8040  002C7A  2A16               	incf	??_handle_lost_connection,f,c
  8041  002C7C  0E00               	movlw	0
  8042  002C7E  2217               	addwfc	??_handle_lost_connection+1,f,c
  8043  002C80  501C               	movf	handle_lost_connection@i,w,c
  8044  002C82  6E18               	movwf	(??_handle_lost_connection+2)& (0+255),c
  8045  002C84  6A19               	clrf	(??_handle_lost_connection+3)& (0+255),c
  8046  002C86  5016               	movf	??_handle_lost_connection,w,c
  8047  002C88  5C18               	subwf	??_handle_lost_connection+2,w,c
  8048  002C8A  5019               	movf	??_handle_lost_connection+3,w,c
  8049  002C8C  0A80               	xorlw	128
  8050  002C8E  6E1A               	movwf	(??_handle_lost_connection+4)& (0+255),c
  8051  002C90  5017               	movf	??_handle_lost_connection+1,w,c
  8052  002C92  0A80               	xorlw	128
  8053  002C94  581A               	subwfb	(??_handle_lost_connection+4)& (0+255),w,c
  8054  002C96  E3D7               	bnc	l10984
  8055                           
  8056                           ; BSR set to: 0
  8057  002C98  0012               	return		;funcret
  8058  002C9A                     __end_of_handle_lost_connection:
  8059                           	opt stack 0
  8060                           tblptru	equ	0xFF8
  8061                           tblptrh	equ	0xFF7
  8062                           tblptrl	equ	0xFF6
  8063                           tablat	equ	0xFF5
  8064                           prodh	equ	0xFF4
  8065                           prodl	equ	0xFF3
  8066                           intcon	equ	0xFF2
  8067                           intcon2	equ	0xFF1
  8068                           postinc0	equ	0xFEE
  8069                           wreg	equ	0xFE8
  8070                           indf1	equ	0xFE7
  8071                           postdec1	equ	0xFE5
  8072                           fsr1h	equ	0xFE2
  8073                           fsr1l	equ	0xFE1
  8074                           indf2	equ	0xFDF
  8075                           postinc2	equ	0xFDE
  8076                           postdec2	equ	0xFDD
  8077                           fsr2h	equ	0xFDA
  8078                           fsr2l	equ	0xFD9
  8079                           status	equ	0xFD8
  8080                           
  8081 ;; *************** function _SW_Ack_SrED *****************
  8082 ;; Defined at:
  8083 ;;		line 2092 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  Dest_Addr       2   43[BANK0 ] PTR unsigned char 
  8086 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;		None
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  1    wreg      unsigned char 
  8091 ;; Registers used:
  8092 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : F/0
  8095 ;;		On exit  : F/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8098 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8101 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8102 ;;Total ram usage:        2 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:    9
  8105 ;; This function calls:
  8106 ;;		_SendPacket
  8107 ;; This function is called by:
  8108 ;;		_P2PTasks
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           	psect	text30
  8113  0030A2                     __ptext30:
  8114                           	opt stack 0
  8115  0030A2                     _SW_Ack_SrED:
  8116                           	opt stack 16
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;miwi_p2p.c: 2094: {TxData = 0;};
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;incstack = 0
  8123  0030A2  6B95               	clrf	_TxData& (0+255),b
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;miwi_p2p.c: 2095: TxBuffer[TxData++] = 0xDA;
  8127  0030A4  0E8E               	movlw	low _TxBuffer
  8128  0030A6  2595               	addwf	_TxData& (0+255),w,b
  8129  0030A8  6ED9               	movwf	fsr2l,c
  8130  0030AA  6ADA               	clrf	fsr2h,c
  8131  0030AC  0E01               	movlw	high _TxBuffer
  8132  0030AE  22DA               	addwfc	fsr2h,f,c
  8133  0030B0  0EDA               	movlw	218
  8134  0030B2  6EDF               	movwf	indf2,c
  8135                           
  8136                           ; BSR set to: 0
  8137  0030B4  2B95               	incf	_TxData& (0+255),f,b
  8138                           
  8139                           ; BSR set to: 0
  8140                           ;miwi_p2p.c: 2099: return SendPacket(0, myPANID, Dest_Addr, 1, 0);
  8141                           ;	Return value of _SW_Ack_SrED is never used
  8142  0030B6  C09B  F0CA         	movff	_myPANID,SendPacket@DestinationPANID
  8143  0030BA  C09C  F0CB         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  8144  0030BE  C0DA  F0CC         	movff	SW_Ack_SrED@Dest_Addr,SendPacket@DestinationAddress
  8145  0030C2  C0DB  F0CD         	movff	SW_Ack_SrED@Dest_Addr+1,SendPacket@DestinationAddress+1
  8146  0030C6  0E01               	movlw	1
  8147  0030C8  6FCE               	movwf	SendPacket@isCommand& (0+255),b
  8148  0030CA  0E00               	movlw	0
  8149  0030CC  6BCF               	clrf	SendPacket@SecurityEnabled& (0+255),b
  8150  0030CE  EF54  F012         	goto	_SendPacket
  8151  0030D2                     __end_of_SW_Ack_SrED:
  8152                           	opt stack 0
  8153                           tblptru	equ	0xFF8
  8154                           tblptrh	equ	0xFF7
  8155                           tblptrl	equ	0xFF6
  8156                           tablat	equ	0xFF5
  8157                           prodh	equ	0xFF4
  8158                           prodl	equ	0xFF3
  8159                           intcon	equ	0xFF2
  8160                           intcon2	equ	0xFF1
  8161                           postinc0	equ	0xFEE
  8162                           wreg	equ	0xFE8
  8163                           indf1	equ	0xFE7
  8164                           postdec1	equ	0xFE5
  8165                           fsr1h	equ	0xFE2
  8166                           fsr1l	equ	0xFE1
  8167                           indf2	equ	0xFDF
  8168                           postinc2	equ	0xFDE
  8169                           postdec2	equ	0xFDD
  8170                           fsr2h	equ	0xFDA
  8171                           fsr2l	equ	0xFD9
  8172                           status	equ	0xFD8
  8173                           
  8174 ;; *************** function _MiMAC_ReceivedPacket *****************
  8175 ;; Defined at:
  8176 ;;		line 366 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;		None
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;  bIntraPAN       1   28[COMRAM] unsigned char 
  8181 ;;  addrMode        1   26[COMRAM] unsigned char 
  8182 ;;  i               1   27[COMRAM] unsigned char 
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  1    wreg      unsigned char 
  8185 ;; Registers used:
  8186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8187 ;; Tracked objects:
  8188 ;;		On entry : F/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8193 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8194 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8195 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8196 ;;Total ram usage:        8 bytes
  8197 ;; Hardware stack levels used:    1
  8198 ;; Hardware stack levels required when called:    4
  8199 ;; This function calls:
  8200 ;;		_MiMAC_DiscardPacket
  8201 ;; This function is called by:
  8202 ;;		_P2PTasks
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text31
  8207  000DF2                     __ptext31:
  8208                           	opt stack 0
  8209  000DF2                     _MiMAC_ReceivedPacket:
  8210                           	opt stack 21
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;drv_mrf_miwi_24j40.c: 368: uint8_t i;
  8214                           ;drv_mrf_miwi_24j40.c: 371: if (PORTBbits.RB0 == 0)
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;incstack = 0
  8218  000DF2  A081               	btfss	3969,0,c	;volatile
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;drv_mrf_miwi_24j40.c: 372: {
  8222                           ;drv_mrf_miwi_24j40.c: 373: INTCONbits.INT0IF = 1;
  8223  000DF4  82F2               	bsf	intcon,1,c	;volatile
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;drv_mrf_miwi_24j40.c: 374: }
  8227                           ;drv_mrf_miwi_24j40.c: 379: if (MRF24J40Status.bits.TX_BUSY)
  8228  000DF6  A03F               	btfss	_MRF24J40Status,0,c	;volatile
  8229  000DF8  D00B               	goto	l11086
  8230                           
  8231                           ; BSR set to: 0
  8232                           ;drv_mrf_miwi_24j40.c: 380: {
  8233                           ;drv_mrf_miwi_24j40.c: 381: if (failureCounter >= ((uint16_t)0x20 * (((16000000)/4)/1000
      +                          000)))
  8234  000DFA  518A               	movf	(_failureCounter+1)& (0+255),w,b	;volatile
  8235  000DFC  E103               	bnz	u10790
  8236  000DFE  0E80               	movlw	128
  8237  000E00  5D89               	subwf	_failureCounter& (0+255),w,b	;volatile
  8238  000E02  E304               	bnc	l11084
  8239  000E04                     u10790:
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;drv_mrf_miwi_24j40.c: 382: {
  8243                           ;drv_mrf_miwi_24j40.c: 383: failureCounter = 0;
  8244  000E04  6B89               	clrf	_failureCounter& (0+255),b	;volatile
  8245  000E06  6B8A               	clrf	(_failureCounter+1)& (0+255),b	;volatile
  8246                           
  8247                           ;drv_mrf_miwi_24j40.c: 384: MRF24J40Status.bits.TX_BUSY = 0;
  8248  000E08  903F               	bcf	_MRF24J40Status,0,c	;volatile
  8249                           
  8250                           ;drv_mrf_miwi_24j40.c: 385: } else
  8251  000E0A  D002               	goto	l11086
  8252  000E0C                     l11084:
  8253                           
  8254                           ; BSR set to: 0
  8255                           ;drv_mrf_miwi_24j40.c: 386: {
  8256                           ;drv_mrf_miwi_24j40.c: 387: failureCounter++;
  8257  000E0C  4B89               	infsnz	_failureCounter& (0+255),f,b	;volatile
  8258  000E0E  2B8A               	incf	(_failureCounter+1)& (0+255),f,b	;volatile
  8259  000E10                     l11086:
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;drv_mrf_miwi_24j40.c: 388: }
  8263                           ;drv_mrf_miwi_24j40.c: 389: }
  8264                           ;drv_mrf_miwi_24j40.c: 391: BankIndex = 0xFF;
  8265  000E10  6848               	setf	_BankIndex,c
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;drv_mrf_miwi_24j40.c: 392: for (i = 0; i < 2; i++)
  8269  000E12  6A1C               	clrf	MiMAC_ReceivedPacket@i,c
  8270  000E14                     l11094:
  8271                           
  8272                           ; BSR set to: 0
  8273                           ;drv_mrf_miwi_24j40.c: 393: {
  8274                           ;drv_mrf_miwi_24j40.c: 394: if (RxBuffer[i].PayloadLen > 0)
  8275  000E14  501C               	movf	MiMAC_ReceivedPacket@i,w,c
  8276  000E16  0D45               	mullw	69
  8277  000E18  0E04               	movlw	low _RxBuffer
  8278  000E1A  24F3               	addwf	prodl,w,c
  8279  000E1C  6ED9               	movwf	fsr2l,c
  8280  000E1E  0E01               	movlw	high _RxBuffer
  8281  000E20  20F4               	addwfc	prodh,w,c
  8282  000E22  6EDA               	movwf	fsr2h,c
  8283  000E24  50DF               	movf	indf2,w,c
  8284  000E26  E003               	bz	l11098
  8285                           
  8286                           ; BSR set to: 0
  8287                           ;drv_mrf_miwi_24j40.c: 395: {
  8288                           ;drv_mrf_miwi_24j40.c: 396: BankIndex = i;
  8289  000E28  C01C  F048         	movff	MiMAC_ReceivedPacket@i,_BankIndex
  8290                           
  8291                           ;drv_mrf_miwi_24j40.c: 397: break;
  8292  000E2C  D004               	goto	l11102
  8293  000E2E                     l11098:
  8294                           
  8295                           ; BSR set to: 0
  8296  000E2E  2A1C               	incf	MiMAC_ReceivedPacket@i,f,c
  8297                           
  8298                           ; BSR set to: 0
  8299  000E30  0E01               	movlw	1
  8300  000E32  641C               	cpfsgt	MiMAC_ReceivedPacket@i,c
  8301  000E34  D7EF               	goto	l11094
  8302  000E36                     l11102:
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;drv_mrf_miwi_24j40.c: 398: }
  8306                           ;drv_mrf_miwi_24j40.c: 399: }
  8307                           ;drv_mrf_miwi_24j40.c: 402: if (BankIndex < 2)
  8308  000E36  0E02               	movlw	2
  8309  000E38  6048               	cpfslt	_BankIndex,c
  8310  000E3A  0C00               	retlw	0
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;drv_mrf_miwi_24j40.c: 403: {
  8314                           ;drv_mrf_miwi_24j40.c: 404: uint8_t addrMode;
  8315                           ;drv_mrf_miwi_24j40.c: 406: bool bIntraPAN = 1;
  8316  000E3C  0E01               	movlw	1
  8317  000E3E  6E1D               	movwf	MiMAC_ReceivedPacket@bIntraPAN,c
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;drv_mrf_miwi_24j40.c: 408: if ((RxBuffer[BankIndex].Payload[0] & 0x40) == 0)
  8321  000E40  5048               	movf	_BankIndex,w,c
  8322  000E42  0D45               	mullw	69
  8323  000E44  0E05               	movlw	low (_RxBuffer+1)
  8324  000E46  24F3               	addwf	prodl,w,c
  8325  000E48  6ED9               	movwf	fsr2l,c
  8326  000E4A  0E01               	movlw	high (_RxBuffer+1)
  8327  000E4C  20F4               	addwfc	prodh,w,c
  8328  000E4E  6EDA               	movwf	fsr2h,c
  8329  000E50  0101               	movlb	1	; () banked
  8330  000E52  ACDF               	btfss	indf2,6,c
  8331                           
  8332                           ; BSR set to: 1
  8333                           ;drv_mrf_miwi_24j40.c: 409: {
  8334                           ;drv_mrf_miwi_24j40.c: 410: bIntraPAN = 0;
  8335  000E54  6A1D               	clrf	MiMAC_ReceivedPacket@bIntraPAN,c
  8336                           
  8337                           ; BSR set to: 1
  8338                           ;drv_mrf_miwi_24j40.c: 411: }
  8339                           ;drv_mrf_miwi_24j40.c: 413: MACRxPacket.flags.Val = 0;
  8340  000E56  6A33               	clrf	_MACRxPacket,c
  8341                           
  8342                           ;drv_mrf_miwi_24j40.c: 414: MACRxPacket.altSourceAddress = 0;
  8343  000E58  6A3B               	clrf	_MACRxPacket+8,c
  8344                           
  8345                           ; BSR set to: 1
  8346                           ;drv_mrf_miwi_24j40.c: 417: addrMode = RxBuffer[BankIndex].Payload[1] & 0xCC;
  8347  000E5A  5048               	movf	_BankIndex,w,c
  8348  000E5C  0D45               	mullw	69
  8349  000E5E  0E06               	movlw	low (_RxBuffer+2)
  8350  000E60  24F3               	addwf	prodl,w,c
  8351  000E62  6ED9               	movwf	fsr2l,c
  8352  000E64  0E01               	movlw	high (_RxBuffer+2)
  8353  000E66  20F4               	addwfc	prodh,w,c
  8354  000E68  6EDA               	movwf	fsr2h,c
  8355  000E6A  50DF               	movf	indf2,w,c
  8356  000E6C  0BCC               	andlw	204
  8357  000E6E  6E1B               	movwf	MiMAC_ReceivedPacket@addrMode,c
  8358                           
  8359                           ;drv_mrf_miwi_24j40.c: 418: switch (addrMode)
  8360  000E70  D1DB               	goto	l11210
  8361  000E72                     l11112:
  8362                           
  8363                           ; BSR set to: 1
  8364                           ;drv_mrf_miwi_24j40.c: 422: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  8365  000E72  5048               	movf	_BankIndex,w,c
  8366  000E74  0D45               	mullw	69
  8367  000E76  0E0A               	movlw	low (_RxBuffer+6)
  8368  000E78  24F3               	addwf	prodl,w,c
  8369  000E7A  6ED9               	movwf	fsr2l,c
  8370  000E7C  0E01               	movlw	high (_RxBuffer+6)
  8371  000E7E  20F4               	addwfc	prodh,w,c
  8372  000E80  6EDA               	movwf	fsr2h,c
  8373  000E82  28DE               	incf	postinc2,w,c
  8374  000E84  E10B               	bnz	l105
  8375                           
  8376                           ; BSR set to: 1
  8377  000E86  5048               	movf	_BankIndex,w,c
  8378  000E88  0D45               	mullw	69
  8379  000E8A  0E0B               	movlw	low (_RxBuffer+7)
  8380  000E8C  24F3               	addwf	prodl,w,c
  8381  000E8E  6ED9               	movwf	fsr2l,c
  8382  000E90  0E01               	movlw	high (_RxBuffer+7)
  8383  000E92  20F4               	addwfc	prodh,w,c
  8384  000E94  6EDA               	movwf	fsr2h,c
  8385  000E96  28DE               	incf	postinc2,w,c
  8386  000E98  E101               	bnz	l105
  8387                           
  8388                           ; BSR set to: 1
  8389                           ;drv_mrf_miwi_24j40.c: 423: {
  8390                           ;drv_mrf_miwi_24j40.c: 424: MACRxPacket.flags.bits.broadcast = 1;
  8391  000E9A  8433               	bsf	_MACRxPacket,2,c
  8392  000E9C                     l105:
  8393                           
  8394                           ; BSR set to: 1
  8395                           ;drv_mrf_miwi_24j40.c: 425: }
  8396                           ;drv_mrf_miwi_24j40.c: 426: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8397  000E9C  8E33               	bsf	_MACRxPacket,7,c
  8398                           
  8399                           ; BSR set to: 1
  8400                           ;drv_mrf_miwi_24j40.c: 429: if (bIntraPAN)
  8401  000E9E  501D               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  8402  000EA0  E02E               	bz	l11126
  8403                           
  8404                           ; BSR set to: 1
  8405                           ;drv_mrf_miwi_24j40.c: 431: {
  8406                           ;drv_mrf_miwi_24j40.c: 433: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8407  000EA2  5048               	movf	_BankIndex,w,c
  8408  000EA4  0D45               	mullw	69
  8409  000EA6  0E08               	movlw	low (_RxBuffer+4)
  8410  000EA8  24F3               	addwf	prodl,w,c
  8411  000EAA  6ED9               	movwf	fsr2l,c
  8412  000EAC  0E01               	movlw	high (_RxBuffer+4)
  8413  000EAE  20F4               	addwfc	prodh,w,c
  8414  000EB0  6EDA               	movwf	fsr2h,c
  8415  000EB2  50DF               	movf	indf2,w,c
  8416  000EB4  6E3C               	movwf	_MACRxPacket+9,c
  8417                           
  8418                           ;drv_mrf_miwi_24j40.c: 434: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8419  000EB6  5048               	movf	_BankIndex,w,c
  8420  000EB8  0D45               	mullw	69
  8421  000EBA  0E09               	movlw	low (_RxBuffer+5)
  8422  000EBC  24F3               	addwf	prodl,w,c
  8423  000EBE  6ED9               	movwf	fsr2l,c
  8424  000EC0  0E01               	movlw	high (_RxBuffer+5)
  8425  000EC2  20F4               	addwfc	prodh,w,c
  8426  000EC4  6EDA               	movwf	fsr2h,c
  8427  000EC6  50DF               	movf	indf2,w,c
  8428  000EC8  6E3D               	movwf	_MACRxPacket+10,c
  8429                           
  8430                           ; BSR set to: 1
  8431                           ;drv_mrf_miwi_24j40.c: 436: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
  8432  000ECA  5048               	movf	_BankIndex,w,c
  8433  000ECC  0D45               	mullw	69
  8434  000ECE  0E0C               	movlw	low (_RxBuffer+8)
  8435  000ED0  24F3               	addwf	prodl,w,c
  8436  000ED2  6E34               	movwf	_MACRxPacket+1,c
  8437  000ED4  0E01               	movlw	high (_RxBuffer+8)
  8438  000ED6  20F4               	addwfc	prodh,w,c
  8439  000ED8  6E35               	movwf	_MACRxPacket+2,c
  8440                           
  8441                           ; BSR set to: 1
  8442                           ;drv_mrf_miwi_24j40.c: 438: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 19
      +                          ;
  8443  000EDA  5048               	movf	_BankIndex,w,c
  8444  000EDC  0D45               	mullw	69
  8445  000EDE  0E04               	movlw	low _RxBuffer
  8446  000EE0  24F3               	addwf	prodl,w,c
  8447  000EE2  6ED9               	movwf	fsr2l,c
  8448  000EE4  0E01               	movlw	high _RxBuffer
  8449  000EE6  20F4               	addwfc	prodh,w,c
  8450  000EE8  6EDA               	movwf	fsr2h,c
  8451  000EEA  50DF               	movf	indf2,w,c
  8452  000EEC  0FED               	addlw	237
  8453  000EEE  6E38               	movwf	_MACRxPacket+5,c
  8454                           
  8455                           ;drv_mrf_miwi_24j40.c: 439: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[15]);
  8456  000EF0  5048               	movf	_BankIndex,w,c
  8457  000EF2  0D45               	mullw	69
  8458  000EF4  0E14               	movlw	low (_RxBuffer+16)
  8459  000EF6  24F3               	addwf	prodl,w,c
  8460  000EF8  6E36               	movwf	_MACRxPacket+3,c
  8461  000EFA  0E01               	movlw	high (_RxBuffer+16)
  8462  000EFC  D134               	goto	L6
  8463  000EFE                     l11126:
  8464                           
  8465                           ; BSR set to: 1
  8466                           ;drv_mrf_miwi_24j40.c: 442: else
  8467                           ;drv_mrf_miwi_24j40.c: 443: {
  8468                           ;drv_mrf_miwi_24j40.c: 444: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
  8469  000EFE  5048               	movf	_BankIndex,w,c
  8470  000F00  0D45               	mullw	69
  8471  000F02  0E0C               	movlw	low (_RxBuffer+8)
  8472  000F04  24F3               	addwf	prodl,w,c
  8473  000F06  6ED9               	movwf	fsr2l,c
  8474  000F08  0E01               	movlw	high (_RxBuffer+8)
  8475  000F0A  20F4               	addwfc	prodh,w,c
  8476  000F0C  6EDA               	movwf	fsr2h,c
  8477  000F0E  50DF               	movf	indf2,w,c
  8478  000F10  6E3C               	movwf	_MACRxPacket+9,c
  8479                           
  8480                           ;drv_mrf_miwi_24j40.c: 445: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
  8481  000F12  5048               	movf	_BankIndex,w,c
  8482  000F14  0D45               	mullw	69
  8483  000F16  0E0D               	movlw	low (_RxBuffer+9)
  8484  000F18  24F3               	addwf	prodl,w,c
  8485  000F1A  6ED9               	movwf	fsr2l,c
  8486  000F1C  0E01               	movlw	high (_RxBuffer+9)
  8487  000F1E  20F4               	addwfc	prodh,w,c
  8488  000F20  6EDA               	movwf	fsr2h,c
  8489  000F22  50DF               	movf	indf2,w,c
  8490  000F24  6E3D               	movwf	_MACRxPacket+10,c
  8491                           
  8492                           ; BSR set to: 1
  8493                           ;drv_mrf_miwi_24j40.c: 446: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
  8494  000F26  5048               	movf	_BankIndex,w,c
  8495  000F28  0D45               	mullw	69
  8496  000F2A  0E0E               	movlw	low (_RxBuffer+10)
  8497  000F2C  24F3               	addwf	prodl,w,c
  8498  000F2E  6E34               	movwf	_MACRxPacket+1,c
  8499  000F30  0E01               	movlw	high (_RxBuffer+10)
  8500  000F32  20F4               	addwfc	prodh,w,c
  8501  000F34  6E35               	movwf	_MACRxPacket+2,c
  8502                           
  8503                           ; BSR set to: 1
  8504                           ;drv_mrf_miwi_24j40.c: 447: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 21
      +                          ;
  8505  000F36  5048               	movf	_BankIndex,w,c
  8506  000F38  0D45               	mullw	69
  8507  000F3A  0E04               	movlw	low _RxBuffer
  8508  000F3C  24F3               	addwf	prodl,w,c
  8509  000F3E  6ED9               	movwf	fsr2l,c
  8510  000F40  0E01               	movlw	high _RxBuffer
  8511  000F42  20F4               	addwfc	prodh,w,c
  8512  000F44  6EDA               	movwf	fsr2h,c
  8513  000F46  50DF               	movf	indf2,w,c
  8514  000F48  0FEB               	addlw	235
  8515  000F4A  6E38               	movwf	_MACRxPacket+5,c
  8516                           
  8517                           ;drv_mrf_miwi_24j40.c: 448: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[17]);
  8518  000F4C  5048               	movf	_BankIndex,w,c
  8519  000F4E  0D45               	mullw	69
  8520  000F50  0E16               	movlw	low (_RxBuffer+18)
  8521  000F52  24F3               	addwf	prodl,w,c
  8522  000F54  6E36               	movwf	_MACRxPacket+3,c
  8523  000F56  0E01               	movlw	high (_RxBuffer+18)
  8524  000F58  D106               	goto	L6
  8525  000F5A                     l109:
  8526                           
  8527                           ; BSR set to: 1
  8528                           ;drv_mrf_miwi_24j40.c: 455: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8529  000F5A  8E33               	bsf	_MACRxPacket,7,c
  8530                           
  8531                           ; BSR set to: 1
  8532                           ;drv_mrf_miwi_24j40.c: 457: if (bIntraPAN)
  8533  000F5C  501D               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  8534  000F5E  E02E               	bz	l11140
  8535                           
  8536                           ; BSR set to: 1
  8537                           ;drv_mrf_miwi_24j40.c: 459: {
  8538                           ;drv_mrf_miwi_24j40.c: 462: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8539  000F60  5048               	movf	_BankIndex,w,c
  8540  000F62  0D45               	mullw	69
  8541  000F64  0E08               	movlw	low (_RxBuffer+4)
  8542  000F66  24F3               	addwf	prodl,w,c
  8543  000F68  6ED9               	movwf	fsr2l,c
  8544  000F6A  0E01               	movlw	high (_RxBuffer+4)
  8545  000F6C  20F4               	addwfc	prodh,w,c
  8546  000F6E  6EDA               	movwf	fsr2h,c
  8547  000F70  50DF               	movf	indf2,w,c
  8548  000F72  6E3C               	movwf	_MACRxPacket+9,c
  8549                           
  8550                           ;drv_mrf_miwi_24j40.c: 463: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8551  000F74  5048               	movf	_BankIndex,w,c
  8552  000F76  0D45               	mullw	69
  8553  000F78  0E09               	movlw	low (_RxBuffer+5)
  8554  000F7A  24F3               	addwf	prodl,w,c
  8555  000F7C  6ED9               	movwf	fsr2l,c
  8556  000F7E  0E01               	movlw	high (_RxBuffer+5)
  8557  000F80  20F4               	addwfc	prodh,w,c
  8558  000F82  6EDA               	movwf	fsr2h,c
  8559  000F84  50DF               	movf	indf2,w,c
  8560  000F86  6E3D               	movwf	_MACRxPacket+10,c
  8561                           
  8562                           ; BSR set to: 1
  8563                           ;drv_mrf_miwi_24j40.c: 465: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[13
      +                          ]);
  8564  000F88  5048               	movf	_BankIndex,w,c
  8565  000F8A  0D45               	mullw	69
  8566  000F8C  0E12               	movlw	low (_RxBuffer+14)
  8567  000F8E  24F3               	addwf	prodl,w,c
  8568  000F90  6E34               	movwf	_MACRxPacket+1,c
  8569  000F92  0E01               	movlw	high (_RxBuffer+14)
  8570  000F94  20F4               	addwfc	prodh,w,c
  8571  000F96  6E35               	movwf	_MACRxPacket+2,c
  8572                           
  8573                           ; BSR set to: 1
  8574                           ;drv_mrf_miwi_24j40.c: 466: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 25
      +                          ;
  8575  000F98  5048               	movf	_BankIndex,w,c
  8576  000F9A  0D45               	mullw	69
  8577  000F9C  0E04               	movlw	low _RxBuffer
  8578  000F9E  24F3               	addwf	prodl,w,c
  8579  000FA0  6ED9               	movwf	fsr2l,c
  8580  000FA2  0E01               	movlw	high _RxBuffer
  8581  000FA4  20F4               	addwfc	prodh,w,c
  8582  000FA6  6EDA               	movwf	fsr2h,c
  8583  000FA8  50DF               	movf	indf2,w,c
  8584  000FAA  0FE7               	addlw	231
  8585  000FAC  6E38               	movwf	_MACRxPacket+5,c
  8586                           
  8587                           ;drv_mrf_miwi_24j40.c: 467: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[21]);
  8588  000FAE  5048               	movf	_BankIndex,w,c
  8589  000FB0  0D45               	mullw	69
  8590  000FB2  0E1A               	movlw	low (_RxBuffer+22)
  8591  000FB4  24F3               	addwf	prodl,w,c
  8592  000FB6  6E36               	movwf	_MACRxPacket+3,c
  8593  000FB8  0E01               	movlw	high (_RxBuffer+22)
  8594  000FBA  D0D5               	goto	L6
  8595  000FBC                     l11140:
  8596                           
  8597                           ; BSR set to: 1
  8598                           ;drv_mrf_miwi_24j40.c: 470: else
  8599                           ;drv_mrf_miwi_24j40.c: 471: {
  8600                           ;drv_mrf_miwi_24j40.c: 472: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          3];
  8601  000FBC  5048               	movf	_BankIndex,w,c
  8602  000FBE  0D45               	mullw	69
  8603  000FC0  0E12               	movlw	low (_RxBuffer+14)
  8604  000FC2  24F3               	addwf	prodl,w,c
  8605  000FC4  6ED9               	movwf	fsr2l,c
  8606  000FC6  0E01               	movlw	high (_RxBuffer+14)
  8607  000FC8  20F4               	addwfc	prodh,w,c
  8608  000FCA  6EDA               	movwf	fsr2h,c
  8609  000FCC  50DF               	movf	indf2,w,c
  8610  000FCE  6E3C               	movwf	_MACRxPacket+9,c
  8611                           
  8612                           ;drv_mrf_miwi_24j40.c: 473: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          4];
  8613  000FD0  5048               	movf	_BankIndex,w,c
  8614  000FD2  0D45               	mullw	69
  8615  000FD4  0E13               	movlw	low (_RxBuffer+15)
  8616  000FD6  24F3               	addwf	prodl,w,c
  8617  000FD8  6ED9               	movwf	fsr2l,c
  8618  000FDA  0E01               	movlw	high (_RxBuffer+15)
  8619  000FDC  20F4               	addwfc	prodh,w,c
  8620  000FDE  6EDA               	movwf	fsr2h,c
  8621  000FE0  50DF               	movf	indf2,w,c
  8622  000FE2  6E3D               	movwf	_MACRxPacket+10,c
  8623                           
  8624                           ; BSR set to: 1
  8625                           ;drv_mrf_miwi_24j40.c: 474: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[15
      +                          ]);
  8626  000FE4  5048               	movf	_BankIndex,w,c
  8627  000FE6  0D45               	mullw	69
  8628  000FE8  0E14               	movlw	low (_RxBuffer+16)
  8629  000FEA  24F3               	addwf	prodl,w,c
  8630  000FEC  6E34               	movwf	_MACRxPacket+1,c
  8631  000FEE  0E01               	movlw	high (_RxBuffer+16)
  8632  000FF0  20F4               	addwfc	prodh,w,c
  8633  000FF2  6E35               	movwf	_MACRxPacket+2,c
  8634                           
  8635                           ; BSR set to: 1
  8636                           ;drv_mrf_miwi_24j40.c: 475: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 27
      +                          ;
  8637  000FF4  5048               	movf	_BankIndex,w,c
  8638  000FF6  0D45               	mullw	69
  8639  000FF8  0E04               	movlw	low _RxBuffer
  8640  000FFA  24F3               	addwf	prodl,w,c
  8641  000FFC  6ED9               	movwf	fsr2l,c
  8642  000FFE  0E01               	movlw	high _RxBuffer
  8643  001000  20F4               	addwfc	prodh,w,c
  8644  001002  6EDA               	movwf	fsr2h,c
  8645  001004  50DF               	movf	indf2,w,c
  8646  001006  0FE5               	addlw	229
  8647  001008  6E38               	movwf	_MACRxPacket+5,c
  8648                           
  8649                           ;drv_mrf_miwi_24j40.c: 476: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[23]);
  8650  00100A  5048               	movf	_BankIndex,w,c
  8651  00100C  0D45               	mullw	69
  8652  00100E  0E1C               	movlw	low (_RxBuffer+24)
  8653  001010  24F3               	addwf	prodl,w,c
  8654  001012  6E36               	movwf	_MACRxPacket+3,c
  8655  001014  0E01               	movlw	high (_RxBuffer+24)
  8656  001016  D0A7               	goto	L6
  8657  001018                     l112:
  8658                           
  8659                           ; BSR set to: 1
  8660                           ;drv_mrf_miwi_24j40.c: 482: {
  8661                           ;drv_mrf_miwi_24j40.c: 483: MACRxPacket.flags.bits.broadcast = 1;
  8662  001018  8433               	bsf	_MACRxPacket,2,c
  8663                           
  8664                           ;drv_mrf_miwi_24j40.c: 484: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8665  00101A  8E33               	bsf	_MACRxPacket,7,c
  8666                           
  8667                           ; BSR set to: 1
  8668                           ;drv_mrf_miwi_24j40.c: 485: MACRxPacket.altSourceAddress = 1;
  8669  00101C  0E01               	movlw	1
  8670  00101E  6E3B               	movwf	_MACRxPacket+8,c
  8671                           
  8672                           ; BSR set to: 1
  8673                           ;drv_mrf_miwi_24j40.c: 486: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8674  001020  5048               	movf	_BankIndex,w,c
  8675  001022  0D45               	mullw	69
  8676  001024  0E08               	movlw	low (_RxBuffer+4)
  8677  001026  24F3               	addwf	prodl,w,c
  8678  001028  6ED9               	movwf	fsr2l,c
  8679  00102A  0E01               	movlw	high (_RxBuffer+4)
  8680  00102C  20F4               	addwfc	prodh,w,c
  8681  00102E  6EDA               	movwf	fsr2h,c
  8682  001030  50DF               	movf	indf2,w,c
  8683  001032  6E3C               	movwf	_MACRxPacket+9,c
  8684                           
  8685                           ; BSR set to: 1
  8686                           ;drv_mrf_miwi_24j40.c: 487: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8687  001034  5048               	movf	_BankIndex,w,c
  8688  001036  0D45               	mullw	69
  8689  001038  0E09               	movlw	low (_RxBuffer+5)
  8690  00103A  24F3               	addwf	prodl,w,c
  8691  00103C  6ED9               	movwf	fsr2l,c
  8692  00103E  0E01               	movlw	high (_RxBuffer+5)
  8693  001040  20F4               	addwfc	prodh,w,c
  8694  001042  6EDA               	movwf	fsr2h,c
  8695  001044  50DF               	movf	indf2,w,c
  8696  001046  6E3D               	movwf	_MACRxPacket+10,c
  8697                           
  8698                           ; BSR set to: 1
  8699                           ;drv_mrf_miwi_24j40.c: 488: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[5]
      +                          );
  8700  001048  5048               	movf	_BankIndex,w,c
  8701  00104A  0D45               	mullw	69
  8702  00104C  0E0A               	movlw	low (_RxBuffer+6)
  8703  00104E  24F3               	addwf	prodl,w,c
  8704  001050  6E34               	movwf	_MACRxPacket+1,c
  8705  001052  0E01               	movlw	high (_RxBuffer+6)
  8706  001054  20F4               	addwfc	prodh,w,c
  8707  001056  6E35               	movwf	_MACRxPacket+2,c
  8708                           
  8709                           ; BSR set to: 1
  8710                           ;drv_mrf_miwi_24j40.c: 489: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 11
      +                          ;
  8711  001058  5048               	movf	_BankIndex,w,c
  8712  00105A  0D45               	mullw	69
  8713  00105C  0E04               	movlw	low _RxBuffer
  8714  00105E  24F3               	addwf	prodl,w,c
  8715  001060  6ED9               	movwf	fsr2l,c
  8716  001062  0E01               	movlw	high _RxBuffer
  8717  001064  20F4               	addwfc	prodh,w,c
  8718  001066  6EDA               	movwf	fsr2h,c
  8719  001068  50DF               	movf	indf2,w,c
  8720  00106A  0FF5               	addlw	245
  8721  00106C  6E38               	movwf	_MACRxPacket+5,c
  8722                           
  8723                           ; BSR set to: 1
  8724                           ;drv_mrf_miwi_24j40.c: 490: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[7]);
  8725  00106E  5048               	movf	_BankIndex,w,c
  8726  001070  0D45               	mullw	69
  8727  001072  0E0C               	movlw	low (_RxBuffer+8)
  8728  001074  24F3               	addwf	prodl,w,c
  8729  001076  6E36               	movwf	_MACRxPacket+3,c
  8730  001078  0E01               	movlw	high (_RxBuffer+8)
  8731  00107A  D075               	goto	L6
  8732  00107C                     l11158:
  8733                           
  8734                           ; BSR set to: 1
  8735                           ;drv_mrf_miwi_24j40.c: 495: {
  8736                           ;drv_mrf_miwi_24j40.c: 496: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  8737  00107C  5048               	movf	_BankIndex,w,c
  8738  00107E  0D45               	mullw	69
  8739  001080  0E0A               	movlw	low (_RxBuffer+6)
  8740  001082  24F3               	addwf	prodl,w,c
  8741  001084  6ED9               	movwf	fsr2l,c
  8742  001086  0E01               	movlw	high (_RxBuffer+6)
  8743  001088  20F4               	addwfc	prodh,w,c
  8744  00108A  6EDA               	movwf	fsr2h,c
  8745  00108C  28DE               	incf	postinc2,w,c
  8746  00108E  E10B               	bnz	l114
  8747                           
  8748                           ; BSR set to: 1
  8749  001090  5048               	movf	_BankIndex,w,c
  8750  001092  0D45               	mullw	69
  8751  001094  0E0B               	movlw	low (_RxBuffer+7)
  8752  001096  24F3               	addwf	prodl,w,c
  8753  001098  6ED9               	movwf	fsr2l,c
  8754  00109A  0E01               	movlw	high (_RxBuffer+7)
  8755  00109C  20F4               	addwfc	prodh,w,c
  8756  00109E  6EDA               	movwf	fsr2h,c
  8757  0010A0  28DE               	incf	postinc2,w,c
  8758  0010A2  E101               	bnz	l114
  8759                           
  8760                           ; BSR set to: 1
  8761                           ;drv_mrf_miwi_24j40.c: 497: {
  8762                           ;drv_mrf_miwi_24j40.c: 498: MACRxPacket.flags.bits.broadcast = 1;
  8763  0010A4  8433               	bsf	_MACRxPacket,2,c
  8764  0010A6                     l114:
  8765                           
  8766                           ; BSR set to: 1
  8767                           ;drv_mrf_miwi_24j40.c: 499: }
  8768                           ;drv_mrf_miwi_24j40.c: 500: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8769  0010A6  8E33               	bsf	_MACRxPacket,7,c
  8770                           
  8771                           ; BSR set to: 1
  8772                           ;drv_mrf_miwi_24j40.c: 501: MACRxPacket.altSourceAddress = 1;
  8773  0010A8  0E01               	movlw	1
  8774  0010AA  6E3B               	movwf	_MACRxPacket+8,c
  8775                           
  8776                           ;drv_mrf_miwi_24j40.c: 503: if (bIntraPAN == 0)
  8777  0010AC  501D               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  8778  0010AE  E12E               	bnz	l11172
  8779                           
  8780                           ; BSR set to: 1
  8781                           ;drv_mrf_miwi_24j40.c: 504: {
  8782                           ;drv_mrf_miwi_24j40.c: 505: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
  8783  0010B0  5048               	movf	_BankIndex,w,c
  8784  0010B2  0D45               	mullw	69
  8785  0010B4  0E0C               	movlw	low (_RxBuffer+8)
  8786  0010B6  24F3               	addwf	prodl,w,c
  8787  0010B8  6ED9               	movwf	fsr2l,c
  8788  0010BA  0E01               	movlw	high (_RxBuffer+8)
  8789  0010BC  20F4               	addwfc	prodh,w,c
  8790  0010BE  6EDA               	movwf	fsr2h,c
  8791  0010C0  50DF               	movf	indf2,w,c
  8792  0010C2  6E3C               	movwf	_MACRxPacket+9,c
  8793                           
  8794                           ;drv_mrf_miwi_24j40.c: 506: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
  8795  0010C4  5048               	movf	_BankIndex,w,c
  8796  0010C6  0D45               	mullw	69
  8797  0010C8  0E0D               	movlw	low (_RxBuffer+9)
  8798  0010CA  24F3               	addwf	prodl,w,c
  8799  0010CC  6ED9               	movwf	fsr2l,c
  8800  0010CE  0E01               	movlw	high (_RxBuffer+9)
  8801  0010D0  20F4               	addwfc	prodh,w,c
  8802  0010D2  6EDA               	movwf	fsr2h,c
  8803  0010D4  50DF               	movf	indf2,w,c
  8804  0010D6  6E3D               	movwf	_MACRxPacket+10,c
  8805                           
  8806                           ; BSR set to: 1
  8807                           ;drv_mrf_miwi_24j40.c: 507: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
  8808  0010D8  5048               	movf	_BankIndex,w,c
  8809  0010DA  0D45               	mullw	69
  8810  0010DC  0E0E               	movlw	low (_RxBuffer+10)
  8811  0010DE  24F3               	addwf	prodl,w,c
  8812  0010E0  6E34               	movwf	_MACRxPacket+1,c
  8813  0010E2  0E01               	movlw	high (_RxBuffer+10)
  8814  0010E4  20F4               	addwfc	prodh,w,c
  8815  0010E6  6E35               	movwf	_MACRxPacket+2,c
  8816                           
  8817                           ; BSR set to: 1
  8818                           ;drv_mrf_miwi_24j40.c: 508: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 15
      +                          ;
  8819  0010E8  5048               	movf	_BankIndex,w,c
  8820  0010EA  0D45               	mullw	69
  8821  0010EC  0E04               	movlw	low _RxBuffer
  8822  0010EE  24F3               	addwf	prodl,w,c
  8823  0010F0  6ED9               	movwf	fsr2l,c
  8824  0010F2  0E01               	movlw	high _RxBuffer
  8825  0010F4  20F4               	addwfc	prodh,w,c
  8826  0010F6  6EDA               	movwf	fsr2h,c
  8827  0010F8  50DF               	movf	indf2,w,c
  8828  0010FA  0FF1               	addlw	241
  8829  0010FC  6E38               	movwf	_MACRxPacket+5,c
  8830                           
  8831                           ;drv_mrf_miwi_24j40.c: 509: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[11]);
  8832  0010FE  5048               	movf	_BankIndex,w,c
  8833  001100  0D45               	mullw	69
  8834  001102  0E10               	movlw	low (_RxBuffer+12)
  8835  001104  24F3               	addwf	prodl,w,c
  8836  001106  6E36               	movwf	_MACRxPacket+3,c
  8837  001108  0E01               	movlw	high (_RxBuffer+12)
  8838  00110A  D02D               	goto	L6
  8839  00110C                     l11172:
  8840                           
  8841                           ; BSR set to: 1
  8842                           ;drv_mrf_miwi_24j40.c: 512: {
  8843                           ;drv_mrf_miwi_24j40.c: 513: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8844  00110C  5048               	movf	_BankIndex,w,c
  8845  00110E  0D45               	mullw	69
  8846  001110  0E08               	movlw	low (_RxBuffer+4)
  8847  001112  24F3               	addwf	prodl,w,c
  8848  001114  6ED9               	movwf	fsr2l,c
  8849  001116  0E01               	movlw	high (_RxBuffer+4)
  8850  001118  20F4               	addwfc	prodh,w,c
  8851  00111A  6EDA               	movwf	fsr2h,c
  8852  00111C  50DF               	movf	indf2,w,c
  8853  00111E  6E3C               	movwf	_MACRxPacket+9,c
  8854                           
  8855                           ;drv_mrf_miwi_24j40.c: 514: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8856  001120  5048               	movf	_BankIndex,w,c
  8857  001122  0D45               	mullw	69
  8858  001124  0E09               	movlw	low (_RxBuffer+5)
  8859  001126  24F3               	addwf	prodl,w,c
  8860  001128  6ED9               	movwf	fsr2l,c
  8861  00112A  0E01               	movlw	high (_RxBuffer+5)
  8862  00112C  20F4               	addwfc	prodh,w,c
  8863  00112E  6EDA               	movwf	fsr2h,c
  8864  001130  50DF               	movf	indf2,w,c
  8865  001132  6E3D               	movwf	_MACRxPacket+10,c
  8866                           
  8867                           ; BSR set to: 1
  8868                           ;drv_mrf_miwi_24j40.c: 515: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
  8869  001134  5048               	movf	_BankIndex,w,c
  8870  001136  0D45               	mullw	69
  8871  001138  0E0C               	movlw	low (_RxBuffer+8)
  8872  00113A  24F3               	addwf	prodl,w,c
  8873  00113C  6E34               	movwf	_MACRxPacket+1,c
  8874  00113E  0E01               	movlw	high (_RxBuffer+8)
  8875  001140  20F4               	addwfc	prodh,w,c
  8876  001142  6E35               	movwf	_MACRxPacket+2,c
  8877                           
  8878                           ; BSR set to: 1
  8879                           ;drv_mrf_miwi_24j40.c: 516: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 13
      +                          ;
  8880  001144  5048               	movf	_BankIndex,w,c
  8881  001146  0D45               	mullw	69
  8882  001148  0E04               	movlw	low _RxBuffer
  8883  00114A  24F3               	addwf	prodl,w,c
  8884  00114C  6ED9               	movwf	fsr2l,c
  8885  00114E  0E01               	movlw	high _RxBuffer
  8886  001150  20F4               	addwfc	prodh,w,c
  8887  001152  6EDA               	movwf	fsr2h,c
  8888  001154  50DF               	movf	indf2,w,c
  8889  001156  0FF3               	addlw	243
  8890  001158  6E38               	movwf	_MACRxPacket+5,c
  8891                           
  8892                           ;drv_mrf_miwi_24j40.c: 517: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[9]);
  8893  00115A  5048               	movf	_BankIndex,w,c
  8894  00115C  0D45               	mullw	69
  8895  00115E  0E0E               	movlw	low (_RxBuffer+10)
  8896  001160  24F3               	addwf	prodl,w,c
  8897  001162  6E36               	movwf	_MACRxPacket+3,c
  8898  001164  0E01               	movlw	high (_RxBuffer+10)
  8899  001166                     L6:
  8900  001166  20F4               	addwfc	prodh,w,c
  8901  001168  6E37               	movwf	_MACRxPacket+4,c
  8902  00116A  D070               	goto	l11212
  8903  00116C                     l117:
  8904                           
  8905                           ; BSR set to: 1
  8906                           ;drv_mrf_miwi_24j40.c: 523: {
  8907                           ;drv_mrf_miwi_24j40.c: 524: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8908  00116C  8E33               	bsf	_MACRxPacket,7,c
  8909                           
  8910                           ; BSR set to: 1
  8911                           ;drv_mrf_miwi_24j40.c: 525: MACRxPacket.altSourceAddress = 1;
  8912  00116E  0E01               	movlw	1
  8913  001170  6E3B               	movwf	_MACRxPacket+8,c
  8914                           
  8915                           ;drv_mrf_miwi_24j40.c: 527: if (bIntraPAN)
  8916  001172  501D               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  8917  001174  E01B               	bz	l11186
  8918                           
  8919                           ; BSR set to: 1
  8920                           ;drv_mrf_miwi_24j40.c: 529: {
  8921                           ;drv_mrf_miwi_24j40.c: 531: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8922  001176  5048               	movf	_BankIndex,w,c
  8923  001178  0D45               	mullw	69
  8924  00117A  0E08               	movlw	low (_RxBuffer+4)
  8925  00117C  24F3               	addwf	prodl,w,c
  8926  00117E  6ED9               	movwf	fsr2l,c
  8927  001180  0E01               	movlw	high (_RxBuffer+4)
  8928  001182  20F4               	addwfc	prodh,w,c
  8929  001184  6EDA               	movwf	fsr2h,c
  8930  001186  50DF               	movf	indf2,w,c
  8931  001188  6E3C               	movwf	_MACRxPacket+9,c
  8932                           
  8933                           ;drv_mrf_miwi_24j40.c: 532: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8934  00118A  5048               	movf	_BankIndex,w,c
  8935  00118C  0D45               	mullw	69
  8936  00118E  0E09               	movlw	low (_RxBuffer+5)
  8937  001190  24F3               	addwf	prodl,w,c
  8938  001192  6ED9               	movwf	fsr2l,c
  8939  001194  0E01               	movlw	high (_RxBuffer+5)
  8940  001196  20F4               	addwfc	prodh,w,c
  8941  001198  6EDA               	movwf	fsr2h,c
  8942  00119A  50DF               	movf	indf2,w,c
  8943  00119C  6E3D               	movwf	_MACRxPacket+10,c
  8944                           
  8945                           ; BSR set to: 1
  8946                           ;drv_mrf_miwi_24j40.c: 534: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[12
      +                          ]);
  8947  00119E  5048               	movf	_BankIndex,w,c
  8948  0011A0  0D45               	mullw	69
  8949  0011A2  0E11               	movlw	low (_RxBuffer+13)
  8950  0011A4  24F3               	addwf	prodl,w,c
  8951  0011A6  6E34               	movwf	_MACRxPacket+1,c
  8952  0011A8  0E01               	movlw	high (_RxBuffer+13)
  8953  0011AA  D695               	goto	L7
  8954  0011AC                     l11186:
  8955                           
  8956                           ; BSR set to: 1
  8957                           ;drv_mrf_miwi_24j40.c: 540: else
  8958                           ;drv_mrf_miwi_24j40.c: 541: {
  8959                           ;drv_mrf_miwi_24j40.c: 542: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          2];
  8960  0011AC  5048               	movf	_BankIndex,w,c
  8961  0011AE  0D45               	mullw	69
  8962  0011B0  0E11               	movlw	low (_RxBuffer+13)
  8963  0011B2  24F3               	addwf	prodl,w,c
  8964  0011B4  6ED9               	movwf	fsr2l,c
  8965  0011B6  0E01               	movlw	high (_RxBuffer+13)
  8966  0011B8  20F4               	addwfc	prodh,w,c
  8967  0011BA  6EDA               	movwf	fsr2h,c
  8968  0011BC  50DF               	movf	indf2,w,c
  8969  0011BE  6E3C               	movwf	_MACRxPacket+9,c
  8970                           
  8971                           ;drv_mrf_miwi_24j40.c: 543: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          3];
  8972  0011C0  5048               	movf	_BankIndex,w,c
  8973  0011C2  0D45               	mullw	69
  8974  0011C4  0E12               	movlw	low (_RxBuffer+14)
  8975  0011C6  24F3               	addwf	prodl,w,c
  8976  0011C8  6ED9               	movwf	fsr2l,c
  8977  0011CA  0E01               	movlw	high (_RxBuffer+14)
  8978  0011CC  20F4               	addwfc	prodh,w,c
  8979  0011CE  6EDA               	movwf	fsr2h,c
  8980  0011D0  50DF               	movf	indf2,w,c
  8981  0011D2  6E3D               	movwf	_MACRxPacket+10,c
  8982                           
  8983                           ; BSR set to: 1
  8984                           ;drv_mrf_miwi_24j40.c: 544: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[14
      +                          ]);
  8985  0011D4  5048               	movf	_BankIndex,w,c
  8986  0011D6  0D45               	mullw	69
  8987  0011D8  0E13               	movlw	low (_RxBuffer+15)
  8988  0011DA  24F3               	addwf	prodl,w,c
  8989  0011DC  6E34               	movwf	_MACRxPacket+1,c
  8990  0011DE  0E01               	movlw	high (_RxBuffer+15)
  8991  0011E0  D6A8               	goto	L8
  8992  0011E2                     l11192:
  8993                           
  8994                           ; BSR set to: 1
  8995                           ;drv_mrf_miwi_24j40.c: 554: {
  8996                           ;drv_mrf_miwi_24j40.c: 555: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  8997  0011E2  5048               	movf	_BankIndex,w,c
  8998  0011E4  0D45               	mullw	69
  8999  0011E6  0E0A               	movlw	low (_RxBuffer+6)
  9000  0011E8  24F3               	addwf	prodl,w,c
  9001  0011EA  6ED9               	movwf	fsr2l,c
  9002  0011EC  0E01               	movlw	high (_RxBuffer+6)
  9003  0011EE  20F4               	addwfc	prodh,w,c
  9004  0011F0  6EDA               	movwf	fsr2h,c
  9005  0011F2  28DE               	incf	postinc2,w,c
  9006  0011F4  E10B               	bnz	l11198
  9007                           
  9008                           ; BSR set to: 1
  9009  0011F6  5048               	movf	_BankIndex,w,c
  9010  0011F8  0D45               	mullw	69
  9011  0011FA  0E0B               	movlw	low (_RxBuffer+7)
  9012  0011FC  24F3               	addwf	prodl,w,c
  9013  0011FE  6ED9               	movwf	fsr2l,c
  9014  001200  0E01               	movlw	high (_RxBuffer+7)
  9015  001202  20F4               	addwfc	prodh,w,c
  9016  001204  6EDA               	movwf	fsr2h,c
  9017  001206  28DE               	incf	postinc2,w,c
  9018  001208  E101               	bnz	l11198
  9019                           
  9020                           ; BSR set to: 1
  9021                           ;drv_mrf_miwi_24j40.c: 556: {
  9022                           ;drv_mrf_miwi_24j40.c: 557: MACRxPacket.flags.bits.broadcast = 1;
  9023  00120A  8433               	bsf	_MACRxPacket,2,c
  9024  00120C                     l11198:
  9025                           
  9026                           ; BSR set to: 1
  9027                           ;drv_mrf_miwi_24j40.c: 558: }
  9028                           ;drv_mrf_miwi_24j40.c: 559: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 10
      +                          ;
  9029  00120C  5048               	movf	_BankIndex,w,c
  9030  00120E  0D45               	mullw	69
  9031  001210  0E04               	movlw	low _RxBuffer
  9032  001212  24F3               	addwf	prodl,w,c
  9033  001214  6ED9               	movwf	fsr2l,c
  9034  001216  0E01               	movlw	high _RxBuffer
  9035  001218  20F4               	addwfc	prodh,w,c
  9036  00121A  6EDA               	movwf	fsr2h,c
  9037  00121C  50DF               	movf	indf2,w,c
  9038  00121E  0FF6               	addlw	246
  9039  001220  D725               	goto	L9
  9040  001222                     l11202:
  9041                           
  9042                           ; BSR set to: 1
  9043                           ;drv_mrf_miwi_24j40.c: 567: MiMAC_DiscardPacket();
  9044  001222  ECBB  F019         	call	_MiMAC_DiscardPacket	;wreg free
  9045                           
  9046                           ;drv_mrf_miwi_24j40.c: 568: return 0;
  9047  001226  0C00               	retlw	0
  9048  001228                     l11210:
  9049                           
  9050                           ; BSR set to: 1
  9051  001228  501B               	movf	MiMAC_ReceivedPacket@addrMode,w,c
  9052                           
  9053                           ; Switch size 1, requested type "speed"
  9054                           ; Number of cases is 6, Range of values is 8 to 204
  9055                           ; switch strategies available:
  9056                           ; Name         Instructions Cycles
  9057                           ; simple_byte           19    10 (average)
  9058                           ;	Chosen strategy is simple_byte
  9059  00122A  0A08               	xorlw	8	; case 8
  9060  00122C  E0DA               	bz	l11192
  9061  00122E  0A88               	xorlw	136	; case 128
  9062  001230  E101 D6F2          	bz	l112
  9063  001234  0A08               	xorlw	8	; case 136
  9064  001236  E101 D721          	bz	l11158
  9065  00123A  0A04               	xorlw	4	; case 140
  9066  00123C  E097               	bz	l117
  9067  00123E  0A44               	xorlw	68	; case 200
  9068  001240  E101 D617          	bz	l11112
  9069  001244  0A04               	xorlw	4	; case 204
  9070  001246  E101 D688          	bz	l109
  9071  00124A  D7EB               	goto	l11202
  9072  00124C                     l11212:
  9073                           
  9074                           ; BSR set to: 1
  9075                           ;drv_mrf_miwi_24j40.c: 622: if (RxBuffer[BankIndex].Payload[0] & 0x08)
  9076  00124C  5048               	movf	_BankIndex,w,c
  9077  00124E  0D45               	mullw	69
  9078  001250  0E05               	movlw	low (_RxBuffer+1)
  9079  001252  24F3               	addwf	prodl,w,c
  9080  001254  6ED9               	movwf	fsr2l,c
  9081  001256  0E01               	movlw	high (_RxBuffer+1)
  9082  001258  20F4               	addwfc	prodh,w,c
  9083  00125A  6EDA               	movwf	fsr2h,c
  9084  00125C  A6DF               	btfss	indf2,3,c
  9085  00125E  D00C               	goto	l11234
  9086  001260  D7E0               	goto	l11202
  9087  001262                     l11220:
  9088                           
  9089                           ; BSR set to: 1
  9090                           ;drv_mrf_miwi_24j40.c: 635: MACRxPacket.flags.bits.packetType = 0x00;
  9091  001262  0EFC               	movlw	-4
  9092  001264  1633               	andwf	_MACRxPacket,f,c
  9093                           
  9094                           ;drv_mrf_miwi_24j40.c: 636: break;
  9095  001266  D01D               	goto	l11236
  9096  001268                     l11222:
  9097                           
  9098                           ; BSR set to: 1
  9099                           ;drv_mrf_miwi_24j40.c: 638: MACRxPacket.flags.bits.packetType = 0x01;
  9100  001268  5033               	movf	_MACRxPacket,w,c
  9101  00126A  0BFC               	andlw	-4
  9102  00126C  0901               	iorlw	1
  9103  00126E  6E33               	movwf	_MACRxPacket,c
  9104                           
  9105                           ;drv_mrf_miwi_24j40.c: 639: break;
  9106  001270  D018               	goto	l11236
  9107  001272                     l11224:
  9108                           
  9109                           ; BSR set to: 1
  9110                           ;drv_mrf_miwi_24j40.c: 642: MACRxPacket.flags.bits.packetType = 0x03;
  9111  001272  0E03               	movlw	3
  9112  001274  1233               	iorwf	_MACRxPacket,f,c
  9113                           
  9114                           ;drv_mrf_miwi_24j40.c: 643: break;
  9115  001276  D015               	goto	l11236
  9116  001278                     l11234:
  9117                           
  9118                           ; BSR set to: 1
  9119  001278  5048               	movf	_BankIndex,w,c
  9120  00127A  0D45               	mullw	69
  9121  00127C  0E05               	movlw	low (_RxBuffer+1)
  9122  00127E  24F3               	addwf	prodl,w,c
  9123  001280  6ED9               	movwf	fsr2l,c
  9124  001282  0E01               	movlw	high (_RxBuffer+1)
  9125  001284  20F4               	addwfc	prodh,w,c
  9126  001286  6EDA               	movwf	fsr2h,c
  9127  001288  50DF               	movf	indf2,w,c
  9128  00128A  0B07               	andlw	7
  9129  00128C  6E16               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  9130  00128E  6A17               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  9131                           
  9132                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9133                           ; Switch size 1, requested type "speed"
  9134                           ; Number of cases is 1, Range of values is 0 to 0
  9135                           ; switch strategies available:
  9136                           ; Name         Instructions Cycles
  9137                           ; simple_byte            4     3 (average)
  9138                           ;	Chosen strategy is simple_byte
  9139  001290  5017               	movf	??_MiMAC_ReceivedPacket+1,w,c
  9140  001292  E1C7               	bnz	l11202
  9141                           
  9142                           ; BSR set to: 1
  9143                           ; Switch size 1, requested type "speed"
  9144                           ; Number of cases is 3, Range of values is 0 to 3
  9145                           ; switch strategies available:
  9146                           ; Name         Instructions Cycles
  9147                           ; simple_byte           10     6 (average)
  9148                           ;	Chosen strategy is simple_byte
  9149  001294  5016               	movf	??_MiMAC_ReceivedPacket,w,c
  9150  001296  E0ED               	bz	l11224
  9151  001298  0A01               	xorlw	1	; case 1
  9152  00129A  E0E3               	bz	l11220
  9153  00129C  0A02               	xorlw	2	; case 3
  9154  00129E  E0E4               	bz	l11222
  9155  0012A0  D7C0               	goto	l11202
  9156  0012A2                     l11236:
  9157                           
  9158                           ; BSR set to: 1
  9159                           ;drv_mrf_miwi_24j40.c: 649: MACRxPacket.LQIValue = RxBuffer[BankIndex].Payload[RxBuffer[
      +                          BankIndex].PayloadLen - 2];
  9160  0012A2  5048               	movf	_BankIndex,w,c
  9161  0012A4  0D45               	mullw	69
  9162  0012A6  0E04               	movlw	low _RxBuffer
  9163  0012A8  24F3               	addwf	prodl,w,c
  9164  0012AA  6ED9               	movwf	fsr2l,c
  9165  0012AC  0E01               	movlw	high _RxBuffer
  9166  0012AE  20F4               	addwfc	prodh,w,c
  9167  0012B0  6EDA               	movwf	fsr2h,c
  9168  0012B2  50DF               	movf	indf2,w,c
  9169  0012B4  6E16               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  9170  0012B6  5048               	movf	_BankIndex,w,c
  9171  0012B8  0D45               	mullw	69
  9172  0012BA  6817               	setf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  9173  0012BC  6818               	setf	(??_MiMAC_ReceivedPacket+2)& (0+255),c
  9174  0012BE  0E04               	movlw	low _RxBuffer
  9175  0012C0  6E19               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),c
  9176  0012C2  0E01               	movlw	high _RxBuffer
  9177  0012C4  6E1A               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),c
  9178  0012C6  5017               	movf	??_MiMAC_ReceivedPacket+1,w,c
  9179  0012C8  2619               	addwf	??_MiMAC_ReceivedPacket+3,f,c
  9180  0012CA  5018               	movf	??_MiMAC_ReceivedPacket+2,w,c
  9181  0012CC  221A               	addwfc	??_MiMAC_ReceivedPacket+4,f,c
  9182  0012CE  50F3               	movf	prodl,w,c
  9183  0012D0  2619               	addwf	??_MiMAC_ReceivedPacket+3,f,c
  9184  0012D2  50F4               	movf	prodh,w,c
  9185  0012D4  221A               	addwfc	??_MiMAC_ReceivedPacket+4,f,c
  9186  0012D6  5016               	movf	??_MiMAC_ReceivedPacket,w,c
  9187  0012D8  2419               	addwf	??_MiMAC_ReceivedPacket+3,w,c
  9188  0012DA  6ED9               	movwf	fsr2l,c
  9189  0012DC  0E00               	movlw	0
  9190  0012DE  201A               	addwfc	??_MiMAC_ReceivedPacket+4,w,c
  9191  0012E0  6EDA               	movwf	fsr2h,c
  9192  0012E2  50DF               	movf	indf2,w,c
  9193  0012E4  6E3A               	movwf	_MACRxPacket+7,c
  9194                           
  9195                           ;drv_mrf_miwi_24j40.c: 650: MACRxPacket.RSSIValue = RxBuffer[BankIndex].Payload[RxBuffer
      +                          [BankIndex].PayloadLen - 1];
  9196  0012E6  5048               	movf	_BankIndex,w,c
  9197  0012E8  0D45               	mullw	69
  9198  0012EA  0E04               	movlw	low _RxBuffer
  9199  0012EC  24F3               	addwf	prodl,w,c
  9200  0012EE  6ED9               	movwf	fsr2l,c
  9201  0012F0  0E01               	movlw	high _RxBuffer
  9202  0012F2  20F4               	addwfc	prodh,w,c
  9203  0012F4  6EDA               	movwf	fsr2h,c
  9204  0012F6  50DF               	movf	indf2,w,c
  9205  0012F8  6E16               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  9206  0012FA  5048               	movf	_BankIndex,w,c
  9207  0012FC  0D45               	mullw	69
  9208  0012FE  0E04               	movlw	low _RxBuffer
  9209  001300  6E17               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  9210  001302  0E01               	movlw	high _RxBuffer
  9211  001304  6E18               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),c
  9212  001306  50F3               	movf	prodl,w,c
  9213  001308  2617               	addwf	??_MiMAC_ReceivedPacket+1,f,c
  9214  00130A  50F4               	movf	prodh,w,c
  9215  00130C  2218               	addwfc	??_MiMAC_ReceivedPacket+2,f,c
  9216  00130E  5016               	movf	??_MiMAC_ReceivedPacket,w,c
  9217  001310  2417               	addwf	??_MiMAC_ReceivedPacket+1,w,c
  9218  001312  6ED9               	movwf	fsr2l,c
  9219  001314  0E00               	movlw	0
  9220  001316  2018               	addwfc	??_MiMAC_ReceivedPacket+2,w,c
  9221  001318  6EDA               	movwf	fsr2h,c
  9222  00131A  50DF               	movf	indf2,w,c
  9223  00131C  6E39               	movwf	_MACRxPacket+6,c
  9224                           
  9225                           ; BSR set to: 1
  9226                           ;drv_mrf_miwi_24j40.c: 653: return 1;
  9227  00131E  0C01               	retlw	1	;funcret
  9228  001320                     __end_of_MiMAC_ReceivedPacket:
  9229                           	opt stack 0
  9230                           tblptru	equ	0xFF8
  9231                           tblptrh	equ	0xFF7
  9232                           tblptrl	equ	0xFF6
  9233                           tablat	equ	0xFF5
  9234                           prodh	equ	0xFF4
  9235                           prodl	equ	0xFF3
  9236                           intcon	equ	0xFF2
  9237                           intcon2	equ	0xFF1
  9238                           postinc0	equ	0xFEE
  9239                           wreg	equ	0xFE8
  9240                           indf1	equ	0xFE7
  9241                           postdec1	equ	0xFE5
  9242                           fsr1h	equ	0xFE2
  9243                           fsr1l	equ	0xFE1
  9244                           indf2	equ	0xFDF
  9245                           postinc2	equ	0xFDE
  9246                           postdec2	equ	0xFDD
  9247                           fsr2h	equ	0xFDA
  9248                           fsr2l	equ	0xFD9
  9249                           status	equ	0xFD8
  9250                           
  9251 ;; *************** function _Forward_Packet_PANCr_to_EDy *****************
  9252 ;; Defined at:
  9253 ;;		line 178 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;  fw_payload      2   49[BANK0 ] PTR unsigned char 
  9256 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  9257 ;;  index           1   51[BANK0 ] unsigned char 
  9258 ;;  EDxAddress      2   52[BANK0 ] PTR unsigned char 
  9259 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;  i               1   55[BANK0 ] unsigned char 
  9262 ;;  status          1   54[BANK0 ] unsigned char 
  9263 ;; Return value:  Size  Location     Type
  9264 ;;                  1    wreg      unsigned char 
  9265 ;; Registers used:
  9266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9267 ;; Tracked objects:
  9268 ;;		On entry : F/0
  9269 ;;		On exit  : F/0
  9270 ;;		Unchanged: 0/0
  9271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9272 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9275 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9276 ;;Total ram usage:        7 bytes
  9277 ;; Hardware stack levels used:    1
  9278 ;; Hardware stack levels required when called:   11
  9279 ;; This function calls:
  9280 ;;		_DemoOutput_UnicastFail
  9281 ;;		_MiApp_UnicastConnection
  9282 ;; This function is called by:
  9283 ;;		_P2PTasks
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           	psect	text32
  9288  0026A6                     __ptext32:
  9289                           	opt stack 0
  9290  0026A6                     _Forward_Packet_PANCr_to_EDy:
  9291                           	opt stack 14
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;miwi_p2p.c: 180: uint8_t i;
  9295                           ;miwi_p2p.c: 181: bool status;
  9296                           ;miwi_p2p.c: 182: {TxData = 0;};
  9297                           
  9298                           ;incstack = 0
  9299  0026A6  6B95               	clrf	_TxData& (0+255),b
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;miwi_p2p.c: 183: TxBuffer[TxData++] = EDxAddress[0];
  9303  0026A8  C0E3  FFD9         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress,fsr2l
  9304  0026AC  C0E4  FFDA         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress+1,fsr2h
  9305  0026B0  0E8E               	movlw	low _TxBuffer
  9306  0026B2  2595               	addwf	_TxData& (0+255),w,b
  9307  0026B4  6EE1               	movwf	fsr1l,c
  9308  0026B6  6AE2               	clrf	fsr1h,c
  9309  0026B8  0E01               	movlw	high _TxBuffer
  9310  0026BA  22E2               	addwfc	fsr1h,f,c
  9311  0026BC  CFDF FFE7          	movff	indf2,indf1
  9312                           
  9313                           ; BSR set to: 0
  9314  0026C0  2B95               	incf	_TxData& (0+255),f,b
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;miwi_p2p.c: 184: TxBuffer[TxData++] = EDxAddress[1];
  9318  0026C2  EE20 F001          	lfsr	2,1
  9319  0026C6  51E3               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
  9320  0026C8  26D9               	addwf	fsr2l,f,c
  9321  0026CA  51E4               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
  9322  0026CC  22DA               	addwfc	fsr2h,f,c
  9323  0026CE  0E8E               	movlw	low _TxBuffer
  9324  0026D0  2595               	addwf	_TxData& (0+255),w,b
  9325  0026D2  6EE1               	movwf	fsr1l,c
  9326  0026D4  6AE2               	clrf	fsr1h,c
  9327  0026D6  0E01               	movlw	high _TxBuffer
  9328  0026D8  22E2               	addwfc	fsr1h,f,c
  9329  0026DA  CFDF FFE7          	movff	indf2,indf1
  9330  0026DE  2B95               	incf	_TxData& (0+255),f,b
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;miwi_p2p.c: 185: TxBuffer[TxData++] = EDxAddress[2];
  9334  0026E0  EE20 F002          	lfsr	2,2
  9335  0026E4  51E3               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
  9336  0026E6  26D9               	addwf	fsr2l,f,c
  9337  0026E8  51E4               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
  9338  0026EA  22DA               	addwfc	fsr2h,f,c
  9339  0026EC  0E8E               	movlw	low _TxBuffer
  9340  0026EE  2595               	addwf	_TxData& (0+255),w,b
  9341  0026F0  6EE1               	movwf	fsr1l,c
  9342  0026F2  6AE2               	clrf	fsr1h,c
  9343  0026F4  0E01               	movlw	high _TxBuffer
  9344  0026F6  22E2               	addwfc	fsr1h,f,c
  9345  0026F8  CFDF FFE7          	movff	indf2,indf1
  9346                           
  9347                           ; BSR set to: 0
  9348  0026FC  2B95               	incf	_TxData& (0+255),f,b
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;miwi_p2p.c: 186: for(i = 3; i < 40; i++)
  9352  0026FE  0E03               	movlw	3
  9353  002700  6FE6               	movwf	Forward_Packet_PANCr_to_EDy@i& (0+255),b
  9354  002702                     l11324:
  9355                           
  9356                           ; BSR set to: 0
  9357                           ;miwi_p2p.c: 187: {
  9358                           ;miwi_p2p.c: 188: TxBuffer[TxData++] = fw_payload[i];
  9359  002702  51E6               	movf	Forward_Packet_PANCr_to_EDy@i& (0+255),w,b
  9360  002704  25E0               	addwf	Forward_Packet_PANCr_to_EDy@fw_payload& (0+255),w,b
  9361  002706  6ED9               	movwf	fsr2l,c
  9362  002708  0E00               	movlw	0
  9363  00270A  21E1               	addwfc	(Forward_Packet_PANCr_to_EDy@fw_payload+1)& (0+255),w,b
  9364  00270C  6EDA               	movwf	fsr2h,c
  9365  00270E  0E8E               	movlw	low _TxBuffer
  9366  002710  2595               	addwf	_TxData& (0+255),w,b
  9367  002712  6EE1               	movwf	fsr1l,c
  9368  002714  6AE2               	clrf	fsr1h,c
  9369  002716  0E01               	movlw	high _TxBuffer
  9370  002718  22E2               	addwfc	fsr1h,f,c
  9371  00271A  CFDF FFE7          	movff	indf2,indf1
  9372                           
  9373                           ; BSR set to: 0
  9374  00271E  2B95               	incf	_TxData& (0+255),f,b
  9375                           
  9376                           ; BSR set to: 0
  9377  002720  2BE6               	incf	Forward_Packet_PANCr_to_EDy@i& (0+255),f,b
  9378                           
  9379                           ; BSR set to: 0
  9380  002722  0E27               	movlw	39
  9381  002724  65E6               	cpfsgt	Forward_Packet_PANCr_to_EDy@i& (0+255),b
  9382  002726  D7ED               	goto	l11324
  9383                           
  9384                           ; BSR set to: 0
  9385                           ;miwi_p2p.c: 189: }
  9386                           ;miwi_p2p.c: 193: status = MiApp_UnicastConnection (index,0) ;
  9387  002728  6BDE               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  9388  00272A  51E2               	movf	Forward_Packet_PANCr_to_EDy@index& (0+255),w,b
  9389  00272C  EC1D  F018         	call	_MiApp_UnicastConnection
  9390  002730  6FE5               	movwf	Forward_Packet_PANCr_to_EDy@status& (0+255),b
  9391                           
  9392                           ; BSR set to: 0
  9393                           ;miwi_p2p.c: 196: if(!status)
  9394  002732  51E5               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
  9395  002734  E102               	bnz	l11338
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;miwi_p2p.c: 197: {
  9399                           ;miwi_p2p.c: 198: DemoOutput_UnicastFail();
  9400  002736  ECD3  F019         	call	_DemoOutput_UnicastFail	;wreg free
  9401  00273A                     l11338:
  9402                           
  9403                           ;miwi_p2p.c: 199: }
  9404                           ;miwi_p2p.c: 200: return status;
  9405  00273A  0100               	movlb	0	; () banked
  9406  00273C  51E5               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
  9407                           
  9408                           ; BSR set to: 0
  9409  00273E  0012               	return		;funcret
  9410  002740                     __end_of_Forward_Packet_PANCr_to_EDy:
  9411                           	opt stack 0
  9412                           tblptru	equ	0xFF8
  9413                           tblptrh	equ	0xFF7
  9414                           tblptrl	equ	0xFF6
  9415                           tablat	equ	0xFF5
  9416                           prodh	equ	0xFF4
  9417                           prodl	equ	0xFF3
  9418                           intcon	equ	0xFF2
  9419                           intcon2	equ	0xFF1
  9420                           postinc0	equ	0xFEE
  9421                           wreg	equ	0xFE8
  9422                           indf1	equ	0xFE7
  9423                           postdec1	equ	0xFE5
  9424                           fsr1h	equ	0xFE2
  9425                           fsr1l	equ	0xFE1
  9426                           indf2	equ	0xFDF
  9427                           postinc2	equ	0xFDE
  9428                           postdec2	equ	0xFDD
  9429                           fsr2h	equ	0xFDA
  9430                           fsr2l	equ	0xFD9
  9431                           status	equ	0xFD8
  9432                           
  9433 ;; *************** function _MiApp_UnicastConnection *****************
  9434 ;; Defined at:
  9435 ;;		line 1764 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;  ConnectionIn    1    wreg     unsigned char 
  9438 ;;  SecEn           1   47[BANK0 ] unsigned char 
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;  ConnectionIn    1   48[BANK0 ] unsigned char 
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  1    wreg      unsigned char 
  9443 ;; Registers used:
  9444 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9445 ;; Tracked objects:
  9446 ;;		On entry : F/0
  9447 ;;		On exit  : F/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9450 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9454 ;;Total ram usage:        2 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; Hardware stack levels required when called:   10
  9457 ;; This function calls:
  9458 ;;		_MiApp_UnicastAddress
  9459 ;; This function is called by:
  9460 ;;		_Forward_Packet_PANCr_to_EDy
  9461 ;;		_run_star_demo
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text33
  9466  00303A                     __ptext33:
  9467                           	opt stack 0
  9468  00303A                     _MiApp_UnicastConnection:
  9469                           	opt stack 14
  9470                           
  9471                           ; BSR set to: 0
  9472                           ;incstack = 0
  9473                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
  9474  00303A  6FDF               	movwf	MiApp_UnicastConnection@ConnectionIndex& (0+255),b
  9475                           
  9476                           ;miwi_p2p.c: 1767: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
  9477  00303C  0100               	movlb	0	; () banked
  9478  00303E  51DF               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  9479  003040  0D0E               	mullw	14
  9480  003042  0EAC               	movlw	low (_ConnectionTable+12)
  9481  003044  24F3               	addwf	prodl,w,c
  9482  003046  6ED9               	movwf	fsr2l,c
  9483  003048  0E02               	movlw	high (_ConnectionTable+12)
  9484  00304A  20F4               	addwfc	prodh,w,c
  9485  00304C  6EDA               	movwf	fsr2h,c
  9486  00304E  AEDF               	btfss	indf2,7,c
  9487  003050  0C00               	retlw	0
  9488                           
  9489                           ; BSR set to: 0
  9490                           ;miwi_p2p.c: 1768: {
  9491                           ;miwi_p2p.c: 1801: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
  9492  003052  51DF               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  9493  003054  0D0E               	mullw	14
  9494  003056  0EA4               	movlw	low (_ConnectionTable+4)
  9495  003058  24F3               	addwf	prodl,w,c
  9496  00305A  6FDA               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
  9497  00305C  0E02               	movlw	high (_ConnectionTable+4)
  9498  00305E  20F4               	addwfc	prodh,w,c
  9499  003060  6FDB               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
  9500  003062  0E01               	movlw	1
  9501  003064  6FDC               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  9502  003066  C0DE  F0DD         	movff	MiApp_UnicastConnection@SecEn,MiApp_UnicastAddress@SecEn
  9503  00306A  EF92  F019         	goto	_MiApp_UnicastAddress	;wreg free
  9504  00306E                     __end_of_MiApp_UnicastConnection:
  9505                           	opt stack 0
  9506                           tblptru	equ	0xFF8
  9507                           tblptrh	equ	0xFF7
  9508                           tblptrl	equ	0xFF6
  9509                           tablat	equ	0xFF5
  9510                           prodh	equ	0xFF4
  9511                           prodl	equ	0xFF3
  9512                           intcon	equ	0xFF2
  9513                           intcon2	equ	0xFF1
  9514                           postinc0	equ	0xFEE
  9515                           wreg	equ	0xFE8
  9516                           indf1	equ	0xFE7
  9517                           postdec1	equ	0xFE5
  9518                           fsr1h	equ	0xFE2
  9519                           fsr1l	equ	0xFE1
  9520                           indf2	equ	0xFDF
  9521                           postinc2	equ	0xFDE
  9522                           postdec2	equ	0xFDD
  9523                           fsr2h	equ	0xFDA
  9524                           fsr2l	equ	0xFD9
  9525                           status	equ	0xFD8
  9526                           
  9527 ;; *************** function _MiApp_UnicastAddress *****************
  9528 ;; Defined at:
  9529 ;;		line 1843 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;  DestinationA    2   43[BANK0 ] PTR unsigned char 
  9532 ;;		 -> ConnectionTable(560), 
  9533 ;;  PermanentAdd    1   45[BANK0 ] unsigned char 
  9534 ;;  SecEn           1   46[BANK0 ] unsigned char 
  9535 ;; Auto vars:     Size  Location     Type
  9536 ;;		None
  9537 ;; Return value:  Size  Location     Type
  9538 ;;                  1    wreg      unsigned char 
  9539 ;; Registers used:
  9540 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9541 ;; Tracked objects:
  9542 ;;		On entry : F/0
  9543 ;;		On exit  : F/0
  9544 ;;		Unchanged: 0/0
  9545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9546 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9549 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9550 ;;Total ram usage:        4 bytes
  9551 ;; Hardware stack levels used:    1
  9552 ;; Hardware stack levels required when called:    9
  9553 ;; This function calls:
  9554 ;;		_SendPacket
  9555 ;; This function is called by:
  9556 ;;		_MiApp_UnicastConnection
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           	psect	text34
  9561  003324                     __ptext34:
  9562                           	opt stack 0
  9563  003324                     _MiApp_UnicastAddress:
  9564                           	opt stack 14
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;miwi_p2p.c: 1874: return SendPacket(0, myPANID, DestinationAddress, 0, SecEn);
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;incstack = 0
  9571  003324  C09B  F0CA         	movff	_myPANID,SendPacket@DestinationPANID
  9572  003328  C09C  F0CB         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  9573  00332C  C0DA  F0CC         	movff	MiApp_UnicastAddress@DestinationAddress,SendPacket@DestinationAddress
  9574  003330  C0DB  F0CD         	movff	MiApp_UnicastAddress@DestinationAddress+1,SendPacket@DestinationAddress+1
  9575  003334  0E00               	movlw	0
  9576  003336  6BCE               	clrf	SendPacket@isCommand& (0+255),b
  9577  003338  C0DD  F0CF         	movff	MiApp_UnicastAddress@SecEn,SendPacket@SecurityEnabled
  9578  00333C  EF54  F012         	goto	_SendPacket
  9579  003340                     __end_of_MiApp_UnicastAddress:
  9580                           	opt stack 0
  9581                           tblptru	equ	0xFF8
  9582                           tblptrh	equ	0xFF7
  9583                           tblptrl	equ	0xFF6
  9584                           tablat	equ	0xFF5
  9585                           prodh	equ	0xFF4
  9586                           prodl	equ	0xFF3
  9587                           intcon	equ	0xFF2
  9588                           intcon2	equ	0xFF1
  9589                           postinc0	equ	0xFEE
  9590                           wreg	equ	0xFE8
  9591                           indf1	equ	0xFE7
  9592                           postdec1	equ	0xFE5
  9593                           fsr1h	equ	0xFE2
  9594                           fsr1l	equ	0xFE1
  9595                           indf2	equ	0xFDF
  9596                           postinc2	equ	0xFDE
  9597                           postdec2	equ	0xFDD
  9598                           fsr2h	equ	0xFDA
  9599                           fsr2l	equ	0xFD9
  9600                           status	equ	0xFD8
  9601                           
  9602 ;; *************** function _SendPacket *****************
  9603 ;; Defined at:
  9604 ;;		line 1605 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;  Broadcast       1    wreg     unsigned char 
  9607 ;;  DestinationP    2   27[BANK0 ] struct .
  9608 ;;  DestinationA    2   29[BANK0 ] PTR unsigned char 
  9609 ;;		 -> NULL(0), ConnectionTable(560), RxBuffer.Payload(68), RxBuffer(138), 
  9610 ;;  isCommand       1   31[BANK0 ] unsigned char 
  9611 ;;  SecurityEnab    1   32[BANK0 ] unsigned char 
  9612 ;; Auto vars:     Size  Location     Type
  9613 ;;  Broadcast       1   35[BANK0 ] unsigned char 
  9614 ;;  tParam          7   36[BANK0 ] struct .
  9615 ;;  status          1   34[BANK0 ] unsigned char 
  9616 ;; Return value:  Size  Location     Type
  9617 ;;                  1    wreg      unsigned char 
  9618 ;; Registers used:
  9619 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9620 ;; Tracked objects:
  9621 ;;		On entry : F/0
  9622 ;;		On exit  : F/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9625 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9626 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9627 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9628 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9629 ;;Total ram usage:       16 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:    8
  9632 ;; This function calls:
  9633 ;;		_MiMAC_SendPacket
  9634 ;; This function is called by:
  9635 ;;		_P2PTasks
  9636 ;;		_CheckForData
  9637 ;;		_MiApp_UnicastAddress
  9638 ;;		_MiApp_UnicastStar
  9639 ;;		_SW_Ack_SrED
  9640 ;;		_MiApp_EstablishConnection
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           	psect	text35
  9645  0024A8                     __ptext35:
  9646                           	opt stack 0
  9647  0024A8                     _SendPacket:
  9648                           	opt stack 19
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;incstack = 0
  9652                           ;SendPacket@Broadcast stored from wreg
  9653  0024A8  6FD2               	movwf	SendPacket@Broadcast& (0+255),b
  9654                           
  9655                           ;miwi_p2p.c: 1617: MAC_TRANS_PARAM tParam;
  9656                           ;miwi_p2p.c: 1618: bool status;
  9657                           ;miwi_p2p.c: 1620: tParam.flags.Val = 0;
  9658  0024AA  0100               	movlb	0	; () banked
  9659  0024AC  6BD3               	clrf	SendPacket@tParam& (0+255),b
  9660                           
  9661                           ; BSR set to: 0
  9662                           ;miwi_p2p.c: 1621: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
  9663  0024AE  51CE               	movf	SendPacket@isCommand& (0+255),w,b
  9664  0024B0  E003               	bz	u9860
  9665  0024B2  6BD0               	clrf	??_SendPacket& (0+255),b
  9666  0024B4  2BD0               	incf	??_SendPacket& (0+255),f,b
  9667  0024B6  D002               	goto	u9878
  9668  0024B8                     u9860:
  9669  0024B8  0100               	movlb	0	; () banked
  9670  0024BA  6BD0               	clrf	??_SendPacket& (0+255),b
  9671  0024BC                     u9878:
  9672  0024BC  51D3               	movf	SendPacket@tParam& (0+255),w,b
  9673  0024BE  19D0               	xorwf	??_SendPacket& (0+255),w,b
  9674  0024C0  0BFC               	andlw	-4
  9675  0024C2  19D0               	xorwf	??_SendPacket& (0+255),w,b
  9676  0024C4  6FD3               	movwf	SendPacket@tParam& (0+255),b
  9677                           
  9678                           ;miwi_p2p.c: 1622: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
  9679  0024C6  51D2               	movf	SendPacket@Broadcast& (0+255),w,b
  9680  0024C8  E103               	bnz	u9880
  9681  0024CA  6BD0               	clrf	??_SendPacket& (0+255),b
  9682  0024CC  2BD0               	incf	??_SendPacket& (0+255),f,b
  9683  0024CE  D002               	goto	u9898
  9684  0024D0                     u9880:
  9685  0024D0  0100               	movlb	0	; () banked
  9686  0024D2  6BD0               	clrf	??_SendPacket& (0+255),b
  9687  0024D4                     u9898:
  9688  0024D4  3BD0               	swapf	??_SendPacket& (0+255),f,b
  9689  0024D6  47D0               	rlncf	??_SendPacket& (0+255),f,b
  9690  0024D8  51D3               	movf	SendPacket@tParam& (0+255),w,b
  9691  0024DA  19D0               	xorwf	??_SendPacket& (0+255),w,b
  9692  0024DC  0BDF               	andlw	-33
  9693  0024DE  19D0               	xorwf	??_SendPacket& (0+255),w,b
  9694  0024E0  6FD3               	movwf	SendPacket@tParam& (0+255),b
  9695                           
  9696                           ; BSR set to: 0
  9697                           ;miwi_p2p.c: 1623: tParam.flags.bits.broadcast = Broadcast;
  9698  0024E2  B1D2               	btfsc	SendPacket@Broadcast& (0+255),0,b
  9699  0024E4  D002               	bra	u9905
  9700  0024E6  95D3               	bcf	SendPacket@tParam& (0+255),2,b
  9701  0024E8  D002               	bra	u9906
  9702  0024EA                     u9905:
  9703  0024EA  0100               	movlb	0	; () banked
  9704  0024EC  85D3               	bsf	SendPacket@tParam& (0+255),2,b
  9705  0024EE                     u9906:
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;miwi_p2p.c: 1624: tParam.flags.bits.secEn = SecurityEnabled;
  9709  0024EE  B1CF               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
  9710  0024F0  D002               	bra	u9915
  9711  0024F2  97D3               	bcf	SendPacket@tParam& (0+255),3,b
  9712  0024F4  D002               	bra	u9916
  9713  0024F6                     u9915:
  9714  0024F6  0100               	movlb	0	; () banked
  9715  0024F8  87D3               	bsf	SendPacket@tParam& (0+255),3,b
  9716  0024FA                     u9916:
  9717                           
  9718                           ; BSR set to: 0
  9719                           ;miwi_p2p.c: 1626: tParam.altSrcAddr = 0;
  9720  0024FA  6BD7               	clrf	(SendPacket@tParam+4)& (0+255),b
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;miwi_p2p.c: 1627: tParam.altDestAddr = (Broadcast) ? 1 : 0;
  9724  0024FC  51D2               	movf	SendPacket@Broadcast& (0+255),w,b
  9725  0024FE  0E01               	movlw	1
  9726  002500  B4D8               	btfsc	status,2,c
  9727  002502  0E00               	movlw	0
  9728  002504  6FD6               	movwf	(SendPacket@tParam+3)& (0+255),b
  9729                           
  9730                           ; BSR set to: 0
  9731                           ;miwi_p2p.c: 1633: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
  9732  002506  51D2               	movf	SendPacket@Broadcast& (0+255),w,b
  9733  002508  E103               	bnz	u9940
  9734  00250A  6BD0               	clrf	??_SendPacket& (0+255),b
  9735  00250C  2BD0               	incf	??_SendPacket& (0+255),f,b
  9736  00250E  D002               	goto	u9958
  9737  002510                     u9940:
  9738  002510  0100               	movlb	0	; () banked
  9739  002512  6BD0               	clrf	??_SendPacket& (0+255),b
  9740  002514                     u9958:
  9741  002514  3BD0               	swapf	??_SendPacket& (0+255),f,b
  9742  002516  47D0               	rlncf	??_SendPacket& (0+255),f,b
  9743  002518  47D0               	rlncf	??_SendPacket& (0+255),f,b
  9744  00251A  51D3               	movf	SendPacket@tParam& (0+255),w,b
  9745  00251C  19D0               	xorwf	??_SendPacket& (0+255),w,b
  9746  00251E  0BBF               	andlw	-65
  9747  002520  19D0               	xorwf	??_SendPacket& (0+255),w,b
  9748  002522  6FD3               	movwf	SendPacket@tParam& (0+255),b
  9749                           
  9750                           ; BSR set to: 0
  9751                           ;miwi_p2p.c: 1646: tParam.flags.bits.sourcePrsnt = 1;
  9752  002524  8FD3               	bsf	SendPacket@tParam& (0+255),7,b
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;miwi_p2p.c: 1649: tParam.DestAddress = DestinationAddress;
  9756  002526  C0CC  F0D4         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
  9757  00252A  C0CD  F0D5         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;miwi_p2p.c: 1652: tParam.DestPANID.Val = DestinationPANID.Val;
  9761  00252E  C0CA  F0D8         	movff	SendPacket@DestinationPANID,SendPacket@tParam+5
  9762  002532  C0CB  F0D9         	movff	SendPacket@DestinationPANID+1,SendPacket@tParam+6
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;miwi_p2p.c: 1655: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
  9766  002536  EE20  F0D3         	lfsr	2,SendPacket@tParam
  9767  00253A  EE00  F0AF         	lfsr	0,MiMAC_SendPacket@transParam
  9768  00253E  0E06               	movlw	6
  9769  002540                     u9961:
  9770  002540  CFDB FFEB          	movff	plusw2,plusw0
  9771  002544  06E8               	decf	wreg,f,c
  9772  002546  E2FC               	bc	u9961
  9773  002548  0E8E               	movlw	low _TxBuffer
  9774  00254A  6FB6               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
  9775  00254C  0E01               	movlw	high _TxBuffer
  9776  00254E  6FB7               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
  9777  002550  C095  F0B8         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
  9778  002554  ECDB  F00B         	call	_MiMAC_SendPacket	;wreg free
  9779  002558  0100               	movlb	0	; () banked
  9780  00255A  6FD1               	movwf	SendPacket@status& (0+255),b
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;miwi_p2p.c: 1656: TxData = 0;
  9784  00255C  6B95               	clrf	_TxData& (0+255),b
  9785                           
  9786                           ; BSR set to: 0
  9787                           ;miwi_p2p.c: 1658: return status;
  9788  00255E  51D1               	movf	SendPacket@status& (0+255),w,b
  9789                           
  9790                           ; BSR set to: 0
  9791  002560  0012               	return		;funcret
  9792  002562                     __end_of_SendPacket:
  9793                           	opt stack 0
  9794                           tblptru	equ	0xFF8
  9795                           tblptrh	equ	0xFF7
  9796                           tblptrl	equ	0xFF6
  9797                           tablat	equ	0xFF5
  9798                           prodh	equ	0xFF4
  9799                           prodl	equ	0xFF3
  9800                           intcon	equ	0xFF2
  9801                           intcon2	equ	0xFF1
  9802                           postinc0	equ	0xFEE
  9803                           plusw0	equ	0xFEB
  9804                           wreg	equ	0xFE8
  9805                           indf1	equ	0xFE7
  9806                           postdec1	equ	0xFE5
  9807                           fsr1h	equ	0xFE2
  9808                           fsr1l	equ	0xFE1
  9809                           indf2	equ	0xFDF
  9810                           postinc2	equ	0xFDE
  9811                           postdec2	equ	0xFDD
  9812                           plusw2	equ	0xFDB
  9813                           fsr2h	equ	0xFDA
  9814                           fsr2l	equ	0xFD9
  9815                           status	equ	0xFD8
  9816                           
  9817 ;; *************** function _MiMAC_SendPacket *****************
  9818 ;; Defined at:
  9819 ;;		line 736 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  9820 ;; Parameters:    Size  Location     Type
  9821 ;;  transParam      7    0[BANK0 ] struct .
  9822 ;;  MACPayload      2    7[BANK0 ] PTR unsigned char 
  9823 ;;		 -> TxBuffer(40), 
  9824 ;;  MACPayloadLe    1    9[BANK0 ] unsigned char 
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;  t2              4   18[BANK0 ] struct _MIWI_TICK
  9827 ;;  t1              4   14[BANK0 ] struct _MIWI_TICK
  9828 ;;  loc             1   26[BANK0 ] unsigned char 
  9829 ;;  i               1   25[BANK0 ] unsigned char 
  9830 ;;  headerLength    1   24[BANK0 ] unsigned char 
  9831 ;;  frameControl    1   23[BANK0 ] unsigned char 
  9832 ;;  IntraPAN        1   22[BANK0 ] unsigned char 
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      unsigned char 
  9835 ;; Registers used:
  9836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9837 ;; Tracked objects:
  9838 ;;		On entry : F/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9842 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9843 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9844 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9845 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9846 ;;Total ram usage:       27 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:    7
  9849 ;; This function calls:
  9850 ;;		_InitMRF24J40
  9851 ;;		_MiMAC_SetAltAddress
  9852 ;;		_MiWi_TickGet
  9853 ;;		_PHYSetLongRAMAddr
  9854 ;;		_PHYSetShortRAMAddr
  9855 ;; This function is called by:
  9856 ;;		_SendPacket
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           	psect	text36
  9861  0017B6                     __ptext36:
  9862                           	opt stack 0
  9863  0017B6                     _MiMAC_SendPacket:
  9864                           	opt stack 19
  9865                           
  9866                           ; BSR set to: 0
  9867                           ;drv_mrf_miwi_24j40.c: 740: uint8_t headerLength;
  9868                           ;drv_mrf_miwi_24j40.c: 741: uint8_t loc = 0;
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;incstack = 0
  9872  0017B6  6BC9               	clrf	MiMAC_SendPacket@loc& (0+255),b
  9873                           
  9874                           ;drv_mrf_miwi_24j40.c: 744: bool IntraPAN;
  9875                           ;drv_mrf_miwi_24j40.c: 746: MIWI_TICK t1, t2;
  9876                           ;drv_mrf_miwi_24j40.c: 747: uint8_t frameControl;
  9877                           ;drv_mrf_miwi_24j40.c: 749: if (transParam.flags.bits.broadcast)
  9878  0017B8  A5AF               	btfss	MiMAC_SendPacket@transParam& (0+255),2,b
  9879  0017BA  D002               	goto	l10216
  9880                           
  9881                           ; BSR set to: 0
  9882                           ;drv_mrf_miwi_24j40.c: 750: {
  9883                           ;drv_mrf_miwi_24j40.c: 751: transParam.altDestAddr = 1;
  9884  0017BC  0E01               	movlw	1
  9885  0017BE  6FB2               	movwf	(MiMAC_SendPacket@transParam+3)& (0+255),b
  9886  0017C0                     l10216:
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;drv_mrf_miwi_24j40.c: 752: }
  9890                           ;drv_mrf_miwi_24j40.c: 754: if (transParam.flags.bits.secEn)
  9891  0017C0  B7AF               	btfsc	MiMAC_SendPacket@transParam& (0+255),3,b
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;drv_mrf_miwi_24j40.c: 755: {
  9895                           ;drv_mrf_miwi_24j40.c: 756: transParam.altSrcAddr = 0;
  9896  0017C2  6BB3               	clrf	(MiMAC_SendPacket@transParam+4)& (0+255),b
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;drv_mrf_miwi_24j40.c: 757: }
  9900                           ;drv_mrf_miwi_24j40.c: 783: if (transParam.flags.bits.packetType == 0x01)
  9901  0017C4  51AF               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  9902  0017C6  0B03               	andlw	3
  9903  0017C8  06E8               	decf	wreg,f,c
  9904  0017CA  E102               	bnz	l10224
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;drv_mrf_miwi_24j40.c: 784: {
  9908                           ;drv_mrf_miwi_24j40.c: 785: frameControl = 0x03;
  9909  0017CC  0E03               	movlw	3
  9910  0017CE  D004               	goto	L10
  9911  0017D0                     l10224:
  9912                           
  9913                           ; BSR set to: 0
  9914  0017D0  51AF               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  9915  0017D2  0B03               	andlw	3
  9916  0017D4  E102               	bnz	l10228
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;drv_mrf_miwi_24j40.c: 787: {
  9920                           ;drv_mrf_miwi_24j40.c: 788: frameControl = 0x01;
  9921  0017D6  0E01               	movlw	1
  9922  0017D8                     L10:
  9923  0017D8  6FC6               	movwf	MiMAC_SendPacket@frameControl& (0+255),b
  9924  0017DA                     l10228:
  9925                           
  9926                           ; BSR set to: 0
  9927                           ;drv_mrf_miwi_24j40.c: 789: }
  9928                           ;drv_mrf_miwi_24j40.c: 794: if ((transParam.DestPANID.Val == MAC_PANID.Val) && (MAC_PANI
      +                          D.Val != 0xFFFF))
  9929  0017DA  5043               	movf	_MAC_PANID,w,c
  9930  0017DC  19B4               	xorwf	(MiMAC_SendPacket@transParam+5)& (0+255),w,b
  9931  0017DE  E10D               	bnz	l10238
  9932  0017E0  5044               	movf	_MAC_PANID+1,w,c
  9933  0017E2  19B5               	xorwf	(MiMAC_SendPacket@transParam+6)& (0+255),w,b
  9934  0017E4  E10A               	bnz	l10238
  9935                           
  9936                           ; BSR set to: 0
  9937  0017E6  2843               	incf	_MAC_PANID,w,c
  9938  0017E8  E102               	bnz	u9490
  9939  0017EA  2844               	incf	_MAC_PANID+1,w,c
  9940  0017EC  E006               	bz	l10238
  9941  0017EE                     u9490:
  9942                           
  9943                           ; BSR set to: 0
  9944                           ;drv_mrf_miwi_24j40.c: 796: {
  9945                           ;drv_mrf_miwi_24j40.c: 797: headerLength = 5;
  9946  0017EE  0E05               	movlw	5
  9947  0017F0  6FC7               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;drv_mrf_miwi_24j40.c: 798: frameControl |= 0x40;
  9951  0017F2  8DC6               	bsf	MiMAC_SendPacket@frameControl& (0+255),6,b
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;drv_mrf_miwi_24j40.c: 800: IntraPAN = 1;
  9955  0017F4  0E01               	movlw	1
  9956  0017F6  6FC5               	movwf	MiMAC_SendPacket@IntraPAN& (0+255),b
  9957                           
  9958                           ;drv_mrf_miwi_24j40.c: 802: }
  9959  0017F8  D003               	goto	l143
  9960  0017FA                     l10238:
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;drv_mrf_miwi_24j40.c: 804: else
  9964                           ;drv_mrf_miwi_24j40.c: 805: {
  9965                           ;drv_mrf_miwi_24j40.c: 806: headerLength = 7;
  9966  0017FA  0E07               	movlw	7
  9967  0017FC  6FC7               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;drv_mrf_miwi_24j40.c: 807: IntraPAN = 0;
  9971  0017FE  6BC5               	clrf	MiMAC_SendPacket@IntraPAN& (0+255),b
  9972  001800                     l143:
  9973                           
  9974                           ; BSR set to: 0
  9975                           ;drv_mrf_miwi_24j40.c: 808: }
  9976                           ;drv_mrf_miwi_24j40.c: 811: if (transParam.altDestAddr)
  9977  001800  51B2               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
  9978                           
  9979                           ; BSR set to: 0
  9980                           ;drv_mrf_miwi_24j40.c: 812: {
  9981                           ;drv_mrf_miwi_24j40.c: 813: headerLength += 2;
  9982  001802  0E02               	movlw	2
  9983  001804  B4D8               	btfsc	status,2,c
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;drv_mrf_miwi_24j40.c: 815: {
  9987                           ;drv_mrf_miwi_24j40.c: 816: headerLength += 8;
  9988  001806  0E08               	movlw	8
  9989                           
  9990                           ;drv_mrf_miwi_24j40.c: 814: } else
  9991  001808  27C7               	addwf	MiMAC_SendPacket@headerLength& (0+255),f,b
  9992                           
  9993                           ; BSR set to: 0
  9994                           ;drv_mrf_miwi_24j40.c: 817: }
  9995                           ;drv_mrf_miwi_24j40.c: 819: if (transParam.altSrcAddr)
  9996  00180A  51B3               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
  9997                           
  9998                           ; BSR set to: 0
  9999                           ;drv_mrf_miwi_24j40.c: 820: {
 10000                           ;drv_mrf_miwi_24j40.c: 821: headerLength += 2;
 10001  00180C  0E02               	movlw	2
 10002  00180E  B4D8               	btfsc	status,2,c
 10003                           
 10004                           ; BSR set to: 0
 10005                           ;drv_mrf_miwi_24j40.c: 823: {
 10006                           ;drv_mrf_miwi_24j40.c: 824: headerLength += 8;
 10007  001810  0E08               	movlw	8
 10008                           
 10009                           ;drv_mrf_miwi_24j40.c: 822: } else
 10010  001812  27C7               	addwf	MiMAC_SendPacket@headerLength& (0+255),f,b
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;drv_mrf_miwi_24j40.c: 825: }
 10014                           ;drv_mrf_miwi_24j40.c: 827: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
 10015  001814  BBAF               	btfsc	MiMAC_SendPacket@transParam& (0+255),5,b
 10016                           
 10017                           ; BSR set to: 0
 10018  001816  B5AF               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 10019  001818  D001               	goto	l10258
 10020                           
 10021                           ; BSR set to: 0
 10022                           ;drv_mrf_miwi_24j40.c: 828: {
 10023                           ;drv_mrf_miwi_24j40.c: 829: frameControl |= 0x20;
 10024  00181A  8BC6               	bsf	MiMAC_SendPacket@frameControl& (0+255),5,b
 10025  00181C                     l10258:
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;drv_mrf_miwi_24j40.c: 830: }
 10029                           ;drv_mrf_miwi_24j40.c: 833: if (transParam.flags.bits.packetType == 0x03)
 10030  00181C  51AF               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 10031  00181E  0B03               	andlw	3
 10032  001820  0A03               	xorlw	3
 10033  001822  E107               	bnz	l10268
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;drv_mrf_miwi_24j40.c: 834: {
 10037                           ;drv_mrf_miwi_24j40.c: 835: frameControl = 0x00;
 10038  001824  6BC6               	clrf	MiMAC_SendPacket@frameControl& (0+255),b
 10039                           
 10040                           ; BSR set to: 0
 10041                           ;drv_mrf_miwi_24j40.c: 836: headerLength = 7;
 10042  001826  0E07               	movlw	7
 10043  001828  6FC7               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
 10044                           
 10045                           ; BSR set to: 0
 10046                           ;drv_mrf_miwi_24j40.c: 838: IntraPAN = 0;
 10047  00182A  6BC5               	clrf	MiMAC_SendPacket@IntraPAN& (0+255),b
 10048                           
 10049                           ;drv_mrf_miwi_24j40.c: 840: transParam.altSrcAddr = 1;
 10050  00182C  0E01               	movlw	1
 10051  00182E  6FB3               	movwf	(MiMAC_SendPacket@transParam+4)& (0+255),b
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;drv_mrf_miwi_24j40.c: 841: transParam.flags.bits.ackReq = 0;
 10055  001830  9BAF               	bcf	MiMAC_SendPacket@transParam& (0+255),5,b
 10056  001832                     l10268:
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;drv_mrf_miwi_24j40.c: 842: }
 10060                           ;drv_mrf_miwi_24j40.c: 853: PHYSetLongRAMAddr(loc++, headerLength);
 10061  001832  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10062  001834  6A17               	clrf	PHYSetLongRAMAddr@address,c
 10063  001836  C0C7  F019         	movff	MiMAC_SendPacket@headerLength,PHYSetLongRAMAddr@value
 10064  00183A  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10065  00183E  0100               	movlb	0	; () banked
 10066  001840  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10067                           
 10068                           ; BSR set to: 0
 10069                           ;drv_mrf_miwi_24j40.c: 861: {
 10070                           ;drv_mrf_miwi_24j40.c: 862: PHYSetLongRAMAddr(loc++, headerLength + MACPayloadLen);
 10071  001842  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10072  001846  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10073  001848  51C7               	movf	MiMAC_SendPacket@headerLength& (0+255),w,b
 10074  00184A  25B8               	addwf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 10075  00184C  6E19               	movwf	PHYSetLongRAMAddr@value,c
 10076  00184E  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10077  001852  0100               	movlb	0	; () banked
 10078  001854  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;drv_mrf_miwi_24j40.c: 863: }
 10082                           ;drv_mrf_miwi_24j40.c: 866: PHYSetLongRAMAddr(loc++, frameControl);
 10083  001856  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10084  00185A  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10085  00185C  C0C6  F019         	movff	MiMAC_SendPacket@frameControl,PHYSetLongRAMAddr@value
 10086  001860  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10087  001864  0100               	movlb	0	; () banked
 10088  001866  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10089                           
 10090                           ; BSR set to: 0
 10091                           ;drv_mrf_miwi_24j40.c: 869: if (transParam.flags.bits.packetType == 0x03)
 10092  001868  51AF               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 10093  00186A  0B03               	andlw	3
 10094  00186C  0A03               	xorlw	3
 10095  00186E  E112               	bnz	l10288
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;drv_mrf_miwi_24j40.c: 870: {
 10099                           ;drv_mrf_miwi_24j40.c: 871: PHYSetLongRAMAddr(loc++, 0x80);
 10100  001870  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10101  001874  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10102  001876  0E80               	movlw	128
 10103  001878  6E19               	movwf	PHYSetLongRAMAddr@value,c
 10104  00187A  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10105  00187E  0100               	movlb	0	; () banked
 10106  001880  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10107                           
 10108                           ; BSR set to: 0
 10109                           ;drv_mrf_miwi_24j40.c: 873: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 10110  001882  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10111  001886  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10112  001888  C03E  F019         	movff	_IEEESeqNum,PHYSetLongRAMAddr@value
 10113  00188C  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10114  001890  2A3E               	incf	_IEEESeqNum,f,c
 10115  001892  D077               	goto	L14
 10116  001894                     l10288:
 10117                           
 10118                           ; BSR set to: 0
 10119                           ;drv_mrf_miwi_24j40.c: 875: {
 10120                           ;drv_mrf_miwi_24j40.c: 876: if (transParam.altDestAddr && transParam.altSrcAddr)
 10121  001894  51B2               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 10122  001896  E00C               	bz	l10296
 10123                           
 10124                           ; BSR set to: 0
 10125  001898  51B3               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 10126  00189A  E00A               	bz	l10296
 10127                           
 10128                           ; BSR set to: 0
 10129                           ;drv_mrf_miwi_24j40.c: 877: {
 10130                           ;drv_mrf_miwi_24j40.c: 878: PHYSetLongRAMAddr(loc++, 0x88);
 10131  00189C  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10132  0018A0  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10133  0018A2  0E88               	movlw	136
 10134  0018A4  6E19               	movwf	PHYSetLongRAMAddr@value,c
 10135  0018A6  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10136  0018AA                     l10294:
 10137  0018AA  0100               	movlb	0	; () banked
 10138  0018AC  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10139                           
 10140                           ;drv_mrf_miwi_24j40.c: 879: } else if (transParam.altDestAddr && transParam.altSrcAddr =
      +                          = 0)
 10141  0018AE  D020               	goto	l10316
 10142  0018B0                     l10296:
 10143                           
 10144                           ; BSR set to: 0
 10145  0018B0  51B2               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 10146  0018B2  E00A               	bz	l10304
 10147                           
 10148                           ; BSR set to: 0
 10149  0018B4  51B3               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 10150  0018B6  E108               	bnz	l10304
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;drv_mrf_miwi_24j40.c: 880: {
 10154                           ;drv_mrf_miwi_24j40.c: 881: PHYSetLongRAMAddr(loc++, 0xC8);
 10155  0018B8  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10156  0018BC  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10157  0018BE  0EC8               	movlw	200
 10158  0018C0  6E19               	movwf	PHYSetLongRAMAddr@value,c
 10159  0018C2  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10160  0018C6  D7F1               	goto	l10294
 10161  0018C8                     l10304:
 10162                           
 10163                           ; BSR set to: 0
 10164  0018C8  51B2               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 10165  0018CA  E10A               	bnz	l10312
 10166                           
 10167                           ; BSR set to: 0
 10168  0018CC  05B3               	decf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 10169  0018CE  E108               	bnz	l10312
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;drv_mrf_miwi_24j40.c: 883: {
 10173                           ;drv_mrf_miwi_24j40.c: 884: PHYSetLongRAMAddr(loc++, 0x8C);
 10174  0018D0  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10175  0018D4  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10176  0018D6  0E8C               	movlw	140
 10177  0018D8  6E19               	movwf	PHYSetLongRAMAddr@value,c
 10178  0018DA  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10179  0018DE  D7E5               	goto	l10294
 10180  0018E0                     l10312:
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;drv_mrf_miwi_24j40.c: 886: {
 10184                           ;drv_mrf_miwi_24j40.c: 887: PHYSetLongRAMAddr(loc++, 0xCC);
 10185  0018E0  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10186  0018E4  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10187  0018E6  0ECC               	movlw	204
 10188  0018E8  6E19               	movwf	PHYSetLongRAMAddr@value,c
 10189  0018EA  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10190  0018EE  D7DD               	goto	l10294
 10191  0018F0                     l10316:
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;drv_mrf_miwi_24j40.c: 888: }
 10195                           ;drv_mrf_miwi_24j40.c: 891: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 10196  0018F0  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10197  0018F4  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10198  0018F6  C03E  F019         	movff	_IEEESeqNum,PHYSetLongRAMAddr@value
 10199  0018FA  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10200  0018FE  2A3E               	incf	_IEEESeqNum,f,c
 10201  001900  0100               	movlb	0	; () banked
 10202  001902  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10203                           
 10204                           ; BSR set to: 0
 10205                           ;drv_mrf_miwi_24j40.c: 894: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[0]);
 10206  001904  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10207  001908  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10208  00190A  C0B4  F019         	movff	MiMAC_SendPacket@transParam+5,PHYSetLongRAMAddr@value
 10209  00190E  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10210  001912  0100               	movlb	0	; () banked
 10211  001914  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10212                           
 10213                           ;drv_mrf_miwi_24j40.c: 895: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[1]);
 10214  001916  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10215  00191A  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10216  00191C  C0B5  F019         	movff	MiMAC_SendPacket@transParam+6,PHYSetLongRAMAddr@value
 10217  001920  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10218  001924  0100               	movlb	0	; () banked
 10219  001926  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10220                           
 10221                           ; BSR set to: 0
 10222                           ;drv_mrf_miwi_24j40.c: 898: if (transParam.flags.bits.broadcast)
 10223  001928  A5AF               	btfss	MiMAC_SendPacket@transParam& (0+255),2,b
 10224  00192A  D00F               	goto	l10332
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;drv_mrf_miwi_24j40.c: 899: {
 10228                           ;drv_mrf_miwi_24j40.c: 900: PHYSetLongRAMAddr(loc++, 0xFF);
 10229  00192C  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10230  001930  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10231  001932  6819               	setf	PHYSetLongRAMAddr@value,c
 10232  001934  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10233  001938  0100               	movlb	0	; () banked
 10234  00193A  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10235                           
 10236                           ; BSR set to: 0
 10237                           ;drv_mrf_miwi_24j40.c: 901: PHYSetLongRAMAddr(loc++, 0xFF);
 10238  00193C  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10239  001940  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10240  001942  6819               	setf	PHYSetLongRAMAddr@value,c
 10241  001944  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10242  001948  D01C               	goto	L14
 10243  00194A                     l10332:
 10244                           
 10245                           ; BSR set to: 0
 10246                           ;drv_mrf_miwi_24j40.c: 903: {
 10247                           ;drv_mrf_miwi_24j40.c: 904: if (transParam.altDestAddr)
 10248  00194A  51B2               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 10249  00194C  E01D               	bz	l160
 10250                           
 10251                           ; BSR set to: 0
 10252                           ;drv_mrf_miwi_24j40.c: 905: {
 10253                           ;drv_mrf_miwi_24j40.c: 906: PHYSetLongRAMAddr(loc++, transParam.DestAddress[0]);
 10254  00194E  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10255  001952  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10256  001954  C0B0  FFD9         	movff	MiMAC_SendPacket@transParam+1,fsr2l
 10257  001958  C0B1  FFDA         	movff	MiMAC_SendPacket@transParam+2,fsr2h
 10258  00195C  50DF               	movf	indf2,w,c
 10259  00195E  6E19               	movwf	PHYSetLongRAMAddr@value,c
 10260  001960  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10261  001964  0100               	movlb	0	; () banked
 10262  001966  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10263                           
 10264                           ; BSR set to: 0
 10265                           ;drv_mrf_miwi_24j40.c: 907: PHYSetLongRAMAddr(loc++, transParam.DestAddress[1]);
 10266  001968  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10267  00196C  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10268  00196E  EE20 F001          	lfsr	2,1
 10269  001972  51B0               	movf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 10270  001974  26D9               	addwf	fsr2l,f,c
 10271  001976  51B1               	movf	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 10272  001978  22DA               	addwfc	fsr2h,f,c
 10273  00197A  50DF               	movf	indf2,w,c
 10274  00197C  6E19               	movwf	PHYSetLongRAMAddr@value,c
 10275  00197E  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10276  001982                     L14:
 10277  001982  0100               	movlb	0	; () banked
 10278  001984  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10279                           
 10280                           ;drv_mrf_miwi_24j40.c: 908: } else
 10281  001986  D014               	goto	l10352
 10282  001988                     l160:
 10283                           
 10284                           ; BSR set to: 0
 10285                           ;drv_mrf_miwi_24j40.c: 909: {
 10286                           ;drv_mrf_miwi_24j40.c: 910: for (i = 0; i < 8; i++)
 10287  001988  6BC8               	clrf	MiMAC_SendPacket@i& (0+255),b
 10288  00198A                     l10344:
 10289                           
 10290                           ; BSR set to: 0
 10291                           ;drv_mrf_miwi_24j40.c: 911: {
 10292                           ;drv_mrf_miwi_24j40.c: 912: PHYSetLongRAMAddr(loc++, transParam.DestAddress[i]);
 10293  00198A  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10294  00198E  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10295  001990  51C8               	movf	MiMAC_SendPacket@i& (0+255),w,b
 10296  001992  25B0               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 10297  001994  6ED9               	movwf	fsr2l,c
 10298  001996  0E00               	movlw	0
 10299  001998  21B1               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 10300  00199A  6EDA               	movwf	fsr2h,c
 10301  00199C  50DF               	movf	indf2,w,c
 10302  00199E  6E19               	movwf	PHYSetLongRAMAddr@value,c
 10303  0019A0  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10304  0019A4  0100               	movlb	0	; () banked
 10305  0019A6  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10306                           
 10307                           ; BSR set to: 0
 10308  0019A8  2BC8               	incf	MiMAC_SendPacket@i& (0+255),f,b
 10309                           
 10310                           ; BSR set to: 0
 10311  0019AA  0E07               	movlw	7
 10312  0019AC  65C8               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 10313  0019AE  D7ED               	goto	l10344
 10314  0019B0                     l10352:
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;drv_mrf_miwi_24j40.c: 913: }
 10318                           ;drv_mrf_miwi_24j40.c: 914: }
 10319                           ;drv_mrf_miwi_24j40.c: 915: }
 10320                           ;drv_mrf_miwi_24j40.c: 916: }
 10321                           ;drv_mrf_miwi_24j40.c: 920: if (IntraPAN == 0)
 10322  0019B0  51C5               	movf	MiMAC_SendPacket@IntraPAN& (0+255),w,b
 10323  0019B2  E112               	bnz	l10360
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;drv_mrf_miwi_24j40.c: 921: {
 10327                           ;drv_mrf_miwi_24j40.c: 922: PHYSetLongRAMAddr(loc++, MAC_PANID.v[0]);
 10328  0019B4  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10329  0019B8  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10330  0019BA  C043  F019         	movff	_MAC_PANID,PHYSetLongRAMAddr@value
 10331  0019BE  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10332  0019C2  0100               	movlb	0	; () banked
 10333  0019C4  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;drv_mrf_miwi_24j40.c: 923: PHYSetLongRAMAddr(loc++, MAC_PANID.v[1]);
 10337  0019C6  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10338  0019CA  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10339  0019CC  C044  F019         	movff	_MAC_PANID+1,PHYSetLongRAMAddr@value
 10340  0019D0  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10341  0019D4  0100               	movlb	0	; () banked
 10342  0019D6  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10343  0019D8                     l10360:
 10344                           
 10345                           ; BSR set to: 0
 10346                           ;drv_mrf_miwi_24j40.c: 924: }
 10347                           ;drv_mrf_miwi_24j40.c: 928: if (transParam.altSrcAddr)
 10348  0019D8  51B3               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 10349  0019DA  E013               	bz	l165
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;drv_mrf_miwi_24j40.c: 929: {
 10353                           ;drv_mrf_miwi_24j40.c: 930: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[0]);
 10354  0019DC  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10355  0019E0  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10356  0019E2  C045  F019         	movff	_myNetworkAddress,PHYSetLongRAMAddr@value
 10357  0019E6  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10358  0019EA  0100               	movlb	0	; () banked
 10359  0019EC  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10360                           
 10361                           ; BSR set to: 0
 10362                           ;drv_mrf_miwi_24j40.c: 931: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[1]);
 10363  0019EE  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10364  0019F2  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10365  0019F4  C046  F019         	movff	_myNetworkAddress+1,PHYSetLongRAMAddr@value
 10366  0019F8  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10367  0019FC  0100               	movlb	0	; () banked
 10368  0019FE  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10369                           
 10370                           ;drv_mrf_miwi_24j40.c: 932: } else
 10371  001A00  D014               	goto	l166
 10372  001A02                     l165:
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;drv_mrf_miwi_24j40.c: 933: {
 10376                           ;drv_mrf_miwi_24j40.c: 934: for (i = 0; i < 8; i++)
 10377  001A02  6BC8               	clrf	MiMAC_SendPacket@i& (0+255),b
 10378  001A04                     l10372:
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;drv_mrf_miwi_24j40.c: 935: {
 10382                           ;drv_mrf_miwi_24j40.c: 936: PHYSetLongRAMAddr(loc++, MACInitParams.PAddress[i]);
 10383  001A04  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10384  001A08  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10385  001A0A  51C8               	movf	MiMAC_SendPacket@i& (0+255),w,b
 10386  001A0C  2587               	addwf	(_MACInitParams+1)& (0+255),w,b
 10387  001A0E  6ED9               	movwf	fsr2l,c
 10388  001A10  0E00               	movlw	0
 10389  001A12  2188               	addwfc	(_MACInitParams+2)& (0+255),w,b
 10390  001A14  6EDA               	movwf	fsr2h,c
 10391  001A16  50DF               	movf	indf2,w,c
 10392  001A18  6E19               	movwf	PHYSetLongRAMAddr@value,c
 10393  001A1A  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10394  001A1E  0100               	movlb	0	; () banked
 10395  001A20  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10396                           
 10397                           ; BSR set to: 0
 10398  001A22  2BC8               	incf	MiMAC_SendPacket@i& (0+255),f,b
 10399                           
 10400                           ; BSR set to: 0
 10401  001A24  0E07               	movlw	7
 10402  001A26  65C8               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 10403  001A28  D7ED               	goto	l10372
 10404  001A2A                     l166:
 10405                           
 10406                           ; BSR set to: 0
 10407                           ;drv_mrf_miwi_24j40.c: 937: }
 10408                           ;drv_mrf_miwi_24j40.c: 938: }
 10409                           ;drv_mrf_miwi_24j40.c: 964: for (i = 0; i < MACPayloadLen; i++)
 10410  001A2A  6BC8               	clrf	MiMAC_SendPacket@i& (0+255),b
 10411  001A2C  D010               	goto	l10386
 10412  001A2E                     l10380:
 10413                           
 10414                           ; BSR set to: 0
 10415                           ;drv_mrf_miwi_24j40.c: 965: {
 10416                           ;drv_mrf_miwi_24j40.c: 966: PHYSetLongRAMAddr(loc++, MACPayload[i]);
 10417  001A2E  C0C9  F017         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10418  001A32  6A18               	clrf	PHYSetLongRAMAddr@address+1,c
 10419  001A34  51C8               	movf	MiMAC_SendPacket@i& (0+255),w,b
 10420  001A36  25B6               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 10421  001A38  6ED9               	movwf	fsr2l,c
 10422  001A3A  0E00               	movlw	0
 10423  001A3C  21B7               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 10424  001A3E  6EDA               	movwf	fsr2h,c
 10425  001A40  50DF               	movf	indf2,w,c
 10426  001A42  6E19               	movwf	PHYSetLongRAMAddr@value,c
 10427  001A44  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 10428  001A48  0100               	movlb	0	; () banked
 10429  001A4A  2BC9               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10430                           
 10431                           ; BSR set to: 0
 10432  001A4C  2BC8               	incf	MiMAC_SendPacket@i& (0+255),f,b
 10433  001A4E                     l10386:
 10434                           
 10435                           ; BSR set to: 0
 10436  001A4E  51B8               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 10437  001A50  5DC8               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 10438  001A52  E3ED               	bnc	l10380
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;drv_mrf_miwi_24j40.c: 967: }
 10442                           ;drv_mrf_miwi_24j40.c: 969: MRF24J40Status.bits.TX_BUSY = 1;
 10443  001A54  803F               	bsf	_MRF24J40Status,0,c	;volatile
 10444                           
 10445                           ;drv_mrf_miwi_24j40.c: 972: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
 10446  001A56  BBAF               	btfsc	MiMAC_SendPacket@transParam& (0+255),5,b
 10447                           
 10448                           ; BSR set to: 0
 10449  001A58  B5AF               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 10450  001A5A  D004               	goto	l10394
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;drv_mrf_miwi_24j40.c: 973: {
 10454                           ;drv_mrf_miwi_24j40.c: 974: i = 0x05;
 10455  001A5C  0E05               	movlw	5
 10456  001A5E  6FC8               	movwf	MiMAC_SendPacket@i& (0+255),b
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;drv_mrf_miwi_24j40.c: 976: MRF24J40Status.bits.TX_PENDING_ACK = 1;
 10460  001A60  823F               	bsf	_MRF24J40Status,1,c	;volatile
 10461                           
 10462                           ;drv_mrf_miwi_24j40.c: 978: } else
 10463  001A62  D003               	goto	l10398
 10464  001A64                     l10394:
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;drv_mrf_miwi_24j40.c: 979: {
 10468                           ;drv_mrf_miwi_24j40.c: 980: i = 0x01;
 10469  001A64  0E01               	movlw	1
 10470  001A66  6FC8               	movwf	MiMAC_SendPacket@i& (0+255),b
 10471                           
 10472                           ; BSR set to: 0
 10473                           ;drv_mrf_miwi_24j40.c: 982: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 10474  001A68  923F               	bcf	_MRF24J40Status,1,c	;volatile
 10475  001A6A                     l10398:
 10476                           
 10477                           ; BSR set to: 0
 10478                           ;drv_mrf_miwi_24j40.c: 984: }
 10479                           ;drv_mrf_miwi_24j40.c: 988: PHYSetShortRAMAddr((0x37), i);
 10480  001A6A  C0C8  F017         	movff	MiMAC_SendPacket@i,PHYSetShortRAMAddr@value
 10481  001A6E  0E37               	movlw	55
 10482  001A70  EC15  F019         	call	_PHYSetShortRAMAddr
 10483                           
 10484                           ;drv_mrf_miwi_24j40.c: 991: t1 = MiWi_TickGet();
 10485  001A74  EC19  F017         	call	_MiWi_TickGet	;wreg free
 10486  001A78  C016  F0BD         	movff	?_MiWi_TickGet,MiMAC_SendPacket@t1
 10487  001A7C  C017  F0BE         	movff	?_MiWi_TickGet+1,MiMAC_SendPacket@t1+1
 10488  001A80  C018  F0BF         	movff	?_MiWi_TickGet+2,MiMAC_SendPacket@t1+2
 10489  001A84  C019  F0C0         	movff	?_MiWi_TickGet+3,MiMAC_SendPacket@t1+3
 10490  001A88                     l10402:
 10491                           
 10492                           ;drv_mrf_miwi_24j40.c: 993: {
 10493                           ;drv_mrf_miwi_24j40.c: 994: if (PORTBbits.RB0 == 0)
 10494  001A88  A081               	btfss	3969,0,c	;volatile
 10495                           
 10496                           ;drv_mrf_miwi_24j40.c: 995: {
 10497                           ;drv_mrf_miwi_24j40.c: 996: INTCONbits.INT0IF = 1;
 10498  001A8A  82F2               	bsf	intcon,1,c	;volatile
 10499                           
 10500                           ;drv_mrf_miwi_24j40.c: 997: }
 10501                           ;drv_mrf_miwi_24j40.c: 998: if (MRF24J40Status.bits.TX_BUSY == 0)
 10502  001A8C  B03F               	btfsc	_MRF24J40Status,0,c	;volatile
 10503  001A8E  D004               	goto	l10414
 10504                           
 10505                           ;drv_mrf_miwi_24j40.c: 999: {
 10506                           ;drv_mrf_miwi_24j40.c: 1000: if (MRF24J40Status.bits.TX_FAIL)
 10507  001A90  A43F               	btfss	_MRF24J40Status,2,c	;volatile
 10508  001A92  0C01               	retlw	1
 10509                           
 10510                           ;drv_mrf_miwi_24j40.c: 1001: {
 10511                           ;drv_mrf_miwi_24j40.c: 1002: MRF24J40Status.bits.TX_FAIL = 0;
 10512  001A94  943F               	bcf	_MRF24J40Status,2,c	;volatile
 10513                           
 10514                           ;drv_mrf_miwi_24j40.c: 1003: return 0;
 10515  001A96  0C00               	retlw	0
 10516  001A98                     l10414:
 10517                           
 10518                           ;drv_mrf_miwi_24j40.c: 1006: }
 10519                           ;drv_mrf_miwi_24j40.c: 1007: t2 = MiWi_TickGet();
 10520  001A98  EC19  F017         	call	_MiWi_TickGet	;wreg free
 10521  001A9C  C016  F0C1         	movff	?_MiWi_TickGet,MiMAC_SendPacket@t2
 10522  001AA0  C017  F0C2         	movff	?_MiWi_TickGet+1,MiMAC_SendPacket@t2+1
 10523  001AA4  C018  F0C3         	movff	?_MiWi_TickGet+2,MiMAC_SendPacket@t2+2
 10524  001AA8  C019  F0C4         	movff	?_MiWi_TickGet+3,MiMAC_SendPacket@t2+3
 10525                           
 10526                           ;drv_mrf_miwi_24j40.c: 1008: if ((t2.Val - t1.Val) > (((uint32_t)(16000000)/32)/25))
 10527  001AAC  0100               	movlb	0	; () banked
 10528  001AAE  51BD               	movf	MiMAC_SendPacket@t1& (0+255),w,b
 10529  001AB0  5DC1               	subwf	MiMAC_SendPacket@t2& (0+255),w,b
 10530  001AB2  6FB9               	movwf	??_MiMAC_SendPacket& (0+255),b
 10531  001AB4  51BE               	movf	(MiMAC_SendPacket@t1+1)& (0+255),w,b
 10532  001AB6  59C2               	subwfb	(MiMAC_SendPacket@t2+1)& (0+255),w,b
 10533  001AB8  6FBA               	movwf	(??_MiMAC_SendPacket+1)& (0+255),b
 10534  001ABA  51BF               	movf	(MiMAC_SendPacket@t1+2)& (0+255),w,b
 10535  001ABC  59C3               	subwfb	(MiMAC_SendPacket@t2+2)& (0+255),w,b
 10536  001ABE  6FBB               	movwf	(??_MiMAC_SendPacket+2)& (0+255),b
 10537  001AC0  51C0               	movf	(MiMAC_SendPacket@t1+3)& (0+255),w,b
 10538  001AC2  59C4               	subwfb	(MiMAC_SendPacket@t2+3)& (0+255),w,b
 10539  001AC4  6FBC               	movwf	(??_MiMAC_SendPacket+3)& (0+255),b
 10540  001AC6  51BC               	movf	(??_MiMAC_SendPacket+3)& (0+255),w,b
 10541  001AC8  11BB               	iorwf	(??_MiMAC_SendPacket+2)& (0+255),w,b
 10542  001ACA  E105               	bnz	u9740
 10543  001ACC  0E21               	movlw	33
 10544  001ACE  5DB9               	subwf	??_MiMAC_SendPacket& (0+255),w,b
 10545  001AD0  0E4E               	movlw	78
 10546  001AD2  59BA               	subwfb	(??_MiMAC_SendPacket+1)& (0+255),w,b
 10547  001AD4  E3D9               	bnc	l10402
 10548  001AD6                     u9740:
 10549                           
 10550                           ; BSR set to: 0
 10551                           ;drv_mrf_miwi_24j40.c: 1009: {
 10552                           ;drv_mrf_miwi_24j40.c: 1010: InitMRF24J40();
 10553  001AD6  EC74  F00D         	call	_InitMRF24J40	;wreg free
 10554                           
 10555                           ;drv_mrf_miwi_24j40.c: 1011: MiMAC_SetAltAddress(myNetworkAddress.v, MAC_PANID.v);
 10556  001ADA  0E43               	movlw	low _MAC_PANID
 10557  001ADC  6E1A               	movwf	MiMAC_SetAltAddress@PANID,c
 10558  001ADE  0E45               	movlw	_myNetworkAddress& (0+255)
 10559  001AE0  EC4D  F016         	call	_MiMAC_SetAltAddress
 10560                           
 10561                           ;drv_mrf_miwi_24j40.c: 1012: MRF24J40Status.bits.TX_BUSY = 0;
 10562  001AE4  903F               	bcf	_MRF24J40Status,0,c	;volatile
 10563  001AE6  0C00               	retlw	0
 10564  001AE8                     __end_of_MiMAC_SendPacket:
 10565                           	opt stack 0
 10566                           tblptru	equ	0xFF8
 10567                           tblptrh	equ	0xFF7
 10568                           tblptrl	equ	0xFF6
 10569                           tablat	equ	0xFF5
 10570                           prodh	equ	0xFF4
 10571                           prodl	equ	0xFF3
 10572                           intcon	equ	0xFF2
 10573                           intcon2	equ	0xFF1
 10574                           postinc0	equ	0xFEE
 10575                           plusw0	equ	0xFEB
 10576                           wreg	equ	0xFE8
 10577                           indf1	equ	0xFE7
 10578                           postdec1	equ	0xFE5
 10579                           fsr1h	equ	0xFE2
 10580                           fsr1l	equ	0xFE1
 10581                           indf2	equ	0xFDF
 10582                           postinc2	equ	0xFDE
 10583                           postdec2	equ	0xFDD
 10584                           plusw2	equ	0xFDB
 10585                           fsr2h	equ	0xFDA
 10586                           fsr2l	equ	0xFD9
 10587                           status	equ	0xFD8
 10588                           
 10589 ;; *************** function _MiWi_TickGet *****************
 10590 ;; Defined at:
 10591 ;;		line 114 in file "../src/system_config/miwikit_pic18f46j50_24j40/symbol.c"
 10592 ;; Parameters:    Size  Location     Type
 10593 ;;		None
 10594 ;; Auto vars:     Size  Location     Type
 10595 ;;  currentTime     4   27[COMRAM] struct _MIWI_TICK
 10596 ;;  failureCount    1   26[COMRAM] unsigned char 
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  4   21[COMRAM] struct _MIWI_TICK
 10599 ;; Registers used:
 10600 ;;		wreg, status,2, status,0
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10607 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10608 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10609 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10610 ;;Total ram usage:       10 bytes
 10611 ;; Hardware stack levels used:    1
 10612 ;; Hardware stack levels required when called:    3
 10613 ;; This function calls:
 10614 ;;		Nothing
 10615 ;; This function is called by:
 10616 ;;		_MiMAC_SendPacket
 10617 ;;		_MiMAC_PowerState
 10618 ;;		_P2PTasks
 10619 ;;		_CheckForData
 10620 ;;		_MiApp_UnicastStar
 10621 ;;		_MiApp_EstablishConnection
 10622 ;;		_ButtonPressed
 10623 ;;		_run_star_demo
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           	psect	text37
 10628  002E32                     __ptext37:
 10629                           	opt stack 0
 10630  002E32                     _MiWi_TickGet:
 10631                           	opt stack 25
 10632                           
 10633                           ;symbol.c: 116: MIWI_TICK currentTime;
 10634                           ;symbol.c: 119: uint8_t failureCounter;
 10635                           ;symbol.c: 122: PIE1bits.TMR1IE = 0;
 10636                           
 10637                           ;incstack = 0
 10638  002E32  909D               	bcf	3997,0,c	;volatile
 10639                           
 10640                           ;symbol.c: 125: currentTime.byte.b2 = 0;
 10641  002E34  6A1E               	clrf	MiWi_TickGet@currentTime+2,c
 10642                           
 10643                           ;symbol.c: 126: currentTime.byte.b3 = 0;
 10644  002E36  6A1F               	clrf	MiWi_TickGet@currentTime+3,c
 10645                           
 10646                           ;symbol.c: 129: failureCounter = 0;
 10647  002E38  6A1B               	clrf	MiWi_TickGet@failureCounter,c
 10648  002E3A                     l841:
 10649                           
 10650                           ;symbol.c: 132: {
 10651                           ;symbol.c: 133: currentTime.byte.b0 = TMR1L;
 10652  002E3A  CFCE F01C          	movff	4046,MiWi_TickGet@currentTime	;volatile
 10653                           
 10654                           ;symbol.c: 134: currentTime.byte.b1 = TMR1H;
 10655  002E3E  CFCF F01D          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 10656                           
 10657                           ;symbol.c: 135: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 10658  002E42  281C               	incf	MiWi_TickGet@currentTime,w,c
 10659  002E44  E108               	bnz	l844
 10660  002E46  281D               	incf	MiWi_TickGet@currentTime+1,w,c
 10661  002E48  E106               	bnz	l844
 10662  002E4A  2A1B               	incf	MiWi_TickGet@failureCounter,f,c
 10663  002E4C  041B               	decf	MiWi_TickGet@failureCounter,w,c
 10664  002E4E  6E1A               	movwf	??_MiWi_TickGet& (0+255),c
 10665  002E50  0E02               	movlw	2
 10666  002E52  641A               	cpfsgt	??_MiWi_TickGet,c
 10667  002E54  D7F2               	goto	l841
 10668  002E56                     l844:
 10669                           
 10670                           ;symbol.c: 139: if(PIR1bits.TMR1IF)
 10671  002E56  A09E               	btfss	3998,0,c	;volatile
 10672  002E58  D004               	goto	l10178
 10673                           
 10674                           ;symbol.c: 140: {
 10675                           ;symbol.c: 142: {
 10676                           ;symbol.c: 145: currentTime.byte.b2++;
 10677  002E5A  2A1E               	incf	MiWi_TickGet@currentTime+2,f,c
 10678                           
 10679                           ;symbol.c: 146: if(timerExtension1 == 0xFF)
 10680  002E5C  2841               	incf	_timerExtension1,w,c	;volatile
 10681  002E5E  E101               	bnz	l10178
 10682                           
 10683                           ;symbol.c: 147: {
 10684                           ;symbol.c: 148: currentTime.byte.b3++;
 10685  002E60  2A1F               	incf	MiWi_TickGet@currentTime+3,f,c
 10686  002E62                     l10178:
 10687                           
 10688                           ;symbol.c: 149: }
 10689                           ;symbol.c: 150: }
 10690                           ;symbol.c: 151: }
 10691                           ;symbol.c: 154: currentTime.byte.b2 += timerExtension1;
 10692  002E62  5041               	movf	_timerExtension1,w,c	;volatile
 10693  002E64  261E               	addwf	MiWi_TickGet@currentTime+2,f,c
 10694                           
 10695                           ;symbol.c: 155: currentTime.byte.b3 += timerExtension2;
 10696  002E66  5042               	movf	_timerExtension2,w,c	;volatile
 10697  002E68  261F               	addwf	MiWi_TickGet@currentTime+3,f,c
 10698                           
 10699                           ;symbol.c: 158: PIE1bits.TMR1IE = 1;
 10700  002E6A  809D               	bsf	3997,0,c	;volatile
 10701                           
 10702                           ;symbol.c: 160: return currentTime;
 10703  002E6C  C01C  F016         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 10704  002E70  C01D  F017         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 10705  002E74  C01E  F018         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 10706  002E78  C01F  F019         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 10707  002E7C  0012               	return		;funcret
 10708  002E7E                     __end_of_MiWi_TickGet:
 10709                           	opt stack 0
 10710                           tblptru	equ	0xFF8
 10711                           tblptrh	equ	0xFF7
 10712                           tblptrl	equ	0xFF6
 10713                           tablat	equ	0xFF5
 10714                           prodh	equ	0xFF4
 10715                           prodl	equ	0xFF3
 10716                           intcon	equ	0xFF2
 10717                           intcon2	equ	0xFF1
 10718                           postinc0	equ	0xFEE
 10719                           plusw0	equ	0xFEB
 10720                           wreg	equ	0xFE8
 10721                           indf1	equ	0xFE7
 10722                           postdec1	equ	0xFE5
 10723                           fsr1h	equ	0xFE2
 10724                           fsr1l	equ	0xFE1
 10725                           indf2	equ	0xFDF
 10726                           postinc2	equ	0xFDE
 10727                           postdec2	equ	0xFDD
 10728                           plusw2	equ	0xFDB
 10729                           fsr2h	equ	0xFDA
 10730                           fsr2l	equ	0xFD9
 10731                           status	equ	0xFD8
 10732                           
 10733 ;; *************** function _MiMAC_SetAltAddress *****************
 10734 ;; Defined at:
 10735 ;;		line 1421 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 10736 ;; Parameters:    Size  Location     Type
 10737 ;;  Address         1    wreg     PTR unsigned char 
 10738 ;;		 -> MiApp_StartConnection@tmp(2), MiApp_ProtocolInit@tmp(2), P2PTasks@tmp(2), myNetworkAddress(2), 
 10739 ;;  PANID           1   25[COMRAM] PTR unsigned char 
 10740 ;;		 -> myPANID(2), MAC_PANID(2), 
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;  Address         1   26[COMRAM] PTR unsigned char 
 10743 ;;		 -> MiApp_StartConnection@tmp(2), MiApp_ProtocolInit@tmp(2), P2PTasks@tmp(2), myNetworkAddress(2), 
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  1    wreg      unsigned char 
 10746 ;; Registers used:
 10747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10753 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10757 ;;Total ram usage:        2 bytes
 10758 ;; Hardware stack levels used:    1
 10759 ;; Hardware stack levels required when called:    5
 10760 ;; This function calls:
 10761 ;;		_PHYSetShortRAMAddr
 10762 ;; This function is called by:
 10763 ;;		_MiMAC_SendPacket
 10764 ;;		_MiMAC_PowerState
 10765 ;;		_P2PTasks
 10766 ;;		_MiApp_ProtocolInit
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           	psect	text38
 10771  002C9A                     __ptext38:
 10772                           	opt stack 0
 10773  002C9A                     _MiMAC_SetAltAddress:
 10774                           	opt stack 20
 10775                           
 10776                           ;incstack = 0
 10777                           ;MiMAC_SetAltAddress@Address stored from wreg
 10778  002C9A  6E1B               	movwf	MiMAC_SetAltAddress@Address,c
 10779                           
 10780                           ;drv_mrf_miwi_24j40.c: 1423: myNetworkAddress.v[0] = Address[0];
 10781  002C9C  501B               	movf	MiMAC_SetAltAddress@Address,w,c
 10782  002C9E  6ED9               	movwf	fsr2l,c
 10783  002CA0  6ADA               	clrf	fsr2h,c
 10784  002CA2  50DF               	movf	indf2,w,c
 10785  002CA4  6E45               	movwf	_myNetworkAddress,c
 10786                           
 10787                           ;drv_mrf_miwi_24j40.c: 1424: myNetworkAddress.v[1] = Address[1];
 10788  002CA6  501B               	movf	MiMAC_SetAltAddress@Address,w,c
 10789  002CA8  6ED9               	movwf	fsr2l,c
 10790  002CAA  6ADA               	clrf	fsr2h,c
 10791  002CAC  2AD9               	incf	fsr2l,f,c
 10792  002CAE  50DF               	movf	indf2,w,c
 10793  002CB0  6E46               	movwf	_myNetworkAddress+1,c
 10794                           
 10795                           ;drv_mrf_miwi_24j40.c: 1425: MAC_PANID.v[0] = PANID[0];
 10796  002CB2  501A               	movf	MiMAC_SetAltAddress@PANID,w,c
 10797  002CB4  6ED9               	movwf	fsr2l,c
 10798  002CB6  6ADA               	clrf	fsr2h,c
 10799  002CB8  50DF               	movf	indf2,w,c
 10800  002CBA  6E43               	movwf	_MAC_PANID,c
 10801                           
 10802                           ;drv_mrf_miwi_24j40.c: 1426: MAC_PANID.v[1] = PANID[1];
 10803  002CBC  501A               	movf	MiMAC_SetAltAddress@PANID,w,c
 10804  002CBE  6ED9               	movwf	fsr2l,c
 10805  002CC0  6ADA               	clrf	fsr2h,c
 10806  002CC2  2AD9               	incf	fsr2l,f,c
 10807  002CC4  50DF               	movf	indf2,w,c
 10808  002CC6  6E44               	movwf	_MAC_PANID+1,c
 10809                           
 10810                           ;drv_mrf_miwi_24j40.c: 1428: PHYSetShortRAMAddr((0x07), myNetworkAddress.v[0]);
 10811  002CC8  C045  F017         	movff	_myNetworkAddress,PHYSetShortRAMAddr@value
 10812  002CCC  0E07               	movlw	7
 10813  002CCE  EC15  F019         	call	_PHYSetShortRAMAddr
 10814                           
 10815                           ;drv_mrf_miwi_24j40.c: 1429: PHYSetShortRAMAddr((0x09), myNetworkAddress.v[1]);
 10816  002CD2  C046  F017         	movff	_myNetworkAddress+1,PHYSetShortRAMAddr@value
 10817  002CD6  0E09               	movlw	9
 10818  002CD8  EC15  F019         	call	_PHYSetShortRAMAddr
 10819                           
 10820                           ;drv_mrf_miwi_24j40.c: 1430: PHYSetShortRAMAddr((0x03), MAC_PANID.v[0]);
 10821  002CDC  C043  F017         	movff	_MAC_PANID,PHYSetShortRAMAddr@value
 10822  002CE0  0E03               	movlw	3
 10823  002CE2  EC15  F019         	call	_PHYSetShortRAMAddr
 10824                           
 10825                           ;drv_mrf_miwi_24j40.c: 1431: PHYSetShortRAMAddr((0x05), MAC_PANID.v[1]);
 10826  002CE6  C044  F017         	movff	_MAC_PANID+1,PHYSetShortRAMAddr@value
 10827  002CEA  0E05               	movlw	5
 10828  002CEC  EF15  F019         	goto	_PHYSetShortRAMAddr
 10829  002CF0                     __end_of_MiMAC_SetAltAddress:
 10830                           	opt stack 0
 10831                           tblptru	equ	0xFF8
 10832                           tblptrh	equ	0xFF7
 10833                           tblptrl	equ	0xFF6
 10834                           tablat	equ	0xFF5
 10835                           prodh	equ	0xFF4
 10836                           prodl	equ	0xFF3
 10837                           intcon	equ	0xFF2
 10838                           intcon2	equ	0xFF1
 10839                           postinc0	equ	0xFEE
 10840                           plusw0	equ	0xFEB
 10841                           wreg	equ	0xFE8
 10842                           indf1	equ	0xFE7
 10843                           postdec1	equ	0xFE5
 10844                           fsr1h	equ	0xFE2
 10845                           fsr1l	equ	0xFE1
 10846                           indf2	equ	0xFDF
 10847                           postinc2	equ	0xFDE
 10848                           postdec2	equ	0xFDD
 10849                           plusw2	equ	0xFDB
 10850                           fsr2h	equ	0xFDA
 10851                           fsr2l	equ	0xFD9
 10852                           status	equ	0xFD8
 10853                           
 10854 ;; *************** function _InitMRF24J40 *****************
 10855 ;; Defined at:
 10856 ;;		line 201 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;		None
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;  _ms             4   43[COMRAM] unsigned long 
 10861 ;;  _dcnt           4   35[COMRAM] unsigned long 
 10862 ;;  _ms             4   39[COMRAM] unsigned long 
 10863 ;;  _dcnt           4   31[COMRAM] unsigned long 
 10864 ;;  j               2   47[COMRAM] unsigned int 
 10865 ;;  i               1   49[COMRAM] unsigned char 
 10866 ;; Return value:  Size  Location     Type
 10867 ;;		None               void
 10868 ;; Registers used:
 10869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : F/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10876 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10878 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10879 ;;Total ram usage:       20 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:    6
 10882 ;; This function calls:
 10883 ;;		_MiMAC_SetChannel
 10884 ;;		_PHYGetLongRAMAddr
 10885 ;;		_PHYGetShortRAMAddr
 10886 ;;		_PHYSetLongRAMAddr
 10887 ;;		_PHYSetShortRAMAddr
 10888 ;; This function is called by:
 10889 ;;		_MiMAC_SendPacket
 10890 ;;		_MiMAC_PowerState
 10891 ;;		_MiMAC_Init
 10892 ;; This function uses a non-reentrant model
 10893 ;;
 10894                           
 10895                           	psect	text39
 10896  001AE8                     __ptext39:
 10897                           	opt stack 0
 10898  001AE8                     _InitMRF24J40:
 10899                           	opt stack 19
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;drv_mrf_miwi_24j40.c: 203: uint8_t i;
 10903                           ;drv_mrf_miwi_24j40.c: 204: uint16_t j;
 10904                           ;drv_mrf_miwi_24j40.c: 207: LATDbits.LATD0 = 0;
 10905                           
 10906                           ;incstack = 0
 10907  001AE8  908C               	bcf	3980,0,c	;volatile
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;drv_mrf_miwi_24j40.c: 208: { unsigned long _dcnt; unsigned long _ms; _ms = 3; while(_ms
      +                          ) { _dcnt=((unsigned long)(0.001/(1.0/((16000000)/4))/6)); while(_dcnt--); _ms--; } };
 10911  001AEA  0E03               	movlw	3
 10912  001AEC  6E28               	movwf	InitMRF24J40@_ms,c
 10913  001AEE  6A29               	clrf	InitMRF24J40@_ms+1,c
 10914  001AF0  6A2A               	clrf	InitMRF24J40@_ms+2,c
 10915  001AF2  6A2B               	clrf	InitMRF24J40@_ms+3,c
 10916  001AF4  D018               	goto	l71
 10917  001AF6                     l10102:
 10918                           
 10919                           ; BSR set to: 0
 10920  001AF6  0E9A               	movlw	154
 10921  001AF8  6E20               	movwf	InitMRF24J40@_dcnt,c
 10922  001AFA  0E02               	movlw	2
 10923  001AFC  6E21               	movwf	InitMRF24J40@_dcnt+1,c
 10924  001AFE  6A22               	clrf	InitMRF24J40@_dcnt+2,c
 10925  001B00  6A23               	clrf	InitMRF24J40@_dcnt+3,c
 10926  001B02                     l10104:
 10927                           
 10928                           ; BSR set to: 0
 10929  001B02  0620               	decf	InitMRF24J40@_dcnt,f,c
 10930  001B04  0E00               	movlw	0
 10931  001B06  5A21               	subwfb	InitMRF24J40@_dcnt+1,f,c
 10932  001B08  5A22               	subwfb	InitMRF24J40@_dcnt+2,f,c
 10933  001B0A  5A23               	subwfb	InitMRF24J40@_dcnt+3,f,c
 10934  001B0C  2820               	incf	InitMRF24J40@_dcnt,w,c
 10935  001B0E  E1F9               	bnz	l10104
 10936  001B10  2821               	incf	InitMRF24J40@_dcnt+1,w,c
 10937  001B12  E1F7               	bnz	l10104
 10938  001B14  2822               	incf	InitMRF24J40@_dcnt+2,w,c
 10939  001B16  E1F5               	bnz	l10104
 10940  001B18  2823               	incf	InitMRF24J40@_dcnt+3,w,c
 10941  001B1A  E1F3               	bnz	l10104
 10942                           
 10943                           ; BSR set to: 0
 10944  001B1C  0628               	decf	InitMRF24J40@_ms,f,c
 10945  001B1E  0E00               	movlw	0
 10946  001B20  5A29               	subwfb	InitMRF24J40@_ms+1,f,c
 10947  001B22  5A2A               	subwfb	InitMRF24J40@_ms+2,f,c
 10948  001B24  5A2B               	subwfb	InitMRF24J40@_ms+3,f,c
 10949  001B26                     l71:
 10950                           
 10951                           ; BSR set to: 0
 10952  001B26  5028               	movf	InitMRF24J40@_ms,w,c
 10953  001B28  1029               	iorwf	InitMRF24J40@_ms+1,w,c
 10954  001B2A  102A               	iorwf	InitMRF24J40@_ms+2,w,c
 10955  001B2C  102B               	iorwf	InitMRF24J40@_ms+3,w,c
 10956  001B2E  E1E3               	bnz	l10102
 10957                           
 10958                           ; BSR set to: 0
 10959                           ;drv_mrf_miwi_24j40.c: 210: LATDbits.LATD0 = 1;
 10960  001B30  808C               	bsf	3980,0,c	;volatile
 10961                           
 10962                           ; BSR set to: 0
 10963                           ;drv_mrf_miwi_24j40.c: 211: { unsigned long _dcnt; unsigned long _ms; _ms = 10; while(_m
      +                          s) { _dcnt=((unsigned long)(0.001/(1.0/((16000000)/4))/6)); while(_dcnt--); _ms--; } };
 10964  001B32  0E0A               	movlw	10
 10965  001B34  6E2C               	movwf	InitMRF24J40@_ms_706,c
 10966  001B36  6A2D               	clrf	InitMRF24J40@_ms_706+1,c
 10967  001B38  6A2E               	clrf	InitMRF24J40@_ms_706+2,c
 10968  001B3A  6A2F               	clrf	InitMRF24J40@_ms_706+3,c
 10969  001B3C  D018               	goto	l77
 10970  001B3E                     l10110:
 10971                           
 10972                           ; BSR set to: 0
 10973  001B3E  0E9A               	movlw	154
 10974  001B40  6E24               	movwf	InitMRF24J40@_dcnt_705,c
 10975  001B42  0E02               	movlw	2
 10976  001B44  6E25               	movwf	InitMRF24J40@_dcnt_705+1,c
 10977  001B46  6A26               	clrf	InitMRF24J40@_dcnt_705+2,c
 10978  001B48  6A27               	clrf	InitMRF24J40@_dcnt_705+3,c
 10979  001B4A                     l10112:
 10980                           
 10981                           ; BSR set to: 0
 10982  001B4A  0624               	decf	InitMRF24J40@_dcnt_705,f,c
 10983  001B4C  0E00               	movlw	0
 10984  001B4E  5A25               	subwfb	InitMRF24J40@_dcnt_705+1,f,c
 10985  001B50  5A26               	subwfb	InitMRF24J40@_dcnt_705+2,f,c
 10986  001B52  5A27               	subwfb	InitMRF24J40@_dcnt_705+3,f,c
 10987  001B54  2824               	incf	InitMRF24J40@_dcnt_705,w,c
 10988  001B56  E1F9               	bnz	l10112
 10989  001B58  2825               	incf	InitMRF24J40@_dcnt_705+1,w,c
 10990  001B5A  E1F7               	bnz	l10112
 10991  001B5C  2826               	incf	InitMRF24J40@_dcnt_705+2,w,c
 10992  001B5E  E1F5               	bnz	l10112
 10993  001B60  2827               	incf	InitMRF24J40@_dcnt_705+3,w,c
 10994  001B62  E1F3               	bnz	l10112
 10995                           
 10996                           ; BSR set to: 0
 10997  001B64  062C               	decf	InitMRF24J40@_ms_706,f,c
 10998  001B66  0E00               	movlw	0
 10999  001B68  5A2D               	subwfb	InitMRF24J40@_ms_706+1,f,c
 11000  001B6A  5A2E               	subwfb	InitMRF24J40@_ms_706+2,f,c
 11001  001B6C  5A2F               	subwfb	InitMRF24J40@_ms_706+3,f,c
 11002  001B6E                     l77:
 11003                           
 11004                           ; BSR set to: 0
 11005  001B6E  502C               	movf	InitMRF24J40@_ms_706,w,c
 11006  001B70  102D               	iorwf	InitMRF24J40@_ms_706+1,w,c
 11007  001B72  102E               	iorwf	InitMRF24J40@_ms_706+2,w,c
 11008  001B74  102F               	iorwf	InitMRF24J40@_ms_706+3,w,c
 11009  001B76  E1E3               	bnz	l10110
 11010                           
 11011                           ; BSR set to: 0
 11012                           ;drv_mrf_miwi_24j40.c: 214: PHYSetShortRAMAddr((0x55), 0x07);
 11013  001B78  0E07               	movlw	7
 11014  001B7A  6E17               	movwf	PHYSetShortRAMAddr@value,c
 11015  001B7C  0E55               	movlw	85
 11016  001B7E  EC15  F019         	call	_PHYSetShortRAMAddr
 11017  001B82                     l83:
 11018                           
 11019                           ;drv_mrf_miwi_24j40.c: 216: {
 11020                           ;drv_mrf_miwi_24j40.c: 217: i = PHYGetShortRAMAddr((0x54));
 11021  001B82  0E54               	movlw	84
 11022  001B84  EC96  F018         	call	_PHYGetShortRAMAddr
 11023  001B88  6E32               	movwf	InitMRF24J40@i,c
 11024                           
 11025                           ;drv_mrf_miwi_24j40.c: 218: } while ((i & 0x07) != (uint8_t) 0x00);
 11026  001B8A  C032  F01F         	movff	InitMRF24J40@i,??_InitMRF24J40
 11027  001B8E  0E07               	movlw	7
 11028  001B90  161F               	andwf	??_InitMRF24J40,f,c
 11029  001B92  E1F7               	bnz	l83
 11030                           
 11031                           ;drv_mrf_miwi_24j40.c: 220: for (j = 0; j < (uint16_t) 1000; j++)
 11032  001B94  6A30               	clrf	InitMRF24J40@j,c
 11033  001B96  6A31               	clrf	InitMRF24J40@j+1,c
 11034  001B98                     l10124:
 11035                           
 11036                           ;drv_mrf_miwi_24j40.c: 221: {
 11037  001B98  4A30               	infsnz	InitMRF24J40@j,f,c
 11038  001B9A  2A31               	incf	InitMRF24J40@j+1,f,c
 11039  001B9C  0EE8               	movlw	232
 11040  001B9E  5C30               	subwf	InitMRF24J40@j,w,c
 11041  001BA0  0E03               	movlw	3
 11042  001BA2  5831               	subwfb	InitMRF24J40@j+1,w,c
 11043  001BA4  E3F9               	bnc	l10124
 11044                           
 11045                           ;drv_mrf_miwi_24j40.c: 222: }
 11046                           ;drv_mrf_miwi_24j40.c: 225: PHYSetShortRAMAddr((0x1B), 0x01);
 11047  001BA6  0E01               	movlw	1
 11048  001BA8  6E17               	movwf	PHYSetShortRAMAddr@value,c
 11049  001BAA  0E1B               	movlw	27
 11050  001BAC  EC15  F019         	call	_PHYSetShortRAMAddr
 11051                           
 11052                           ;drv_mrf_miwi_24j40.c: 228: PHYSetShortRAMAddr((0x07), 0xFF);
 11053  001BB0  6817               	setf	PHYSetShortRAMAddr@value,c
 11054  001BB2  0E07               	movlw	7
 11055  001BB4  EC15  F019         	call	_PHYSetShortRAMAddr
 11056                           
 11057                           ;drv_mrf_miwi_24j40.c: 229: PHYSetShortRAMAddr((0x09), 0xFF);
 11058  001BB8  6817               	setf	PHYSetShortRAMAddr@value,c
 11059  001BBA  0E09               	movlw	9
 11060  001BBC  EC15  F019         	call	_PHYSetShortRAMAddr
 11061                           
 11062                           ;drv_mrf_miwi_24j40.c: 230: PHYSetShortRAMAddr((0x03), 0xFF);
 11063  001BC0  6817               	setf	PHYSetShortRAMAddr@value,c
 11064  001BC2  0E03               	movlw	3
 11065  001BC4  EC15  F019         	call	_PHYSetShortRAMAddr
 11066                           
 11067                           ;drv_mrf_miwi_24j40.c: 231: PHYSetShortRAMAddr((0x05), 0xFF);
 11068  001BC8  6817               	setf	PHYSetShortRAMAddr@value,c
 11069  001BCA  0E05               	movlw	5
 11070  001BCC  EC15  F019         	call	_PHYSetShortRAMAddr
 11071                           
 11072                           ;drv_mrf_miwi_24j40.c: 234: for (i = 0; i < (uint8_t) 8; i++)
 11073  001BD0  6A32               	clrf	InitMRF24J40@i,c
 11074  001BD2                     l10136:
 11075                           
 11076                           ;drv_mrf_miwi_24j40.c: 235: {
 11077                           ;drv_mrf_miwi_24j40.c: 236: PHYSetShortRAMAddr((0x0B) + i * 2, MACInitParams.PAddress[i]
      +                          );
 11078  001BD2  5032               	movf	InitMRF24J40@i,w,c
 11079  001BD4  0100               	movlb	0	; () banked
 11080  001BD6  2587               	addwf	(_MACInitParams+1)& (0+255),w,b
 11081  001BD8  6ED9               	movwf	fsr2l,c
 11082  001BDA  0E00               	movlw	0
 11083  001BDC  2188               	addwfc	(_MACInitParams+2)& (0+255),w,b
 11084  001BDE  6EDA               	movwf	fsr2h,c
 11085  001BE0  50DF               	movf	indf2,w,c
 11086  001BE2  6E17               	movwf	PHYSetShortRAMAddr@value,c
 11087  001BE4  5032               	movf	InitMRF24J40@i,w,c
 11088  001BE6  0D02               	mullw	2
 11089  001BE8  50F3               	movf	prodl,w,c
 11090  001BEA  0F0B               	addlw	11
 11091  001BEC  EC15  F019         	call	_PHYSetShortRAMAddr
 11092  001BF0  2A32               	incf	InitMRF24J40@i,f,c
 11093  001BF2  0E07               	movlw	7
 11094  001BF4  6432               	cpfsgt	InitMRF24J40@i,c
 11095  001BF6  D7ED               	goto	l10136
 11096                           
 11097                           ;drv_mrf_miwi_24j40.c: 237: }
 11098                           ;drv_mrf_miwi_24j40.c: 240: PHYSetLongRAMAddr((0x202), 0x80);
 11099  001BF8  0E02               	movlw	2
 11100  001BFA  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 11101  001BFC  6E17               	movwf	PHYSetLongRAMAddr@address,c
 11102  001BFE  0E80               	movlw	128
 11103  001C00  6E19               	movwf	PHYSetLongRAMAddr@value,c
 11104  001C02  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 11105                           
 11106                           ;drv_mrf_miwi_24j40.c: 263: PHYSetLongRAMAddr((0x203), 0x00);
 11107  001C06  0E02               	movlw	2
 11108  001C08  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 11109  001C0A  0E03               	movlw	3
 11110  001C0C  6E17               	movwf	PHYSetLongRAMAddr@address,c
 11111  001C0E  6A19               	clrf	PHYSetLongRAMAddr@value,c
 11112  001C10  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 11113                           
 11114                           ;drv_mrf_miwi_24j40.c: 267: PHYSetLongRAMAddr((0x206), 0x90);
 11115  001C14  0E02               	movlw	2
 11116  001C16  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 11117  001C18  0E06               	movlw	6
 11118  001C1A  6E17               	movwf	PHYSetLongRAMAddr@address,c
 11119  001C1C  0E90               	movlw	144
 11120  001C1E  6E19               	movwf	PHYSetLongRAMAddr@value,c
 11121  001C20  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 11122                           
 11123                           ;drv_mrf_miwi_24j40.c: 269: PHYSetLongRAMAddr((0x207), 0x80);
 11124  001C24  0E02               	movlw	2
 11125  001C26  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 11126  001C28  0E07               	movlw	7
 11127  001C2A  6E17               	movwf	PHYSetLongRAMAddr@address,c
 11128  001C2C  0E80               	movlw	128
 11129  001C2E  6E19               	movwf	PHYSetLongRAMAddr@value,c
 11130  001C30  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 11131                           
 11132                           ;drv_mrf_miwi_24j40.c: 271: PHYSetLongRAMAddr((0x208), 0x10);
 11133  001C34  0E02               	movlw	2
 11134  001C36  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 11135  001C38  0E08               	movlw	8
 11136  001C3A  6E17               	movwf	PHYSetLongRAMAddr@address,c
 11137  001C3C  0E10               	movlw	16
 11138  001C3E  6E19               	movwf	PHYSetLongRAMAddr@value,c
 11139  001C40  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 11140                           
 11141                           ;drv_mrf_miwi_24j40.c: 273: PHYSetLongRAMAddr((0x220), 0x21);
 11142  001C44  0E02               	movlw	2
 11143  001C46  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 11144  001C48  0E20               	movlw	32
 11145  001C4A  6E17               	movwf	PHYSetLongRAMAddr@address,c
 11146  001C4C  0E21               	movlw	33
 11147  001C4E  6E19               	movwf	PHYSetLongRAMAddr@value,c
 11148  001C50  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 11149                           
 11150                           ;drv_mrf_miwi_24j40.c: 276: PHYSetShortRAMAddr((0x75), 0x80);
 11151  001C54  0E80               	movlw	128
 11152  001C56  6E17               	movwf	PHYSetShortRAMAddr@value,c
 11153  001C58  0E75               	movlw	117
 11154  001C5A  EC15  F019         	call	_PHYSetShortRAMAddr
 11155                           
 11156                           ;drv_mrf_miwi_24j40.c: 278: PHYSetShortRAMAddr((0x7D), 0x40);
 11157  001C5E  0E40               	movlw	64
 11158  001C60  6E17               	movwf	PHYSetShortRAMAddr@value,c
 11159  001C62  0E7D               	movlw	125
 11160  001C64  EC15  F019         	call	_PHYSetShortRAMAddr
 11161                           
 11162                           ;drv_mrf_miwi_24j40.c: 280: PHYSetShortRAMAddr((0x7F), 0x60);
 11163  001C68  0E60               	movlw	96
 11164  001C6A  6E17               	movwf	PHYSetShortRAMAddr@value,c
 11165  001C6C  0E7F               	movlw	127
 11166  001C6E  EC15  F019         	call	_PHYSetShortRAMAddr
 11167                           
 11168                           ;drv_mrf_miwi_24j40.c: 291: PHYSetShortRAMAddr((0x31), 0x98);
 11169  001C72  0E98               	movlw	152
 11170  001C74  6E17               	movwf	PHYSetShortRAMAddr@value,c
 11171  001C76  0E31               	movlw	49
 11172  001C78  EC15  F019         	call	_PHYSetShortRAMAddr
 11173                           
 11174                           ;drv_mrf_miwi_24j40.c: 292: PHYSetShortRAMAddr((0x5D), 0x95);
 11175  001C7C  0E95               	movlw	149
 11176  001C7E  6E17               	movwf	PHYSetShortRAMAddr@value,c
 11177  001C80  0E5D               	movlw	93
 11178  001C82  EC15  F019         	call	_PHYSetShortRAMAddr
 11179  001C86                     l10154:
 11180                           
 11181                           ;drv_mrf_miwi_24j40.c: 296: {
 11182                           ;drv_mrf_miwi_24j40.c: 297: i = PHYGetLongRAMAddr((0x20f));
 11183  001C86  0E02               	movlw	2
 11184  001C88  6E18               	movwf	PHYGetLongRAMAddr@address+1,c
 11185  001C8A  0E0F               	movlw	15
 11186  001C8C  6E17               	movwf	PHYGetLongRAMAddr@address,c
 11187  001C8E  EC78  F016         	call	_PHYGetLongRAMAddr	;wreg free
 11188  001C92  6E32               	movwf	InitMRF24J40@i,c
 11189                           
 11190                           ;drv_mrf_miwi_24j40.c: 298: }
 11191                           ;drv_mrf_miwi_24j40.c: 299: while ((i&0xA0) != 0xA0);
 11192  001C94  5032               	movf	InitMRF24J40@i,w,c
 11193  001C96  0BA0               	andlw	160
 11194  001C98  0AA0               	xorlw	160
 11195  001C9A  E1F5               	bnz	l10154
 11196                           
 11197                           ;drv_mrf_miwi_24j40.c: 301: PHYSetShortRAMAddr((0x65), 0xE6);
 11198  001C9C  0EE6               	movlw	230
 11199  001C9E  6E17               	movwf	PHYSetShortRAMAddr@value,c
 11200  001CA0  0E65               	movlw	101
 11201  001CA2  EC15  F019         	call	_PHYSetShortRAMAddr
 11202                           
 11203                           ;drv_mrf_miwi_24j40.c: 308: PHYSetLongRAMAddr((0x200), 0x03);
 11204  001CA6  0E02               	movlw	2
 11205  001CA8  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 11206  001CAA  6A17               	clrf	PHYSetLongRAMAddr@address,c
 11207  001CAC  0E03               	movlw	3
 11208  001CAE  6E19               	movwf	PHYSetLongRAMAddr@value,c
 11209  001CB0  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 11210                           
 11211                           ;drv_mrf_miwi_24j40.c: 309: PHYSetLongRAMAddr((0x201), 0x02);
 11212  001CB4  0E02               	movlw	2
 11213  001CB6  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 11214  001CB8  0E01               	movlw	1
 11215  001CBA  6E17               	movwf	PHYSetLongRAMAddr@address,c
 11216  001CBC  0E02               	movlw	2
 11217  001CBE  6E19               	movwf	PHYSetLongRAMAddr@value,c
 11218  001CC0  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 11219                           
 11220                           ;drv_mrf_miwi_24j40.c: 311: MiMAC_SetChannel(MACCurrentChannel, 0);
 11221  001CC4  6A1D               	clrf	MiMAC_SetChannel@offsetFreq,c
 11222  001CC6  0100               	movlb	0	; () banked
 11223  001CC8  5190               	movf	_MACCurrentChannel& (0+255),w,b
 11224  001CCA  EFA3  F017         	goto	_MiMAC_SetChannel
 11225  001CCE                     __end_of_InitMRF24J40:
 11226                           	opt stack 0
 11227                           tblptru	equ	0xFF8
 11228                           tblptrh	equ	0xFF7
 11229                           tblptrl	equ	0xFF6
 11230                           tablat	equ	0xFF5
 11231                           prodh	equ	0xFF4
 11232                           prodl	equ	0xFF3
 11233                           intcon	equ	0xFF2
 11234                           intcon2	equ	0xFF1
 11235                           postinc0	equ	0xFEE
 11236                           plusw0	equ	0xFEB
 11237                           wreg	equ	0xFE8
 11238                           indf1	equ	0xFE7
 11239                           postdec1	equ	0xFE5
 11240                           fsr1h	equ	0xFE2
 11241                           fsr1l	equ	0xFE1
 11242                           indf2	equ	0xFDF
 11243                           postinc2	equ	0xFDE
 11244                           postdec2	equ	0xFDD
 11245                           plusw2	equ	0xFDB
 11246                           fsr2h	equ	0xFDA
 11247                           fsr2l	equ	0xFD9
 11248                           status	equ	0xFD8
 11249                           
 11250 ;; *************** function _PHYGetShortRAMAddr *****************
 11251 ;; Defined at:
 11252 ;;		line 154 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11253 ;; Parameters:    Size  Location     Type
 11254 ;;  address         1    wreg     unsigned char 
 11255 ;; Auto vars:     Size  Location     Type
 11256 ;;  address         1   22[COMRAM] unsigned char 
 11257 ;;  tmpRFIE         1   24[COMRAM] volatile unsigned char 
 11258 ;;  toReturn        1   23[COMRAM] unsigned char 
 11259 ;; Return value:  Size  Location     Type
 11260 ;;                  1    wreg      unsigned char 
 11261 ;; Registers used:
 11262 ;;		wreg, status,2, cstack
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/0
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11269 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11271 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11272 ;;Total ram usage:        3 bytes
 11273 ;; Hardware stack levels used:    1
 11274 ;; Hardware stack levels required when called:    4
 11275 ;; This function calls:
 11276 ;;		_SPI1_Exchange8bit
 11277 ;; This function is called by:
 11278 ;;		_InitMRF24J40
 11279 ;;		_MiMAC_PowerState
 11280 ;; This function uses a non-reentrant model
 11281 ;;
 11282                           
 11283                           	psect	text40
 11284  00312C                     __ptext40:
 11285                           	opt stack 0
 11286  00312C                     _PHYGetShortRAMAddr:
 11287                           	opt stack 20
 11288                           
 11289                           ;incstack = 0
 11290                           ;PHYGetShortRAMAddr@address stored from wreg
 11291  00312C  6E17               	movwf	PHYGetShortRAMAddr@address,c
 11292                           
 11293                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 11294                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 11295  00312E  0E00               	movlw	0
 11296  003130  B8F2               	btfsc	intcon,4,c	;volatile
 11297  003132  0E01               	movlw	1
 11298  003134  6E19               	movwf	PHYGetShortRAMAddr@tmpRFIE,c	;volatile
 11299                           
 11300                           ;drv_mrf_miwi_24j40.c: 159: INTCONbits.INT0IE = 0;
 11301  003136  98F2               	bcf	intcon,4,c	;volatile
 11302                           
 11303                           ;drv_mrf_miwi_24j40.c: 160: LATAbits.LATA5 = 0;
 11304  003138  9A89               	bcf	3977,5,c	;volatile
 11305                           
 11306                           ;drv_mrf_miwi_24j40.c: 161: SPI1_Exchange8bit(address);
 11307  00313A  5017               	movf	PHYGetShortRAMAddr@address,w,c
 11308  00313C  ECE5  F019         	call	_SPI1_Exchange8bit
 11309                           
 11310                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPI1_Exchange8bit(0x00);
 11311  003140  0E00               	movlw	0
 11312  003142  ECE5  F019         	call	_SPI1_Exchange8bit
 11313  003146  6E18               	movwf	PHYGetShortRAMAddr@toReturn,c
 11314                           
 11315                           ;drv_mrf_miwi_24j40.c: 163: LATAbits.LATA5 = 1;
 11316  003148  8A89               	bsf	3977,5,c	;volatile
 11317                           
 11318                           ;drv_mrf_miwi_24j40.c: 164: INTCONbits.INT0IE = tmpRFIE;
 11319  00314A  B019               	btfsc	PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
 11320  00314C  D002               	bra	u9265
 11321  00314E  98F2               	bcf	intcon,4,c	;volatile
 11322  003150  D001               	bra	u9266
 11323  003152                     u9265:
 11324  003152  88F2               	bsf	intcon,4,c	;volatile
 11325  003154                     u9266:
 11326                           
 11327                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 11328  003154  5018               	movf	PHYGetShortRAMAddr@toReturn,w,c
 11329  003156  0012               	return		;funcret
 11330  003158                     __end_of_PHYGetShortRAMAddr:
 11331                           	opt stack 0
 11332                           tblptru	equ	0xFF8
 11333                           tblptrh	equ	0xFF7
 11334                           tblptrl	equ	0xFF6
 11335                           tablat	equ	0xFF5
 11336                           prodh	equ	0xFF4
 11337                           prodl	equ	0xFF3
 11338                           intcon	equ	0xFF2
 11339                           intcon2	equ	0xFF1
 11340                           postinc0	equ	0xFEE
 11341                           plusw0	equ	0xFEB
 11342                           wreg	equ	0xFE8
 11343                           indf1	equ	0xFE7
 11344                           postdec1	equ	0xFE5
 11345                           fsr1h	equ	0xFE2
 11346                           fsr1l	equ	0xFE1
 11347                           indf2	equ	0xFDF
 11348                           postinc2	equ	0xFDE
 11349                           postdec2	equ	0xFDD
 11350                           plusw2	equ	0xFDB
 11351                           fsr2h	equ	0xFDA
 11352                           fsr2l	equ	0xFD9
 11353                           status	equ	0xFD8
 11354                           
 11355 ;; *************** function _PHYGetLongRAMAddr *****************
 11356 ;; Defined at:
 11357 ;;		line 185 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;  address         2   22[COMRAM] unsigned int 
 11360 ;; Auto vars:     Size  Location     Type
 11361 ;;  tmpRFIE         1   27[COMRAM] volatile unsigned char 
 11362 ;;  toReturn        1   26[COMRAM] unsigned char 
 11363 ;; Return value:  Size  Location     Type
 11364 ;;                  1    wreg      unsigned char 
 11365 ;; Registers used:
 11366 ;;		wreg, status,2, status,0, cstack
 11367 ;; Tracked objects:
 11368 ;;		On entry : 0/0
 11369 ;;		On exit  : 0/0
 11370 ;;		Unchanged: 0/0
 11371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11373 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11375 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11376 ;;Total ram usage:        6 bytes
 11377 ;; Hardware stack levels used:    1
 11378 ;; Hardware stack levels required when called:    4
 11379 ;; This function calls:
 11380 ;;		_SPI1_Exchange8bit
 11381 ;; This function is called by:
 11382 ;;		_InitMRF24J40
 11383 ;;		_MiMAC_PowerState
 11384 ;; This function uses a non-reentrant model
 11385 ;;
 11386                           
 11387                           	psect	text41
 11388  002CF0                     __ptext41:
 11389                           	opt stack 0
 11390  002CF0                     _PHYGetLongRAMAddr:
 11391                           	opt stack 20
 11392                           
 11393                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 11394                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 11395                           
 11396                           ;incstack = 0
 11397  002CF0  0E00               	movlw	0
 11398  002CF2  B8F2               	btfsc	intcon,4,c	;volatile
 11399  002CF4  0E01               	movlw	1
 11400  002CF6  6E1C               	movwf	PHYGetLongRAMAddr@tmpRFIE,c	;volatile
 11401                           
 11402                           ;drv_mrf_miwi_24j40.c: 190: INTCONbits.INT0IE = 0;
 11403  002CF8  98F2               	bcf	intcon,4,c	;volatile
 11404                           
 11405                           ;drv_mrf_miwi_24j40.c: 191: LATAbits.LATA5 = 0;
 11406  002CFA  9A89               	bcf	3977,5,c	;volatile
 11407                           
 11408                           ;drv_mrf_miwi_24j40.c: 192: SPI1_Exchange8bit(((address >> 3)&0x7F) | 0x80);
 11409  002CFC  C017  F019         	movff	PHYGetLongRAMAddr@address,??_PHYGetLongRAMAddr
 11410  002D00  C018  F01A         	movff	PHYGetLongRAMAddr@address+1,??_PHYGetLongRAMAddr+1
 11411  002D04  90D8               	bcf	status,0,c
 11412  002D06  321A               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 11413  002D08  3219               	rrcf	??_PHYGetLongRAMAddr,f,c
 11414  002D0A  90D8               	bcf	status,0,c
 11415  002D0C  321A               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 11416  002D0E  3219               	rrcf	??_PHYGetLongRAMAddr,f,c
 11417  002D10  90D8               	bcf	status,0,c
 11418  002D12  321A               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 11419  002D14  3219               	rrcf	??_PHYGetLongRAMAddr,f,c
 11420  002D16  5019               	movf	??_PHYGetLongRAMAddr,w,c
 11421  002D18  0B7F               	andlw	127
 11422  002D1A  0980               	iorlw	128
 11423  002D1C  ECE5  F019         	call	_SPI1_Exchange8bit
 11424                           
 11425                           ;drv_mrf_miwi_24j40.c: 193: SPI1_Exchange8bit(((address << 5)&0xE0));
 11426  002D20  3817               	swapf	PHYGetLongRAMAddr@address,w,c
 11427  002D22  46E8               	rlncf	wreg,f,c
 11428  002D24  0BE0               	andlw	224
 11429  002D26  ECE5  F019         	call	_SPI1_Exchange8bit
 11430                           
 11431                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPI1_Exchange8bit(0x00);
 11432  002D2A  0E00               	movlw	0
 11433  002D2C  ECE5  F019         	call	_SPI1_Exchange8bit
 11434  002D30  6E1B               	movwf	PHYGetLongRAMAddr@toReturn,c
 11435                           
 11436                           ;drv_mrf_miwi_24j40.c: 195: LATAbits.LATA5 = 1;
 11437  002D32  8A89               	bsf	3977,5,c	;volatile
 11438                           
 11439                           ;drv_mrf_miwi_24j40.c: 196: INTCONbits.INT0IE = tmpRFIE;
 11440  002D34  B01C               	btfsc	PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
 11441  002D36  D002               	bra	u9275
 11442  002D38  98F2               	bcf	intcon,4,c	;volatile
 11443  002D3A  D001               	bra	u9276
 11444  002D3C                     u9275:
 11445  002D3C  88F2               	bsf	intcon,4,c	;volatile
 11446  002D3E                     u9276:
 11447                           
 11448                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 11449  002D3E  501B               	movf	PHYGetLongRAMAddr@toReturn,w,c
 11450  002D40  0012               	return		;funcret
 11451  002D42                     __end_of_PHYGetLongRAMAddr:
 11452                           	opt stack 0
 11453                           tblptru	equ	0xFF8
 11454                           tblptrh	equ	0xFF7
 11455                           tblptrl	equ	0xFF6
 11456                           tablat	equ	0xFF5
 11457                           prodh	equ	0xFF4
 11458                           prodl	equ	0xFF3
 11459                           intcon	equ	0xFF2
 11460                           intcon2	equ	0xFF1
 11461                           postinc0	equ	0xFEE
 11462                           plusw0	equ	0xFEB
 11463                           wreg	equ	0xFE8
 11464                           indf1	equ	0xFE7
 11465                           postdec1	equ	0xFE5
 11466                           fsr1h	equ	0xFE2
 11467                           fsr1l	equ	0xFE1
 11468                           indf2	equ	0xFDF
 11469                           postinc2	equ	0xFDE
 11470                           postdec2	equ	0xFDD
 11471                           plusw2	equ	0xFDB
 11472                           fsr2h	equ	0xFDA
 11473                           fsr2l	equ	0xFD9
 11474                           status	equ	0xFD8
 11475                           
 11476 ;; *************** function _MiMAC_SetChannel *****************
 11477 ;; Defined at:
 11478 ;;		line 1302 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11479 ;; Parameters:    Size  Location     Type
 11480 ;;  channel         1    wreg     unsigned char 
 11481 ;;  offsetFreq      1   28[COMRAM] unsigned char 
 11482 ;; Auto vars:     Size  Location     Type
 11483 ;;  channel         1   29[COMRAM] unsigned char 
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  1    wreg      unsigned char 
 11486 ;; Registers used:
 11487 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/0
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11493 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11497 ;;Total ram usage:        2 bytes
 11498 ;; Hardware stack levels used:    1
 11499 ;; Hardware stack levels required when called:    5
 11500 ;; This function calls:
 11501 ;;		_PHYSetLongRAMAddr
 11502 ;;		_PHYSetShortRAMAddr
 11503 ;; This function is called by:
 11504 ;;		_InitMRF24J40
 11505 ;;		_MiApp_SetChannel
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           	psect	text42
 11510  002F46                     __ptext42:
 11511                           	opt stack 0
 11512  002F46                     _MiMAC_SetChannel:
 11513                           	opt stack 19
 11514                           
 11515                           ;incstack = 0
 11516                           ;MiMAC_SetChannel@channel stored from wreg
 11517  002F46  6E1E               	movwf	MiMAC_SetChannel@channel,c
 11518                           
 11519                           ;drv_mrf_miwi_24j40.c: 1304: if (channel < 11 || channel > 26)
 11520  002F48  0E0A               	movlw	10
 11521  002F4A  641E               	cpfsgt	MiMAC_SetChannel@channel,c
 11522  002F4C  0C00               	retlw	0
 11523  002F4E  0E1A               	movlw	26
 11524  002F50  641E               	cpfsgt	MiMAC_SetChannel@channel,c
 11525  002F52  D001               	goto	l202
 11526  002F54  0C00               	retlw	0
 11527  002F56                     l202:
 11528                           
 11529                           ;drv_mrf_miwi_24j40.c: 1307: }
 11530                           ;drv_mrf_miwi_24j40.c: 1316: MACCurrentChannel = channel;
 11531  002F56  C01E  F090         	movff	MiMAC_SetChannel@channel,_MACCurrentChannel
 11532                           
 11533                           ;drv_mrf_miwi_24j40.c: 1317: PHYSetLongRAMAddr((0x200), ((channel - 11) << 4) | 0x03);
 11534  002F5A  0E02               	movlw	2
 11535  002F5C  6E18               	movwf	PHYSetLongRAMAddr@address+1,c
 11536  002F5E  6A17               	clrf	PHYSetLongRAMAddr@address,c
 11537  002F60  501E               	movf	MiMAC_SetChannel@channel,w,c
 11538  002F62  0D10               	mullw	16
 11539  002F64  50F3               	movf	prodl,w,c
 11540  002F66  0F50               	addlw	80
 11541  002F68  0903               	iorlw	3
 11542  002F6A  6E19               	movwf	PHYSetLongRAMAddr@value,c
 11543  002F6C  ECCA  F016         	call	_PHYSetLongRAMAddr	;wreg free
 11544                           
 11545                           ;drv_mrf_miwi_24j40.c: 1318: PHYSetShortRAMAddr((0x6D), 0x04);
 11546  002F70  0E04               	movlw	4
 11547  002F72  6E17               	movwf	PHYSetShortRAMAddr@value,c
 11548  002F74  0E6D               	movlw	109
 11549  002F76  EC15  F019         	call	_PHYSetShortRAMAddr
 11550                           
 11551                           ;drv_mrf_miwi_24j40.c: 1319: PHYSetShortRAMAddr((0x6D), 0x00);
 11552  002F7A  6A17               	clrf	PHYSetShortRAMAddr@value,c
 11553  002F7C  0E6D               	movlw	109
 11554  002F7E  EC15  F019         	call	_PHYSetShortRAMAddr
 11555                           
 11556                           ;drv_mrf_miwi_24j40.c: 1320: return 1;
 11557  002F82  0C01               	retlw	1	;funcret
 11558  002F84                     __end_of_MiMAC_SetChannel:
 11559                           	opt stack 0
 11560                           tblptru	equ	0xFF8
 11561                           tblptrh	equ	0xFF7
 11562                           tblptrl	equ	0xFF6
 11563                           tablat	equ	0xFF5
 11564                           prodh	equ	0xFF4
 11565                           prodl	equ	0xFF3
 11566                           intcon	equ	0xFF2
 11567                           intcon2	equ	0xFF1
 11568                           postinc0	equ	0xFEE
 11569                           plusw0	equ	0xFEB
 11570                           wreg	equ	0xFE8
 11571                           indf1	equ	0xFE7
 11572                           postdec1	equ	0xFE5
 11573                           fsr1h	equ	0xFE2
 11574                           fsr1l	equ	0xFE1
 11575                           indf2	equ	0xFDF
 11576                           postinc2	equ	0xFDE
 11577                           postdec2	equ	0xFDD
 11578                           plusw2	equ	0xFDB
 11579                           fsr2h	equ	0xFDA
 11580                           fsr2l	equ	0xFD9
 11581                           status	equ	0xFD8
 11582                           
 11583 ;; *************** function _PHYSetShortRAMAddr *****************
 11584 ;; Defined at:
 11585 ;;		line 124 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;  address         1    wreg     unsigned char 
 11588 ;;  value           1   22[COMRAM] unsigned char 
 11589 ;; Auto vars:     Size  Location     Type
 11590 ;;  address         1   23[COMRAM] unsigned char 
 11591 ;;  tmpRFIE         1   24[COMRAM] volatile unsigned char 
 11592 ;; Return value:  Size  Location     Type
 11593 ;;		None               void
 11594 ;; Registers used:
 11595 ;;		wreg, status,2, cstack
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11601 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11604 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11605 ;;Total ram usage:        3 bytes
 11606 ;; Hardware stack levels used:    1
 11607 ;; Hardware stack levels required when called:    4
 11608 ;; This function calls:
 11609 ;;		_SPI1_Exchange8bit
 11610 ;; This function is called by:
 11611 ;;		_InitMRF24J40
 11612 ;;		_MiMAC_SendPacket
 11613 ;;		_MiMAC_PowerState
 11614 ;;		_MiMAC_SetChannel
 11615 ;;		_MiMAC_SetAltAddress
 11616 ;; This function uses a non-reentrant model
 11617 ;;
 11618                           
 11619                           	psect	text43
 11620  00322A                     __ptext43:
 11621                           	opt stack 0
 11622  00322A                     _PHYSetShortRAMAddr:
 11623                           	opt stack 21
 11624                           
 11625                           ;incstack = 0
 11626                           ;PHYSetShortRAMAddr@address stored from wreg
 11627  00322A  6E18               	movwf	PHYSetShortRAMAddr@address,c
 11628                           
 11629                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 11630  00322C  0E00               	movlw	0
 11631  00322E  B8F2               	btfsc	intcon,4,c	;volatile
 11632  003230  0E01               	movlw	1
 11633  003232  6E19               	movwf	PHYSetShortRAMAddr@tmpRFIE,c	;volatile
 11634                           
 11635                           ;drv_mrf_miwi_24j40.c: 128: INTCONbits.INT0IE = 0;
 11636  003234  98F2               	bcf	intcon,4,c	;volatile
 11637                           
 11638                           ;drv_mrf_miwi_24j40.c: 129: LATAbits.LATA5 = 0;
 11639  003236  9A89               	bcf	3977,5,c	;volatile
 11640                           
 11641                           ;drv_mrf_miwi_24j40.c: 130: SPI1_Exchange8bit(address);
 11642  003238  5018               	movf	PHYSetShortRAMAddr@address,w,c
 11643  00323A  ECE5  F019         	call	_SPI1_Exchange8bit
 11644                           
 11645                           ;drv_mrf_miwi_24j40.c: 131: SPI1_Exchange8bit(value);
 11646  00323E  5017               	movf	PHYSetShortRAMAddr@value,w,c
 11647  003240  ECE5  F019         	call	_SPI1_Exchange8bit
 11648                           
 11649                           ;drv_mrf_miwi_24j40.c: 132: LATAbits.LATA5 = 1;
 11650  003244  8A89               	bsf	3977,5,c	;volatile
 11651                           
 11652                           ;drv_mrf_miwi_24j40.c: 133: INTCONbits.INT0IE = tmpRFIE;
 11653  003246  B019               	btfsc	PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
 11654  003248  D002               	bra	u9255
 11655  00324A  98F2               	bcf	intcon,4,c	;volatile
 11656  00324C  D001               	bra	u9256
 11657  00324E                     u9255:
 11658  00324E  88F2               	bsf	intcon,4,c	;volatile
 11659  003250                     u9256:
 11660  003250  0012               	return		;funcret
 11661  003252                     __end_of_PHYSetShortRAMAddr:
 11662                           	opt stack 0
 11663                           tblptru	equ	0xFF8
 11664                           tblptrh	equ	0xFF7
 11665                           tblptrl	equ	0xFF6
 11666                           tablat	equ	0xFF5
 11667                           prodh	equ	0xFF4
 11668                           prodl	equ	0xFF3
 11669                           intcon	equ	0xFF2
 11670                           intcon2	equ	0xFF1
 11671                           postinc0	equ	0xFEE
 11672                           plusw0	equ	0xFEB
 11673                           wreg	equ	0xFE8
 11674                           indf1	equ	0xFE7
 11675                           postdec1	equ	0xFE5
 11676                           fsr1h	equ	0xFE2
 11677                           fsr1l	equ	0xFE1
 11678                           indf2	equ	0xFDF
 11679                           postinc2	equ	0xFDE
 11680                           postdec2	equ	0xFDD
 11681                           plusw2	equ	0xFDB
 11682                           fsr2h	equ	0xFDA
 11683                           fsr2l	equ	0xFD9
 11684                           status	equ	0xFD8
 11685                           
 11686 ;; *************** function _PHYSetLongRAMAddr *****************
 11687 ;; Defined at:
 11688 ;;		line 90 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11689 ;; Parameters:    Size  Location     Type
 11690 ;;  address         2   22[COMRAM] unsigned int 
 11691 ;;  value           1   24[COMRAM] unsigned char 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  tmpRFIE         1   27[COMRAM] volatile unsigned char 
 11694 ;; Return value:  Size  Location     Type
 11695 ;;		None               void
 11696 ;; Registers used:
 11697 ;;		wreg, status,2, status,0, cstack
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11703 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11706 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11707 ;;Total ram usage:        6 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; Hardware stack levels required when called:    4
 11710 ;; This function calls:
 11711 ;;		_SPI1_Exchange8bit
 11712 ;; This function is called by:
 11713 ;;		_InitMRF24J40
 11714 ;;		_MiMAC_SendPacket
 11715 ;;		_MiMAC_SetChannel
 11716 ;; This function uses a non-reentrant model
 11717 ;;
 11718                           
 11719                           	psect	text44
 11720  002D94                     __ptext44:
 11721                           	opt stack 0
 11722  002D94                     _PHYSetLongRAMAddr:
 11723                           	opt stack 21
 11724                           
 11725                           ;drv_mrf_miwi_24j40.c: 92: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 11726                           
 11727                           ;incstack = 0
 11728  002D94  0E00               	movlw	0
 11729  002D96  B8F2               	btfsc	intcon,4,c	;volatile
 11730  002D98  0E01               	movlw	1
 11731  002D9A  6E1C               	movwf	PHYSetLongRAMAddr@tmpRFIE,c	;volatile
 11732                           
 11733                           ;drv_mrf_miwi_24j40.c: 94: INTCONbits.INT0IE = 0;
 11734  002D9C  98F2               	bcf	intcon,4,c	;volatile
 11735                           
 11736                           ;drv_mrf_miwi_24j40.c: 95: LATAbits.LATA5 = 0;
 11737  002D9E  9A89               	bcf	3977,5,c	;volatile
 11738                           
 11739                           ;drv_mrf_miwi_24j40.c: 96: SPI1_Exchange8bit((((uint8_t) (address >> 3))&0x7F) | 0x80);
 11740  002DA0  C017  F01A         	movff	PHYSetLongRAMAddr@address,??_PHYSetLongRAMAddr
 11741  002DA4  C018  F01B         	movff	PHYSetLongRAMAddr@address+1,??_PHYSetLongRAMAddr+1
 11742  002DA8  90D8               	bcf	status,0,c
 11743  002DAA  321B               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 11744  002DAC  321A               	rrcf	??_PHYSetLongRAMAddr,f,c
 11745  002DAE  90D8               	bcf	status,0,c
 11746  002DB0  321B               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 11747  002DB2  321A               	rrcf	??_PHYSetLongRAMAddr,f,c
 11748  002DB4  90D8               	bcf	status,0,c
 11749  002DB6  321B               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 11750  002DB8  321A               	rrcf	??_PHYSetLongRAMAddr,f,c
 11751  002DBA  501A               	movf	??_PHYSetLongRAMAddr,w,c
 11752  002DBC  0B7F               	andlw	127
 11753  002DBE  0980               	iorlw	128
 11754  002DC0  ECE5  F019         	call	_SPI1_Exchange8bit
 11755                           
 11756                           ;drv_mrf_miwi_24j40.c: 97: SPI1_Exchange8bit((((uint8_t) (address << 5))&0xE0) | 0x10);
 11757  002DC4  3817               	swapf	PHYSetLongRAMAddr@address,w,c
 11758  002DC6  46E8               	rlncf	wreg,f,c
 11759  002DC8  0BE0               	andlw	224
 11760  002DCA  0910               	iorlw	16
 11761  002DCC  ECE5  F019         	call	_SPI1_Exchange8bit
 11762                           
 11763                           ;drv_mrf_miwi_24j40.c: 98: SPI1_Exchange8bit(value);
 11764  002DD0  5019               	movf	PHYSetLongRAMAddr@value,w,c
 11765  002DD2  ECE5  F019         	call	_SPI1_Exchange8bit
 11766                           
 11767                           ;drv_mrf_miwi_24j40.c: 99: LATAbits.LATA5 = 1;
 11768  002DD6  8A89               	bsf	3977,5,c	;volatile
 11769                           
 11770                           ;drv_mrf_miwi_24j40.c: 100: INTCONbits.INT0IE = tmpRFIE;
 11771  002DD8  B01C               	btfsc	PHYSetLongRAMAddr@tmpRFIE,0,c	;volatile
 11772  002DDA  D002               	bra	u9245
 11773  002DDC  98F2               	bcf	intcon,4,c	;volatile
 11774  002DDE  D001               	bra	u9246
 11775  002DE0                     u9245:
 11776  002DE0  88F2               	bsf	intcon,4,c	;volatile
 11777  002DE2                     u9246:
 11778  002DE2  0012               	return		;funcret
 11779  002DE4                     __end_of_PHYSetLongRAMAddr:
 11780                           	opt stack 0
 11781                           tblptru	equ	0xFF8
 11782                           tblptrh	equ	0xFF7
 11783                           tblptrl	equ	0xFF6
 11784                           tablat	equ	0xFF5
 11785                           prodh	equ	0xFF4
 11786                           prodl	equ	0xFF3
 11787                           intcon	equ	0xFF2
 11788                           intcon2	equ	0xFF1
 11789                           postinc0	equ	0xFEE
 11790                           plusw0	equ	0xFEB
 11791                           wreg	equ	0xFE8
 11792                           indf1	equ	0xFE7
 11793                           postdec1	equ	0xFE5
 11794                           fsr1h	equ	0xFE2
 11795                           fsr1l	equ	0xFE1
 11796                           indf2	equ	0xFDF
 11797                           postinc2	equ	0xFDE
 11798                           postdec2	equ	0xFDD
 11799                           plusw2	equ	0xFDB
 11800                           fsr2h	equ	0xFDA
 11801                           fsr2l	equ	0xFD9
 11802                           status	equ	0xFD8
 11803                           
 11804 ;; *************** function _SPI1_Exchange8bit *****************
 11805 ;; Defined at:
 11806 ;;		line 52 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 11807 ;; Parameters:    Size  Location     Type
 11808 ;;  data            1    wreg     unsigned char 
 11809 ;; Auto vars:     Size  Location     Type
 11810 ;;  data            1   21[COMRAM] unsigned char 
 11811 ;; Return value:  Size  Location     Type
 11812 ;;                  1    wreg      unsigned char 
 11813 ;; Registers used:
 11814 ;;		wreg, status,2
 11815 ;; Tracked objects:
 11816 ;;		On entry : 0/0
 11817 ;;		On exit  : 0/0
 11818 ;;		Unchanged: 0/0
 11819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11821 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11823 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11824 ;;Total ram usage:        1 bytes
 11825 ;; Hardware stack levels used:    1
 11826 ;; Hardware stack levels required when called:    3
 11827 ;; This function calls:
 11828 ;;		Nothing
 11829 ;; This function is called by:
 11830 ;;		_PHYSetLongRAMAddr
 11831 ;;		_PHYSetShortRAMAddr
 11832 ;;		_PHYGetShortRAMAddr
 11833 ;;		_PHYGetLongRAMAddr
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837                           	psect	text45
 11838  0033CA                     __ptext45:
 11839                           	opt stack 0
 11840  0033CA                     _SPI1_Exchange8bit:
 11841                           	opt stack 21
 11842                           
 11843                           ;incstack = 0
 11844                           ;SPI1_Exchange8bit@data stored from wreg
 11845  0033CA  6E16               	movwf	SPI1_Exchange8bit@data,c
 11846                           
 11847                           ;spi.c: 54: SSP1CON1bits.WCOL = 0;
 11848  0033CC  9EC6               	bcf	4038,7,c	;volatile
 11849                           
 11850                           ;spi.c: 56: SSP1BUF = data;
 11851  0033CE  C016  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
 11852  0033D2                     l793:
 11853  0033D2  A0C7               	btfss	4039,0,c	;volatile
 11854  0033D4  D7FE               	goto	l793
 11855                           
 11856                           ;spi.c: 59: }
 11857                           ;spi.c: 61: return (SSP1BUF);
 11858  0033D6  50C9               	movf	4041,w,c	;volatile
 11859  0033D8  0012               	return		;funcret
 11860  0033DA                     __end_of_SPI1_Exchange8bit:
 11861                           	opt stack 0
 11862                           tblptru	equ	0xFF8
 11863                           tblptrh	equ	0xFF7
 11864                           tblptrl	equ	0xFF6
 11865                           tablat	equ	0xFF5
 11866                           prodh	equ	0xFF4
 11867                           prodl	equ	0xFF3
 11868                           intcon	equ	0xFF2
 11869                           intcon2	equ	0xFF1
 11870                           postinc0	equ	0xFEE
 11871                           plusw0	equ	0xFEB
 11872                           wreg	equ	0xFE8
 11873                           indf1	equ	0xFE7
 11874                           postdec1	equ	0xFE5
 11875                           fsr1h	equ	0xFE2
 11876                           fsr1l	equ	0xFE1
 11877                           indf2	equ	0xFDF
 11878                           postinc2	equ	0xFDE
 11879                           postdec2	equ	0xFDD
 11880                           plusw2	equ	0xFDB
 11881                           fsr2h	equ	0xFDA
 11882                           fsr2l	equ	0xFD9
 11883                           status	equ	0xFD8
 11884                           
 11885 ;; *************** function _DemoOutput_UnicastFail *****************
 11886 ;; Defined at:
 11887 ;;		line 203 in file "../src/demo_ouput.c"
 11888 ;; Parameters:    Size  Location     Type
 11889 ;;		None
 11890 ;; Auto vars:     Size  Location     Type
 11891 ;;		None
 11892 ;; Return value:  Size  Location     Type
 11893 ;;		None               void
 11894 ;; Registers used:
 11895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11896 ;; Tracked objects:
 11897 ;;		On entry : F/0
 11898 ;;		On exit  : 0/0
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11905 ;;Total ram usage:        0 bytes
 11906 ;; Hardware stack levels used:    1
 11907 ;; Hardware stack levels required when called:    7
 11908 ;; This function calls:
 11909 ;;		_LCDDisplay
 11910 ;; This function is called by:
 11911 ;;		_Forward_Packet_PANCr_to_EDy
 11912 ;; This function uses a non-reentrant model
 11913 ;;
 11914                           
 11915                           	psect	text46
 11916  0033A6                     __ptext46:
 11917                           	opt stack 0
 11918  0033A6                     _DemoOutput_UnicastFail:
 11919                           	opt stack 17
 11920                           
 11921                           ; BSR set to: 0
 11922                           ;demo_ouput.c: 209: LCDDisplay((char *)" Unicast Failed", 0, 1);
 11923                           
 11924                           ;incstack = 0
 11925  0033A6  0E71               	movlw	low STR_25
 11926  0033A8  6FC2               	movwf	LCDDisplay@text& (0+255),b
 11927  0033AA  0EFF               	movlw	high STR_25
 11928  0033AC  6FC3               	movwf	(LCDDisplay@text+1)& (0+255),b
 11929  0033AE  6BC4               	clrf	LCDDisplay@value& (0+255),b
 11930  0033B0  0E01               	movlw	1
 11931  0033B2  6FC5               	movwf	LCDDisplay@delay& (0+255),b
 11932  0033B4  EF64  F017         	goto	_LCDDisplay	;wreg free
 11933  0033B8                     __end_of_DemoOutput_UnicastFail:
 11934                           	opt stack 0
 11935                           tblptru	equ	0xFF8
 11936                           tblptrh	equ	0xFF7
 11937                           tblptrl	equ	0xFF6
 11938                           tablat	equ	0xFF5
 11939                           prodh	equ	0xFF4
 11940                           prodl	equ	0xFF3
 11941                           intcon	equ	0xFF2
 11942                           intcon2	equ	0xFF1
 11943                           postinc0	equ	0xFEE
 11944                           plusw0	equ	0xFEB
 11945                           wreg	equ	0xFE8
 11946                           indf1	equ	0xFE7
 11947                           postdec1	equ	0xFE5
 11948                           fsr1h	equ	0xFE2
 11949                           fsr1l	equ	0xFE1
 11950                           indf2	equ	0xFDF
 11951                           postinc2	equ	0xFDE
 11952                           postdec2	equ	0xFDD
 11953                           plusw2	equ	0xFDB
 11954                           fsr2h	equ	0xFDA
 11955                           fsr2l	equ	0xFD9
 11956                           status	equ	0xFD8
 11957                           
 11958 ;; *************** function _Find_Index *****************
 11959 ;; Defined at:
 11960 ;;		line 105 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11961 ;; Parameters:    Size  Location     Type
 11962 ;;  DestAddr        2   21[COMRAM] PTR unsigned char 
 11963 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 11964 ;; Auto vars:     Size  Location     Type
 11965 ;;  i               1   25[COMRAM] unsigned char 
 11966 ;; Return value:  Size  Location     Type
 11967 ;;                  1    wreg      unsigned char 
 11968 ;; Registers used:
 11969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11970 ;; Tracked objects:
 11971 ;;		On entry : 0/0
 11972 ;;		On exit  : 0/0
 11973 ;;		Unchanged: 0/0
 11974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11978 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11979 ;;Total ram usage:        5 bytes
 11980 ;; Hardware stack levels used:    1
 11981 ;; Hardware stack levels required when called:    3
 11982 ;; This function calls:
 11983 ;;		Nothing
 11984 ;; This function is called by:
 11985 ;;		_P2PTasks
 11986 ;; This function uses a non-reentrant model
 11987 ;;
 11988                           
 11989                           	psect	text47
 11990  002740                     __ptext47:
 11991                           	opt stack 0
 11992  002740                     _Find_Index:
 11993                           	opt stack 22
 11994                           
 11995                           ;miwi_p2p.c: 107: uint8_t i;
 11996                           ;miwi_p2p.c: 108: for (i=0;i<conn_size;i++)
 11997                           
 11998                           ;incstack = 0
 11999  002740  6A1A               	clrf	Find_Index@i,c
 12000  002742  D040               	goto	l11272
 12001  002744                     l11256:
 12002                           
 12003                           ;miwi_p2p.c: 109: {
 12004                           ;miwi_p2p.c: 110: if (ConnectionTable[i].status.bits.isValid)
 12005  002744  501A               	movf	Find_Index@i,w,c
 12006  002746  0D0E               	mullw	14
 12007  002748  0EAC               	movlw	low (_ConnectionTable+12)
 12008  00274A  24F3               	addwf	prodl,w,c
 12009  00274C  6ED9               	movwf	fsr2l,c
 12010  00274E  0E02               	movlw	high (_ConnectionTable+12)
 12011  002750  20F4               	addwfc	prodh,w,c
 12012  002752  6EDA               	movwf	fsr2h,c
 12013  002754  AEDF               	btfss	indf2,7,c
 12014  002756  D035               	goto	l11270
 12015                           
 12016                           ;miwi_p2p.c: 111: {
 12017                           ;miwi_p2p.c: 112: if (DestAddr[1] == ConnectionTable[i].Address[0] && DestAddr[2] == Con
      +                          nectionTable[i].Address[1] && DestAddr[3] == ConnectionTable[i].Address[2] )
 12018  002758  501A               	movf	Find_Index@i,w,c
 12019  00275A  0D0E               	mullw	14
 12020  00275C  0EA4               	movlw	low (_ConnectionTable+4)
 12021  00275E  24F3               	addwf	prodl,w,c
 12022  002760  6ED9               	movwf	fsr2l,c
 12023  002762  0E02               	movlw	high (_ConnectionTable+4)
 12024  002764  20F4               	addwfc	prodh,w,c
 12025  002766  6EDA               	movwf	fsr2h,c
 12026  002768  EE10 F001          	lfsr	1,1
 12027  00276C  5016               	movf	Find_Index@DestAddr,w,c
 12028  00276E  26E1               	addwf	fsr1l,f,c
 12029  002770  5017               	movf	Find_Index@DestAddr+1,w,c
 12030  002772  22E2               	addwfc	fsr1h,f,c
 12031  002774  50DE               	movf	postinc2,w,c
 12032  002776  18E6               	xorwf	postinc1,w,c
 12033  002778  E124               	bnz	l11270
 12034  00277A  501A               	movf	Find_Index@i,w,c
 12035  00277C  0D0E               	mullw	14
 12036  00277E  0EA5               	movlw	low (_ConnectionTable+5)
 12037  002780  24F3               	addwf	prodl,w,c
 12038  002782  6ED9               	movwf	fsr2l,c
 12039  002784  0E02               	movlw	high (_ConnectionTable+5)
 12040  002786  20F4               	addwfc	prodh,w,c
 12041  002788  6EDA               	movwf	fsr2h,c
 12042  00278A  EE10 F002          	lfsr	1,2
 12043  00278E  5016               	movf	Find_Index@DestAddr,w,c
 12044  002790  26E1               	addwf	fsr1l,f,c
 12045  002792  5017               	movf	Find_Index@DestAddr+1,w,c
 12046  002794  22E2               	addwfc	fsr1h,f,c
 12047  002796  50DE               	movf	postinc2,w,c
 12048  002798  18E6               	xorwf	postinc1,w,c
 12049  00279A  E113               	bnz	l11270
 12050  00279C  501A               	movf	Find_Index@i,w,c
 12051  00279E  0D0E               	mullw	14
 12052  0027A0  0EA6               	movlw	low (_ConnectionTable+6)
 12053  0027A2  24F3               	addwf	prodl,w,c
 12054  0027A4  6ED9               	movwf	fsr2l,c
 12055  0027A6  0E02               	movlw	high (_ConnectionTable+6)
 12056  0027A8  20F4               	addwfc	prodh,w,c
 12057  0027AA  6EDA               	movwf	fsr2h,c
 12058  0027AC  EE10 F003          	lfsr	1,3
 12059  0027B0  5016               	movf	Find_Index@DestAddr,w,c
 12060  0027B2  26E1               	addwf	fsr1l,f,c
 12061  0027B4  5017               	movf	Find_Index@DestAddr+1,w,c
 12062  0027B6  22E2               	addwfc	fsr1h,f,c
 12063  0027B8  50DE               	movf	postinc2,w,c
 12064  0027BA  18E6               	xorwf	postinc1,w,c
 12065  0027BC  E102               	bnz	l11270
 12066                           
 12067                           ;miwi_p2p.c: 113: {
 12068                           ;miwi_p2p.c: 114: return i;
 12069  0027BE  501A               	movf	Find_Index@i,w,c
 12070  0027C0  0012               	return	
 12071  0027C2                     l11270:
 12072  0027C2  2A1A               	incf	Find_Index@i,f,c
 12073  0027C4                     l11272:
 12074  0027C4  5047               	movf	_conn_size,w,c
 12075  0027C6  5C1A               	subwf	Find_Index@i,w,c
 12076  0027C8  E3BD               	bnc	l11256
 12077                           
 12078                           ;miwi_p2p.c: 116: }
 12079                           ;miwi_p2p.c: 118: }
 12080                           ;miwi_p2p.c: 119: }
 12081                           ;miwi_p2p.c: 120: if (i==conn_size)
 12082  0027CA  5047               	movf	_conn_size,w,c
 12083  0027CC  181A               	xorwf	Find_Index@i,w,c
 12084  0027CE  B4D8               	btfsc	status,2,c
 12085                           
 12086                           ;miwi_p2p.c: 121: {
 12087                           ;miwi_p2p.c: 122: return 0xff;
 12088  0027D0  0EFF               	movlw	255
 12089  0027D2  0012               	return		;funcret
 12090  0027D4                     __end_of_Find_Index:
 12091                           	opt stack 0
 12092                           tblptru	equ	0xFF8
 12093                           tblptrh	equ	0xFF7
 12094                           tblptrl	equ	0xFF6
 12095                           tablat	equ	0xFF5
 12096                           prodh	equ	0xFF4
 12097                           prodl	equ	0xFF3
 12098                           intcon	equ	0xFF2
 12099                           intcon2	equ	0xFF1
 12100                           postinc0	equ	0xFEE
 12101                           plusw0	equ	0xFEB
 12102                           wreg	equ	0xFE8
 12103                           indf1	equ	0xFE7
 12104                           postinc1	equ	0xFE6
 12105                           postdec1	equ	0xFE5
 12106                           fsr1h	equ	0xFE2
 12107                           fsr1l	equ	0xFE1
 12108                           indf2	equ	0xFDF
 12109                           postinc2	equ	0xFDE
 12110                           postdec2	equ	0xFDD
 12111                           plusw2	equ	0xFDB
 12112                           fsr2h	equ	0xFDA
 12113                           fsr2l	equ	0xFD9
 12114                           status	equ	0xFD8
 12115                           
 12116 ;; *************** function _AddConnection *****************
 12117 ;; Defined at:
 12118 ;;		line 2525 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12119 ;; Parameters:    Size  Location     Type
 12120 ;;		None
 12121 ;; Auto vars:     Size  Location     Type
 12122 ;;  i               1   35[COMRAM] unsigned char 
 12123 ;;  connectionSl    1   34[COMRAM] unsigned char 
 12124 ;;  status          1    0        unsigned char 
 12125 ;; Return value:  Size  Location     Type
 12126 ;;                  1    wreg      unsigned char 
 12127 ;; Registers used:
 12128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12129 ;; Tracked objects:
 12130 ;;		On entry : 0/0
 12131 ;;		On exit  : 0/0
 12132 ;;		Unchanged: 0/0
 12133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12135 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12137 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12138 ;;Total ram usage:        7 bytes
 12139 ;; Hardware stack levels used:    1
 12140 ;; Hardware stack levels required when called:    6
 12141 ;; This function calls:
 12142 ;;		_EEPROM_Write
 12143 ;;		_Total_Connections
 12144 ;;		_isSameAddress
 12145 ;; This function is called by:
 12146 ;;		_P2PTasks
 12147 ;; This function uses a non-reentrant model
 12148 ;;
 12149                           
 12150                           	psect	text48
 12151  001FCE                     __ptext48:
 12152                           	opt stack 0
 12153  001FCE                     _AddConnection:
 12154                           	opt stack 19
 12155                           
 12156                           ;miwi_p2p.c: 2531: uint8_t connectionSlot = 0xFF;
 12157                           
 12158                           ;incstack = 0
 12159  001FCE  6823               	setf	AddConnection@connectionSlot,c
 12160                           
 12161                           ;miwi_p2p.c: 2542: for(i = 0; i < 40; i++)
 12162  001FD0  6A24               	clrf	AddConnection@i,c
 12163  001FD2                     l11348:
 12164                           
 12165                           ;miwi_p2p.c: 2543: {
 12166                           ;miwi_p2p.c: 2545: if( ConnectionTable[i].status.bits.isValid )
 12167  001FD2  5024               	movf	AddConnection@i,w,c
 12168  001FD4  0D0E               	mullw	14
 12169  001FD6  0EAC               	movlw	low (_ConnectionTable+12)
 12170  001FD8  24F3               	addwf	prodl,w,c
 12171  001FDA  6ED9               	movwf	fsr2l,c
 12172  001FDC  0E02               	movlw	high (_ConnectionTable+12)
 12173  001FDE  20F4               	addwfc	prodh,w,c
 12174  001FE0  6EDA               	movwf	fsr2h,c
 12175  001FE2  AEDF               	btfss	indf2,7,c
 12176  001FE4  D013               	goto	l11356
 12177                           
 12178                           ;miwi_p2p.c: 2546: {
 12179                           ;miwi_p2p.c: 2548: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 12180  001FE6  C063  F016         	movff	_rxMessage+3,isSameAddress@Address1
 12181  001FEA  C064  F017         	movff	_rxMessage+4,isSameAddress@Address1+1
 12182  001FEE  5024               	movf	AddConnection@i,w,c
 12183  001FF0  0D0E               	mullw	14
 12184  001FF2  0EA4               	movlw	low (_ConnectionTable+4)
 12185  001FF4  24F3               	addwf	prodl,w,c
 12186  001FF6  6E18               	movwf	isSameAddress@Address2,c
 12187  001FF8  0E02               	movlw	high (_ConnectionTable+4)
 12188  001FFA  20F4               	addwfc	prodh,w,c
 12189  001FFC  6E19               	movwf	isSameAddress@Address2+1,c
 12190  001FFE  ECAC  F018         	call	_isSameAddress	;wreg free
 12191  002002  0900               	iorlw	0
 12192  002004  E007               	bz	l11360
 12193                           
 12194                           ;miwi_p2p.c: 2549: {
 12195                           ;miwi_p2p.c: 2550: connectionSlot = i;
 12196  002006  C024  F023         	movff	AddConnection@i,AddConnection@connectionSlot
 12197                           
 12198                           ;miwi_p2p.c: 2552: break;
 12199  00200A  D008               	goto	l11364
 12200  00200C                     l11356:
 12201                           
 12202                           ;miwi_p2p.c: 2556: else if( connectionSlot == 0xFF )
 12203  00200C  2823               	incf	AddConnection@connectionSlot,w,c
 12204  00200E  E102               	bnz	l11360
 12205                           
 12206                           ;miwi_p2p.c: 2557: {
 12207                           ;miwi_p2p.c: 2559: connectionSlot = i;
 12208  002010  C024  F023         	movff	AddConnection@i,AddConnection@connectionSlot
 12209  002014                     l11360:
 12210  002014  2A24               	incf	AddConnection@i,f,c
 12211  002016  0E27               	movlw	39
 12212  002018  6424               	cpfsgt	AddConnection@i,c
 12213  00201A  D7DB               	goto	l11348
 12214  00201C                     l11364:
 12215                           
 12216                           ;miwi_p2p.c: 2561: }
 12217                           ;miwi_p2p.c: 2562: }
 12218                           ;miwi_p2p.c: 2564: if( connectionSlot == 0xFF )
 12219  00201C  2823               	incf	AddConnection@connectionSlot,w,c
 12220  00201E  E101               	bnz	l11370
 12221  002020  0012               	return	
 12222  002022                     l11370:
 12223                           
 12224                           ;miwi_p2p.c: 2568: else
 12225                           ;miwi_p2p.c: 2569: {
 12226                           ;miwi_p2p.c: 2570: if( ConnMode >= 0x01 )
 12227  002022  0100               	movlb	0	; () banked
 12228  002024  51FD               	movf	_ConnMode& (0+255),w,b
 12229  002026  E001               	bz	l672
 12230  002028  0012               	return	
 12231  00202A                     l672:
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;miwi_p2p.c: 2578: for(i = 0; i < 8; i++)
 12235  00202A  6A24               	clrf	AddConnection@i,c
 12236  00202C                     l11378:
 12237                           
 12238                           ; BSR set to: 0
 12239                           ;miwi_p2p.c: 2579: {
 12240                           ;miwi_p2p.c: 2580: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 12241  00202C  5024               	movf	AddConnection@i,w,c
 12242  00202E  2563               	addwf	(_rxMessage+3)& (0+255),w,b
 12243  002030  6ED9               	movwf	fsr2l,c
 12244  002032  0E00               	movlw	0
 12245  002034  2164               	addwfc	(_rxMessage+4)& (0+255),w,b
 12246  002036  6EDA               	movwf	fsr2h,c
 12247  002038  5023               	movf	AddConnection@connectionSlot,w,c
 12248  00203A  0D0E               	mullw	14
 12249  00203C  0EA0               	movlw	low _ConnectionTable
 12250  00203E  6E1E               	movwf	??_AddConnection& (0+255),c
 12251  002040  0E02               	movlw	high _ConnectionTable
 12252  002042  6E1F               	movwf	(??_AddConnection+1)& (0+255),c
 12253  002044  0E04               	movlw	4
 12254  002046  261E               	addwf	??_AddConnection,f,c
 12255  002048  0E00               	movlw	0
 12256  00204A  221F               	addwfc	??_AddConnection+1,f,c
 12257  00204C  50F3               	movf	prodl,w,c
 12258  00204E  261E               	addwf	??_AddConnection,f,c
 12259  002050  50F4               	movf	prodh,w,c
 12260  002052  221F               	addwfc	??_AddConnection+1,f,c
 12261  002054  5024               	movf	AddConnection@i,w,c
 12262  002056  241E               	addwf	??_AddConnection,w,c
 12263  002058  6EE1               	movwf	fsr1l,c
 12264  00205A  0E00               	movlw	0
 12265  00205C  201F               	addwfc	??_AddConnection+1,w,c
 12266  00205E  6EE2               	movwf	fsr1h,c
 12267  002060  CFDF FFE7          	movff	indf2,indf1
 12268                           
 12269                           ; BSR set to: 0
 12270  002064  2A24               	incf	AddConnection@i,f,c
 12271                           
 12272                           ; BSR set to: 0
 12273  002066  0E07               	movlw	7
 12274  002068  6424               	cpfsgt	AddConnection@i,c
 12275  00206A  D7E0               	goto	l11378
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;miwi_p2p.c: 2583: }
 12279                           ;miwi_p2p.c: 2588: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 12280  00206C  5023               	movf	AddConnection@connectionSlot,w,c
 12281  00206E  0D0E               	mullw	14
 12282  002070  0EAC               	movlw	low (_ConnectionTable+12)
 12283  002072  24F3               	addwf	prodl,w,c
 12284  002074  6ED9               	movwf	fsr2l,c
 12285  002076  0E02               	movlw	high (_ConnectionTable+12)
 12286  002078  20F4               	addwfc	prodh,w,c
 12287  00207A  6EDA               	movwf	fsr2h,c
 12288  00207C  8EDF               	bsf	indf2,7,c
 12289                           
 12290                           ;miwi_p2p.c: 2589: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 12291  00207E  EE20 F002          	lfsr	2,2
 12292  002082  5165               	movf	(_rxMessage+5)& (0+255),w,b
 12293  002084  26D9               	addwf	fsr2l,f,c
 12294  002086  5166               	movf	(_rxMessage+6)& (0+255),w,b
 12295  002088  22DA               	addwfc	fsr2h,f,c
 12296  00208A  50DF               	movf	indf2,w,c
 12297  00208C  6E1E               	movwf	??_AddConnection& (0+255),c
 12298  00208E  0E01               	movlw	1
 12299  002090  161E               	andwf	??_AddConnection,f,c
 12300  002092  5023               	movf	AddConnection@connectionSlot,w,c
 12301  002094  0D0E               	mullw	14
 12302  002096  0EAC               	movlw	low (_ConnectionTable+12)
 12303  002098  24F3               	addwf	prodl,w,c
 12304  00209A  6ED9               	movwf	fsr2l,c
 12305  00209C  0E02               	movlw	high (_ConnectionTable+12)
 12306  00209E  20F4               	addwfc	prodh,w,c
 12307  0020A0  6EDA               	movwf	fsr2h,c
 12308  0020A2  50DF               	movf	223,w,c
 12309  0020A4  181E               	xorwf	??_AddConnection,w,c
 12310  0020A6  0BFE               	andlw	-2
 12311  0020A8  181E               	xorwf	??_AddConnection,w,c
 12312  0020AA  6EDF               	movwf	223,c
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;miwi_p2p.c: 2593: for(i = 0; i < 1; i++)
 12316  0020AC  6A24               	clrf	AddConnection@i,c
 12317  0020AE                     l11392:
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;miwi_p2p.c: 2594: {
 12321                           ;miwi_p2p.c: 2595: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 12322  0020AE  5024               	movf	AddConnection@i,w,c
 12323  0020B0  2565               	addwf	(_rxMessage+5)& (0+255),w,b
 12324  0020B2  6E1E               	movwf	??_AddConnection& (0+255),c
 12325  0020B4  0E00               	movlw	0
 12326  0020B6  2166               	addwfc	(_rxMessage+6)& (0+255),w,b
 12327  0020B8  6E1F               	movwf	(??_AddConnection+1)& (0+255),c
 12328  0020BA  0E03               	movlw	3
 12329  0020BC  241E               	addwf	??_AddConnection,w,c
 12330  0020BE  6ED9               	movwf	fsr2l,c
 12331  0020C0  0E00               	movlw	0
 12332  0020C2  201F               	addwfc	??_AddConnection+1,w,c
 12333  0020C4  6EDA               	movwf	fsr2h,c
 12334  0020C6  5023               	movf	AddConnection@connectionSlot,w,c
 12335  0020C8  0D0E               	mullw	14
 12336  0020CA  0EA0               	movlw	low _ConnectionTable
 12337  0020CC  6E20               	movwf	(??_AddConnection+2)& (0+255),c
 12338  0020CE  0E02               	movlw	high _ConnectionTable
 12339  0020D0  6E21               	movwf	(??_AddConnection+3)& (0+255),c
 12340  0020D2  0E0D               	movlw	13
 12341  0020D4  2620               	addwf	??_AddConnection+2,f,c
 12342  0020D6  0E00               	movlw	0
 12343  0020D8  2221               	addwfc	??_AddConnection+3,f,c
 12344  0020DA  50F3               	movf	prodl,w,c
 12345  0020DC  2620               	addwf	??_AddConnection+2,f,c
 12346  0020DE  50F4               	movf	prodh,w,c
 12347  0020E0  2221               	addwfc	??_AddConnection+3,f,c
 12348  0020E2  5024               	movf	AddConnection@i,w,c
 12349  0020E4  2420               	addwf	??_AddConnection+2,w,c
 12350  0020E6  6EE1               	movwf	fsr1l,c
 12351  0020E8  0E00               	movlw	0
 12352  0020EA  2021               	addwfc	??_AddConnection+3,w,c
 12353  0020EC  6EE2               	movwf	fsr1h,c
 12354  0020EE  CFDF FFE7          	movff	indf2,indf1
 12355                           
 12356                           ; BSR set to: 0
 12357  0020F2  2A24               	incf	AddConnection@i,f,c
 12358                           
 12359                           ; BSR set to: 0
 12360  0020F4  5024               	movf	AddConnection@i,w,c
 12361  0020F6  E0DB               	bz	l11392
 12362                           
 12363                           ; BSR set to: 0
 12364                           ;miwi_p2p.c: 2596: }
 12365                           ;miwi_p2p.c: 2603: LatestConnection = connectionSlot;
 12366  0020F8  C023  F08F         	movff	AddConnection@connectionSlot,_LatestConnection
 12367                           
 12368                           ;miwi_p2p.c: 2605: P2PStatus.bits.SearchConnection = 0;
 12369  0020FC  9992               	bcf	_P2PStatus& (0+255),4,b	;volatile
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;miwi_p2p.c: 2606: }
 12373                           ;miwi_p2p.c: 2607: conn_size = Total_Connections();
 12374  0020FE  ECF2  F016         	call	_Total_Connections	;wreg free
 12375  002102  6E47               	movwf	_conn_size,c
 12376                           
 12377                           ; BSR set to: 0
 12378                           ;miwi_p2p.c: 2608: EEPROM_Write((uint8_t *)&conn_size, 0xBA, 1);
 12379  002104  0E47               	movlw	low _conn_size
 12380  002106  6E17               	movwf	EEPROM_Write@dest,c
 12381  002108  6A18               	clrf	EEPROM_Write@dest+1,c
 12382  00210A  0EBA               	movlw	186
 12383  00210C  6E19               	movwf	EEPROM_Write@addr,c
 12384  00210E  0E01               	movlw	1
 12385  002110  6E1A               	movwf	EEPROM_Write@count,c
 12386  002112  EFF8  F014         	goto	_EEPROM_Write	;wreg free
 12387  002116                     __end_of_AddConnection:
 12388                           	opt stack 0
 12389                           tblptru	equ	0xFF8
 12390                           tblptrh	equ	0xFF7
 12391                           tblptrl	equ	0xFF6
 12392                           tablat	equ	0xFF5
 12393                           prodh	equ	0xFF4
 12394                           prodl	equ	0xFF3
 12395                           intcon	equ	0xFF2
 12396                           intcon2	equ	0xFF1
 12397                           postinc0	equ	0xFEE
 12398                           plusw0	equ	0xFEB
 12399                           wreg	equ	0xFE8
 12400                           indf1	equ	0xFE7
 12401                           postinc1	equ	0xFE6
 12402                           postdec1	equ	0xFE5
 12403                           fsr1h	equ	0xFE2
 12404                           fsr1l	equ	0xFE1
 12405                           indf2	equ	0xFDF
 12406                           postinc2	equ	0xFDE
 12407                           postdec2	equ	0xFDD
 12408                           plusw2	equ	0xFDB
 12409                           fsr2h	equ	0xFDA
 12410                           fsr2l	equ	0xFD9
 12411                           status	equ	0xFD8
 12412                           
 12413 ;; *************** function _isSameAddress *****************
 12414 ;; Defined at:
 12415 ;;		line 2126 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12416 ;; Parameters:    Size  Location     Type
 12417 ;;  Address1        2   21[COMRAM] PTR unsigned char 
 12418 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 12419 ;;  Address2        2   23[COMRAM] PTR unsigned char 
 12420 ;;		 -> ConnectionTable(560), 
 12421 ;; Auto vars:     Size  Location     Type
 12422 ;;  i               1   27[COMRAM] unsigned char 
 12423 ;; Return value:  Size  Location     Type
 12424 ;;                  1    wreg      unsigned char 
 12425 ;; Registers used:
 12426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12427 ;; Tracked objects:
 12428 ;;		On entry : 0/0
 12429 ;;		On exit  : 0/0
 12430 ;;		Unchanged: 0/0
 12431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12435 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12436 ;;Total ram usage:        7 bytes
 12437 ;; Hardware stack levels used:    1
 12438 ;; Hardware stack levels required when called:    3
 12439 ;; This function calls:
 12440 ;;		Nothing
 12441 ;; This function is called by:
 12442 ;;		_P2PTasks
 12443 ;;		_AddConnection
 12444 ;; This function uses a non-reentrant model
 12445 ;;
 12446                           
 12447                           	psect	text49
 12448  003158                     __ptext49:
 12449                           	opt stack 0
 12450  003158                     _isSameAddress:
 12451                           	opt stack 22
 12452                           
 12453                           ;miwi_p2p.c: 2128: uint8_t i;
 12454                           ;miwi_p2p.c: 2130: for(i = 0; i < 8; i++)
 12455                           
 12456                           ;incstack = 0
 12457  003158  6A1C               	clrf	isSameAddress@i,c
 12458  00315A                     l11062:
 12459                           
 12460                           ;miwi_p2p.c: 2131: {
 12461                           ;miwi_p2p.c: 2132: if( Address1[i] != Address2[i] )
 12462  00315A  501C               	movf	isSameAddress@i,w,c
 12463  00315C  2418               	addwf	isSameAddress@Address2,w,c
 12464  00315E  6ED9               	movwf	fsr2l,c
 12465  003160  0E00               	movlw	0
 12466  003162  2019               	addwfc	isSameAddress@Address2+1,w,c
 12467  003164  6EDA               	movwf	fsr2h,c
 12468  003166  501C               	movf	isSameAddress@i,w,c
 12469  003168  2416               	addwf	isSameAddress@Address1,w,c
 12470  00316A  6EE1               	movwf	fsr1l,c
 12471  00316C  0E00               	movlw	0
 12472  00316E  2017               	addwfc	isSameAddress@Address1+1,w,c
 12473  003170  6EE2               	movwf	fsr1h,c
 12474  003172  50DE               	movf	postinc2,w,c
 12475  003174  18E6               	xorwf	postinc1,w,c
 12476  003176  E001               	bz	l11068
 12477                           
 12478                           ;miwi_p2p.c: 2133: {
 12479                           ;miwi_p2p.c: 2134: return 0;
 12480  003178  0C00               	retlw	0
 12481  00317A                     l11068:
 12482  00317A  2A1C               	incf	isSameAddress@i,f,c
 12483  00317C  0E07               	movlw	7
 12484  00317E  641C               	cpfsgt	isSameAddress@i,c
 12485  003180  D7EC               	goto	l11062
 12486  003182  0C01               	retlw	1
 12487  003184                     __end_of_isSameAddress:
 12488                           	opt stack 0
 12489                           tblptru	equ	0xFF8
 12490                           tblptrh	equ	0xFF7
 12491                           tblptrl	equ	0xFF6
 12492                           tablat	equ	0xFF5
 12493                           prodh	equ	0xFF4
 12494                           prodl	equ	0xFF3
 12495                           intcon	equ	0xFF2
 12496                           intcon2	equ	0xFF1
 12497                           postinc0	equ	0xFEE
 12498                           plusw0	equ	0xFEB
 12499                           wreg	equ	0xFE8
 12500                           indf1	equ	0xFE7
 12501                           postinc1	equ	0xFE6
 12502                           postdec1	equ	0xFE5
 12503                           fsr1h	equ	0xFE2
 12504                           fsr1l	equ	0xFE1
 12505                           indf2	equ	0xFDF
 12506                           postinc2	equ	0xFDE
 12507                           postdec2	equ	0xFDD
 12508                           plusw2	equ	0xFDB
 12509                           fsr2h	equ	0xFDA
 12510                           fsr2l	equ	0xFD9
 12511                           status	equ	0xFD8
 12512                           
 12513 ;; *************** function _Total_Connections *****************
 12514 ;; Defined at:
 12515 ;;		line 62 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12516 ;; Parameters:    Size  Location     Type
 12517 ;;		None
 12518 ;; Auto vars:     Size  Location     Type
 12519 ;;  i               1   22[COMRAM] unsigned char 
 12520 ;;  count           1   21[COMRAM] unsigned char 
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  1    wreg      unsigned char 
 12523 ;; Registers used:
 12524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12525 ;; Tracked objects:
 12526 ;;		On entry : F/0
 12527 ;;		On exit  : F/0
 12528 ;;		Unchanged: F/0
 12529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12533 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12534 ;;Total ram usage:        2 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; Hardware stack levels required when called:    3
 12537 ;; This function calls:
 12538 ;;		Nothing
 12539 ;; This function is called by:
 12540 ;;		_AddConnection
 12541 ;; This function uses a non-reentrant model
 12542 ;;
 12543                           
 12544                           	psect	text50
 12545  002DE4                     __ptext50:
 12546                           	opt stack 0
 12547  002DE4                     _Total_Connections:
 12548                           	opt stack 21
 12549                           
 12550                           ; BSR set to: 0
 12551                           ;miwi_p2p.c: 64: uint8_t count=0 , i;
 12552                           
 12553                           ;incstack = 0
 12554  002DE4  6A16               	clrf	Total_Connections@count,c
 12555                           
 12556                           ;miwi_p2p.c: 65: for (i=0;i<40;i++)
 12557  002DE6  6A17               	clrf	Total_Connections@i,c
 12558  002DE8                     l10964:
 12559                           
 12560                           ; BSR set to: 0
 12561                           ;miwi_p2p.c: 66: {
 12562                           ;miwi_p2p.c: 68: if (ConnectionTable[i].Address[0] != 0x00 || ConnectionTable[i].Address
      +                          [1] != 0x00 || ConnectionTable[i].Address[2] != 0x00)
 12563  002DE8  5017               	movf	Total_Connections@i,w,c
 12564  002DEA  0D0E               	mullw	14
 12565  002DEC  0EA4               	movlw	low (_ConnectionTable+4)
 12566  002DEE  24F3               	addwf	prodl,w,c
 12567  002DF0  6ED9               	movwf	fsr2l,c
 12568  002DF2  0E02               	movlw	high (_ConnectionTable+4)
 12569  002DF4  20F4               	addwfc	prodh,w,c
 12570  002DF6  6EDA               	movwf	fsr2h,c
 12571  002DF8  50DF               	movf	indf2,w,c
 12572  002DFA  E114               	bnz	l10970
 12573                           
 12574                           ; BSR set to: 0
 12575  002DFC  5017               	movf	Total_Connections@i,w,c
 12576  002DFE  0D0E               	mullw	14
 12577  002E00  0EA5               	movlw	low (_ConnectionTable+5)
 12578  002E02  24F3               	addwf	prodl,w,c
 12579  002E04  6ED9               	movwf	fsr2l,c
 12580  002E06  0E02               	movlw	high (_ConnectionTable+5)
 12581  002E08  20F4               	addwfc	prodh,w,c
 12582  002E0A  6EDA               	movwf	fsr2h,c
 12583  002E0C  50DF               	movf	indf2,w,c
 12584  002E0E  E10A               	bnz	l10970
 12585                           
 12586                           ; BSR set to: 0
 12587  002E10  5017               	movf	Total_Connections@i,w,c
 12588  002E12  0D0E               	mullw	14
 12589  002E14  0EA6               	movlw	low (_ConnectionTable+6)
 12590  002E16  24F3               	addwf	prodl,w,c
 12591  002E18  6ED9               	movwf	fsr2l,c
 12592  002E1A  0E02               	movlw	high (_ConnectionTable+6)
 12593  002E1C  20F4               	addwfc	prodh,w,c
 12594  002E1E  6EDA               	movwf	fsr2h,c
 12595  002E20  50DF               	movf	indf2,w,c
 12596  002E22  E001               	bz	l392
 12597  002E24                     l10970:
 12598                           
 12599                           ; BSR set to: 0
 12600                           ;miwi_p2p.c: 69: {
 12601                           ;miwi_p2p.c: 70: count++;
 12602  002E24  2A16               	incf	Total_Connections@count,f,c
 12603  002E26                     l392:
 12604                           
 12605                           ; BSR set to: 0
 12606  002E26  2A17               	incf	Total_Connections@i,f,c
 12607                           
 12608                           ; BSR set to: 0
 12609  002E28  0E27               	movlw	39
 12610  002E2A  6417               	cpfsgt	Total_Connections@i,c
 12611  002E2C  D7DD               	goto	l10964
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;miwi_p2p.c: 71: }
 12615                           ;miwi_p2p.c: 78: }
 12616                           ;miwi_p2p.c: 79: return count;
 12617  002E2E  5016               	movf	Total_Connections@count,w,c
 12618                           
 12619                           ; BSR set to: 0
 12620  002E30  0012               	return		;funcret
 12621  002E32                     __end_of_Total_Connections:
 12622                           	opt stack 0
 12623                           tblptru	equ	0xFF8
 12624                           tblptrh	equ	0xFF7
 12625                           tblptrl	equ	0xFF6
 12626                           tablat	equ	0xFF5
 12627                           prodh	equ	0xFF4
 12628                           prodl	equ	0xFF3
 12629                           intcon	equ	0xFF2
 12630                           intcon2	equ	0xFF1
 12631                           postinc0	equ	0xFEE
 12632                           plusw0	equ	0xFEB
 12633                           wreg	equ	0xFE8
 12634                           indf1	equ	0xFE7
 12635                           postinc1	equ	0xFE6
 12636                           postdec1	equ	0xFE5
 12637                           fsr1h	equ	0xFE2
 12638                           fsr1l	equ	0xFE1
 12639                           indf2	equ	0xFDF
 12640                           postinc2	equ	0xFDE
 12641                           postdec2	equ	0xFDD
 12642                           plusw2	equ	0xFDB
 12643                           fsr2h	equ	0xFDA
 12644                           fsr2l	equ	0xFD9
 12645                           status	equ	0xFD8
 12646                           
 12647 ;; *************** function _MiApp_DiscardMessage *****************
 12648 ;; Defined at:
 12649 ;;		line 2370 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12650 ;; Parameters:    Size  Location     Type
 12651 ;;		None
 12652 ;; Auto vars:     Size  Location     Type
 12653 ;;		None
 12654 ;; Return value:  Size  Location     Type
 12655 ;;		None               void
 12656 ;; Registers used:
 12657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12658 ;; Tracked objects:
 12659 ;;		On entry : 0/0
 12660 ;;		On exit  : 0/0
 12661 ;;		Unchanged: 0/0
 12662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12667 ;;Total ram usage:        0 bytes
 12668 ;; Hardware stack levels used:    1
 12669 ;; Hardware stack levels required when called:    4
 12670 ;; This function calls:
 12671 ;;		_MiMAC_DiscardPacket
 12672 ;; This function is called by:
 12673 ;;		_MiApp_EstablishConnection
 12674 ;;		_run_star_demo
 12675 ;; This function uses a non-reentrant model
 12676 ;;
 12677                           
 12678                           	psect	text51
 12679  00342E                     __ptext51:
 12680                           	opt stack 0
 12681  00342E                     _MiApp_DiscardMessage:
 12682                           	opt stack 23
 12683                           
 12684                           ;miwi_p2p.c: 2372: P2PStatus.bits.RxHasUserData = 0;
 12685                           
 12686                           ; BSR set to: 0
 12687                           ;incstack = 0
 12688  00342E  0100               	movlb	0	; () banked
 12689  003430  9792               	bcf	_P2PStatus& (0+255),3,b	;volatile
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;miwi_p2p.c: 2373: MiMAC_DiscardPacket();
 12693  003432  EFBB  F019         	goto	_MiMAC_DiscardPacket	;wreg free
 12694  003436                     __end_of_MiApp_DiscardMessage:
 12695                           	opt stack 0
 12696                           tblptru	equ	0xFF8
 12697                           tblptrh	equ	0xFF7
 12698                           tblptrl	equ	0xFF6
 12699                           tablat	equ	0xFF5
 12700                           prodh	equ	0xFF4
 12701                           prodl	equ	0xFF3
 12702                           intcon	equ	0xFF2
 12703                           intcon2	equ	0xFF1
 12704                           postinc0	equ	0xFEE
 12705                           plusw0	equ	0xFEB
 12706                           wreg	equ	0xFE8
 12707                           indf1	equ	0xFE7
 12708                           postinc1	equ	0xFE6
 12709                           postdec1	equ	0xFE5
 12710                           fsr1h	equ	0xFE2
 12711                           fsr1l	equ	0xFE1
 12712                           indf2	equ	0xFDF
 12713                           postinc2	equ	0xFDE
 12714                           postdec2	equ	0xFDD
 12715                           plusw2	equ	0xFDB
 12716                           fsr2h	equ	0xFDA
 12717                           fsr2l	equ	0xFD9
 12718                           status	equ	0xFD8
 12719                           
 12720 ;; *************** function _MiMAC_DiscardPacket *****************
 12721 ;; Defined at:
 12722 ;;		line 693 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 12723 ;; Parameters:    Size  Location     Type
 12724 ;;		None
 12725 ;; Auto vars:     Size  Location     Type
 12726 ;;		None
 12727 ;; Return value:  Size  Location     Type
 12728 ;;		None               void
 12729 ;; Registers used:
 12730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12731 ;; Tracked objects:
 12732 ;;		On entry : 0/0
 12733 ;;		On exit  : 0/0
 12734 ;;		Unchanged: 0/0
 12735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12740 ;;Total ram usage:        0 bytes
 12741 ;; Hardware stack levels used:    1
 12742 ;; Hardware stack levels required when called:    3
 12743 ;; This function calls:
 12744 ;;		Nothing
 12745 ;; This function is called by:
 12746 ;;		_MiMAC_ReceivedPacket
 12747 ;;		_P2PTasks
 12748 ;;		_MiApp_DiscardMessage
 12749 ;; This function uses a non-reentrant model
 12750 ;;
 12751                           
 12752                           	psect	text52
 12753  003376                     __ptext52:
 12754                           	opt stack 0
 12755  003376                     _MiMAC_DiscardPacket:
 12756                           	opt stack 21
 12757                           
 12758                           ;drv_mrf_miwi_24j40.c: 697: if (BankIndex < 2)
 12759                           
 12760                           ;incstack = 0
 12761  003376  0E02               	movlw	2
 12762  003378  6048               	cpfslt	_BankIndex,c
 12763  00337A  0C02               	retlw	2
 12764                           
 12765                           ;drv_mrf_miwi_24j40.c: 698: {
 12766                           ;drv_mrf_miwi_24j40.c: 699: RxBuffer[BankIndex].PayloadLen = 0;
 12767  00337C  5048               	movf	_BankIndex,w,c
 12768  00337E  0D45               	mullw	69
 12769  003380  0E04               	movlw	low _RxBuffer
 12770  003382  24F3               	addwf	prodl,w,c
 12771  003384  6ED9               	movwf	fsr2l,c
 12772  003386  0E01               	movlw	high _RxBuffer
 12773  003388  20F4               	addwfc	prodh,w,c
 12774  00338A  6EDA               	movwf	fsr2h,c
 12775  00338C  6ADF               	clrf	indf2,c
 12776  00338E  0C00               	retlw	0	;funcret
 12777  003390                     __end_of_MiMAC_DiscardPacket:
 12778                           	opt stack 0
 12779                           tblptru	equ	0xFF8
 12780                           tblptrh	equ	0xFF7
 12781                           tblptrl	equ	0xFF6
 12782                           tablat	equ	0xFF5
 12783                           prodh	equ	0xFF4
 12784                           prodl	equ	0xFF3
 12785                           intcon	equ	0xFF2
 12786                           intcon2	equ	0xFF1
 12787                           postinc0	equ	0xFEE
 12788                           plusw0	equ	0xFEB
 12789                           wreg	equ	0xFE8
 12790                           indf1	equ	0xFE7
 12791                           postinc1	equ	0xFE6
 12792                           postdec1	equ	0xFE5
 12793                           fsr1h	equ	0xFE2
 12794                           fsr1l	equ	0xFE1
 12795                           indf2	equ	0xFDF
 12796                           postinc2	equ	0xFDE
 12797                           postdec2	equ	0xFDD
 12798                           plusw2	equ	0xFDB
 12799                           fsr2h	equ	0xFDA
 12800                           fsr2l	equ	0xFD9
 12801                           status	equ	0xFD8
 12802                           
 12803 ;; *************** function _MiApp_ConnectionMode *****************
 12804 ;; Defined at:
 12805 ;;		line 2962 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12806 ;; Parameters:    Size  Location     Type
 12807 ;;  Mode            1    wreg     unsigned char 
 12808 ;; Auto vars:     Size  Location     Type
 12809 ;;  Mode            1   30[COMRAM] unsigned char 
 12810 ;; Return value:  Size  Location     Type
 12811 ;;		None               void
 12812 ;; Registers used:
 12813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12823 ;;Total ram usage:        2 bytes
 12824 ;; Hardware stack levels used:    1
 12825 ;; Hardware stack levels required when called:    6
 12826 ;; This function calls:
 12827 ;;		_EEPROM_Write
 12828 ;; This function is called by:
 12829 ;;		_Initialize_Demo
 12830 ;;		_run_star_demo
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           	psect	text53
 12835  00306E                     __ptext53:
 12836                           	opt stack 0
 12837  00306E                     _MiApp_ConnectionMode:
 12838                           	opt stack 22
 12839                           
 12840                           ;incstack = 0
 12841                           ;MiApp_ConnectionMode@Mode stored from wreg
 12842  00306E  6E1F               	movwf	MiApp_ConnectionMode@Mode,c
 12843                           
 12844                           ;miwi_p2p.c: 2964: if( Mode > 3 )
 12845  003070  0E03               	movlw	3
 12846  003072  641F               	cpfsgt	MiApp_ConnectionMode@Mode,c
 12847  003074  D001               	goto	l692
 12848  003076  0C03               	retlw	3
 12849  003078                     l692:
 12850                           
 12851                           ;miwi_p2p.c: 2967: }
 12852                           ;miwi_p2p.c: 2968: ConnMode = Mode;
 12853  003078  C01F  F0FD         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 12854                           
 12855                           ;miwi_p2p.c: 2969: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 12856  00307C  C0FD  F01E         	movff	_ConnMode,??_MiApp_ConnectionMode
 12857  003080  3A1E               	swapf	??_MiApp_ConnectionMode,f,c
 12858  003082  0EF0               	movlw	240
 12859  003084  161E               	andwf	??_MiApp_ConnectionMode,f,c
 12860  003086  0100               	movlb	0	; () banked
 12861  003088  5191               	movf	_P2PCapacityInfo& (0+255),w,b
 12862  00308A  0B0F               	andlw	15
 12863  00308C  101E               	iorwf	??_MiApp_ConnectionMode,w,c
 12864  00308E  6F91               	movwf	_P2PCapacityInfo& (0+255),b
 12865                           
 12866                           ; BSR set to: 0
 12867                           ;miwi_p2p.c: 2972: EEPROM_Write((uint8_t *)&ConnMode, 0x03, 1);
 12868  003090  0EFD               	movlw	low _ConnMode
 12869  003092  6E17               	movwf	EEPROM_Write@dest,c
 12870  003094  6A18               	clrf	EEPROM_Write@dest+1,c
 12871  003096  0E03               	movlw	3
 12872  003098  6E19               	movwf	EEPROM_Write@addr,c
 12873  00309A  0E01               	movlw	1
 12874  00309C  6E1A               	movwf	EEPROM_Write@count,c
 12875  00309E  EFF8  F014         	goto	_EEPROM_Write	;wreg free
 12876  0030A2                     __end_of_MiApp_ConnectionMode:
 12877                           	opt stack 0
 12878                           tblptru	equ	0xFF8
 12879                           tblptrh	equ	0xFF7
 12880                           tblptrl	equ	0xFF6
 12881                           tablat	equ	0xFF5
 12882                           prodh	equ	0xFF4
 12883                           prodl	equ	0xFF3
 12884                           intcon	equ	0xFF2
 12885                           intcon2	equ	0xFF1
 12886                           postinc0	equ	0xFEE
 12887                           plusw0	equ	0xFEB
 12888                           wreg	equ	0xFE8
 12889                           indf1	equ	0xFE7
 12890                           postinc1	equ	0xFE6
 12891                           postdec1	equ	0xFE5
 12892                           fsr1h	equ	0xFE2
 12893                           fsr1l	equ	0xFE1
 12894                           indf2	equ	0xFDF
 12895                           postinc2	equ	0xFDE
 12896                           postdec2	equ	0xFDD
 12897                           plusw2	equ	0xFDB
 12898                           fsr2h	equ	0xFDA
 12899                           fsr2l	equ	0xFD9
 12900                           status	equ	0xFD8
 12901                           
 12902 ;; *************** function _EEPROM_Write *****************
 12903 ;; Defined at:
 12904 ;;		line 117 in file "../src/system_config/miwikit_pic18f46j50_24j40/eeprom.c"
 12905 ;; Parameters:    Size  Location     Type
 12906 ;;  dest            2   22[COMRAM] PTR unsigned char 
 12907 ;;		 -> myConnectionIndex_in_PanCo(1), myPANID(2), currentChannel(1), ConnMode(1), 
 12908 ;;		 -> role(1), conn_size(1), ConnectionTable(560), 
 12909 ;;  addr            1   24[COMRAM] unsigned char 
 12910 ;;  count           1   25[COMRAM] unsigned char 
 12911 ;; Auto vars:     Size  Location     Type
 12912 ;;  PageCounter     1   28[COMRAM] unsigned char 
 12913 ;;  oldRFIE         1   27[COMRAM] unsigned char 
 12914 ;; Return value:  Size  Location     Type
 12915 ;;		None               void
 12916 ;; Registers used:
 12917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12918 ;; Tracked objects:
 12919 ;;		On entry : 0/0
 12920 ;;		On exit  : 0/0
 12921 ;;		Unchanged: 0/0
 12922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12924 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12925 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12926 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12927 ;;Total ram usage:        7 bytes
 12928 ;; Hardware stack levels used:    1
 12929 ;; Hardware stack levels required when called:    5
 12930 ;; This function calls:
 12931 ;;		_MacroNop
 12932 ;;		_SPIGet2
 12933 ;;		_SPIPut2
 12934 ;; This function is called by:
 12935 ;;		_P2PTasks
 12936 ;;		_MiApp_ProtocolInit
 12937 ;;		_MiApp_TransceiverPowerState
 12938 ;;		_MiApp_SetChannel
 12939 ;;		_AddConnection
 12940 ;;		_MiApp_ConnectionMode
 12941 ;;		_Initialize_Demo
 12942 ;; This function uses a non-reentrant model
 12943 ;;
 12944                           
 12945                           	psect	text54
 12946  0029F0                     __ptext54:
 12947                           	opt stack 0
 12948  0029F0                     _EEPROM_Write:
 12949                           	opt stack 20
 12950                           
 12951                           ;eeprom.c: 125: uint8_t oldRFIE = INTCONbits.INT0IE;
 12952                           
 12953                           ;incstack = 0
 12954  0029F0  0E00               	movlw	0
 12955  0029F2  B8F2               	btfsc	intcon,4,c	;volatile
 12956  0029F4  0E01               	movlw	1
 12957  0029F6  6E1C               	movwf	EEPROM_Write@oldRFIE,c
 12958                           
 12959                           ;eeprom.c: 126: INTCONbits.INT0IE = 0;
 12960  0029F8  98F2               	bcf	intcon,4,c	;volatile
 12961  0029FA                     l11014:
 12962                           
 12963                           ;eeprom.c: 132: {
 12964                           ;eeprom.c: 133: LATDbits.LATD5 = 0;
 12965  0029FA  9A8C               	bcf	3980,5,c	;volatile
 12966                           
 12967                           ;eeprom.c: 134: SPIPut2(0x05);
 12968  0029FC  0E05               	movlw	5
 12969  0029FE  ECC8  F019         	call	_SPIPut2
 12970                           
 12971                           ;eeprom.c: 135: PageCounter = SPIGet2();
 12972  002A02  EC12  F01A         	call	_SPIGet2	;wreg free
 12973  002A06  6E1D               	movwf	EEPROM_Write@PageCounter,c
 12974                           
 12975                           ;eeprom.c: 136: LATDbits.LATD5 = 1;
 12976  002A08  8A8C               	bsf	3980,5,c	;volatile
 12977                           
 12978                           ;eeprom.c: 137: MacroNop();
 12979  002A0A  EC21  F01A         	call	_MacroNop	;wreg free
 12980                           
 12981                           ;eeprom.c: 138: } while(PageCounter & 0x01 );
 12982  002A0E  B01D               	btfsc	EEPROM_Write@PageCounter,0,c
 12983  002A10  D7F4               	goto	l11014
 12984                           
 12985                           ;eeprom.c: 140: LATDbits.LATD5 = 0;
 12986  002A12  9A8C               	bcf	3980,5,c	;volatile
 12987                           
 12988                           ;eeprom.c: 141: SPIPut2(0x06);
 12989  002A14  0E06               	movlw	6
 12990  002A16  ECC8  F019         	call	_SPIPut2
 12991                           
 12992                           ;eeprom.c: 142: LATDbits.LATD5 = 1;
 12993  002A1A  8A8C               	bsf	3980,5,c	;volatile
 12994                           
 12995                           ;eeprom.c: 143: MacroNop();
 12996  002A1C  EC21  F01A         	call	_MacroNop	;wreg free
 12997                           
 12998                           ;eeprom.c: 144: LATDbits.LATD5 = 0;
 12999  002A20  9A8C               	bcf	3980,5,c	;volatile
 13000                           
 13001                           ;eeprom.c: 146: SPIPut2(0x02);
 13002  002A22  0E02               	movlw	2
 13003  002A24  ECC8  F019         	call	_SPIPut2
 13004                           
 13005                           ;eeprom.c: 147: SPIPut2(addr);
 13006  002A28  5019               	movf	EEPROM_Write@addr,w,c
 13007  002A2A  ECC8  F019         	call	_SPIPut2
 13008                           
 13009                           ;eeprom.c: 149: PageCounter = 0;
 13010  002A2E  6A1D               	clrf	EEPROM_Write@PageCounter,c
 13011                           
 13012                           ;eeprom.c: 150: while( count > 0 )
 13013  002A30  D015               	goto	l11054
 13014  002A32                     l11040:
 13015                           
 13016                           ;eeprom.c: 151: {
 13017                           ;eeprom.c: 152: SPIPut2(*dest++);
 13018  002A32  C017  FFD9         	movff	EEPROM_Write@dest,fsr2l
 13019  002A36  C018  FFDA         	movff	EEPROM_Write@dest+1,fsr2h
 13020  002A3A  50DF               	movf	indf2,w,c
 13021  002A3C  ECC8  F019         	call	_SPIPut2
 13022  002A40  4A17               	infsnz	EEPROM_Write@dest,f,c
 13023  002A42  2A18               	incf	EEPROM_Write@dest+1,f,c
 13024                           
 13025                           ;eeprom.c: 153: count--;
 13026  002A44  061A               	decf	EEPROM_Write@count,f,c
 13027                           
 13028                           ;eeprom.c: 154: PageCounter++;
 13029  002A46  2A1D               	incf	EEPROM_Write@PageCounter,f,c
 13030                           
 13031                           ;eeprom.c: 155: if( ((addr + PageCounter) & (16-1)) == 0 )
 13032  002A48  5019               	movf	EEPROM_Write@addr,w,c
 13033  002A4A  241D               	addwf	EEPROM_Write@PageCounter,w,c
 13034  002A4C  6E1B               	movwf	??_EEPROM_Write& (0+255),c
 13035  002A4E  0E0F               	movlw	15
 13036  002A50  161B               	andwf	??_EEPROM_Write,f,c
 13037  002A52  E104               	bnz	l11054
 13038                           
 13039                           ;eeprom.c: 156: {
 13040                           ;eeprom.c: 157: LATDbits.LATD5 = 1;
 13041  002A54  8A8C               	bsf	3980,5,c	;volatile
 13042                           
 13043                           ;eeprom.c: 158: addr += PageCounter;
 13044  002A56  501D               	movf	EEPROM_Write@PageCounter,w,c
 13045  002A58  2619               	addwf	EEPROM_Write@addr,f,c
 13046                           
 13047                           ;eeprom.c: 159: goto EEPROM_NEXT_PAGE;
 13048  002A5A  D7CF               	goto	l11014
 13049  002A5C                     l11054:
 13050  002A5C  501A               	movf	EEPROM_Write@count,w,c
 13051  002A5E  E1E9               	bnz	l11040
 13052                           
 13053                           ;eeprom.c: 160: }
 13054                           ;eeprom.c: 161: }
 13055                           ;eeprom.c: 162: LATDbits.LATD5 = 1;
 13056  002A60  8A8C               	bsf	3980,5,c	;volatile
 13057                           
 13058                           ;eeprom.c: 167: INTCONbits.INT0IE = oldRFIE;
 13059  002A62  B01C               	btfsc	EEPROM_Write@oldRFIE,0,c
 13060  002A64  D002               	bra	u10745
 13061  002A66  98F2               	bcf	intcon,4,c	;volatile
 13062  002A68  D001               	bra	u10746
 13063  002A6A                     u10745:
 13064  002A6A  88F2               	bsf	intcon,4,c	;volatile
 13065  002A6C                     u10746:
 13066  002A6C  0012               	return		;funcret
 13067  002A6E                     __end_of_EEPROM_Write:
 13068                           	opt stack 0
 13069                           tblptru	equ	0xFF8
 13070                           tblptrh	equ	0xFF7
 13071                           tblptrl	equ	0xFF6
 13072                           tablat	equ	0xFF5
 13073                           prodh	equ	0xFF4
 13074                           prodl	equ	0xFF3
 13075                           intcon	equ	0xFF2
 13076                           intcon2	equ	0xFF1
 13077                           postinc0	equ	0xFEE
 13078                           plusw0	equ	0xFEB
 13079                           wreg	equ	0xFE8
 13080                           indf1	equ	0xFE7
 13081                           postinc1	equ	0xFE6
 13082                           postdec1	equ	0xFE5
 13083                           fsr1h	equ	0xFE2
 13084                           fsr1l	equ	0xFE1
 13085                           indf2	equ	0xFDF
 13086                           postinc2	equ	0xFDE
 13087                           postdec2	equ	0xFDD
 13088                           plusw2	equ	0xFDB
 13089                           fsr2h	equ	0xFDA
 13090                           fsr2l	equ	0xFD9
 13091                           status	equ	0xFD8
 13092                           
 13093 ;; *************** function _SPIGet2 *****************
 13094 ;; Defined at:
 13095 ;;		line 130 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 13096 ;; Parameters:    Size  Location     Type
 13097 ;;		None
 13098 ;; Auto vars:     Size  Location     Type
 13099 ;;		None
 13100 ;; Return value:  Size  Location     Type
 13101 ;;                  1    wreg      unsigned char 
 13102 ;; Registers used:
 13103 ;;		wreg, status,2, cstack
 13104 ;; Tracked objects:
 13105 ;;		On entry : 0/0
 13106 ;;		On exit  : 0/0
 13107 ;;		Unchanged: 0/0
 13108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13113 ;;Total ram usage:        0 bytes
 13114 ;; Hardware stack levels used:    1
 13115 ;; Hardware stack levels required when called:    4
 13116 ;; This function calls:
 13117 ;;		_SPIPut2
 13118 ;; This function is called by:
 13119 ;;		_EEPROM_Read
 13120 ;;		_EEPROM_Write
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           	psect	text55
 13125  003424                     __ptext55:
 13126                           	opt stack 0
 13127  003424                     _SPIGet2:
 13128                           	opt stack 20
 13129                           
 13130                           ;spi.c: 133: SPIPut2(0x00);
 13131                           
 13132                           ;incstack = 0
 13133  003424  0E00               	movlw	0
 13134  003426  ECC8  F019         	call	_SPIPut2
 13135                           
 13136                           ;spi.c: 134: return SSP2BUF;
 13137  00342A  5075               	movf	3957,w,c	;volatile
 13138  00342C  0012               	return		;funcret
 13139  00342E                     __end_of_SPIGet2:
 13140                           	opt stack 0
 13141                           tblptru	equ	0xFF8
 13142                           tblptrh	equ	0xFF7
 13143                           tblptrl	equ	0xFF6
 13144                           tablat	equ	0xFF5
 13145                           prodh	equ	0xFF4
 13146                           prodl	equ	0xFF3
 13147                           intcon	equ	0xFF2
 13148                           intcon2	equ	0xFF1
 13149                           postinc0	equ	0xFEE
 13150                           plusw0	equ	0xFEB
 13151                           wreg	equ	0xFE8
 13152                           indf1	equ	0xFE7
 13153                           postinc1	equ	0xFE6
 13154                           postdec1	equ	0xFE5
 13155                           fsr1h	equ	0xFE2
 13156                           fsr1l	equ	0xFE1
 13157                           indf2	equ	0xFDF
 13158                           postinc2	equ	0xFDE
 13159                           postdec2	equ	0xFDD
 13160                           plusw2	equ	0xFDB
 13161                           fsr2h	equ	0xFDA
 13162                           fsr2l	equ	0xFD9
 13163                           status	equ	0xFD8
 13164                           
 13165 ;; *************** function _MacroNop *****************
 13166 ;; Defined at:
 13167 ;;		line 322 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 13168 ;; Parameters:    Size  Location     Type
 13169 ;;		None
 13170 ;; Auto vars:     Size  Location     Type
 13171 ;;		None
 13172 ;; Return value:  Size  Location     Type
 13173 ;;		None               void
 13174 ;; Registers used:
 13175 ;;		None
 13176 ;; Tracked objects:
 13177 ;;		On entry : 0/0
 13178 ;;		On exit  : 0/0
 13179 ;;		Unchanged: 0/0
 13180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13185 ;;Total ram usage:        0 bytes
 13186 ;; Hardware stack levels used:    1
 13187 ;; Hardware stack levels required when called:    3
 13188 ;; This function calls:
 13189 ;;		Nothing
 13190 ;; This function is called by:
 13191 ;;		_EEPROM_Write
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195                           	psect	text56
 13196  003442                     __ptext56:
 13197                           	opt stack 0
 13198  003442                     _MacroNop:
 13199                           	opt stack 21
 13200                           
 13201                           ;miwi_p2p.c: 324: __nop();
 13202                           
 13203                           ;incstack = 0
 13204  003442  F000               	nop	
 13205  003444  0012               	return		;funcret
 13206  003446                     __end_of_MacroNop:
 13207                           	opt stack 0
 13208                           tblptru	equ	0xFF8
 13209                           tblptrh	equ	0xFF7
 13210                           tblptrl	equ	0xFF6
 13211                           tablat	equ	0xFF5
 13212                           prodh	equ	0xFF4
 13213                           prodl	equ	0xFF3
 13214                           intcon	equ	0xFF2
 13215                           intcon2	equ	0xFF1
 13216                           postinc0	equ	0xFEE
 13217                           plusw0	equ	0xFEB
 13218                           wreg	equ	0xFE8
 13219                           indf1	equ	0xFE7
 13220                           postinc1	equ	0xFE6
 13221                           postdec1	equ	0xFE5
 13222                           fsr1h	equ	0xFE2
 13223                           fsr1l	equ	0xFE1
 13224                           indf2	equ	0xFDF
 13225                           postinc2	equ	0xFDE
 13226                           postdec2	equ	0xFDD
 13227                           plusw2	equ	0xFDB
 13228                           fsr2h	equ	0xFDA
 13229                           fsr2l	equ	0xFD9
 13230                           status	equ	0xFD8
 13231                           
 13232 ;; *************** function _DemoOutput_Instruction *****************
 13233 ;; Defined at:
 13234 ;;		line 136 in file "../src/demo_ouput.c"
 13235 ;; Parameters:    Size  Location     Type
 13236 ;;		None
 13237 ;; Auto vars:     Size  Location     Type
 13238 ;;		None
 13239 ;; Return value:  Size  Location     Type
 13240 ;;		None               void
 13241 ;; Registers used:
 13242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13243 ;; Tracked objects:
 13244 ;;		On entry : 0/0
 13245 ;;		On exit  : 0/0
 13246 ;;		Unchanged: 0/0
 13247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13252 ;;Total ram usage:        0 bytes
 13253 ;; Hardware stack levels used:    1
 13254 ;; Hardware stack levels required when called:    7
 13255 ;; This function calls:
 13256 ;;		_LCDDisplay
 13257 ;; This function is called by:
 13258 ;;		_Initialize_Demo
 13259 ;; This function uses a non-reentrant model
 13260 ;;
 13261                           
 13262                           	psect	text57
 13263  0033B8                     __ptext57:
 13264                           	opt stack 0
 13265  0033B8                     _DemoOutput_Instruction:
 13266                           	opt stack 22
 13267                           
 13268                           ;demo_ouput.c: 141: LCDDisplay((char *)"SW1: Broadcast  SW2: Unicast", 0, 0);
 13269                           
 13270                           ;incstack = 0
 13271  0033B8  0E52               	movlw	low STR_19
 13272  0033BA  0100               	movlb	0	; () banked
 13273  0033BC  6FC2               	movwf	LCDDisplay@text& (0+255),b
 13274  0033BE  0EFE               	movlw	high STR_19
 13275  0033C0  6FC3               	movwf	(LCDDisplay@text+1)& (0+255),b
 13276  0033C2  6BC4               	clrf	LCDDisplay@value& (0+255),b
 13277  0033C4  6BC5               	clrf	LCDDisplay@delay& (0+255),b
 13278  0033C6  EF64  F017         	goto	_LCDDisplay	;wreg free
 13279  0033CA                     __end_of_DemoOutput_Instruction:
 13280                           	opt stack 0
 13281                           tblptru	equ	0xFF8
 13282                           tblptrh	equ	0xFF7
 13283                           tblptrl	equ	0xFF6
 13284                           tablat	equ	0xFF5
 13285                           prodh	equ	0xFF4
 13286                           prodl	equ	0xFF3
 13287                           intcon	equ	0xFF2
 13288                           intcon2	equ	0xFF1
 13289                           postinc0	equ	0xFEE
 13290                           plusw0	equ	0xFEB
 13291                           wreg	equ	0xFE8
 13292                           indf1	equ	0xFE7
 13293                           postinc1	equ	0xFE6
 13294                           postdec1	equ	0xFE5
 13295                           fsr1h	equ	0xFE2
 13296                           fsr1l	equ	0xFE1
 13297                           indf2	equ	0xFDF
 13298                           postinc2	equ	0xFDE
 13299                           postdec2	equ	0xFDD
 13300                           plusw2	equ	0xFDB
 13301                           fsr2h	equ	0xFDA
 13302                           fsr2l	equ	0xFD9
 13303                           status	equ	0xFD8
 13304                           
 13305 ;; *************** function _DemoOutput_ChannelError *****************
 13306 ;; Defined at:
 13307 ;;		line 193 in file "../src/demo_ouput.c"
 13308 ;; Parameters:    Size  Location     Type
 13309 ;;  channel         1    wreg     unsigned char 
 13310 ;; Auto vars:     Size  Location     Type
 13311 ;;  channel         1    0[COMRAM] unsigned char 
 13312 ;; Return value:  Size  Location     Type
 13313 ;;		None               void
 13314 ;; Registers used:
 13315 ;;		wreg
 13316 ;; Tracked objects:
 13317 ;;		On entry : 0/0
 13318 ;;		On exit  : 0/0
 13319 ;;		Unchanged: 0/0
 13320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13325 ;;Total ram usage:        0 bytes
 13326 ;; Hardware stack levels used:    1
 13327 ;; Hardware stack levels required when called:    3
 13328 ;; This function calls:
 13329 ;;		Nothing
 13330 ;; This function is called by:
 13331 ;;		_Initialize_Demo
 13332 ;; This function uses a non-reentrant model
 13333 ;;
 13334                           
 13335                           	psect	text58
 13336  00344C                     __ptext58:
 13337                           	opt stack 0
 13338  00344C                     _DemoOutput_ChannelError:
 13339                           	opt stack 26
 13340                           
 13341                           ;incstack = 0
 13342  00344C  0012               	return		;funcret
 13343  00344E                     __end_of_DemoOutput_ChannelError:
 13344                           	opt stack 0
 13345                           tblptru	equ	0xFF8
 13346                           tblptrh	equ	0xFF7
 13347                           tblptrl	equ	0xFF6
 13348                           tablat	equ	0xFF5
 13349                           prodh	equ	0xFF4
 13350                           prodl	equ	0xFF3
 13351                           intcon	equ	0xFF2
 13352                           intcon2	equ	0xFF1
 13353                           postinc0	equ	0xFEE
 13354                           plusw0	equ	0xFEB
 13355                           wreg	equ	0xFE8
 13356                           indf1	equ	0xFE7
 13357                           postinc1	equ	0xFE6
 13358                           postdec1	equ	0xFE5
 13359                           fsr1h	equ	0xFE2
 13360                           fsr1l	equ	0xFE1
 13361                           indf2	equ	0xFDF
 13362                           postinc2	equ	0xFDE
 13363                           postdec2	equ	0xFDD
 13364                           plusw2	equ	0xFDB
 13365                           fsr2h	equ	0xFDA
 13366                           fsr2l	equ	0xFD9
 13367                           status	equ	0xFD8
 13368                           
 13369 ;; *************** function _DemoOutput_Channel *****************
 13370 ;; Defined at:
 13371 ;;		line 111 in file "../src/demo_ouput.c"
 13372 ;; Parameters:    Size  Location     Type
 13373 ;;  channel         1    wreg     unsigned char 
 13374 ;;  Step            1   23[BANK0 ] unsigned char 
 13375 ;; Auto vars:     Size  Location     Type
 13376 ;;  channel         1   24[BANK0 ] unsigned char 
 13377 ;; Return value:  Size  Location     Type
 13378 ;;		None               void
 13379 ;; Registers used:
 13380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13381 ;; Tracked objects:
 13382 ;;		On entry : F/0
 13383 ;;		On exit  : 0/0
 13384 ;;		Unchanged: 0/0
 13385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13386 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13389 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13390 ;;Total ram usage:        2 bytes
 13391 ;; Hardware stack levels used:    1
 13392 ;; Hardware stack levels required when called:    7
 13393 ;; This function calls:
 13394 ;;		_DELAY_ms
 13395 ;;		_LCDDisplay
 13396 ;; This function is called by:
 13397 ;;		_Initialize_Demo
 13398 ;; This function uses a non-reentrant model
 13399 ;;
 13400                           
 13401                           	psect	text59
 13402  002F84                     __ptext59:
 13403                           	opt stack 0
 13404  002F84                     _DemoOutput_Channel:
 13405                           	opt stack 22
 13406                           
 13407                           ;incstack = 0
 13408                           ;DemoOutput_Channel@channel stored from wreg
 13409  002F84  6FC7               	movwf	DemoOutput_Channel@channel& (0+255),b
 13410                           
 13411                           ;demo_ouput.c: 113: if( Step == 0 )
 13412  002F86  0100               	movlb	0	; () banked
 13413  002F88  51C6               	movf	DemoOutput_Channel@Step& (0+255),w,b
 13414  002F8A  E10B               	bnz	l12144
 13415                           
 13416                           ; BSR set to: 0
 13417                           ;demo_ouput.c: 114: {
 13418                           ;demo_ouput.c: 115: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 13419  002F8C  0ED4               	movlw	low STR_17
 13420  002F8E  6FC2               	movwf	LCDDisplay@text& (0+255),b
 13421  002F90  0EFD               	movlw	high STR_17
 13422  002F92  6FC3               	movwf	(LCDDisplay@text+1)& (0+255),b
 13423  002F94  C0C7  F0C4         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 13424  002F98  0E01               	movlw	1
 13425  002F9A  6FC5               	movwf	LCDDisplay@delay& (0+255),b
 13426  002F9C  EC64  F017         	call	_LCDDisplay	;wreg free
 13427                           
 13428                           ;demo_ouput.c: 122: }
 13429  002FA0  D00A               	goto	l12146
 13430  002FA2                     l12144:
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;demo_ouput.c: 123: else
 13434                           ;demo_ouput.c: 124: {
 13435                           ;demo_ouput.c: 125: LCDDisplay((char *)" Connected Peer  on Channel %d", channel, 1);
 13436  002FA2  0E33               	movlw	low STR_18
 13437  002FA4  6FC2               	movwf	LCDDisplay@text& (0+255),b
 13438  002FA6  0EFE               	movlw	high STR_18
 13439  002FA8  6FC3               	movwf	(LCDDisplay@text+1)& (0+255),b
 13440  002FAA  C0C7  F0C4         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 13441  002FAE  0E01               	movlw	1
 13442  002FB0  6FC5               	movwf	LCDDisplay@delay& (0+255),b
 13443  002FB2  EC64  F017         	call	_LCDDisplay	;wreg free
 13444  002FB6                     l12146:
 13445                           
 13446                           ;demo_ouput.c: 132: }
 13447                           ;demo_ouput.c: 133: DELAY_ms(1000);
 13448  002FB6  0E03               	movlw	3
 13449  002FB8  6E17               	movwf	DELAY_ms@ms+1,c
 13450  002FBA  0EE8               	movlw	232
 13451  002FBC  6E16               	movwf	DELAY_ms@ms,c
 13452  002FBE  EF88  F011         	goto	_DELAY_ms	;wreg free
 13453  002FC2                     __end_of_DemoOutput_Channel:
 13454                           	opt stack 0
 13455                           tblptru	equ	0xFF8
 13456                           tblptrh	equ	0xFF7
 13457                           tblptrl	equ	0xFF6
 13458                           tablat	equ	0xFF5
 13459                           prodh	equ	0xFF4
 13460                           prodl	equ	0xFF3
 13461                           intcon	equ	0xFF2
 13462                           intcon2	equ	0xFF1
 13463                           postinc0	equ	0xFEE
 13464                           plusw0	equ	0xFEB
 13465                           wreg	equ	0xFE8
 13466                           indf1	equ	0xFE7
 13467                           postinc1	equ	0xFE6
 13468                           postdec1	equ	0xFE5
 13469                           fsr1h	equ	0xFE2
 13470                           fsr1l	equ	0xFE1
 13471                           indf2	equ	0xFDF
 13472                           postinc2	equ	0xFDE
 13473                           postdec2	equ	0xFDD
 13474                           plusw2	equ	0xFDB
 13475                           fsr2h	equ	0xFDA
 13476                           fsr2l	equ	0xFD9
 13477                           status	equ	0xFD8
 13478                           
 13479 ;; *************** function _DemoOutput_Greeting *****************
 13480 ;; Defined at:
 13481 ;;		line 63 in file "../src/demo_ouput.c"
 13482 ;; Parameters:    Size  Location     Type
 13483 ;;		None
 13484 ;; Auto vars:     Size  Location     Type
 13485 ;;		None
 13486 ;; Return value:  Size  Location     Type
 13487 ;;		None               void
 13488 ;; Registers used:
 13489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13490 ;; Tracked objects:
 13491 ;;		On entry : 0/0
 13492 ;;		On exit  : 0/0
 13493 ;;		Unchanged: 0/0
 13494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13499 ;;Total ram usage:        0 bytes
 13500 ;; Hardware stack levels used:    1
 13501 ;; Hardware stack levels required when called:    7
 13502 ;; This function calls:
 13503 ;;		_DELAY_ms
 13504 ;;		_LCDDisplay
 13505 ;; This function is called by:
 13506 ;;		_main
 13507 ;; This function uses a non-reentrant model
 13508 ;;
 13509                           
 13510                           	psect	text60
 13511  0032E6                     __ptext60:
 13512                           	opt stack 0
 13513  0032E6                     _DemoOutput_Greeting:
 13514                           	opt stack 23
 13515                           
 13516                           ;demo_ouput.c: 70: LCDDisplay((char *)"Simple STAR     MRF24J40 Node1", 0, 1);
 13517                           
 13518                           ;incstack = 0
 13519  0032E6  0E14               	movlw	low STR_16
 13520  0032E8  0100               	movlb	0	; () banked
 13521  0032EA  6FC2               	movwf	LCDDisplay@text& (0+255),b
 13522  0032EC  0EFE               	movlw	high STR_16
 13523  0032EE  6FC3               	movwf	(LCDDisplay@text+1)& (0+255),b
 13524  0032F0  6BC4               	clrf	LCDDisplay@value& (0+255),b
 13525  0032F2  0E01               	movlw	1
 13526  0032F4  6FC5               	movwf	LCDDisplay@delay& (0+255),b
 13527  0032F6  EC64  F017         	call	_LCDDisplay	;wreg free
 13528                           
 13529                           ;demo_ouput.c: 108: DELAY_ms(1500);
 13530  0032FA  0E05               	movlw	5
 13531  0032FC  6E17               	movwf	DELAY_ms@ms+1,c
 13532  0032FE  0EDC               	movlw	220
 13533  003300  6E16               	movwf	DELAY_ms@ms,c
 13534  003302  EF88  F011         	goto	_DELAY_ms	;wreg free
 13535  003306                     __end_of_DemoOutput_Greeting:
 13536                           	opt stack 0
 13537                           tblptru	equ	0xFF8
 13538                           tblptrh	equ	0xFF7
 13539                           tblptrl	equ	0xFF6
 13540                           tablat	equ	0xFF5
 13541                           prodh	equ	0xFF4
 13542                           prodl	equ	0xFF3
 13543                           intcon	equ	0xFF2
 13544                           intcon2	equ	0xFF1
 13545                           postinc0	equ	0xFEE
 13546                           plusw0	equ	0xFEB
 13547                           wreg	equ	0xFE8
 13548                           indf1	equ	0xFE7
 13549                           postinc1	equ	0xFE6
 13550                           postdec1	equ	0xFE5
 13551                           fsr1h	equ	0xFE2
 13552                           fsr1l	equ	0xFE1
 13553                           indf2	equ	0xFDF
 13554                           postinc2	equ	0xFDE
 13555                           postdec2	equ	0xFDD
 13556                           plusw2	equ	0xFDB
 13557                           fsr2h	equ	0xFDA
 13558                           fsr2l	equ	0xFD9
 13559                           status	equ	0xFD8
 13560                           
 13561 ;; *************** function _LCDDisplay *****************
 13562 ;; Defined at:
 13563 ;;		line 187 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 13564 ;; Parameters:    Size  Location     Type
 13565 ;;  text            2   19[BANK0 ] PTR unsigned char 
 13566 ;;		 -> STR_38(12), STR_37(20), STR_32(11), STR_31(11), 
 13567 ;;		 -> STR_30(28), STR_27(32), STR_26(33), STR_25(16), 
 13568 ;;		 -> STR_19(29), STR_18(31), STR_17(32), STR_16(31), 
 13569 ;;  value           1   21[BANK0 ] unsigned char 
 13570 ;;  delay           1   22[BANK0 ] unsigned char 
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;  i               1   49[COMRAM] unsigned char 
 13573 ;; Return value:  Size  Location     Type
 13574 ;;		None               void
 13575 ;; Registers used:
 13576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13577 ;; Tracked objects:
 13578 ;;		On entry : F/0
 13579 ;;		On exit  : 0/0
 13580 ;;		Unchanged: 0/0
 13581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13582 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13585 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13586 ;;Total ram usage:        5 bytes
 13587 ;; Hardware stack levels used:    1
 13588 ;; Hardware stack levels required when called:    6
 13589 ;; This function calls:
 13590 ;;		_DELAY_ms
 13591 ;;		_LCD_Erase
 13592 ;;		_LCD_Update
 13593 ;;		_sprintf
 13594 ;; This function is called by:
 13595 ;;		_DemoOutput_Greeting
 13596 ;;		_DemoOutput_Channel
 13597 ;;		_DemoOutput_Instruction
 13598 ;;		_DemoOutput_UnicastFail
 13599 ;;		_STAR_DEMO_OPTIONS_MESSAGE
 13600 ;;		_freezer_feature
 13601 ;;		_run_star_demo
 13602 ;; This function uses a non-reentrant model
 13603 ;;
 13604                           
 13605                           	psect	text61
 13606  002EC8                     __ptext61:
 13607                           	opt stack 0
 13608  002EC8                     _LCDDisplay:
 13609                           	opt stack 23
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;lcd.c: 189: LCD_Erase();
 13613                           
 13614                           ;incstack = 0
 13615  002EC8  EC50  F019         	call	_LCD_Erase	;wreg free
 13616                           
 13617                           ;lcd.c: 190: sprintf((char *)LCDText, (char*)text, value);
 13618  002ECC  0EB6               	movlw	low _LCDText
 13619  002ECE  6E22               	movwf	sprintf@sp,c
 13620  002ED0  0E01               	movlw	high _LCDText
 13621  002ED2  6E23               	movwf	sprintf@sp+1,c
 13622  002ED4  C0C2  F024         	movff	LCDDisplay@text,sprintf@f
 13623  002ED8  C0C3  F025         	movff	LCDDisplay@text+1,sprintf@f+1
 13624  002EDC  C0C4  F026         	movff	LCDDisplay@value,?_sprintf+4
 13625  002EE0  6A27               	clrf	?_sprintf+5,c
 13626  002EE2  ECC8  F000         	call	_sprintf	;wreg free
 13627                           
 13628                           ; BSR set to: 0
 13629                           ;lcd.c: 191: LCD_Update();
 13630  002EE6  EC74  F015         	call	_LCD_Update	;wreg free
 13631                           
 13632                           ;lcd.c: 194: if( delay )
 13633  002EEA  0100               	movlb	0	; () banked
 13634  002EEC  51C5               	movf	LCDDisplay@delay& (0+255),w,b
 13635  002EEE  B4D8               	btfsc	status,2,c
 13636  002EF0  0012               	return	
 13637                           
 13638                           ; BSR set to: 0
 13639                           ;lcd.c: 195: {
 13640                           ;lcd.c: 196: uint8_t i;
 13641                           ;lcd.c: 197: for(i = 0; i < 8; i++)
 13642  002EF2  6A32               	clrf	LCDDisplay@i,c
 13643  002EF4                     l10948:
 13644                           
 13645                           ;lcd.c: 198: {
 13646                           ;lcd.c: 199: DELAY_ms(250);
 13647  002EF4  6A17               	clrf	DELAY_ms@ms+1,c
 13648  002EF6  0EFA               	movlw	250
 13649  002EF8  6E16               	movwf	DELAY_ms@ms,c
 13650  002EFA  EC88  F011         	call	_DELAY_ms	;wreg free
 13651  002EFE  2A32               	incf	LCDDisplay@i,f,c
 13652  002F00  0E07               	movlw	7
 13653  002F02  6432               	cpfsgt	LCDDisplay@i,c
 13654  002F04  D7F7               	goto	l10948
 13655  002F06  0C07               	retlw	7
 13656  002F08                     __end_of_LCDDisplay:
 13657                           	opt stack 0
 13658                           tblptru	equ	0xFF8
 13659                           tblptrh	equ	0xFF7
 13660                           tblptrl	equ	0xFF6
 13661                           tablat	equ	0xFF5
 13662                           prodh	equ	0xFF4
 13663                           prodl	equ	0xFF3
 13664                           intcon	equ	0xFF2
 13665                           intcon2	equ	0xFF1
 13666                           postinc0	equ	0xFEE
 13667                           plusw0	equ	0xFEB
 13668                           wreg	equ	0xFE8
 13669                           indf1	equ	0xFE7
 13670                           postinc1	equ	0xFE6
 13671                           postdec1	equ	0xFE5
 13672                           fsr1h	equ	0xFE2
 13673                           fsr1l	equ	0xFE1
 13674                           indf2	equ	0xFDF
 13675                           postinc2	equ	0xFDE
 13676                           postdec2	equ	0xFDD
 13677                           plusw2	equ	0xFDB
 13678                           fsr2h	equ	0xFDA
 13679                           fsr2l	equ	0xFD9
 13680                           status	equ	0xFD8
 13681                           
 13682 ;; *************** function _sprintf *****************
 13683 ;; Defined at:
 13684 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13685 ;; Parameters:    Size  Location     Type
 13686 ;;  sp              2   33[COMRAM] PTR unsigned char 
 13687 ;;		 -> LCDText(33), 
 13688 ;;  f               2   35[COMRAM] PTR const unsigned char 
 13689 ;;		 -> STR_38(12), STR_37(20), STR_36(17), STR_35(22), 
 13690 ;;		 -> STR_34(22), STR_33(25), STR_32(11), STR_31(11), 
 13691 ;;		 -> STR_30(28), STR_29(22), STR_28(17), STR_27(32), 
 13692 ;;		 -> STR_26(33), STR_25(16), STR_19(29), STR_18(31), 
 13693 ;;		 -> STR_17(32), STR_16(31), STR_15(14), STR_14(16), 
 13694 ;; Auto vars:     Size  Location     Type
 13695 ;;  idx             1    0[BANK0 ] unsigned char 
 13696 ;;  tmpval          4    0        struct .
 13697 ;;  flag            2   17[BANK0 ] unsigned short 
 13698 ;;  width           2   14[BANK0 ] int 
 13699 ;;  val             2   11[BANK0 ] unsigned int 
 13700 ;;  len             2    8[BANK0 ] unsigned int 
 13701 ;;  c               1   16[BANK0 ] char 
 13702 ;;  prec            1   13[BANK0 ] char 
 13703 ;;  ap              1   10[BANK0 ] PTR void [1]
 13704 ;;		 -> ?_sprintf(2), 
 13705 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
 13706 ;;		 -> sprintf@c(1), 
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  2   33[COMRAM] int 
 13709 ;; Registers used:
 13710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13711 ;; Tracked objects:
 13712 ;;		On entry : 0/1
 13713 ;;		On exit  : F/0
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13716 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13717 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13718 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13719 ;;      Totals:        16      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13720 ;;Total ram usage:       35 bytes
 13721 ;; Hardware stack levels used:    1
 13722 ;; Hardware stack levels required when called:    4
 13723 ;; This function calls:
 13724 ;;		___lwdiv
 13725 ;;		___lwmod
 13726 ;;		___wmul
 13727 ;;		_isdigit
 13728 ;; This function is called by:
 13729 ;;		_LCDTRXCount
 13730 ;;		_LCDDisplay
 13731 ;;		_run_star_demo
 13732 ;; This function uses a non-reentrant model
 13733 ;;
 13734                           
 13735                           	psect	text62
 13736  000190                     __ptext62:
 13737                           	opt stack 0
 13738  000190                     _sprintf:
 13739                           	opt stack 24
 13740                           
 13741                           ;doprnt.c: 494: va_list ap;
 13742                           ;doprnt.c: 499: signed char c;
 13743                           ;doprnt.c: 501: int width;
 13744                           ;doprnt.c: 506: signed char prec;
 13745                           ;doprnt.c: 508: unsigned short flag;
 13746                           ;doprnt.c: 523: union {
 13747                           ;doprnt.c: 524: unsigned long vd;
 13748                           ;doprnt.c: 525: double integ;
 13749                           ;doprnt.c: 526: } tmpval;
 13750                           ;doprnt.c: 528: unsigned int val;
 13751                           ;doprnt.c: 529: unsigned len;
 13752                           ;doprnt.c: 530: const char * cp;
 13753                           ;doprnt.c: 533: *ap = __va_start();
 13754                           
 13755                           ;incstack = 0
 13756  000190  0E26               	movlw	low (?_sprintf+4)
 13757  000192  0100               	movlb	0	; () banked
 13758  000194  6FB9               	movwf	sprintf@ap& (0+255),b
 13759                           
 13760                           ;doprnt.c: 536: while(c = *f++) {
 13761  000196  D37F               	goto	l10880
 13762  000198                     l10558:
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;doprnt.c: 538: if(c != '%')
 13766  000198  0E25               	movlw	37
 13767  00019A  19BF               	xorwf	sprintf@c& (0+255),w,b
 13768  00019C  E009               	bz	l1393
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;doprnt.c: 540: {
 13772                           ;doprnt.c: 541: ((*sp++ = (c)));
 13773  00019E  C022  FFD9         	movff	sprintf@sp,fsr2l
 13774  0001A2  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 13775  0001A6  C0BF  FFDF         	movff	sprintf@c,indf2
 13776                           
 13777                           ; BSR set to: 0
 13778  0001AA  4A22               	infsnz	sprintf@sp,f,c
 13779  0001AC  2A23               	incf	sprintf@sp+1,f,c
 13780                           
 13781                           ;doprnt.c: 542: continue;
 13782  0001AE  D373               	goto	l10880
 13783  0001B0                     l1393:
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;doprnt.c: 543: }
 13787                           ;doprnt.c: 546: width = 0;
 13788  0001B0  6BBD               	clrf	sprintf@width& (0+255),b
 13789  0001B2  6BBE               	clrf	(sprintf@width+1)& (0+255),b
 13790                           
 13791                           ;doprnt.c: 548: flag = 0;
 13792  0001B4  6BC0               	clrf	sprintf@flag& (0+255),b
 13793  0001B6  6BC1               	clrf	(sprintf@flag+1)& (0+255),b
 13794  0001B8  D009               	goto	l10574
 13795  0001BA                     l10564:
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;doprnt.c: 554: flag |= 0x08;
 13799  0001BA  87C0               	bsf	sprintf@flag& (0+255),3,b
 13800  0001BC  D005               	goto	L15
 13801  0001BE                     l10566:
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;doprnt.c: 561: flag |= 0x01;
 13805  0001BE  81C0               	bsf	sprintf@flag& (0+255),0,b
 13806  0001C0  D003               	goto	L15
 13807  0001C2                     l10568:
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;doprnt.c: 574: flag |= 0x800;
 13811  0001C2  87C1               	bsf	(sprintf@flag+1)& (0+255),3,b
 13812  0001C4  D001               	goto	L15
 13813  0001C6                     l10570:
 13814                           
 13815                           ; BSR set to: 0
 13816                           ;doprnt.c: 580: flag |= 0x04;
 13817  0001C6  85C0               	bsf	sprintf@flag& (0+255),2,b
 13818  0001C8                     L15:
 13819                           
 13820                           ;doprnt.c: 581: f++;
 13821  0001C8  4A24               	infsnz	sprintf@f,f,c
 13822  0001CA  2A25               	incf	sprintf@f+1,f,c
 13823  0001CC                     l10574:
 13824                           
 13825                           ; BSR set to: 0
 13826  0001CC  C024  FFF6         	movff	sprintf@f,tblptrl
 13827  0001D0  C025  FFF7         	movff	sprintf@f+1,tblptrh
 13828  0001D4                     	if	0	;tblptru may be non-zero
 13829  0001D4                     	endif
 13830  0001D4                     	if	0	;tblptru may be non-zero
 13831  0001D4                     	endif
 13832  0001D4  0008               	tblrd		*
 13833  0001D6  50F5               	movf	tablat,w,c
 13834                           
 13835                           ; Switch size 1, requested type "speed"
 13836                           ; Number of cases is 4, Range of values is 32 to 48
 13837                           ; switch strategies available:
 13838                           ; Name         Instructions Cycles
 13839                           ; simple_byte           13     7 (average)
 13840                           ;	Chosen strategy is simple_byte
 13841  0001D8  0A20               	xorlw	32	; case 32
 13842  0001DA  E0F1               	bz	l10566
 13843  0001DC  0A03               	xorlw	3	; case 35
 13844  0001DE  E0F1               	bz	l10568
 13845  0001E0  0A0E               	xorlw	14	; case 45
 13846  0001E2  E0EB               	bz	l10564
 13847  0001E4  0A1D               	xorlw	29	; case 48
 13848  0001E6  E0EF               	bz	l10570
 13849                           
 13850                           ; BSR set to: 0
 13851                           ;doprnt.c: 593: if(flag & 0x08)
 13852  0001E8  B7C0               	btfsc	sprintf@flag& (0+255),3,b
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;doprnt.c: 594: flag &= ~0x04;
 13856  0001EA  95C0               	bcf	sprintf@flag& (0+255),2,b
 13857                           
 13858                           ; BSR set to: 0
 13859                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13860  0001EC  C024  FFF6         	movff	sprintf@f,tblptrl
 13861  0001F0  C025  FFF7         	movff	sprintf@f+1,tblptrh
 13862  0001F4                     	if	0	;tblptru may be non-zero
 13863  0001F4                     	endif
 13864  0001F4                     	if	0	;tblptru may be non-zero
 13865  0001F4                     	endif
 13866  0001F4  0008               	tblrd		*
 13867  0001F6  50F5               	movf	tablat,w,c
 13868  0001F8  ECA0  F019         	call	_isdigit
 13869  0001FC  E330               	bnc	l10590
 13870                           
 13871                           ;doprnt.c: 598: width = 0;
 13872  0001FE  0100               	movlb	0	; () banked
 13873  000200  6BBD               	clrf	sprintf@width& (0+255),b
 13874  000202  6BBE               	clrf	(sprintf@width+1)& (0+255),b
 13875  000204                     l10582:
 13876                           
 13877                           ;doprnt.c: 600: width *= 10;
 13878  000204  C0BD  F016         	movff	sprintf@width,___wmul@multiplier
 13879  000208  C0BE  F017         	movff	sprintf@width+1,___wmul@multiplier+1
 13880  00020C  6A19               	clrf	___wmul@multiplicand+1,c
 13881  00020E  0E0A               	movlw	10
 13882  000210  6E18               	movwf	___wmul@multiplicand,c
 13883  000212  EC3D  F019         	call	___wmul	;wreg free
 13884  000216  C016  F0BD         	movff	?___wmul,sprintf@width
 13885  00021A  C017  F0BE         	movff	?___wmul+1,sprintf@width+1
 13886                           
 13887                           ;doprnt.c: 601: width += *f++ - '0';
 13888  00021E  0ED0               	movlw	208
 13889  000220  6E2E               	movwf	??_sprintf& (0+255),c
 13890  000222  682F               	setf	(??_sprintf+1)& (0+255),c
 13891  000224  C024  FFF6         	movff	sprintf@f,tblptrl
 13892  000228  C025  FFF7         	movff	sprintf@f+1,tblptrh
 13893  00022C                     	if	0	;tblptru may be non-zero
 13894  00022C                     	endif
 13895  00022C                     	if	0	;tblptru may be non-zero
 13896  00022C                     	endif
 13897  00022C  0008               	tblrd		*
 13898  00022E  50F5               	movf	tablat,w,c
 13899  000230  6E30               	movwf	(??_sprintf+2)& (0+255),c
 13900  000232  6A31               	clrf	(??_sprintf+3)& (0+255),c
 13901  000234  502E               	movf	??_sprintf,w,c
 13902  000236  2630               	addwf	??_sprintf+2,f,c
 13903  000238  502F               	movf	??_sprintf+1,w,c
 13904  00023A  2231               	addwfc	??_sprintf+3,f,c
 13905  00023C  5030               	movf	??_sprintf+2,w,c
 13906  00023E  0100               	movlb	0	; () banked
 13907  000240  27BD               	addwf	sprintf@width& (0+255),f,b
 13908  000242  5031               	movf	??_sprintf+3,w,c
 13909  000244  23BE               	addwfc	(sprintf@width+1)& (0+255),f,b
 13910                           
 13911                           ; BSR set to: 0
 13912  000246  4A24               	infsnz	sprintf@f,f,c
 13913  000248  2A25               	incf	sprintf@f+1,f,c
 13914                           
 13915                           ; BSR set to: 0
 13916                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13917  00024A  C024  FFF6         	movff	sprintf@f,tblptrl
 13918  00024E  C025  FFF7         	movff	sprintf@f+1,tblptrh
 13919  000252                     	if	0	;tblptru may be non-zero
 13920  000252                     	endif
 13921  000252                     	if	0	;tblptru may be non-zero
 13922  000252                     	endif
 13923  000252  0008               	tblrd		*
 13924  000254  50F5               	movf	tablat,w,c
 13925  000256  ECA0  F019         	call	_isdigit
 13926  00025A  E315               	bnc	l10598
 13927  00025C  D7D3               	goto	l10582
 13928  00025E                     l10590:
 13929  00025E  C024  FFF6         	movff	sprintf@f,tblptrl
 13930  000262  C025  FFF7         	movff	sprintf@f+1,tblptrh
 13931  000266                     	if	0	;tblptru may be non-zero
 13932  000266                     	endif
 13933  000266                     	if	0	;tblptru may be non-zero
 13934  000266                     	endif
 13935  000266  0008               	tblrd		*
 13936  000268  50F5               	movf	tablat,w,c
 13937  00026A  0A2A               	xorlw	42
 13938  00026C  E10C               	bnz	l10598
 13939                           
 13940                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 13941  00026E  0100               	movlb	0	; () banked
 13942  000270  51B9               	movf	sprintf@ap& (0+255),w,b
 13943  000272  6ED9               	movwf	fsr2l,c
 13944  000274  6ADA               	clrf	fsr2h,c
 13945  000276  CFDE F0BD          	movff	postinc2,sprintf@width
 13946  00027A  CFDD F0BE          	movff	postdec2,sprintf@width+1
 13947                           
 13948                           ; BSR set to: 0
 13949  00027E  0E02               	movlw	2
 13950  000280  27B9               	addwf	sprintf@ap& (0+255),f,b
 13951                           
 13952                           ; BSR set to: 0
 13953                           ;doprnt.c: 606: f++;
 13954  000282  4A24               	infsnz	sprintf@f,f,c
 13955  000284  2A25               	incf	sprintf@f+1,f,c
 13956  000286                     l10598:
 13957                           
 13958                           ;doprnt.c: 608: }
 13959                           ;doprnt.c: 611: if(*f == '.') {
 13960  000286  C024  FFF6         	movff	sprintf@f,tblptrl
 13961  00028A  C025  FFF7         	movff	sprintf@f+1,tblptrh
 13962  00028E                     	if	0	;tblptru may be non-zero
 13963  00028E                     	endif
 13964  00028E                     	if	0	;tblptru may be non-zero
 13965  00028E                     	endif
 13966  00028E  0008               	tblrd		*
 13967  000290  50F5               	movf	tablat,w,c
 13968  000292  0A2E               	xorlw	46
 13969  000294  E132               	bnz	l1409
 13970                           
 13971                           ;doprnt.c: 612: flag |= 0x4000;
 13972  000296  0100               	movlb	0	; () banked
 13973  000298  8DC1               	bsf	(sprintf@flag+1)& (0+255),6,b
 13974                           
 13975                           ;doprnt.c: 613: f++;
 13976  00029A  4A24               	infsnz	sprintf@f,f,c
 13977  00029C  2A25               	incf	sprintf@f+1,f,c
 13978                           
 13979                           ; BSR set to: 0
 13980                           ;doprnt.c: 615: if(*f == '*') {
 13981  00029E  C024  FFF6         	movff	sprintf@f,tblptrl
 13982  0002A2  C025  FFF7         	movff	sprintf@f+1,tblptrh
 13983  0002A6                     	if	0	;tblptru may be non-zero
 13984  0002A6                     	endif
 13985  0002A6                     	if	0	;tblptru may be non-zero
 13986  0002A6                     	endif
 13987  0002A6  0008               	tblrd		*
 13988  0002A8  50F5               	movf	tablat,w,c
 13989  0002AA  0A2A               	xorlw	42
 13990  0002AC  E10A               	bnz	l1410
 13991                           
 13992                           ; BSR set to: 0
 13993                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 13994  0002AE  51B9               	movf	sprintf@ap& (0+255),w,b
 13995  0002B0  6ED9               	movwf	fsr2l,c
 13996  0002B2  6ADA               	clrf	fsr2h,c
 13997  0002B4  50DF               	movf	indf2,w,c
 13998  0002B6  6FBC               	movwf	sprintf@prec& (0+255),b
 13999                           
 14000                           ; BSR set to: 0
 14001  0002B8  0E02               	movlw	2
 14002  0002BA  27B9               	addwf	sprintf@ap& (0+255),f,b
 14003                           
 14004                           ; BSR set to: 0
 14005                           ;doprnt.c: 617: f++;
 14006  0002BC  4A24               	infsnz	sprintf@f,f,c
 14007  0002BE  2A25               	incf	sprintf@f+1,f,c
 14008                           
 14009                           ;doprnt.c: 618: } else
 14010  0002C0  D08C               	goto	l10666
 14011  0002C2                     l1410:
 14012                           
 14013                           ; BSR set to: 0
 14014                           ;doprnt.c: 620: {
 14015                           ;doprnt.c: 621: prec = 0;
 14016  0002C2  6BBC               	clrf	sprintf@prec& (0+255),b
 14017                           
 14018                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 14019  0002C4  D010               	goto	l10614
 14020  0002C6                     l10610:
 14021                           
 14022                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 14023  0002C6  C024  FFF6         	movff	sprintf@f,tblptrl
 14024  0002CA  C025  FFF7         	movff	sprintf@f+1,tblptrh
 14025  0002CE                     	if	0	;tblptru may be non-zero
 14026  0002CE                     	endif
 14027  0002CE                     	if	0	;tblptru may be non-zero
 14028  0002CE                     	endif
 14029  0002CE  0008               	tblrd		*
 14030  0002D0  CFF5 F02E          	movff	tablat,??_sprintf
 14031  0002D4  0100               	movlb	0	; () banked
 14032  0002D6  51BC               	movf	sprintf@prec& (0+255),w,b
 14033  0002D8  0D0A               	mullw	10
 14034  0002DA  50F3               	movf	prodl,w,c
 14035  0002DC  242E               	addwf	??_sprintf,w,c
 14036  0002DE  0FD0               	addlw	208
 14037  0002E0  6FBC               	movwf	sprintf@prec& (0+255),b
 14038                           
 14039                           ; BSR set to: 0
 14040  0002E2  4A24               	infsnz	sprintf@f,f,c
 14041  0002E4  2A25               	incf	sprintf@f+1,f,c
 14042  0002E6                     l10614:
 14043                           
 14044                           ; BSR set to: 0
 14045  0002E6  C024  FFF6         	movff	sprintf@f,tblptrl
 14046  0002EA  C025  FFF7         	movff	sprintf@f+1,tblptrh
 14047  0002EE                     	if	0	;tblptru may be non-zero
 14048  0002EE                     	endif
 14049  0002EE                     	if	0	;tblptru may be non-zero
 14050  0002EE                     	endif
 14051  0002EE  0008               	tblrd		*
 14052  0002F0  50F5               	movf	tablat,w,c
 14053  0002F2  ECA0  F019         	call	_isdigit
 14054  0002F6  E371               	bnc	l10666
 14055  0002F8  D7E6               	goto	l10610
 14056  0002FA                     l1409:
 14057                           
 14058                           ;doprnt.c: 626: prec = 0;
 14059  0002FA  0100               	movlb	0	; () banked
 14060  0002FC  6BBC               	clrf	sprintf@prec& (0+255),b
 14061  0002FE  D06D               	goto	l10666
 14062  000300                     l10616:
 14063                           
 14064                           ; BSR set to: 0
 14065                           ;doprnt.c: 691: flag |= 0x40;
 14066  000300  8DC0               	bsf	sprintf@flag& (0+255),6,b
 14067                           
 14068                           ;doprnt.c: 693: break;
 14069  000302  D089               	goto	l10668
 14070  000304                     l10618:
 14071                           
 14072                           ; BSR set to: 0
 14073                           ;doprnt.c: 714: flag |= 0x20;
 14074  000304  8BC0               	bsf	sprintf@flag& (0+255),5,b
 14075  000306                     l1424:
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;doprnt.c: 721: flag |= 0x80;
 14079  000306  8FC0               	bsf	sprintf@flag& (0+255),7,b
 14080                           
 14081                           ;doprnt.c: 723: break;
 14082  000308  D086               	goto	l10668
 14083  00030A                     l10620:
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;doprnt.c: 753: if(prec && prec < len)
 14087  00030A  51BC               	movf	sprintf@prec& (0+255),w,b
 14088  00030C  E00F               	bz	l10626
 14089                           
 14090                           ; BSR set to: 0
 14091  00030E  C0BC  F02E         	movff	sprintf@prec,??_sprintf
 14092  000312  6A2F               	clrf	(??_sprintf+1)& (0+255),c
 14093  000314  BE2E               	btfsc	??_sprintf& (0+255),7,c
 14094  000316  062F               	decf	(??_sprintf+1)& (0+255),f,c
 14095  000318  51B7               	movf	sprintf@len& (0+255),w,b
 14096  00031A  5C2E               	subwf	??_sprintf,w,c
 14097  00031C  51B8               	movf	(sprintf@len+1)& (0+255),w,b
 14098  00031E  582F               	subwfb	??_sprintf+1,w,c
 14099  000320  E205               	bc	l10626
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;doprnt.c: 754: len = prec;
 14103  000322  51BC               	movf	sprintf@prec& (0+255),w,b
 14104  000324  6FB7               	movwf	sprintf@len& (0+255),b
 14105  000326  6BB8               	clrf	(sprintf@len+1)& (0+255),b
 14106  000328  BFB7               	btfsc	sprintf@len& (0+255),7,b
 14107  00032A  07B8               	decf	(sprintf@len+1)& (0+255),f,b
 14108  00032C                     l10626:
 14109                           
 14110                           ; BSR set to: 0
 14111                           ;doprnt.c: 757: if(width > len)
 14112  00032C  51BD               	movf	sprintf@width& (0+255),w,b
 14113  00032E  5DB7               	subwf	sprintf@len& (0+255),w,b
 14114  000330  51BE               	movf	(sprintf@width+1)& (0+255),w,b
 14115  000332  59B8               	subwfb	(sprintf@len+1)& (0+255),w,b
 14116  000334  E205               	bc	l1427
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;doprnt.c: 758: width -= len;
 14120  000336  51B7               	movf	sprintf@len& (0+255),w,b
 14121  000338  5FBD               	subwf	sprintf@width& (0+255),f,b
 14122  00033A  51B8               	movf	(sprintf@len+1)& (0+255),w,b
 14123  00033C  5BBE               	subwfb	(sprintf@width+1)& (0+255),f,b
 14124  00033E  D002               	goto	l1428
 14125  000340                     l1427:
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;doprnt.c: 759: else
 14129                           ;doprnt.c: 760: width = 0;
 14130  000340  6BBD               	clrf	sprintf@width& (0+255),b
 14131  000342  6BBE               	clrf	(sprintf@width+1)& (0+255),b
 14132  000344                     l1428:
 14133                           
 14134                           ; BSR set to: 0
 14135                           ;doprnt.c: 762: if(!(flag & 0x08))
 14136  000344  B7C0               	btfsc	sprintf@flag& (0+255),3,b
 14137  000346  D01D               	goto	l10644
 14138  000348  D008               	goto	l10636
 14139  00034A                     l10632:
 14140                           
 14141                           ; BSR set to: 0
 14142                           ;doprnt.c: 765: ((*sp++ = (' ')));
 14143  00034A  C022  FFD9         	movff	sprintf@sp,fsr2l
 14144  00034E  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14145  000352  0E20               	movlw	32
 14146  000354  6EDF               	movwf	indf2,c
 14147                           
 14148                           ; BSR set to: 0
 14149  000356  4A22               	infsnz	sprintf@sp,f,c
 14150  000358  2A23               	incf	sprintf@sp+1,f,c
 14151  00035A                     l10636:
 14152                           
 14153                           ; BSR set to: 0
 14154  00035A  07BD               	decf	sprintf@width& (0+255),f,b
 14155  00035C  A0D8               	btfss	status,0,c
 14156  00035E  07BE               	decf	(sprintf@width+1)& (0+255),f,b
 14157  000360  29BD               	incf	sprintf@width& (0+255),w,b
 14158  000362  E1F3               	bnz	l10632
 14159  000364  29BE               	incf	(sprintf@width+1)& (0+255),w,b
 14160  000366  E00D               	bz	l10644
 14161  000368  D7F0               	goto	l10632
 14162  00036A                     l10638:
 14163                           
 14164                           ; BSR set to: 0
 14165                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 14166  00036A  51B6               	movf	sprintf@cp& (0+255),w,b
 14167  00036C  6ED9               	movwf	fsr2l,c
 14168  00036E  6ADA               	clrf	fsr2h,c
 14169  000370  C022  FFE1         	movff	sprintf@sp,fsr1l
 14170  000374  C023  FFE2         	movff	sprintf@sp+1,fsr1h
 14171  000378  CFDF FFE7          	movff	indf2,indf1
 14172                           
 14173                           ; BSR set to: 0
 14174  00037C  2BB6               	incf	sprintf@cp& (0+255),f,b
 14175                           
 14176                           ; BSR set to: 0
 14177  00037E  4A22               	infsnz	sprintf@sp,f,c
 14178  000380  2A23               	incf	sprintf@sp+1,f,c
 14179  000382                     l10644:
 14180                           
 14181                           ; BSR set to: 0
 14182  000382  07B7               	decf	sprintf@len& (0+255),f,b
 14183  000384  A0D8               	btfss	status,0,c
 14184  000386  07B8               	decf	(sprintf@len+1)& (0+255),f,b
 14185  000388  29B7               	incf	sprintf@len& (0+255),w,b
 14186  00038A  E1EF               	bnz	l10638
 14187  00038C  29B8               	incf	(sprintf@len+1)& (0+255),w,b
 14188  00038E  E1ED               	bnz	l10638
 14189                           
 14190                           ; BSR set to: 0
 14191                           ;doprnt.c: 770: if(flag & 0x08)
 14192  000390  A7C0               	btfss	sprintf@flag& (0+255),3,b
 14193  000392  D281               	goto	l10880
 14194  000394  D008               	goto	l10652
 14195  000396                     l10648:
 14196                           
 14197                           ; BSR set to: 0
 14198                           ;doprnt.c: 772: ((*sp++ = (' ')));
 14199  000396  C022  FFD9         	movff	sprintf@sp,fsr2l
 14200  00039A  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14201  00039E  0E20               	movlw	32
 14202  0003A0  6EDF               	movwf	indf2,c
 14203                           
 14204                           ; BSR set to: 0
 14205  0003A2  4A22               	infsnz	sprintf@sp,f,c
 14206  0003A4  2A23               	incf	sprintf@sp+1,f,c
 14207  0003A6                     l10652:
 14208                           
 14209                           ; BSR set to: 0
 14210  0003A6  07BD               	decf	sprintf@width& (0+255),f,b
 14211  0003A8  A0D8               	btfss	status,0,c
 14212  0003AA  07BE               	decf	(sprintf@width+1)& (0+255),f,b
 14213  0003AC  29BD               	incf	sprintf@width& (0+255),w,b
 14214  0003AE  E1F3               	bnz	l10648
 14215  0003B0  29BE               	incf	(sprintf@width+1)& (0+255),w,b
 14216  0003B2  E101 D270          	bz	l10880
 14217  0003B6  D7EF               	goto	l10648
 14218  0003B8                     l10654:
 14219                           
 14220                           ; BSR set to: 0
 14221                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 14222  0003B8  51B9               	movf	sprintf@ap& (0+255),w,b
 14223  0003BA  6ED9               	movwf	fsr2l,c
 14224  0003BC  6ADA               	clrf	fsr2h,c
 14225  0003BE  50DF               	movf	indf2,w,c
 14226  0003C0  6FBF               	movwf	sprintf@c& (0+255),b
 14227                           
 14228                           ; BSR set to: 0
 14229  0003C2  0E02               	movlw	2
 14230  0003C4  27B9               	addwf	sprintf@ap& (0+255),f,b
 14231  0003C6                     l10658:
 14232                           
 14233                           ; BSR set to: 0
 14234                           ;doprnt.c: 805: cp = (char *)&c;
 14235  0003C6  0EBF               	movlw	low sprintf@c
 14236  0003C8  6FB6               	movwf	sprintf@cp& (0+255),b
 14237                           
 14238                           ; BSR set to: 0
 14239                           ;doprnt.c: 806: len = 1;
 14240  0003CA  0E00               	movlw	0
 14241  0003CC  6FB8               	movwf	(sprintf@len+1)& (0+255),b
 14242  0003CE  0E01               	movlw	1
 14243  0003D0  6FB7               	movwf	sprintf@len& (0+255),b
 14244                           
 14245                           ;doprnt.c: 807: goto dostring;
 14246  0003D2  D79B               	goto	l10620
 14247  0003D4                     l10662:
 14248                           
 14249                           ; BSR set to: 0
 14250                           ;doprnt.c: 818: flag |= 0xC0;
 14251  0003D4  0EC0               	movlw	192
 14252  0003D6  13C0               	iorwf	sprintf@flag& (0+255),f,b
 14253                           
 14254                           ;doprnt.c: 819: break;
 14255  0003D8  D01E               	goto	l10668
 14256  0003DA                     l10666:
 14257  0003DA  C024  FFF6         	movff	sprintf@f,tblptrl
 14258  0003DE  C025  FFF7         	movff	sprintf@f+1,tblptrh
 14259  0003E2  4A24               	infsnz	sprintf@f,f,c
 14260  0003E4  2A25               	incf	sprintf@f+1,f,c
 14261  0003E6                     	if	0	;tblptru may be non-zero
 14262  0003E6                     	endif
 14263  0003E6                     	if	0	;tblptru may be non-zero
 14264  0003E6                     	endif
 14265  0003E6  0008               	tblrd		*
 14266  0003E8  CFF5 F0BF          	movff	tablat,sprintf@c
 14267  0003EC  0100               	movlb	0	; () banked
 14268  0003EE  51BF               	movf	sprintf@c& (0+255),w,b
 14269                           
 14270                           ; Switch size 1, requested type "speed"
 14271                           ; Number of cases is 8, Range of values is 0 to 120
 14272                           ; switch strategies available:
 14273                           ; Name         Instructions Cycles
 14274                           ; simple_byte           25    13 (average)
 14275                           ;	Chosen strategy is simple_byte
 14276  0003F0  E101 D25D          	bz	l10882
 14277  0003F4  0A58               	xorlw	88	; case 88
 14278  0003F6  E086               	bz	l10618
 14279  0003F8  0A3B               	xorlw	59	; case 99
 14280  0003FA  E0DE               	bz	l10654
 14281  0003FC  0A07               	xorlw	7	; case 100
 14282  0003FE  E00B               	bz	l10668
 14283  000400  0A0D               	xorlw	13	; case 105
 14284  000402  E009               	bz	l10668
 14285  000404  0A06               	xorlw	6	; case 111
 14286  000406  E101 D77B          	bz	l10616
 14287  00040A  0A1A               	xorlw	26	; case 117
 14288  00040C  E0E3               	bz	l10662
 14289  00040E  0A0D               	xorlw	13	; case 120
 14290  000410  E101 D779          	bz	l1424
 14291  000414  D7D8               	goto	l10658
 14292  000416                     l10668:
 14293                           
 14294                           ; BSR set to: 0
 14295                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 14296  000416  C0C0  F02E         	movff	sprintf@flag,??_sprintf
 14297  00041A  0EC0               	movlw	192
 14298  00041C  162E               	andwf	??_sprintf,f,c
 14299  00041E  E112               	bnz	l10680
 14300                           
 14301                           ; BSR set to: 0
 14302                           ;doprnt.c: 1253: {
 14303                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 14304  000420  51B9               	movf	sprintf@ap& (0+255),w,b
 14305  000422  6ED9               	movwf	fsr2l,c
 14306  000424  6ADA               	clrf	fsr2h,c
 14307  000426  CFDE F0BA          	movff	postinc2,sprintf@val
 14308  00042A  CFDD F0BB          	movff	postdec2,sprintf@val+1
 14309                           
 14310                           ; BSR set to: 0
 14311  00042E  0E02               	movlw	2
 14312  000430  27B9               	addwf	sprintf@ap& (0+255),f,b
 14313                           
 14314                           ; BSR set to: 0
 14315                           ;doprnt.c: 1261: if((int)val < 0) {
 14316  000432  AFBB               	btfss	(sprintf@val+1)& (0+255),7,b
 14317  000434  D010               	goto	l10684
 14318                           
 14319                           ; BSR set to: 0
 14320                           ;doprnt.c: 1262: flag |= 0x03;
 14321  000436  0E03               	movlw	3
 14322  000438  13C0               	iorwf	sprintf@flag& (0+255),f,b
 14323                           
 14324                           ; BSR set to: 0
 14325                           ;doprnt.c: 1263: val = -val;
 14326  00043A  6DBA               	negf	sprintf@val& (0+255),b
 14327  00043C  1FBB               	comf	(sprintf@val+1)& (0+255),f,b
 14328  00043E  B0D8               	btfsc	status,0,c
 14329  000440  2BBB               	incf	(sprintf@val+1)& (0+255),f,b
 14330  000442  D009               	goto	l10684
 14331  000444                     l10680:
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;doprnt.c: 1268: else
 14335                           ;doprnt.c: 1273: {
 14336                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 14337  000444  51B9               	movf	sprintf@ap& (0+255),w,b
 14338  000446  6ED9               	movwf	fsr2l,c
 14339  000448  6ADA               	clrf	fsr2h,c
 14340  00044A  CFDE F0BA          	movff	postinc2,sprintf@val
 14341  00044E  CFDD F0BB          	movff	postdec2,sprintf@val+1
 14342                           
 14343                           ; BSR set to: 0
 14344  000452  0E02               	movlw	2
 14345  000454  27B9               	addwf	sprintf@ap& (0+255),f,b
 14346  000456                     l10684:
 14347                           
 14348                           ; BSR set to: 0
 14349                           ;doprnt.c: 1287: }
 14350                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 14351  000456  51BC               	movf	sprintf@prec& (0+255),w,b
 14352  000458  E147               	bnz	l10734
 14353                           
 14354                           ; BSR set to: 0
 14355  00045A  51BA               	movf	sprintf@val& (0+255),w,b
 14356  00045C  11BB               	iorwf	(sprintf@val+1)& (0+255),w,b
 14357  00045E  E144               	bnz	l10734
 14358                           
 14359                           ; BSR set to: 0
 14360                           ;doprnt.c: 1291: prec++;
 14361  000460  2BBC               	incf	sprintf@prec& (0+255),f,b
 14362  000462  D042               	goto	l10734
 14363  000464                     l10690:
 14364                           
 14365                           ; BSR set to: 0
 14366                           ;doprnt.c: 1302: case 0xC0:
 14367                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14368  000464  0E01               	movlw	1
 14369  000466  6FBF               	movwf	sprintf@c& (0+255),b
 14370  000468                     l10692:
 14371                           
 14372                           ; BSR set to: 0
 14373  000468  0E05               	movlw	5
 14374  00046A  19BF               	xorwf	sprintf@c& (0+255),w,b
 14375  00046C  E046               	bz	l10736
 14376                           
 14377                           ; BSR set to: 0
 14378                           ;doprnt.c: 1306: if(val < dpowers[c])
 14379  00046E  51BF               	movf	sprintf@c& (0+255),w,b
 14380  000470  0D02               	mullw	2
 14381  000472  0E6F               	movlw	low _dpowers
 14382  000474  24F3               	addwf	prodl,w,c
 14383  000476  6EF6               	movwf	tblptrl,c
 14384  000478  0EFD               	movlw	high _dpowers
 14385  00047A  20F4               	addwfc	prodh,w,c
 14386  00047C  6EF7               	movwf	tblptrh,c
 14387  00047E                     	if	0	;There are less than 3 active tblptr bytes
 14388  00047E                     	endif
 14389  00047E  0009               	tblrd		*+
 14390  000480  50F5               	movf	tablat,w,c
 14391  000482  5DBA               	subwf	sprintf@val& (0+255),w,b
 14392  000484  0009               	tblrd		*+
 14393  000486  50F5               	movf	tablat,w,c
 14394  000488  59BB               	subwfb	(sprintf@val+1)& (0+255),w,b
 14395  00048A  E337               	bnc	l10736
 14396                           
 14397                           ; BSR set to: 0
 14398  00048C  2BBF               	incf	sprintf@c& (0+255),f,b
 14399  00048E  D7EC               	goto	l10692
 14400  000490                     l10704:
 14401                           
 14402                           ; BSR set to: 0
 14403                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 14404  000490  0E01               	movlw	1
 14405  000492  6FBF               	movwf	sprintf@c& (0+255),b
 14406  000494                     l10706:
 14407                           
 14408                           ; BSR set to: 0
 14409  000494  0E04               	movlw	4
 14410  000496  19BF               	xorwf	sprintf@c& (0+255),w,b
 14411  000498  E030               	bz	l10736
 14412                           
 14413                           ; BSR set to: 0
 14414                           ;doprnt.c: 1317: if(val < hexpowers[c])
 14415  00049A  51BF               	movf	sprintf@c& (0+255),w,b
 14416  00049C  0D02               	mullw	2
 14417  00049E  0E79               	movlw	low _hexpowers
 14418  0004A0  24F3               	addwf	prodl,w,c
 14419  0004A2  6EF6               	movwf	tblptrl,c
 14420  0004A4  0EFD               	movlw	high _hexpowers
 14421  0004A6  20F4               	addwfc	prodh,w,c
 14422  0004A8  6EF7               	movwf	tblptrh,c
 14423  0004AA                     	if	0	;There are less than 3 active tblptr bytes
 14424  0004AA                     	endif
 14425  0004AA  0009               	tblrd		*+
 14426  0004AC  50F5               	movf	tablat,w,c
 14427  0004AE  5DBA               	subwf	sprintf@val& (0+255),w,b
 14428  0004B0  0009               	tblrd		*+
 14429  0004B2  50F5               	movf	tablat,w,c
 14430  0004B4  59BB               	subwfb	(sprintf@val+1)& (0+255),w,b
 14431  0004B6  E321               	bnc	l10736
 14432                           
 14433                           ; BSR set to: 0
 14434  0004B8  2BBF               	incf	sprintf@c& (0+255),f,b
 14435  0004BA  D7EC               	goto	l10706
 14436  0004BC                     l10718:
 14437                           
 14438                           ; BSR set to: 0
 14439                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 14440  0004BC  0E01               	movlw	1
 14441  0004BE  6FBF               	movwf	sprintf@c& (0+255),b
 14442  0004C0                     l10720:
 14443                           
 14444                           ; BSR set to: 0
 14445  0004C0  0E06               	movlw	6
 14446  0004C2  19BF               	xorwf	sprintf@c& (0+255),w,b
 14447  0004C4  E01A               	bz	l10736
 14448                           
 14449                           ; BSR set to: 0
 14450                           ;doprnt.c: 1329: if(val < octpowers[c])
 14451  0004C6  51BF               	movf	sprintf@c& (0+255),w,b
 14452  0004C8  0D02               	mullw	2
 14453  0004CA  0E63               	movlw	low _octpowers
 14454  0004CC  24F3               	addwf	prodl,w,c
 14455  0004CE  6EF6               	movwf	tblptrl,c
 14456  0004D0  0EFD               	movlw	high _octpowers
 14457  0004D2  20F4               	addwfc	prodh,w,c
 14458  0004D4  6EF7               	movwf	tblptrh,c
 14459  0004D6                     	if	0	;There are less than 3 active tblptr bytes
 14460  0004D6                     	endif
 14461  0004D6  0009               	tblrd		*+
 14462  0004D8  50F5               	movf	tablat,w,c
 14463  0004DA  5DBA               	subwf	sprintf@val& (0+255),w,b
 14464  0004DC  0009               	tblrd		*+
 14465  0004DE  50F5               	movf	tablat,w,c
 14466  0004E0  59BB               	subwfb	(sprintf@val+1)& (0+255),w,b
 14467  0004E2  E30B               	bnc	l10736
 14468                           
 14469                           ; BSR set to: 0
 14470  0004E4  2BBF               	incf	sprintf@c& (0+255),f,b
 14471  0004E6  D7EC               	goto	l10720
 14472  0004E8                     l10734:
 14473                           
 14474                           ; BSR set to: 0
 14475  0004E8  51C0               	movf	sprintf@flag& (0+255),w,b
 14476  0004EA  0BC0               	andlw	192
 14477                           
 14478                           ; Switch size 1, requested type "speed"
 14479                           ; Number of cases is 4, Range of values is 0 to 192
 14480                           ; switch strategies available:
 14481                           ; Name         Instructions Cycles
 14482                           ; simple_byte           13     7 (average)
 14483                           ;	Chosen strategy is simple_byte
 14484  0004EC  E0BB               	bz	l10690
 14485  0004EE  0A40               	xorlw	64	; case 64
 14486  0004F0  E0E5               	bz	l10718
 14487  0004F2  0AC0               	xorlw	192	; case 128
 14488  0004F4  E0CD               	bz	l10704
 14489  0004F6  0A40               	xorlw	64	; case 192
 14490  0004F8  E0B5               	bz	l10690
 14491  0004FA                     l10736:
 14492                           
 14493                           ; BSR set to: 0
 14494                           ;doprnt.c: 1339: if(c < prec)
 14495  0004FA  51BF               	movf	sprintf@c& (0+255),w,b
 14496  0004FC  0A80               	xorlw	128
 14497  0004FE  6E2E               	movwf	??_sprintf& (0+255),c
 14498  000500  51BC               	movf	sprintf@prec& (0+255),w,b
 14499  000502  0A80               	xorlw	128
 14500  000504  5C2E               	subwf	??_sprintf& (0+255),w,c
 14501  000506  E203               	bc	l10740
 14502                           
 14503                           ; BSR set to: 0
 14504                           ;doprnt.c: 1340: c = prec;
 14505  000508  C0BC  F0BF         	movff	sprintf@prec,sprintf@c
 14506  00050C  D009               	goto	l10744
 14507  00050E                     l10740:
 14508                           
 14509                           ; BSR set to: 0
 14510                           ;doprnt.c: 1341: else if(prec < c)
 14511  00050E  51BC               	movf	sprintf@prec& (0+255),w,b
 14512  000510  0A80               	xorlw	128
 14513  000512  6E2E               	movwf	??_sprintf& (0+255),c
 14514  000514  51BF               	movf	sprintf@c& (0+255),w,b
 14515  000516  0A80               	xorlw	128
 14516  000518  5C2E               	subwf	??_sprintf& (0+255),w,c
 14517  00051A  E202               	bc	l10744
 14518                           
 14519                           ; BSR set to: 0
 14520                           ;doprnt.c: 1342: prec = c;
 14521  00051C  C0BF  F0BC         	movff	sprintf@c,sprintf@prec
 14522  000520                     l10744:
 14523                           
 14524                           ; BSR set to: 0
 14525                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14526  000520  51BD               	movf	sprintf@width& (0+255),w,b
 14527  000522  11BE               	iorwf	(sprintf@width+1)& (0+255),w,b
 14528  000524  E008               	bz	l10750
 14529                           
 14530                           ; BSR set to: 0
 14531  000526  C0C0  F02E         	movff	sprintf@flag,??_sprintf
 14532  00052A  0E03               	movlw	3
 14533  00052C  162E               	andwf	??_sprintf,f,c
 14534  00052E  E003               	bz	l10750
 14535                           
 14536                           ; BSR set to: 0
 14537                           ;doprnt.c: 1346: width--;
 14538  000530  07BD               	decf	sprintf@width& (0+255),f,b
 14539  000532  A0D8               	btfss	status,0,c
 14540  000534  07BE               	decf	(sprintf@width+1)& (0+255),f,b
 14541  000536                     l10750:
 14542                           
 14543                           ; BSR set to: 0
 14544                           ;doprnt.c: 1348: if(flag & 0x4000) {
 14545  000536  ADC1               	btfss	(sprintf@flag+1)& (0+255),6,b
 14546  000538  D013               	goto	l10756
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;doprnt.c: 1349: if(width > prec)
 14550  00053A  0E80               	movlw	128
 14551  00053C  BFBC               	btfsc	sprintf@prec& (0+255),7,b
 14552  00053E  0E7F               	movlw	127
 14553  000540  6E2E               	movwf	??_sprintf& (0+255),c
 14554  000542  51BD               	movf	sprintf@width& (0+255),w,b
 14555  000544  5DBC               	subwf	sprintf@prec& (0+255),w,b
 14556  000546  51BE               	movf	(sprintf@width+1)& (0+255),w,b
 14557  000548  0A80               	xorlw	128
 14558  00054A  582E               	subwfb	??_sprintf& (0+255),w,c
 14559  00054C  E207               	bc	l1467
 14560                           
 14561                           ; BSR set to: 0
 14562                           ;doprnt.c: 1350: width -= prec;
 14563  00054E  51BC               	movf	sprintf@prec& (0+255),w,b
 14564  000550  5FBD               	subwf	sprintf@width& (0+255),f,b
 14565  000552  0E00               	movlw	0
 14566  000554  BFBC               	btfsc	sprintf@prec& (0+255),7,b
 14567  000556  0EFF               	movlw	255
 14568  000558  5BBE               	subwfb	(sprintf@width+1)& (0+255),f,b
 14569  00055A  D002               	goto	l10756
 14570  00055C                     l1467:
 14571                           
 14572                           ; BSR set to: 0
 14573                           ;doprnt.c: 1351: else
 14574                           ;doprnt.c: 1352: width = 0;
 14575  00055C  6BBD               	clrf	sprintf@width& (0+255),b
 14576  00055E  6BBE               	clrf	(sprintf@width+1)& (0+255),b
 14577  000560                     l10756:
 14578                           
 14579                           ; BSR set to: 0
 14580                           ;doprnt.c: 1353: }
 14581                           ;doprnt.c: 1357: if((flag & (
 14582                           ;doprnt.c: 1359: 0x04|
 14583                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 14584  000560  0EC4               	movlw	196
 14585  000562  6E2E               	movwf	??_sprintf& (0+255),c
 14586  000564  0E08               	movlw	8
 14587  000566  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 14588  000568  C0C0  F030         	movff	sprintf@flag,??_sprintf+2
 14589  00056C  C0C1  F031         	movff	sprintf@flag+1,??_sprintf+3
 14590  000570  502E               	movf	??_sprintf,w,c
 14591  000572  1630               	andwf	??_sprintf+2,f,c
 14592  000574  502F               	movf	??_sprintf+1,w,c
 14593  000576  1631               	andwf	??_sprintf+3,f,c
 14594  000578  0E40               	movlw	64
 14595  00057A  1830               	xorwf	??_sprintf+2,w,c
 14596  00057C  E10A               	bnz	l10762
 14597  00057E  0E08               	movlw	8
 14598  000580  1831               	xorwf	??_sprintf+3,w,c
 14599  000582  E107               	bnz	l10762
 14600                           
 14601                           ; BSR set to: 0
 14602                           ;doprnt.c: 1362: if(width)
 14603  000584  51BD               	movf	sprintf@width& (0+255),w,b
 14604  000586  11BE               	iorwf	(sprintf@width+1)& (0+255),w,b
 14605  000588  E024               	bz	l10768
 14606                           
 14607                           ; BSR set to: 0
 14608                           ;doprnt.c: 1363: width--;
 14609  00058A  07BD               	decf	sprintf@width& (0+255),f,b
 14610  00058C  A0D8               	btfss	status,0,c
 14611  00058E  07BE               	decf	(sprintf@width+1)& (0+255),f,b
 14612  000590  D020               	goto	l10768
 14613  000592                     l10762:
 14614                           
 14615                           ; BSR set to: 0
 14616                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 14617  000592  0EC0               	movlw	192
 14618  000594  6E2E               	movwf	??_sprintf& (0+255),c
 14619  000596  0E08               	movlw	8
 14620  000598  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 14621  00059A  C0C0  F030         	movff	sprintf@flag,??_sprintf+2
 14622  00059E  C0C1  F031         	movff	sprintf@flag+1,??_sprintf+3
 14623  0005A2  502E               	movf	??_sprintf,w,c
 14624  0005A4  1630               	andwf	??_sprintf+2,f,c
 14625  0005A6  502F               	movf	??_sprintf+1,w,c
 14626  0005A8  1631               	andwf	??_sprintf+3,f,c
 14627  0005AA  0E80               	movlw	128
 14628  0005AC  1830               	xorwf	??_sprintf+2,w,c
 14629  0005AE  E111               	bnz	l10768
 14630  0005B0  0E08               	movlw	8
 14631  0005B2  1831               	xorwf	??_sprintf+3,w,c
 14632  0005B4  E10E               	bnz	l10768
 14633                           
 14634                           ; BSR set to: 0
 14635                           ;doprnt.c: 1372: if(width > 2)
 14636  0005B6  BFBE               	btfsc	(sprintf@width+1)& (0+255),7,b
 14637  0005B8  D00A               	goto	l1473
 14638  0005BA  51BE               	movf	(sprintf@width+1)& (0+255),w,b
 14639  0005BC  E103               	bnz	u10320
 14640  0005BE  0E03               	movlw	3
 14641  0005C0  5DBD               	subwf	sprintf@width& (0+255),w,b
 14642  0005C2  E305               	bnc	l1473
 14643  0005C4                     u10320:
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;doprnt.c: 1373: width -= 2;
 14647  0005C4  0EFE               	movlw	254
 14648  0005C6  27BD               	addwf	sprintf@width& (0+255),f,b
 14649  0005C8  0EFF               	movlw	255
 14650  0005CA  23BE               	addwfc	(sprintf@width+1)& (0+255),f,b
 14651  0005CC  D002               	goto	l10768
 14652  0005CE                     l1473:
 14653                           
 14654                           ; BSR set to: 0
 14655                           ;doprnt.c: 1374: else
 14656                           ;doprnt.c: 1375: width = 0;
 14657  0005CE  6BBD               	clrf	sprintf@width& (0+255),b
 14658  0005D0  6BBE               	clrf	(sprintf@width+1)& (0+255),b
 14659  0005D2                     l10768:
 14660                           
 14661                           ; BSR set to: 0
 14662                           ;doprnt.c: 1376: }
 14663                           ;doprnt.c: 1381: if(width > c)
 14664  0005D2  0E80               	movlw	128
 14665  0005D4  BFBF               	btfsc	sprintf@c& (0+255),7,b
 14666  0005D6  0E7F               	movlw	127
 14667  0005D8  6E2E               	movwf	??_sprintf& (0+255),c
 14668  0005DA  51BD               	movf	sprintf@width& (0+255),w,b
 14669  0005DC  5DBF               	subwf	sprintf@c& (0+255),w,b
 14670  0005DE  51BE               	movf	(sprintf@width+1)& (0+255),w,b
 14671  0005E0  0A80               	xorlw	128
 14672  0005E2  582E               	subwfb	??_sprintf& (0+255),w,c
 14673  0005E4  E207               	bc	l1475
 14674                           
 14675                           ; BSR set to: 0
 14676                           ;doprnt.c: 1382: width -= c;
 14677  0005E6  51BF               	movf	sprintf@c& (0+255),w,b
 14678  0005E8  5FBD               	subwf	sprintf@width& (0+255),f,b
 14679  0005EA  0E00               	movlw	0
 14680  0005EC  BFBF               	btfsc	sprintf@c& (0+255),7,b
 14681  0005EE  0EFF               	movlw	255
 14682  0005F0  5BBE               	subwfb	(sprintf@width+1)& (0+255),f,b
 14683  0005F2  D002               	goto	l1476
 14684  0005F4                     l1475:
 14685                           
 14686                           ; BSR set to: 0
 14687                           ;doprnt.c: 1383: else
 14688                           ;doprnt.c: 1384: width = 0;
 14689  0005F4  6BBD               	clrf	sprintf@width& (0+255),b
 14690  0005F6  6BBE               	clrf	(sprintf@width+1)& (0+255),b
 14691  0005F8                     l1476:
 14692                           
 14693                           ; BSR set to: 0
 14694                           ;doprnt.c: 1387: if(flag & 0x04) {
 14695  0005F8  A5C0               	btfss	sprintf@flag& (0+255),2,b
 14696  0005FA  D04F               	goto	l10806
 14697                           
 14698                           ; BSR set to: 0
 14699                           ;doprnt.c: 1392: if(flag & 0x03)
 14700  0005FC  C0C0  F02E         	movff	sprintf@flag,??_sprintf
 14701  000600  0E03               	movlw	3
 14702  000602  162E               	andwf	??_sprintf,f,c
 14703  000604  E009               	bz	l1478
 14704                           
 14705                           ; BSR set to: 0
 14706                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14707  000606  C022  FFD9         	movff	sprintf@sp,fsr2l
 14708  00060A  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14709  00060E  0E2D               	movlw	45
 14710  000610  6EDF               	movwf	indf2,c
 14711  000612                     l10776:
 14712                           
 14713                           ; BSR set to: 0
 14714  000612  4A22               	infsnz	sprintf@sp,f,c
 14715  000614  2A23               	incf	sprintf@sp+1,f,c
 14716  000616  D031               	goto	l10798
 14717  000618                     l1478:
 14718                           
 14719                           ; BSR set to: 0
 14720                           ;doprnt.c: 1396: else
 14721                           ;doprnt.c: 1399: if(flag & 0x01)
 14722  000618  A1C0               	btfss	sprintf@flag& (0+255),0,b
 14723  00061A  D006               	goto	l10782
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 14727  00061C  C022  FFD9         	movff	sprintf@sp,fsr2l
 14728  000620  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14729  000624  0E20               	movlw	32
 14730  000626  D7F4               	goto	L16
 14731  000628                     l10782:
 14732                           
 14733                           ; BSR set to: 0
 14734                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 14735  000628  0EC0               	movlw	192
 14736  00062A  6E2E               	movwf	??_sprintf& (0+255),c
 14737  00062C  0E08               	movlw	8
 14738  00062E  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 14739  000630  C0C0  F030         	movff	sprintf@flag,??_sprintf+2
 14740  000634  C0C1  F031         	movff	sprintf@flag+1,??_sprintf+3
 14741  000638  502E               	movf	??_sprintf,w,c
 14742  00063A  1630               	andwf	??_sprintf+2,f,c
 14743  00063C  502F               	movf	??_sprintf+1,w,c
 14744  00063E  1631               	andwf	??_sprintf+3,f,c
 14745  000640  0E80               	movlw	128
 14746  000642  1830               	xorwf	??_sprintf+2,w,c
 14747  000644  E11A               	bnz	l10798
 14748  000646  0E08               	movlw	8
 14749  000648  1831               	xorwf	??_sprintf+3,w,c
 14750  00064A  E117               	bnz	l10798
 14751                           
 14752                           ; BSR set to: 0
 14753                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 14754  00064C  C022  FFD9         	movff	sprintf@sp,fsr2l
 14755  000650  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14756  000654  0E30               	movlw	48
 14757  000656  6EDF               	movwf	indf2,c
 14758                           
 14759                           ; BSR set to: 0
 14760  000658  4A22               	infsnz	sprintf@sp,f,c
 14761  00065A  2A23               	incf	sprintf@sp+1,f,c
 14762                           
 14763                           ; BSR set to: 0
 14764                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 14765  00065C  BBC0               	btfsc	sprintf@flag& (0+255),5,b
 14766  00065E  D003               	goto	l10792
 14767                           
 14768                           ; BSR set to: 0
 14769  000660  6BB1               	clrf	(_sprintf$3947+1)& (0+255),b
 14770  000662  0E78               	movlw	120
 14771  000664  D002               	goto	L17
 14772  000666                     l10792:
 14773                           
 14774                           ; BSR set to: 0
 14775  000666  6BB1               	clrf	(_sprintf$3947+1)& (0+255),b
 14776  000668  0E58               	movlw	88
 14777  00066A                     L17:
 14778  00066A  6FB0               	movwf	_sprintf$3947& (0+255),b
 14779                           
 14780                           ; BSR set to: 0
 14781  00066C  C022  FFD9         	movff	sprintf@sp,fsr2l
 14782  000670  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14783  000674  C0B0  FFDF         	movff	_sprintf$3947,indf2
 14784  000678  D7CC               	goto	l10776
 14785  00067A                     l10798:
 14786                           
 14787                           ; BSR set to: 0
 14788                           ;doprnt.c: 1412: }
 14789                           ;doprnt.c: 1415: if(width)
 14790  00067A  51BD               	movf	sprintf@width& (0+255),w,b
 14791  00067C  11BE               	iorwf	(sprintf@width+1)& (0+255),w,b
 14792  00067E  E101 D0F2          	bz	l10870
 14793                           
 14794                           ; BSR set to: 0
 14795                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14796  000682  C022  FFD9         	movff	sprintf@sp,fsr2l
 14797  000686  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14798  00068A  0E30               	movlw	48
 14799  00068C  6EDF               	movwf	indf2,c
 14800                           
 14801                           ; BSR set to: 0
 14802  00068E  4A22               	infsnz	sprintf@sp,f,c
 14803  000690  2A23               	incf	sprintf@sp+1,f,c
 14804                           
 14805                           ; BSR set to: 0
 14806                           ;doprnt.c: 1418: while(--width);
 14807  000692  07BD               	decf	sprintf@width& (0+255),f,b
 14808  000694  A0D8               	btfss	status,0,c
 14809  000696  07BE               	decf	(sprintf@width+1)& (0+255),f,b
 14810  000698  D7F0               	goto	l10798
 14811  00069A                     l10806:
 14812                           
 14813                           ; BSR set to: 0
 14814                           ;doprnt.c: 1422: {
 14815                           ;doprnt.c: 1424: if(width
 14816                           ;doprnt.c: 1426: && !(flag & 0x08)
 14817                           ;doprnt.c: 1428: )
 14818  00069A  51BD               	movf	sprintf@width& (0+255),w,b
 14819  00069C  11BE               	iorwf	(sprintf@width+1)& (0+255),w,b
 14820  00069E  E010               	bz	l10816
 14821                           
 14822                           ; BSR set to: 0
 14823  0006A0  B7C0               	btfsc	sprintf@flag& (0+255),3,b
 14824  0006A2  D00E               	goto	l10816
 14825  0006A4                     l10810:
 14826                           
 14827                           ; BSR set to: 0
 14828                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14829  0006A4  C022  FFD9         	movff	sprintf@sp,fsr2l
 14830  0006A8  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14831  0006AC  0E20               	movlw	32
 14832  0006AE  6EDF               	movwf	indf2,c
 14833                           
 14834                           ; BSR set to: 0
 14835  0006B0  4A22               	infsnz	sprintf@sp,f,c
 14836  0006B2  2A23               	incf	sprintf@sp+1,f,c
 14837                           
 14838                           ; BSR set to: 0
 14839                           ;doprnt.c: 1431: while(--width);
 14840  0006B4  07BD               	decf	sprintf@width& (0+255),f,b
 14841  0006B6  A0D8               	btfss	status,0,c
 14842  0006B8  07BE               	decf	(sprintf@width+1)& (0+255),f,b
 14843  0006BA  51BD               	movf	sprintf@width& (0+255),w,b
 14844  0006BC  11BE               	iorwf	(sprintf@width+1)& (0+255),w,b
 14845  0006BE  E1F2               	bnz	l10810
 14846  0006C0                     l10816:
 14847                           
 14848                           ; BSR set to: 0
 14849                           ;doprnt.c: 1438: if(flag & 0x03)
 14850  0006C0  C0C0  F02E         	movff	sprintf@flag,??_sprintf
 14851  0006C4  0E03               	movlw	3
 14852  0006C6  162E               	andwf	??_sprintf,f,c
 14853  0006C8  E009               	bz	l1494
 14854                           
 14855                           ; BSR set to: 0
 14856                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14857  0006CA  C022  FFD9         	movff	sprintf@sp,fsr2l
 14858  0006CE  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14859  0006D2  0E2D               	movlw	45
 14860  0006D4  6EDF               	movwf	indf2,c
 14861                           
 14862                           ; BSR set to: 0
 14863  0006D6  4A22               	infsnz	sprintf@sp,f,c
 14864  0006D8  2A23               	incf	sprintf@sp+1,f,c
 14865  0006DA  D008               	goto	l10826
 14866  0006DC                     l1494:
 14867                           
 14868                           ; BSR set to: 0
 14869                           ;doprnt.c: 1443: else if(flag & 0x01)
 14870  0006DC  A1C0               	btfss	sprintf@flag& (0+255),0,b
 14871  0006DE  D006               	goto	l10826
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 14875  0006E0  C022  FFD9         	movff	sprintf@sp,fsr2l
 14876  0006E4  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14877  0006E8  0E20               	movlw	32
 14878  0006EA  D7F4               	goto	L18
 14879  0006EC                     l10826:
 14880                           
 14881                           ; BSR set to: 0
 14882                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 14883  0006EC  0EC0               	movlw	192
 14884  0006EE  6E2E               	movwf	??_sprintf& (0+255),c
 14885  0006F0  0E08               	movlw	8
 14886  0006F2  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 14887  0006F4  C0C0  F030         	movff	sprintf@flag,??_sprintf+2
 14888  0006F8  C0C1  F031         	movff	sprintf@flag+1,??_sprintf+3
 14889  0006FC  502E               	movf	??_sprintf,w,c
 14890  0006FE  1630               	andwf	??_sprintf+2,f,c
 14891  000700  502F               	movf	??_sprintf+1,w,c
 14892  000702  1631               	andwf	??_sprintf+3,f,c
 14893  000704  0E40               	movlw	64
 14894  000706  1830               	xorwf	??_sprintf+2,w,c
 14895  000708  E10C               	bnz	l10832
 14896  00070A  0E08               	movlw	8
 14897  00070C  1831               	xorwf	??_sprintf+3,w,c
 14898  00070E  E109               	bnz	l10832
 14899                           
 14900                           ; BSR set to: 0
 14901                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 14902  000710  C022  FFD9         	movff	sprintf@sp,fsr2l
 14903  000714  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14904  000718  0E30               	movlw	48
 14905  00071A  6EDF               	movwf	indf2,c
 14906  00071C                     l10830:
 14907                           
 14908                           ; BSR set to: 0
 14909  00071C  4A22               	infsnz	sprintf@sp,f,c
 14910  00071E  2A23               	incf	sprintf@sp+1,f,c
 14911  000720  D0A2               	goto	l10870
 14912  000722                     l10832:
 14913                           
 14914                           ; BSR set to: 0
 14915                           ;doprnt.c: 1450: else
 14916                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 14917  000722  0EC0               	movlw	192
 14918  000724  6E2E               	movwf	??_sprintf& (0+255),c
 14919  000726  0E08               	movlw	8
 14920  000728  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 14921  00072A  C0C0  F030         	movff	sprintf@flag,??_sprintf+2
 14922  00072E  C0C1  F031         	movff	sprintf@flag+1,??_sprintf+3
 14923  000732  502E               	movf	??_sprintf,w,c
 14924  000734  1630               	andwf	??_sprintf+2,f,c
 14925  000736  502F               	movf	??_sprintf+1,w,c
 14926  000738  1631               	andwf	??_sprintf+3,f,c
 14927  00073A  0E80               	movlw	128
 14928  00073C  1830               	xorwf	??_sprintf+2,w,c
 14929  00073E  E11B               	bnz	l1490
 14930  000740  0E08               	movlw	8
 14931  000742  1831               	xorwf	??_sprintf+3,w,c
 14932  000744  E001 D08F          	bnz	l10870
 14933                           
 14934                           ; BSR set to: 0
 14935                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 14936  000748  C022  FFD9         	movff	sprintf@sp,fsr2l
 14937  00074C  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14938  000750  0E30               	movlw	48
 14939  000752  6EDF               	movwf	indf2,c
 14940                           
 14941                           ; BSR set to: 0
 14942  000754  4A22               	infsnz	sprintf@sp,f,c
 14943  000756  2A23               	incf	sprintf@sp+1,f,c
 14944                           
 14945                           ; BSR set to: 0
 14946                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 14947  000758  BBC0               	btfsc	sprintf@flag& (0+255),5,b
 14948  00075A  D003               	goto	l10842
 14949                           
 14950                           ; BSR set to: 0
 14951  00075C  6BB3               	clrf	(_sprintf$3948+1)& (0+255),b
 14952  00075E  0E78               	movlw	120
 14953  000760  D002               	goto	L19
 14954  000762                     l10842:
 14955                           
 14956                           ; BSR set to: 0
 14957  000762  6BB3               	clrf	(_sprintf$3948+1)& (0+255),b
 14958  000764  0E58               	movlw	88
 14959  000766                     L19:
 14960  000766  6FB2               	movwf	_sprintf$3948& (0+255),b
 14961                           
 14962                           ; BSR set to: 0
 14963  000768  C022  FFD9         	movff	sprintf@sp,fsr2l
 14964  00076C  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 14965  000770  C0B2  FFDF         	movff	_sprintf$3948,indf2
 14966  000774  D7D3               	goto	l10830
 14967  000776                     l1490:
 14968                           
 14969                           ; BSR set to: 0
 14970                           ;doprnt.c: 1466: }
 14971                           ;doprnt.c: 1469: }
 14972                           ;doprnt.c: 1474: while(prec--) {
 14973  000776  D077               	goto	l10870
 14974  000778                     l10848:
 14975                           
 14976                           ; BSR set to: 0
 14977                           ;doprnt.c: 1486: case 0xC0:
 14978                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14979  000778  51BC               	movf	sprintf@prec& (0+255),w,b
 14980  00077A  0D02               	mullw	2
 14981  00077C  0E6F               	movlw	low _dpowers
 14982  00077E  24F3               	addwf	prodl,w,c
 14983  000780  6EF6               	movwf	tblptrl,c
 14984  000782  0EFD               	movlw	high _dpowers
 14985  000784  20F4               	addwfc	prodh,w,c
 14986  000786  6EF7               	movwf	tblptrh,c
 14987  000788                     	if	0	;There are less than 3 active tblptr bytes
 14988  000788                     	endif
 14989  000788  0009               	tblrd		*+
 14990  00078A  CFF5 F018          	movff	tablat,___lwdiv@divisor
 14991  00078E  000A               	tblrd		*-
 14992  000790  CFF5 F019          	movff	tablat,___lwdiv@divisor+1
 14993  000794  C0BA  F016         	movff	sprintf@val,___lwdiv@dividend
 14994  000798  C0BB  F017         	movff	sprintf@val+1,___lwdiv@dividend+1
 14995  00079C  EC3F  F017         	call	___lwdiv	;wreg free
 14996  0007A0  C016  F01D         	movff	?___lwdiv,___lwmod@dividend
 14997  0007A4  C017  F01E         	movff	?___lwdiv+1,___lwmod@dividend+1
 14998  0007A8  6A20               	clrf	___lwmod@divisor+1,c
 14999  0007AA  0E0A               	movlw	10
 15000  0007AC  6E1F               	movwf	___lwmod@divisor,c
 15001  0007AE  ECE1  F017         	call	___lwmod	;wreg free
 15002  0007B2  501D               	movf	?___lwmod,w,c
 15003  0007B4  D045               	goto	L20
 15004  0007B6                     l10850:
 15005                           
 15006                           ; BSR set to: 0
 15007                           ;doprnt.c: 1499: {
 15008                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 15009  0007B6  C0BA  F016         	movff	sprintf@val,___lwdiv@dividend
 15010  0007BA  C0BB  F017         	movff	sprintf@val+1,___lwdiv@dividend+1
 15011  0007BE  51BC               	movf	sprintf@prec& (0+255),w,b
 15012  0007C0  0D02               	mullw	2
 15013  0007C2  0E79               	movlw	low _hexpowers
 15014  0007C4  24F3               	addwf	prodl,w,c
 15015  0007C6  6EF6               	movwf	tblptrl,c
 15016  0007C8  0EFD               	movlw	high _hexpowers
 15017  0007CA  20F4               	addwfc	prodh,w,c
 15018  0007CC  6EF7               	movwf	tblptrh,c
 15019  0007CE                     	if	0	;There are less than 3 active tblptr bytes
 15020  0007CE                     	endif
 15021  0007CE  0009               	tblrd		*+
 15022  0007D0  CFF5 F018          	movff	tablat,___lwdiv@divisor
 15023  0007D4  000A               	tblrd		*-
 15024  0007D6  CFF5 F019          	movff	tablat,___lwdiv@divisor+1
 15025  0007DA  EC3F  F017         	call	___lwdiv	;wreg free
 15026  0007DE  5016               	movf	?___lwdiv,w,c
 15027  0007E0  0B0F               	andlw	15
 15028  0007E2  6FAF               	movwf	sprintf@idx& (0+255),b
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 15032  0007E4  BBC0               	btfsc	sprintf@flag& (0+255),5,b
 15033  0007E6  D004               	goto	l10856
 15034                           
 15035                           ; BSR set to: 0
 15036  0007E8  0E3E               	movlw	low STR_40
 15037  0007EA  6FB4               	movwf	_sprintf$3954& (0+255),b
 15038  0007EC  0EFF               	movlw	high STR_40
 15039  0007EE  D003               	goto	L21
 15040  0007F0                     l10856:
 15041                           
 15042                           ; BSR set to: 0
 15043  0007F0  0E2D               	movlw	low STR_39
 15044  0007F2  6FB4               	movwf	_sprintf$3954& (0+255),b
 15045  0007F4  0EFF               	movlw	high STR_39
 15046  0007F6                     L21:
 15047  0007F6  6FB5               	movwf	(_sprintf$3954+1)& (0+255),b
 15048                           
 15049                           ; BSR set to: 0
 15050  0007F8  51AF               	movf	sprintf@idx& (0+255),w,b
 15051  0007FA  25B4               	addwf	_sprintf$3954& (0+255),w,b
 15052  0007FC  6E2E               	movwf	??_sprintf& (0+255),c
 15053  0007FE  0E00               	movlw	0
 15054  000800  21B5               	addwfc	(_sprintf$3954+1)& (0+255),w,b
 15055  000802  6E2F               	movwf	(??_sprintf+1)& (0+255),c
 15056  000804  C02E  FFF6         	movff	??_sprintf,tblptrl
 15057  000808  C02F  FFF7         	movff	??_sprintf+1,tblptrh
 15058  00080C                     	if	0	;tblptru may be non-zero
 15059  00080C                     	endif
 15060  00080C                     	if	0	;tblptru may be non-zero
 15061  00080C                     	endif
 15062  00080C  0008               	tblrd		*
 15063  00080E  CFF5 F0BF          	movff	tablat,sprintf@c
 15064                           
 15065                           ;doprnt.c: 1508: }
 15066                           ;doprnt.c: 1510: break;
 15067  000812  D022               	goto	l10866
 15068  000814                     l10860:
 15069                           
 15070                           ; BSR set to: 0
 15071                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 15072  000814  C0BA  F016         	movff	sprintf@val,___lwdiv@dividend
 15073  000818  C0BB  F017         	movff	sprintf@val+1,___lwdiv@dividend+1
 15074  00081C  51BC               	movf	sprintf@prec& (0+255),w,b
 15075  00081E  0D02               	mullw	2
 15076  000820  0E63               	movlw	low _octpowers
 15077  000822  24F3               	addwf	prodl,w,c
 15078  000824  6EF6               	movwf	tblptrl,c
 15079  000826  0EFD               	movlw	high _octpowers
 15080  000828  20F4               	addwfc	prodh,w,c
 15081  00082A  6EF7               	movwf	tblptrh,c
 15082  00082C                     	if	0	;There are less than 3 active tblptr bytes
 15083  00082C                     	endif
 15084  00082C  0009               	tblrd		*+
 15085  00082E  CFF5 F018          	movff	tablat,___lwdiv@divisor
 15086  000832  000A               	tblrd		*-
 15087  000834  CFF5 F019          	movff	tablat,___lwdiv@divisor+1
 15088  000838  EC3F  F017         	call	___lwdiv	;wreg free
 15089  00083C  5016               	movf	?___lwdiv,w,c
 15090  00083E  0B07               	andlw	7
 15091  000840                     L20:
 15092  000840  0F30               	addlw	48
 15093  000842  6FBF               	movwf	sprintf@c& (0+255),b
 15094                           
 15095                           ;doprnt.c: 1520: break;
 15096  000844  D009               	goto	l10866
 15097  000846                     l10864:
 15098                           
 15099                           ; BSR set to: 0
 15100  000846  51C0               	movf	sprintf@flag& (0+255),w,b
 15101  000848  0BC0               	andlw	192
 15102                           
 15103                           ; Switch size 1, requested type "speed"
 15104                           ; Number of cases is 4, Range of values is 0 to 192
 15105                           ; switch strategies available:
 15106                           ; Name         Instructions Cycles
 15107                           ; simple_byte           13     7 (average)
 15108                           ;	Chosen strategy is simple_byte
 15109  00084A  E096               	bz	l10848
 15110  00084C  0A40               	xorlw	64	; case 64
 15111  00084E  E0E2               	bz	l10860
 15112  000850  0AC0               	xorlw	192	; case 128
 15113  000852  E0B1               	bz	l10850
 15114  000854  0A40               	xorlw	64	; case 192
 15115  000856  E090               	bz	l10848
 15116  000858                     l10866:
 15117                           
 15118                           ; BSR set to: 0
 15119                           ;doprnt.c: 1524: ((*sp++ = (c)));
 15120  000858  C022  FFD9         	movff	sprintf@sp,fsr2l
 15121  00085C  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 15122  000860  C0BF  FFDF         	movff	sprintf@c,indf2
 15123  000864  D75B               	goto	l10830
 15124  000866                     l10870:
 15125                           
 15126                           ; BSR set to: 0
 15127  000866  07BC               	decf	sprintf@prec& (0+255),f,b
 15128  000868  29BC               	incf	sprintf@prec& (0+255),w,b
 15129  00086A  E1ED               	bnz	l10864
 15130                           
 15131                           ; BSR set to: 0
 15132                           ;doprnt.c: 1525: }
 15133                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 15134  00086C  B7C0               	btfsc	sprintf@flag& (0+255),3,b
 15135                           
 15136                           ; BSR set to: 0
 15137  00086E  BFBE               	btfsc	(sprintf@width+1)& (0+255),7,b
 15138  000870  D012               	goto	l10880
 15139  000872  51BE               	movf	(sprintf@width+1)& (0+255),w,b
 15140  000874  E102               	bnz	u10520
 15141  000876  05BD               	decf	sprintf@width& (0+255),w,b
 15142  000878  E30E               	bnc	l10880
 15143  00087A                     u10520:
 15144  00087A                     l10874:
 15145                           
 15146                           ; BSR set to: 0
 15147                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 15148  00087A  C022  FFD9         	movff	sprintf@sp,fsr2l
 15149  00087E  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 15150  000882  0E20               	movlw	32
 15151  000884  6EDF               	movwf	indf2,c
 15152                           
 15153                           ; BSR set to: 0
 15154  000886  4A22               	infsnz	sprintf@sp,f,c
 15155  000888  2A23               	incf	sprintf@sp+1,f,c
 15156                           
 15157                           ; BSR set to: 0
 15158                           ;doprnt.c: 1531: while(--width);
 15159  00088A  07BD               	decf	sprintf@width& (0+255),f,b
 15160  00088C  A0D8               	btfss	status,0,c
 15161  00088E  07BE               	decf	(sprintf@width+1)& (0+255),f,b
 15162  000890  51BD               	movf	sprintf@width& (0+255),w,b
 15163  000892  11BE               	iorwf	(sprintf@width+1)& (0+255),w,b
 15164  000894  E1F2               	bnz	l10874
 15165  000896                     l10880:
 15166                           
 15167                           ; BSR set to: 0
 15168  000896  C024  FFF6         	movff	sprintf@f,tblptrl
 15169  00089A  C025  FFF7         	movff	sprintf@f+1,tblptrh
 15170  00089E  4A24               	infsnz	sprintf@f,f,c
 15171  0008A0  2A25               	incf	sprintf@f+1,f,c
 15172  0008A2                     	if	0	;tblptru may be non-zero
 15173  0008A2                     	endif
 15174  0008A2                     	if	0	;tblptru may be non-zero
 15175  0008A2                     	endif
 15176  0008A2  0008               	tblrd		*
 15177  0008A4  CFF5 F0BF          	movff	tablat,sprintf@c
 15178  0008A8  51BF               	movf	sprintf@c& (0+255),w,b
 15179  0008AA  E001 D475          	bnz	l10558
 15180  0008AE                     l10882:
 15181                           
 15182                           ; BSR set to: 0
 15183                           ;doprnt.c: 1538: *sp = 0;
 15184  0008AE  C022  FFD9         	movff	sprintf@sp,fsr2l
 15185  0008B2  C023  FFDA         	movff	sprintf@sp+1,fsr2h
 15186  0008B6  6ADF               	clrf	indf2,c
 15187                           
 15188                           ; BSR set to: 0
 15189  0008B8  0C00               	retlw	0	;funcret
 15190  0008BA                     __end_of_sprintf:
 15191                           	opt stack 0
 15192                           tblptru	equ	0xFF8
 15193                           tblptrh	equ	0xFF7
 15194                           tblptrl	equ	0xFF6
 15195                           tablat	equ	0xFF5
 15196                           prodh	equ	0xFF4
 15197                           prodl	equ	0xFF3
 15198                           intcon	equ	0xFF2
 15199                           intcon2	equ	0xFF1
 15200                           postinc0	equ	0xFEE
 15201                           plusw0	equ	0xFEB
 15202                           wreg	equ	0xFE8
 15203                           indf1	equ	0xFE7
 15204                           postinc1	equ	0xFE6
 15205                           postdec1	equ	0xFE5
 15206                           fsr1h	equ	0xFE2
 15207                           fsr1l	equ	0xFE1
 15208                           indf2	equ	0xFDF
 15209                           postinc2	equ	0xFDE
 15210                           postdec2	equ	0xFDD
 15211                           plusw2	equ	0xFDB
 15212                           fsr2h	equ	0xFDA
 15213                           fsr2l	equ	0xFD9
 15214                           status	equ	0xFD8
 15215                           
 15216 ;; *************** function _isdigit *****************
 15217 ;; Defined at:
 15218 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 15219 ;; Parameters:    Size  Location     Type
 15220 ;;  c               1    wreg     unsigned char 
 15221 ;; Auto vars:     Size  Location     Type
 15222 ;;  c               1   23[COMRAM] unsigned char 
 15223 ;; Return value:  Size  Location     Type
 15224 ;;		None               void
 15225 ;; Registers used:
 15226 ;;		wreg, status,2, status,0
 15227 ;; Tracked objects:
 15228 ;;		On entry : F/0
 15229 ;;		On exit  : 0/0
 15230 ;;		Unchanged: 0/0
 15231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15235 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15236 ;;Total ram usage:        3 bytes
 15237 ;; Hardware stack levels used:    1
 15238 ;; Hardware stack levels required when called:    3
 15239 ;; This function calls:
 15240 ;;		Nothing
 15241 ;; This function is called by:
 15242 ;;		_sprintf
 15243 ;; This function uses a non-reentrant model
 15244 ;;
 15245                           
 15246                           	psect	text63
 15247  003340                     __ptext63:
 15248                           	opt stack 0
 15249  003340                     _isdigit:
 15250                           	opt stack 24
 15251                           
 15252                           ; BSR set to: 0
 15253                           ;incstack = 0
 15254                           ;isdigit@c stored from wreg
 15255  003340  6E18               	movwf	isdigit@c,c
 15256  003342  6A17               	clrf	_isdigit$4178,c
 15257  003344  0E3A               	movlw	58
 15258  003346  6018               	cpfslt	isdigit@c,c
 15259  003348  D005               	goto	l10474
 15260  00334A  0E2F               	movlw	47
 15261  00334C  6418               	cpfsgt	isdigit@c,c
 15262  00334E  D002               	goto	l10474
 15263  003350  0E01               	movlw	1
 15264  003352  6E17               	movwf	_isdigit$4178,c
 15265  003354                     l10474:
 15266  003354  C017  F016         	movff	_isdigit$4178,??_isdigit
 15267  003358  3016               	rrcf	??_isdigit,w,c
 15268  00335A  0012               	return		;funcret
 15269  00335C                     __end_of_isdigit:
 15270                           	opt stack 0
 15271                           tblptru	equ	0xFF8
 15272                           tblptrh	equ	0xFF7
 15273                           tblptrl	equ	0xFF6
 15274                           tablat	equ	0xFF5
 15275                           prodh	equ	0xFF4
 15276                           prodl	equ	0xFF3
 15277                           intcon	equ	0xFF2
 15278                           intcon2	equ	0xFF1
 15279                           postinc0	equ	0xFEE
 15280                           plusw0	equ	0xFEB
 15281                           wreg	equ	0xFE8
 15282                           indf1	equ	0xFE7
 15283                           postinc1	equ	0xFE6
 15284                           postdec1	equ	0xFE5
 15285                           fsr1h	equ	0xFE2
 15286                           fsr1l	equ	0xFE1
 15287                           indf2	equ	0xFDF
 15288                           postinc2	equ	0xFDE
 15289                           postdec2	equ	0xFDD
 15290                           plusw2	equ	0xFDB
 15291                           fsr2h	equ	0xFDA
 15292                           fsr2l	equ	0xFD9
 15293                           status	equ	0xFD8
 15294                           
 15295 ;; *************** function ___wmul *****************
 15296 ;; Defined at:
 15297 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 15298 ;; Parameters:    Size  Location     Type
 15299 ;;  multiplier      2   21[COMRAM] unsigned int 
 15300 ;;  multiplicand    2   23[COMRAM] unsigned int 
 15301 ;; Auto vars:     Size  Location     Type
 15302 ;;  product         2   25[COMRAM] unsigned int 
 15303 ;; Return value:  Size  Location     Type
 15304 ;;                  2   21[COMRAM] unsigned int 
 15305 ;; Registers used:
 15306 ;;		wreg, status,2, status,0, prodl, prodh
 15307 ;; Tracked objects:
 15308 ;;		On entry : 0/0
 15309 ;;		On exit  : 0/0
 15310 ;;		Unchanged: 0/0
 15311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15316 ;;Total ram usage:        6 bytes
 15317 ;; Hardware stack levels used:    1
 15318 ;; Hardware stack levels required when called:    3
 15319 ;; This function calls:
 15320 ;;		Nothing
 15321 ;; This function is called by:
 15322 ;;		_sprintf
 15323 ;; This function uses a non-reentrant model
 15324 ;;
 15325                           
 15326                           	psect	text64
 15327  00327A                     __ptext64:
 15328                           	opt stack 0
 15329  00327A                     ___wmul:
 15330                           	opt stack 24
 15331                           
 15332                           ;incstack = 0
 15333  00327A  5016               	movf	___wmul@multiplier,w,c
 15334  00327C  0218               	mulwf	___wmul@multiplicand,c
 15335  00327E  CFF3 F01A          	movff	prodl,___wmul@product
 15336  003282  CFF4 F01B          	movff	prodh,___wmul@product+1
 15337  003286  5016               	movf	___wmul@multiplier,w,c
 15338  003288  0219               	mulwf	___wmul@multiplicand+1,c
 15339  00328A  50F3               	movf	prodl,w,c
 15340  00328C  261B               	addwf	___wmul@product+1,f,c
 15341  00328E  5017               	movf	___wmul@multiplier+1,w,c
 15342  003290  0218               	mulwf	___wmul@multiplicand,c
 15343  003292  50F3               	movf	prodl,w,c
 15344  003294  261B               	addwf	___wmul@product+1,f,c
 15345  003296  C01A  F016         	movff	___wmul@product,?___wmul
 15346  00329A  C01B  F017         	movff	___wmul@product+1,?___wmul+1
 15347  00329E  0012               	return		;funcret
 15348  0032A0                     __end_of___wmul:
 15349                           	opt stack 0
 15350                           tblptru	equ	0xFF8
 15351                           tblptrh	equ	0xFF7
 15352                           tblptrl	equ	0xFF6
 15353                           tablat	equ	0xFF5
 15354                           prodh	equ	0xFF4
 15355                           prodl	equ	0xFF3
 15356                           intcon	equ	0xFF2
 15357                           intcon2	equ	0xFF1
 15358                           postinc0	equ	0xFEE
 15359                           plusw0	equ	0xFEB
 15360                           wreg	equ	0xFE8
 15361                           indf1	equ	0xFE7
 15362                           postinc1	equ	0xFE6
 15363                           postdec1	equ	0xFE5
 15364                           fsr1h	equ	0xFE2
 15365                           fsr1l	equ	0xFE1
 15366                           indf2	equ	0xFDF
 15367                           postinc2	equ	0xFDE
 15368                           postdec2	equ	0xFDD
 15369                           plusw2	equ	0xFDB
 15370                           fsr2h	equ	0xFDA
 15371                           fsr2l	equ	0xFD9
 15372                           status	equ	0xFD8
 15373                           
 15374 ;; *************** function ___lwmod *****************
 15375 ;; Defined at:
 15376 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 15377 ;; Parameters:    Size  Location     Type
 15378 ;;  dividend        2   28[COMRAM] unsigned int 
 15379 ;;  divisor         2   30[COMRAM] unsigned int 
 15380 ;; Auto vars:     Size  Location     Type
 15381 ;;  counter         1   32[COMRAM] unsigned char 
 15382 ;; Return value:  Size  Location     Type
 15383 ;;                  2   28[COMRAM] unsigned int 
 15384 ;; Registers used:
 15385 ;;		wreg, status,2, status,0
 15386 ;; Tracked objects:
 15387 ;;		On entry : F/0
 15388 ;;		On exit  : F/0
 15389 ;;		Unchanged: F/0
 15390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15392 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15394 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15395 ;;Total ram usage:        5 bytes
 15396 ;; Hardware stack levels used:    1
 15397 ;; Hardware stack levels required when called:    3
 15398 ;; This function calls:
 15399 ;;		Nothing
 15400 ;; This function is called by:
 15401 ;;		_sprintf
 15402 ;; This function uses a non-reentrant model
 15403 ;;
 15404                           
 15405                           	psect	text65
 15406  002FC2                     __ptext65:
 15407                           	opt stack 0
 15408  002FC2                     ___lwmod:
 15409                           	opt stack 24
 15410                           
 15411                           ; BSR set to: 0
 15412                           
 15413                           ;incstack = 0
 15414  002FC2  501F               	movf	___lwmod@divisor,w,c
 15415  002FC4  1020               	iorwf	___lwmod@divisor+1,w,c
 15416  002FC6  E017               	bz	l1933
 15417                           
 15418                           ; BSR set to: 0
 15419  002FC8  0E01               	movlw	1
 15420  002FCA  6E21               	movwf	___lwmod@counter,c
 15421  002FCC  D004               	goto	l10512
 15422  002FCE                     l10510:
 15423                           
 15424                           ; BSR set to: 0
 15425  002FCE  90D8               	bcf	status,0,c
 15426  002FD0  361F               	rlcf	___lwmod@divisor,f,c
 15427  002FD2  3620               	rlcf	___lwmod@divisor+1,f,c
 15428  002FD4  2A21               	incf	___lwmod@counter,f,c
 15429  002FD6                     l10512:
 15430                           
 15431                           ; BSR set to: 0
 15432  002FD6  AE20               	btfss	___lwmod@divisor+1,7,c
 15433  002FD8  D7FA               	goto	l10510
 15434  002FDA                     l10514:
 15435                           
 15436                           ; BSR set to: 0
 15437  002FDA  501F               	movf	___lwmod@divisor,w,c
 15438  002FDC  5C1D               	subwf	___lwmod@dividend,w,c
 15439  002FDE  5020               	movf	___lwmod@divisor+1,w,c
 15440  002FE0  581E               	subwfb	___lwmod@dividend+1,w,c
 15441  002FE2  E304               	bnc	l10518
 15442                           
 15443                           ; BSR set to: 0
 15444  002FE4  501F               	movf	___lwmod@divisor,w,c
 15445  002FE6  5E1D               	subwf	___lwmod@dividend,f,c
 15446  002FE8  5020               	movf	___lwmod@divisor+1,w,c
 15447  002FEA  5A1E               	subwfb	___lwmod@dividend+1,f,c
 15448  002FEC                     l10518:
 15449                           
 15450                           ; BSR set to: 0
 15451  002FEC  90D8               	bcf	status,0,c
 15452  002FEE  3220               	rrcf	___lwmod@divisor+1,f,c
 15453  002FF0  321F               	rrcf	___lwmod@divisor,f,c
 15454                           
 15455                           ; BSR set to: 0
 15456  002FF2  2E21               	decfsz	___lwmod@counter,f,c
 15457  002FF4  D7F2               	goto	l10514
 15458  002FF6                     l1933:
 15459                           
 15460                           ; BSR set to: 0
 15461  002FF6  C01D  F01D         	movff	___lwmod@dividend,?___lwmod
 15462  002FFA  C01E  F01E         	movff	___lwmod@dividend+1,?___lwmod+1
 15463                           
 15464                           ; BSR set to: 0
 15465  002FFE  0012               	return		;funcret
 15466  003000                     __end_of___lwmod:
 15467                           	opt stack 0
 15468                           tblptru	equ	0xFF8
 15469                           tblptrh	equ	0xFF7
 15470                           tblptrl	equ	0xFF6
 15471                           tablat	equ	0xFF5
 15472                           prodh	equ	0xFF4
 15473                           prodl	equ	0xFF3
 15474                           intcon	equ	0xFF2
 15475                           intcon2	equ	0xFF1
 15476                           postinc0	equ	0xFEE
 15477                           plusw0	equ	0xFEB
 15478                           wreg	equ	0xFE8
 15479                           indf1	equ	0xFE7
 15480                           postinc1	equ	0xFE6
 15481                           postdec1	equ	0xFE5
 15482                           fsr1h	equ	0xFE2
 15483                           fsr1l	equ	0xFE1
 15484                           indf2	equ	0xFDF
 15485                           postinc2	equ	0xFDE
 15486                           postdec2	equ	0xFDD
 15487                           plusw2	equ	0xFDB
 15488                           fsr2h	equ	0xFDA
 15489                           fsr2l	equ	0xFD9
 15490                           status	equ	0xFD8
 15491                           
 15492 ;; *************** function ___lwdiv *****************
 15493 ;; Defined at:
 15494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 15495 ;; Parameters:    Size  Location     Type
 15496 ;;  dividend        2   21[COMRAM] unsigned int 
 15497 ;;  divisor         2   23[COMRAM] unsigned int 
 15498 ;; Auto vars:     Size  Location     Type
 15499 ;;  quotient        2   26[COMRAM] unsigned int 
 15500 ;;  counter         1   25[COMRAM] unsigned char 
 15501 ;; Return value:  Size  Location     Type
 15502 ;;                  2   21[COMRAM] unsigned int 
 15503 ;; Registers used:
 15504 ;;		wreg, status,2, status,0
 15505 ;; Tracked objects:
 15506 ;;		On entry : F/0
 15507 ;;		On exit  : F/0
 15508 ;;		Unchanged: F/0
 15509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15510 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15511 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15513 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15514 ;;Total ram usage:        7 bytes
 15515 ;; Hardware stack levels used:    1
 15516 ;; Hardware stack levels required when called:    3
 15517 ;; This function calls:
 15518 ;;		Nothing
 15519 ;; This function is called by:
 15520 ;;		_sprintf
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           	psect	text66
 15525  002E7E                     __ptext66:
 15526                           	opt stack 0
 15527  002E7E                     ___lwdiv:
 15528                           	opt stack 24
 15529                           
 15530                           ; BSR set to: 0
 15531                           
 15532                           ; BSR set to: 0
 15533                           ;incstack = 0
 15534  002E7E  6A1B               	clrf	___lwdiv@quotient,c
 15535  002E80  6A1C               	clrf	___lwdiv@quotient+1,c
 15536                           
 15537                           ; BSR set to: 0
 15538  002E82  5018               	movf	___lwdiv@divisor,w,c
 15539  002E84  1019               	iorwf	___lwdiv@divisor+1,w,c
 15540  002E86  E01B               	bz	l1923
 15541                           
 15542                           ; BSR set to: 0
 15543  002E88  0E01               	movlw	1
 15544  002E8A  6E1A               	movwf	___lwdiv@counter,c
 15545  002E8C  D004               	goto	l10492
 15546  002E8E                     l10490:
 15547                           
 15548                           ; BSR set to: 0
 15549  002E8E  90D8               	bcf	status,0,c
 15550  002E90  3618               	rlcf	___lwdiv@divisor,f,c
 15551  002E92  3619               	rlcf	___lwdiv@divisor+1,f,c
 15552  002E94  2A1A               	incf	___lwdiv@counter,f,c
 15553  002E96                     l10492:
 15554                           
 15555                           ; BSR set to: 0
 15556  002E96  AE19               	btfss	___lwdiv@divisor+1,7,c
 15557  002E98  D7FA               	goto	l10490
 15558  002E9A                     l10494:
 15559                           
 15560                           ; BSR set to: 0
 15561  002E9A  90D8               	bcf	status,0,c
 15562  002E9C  361B               	rlcf	___lwdiv@quotient,f,c
 15563  002E9E  361C               	rlcf	___lwdiv@quotient+1,f,c
 15564                           
 15565                           ; BSR set to: 0
 15566  002EA0  5018               	movf	___lwdiv@divisor,w,c
 15567  002EA2  5C16               	subwf	___lwdiv@dividend,w,c
 15568  002EA4  5019               	movf	___lwdiv@divisor+1,w,c
 15569  002EA6  5817               	subwfb	___lwdiv@dividend+1,w,c
 15570  002EA8  E305               	bnc	l10502
 15571                           
 15572                           ; BSR set to: 0
 15573  002EAA  5018               	movf	___lwdiv@divisor,w,c
 15574  002EAC  5E16               	subwf	___lwdiv@dividend,f,c
 15575  002EAE  5019               	movf	___lwdiv@divisor+1,w,c
 15576  002EB0  5A17               	subwfb	___lwdiv@dividend+1,f,c
 15577                           
 15578                           ; BSR set to: 0
 15579  002EB2  801B               	bsf	___lwdiv@quotient,0,c
 15580  002EB4                     l10502:
 15581                           
 15582                           ; BSR set to: 0
 15583  002EB4  90D8               	bcf	status,0,c
 15584  002EB6  3219               	rrcf	___lwdiv@divisor+1,f,c
 15585  002EB8  3218               	rrcf	___lwdiv@divisor,f,c
 15586                           
 15587                           ; BSR set to: 0
 15588  002EBA  2E1A               	decfsz	___lwdiv@counter,f,c
 15589  002EBC  D7EE               	goto	l10494
 15590  002EBE                     l1923:
 15591                           
 15592                           ; BSR set to: 0
 15593  002EBE  C01B  F016         	movff	___lwdiv@quotient,?___lwdiv
 15594  002EC2  C01C  F017         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15595                           
 15596                           ; BSR set to: 0
 15597  002EC6  0012               	return		;funcret
 15598  002EC8                     __end_of___lwdiv:
 15599                           	opt stack 0
 15600                           tblptru	equ	0xFF8
 15601                           tblptrh	equ	0xFF7
 15602                           tblptrl	equ	0xFF6
 15603                           tablat	equ	0xFF5
 15604                           prodh	equ	0xFF4
 15605                           prodl	equ	0xFF3
 15606                           intcon	equ	0xFF2
 15607                           intcon2	equ	0xFF1
 15608                           postinc0	equ	0xFEE
 15609                           plusw0	equ	0xFEB
 15610                           wreg	equ	0xFE8
 15611                           indf1	equ	0xFE7
 15612                           postinc1	equ	0xFE6
 15613                           postdec1	equ	0xFE5
 15614                           fsr1h	equ	0xFE2
 15615                           fsr1l	equ	0xFE1
 15616                           indf2	equ	0xFDF
 15617                           postinc2	equ	0xFDE
 15618                           postdec2	equ	0xFDD
 15619                           plusw2	equ	0xFDB
 15620                           fsr2h	equ	0xFDA
 15621                           fsr2l	equ	0xFD9
 15622                           status	equ	0xFD8
 15623                           
 15624 ;; *************** function _LCD_Update *****************
 15625 ;; Defined at:
 15626 ;;		line 132 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 15627 ;; Parameters:    Size  Location     Type
 15628 ;;		None
 15629 ;; Auto vars:     Size  Location     Type
 15630 ;;  i               1   23[COMRAM] unsigned char 
 15631 ;; Return value:  Size  Location     Type
 15632 ;;		None               void
 15633 ;; Registers used:
 15634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15635 ;; Tracked objects:
 15636 ;;		On entry : F/0
 15637 ;;		On exit  : 0/0
 15638 ;;		Unchanged: 0/0
 15639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15644 ;;Total ram usage:        1 bytes
 15645 ;; Hardware stack levels used:    1
 15646 ;; Hardware stack levels required when called:    5
 15647 ;; This function calls:
 15648 ;;		_LCD_WriteCmd
 15649 ;;		_LCD_WriteData
 15650 ;; This function is called by:
 15651 ;;		_LCDTRXCount
 15652 ;;		_LCDDisplay
 15653 ;;		_run_star_demo
 15654 ;; This function uses a non-reentrant model
 15655 ;;
 15656                           
 15657                           	psect	text67
 15658  002AE8                     __ptext67:
 15659                           	opt stack 0
 15660  002AE8                     _LCD_Update:
 15661                           	opt stack 23
 15662                           
 15663                           ; BSR set to: 0
 15664                           ;lcd.c: 134: uint8_t i;
 15665                           ;lcd.c: 136: LCD_WriteCmd(0x80 | 0x00);
 15666                           
 15667                           ; BSR set to: 0
 15668                           ;incstack = 0
 15669  002AE8  0E80               	movlw	128
 15670  002AEA  ECF5  F019         	call	_LCD_WriteCmd
 15671                           
 15672                           ;lcd.c: 138: for(i = 0; i < 16; i++)
 15673  002AEE  6A18               	clrf	LCD_Update@i,c
 15674  002AF0                     l10894:
 15675                           
 15676                           ;lcd.c: 139: {
 15677                           ;lcd.c: 140: if( LCDText[i] == 0 )
 15678  002AF0  0EB6               	movlw	low _LCDText
 15679  002AF2  2418               	addwf	LCD_Update@i,w,c
 15680  002AF4  6ED9               	movwf	fsr2l,c
 15681  002AF6  6ADA               	clrf	fsr2h,c
 15682  002AF8  0E01               	movlw	high _LCDText
 15683  002AFA  22DA               	addwfc	fsr2h,f,c
 15684  002AFC  50DF               	movf	indf2,w,c
 15685  002AFE  E104               	bnz	l10898
 15686                           
 15687                           ;lcd.c: 141: {
 15688                           ;lcd.c: 142: LCD_WriteData(' ');
 15689  002B00  0E20               	movlw	32
 15690  002B02  ECED  F019         	call	_LCD_WriteData
 15691                           
 15692                           ;lcd.c: 143: }
 15693  002B06  D009               	goto	l10900
 15694  002B08                     l10898:
 15695                           
 15696                           ;lcd.c: 144: else
 15697                           ;lcd.c: 145: {
 15698                           ;lcd.c: 146: LCD_WriteData(LCDText[i]);
 15699  002B08  0EB6               	movlw	low _LCDText
 15700  002B0A  2418               	addwf	LCD_Update@i,w,c
 15701  002B0C  6ED9               	movwf	fsr2l,c
 15702  002B0E  6ADA               	clrf	fsr2h,c
 15703  002B10  0E01               	movlw	high _LCDText
 15704  002B12  22DA               	addwfc	fsr2h,f,c
 15705  002B14  50DF               	movf	indf2,w,c
 15706  002B16  ECED  F019         	call	_LCD_WriteData
 15707  002B1A                     l10900:
 15708  002B1A  2A18               	incf	LCD_Update@i,f,c
 15709  002B1C  0E0F               	movlw	15
 15710  002B1E  6418               	cpfsgt	LCD_Update@i,c
 15711  002B20  D7E7               	goto	l10894
 15712                           
 15713                           ;lcd.c: 147: }
 15714                           ;lcd.c: 148: }
 15715                           ;lcd.c: 150: LCD_WriteCmd(0x80 | 0x40);
 15716  002B22  0EC0               	movlw	192
 15717  002B24  ECF5  F019         	call	_LCD_WriteCmd
 15718                           
 15719                           ;lcd.c: 152: for(i = 16; i < 32; i++)
 15720  002B28  0E10               	movlw	16
 15721  002B2A  6E18               	movwf	LCD_Update@i,c
 15722  002B2C                     l10912:
 15723                           
 15724                           ;lcd.c: 153: {
 15725                           ;lcd.c: 154: if( LCDText[i] == 0 )
 15726  002B2C  0EB6               	movlw	low _LCDText
 15727  002B2E  2418               	addwf	LCD_Update@i,w,c
 15728  002B30  6ED9               	movwf	fsr2l,c
 15729  002B32  6ADA               	clrf	fsr2h,c
 15730  002B34  0E01               	movlw	high _LCDText
 15731  002B36  22DA               	addwfc	fsr2h,f,c
 15732  002B38  50DF               	movf	indf2,w,c
 15733  002B3A  E104               	bnz	l10916
 15734                           
 15735                           ;lcd.c: 155: {
 15736                           ;lcd.c: 156: LCD_WriteData(' ');
 15737  002B3C  0E20               	movlw	32
 15738  002B3E  ECED  F019         	call	_LCD_WriteData
 15739                           
 15740                           ;lcd.c: 157: }
 15741  002B42  D009               	goto	l10918
 15742  002B44                     l10916:
 15743                           
 15744                           ;lcd.c: 158: else
 15745                           ;lcd.c: 159: {
 15746                           ;lcd.c: 160: LCD_WriteData(LCDText[i]);
 15747  002B44  0EB6               	movlw	low _LCDText
 15748  002B46  2418               	addwf	LCD_Update@i,w,c
 15749  002B48  6ED9               	movwf	fsr2l,c
 15750  002B4A  6ADA               	clrf	fsr2h,c
 15751  002B4C  0E01               	movlw	high _LCDText
 15752  002B4E  22DA               	addwfc	fsr2h,f,c
 15753  002B50  50DF               	movf	indf2,w,c
 15754  002B52  ECED  F019         	call	_LCD_WriteData
 15755  002B56                     l10918:
 15756  002B56  2A18               	incf	LCD_Update@i,f,c
 15757  002B58  0E1F               	movlw	31
 15758  002B5A  6418               	cpfsgt	LCD_Update@i,c
 15759  002B5C  D7E7               	goto	l10912
 15760  002B5E  0C1F               	retlw	31
 15761  002B60                     __end_of_LCD_Update:
 15762                           	opt stack 0
 15763                           tblptru	equ	0xFF8
 15764                           tblptrh	equ	0xFF7
 15765                           tblptrl	equ	0xFF6
 15766                           tablat	equ	0xFF5
 15767                           prodh	equ	0xFF4
 15768                           prodl	equ	0xFF3
 15769                           intcon	equ	0xFF2
 15770                           intcon2	equ	0xFF1
 15771                           postinc0	equ	0xFEE
 15772                           plusw0	equ	0xFEB
 15773                           wreg	equ	0xFE8
 15774                           indf1	equ	0xFE7
 15775                           postinc1	equ	0xFE6
 15776                           postdec1	equ	0xFE5
 15777                           fsr1h	equ	0xFE2
 15778                           fsr1l	equ	0xFE1
 15779                           indf2	equ	0xFDF
 15780                           postinc2	equ	0xFDE
 15781                           postdec2	equ	0xFDD
 15782                           plusw2	equ	0xFDB
 15783                           fsr2h	equ	0xFDA
 15784                           fsr2l	equ	0xFD9
 15785                           status	equ	0xFD8
 15786                           
 15787 ;; *************** function _LCD_WriteData *****************
 15788 ;; Defined at:
 15789 ;;		line 43 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 15790 ;; Parameters:    Size  Location     Type
 15791 ;;  data            1    wreg     unsigned char 
 15792 ;; Auto vars:     Size  Location     Type
 15793 ;;  data            1   22[COMRAM] unsigned char 
 15794 ;; Return value:  Size  Location     Type
 15795 ;;		None               void
 15796 ;; Registers used:
 15797 ;;		wreg, status,2, cstack
 15798 ;; Tracked objects:
 15799 ;;		On entry : 0/0
 15800 ;;		On exit  : 0/0
 15801 ;;		Unchanged: 0/0
 15802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15807 ;;Total ram usage:        1 bytes
 15808 ;; Hardware stack levels used:    1
 15809 ;; Hardware stack levels required when called:    4
 15810 ;; This function calls:
 15811 ;;		_SPIPut2
 15812 ;; This function is called by:
 15813 ;;		_LCD_Update
 15814 ;; This function uses a non-reentrant model
 15815 ;;
 15816                           
 15817                           	psect	text68
 15818  0033DA                     __ptext68:
 15819                           	opt stack 0
 15820  0033DA                     _LCD_WriteData:
 15821                           	opt stack 23
 15822                           
 15823                           ;incstack = 0
 15824                           ;LCD_WriteData@data stored from wreg
 15825  0033DA  6E17               	movwf	LCD_WriteData@data,c
 15826                           
 15827                           ;lcd.c: 45: LATDbits.LATD7 = 0;
 15828  0033DC  9E8C               	bcf	3980,7,c	;volatile
 15829                           
 15830                           ;lcd.c: 46: LATDbits.LATD3 = 1;
 15831  0033DE  868C               	bsf	3980,3,c	;volatile
 15832                           
 15833                           ;lcd.c: 48: SPIPut2(data);
 15834  0033E0  5017               	movf	LCD_WriteData@data,w,c
 15835  0033E2  ECC8  F019         	call	_SPIPut2
 15836                           
 15837                           ;lcd.c: 50: LATDbits.LATD7 = 1;
 15838  0033E6  8E8C               	bsf	3980,7,c	;volatile
 15839  0033E8  0012               	return		;funcret
 15840  0033EA                     __end_of_LCD_WriteData:
 15841                           	opt stack 0
 15842                           tblptru	equ	0xFF8
 15843                           tblptrh	equ	0xFF7
 15844                           tblptrl	equ	0xFF6
 15845                           tablat	equ	0xFF5
 15846                           prodh	equ	0xFF4
 15847                           prodl	equ	0xFF3
 15848                           intcon	equ	0xFF2
 15849                           intcon2	equ	0xFF1
 15850                           postinc0	equ	0xFEE
 15851                           plusw0	equ	0xFEB
 15852                           wreg	equ	0xFE8
 15853                           indf1	equ	0xFE7
 15854                           postinc1	equ	0xFE6
 15855                           postdec1	equ	0xFE5
 15856                           fsr1h	equ	0xFE2
 15857                           fsr1l	equ	0xFE1
 15858                           indf2	equ	0xFDF
 15859                           postinc2	equ	0xFDE
 15860                           postdec2	equ	0xFDD
 15861                           plusw2	equ	0xFDB
 15862                           fsr2h	equ	0xFDA
 15863                           fsr2l	equ	0xFD9
 15864                           status	equ	0xFD8
 15865                           
 15866 ;; *************** function _LCD_Erase *****************
 15867 ;; Defined at:
 15868 ;;		line 101 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 15869 ;; Parameters:    Size  Location     Type
 15870 ;;		None
 15871 ;; Auto vars:     Size  Location     Type
 15872 ;;		None
 15873 ;; Return value:  Size  Location     Type
 15874 ;;		None               void
 15875 ;; Registers used:
 15876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15877 ;; Tracked objects:
 15878 ;;		On entry : 0/1
 15879 ;;		On exit  : 0/0
 15880 ;;		Unchanged: 0/0
 15881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15886 ;;Total ram usage:        0 bytes
 15887 ;; Hardware stack levels used:    1
 15888 ;; Hardware stack levels required when called:    5
 15889 ;; This function calls:
 15890 ;;		_DELAY_ms
 15891 ;;		_LCD_WriteCmd
 15892 ;;		_memset
 15893 ;; This function is called by:
 15894 ;;		_LCDTRXCount
 15895 ;;		_LCDDisplay
 15896 ;;		_run_star_demo
 15897 ;; This function uses a non-reentrant model
 15898 ;;
 15899                           
 15900                           	psect	text69
 15901  0032A0                     __ptext69:
 15902                           	opt stack 0
 15903  0032A0                     _LCD_Erase:
 15904                           	opt stack 23
 15905                           
 15906                           ;lcd.c: 104: LCD_WriteCmd(0x01);;
 15907                           
 15908                           ;incstack = 0
 15909  0032A0  0E01               	movlw	1
 15910  0032A2  ECF5  F019         	call	_LCD_WriteCmd
 15911                           
 15912                           ;lcd.c: 105: DELAY_ms(2);
 15913  0032A6  6A17               	clrf	DELAY_ms@ms+1,c
 15914  0032A8  0E02               	movlw	2
 15915  0032AA  6E16               	movwf	DELAY_ms@ms,c
 15916  0032AC  EC88  F011         	call	_DELAY_ms	;wreg free
 15917                           
 15918                           ;lcd.c: 108: memset(LCDText, ' ', 32);
 15919  0032B0  0EB6               	movlw	low _LCDText
 15920  0032B2  6E16               	movwf	memset@p1,c
 15921  0032B4  0E01               	movlw	high _LCDText
 15922  0032B6  6E17               	movwf	memset@p1+1,c
 15923  0032B8  6A19               	clrf	memset@c+1,c
 15924  0032BA  0E20               	movlw	32
 15925  0032BC  6E18               	movwf	memset@c,c
 15926  0032BE  6A1B               	clrf	memset@n+1,c
 15927  0032C0  6E1A               	movwf	memset@n,c
 15928  0032C2  EFD8  F018         	goto	_memset	;wreg free
 15929  0032C6                     __end_of_LCD_Erase:
 15930                           	opt stack 0
 15931                           tblptru	equ	0xFF8
 15932                           tblptrh	equ	0xFF7
 15933                           tblptrl	equ	0xFF6
 15934                           tablat	equ	0xFF5
 15935                           prodh	equ	0xFF4
 15936                           prodl	equ	0xFF3
 15937                           intcon	equ	0xFF2
 15938                           intcon2	equ	0xFF1
 15939                           postinc0	equ	0xFEE
 15940                           plusw0	equ	0xFEB
 15941                           wreg	equ	0xFE8
 15942                           indf1	equ	0xFE7
 15943                           postinc1	equ	0xFE6
 15944                           postdec1	equ	0xFE5
 15945                           fsr1h	equ	0xFE2
 15946                           fsr1l	equ	0xFE1
 15947                           indf2	equ	0xFDF
 15948                           postinc2	equ	0xFDE
 15949                           postdec2	equ	0xFDD
 15950                           plusw2	equ	0xFDB
 15951                           fsr2h	equ	0xFDA
 15952                           fsr2l	equ	0xFD9
 15953                           status	equ	0xFD8
 15954                           
 15955 ;; *************** function _memset *****************
 15956 ;; Defined at:
 15957 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 15958 ;; Parameters:    Size  Location     Type
 15959 ;;  p1              2   21[COMRAM] PTR void 
 15960 ;;		 -> LCDText(33), 
 15961 ;;  c               2   23[COMRAM] int 
 15962 ;;  n               2   25[COMRAM] unsigned int 
 15963 ;; Auto vars:     Size  Location     Type
 15964 ;;  p               2   27[COMRAM] PTR unsigned char 
 15965 ;;		 -> LCDText(33), 
 15966 ;; Return value:  Size  Location     Type
 15967 ;;                  2   21[COMRAM] PTR void 
 15968 ;; Registers used:
 15969 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15970 ;; Tracked objects:
 15971 ;;		On entry : 0/1
 15972 ;;		On exit  : 0/0
 15973 ;;		Unchanged: 0/0
 15974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15975 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15978 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15979 ;;Total ram usage:        8 bytes
 15980 ;; Hardware stack levels used:    1
 15981 ;; Hardware stack levels required when called:    3
 15982 ;; This function calls:
 15983 ;;		Nothing
 15984 ;; This function is called by:
 15985 ;;		_LCD_Erase
 15986 ;; This function uses a non-reentrant model
 15987 ;;
 15988                           
 15989                           	psect	text70
 15990  0031B0                     __ptext70:
 15991                           	opt stack 0
 15992  0031B0                     _memset:
 15993                           	opt stack 24
 15994                           
 15995                           ;incstack = 0
 15996  0031B0  C016  F01C         	movff	memset@p1,memset@p
 15997  0031B4  C017  F01D         	movff	memset@p1+1,memset@p+1
 15998  0031B8  D008               	goto	l10464
 15999  0031BA                     l10460:
 16000  0031BA  C01C  FFD9         	movff	memset@p,fsr2l
 16001  0031BE  C01D  FFDA         	movff	memset@p+1,fsr2h
 16002  0031C2  C018  FFDF         	movff	memset@c,indf2
 16003  0031C6  4A1C               	infsnz	memset@p,f,c
 16004  0031C8  2A1D               	incf	memset@p+1,f,c
 16005  0031CA                     l10464:
 16006  0031CA  061A               	decf	memset@n,f,c
 16007  0031CC  A0D8               	btfss	status,0,c
 16008  0031CE  061B               	decf	memset@n+1,f,c
 16009  0031D0  281A               	incf	memset@n,w,c
 16010  0031D2  E1F3               	bnz	l10460
 16011  0031D4  281B               	incf	memset@n+1,w,c
 16012  0031D6  E1F1               	bnz	l10460
 16013  0031D8  0012               	return		;funcret
 16014  0031DA                     __end_of_memset:
 16015                           	opt stack 0
 16016                           tblptru	equ	0xFF8
 16017                           tblptrh	equ	0xFF7
 16018                           tblptrl	equ	0xFF6
 16019                           tablat	equ	0xFF5
 16020                           prodh	equ	0xFF4
 16021                           prodl	equ	0xFF3
 16022                           intcon	equ	0xFF2
 16023                           intcon2	equ	0xFF1
 16024                           postinc0	equ	0xFEE
 16025                           plusw0	equ	0xFEB
 16026                           wreg	equ	0xFE8
 16027                           indf1	equ	0xFE7
 16028                           postinc1	equ	0xFE6
 16029                           postdec1	equ	0xFE5
 16030                           fsr1h	equ	0xFE2
 16031                           fsr1l	equ	0xFE1
 16032                           indf2	equ	0xFDF
 16033                           postinc2	equ	0xFDE
 16034                           postdec2	equ	0xFDD
 16035                           plusw2	equ	0xFDB
 16036                           fsr2h	equ	0xFDA
 16037                           fsr2l	equ	0xFD9
 16038                           status	equ	0xFD8
 16039                           
 16040 ;; *************** function _LCD_WriteCmd *****************
 16041 ;; Defined at:
 16042 ;;		line 32 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 16043 ;; Parameters:    Size  Location     Type
 16044 ;;  data            1    wreg     unsigned char 
 16045 ;; Auto vars:     Size  Location     Type
 16046 ;;  data            1   22[COMRAM] unsigned char 
 16047 ;; Return value:  Size  Location     Type
 16048 ;;		None               void
 16049 ;; Registers used:
 16050 ;;		wreg, status,2, cstack
 16051 ;; Tracked objects:
 16052 ;;		On entry : 0/F
 16053 ;;		On exit  : 0/0
 16054 ;;		Unchanged: 0/0
 16055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16059 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16060 ;;Total ram usage:        1 bytes
 16061 ;; Hardware stack levels used:    1
 16062 ;; Hardware stack levels required when called:    4
 16063 ;; This function calls:
 16064 ;;		_SPIPut2
 16065 ;; This function is called by:
 16066 ;;		_LCD_Initialize
 16067 ;;		_LCD_Erase
 16068 ;;		_LCD_Update
 16069 ;; This function uses a non-reentrant model
 16070 ;;
 16071                           
 16072                           	psect	text71
 16073  0033EA                     __ptext71:
 16074                           	opt stack 0
 16075  0033EA                     _LCD_WriteCmd:
 16076                           	opt stack 23
 16077                           
 16078                           ;incstack = 0
 16079                           ;LCD_WriteCmd@data stored from wreg
 16080  0033EA  6E17               	movwf	LCD_WriteCmd@data,c
 16081                           
 16082                           ;lcd.c: 34: LATDbits.LATD7 = 0;
 16083  0033EC  9E8C               	bcf	3980,7,c	;volatile
 16084                           
 16085                           ;lcd.c: 35: LATDbits.LATD3 = 0;
 16086  0033EE  968C               	bcf	3980,3,c	;volatile
 16087                           
 16088                           ;lcd.c: 37: SPIPut2(data);
 16089  0033F0  5017               	movf	LCD_WriteCmd@data,w,c
 16090  0033F2  ECC8  F019         	call	_SPIPut2
 16091                           
 16092                           ;lcd.c: 39: LATDbits.LATD7 = 1;
 16093  0033F6  8E8C               	bsf	3980,7,c	;volatile
 16094  0033F8  0012               	return		;funcret
 16095  0033FA                     __end_of_LCD_WriteCmd:
 16096                           	opt stack 0
 16097                           tblptru	equ	0xFF8
 16098                           tblptrh	equ	0xFF7
 16099                           tblptrl	equ	0xFF6
 16100                           tablat	equ	0xFF5
 16101                           prodh	equ	0xFF4
 16102                           prodl	equ	0xFF3
 16103                           intcon	equ	0xFF2
 16104                           intcon2	equ	0xFF1
 16105                           postinc0	equ	0xFEE
 16106                           plusw0	equ	0xFEB
 16107                           wreg	equ	0xFE8
 16108                           indf1	equ	0xFE7
 16109                           postinc1	equ	0xFE6
 16110                           postdec1	equ	0xFE5
 16111                           fsr1h	equ	0xFE2
 16112                           fsr1l	equ	0xFE1
 16113                           indf2	equ	0xFDF
 16114                           postinc2	equ	0xFDE
 16115                           postdec2	equ	0xFDD
 16116                           plusw2	equ	0xFDB
 16117                           fsr2h	equ	0xFDA
 16118                           fsr2l	equ	0xFD9
 16119                           status	equ	0xFD8
 16120                           
 16121 ;; *************** function _SPIPut2 *****************
 16122 ;; Defined at:
 16123 ;;		line 81 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 16124 ;; Parameters:    Size  Location     Type
 16125 ;;  v               1    wreg     unsigned char 
 16126 ;; Auto vars:     Size  Location     Type
 16127 ;;  v               1   21[COMRAM] unsigned char 
 16128 ;;  i               1    0        unsigned char 
 16129 ;; Return value:  Size  Location     Type
 16130 ;;		None               void
 16131 ;; Registers used:
 16132 ;;		wreg
 16133 ;; Tracked objects:
 16134 ;;		On entry : 0/0
 16135 ;;		On exit  : 0/0
 16136 ;;		Unchanged: 0/0
 16137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16141 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16142 ;;Total ram usage:        1 bytes
 16143 ;; Hardware stack levels used:    1
 16144 ;; Hardware stack levels required when called:    3
 16145 ;; This function calls:
 16146 ;;		Nothing
 16147 ;; This function is called by:
 16148 ;;		_EEPROM_Read
 16149 ;;		_EEPROM_Write
 16150 ;;		_SPIGet2
 16151 ;;		_LCD_WriteCmd
 16152 ;;		_LCD_WriteData
 16153 ;; This function uses a non-reentrant model
 16154 ;;
 16155                           
 16156                           	psect	text72
 16157  003390                     __ptext72:
 16158                           	opt stack 0
 16159  003390                     _SPIPut2:
 16160                           	opt stack 23
 16161                           
 16162                           ;incstack = 0
 16163                           ;SPIPut2@v stored from wreg
 16164  003390  6E16               	movwf	SPIPut2@v,c
 16165                           
 16166                           ;spi.c: 83: uint8_t i;
 16167                           ;spi.c: 89: PIR3bits.SSP2IF = 0;
 16168  003392  9EA4               	bcf	4004,7,c	;volatile
 16169  003394                     l799:
 16170                           
 16171                           ;spi.c: 91: {
 16172                           ;spi.c: 93: SSP2CON1bits.WCOL = 0;
 16173  003394  9E72               	bcf	3954,7,c	;volatile
 16174                           
 16175                           ;spi.c: 96: SSP2BUF = v;
 16176  003396  C016  FF75         	movff	SPIPut2@v,3957	;volatile
 16177                           
 16178                           ;spi.c: 99: } while( SSP2CON1bits.WCOL );
 16179  00339A  BE72               	btfsc	3954,7,c	;volatile
 16180  00339C  D7FB               	goto	l799
 16181  00339E                     l801:
 16182  00339E  AEA4               	btfss	4004,7,c	;volatile
 16183  0033A0  D7FE               	goto	l801
 16184                           
 16185                           ;spi.c: 107: PIR3bits.SSP2IF = 0;
 16186  0033A2  9EA4               	bcf	4004,7,c	;volatile
 16187  0033A4  0012               	return		;funcret
 16188  0033A6                     __end_of_SPIPut2:
 16189                           	opt stack 0
 16190                           tblptru	equ	0xFF8
 16191                           tblptrh	equ	0xFF7
 16192                           tblptrl	equ	0xFF6
 16193                           tablat	equ	0xFF5
 16194                           prodh	equ	0xFF4
 16195                           prodl	equ	0xFF3
 16196                           intcon	equ	0xFF2
 16197                           intcon2	equ	0xFF1
 16198                           postinc0	equ	0xFEE
 16199                           plusw0	equ	0xFEB
 16200                           wreg	equ	0xFE8
 16201                           indf1	equ	0xFE7
 16202                           postinc1	equ	0xFE6
 16203                           postdec1	equ	0xFE5
 16204                           fsr1h	equ	0xFE2
 16205                           fsr1l	equ	0xFE1
 16206                           indf2	equ	0xFDF
 16207                           postinc2	equ	0xFDE
 16208                           postdec2	equ	0xFDD
 16209                           plusw2	equ	0xFDB
 16210                           fsr2h	equ	0xFDA
 16211                           fsr2l	equ	0xFD9
 16212                           status	equ	0xFD8
 16213                           
 16214 ;; *************** function _DELAY_ms *****************
 16215 ;; Defined at:
 16216 ;;		line 108 in file "../src/system_config/miwikit_pic18f46j50_24j40/delay.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;  ms              2   21[COMRAM] unsigned int 
 16219 ;; Auto vars:     Size  Location     Type
 16220 ;;  cyclesRequir    4   31[COMRAM] long 
 16221 ;; Return value:  Size  Location     Type
 16222 ;;		None               void
 16223 ;; Registers used:
 16224 ;;		wreg, status,2, status,0, prodl, prodh
 16225 ;; Tracked objects:
 16226 ;;		On entry : 0/F
 16227 ;;		On exit  : 0/0
 16228 ;;		Unchanged: 0/0
 16229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16231 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16232 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16233 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16234 ;;Total ram usage:       14 bytes
 16235 ;; Hardware stack levels used:    1
 16236 ;; Hardware stack levels required when called:    3
 16237 ;; This function calls:
 16238 ;;		Nothing
 16239 ;; This function is called by:
 16240 ;;		_SYSTEM_Initialize
 16241 ;;		_LCD_Initialize
 16242 ;;		_LCD_Erase
 16243 ;;		_LCDDisplay
 16244 ;;		_DemoOutput_Greeting
 16245 ;;		_DemoOutput_Channel
 16246 ;;		_run_star_demo
 16247 ;; This function uses a non-reentrant model
 16248 ;;
 16249                           
 16250                           	psect	text73
 16251  002310                     __ptext73:
 16252                           	opt stack 0
 16253  002310                     _DELAY_ms:
 16254                           	opt stack 24
 16255                           
 16256                           ;delay.c: 115: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 16257                           
 16258                           ;incstack = 0
 16259  002310  5016               	movf	DELAY_ms@ms,w,c
 16260  002312  6E18               	movwf	??_DELAY_ms& (0+255),c
 16261  002314  5017               	movf	DELAY_ms@ms+1,w,c
 16262  002316  6E19               	movwf	(??_DELAY_ms+1)& (0+255),c
 16263  002318  6A1A               	clrf	(??_DELAY_ms+2)& (0+255),c
 16264  00231A  6A1B               	clrf	(??_DELAY_ms+3)& (0+255),c
 16265  00231C  0EA0               	movlw	160
 16266  00231E  0218               	mulwf	??_DELAY_ms& (0+255),c
 16267  002320  CFF3 F01C          	movff	prodl,??_DELAY_ms+4
 16268  002324  CFF4 F01D          	movff	prodh,??_DELAY_ms+5
 16269  002328  6A1E               	clrf	(??_DELAY_ms+6)& (0+255),c
 16270  00232A  6A1F               	clrf	(??_DELAY_ms+7)& (0+255),c
 16271  00232C  0219               	mulwf	(??_DELAY_ms+1)& (0+255),c
 16272  00232E  50F3               	movf	prodl,w,c
 16273  002330  261D               	addwf	(??_DELAY_ms+5)& (0+255),f,c
 16274  002332  50F4               	movf	prodh,w,c
 16275  002334  221E               	addwfc	(??_DELAY_ms+6)& (0+255),f,c
 16276  002336  0E00               	movlw	0
 16277  002338  221F               	addwfc	(??_DELAY_ms+7)& (0+255),f,c
 16278  00233A  0E0F               	movlw	15
 16279  00233C  0218               	mulwf	??_DELAY_ms& (0+255),c
 16280  00233E  50F3               	movf	prodl,w,c
 16281  002340  261D               	addwf	(??_DELAY_ms+5)& (0+255),f,c
 16282  002342  50F4               	movf	prodh,w,c
 16283  002344  221E               	addwfc	(??_DELAY_ms+6)& (0+255),f,c
 16284  002346  0E00               	movlw	0
 16285  002348  221F               	addwfc	(??_DELAY_ms+7)& (0+255),f,c
 16286  00234A  0EA0               	movlw	160
 16287  00234C  021A               	mulwf	(??_DELAY_ms+2)& (0+255),c
 16288  00234E  50F3               	movf	prodl,w,c
 16289  002350  261E               	addwf	(??_DELAY_ms+6)& (0+255),f,c
 16290  002352  50F4               	movf	prodh,w,c
 16291  002354  221F               	addwfc	(??_DELAY_ms+7)& (0+255),f,c
 16292  002356  0E0F               	movlw	15
 16293  002358  0219               	mulwf	(??_DELAY_ms+1)& (0+255),c
 16294  00235A  50F3               	movf	prodl,w,c
 16295  00235C  261E               	addwf	(??_DELAY_ms+6)& (0+255),f,c
 16296  00235E  50F4               	movf	prodh,w,c
 16297  002360  221F               	addwfc	(??_DELAY_ms+7)& (0+255),f,c
 16298  002362  0E00               	movlw	0
 16299  002364  0218               	mulwf	??_DELAY_ms& (0+255),c
 16300  002366  50F3               	movf	prodl,w,c
 16301  002368  261E               	addwf	(??_DELAY_ms+6)& (0+255),f,c
 16302  00236A  50F4               	movf	prodh,w,c
 16303  00236C  221F               	addwfc	(??_DELAY_ms+7)& (0+255),f,c
 16304  00236E  0EA0               	movlw	160
 16305  002370  021B               	mulwf	(??_DELAY_ms+3)& (0+255),c
 16306  002372  50F3               	movf	prodl,w,c
 16307  002374  261F               	addwf	(??_DELAY_ms+7)& (0+255),f,c
 16308  002376  0E0F               	movlw	15
 16309  002378  021A               	mulwf	(??_DELAY_ms+2)& (0+255),c
 16310  00237A  50F3               	movf	prodl,w,c
 16311  00237C  261F               	addwf	(??_DELAY_ms+7)& (0+255),f,c
 16312  00237E  0E00               	movlw	0
 16313  002380  0219               	mulwf	(??_DELAY_ms+1)& (0+255),c
 16314  002382  50F3               	movf	prodl,w,c
 16315  002384  261F               	addwf	(??_DELAY_ms+7)& (0+255),f,c
 16316  002386  0E00               	movlw	0
 16317  002388  0218               	mulwf	??_DELAY_ms& (0+255),c
 16318  00238A  50F3               	movf	prodl,w,c
 16319  00238C  261F               	addwf	(??_DELAY_ms+7)& (0+255),f,c
 16320  00238E  C01C  F020         	movff	??_DELAY_ms+4,DELAY_ms@cyclesRequiredForEntireDelay
 16321  002392  C01D  F021         	movff	??_DELAY_ms+5,DELAY_ms@cyclesRequiredForEntireDelay+1
 16322  002396  C01E  F022         	movff	??_DELAY_ms+6,DELAY_ms@cyclesRequiredForEntireDelay+2
 16323  00239A  C01F  F023         	movff	??_DELAY_ms+7,DELAY_ms@cyclesRequiredForEntireDelay+3
 16324                           
 16325                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 16326  00239E  0E56               	movlw	86
 16327  0023A0  2620               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
 16328  0023A2  0EFF               	movlw	255
 16329  0023A4  2221               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 16330  0023A6  2222               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 16331  0023A8  2223               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 16332                           
 16333                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 16334  0023AA  BE23               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 16335  0023AC  0CFF               	retlw	255
 16336  0023AE  5023               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 16337  0023B0  1022               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 16338  0023B2  1021               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 16339  0023B4  E10B               	bnz	l717
 16340  0023B6  0EC4               	movlw	196
 16341  0023B8  5C20               	subwf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
 16342  0023BA  E208               	bc	l717
 16343  0023BC  0012               	return	
 16344  0023BE                     l718:
 16345                           
 16346                           ;delay.c: 128: {
 16347                           ;delay.c: 129: __nop();
 16348  0023BE  F000               	nop	
 16349                           
 16350                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 16351  0023C0  0ED9               	movlw	217
 16352  0023C2  2620               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
 16353  0023C4  0EFF               	movlw	255
 16354  0023C6  2221               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 16355  0023C8  2222               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 16356  0023CA  2223               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 16357  0023CC                     l717:
 16358  0023CC  BE23               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 16359  0023CE  0012               	return	
 16360  0023D0  5023               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 16361  0023D2  1022               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 16362  0023D4  1021               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 16363  0023D6  E1F3               	bnz	l718
 16364  0023D8  0420               	decf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
 16365  0023DA  E2F1               	bc	l718
 16366  0023DC  0012               	return		;funcret
 16367  0023DE                     __end_of_DELAY_ms:
 16368                           	opt stack 0
 16369                           tblptru	equ	0xFF8
 16370                           tblptrh	equ	0xFF7
 16371                           tblptrl	equ	0xFF6
 16372                           tablat	equ	0xFF5
 16373                           prodh	equ	0xFF4
 16374                           prodl	equ	0xFF3
 16375                           intcon	equ	0xFF2
 16376                           intcon2	equ	0xFF1
 16377                           postinc0	equ	0xFEE
 16378                           plusw0	equ	0xFEB
 16379                           wreg	equ	0xFE8
 16380                           indf1	equ	0xFE7
 16381                           postinc1	equ	0xFE6
 16382                           postdec1	equ	0xFE5
 16383                           fsr1h	equ	0xFE2
 16384                           fsr1l	equ	0xFE1
 16385                           indf2	equ	0xFDF
 16386                           postinc2	equ	0xFDE
 16387                           postdec2	equ	0xFDD
 16388                           plusw2	equ	0xFDB
 16389                           fsr2h	equ	0xFDA
 16390                           fsr2l	equ	0xFD9
 16391                           status	equ	0xFD8
 16392                           
 16393 ;; *************** function _high_isr *****************
 16394 ;; Defined at:
 16395 ;;		line 1852 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 16396 ;; Parameters:    Size  Location     Type
 16397 ;;		None
 16398 ;; Auto vars:     Size  Location     Type
 16399 ;;  results         1   16[COMRAM] struct _DRIVER_UINT8_UNI
 16400 ;;  RxBank          1   19[COMRAM] unsigned char 
 16401 ;;  flags           2   17[COMRAM] struct .
 16402 ;;  i               1   20[COMRAM] unsigned char 
 16403 ;; Return value:  Size  Location     Type
 16404 ;;		None               void
 16405 ;; Registers used:
 16406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16407 ;; Tracked objects:
 16408 ;;		On entry : 0/0
 16409 ;;		On exit  : 0/0
 16410 ;;		Unchanged: 0/0
 16411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16413 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16414 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16415 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16416 ;;Total ram usage:       14 bytes
 16417 ;; Hardware stack levels used:    1
 16418 ;; Hardware stack levels required when called:    2
 16419 ;; This function calls:
 16420 ;;		_UserInterruptHandler
 16421 ;;		i2_PHYGetLongRAMAddr
 16422 ;;		i2_PHYGetShortRAMAddr
 16423 ;;		i2_PHYSetShortRAMAddr
 16424 ;; This function is called by:
 16425 ;;		Interrupt level 2
 16426 ;; This function uses a non-reentrant model
 16427 ;;
 16428                           
 16429                           	psect	intcode
 16430  000008                     __pintcode:
 16431                           	opt stack 0
 16432  000008                     _high_isr:
 16433                           	opt stack 14
 16434                           
 16435                           ;incstack = 0
 16436  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16437  00000A  CFD9 F00D          	movff	fsr2l,??_high_isr+5
 16438  00000E  CFDA F00E          	movff	fsr2h,??_high_isr+6
 16439  000012  CFF3 F00F          	movff	prodl,??_high_isr+7
 16440  000016  CFF4 F010          	movff	prodh,??_high_isr+8
 16441                           
 16442                           ;drv_mrf_miwi_24j40.c: 1867: if (INTCONbits.INT0IE && INTCONbits.INT0IF)
 16443  00001A  B8F2               	btfsc	intcon,4,c	;volatile
 16444  00001C  A2F2               	btfss	intcon,1,c	;volatile
 16445  00001E  D0A2               	goto	i2l7390
 16446                           
 16447                           ;drv_mrf_miwi_24j40.c: 1868: {
 16448                           ;drv_mrf_miwi_24j40.c: 1869: uint8_t i;
 16449                           ;drv_mrf_miwi_24j40.c: 1873: INTCONbits.INT0IF = 0;
 16450  000020  92F2               	bcf	intcon,1,c	;volatile
 16451                           
 16452                           ;drv_mrf_miwi_24j40.c: 1877: {
 16453                           ;drv_mrf_miwi_24j40.c: 1878: MRF24J40_IFREG flags;
 16454                           ;drv_mrf_miwi_24j40.c: 1881: flags.Val = PHYGetShortRAMAddr((0x62));
 16455  000022  0E62               	movlw	98
 16456  000024  ECC2  F018         	call	i2_PHYGetShortRAMAddr
 16457  000028  6E12               	movwf	high_isr@flags,c
 16458                           
 16459                           ;drv_mrf_miwi_24j40.c: 1883: if (flags.bits.RF_TXIF)
 16460  00002A  A012               	btfss	high_isr@flags,0,c
 16461  00002C  D00F               	goto	i2l231
 16462                           
 16463                           ;drv_mrf_miwi_24j40.c: 1884: {
 16464                           ;drv_mrf_miwi_24j40.c: 1887: MRF24J40Status.bits.TX_BUSY = 0;
 16465  00002E  903F               	bcf	_MRF24J40Status,0,c	;volatile
 16466                           
 16467                           ;drv_mrf_miwi_24j40.c: 1889: if (MRF24J40Status.bits.SEC_IF)
 16468  000030  BC3F               	btfsc	_MRF24J40Status,6,c	;volatile
 16469                           
 16470                           ;drv_mrf_miwi_24j40.c: 1890: {
 16471                           ;drv_mrf_miwi_24j40.c: 1891: MRF24J40Status.bits.SEC_IF = 0;
 16472  000032  9C3F               	bcf	_MRF24J40Status,6,c	;volatile
 16473                           
 16474                           ;drv_mrf_miwi_24j40.c: 1892: }
 16475                           ;drv_mrf_miwi_24j40.c: 1894: failureCounter = 0;
 16476  000034  0100               	movlb	0	; () banked
 16477  000036  6B89               	clrf	_failureCounter& (0+255),b	;volatile
 16478  000038  6B8A               	clrf	(_failureCounter+1)& (0+255),b	;volatile
 16479                           
 16480                           ;drv_mrf_miwi_24j40.c: 1898: if (MRF24J40Status.bits.TX_PENDING_ACK)
 16481  00003A  A23F               	btfss	_MRF24J40Status,1,c	;volatile
 16482  00003C  D007               	goto	i2l231
 16483                           
 16484                           ; BSR set to: 0
 16485                           ;drv_mrf_miwi_24j40.c: 1899: {
 16486                           ;drv_mrf_miwi_24j40.c: 1900: DRIVER_UINT8_UNION results;
 16487                           ;drv_mrf_miwi_24j40.c: 1903: results.Val = PHYGetShortRAMAddr((0x48));
 16488  00003E  0E48               	movlw	72
 16489  000040  ECC2  F018         	call	i2_PHYGetShortRAMAddr
 16490  000044  6E11               	movwf	high_isr@results,c
 16491                           
 16492                           ;drv_mrf_miwi_24j40.c: 1905: if (results.bits.b0 == 1)
 16493  000046  B011               	btfsc	high_isr@results,0,c
 16494                           
 16495                           ;drv_mrf_miwi_24j40.c: 1906: {
 16496                           ;drv_mrf_miwi_24j40.c: 1909: MRF24J40Status.bits.TX_FAIL = 1;
 16497  000048  843F               	bsf	_MRF24J40Status,2,c	;volatile
 16498                           
 16499                           ;drv_mrf_miwi_24j40.c: 1910: }
 16500                           ;drv_mrf_miwi_24j40.c: 1914: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 16501  00004A  923F               	bcf	_MRF24J40Status,1,c	;volatile
 16502  00004C                     i2l231:
 16503                           
 16504                           ;drv_mrf_miwi_24j40.c: 1916: }
 16505                           ;drv_mrf_miwi_24j40.c: 1918: }
 16506                           ;drv_mrf_miwi_24j40.c: 1920: if (flags.bits.RF_RXIF)
 16507  00004C  A612               	btfss	high_isr@flags,3,c
 16508  00004E  D083               	goto	i2l7386
 16509                           
 16510                           ;drv_mrf_miwi_24j40.c: 1921: {
 16511                           ;drv_mrf_miwi_24j40.c: 1922: uint8_t RxBank = 0xFF;
 16512  000050  6814               	setf	high_isr@RxBank,c
 16513                           
 16514                           ;drv_mrf_miwi_24j40.c: 1924: for (i = 0; i < 2; i++)
 16515  000052  6A15               	clrf	high_isr@i,c
 16516  000054                     i2l7354:
 16517                           
 16518                           ;drv_mrf_miwi_24j40.c: 1925: {
 16519                           ;drv_mrf_miwi_24j40.c: 1926: if (RxBuffer[i].PayloadLen == 0)
 16520  000054  5015               	movf	high_isr@i,w,c
 16521  000056  0D45               	mullw	69
 16522  000058  0E04               	movlw	low _RxBuffer
 16523  00005A  24F3               	addwf	prodl,w,c
 16524  00005C  6ED9               	movwf	fsr2l,c
 16525  00005E  0E01               	movlw	high _RxBuffer
 16526  000060  20F4               	addwfc	prodh,w,c
 16527  000062  6EDA               	movwf	fsr2h,c
 16528  000064  50DF               	movf	indf2,w,c
 16529  000066  E103               	bnz	i2l7358
 16530                           
 16531                           ;drv_mrf_miwi_24j40.c: 1927: {
 16532                           ;drv_mrf_miwi_24j40.c: 1928: RxBank = i;
 16533  000068  C015  F014         	movff	high_isr@i,high_isr@RxBank
 16534                           
 16535                           ;drv_mrf_miwi_24j40.c: 1929: break;
 16536  00006C  D004               	goto	i2l7362
 16537  00006E                     i2l7358:
 16538  00006E  2A15               	incf	high_isr@i,f,c
 16539  000070  0E01               	movlw	1
 16540  000072  6415               	cpfsgt	high_isr@i,c
 16541  000074  D7EF               	goto	i2l7354
 16542  000076                     i2l7362:
 16543                           
 16544                           ;drv_mrf_miwi_24j40.c: 1930: }
 16545                           ;drv_mrf_miwi_24j40.c: 1931: }
 16546                           ;drv_mrf_miwi_24j40.c: 1934: if (RxBank < 2)
 16547  000076  0E02               	movlw	2
 16548  000078  6014               	cpfslt	high_isr@RxBank,c
 16549  00007A  D068               	goto	i2l7384
 16550                           
 16551                           ;drv_mrf_miwi_24j40.c: 1935: {
 16552                           ;drv_mrf_miwi_24j40.c: 1941: PHYSetShortRAMAddr((0x73), 0x04);
 16553  00007C  0E04               	movlw	4
 16554  00007E  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 16555  000080  0E73               	movlw	115
 16556  000082  EC29  F019         	call	i2_PHYSetShortRAMAddr
 16557                           
 16558                           ;drv_mrf_miwi_24j40.c: 1945: RxBuffer[RxBank].PayloadLen = PHYGetLongRAMAddr(0x300) + 2;
 16559  000086  5014               	movf	high_isr@RxBank,w,c
 16560  000088  0D45               	mullw	69
 16561  00008A  0E04               	movlw	low _RxBuffer
 16562  00008C  24F3               	addwf	prodl,w,c
 16563  00008E  6ED9               	movwf	fsr2l,c
 16564  000090  0E01               	movlw	high _RxBuffer
 16565  000092  20F4               	addwfc	prodh,w,c
 16566  000094  6EDA               	movwf	fsr2h,c
 16567  000096  0E03               	movlw	3
 16568  000098  6E03               	movwf	i2PHYGetLongRAMAddr@address+1,c
 16569  00009A  6A02               	clrf	i2PHYGetLongRAMAddr@address,c
 16570  00009C  ECA1  F016         	call	i2_PHYGetLongRAMAddr	;wreg free
 16571  0000A0  0F02               	addlw	2
 16572  0000A2  6EDF               	movwf	indf2,c
 16573                           
 16574                           ;drv_mrf_miwi_24j40.c: 1946: if (RxBuffer[RxBank].PayloadLen < (40+0+8+8+12))
 16575  0000A4  5014               	movf	high_isr@RxBank,w,c
 16576  0000A6  0D45               	mullw	69
 16577  0000A8  0E04               	movlw	low _RxBuffer
 16578  0000AA  24F3               	addwf	prodl,w,c
 16579  0000AC  6ED9               	movwf	fsr2l,c
 16580  0000AE  0E01               	movlw	high _RxBuffer
 16581  0000B0  20F4               	addwfc	prodh,w,c
 16582  0000B2  6EDA               	movwf	fsr2h,c
 16583  0000B4  0E44               	movlw	68
 16584  0000B6  60DF               	cpfslt	indf2,c
 16585  0000B8  D03F               	goto	i2l7382
 16586                           
 16587                           ;drv_mrf_miwi_24j40.c: 1947: {
 16588                           ;drv_mrf_miwi_24j40.c: 1949: MRF24J40Status.bits.RX_BUFFERED = 1;
 16589  0000BA  8A3F               	bsf	_MRF24J40Status,5,c	;volatile
 16590                           
 16591                           ;drv_mrf_miwi_24j40.c: 1952: for (i = 1; i <= RxBuffer[RxBank].PayloadLen + 2; i++)
 16592  0000BC  0E01               	movlw	1
 16593  0000BE  6E15               	movwf	high_isr@i,c
 16594  0000C0  D01A               	goto	i2l7378
 16595  0000C2                     i2l7374:
 16596                           
 16597                           ;drv_mrf_miwi_24j40.c: 1953: {
 16598                           ;drv_mrf_miwi_24j40.c: 1954: RxBuffer[RxBank].Payload[i - 1] = PHYGetLongRAMAddr(0x300 +
      +                           i);
 16599  0000C2  5014               	movf	high_isr@RxBank,w,c
 16600  0000C4  0D45               	mullw	69
 16601  0000C6  0E04               	movlw	low _RxBuffer
 16602  0000C8  6E08               	movwf	??_high_isr& (0+255),c
 16603  0000CA  0E01               	movlw	high _RxBuffer
 16604  0000CC  6E09               	movwf	(??_high_isr+1)& (0+255),c
 16605  0000CE  50F3               	movf	prodl,w,c
 16606  0000D0  2608               	addwf	??_high_isr,f,c
 16607  0000D2  50F4               	movf	prodh,w,c
 16608  0000D4  2209               	addwfc	??_high_isr+1,f,c
 16609  0000D6  5015               	movf	high_isr@i,w,c
 16610  0000D8  2408               	addwf	??_high_isr,w,c
 16611  0000DA  6ED9               	movwf	fsr2l,c
 16612  0000DC  0E00               	movlw	0
 16613  0000DE  2009               	addwfc	??_high_isr+1,w,c
 16614  0000E0  6EDA               	movwf	fsr2h,c
 16615  0000E2  0E00               	movlw	0
 16616  0000E4  2415               	addwf	high_isr@i,w,c
 16617  0000E6  6E02               	movwf	i2PHYGetLongRAMAddr@address,c
 16618  0000E8  6A03               	clrf	i2PHYGetLongRAMAddr@address+1,c
 16619  0000EA  0E03               	movlw	3
 16620  0000EC  2203               	addwfc	i2PHYGetLongRAMAddr@address+1,f,c
 16621  0000EE  ECA1  F016         	call	i2_PHYGetLongRAMAddr	;wreg free
 16622  0000F2  6EDF               	movwf	indf2,c
 16623  0000F4  2A15               	incf	high_isr@i,f,c
 16624  0000F6                     i2l7378:
 16625  0000F6  5015               	movf	high_isr@i,w,c
 16626  0000F8  6E08               	movwf	??_high_isr& (0+255),c
 16627  0000FA  6A09               	clrf	(??_high_isr+1)& (0+255),c
 16628  0000FC  5014               	movf	high_isr@RxBank,w,c
 16629  0000FE  0D45               	mullw	69
 16630  000100  0E04               	movlw	low _RxBuffer
 16631  000102  24F3               	addwf	prodl,w,c
 16632  000104  6ED9               	movwf	fsr2l,c
 16633  000106  0E01               	movlw	high _RxBuffer
 16634  000108  20F4               	addwfc	prodh,w,c
 16635  00010A  6EDA               	movwf	fsr2h,c
 16636  00010C  50DF               	movf	indf2,w,c
 16637  00010E  6E0A               	movwf	(??_high_isr+2)& (0+255),c
 16638  000110  6A0B               	clrf	(??_high_isr+3)& (0+255),c
 16639  000112  0E02               	movlw	2
 16640  000114  260A               	addwf	??_high_isr+2,f,c
 16641  000116  0E00               	movlw	0
 16642  000118  220B               	addwfc	??_high_isr+3,f,c
 16643  00011A  5008               	movf	??_high_isr,w,c
 16644  00011C  5C0A               	subwf	??_high_isr+2,w,c
 16645  00011E  500B               	movf	??_high_isr+3,w,c
 16646  000120  0A80               	xorlw	128
 16647  000122  6E0C               	movwf	(??_high_isr+4)& (0+255),c
 16648  000124  5009               	movf	??_high_isr+1,w,c
 16649  000126  0A80               	xorlw	128
 16650  000128  580C               	subwfb	(??_high_isr+4)& (0+255),w,c
 16651  00012A  E2CB               	bc	i2l7374
 16652                           
 16653                           ;drv_mrf_miwi_24j40.c: 1955: }
 16654                           ;drv_mrf_miwi_24j40.c: 1956: PHYSetShortRAMAddr((0x1B), 0x01);
 16655  00012C  0E01               	movlw	1
 16656  00012E  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 16657  000130  0E1B               	movlw	27
 16658  000132  EC29  F019         	call	i2_PHYSetShortRAMAddr
 16659                           
 16660                           ;drv_mrf_miwi_24j40.c: 1957: } else
 16661  000136  D005               	goto	i2l244
 16662  000138                     i2l7382:
 16663                           
 16664                           ;drv_mrf_miwi_24j40.c: 1958: {
 16665                           ;drv_mrf_miwi_24j40.c: 1961: PHYSetShortRAMAddr((0x1B), 0x01);
 16666  000138  0E01               	movlw	1
 16667  00013A  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 16668  00013C  0E1B               	movlw	27
 16669  00013E  EC29  F019         	call	i2_PHYSetShortRAMAddr
 16670  000142                     i2l244:
 16671                           
 16672                           ;drv_mrf_miwi_24j40.c: 1962: }
 16673                           ;drv_mrf_miwi_24j40.c: 1965: PHYSetShortRAMAddr((0x73), 0x00);
 16674  000142  6A02               	clrf	i2PHYSetShortRAMAddr@value,c
 16675  000144  0E73               	movlw	115
 16676  000146  EC29  F019         	call	i2_PHYSetShortRAMAddr
 16677                           
 16678                           ;drv_mrf_miwi_24j40.c: 1966: } else
 16679  00014A  D005               	goto	i2l7386
 16680  00014C                     i2l7384:
 16681                           
 16682                           ;drv_mrf_miwi_24j40.c: 1967: {
 16683                           ;drv_mrf_miwi_24j40.c: 1970: PHYSetShortRAMAddr((0x1B), 0x01);
 16684  00014C  0E01               	movlw	1
 16685  00014E  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 16686  000150  0E1B               	movlw	27
 16687  000152  EC29  F019         	call	i2_PHYSetShortRAMAddr
 16688  000156                     i2l7386:
 16689                           
 16690                           ;drv_mrf_miwi_24j40.c: 1977: }
 16691                           ;drv_mrf_miwi_24j40.c: 1979: }
 16692                           ;drv_mrf_miwi_24j40.c: 1982: if (flags.bits.SECIF)
 16693  000156  A812               	btfss	high_isr@flags,4,c
 16694  000158  D005               	goto	i2l7390
 16695                           
 16696                           ;drv_mrf_miwi_24j40.c: 1983: {
 16697                           ;drv_mrf_miwi_24j40.c: 1984: PHYSetShortRAMAddr((0x59), 0x80);
 16698  00015A  0E80               	movlw	128
 16699  00015C  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 16700  00015E  0E59               	movlw	89
 16701  000160  EC29  F019         	call	i2_PHYSetShortRAMAddr
 16702  000164                     i2l7390:
 16703                           
 16704                           ;drv_mrf_miwi_24j40.c: 1985: }
 16705                           ;drv_mrf_miwi_24j40.c: 1986: }
 16706                           ;drv_mrf_miwi_24j40.c: 1987: }
 16707                           ;drv_mrf_miwi_24j40.c: 1992: if (PIR1bits.TMR1IF)
 16708  000164  B09E               	btfsc	3998,0,c	;volatile
 16709                           
 16710                           ;drv_mrf_miwi_24j40.c: 1993: {
 16711                           ;drv_mrf_miwi_24j40.c: 1994: if (PIE1bits.TMR1IE)
 16712  000166  A09D               	btfss	3997,0,c	;volatile
 16713  000168  D005               	goto	i2l7402
 16714                           
 16715                           ;drv_mrf_miwi_24j40.c: 1995: {
 16716                           ;drv_mrf_miwi_24j40.c: 1997: PIR1bits.TMR1IF = 0;
 16717  00016A  909E               	bcf	3998,0,c	;volatile
 16718                           
 16719                           ;drv_mrf_miwi_24j40.c: 1998: timerExtension1++;
 16720  00016C  2A41               	incf	_timerExtension1,f,c	;volatile
 16721                           
 16722                           ;drv_mrf_miwi_24j40.c: 1999: if (timerExtension1 == 0)
 16723  00016E  5041               	movf	_timerExtension1,w,c	;volatile
 16724  000170  E101               	bnz	i2l7402
 16725                           
 16726                           ;drv_mrf_miwi_24j40.c: 2000: {
 16727                           ;drv_mrf_miwi_24j40.c: 2001: timerExtension2++;
 16728  000172  2A42               	incf	_timerExtension2,f,c	;volatile
 16729  000174                     i2l7402:
 16730                           
 16731                           ;drv_mrf_miwi_24j40.c: 2002: }
 16732                           ;drv_mrf_miwi_24j40.c: 2003: }
 16733                           ;drv_mrf_miwi_24j40.c: 2004: }
 16734                           ;drv_mrf_miwi_24j40.c: 2006: UserInterruptHandler();
 16735  000174  EC27  F01A         	call	_UserInterruptHandler	;wreg free
 16736  000178  C010  FFF4         	movff	??_high_isr+8,prodh
 16737  00017C  C00F  FFF3         	movff	??_high_isr+7,prodl
 16738  000180  C00E  FFDA         	movff	??_high_isr+6,fsr2h
 16739  000184  C00D  FFD9         	movff	??_high_isr+5,fsr2l
 16740  000188  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16741  00018A  0011               	retfie		f
 16742  00018C                     __end_of_high_isr:
 16743                           	opt stack 0
 16744                           tblptru	equ	0xFF8
 16745                           tblptrh	equ	0xFF7
 16746                           tblptrl	equ	0xFF6
 16747                           tablat	equ	0xFF5
 16748                           prodh	equ	0xFF4
 16749                           prodl	equ	0xFF3
 16750                           intcon	equ	0xFF2
 16751                           intcon2	equ	0xFF1
 16752                           postinc0	equ	0xFEE
 16753                           plusw0	equ	0xFEB
 16754                           wreg	equ	0xFE8
 16755                           indf1	equ	0xFE7
 16756                           postinc1	equ	0xFE6
 16757                           postdec1	equ	0xFE5
 16758                           fsr1h	equ	0xFE2
 16759                           fsr1l	equ	0xFE1
 16760                           indf2	equ	0xFDF
 16761                           postinc2	equ	0xFDE
 16762                           postdec2	equ	0xFDD
 16763                           plusw2	equ	0xFDB
 16764                           fsr2h	equ	0xFDA
 16765                           fsr2l	equ	0xFD9
 16766                           status	equ	0xFD8
 16767                           
 16768 ;; *************** function i2_PHYSetShortRAMAddr *****************
 16769 ;; Defined at:
 16770 ;;		line 124 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 16771 ;; Parameters:    Size  Location     Type
 16772 ;;  address         1    wreg     unsigned char 
 16773 ;;  value           1    1[COMRAM] unsigned char 
 16774 ;; Auto vars:     Size  Location     Type
 16775 ;;  address         1    2[COMRAM] unsigned char 
 16776 ;;  PHYSetShortR    1    3[COMRAM] volatile unsigned char 
 16777 ;; Return value:  Size  Location     Type
 16778 ;;		None               void
 16779 ;; Registers used:
 16780 ;;		wreg, status,2, cstack
 16781 ;; Tracked objects:
 16782 ;;		On entry : 0/0
 16783 ;;		On exit  : 0/0
 16784 ;;		Unchanged: 0/0
 16785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16786 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16790 ;;Total ram usage:        3 bytes
 16791 ;; Hardware stack levels used:    1
 16792 ;; Hardware stack levels required when called:    1
 16793 ;; This function calls:
 16794 ;;		i2_SPI1_Exchange8bit
 16795 ;; This function is called by:
 16796 ;;		_high_isr
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           	psect	text75
 16801  003252                     __ptext75:
 16802                           	opt stack 0
 16803  003252                     i2_PHYSetShortRAMAddr:
 16804                           	opt stack 14
 16805                           
 16806                           ;incstack = 0
 16807                           ;i2PHYSetShortRAMAddr@address stored from wreg
 16808  003252  6E03               	movwf	i2PHYSetShortRAMAddr@address,c
 16809                           
 16810                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 16811  003254  0E00               	movlw	0
 16812  003256  B8F2               	btfsc	intcon,4,c	;volatile
 16813  003258  0E01               	movlw	1
 16814  00325A  6E04               	movwf	i2PHYSetShortRAMAddr@tmpRFIE,c	;volatile
 16815                           
 16816                           ;drv_mrf_miwi_24j40.c: 128: INTCONbits.INT0IE = 0;
 16817  00325C  98F2               	bcf	intcon,4,c	;volatile
 16818                           
 16819                           ;drv_mrf_miwi_24j40.c: 129: LATAbits.LATA5 = 0;
 16820  00325E  9A89               	bcf	3977,5,c	;volatile
 16821                           
 16822                           ;drv_mrf_miwi_24j40.c: 130: SPI1_Exchange8bit(address);
 16823  003260  5003               	movf	i2PHYSetShortRAMAddr@address,w,c
 16824  003262  ECFD  F019         	call	i2_SPI1_Exchange8bit
 16825                           
 16826                           ;drv_mrf_miwi_24j40.c: 131: SPI1_Exchange8bit(value);
 16827  003266  5002               	movf	i2PHYSetShortRAMAddr@value,w,c
 16828  003268  ECFD  F019         	call	i2_SPI1_Exchange8bit
 16829                           
 16830                           ;drv_mrf_miwi_24j40.c: 132: LATAbits.LATA5 = 1;
 16831  00326C  8A89               	bsf	3977,5,c	;volatile
 16832                           
 16833                           ;drv_mrf_miwi_24j40.c: 133: INTCONbits.INT0IE = tmpRFIE;
 16834  00326E  B004               	btfsc	i2PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
 16835  003270  D002               	bra	i2u609_45
 16836  003272  98F2               	bcf	intcon,4,c	;volatile
 16837  003274  D001               	bra	i2u609_46
 16838  003276                     i2u609_45:
 16839  003276  88F2               	bsf	intcon,4,c	;volatile
 16840  003278                     i2u609_46:
 16841  003278  0012               	return		;funcret
 16842  00327A                     __end_ofi2_PHYSetShortRAMAddr:
 16843                           	opt stack 0
 16844                           tblptru	equ	0xFF8
 16845                           tblptrh	equ	0xFF7
 16846                           tblptrl	equ	0xFF6
 16847                           tablat	equ	0xFF5
 16848                           prodh	equ	0xFF4
 16849                           prodl	equ	0xFF3
 16850                           intcon	equ	0xFF2
 16851                           intcon2	equ	0xFF1
 16852                           postinc0	equ	0xFEE
 16853                           plusw0	equ	0xFEB
 16854                           wreg	equ	0xFE8
 16855                           indf1	equ	0xFE7
 16856                           postinc1	equ	0xFE6
 16857                           postdec1	equ	0xFE5
 16858                           fsr1h	equ	0xFE2
 16859                           fsr1l	equ	0xFE1
 16860                           indf2	equ	0xFDF
 16861                           postinc2	equ	0xFDE
 16862                           postdec2	equ	0xFDD
 16863                           plusw2	equ	0xFDB
 16864                           fsr2h	equ	0xFDA
 16865                           fsr2l	equ	0xFD9
 16866                           status	equ	0xFD8
 16867                           
 16868 ;; *************** function i2_PHYGetShortRAMAddr *****************
 16869 ;; Defined at:
 16870 ;;		line 154 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 16871 ;; Parameters:    Size  Location     Type
 16872 ;;  address         1    wreg     unsigned char 
 16873 ;; Auto vars:     Size  Location     Type
 16874 ;;  address         1    1[COMRAM] unsigned char 
 16875 ;;  PHYGetShortR    1    3[COMRAM] volatile unsigned char 
 16876 ;;  PHYGetShortR    1    2[COMRAM] unsigned char 
 16877 ;; Return value:  Size  Location     Type
 16878 ;;                  1    wreg      unsigned char 
 16879 ;; Registers used:
 16880 ;;		wreg, status,2, cstack
 16881 ;; Tracked objects:
 16882 ;;		On entry : 0/0
 16883 ;;		On exit  : 0/0
 16884 ;;		Unchanged: 0/0
 16885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16887 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16889 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16890 ;;Total ram usage:        3 bytes
 16891 ;; Hardware stack levels used:    1
 16892 ;; Hardware stack levels required when called:    1
 16893 ;; This function calls:
 16894 ;;		i2_SPI1_Exchange8bit
 16895 ;; This function is called by:
 16896 ;;		_high_isr
 16897 ;; This function uses a non-reentrant model
 16898 ;;
 16899                           
 16900                           	psect	text76
 16901  003184                     __ptext76:
 16902                           	opt stack 0
 16903  003184                     i2_PHYGetShortRAMAddr:
 16904                           	opt stack 14
 16905                           
 16906                           ;incstack = 0
 16907                           ;i2PHYGetShortRAMAddr@address stored from wreg
 16908  003184  6E02               	movwf	i2PHYGetShortRAMAddr@address,c
 16909                           
 16910                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 16911                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 16912  003186  0E00               	movlw	0
 16913  003188  B8F2               	btfsc	intcon,4,c	;volatile
 16914  00318A  0E01               	movlw	1
 16915  00318C  6E04               	movwf	i2PHYGetShortRAMAddr@tmpRFIE,c	;volatile
 16916                           
 16917                           ;drv_mrf_miwi_24j40.c: 159: INTCONbits.INT0IE = 0;
 16918  00318E  98F2               	bcf	intcon,4,c	;volatile
 16919                           
 16920                           ;drv_mrf_miwi_24j40.c: 160: LATAbits.LATA5 = 0;
 16921  003190  9A89               	bcf	3977,5,c	;volatile
 16922                           
 16923                           ;drv_mrf_miwi_24j40.c: 161: SPI1_Exchange8bit(address);
 16924  003192  5002               	movf	i2PHYGetShortRAMAddr@address,w,c
 16925  003194  ECFD  F019         	call	i2_SPI1_Exchange8bit
 16926                           
 16927                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPI1_Exchange8bit(0x00);
 16928  003198  0E00               	movlw	0
 16929  00319A  ECFD  F019         	call	i2_SPI1_Exchange8bit
 16930  00319E  6E03               	movwf	i2PHYGetShortRAMAddr@toReturn,c
 16931                           
 16932                           ;drv_mrf_miwi_24j40.c: 163: LATAbits.LATA5 = 1;
 16933  0031A0  8A89               	bsf	3977,5,c	;volatile
 16934                           
 16935                           ;drv_mrf_miwi_24j40.c: 164: INTCONbits.INT0IE = tmpRFIE;
 16936  0031A2  B004               	btfsc	i2PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
 16937  0031A4  D002               	bra	i2u610_45
 16938  0031A6  98F2               	bcf	intcon,4,c	;volatile
 16939  0031A8  D001               	bra	i2u610_46
 16940  0031AA                     i2u610_45:
 16941  0031AA  88F2               	bsf	intcon,4,c	;volatile
 16942  0031AC                     i2u610_46:
 16943                           
 16944                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 16945  0031AC  5003               	movf	i2PHYGetShortRAMAddr@toReturn,w,c
 16946  0031AE  0012               	return		;funcret
 16947  0031B0                     __end_ofi2_PHYGetShortRAMAddr:
 16948                           	opt stack 0
 16949                           tblptru	equ	0xFF8
 16950                           tblptrh	equ	0xFF7
 16951                           tblptrl	equ	0xFF6
 16952                           tablat	equ	0xFF5
 16953                           prodh	equ	0xFF4
 16954                           prodl	equ	0xFF3
 16955                           intcon	equ	0xFF2
 16956                           intcon2	equ	0xFF1
 16957                           postinc0	equ	0xFEE
 16958                           plusw0	equ	0xFEB
 16959                           wreg	equ	0xFE8
 16960                           indf1	equ	0xFE7
 16961                           postinc1	equ	0xFE6
 16962                           postdec1	equ	0xFE5
 16963                           fsr1h	equ	0xFE2
 16964                           fsr1l	equ	0xFE1
 16965                           indf2	equ	0xFDF
 16966                           postinc2	equ	0xFDE
 16967                           postdec2	equ	0xFDD
 16968                           plusw2	equ	0xFDB
 16969                           fsr2h	equ	0xFDA
 16970                           fsr2l	equ	0xFD9
 16971                           status	equ	0xFD8
 16972                           
 16973 ;; *************** function i2_PHYGetLongRAMAddr *****************
 16974 ;; Defined at:
 16975 ;;		line 185 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 16976 ;; Parameters:    Size  Location     Type
 16977 ;;  address         2    1[COMRAM] unsigned int 
 16978 ;; Auto vars:     Size  Location     Type
 16979 ;;  PHYGetLongRA    1    6[COMRAM] volatile unsigned char 
 16980 ;;  PHYGetLongRA    1    5[COMRAM] unsigned char 
 16981 ;; Return value:  Size  Location     Type
 16982 ;;                  1    wreg      unsigned char 
 16983 ;; Registers used:
 16984 ;;		wreg, status,2, status,0, cstack
 16985 ;; Tracked objects:
 16986 ;;		On entry : 0/0
 16987 ;;		On exit  : 0/0
 16988 ;;		Unchanged: 0/0
 16989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16990 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16993 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16994 ;;Total ram usage:        6 bytes
 16995 ;; Hardware stack levels used:    1
 16996 ;; Hardware stack levels required when called:    1
 16997 ;; This function calls:
 16998 ;;		i2_SPI1_Exchange8bit
 16999 ;; This function is called by:
 17000 ;;		_high_isr
 17001 ;; This function uses a non-reentrant model
 17002 ;;
 17003                           
 17004                           	psect	text77
 17005  002D42                     __ptext77:
 17006                           	opt stack 0
 17007  002D42                     i2_PHYGetLongRAMAddr:
 17008                           	opt stack 14
 17009                           
 17010                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 17011                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCONbits.INT0IE;
 17012                           
 17013                           ;incstack = 0
 17014  002D42  0E00               	movlw	0
 17015  002D44  B8F2               	btfsc	intcon,4,c	;volatile
 17016  002D46  0E01               	movlw	1
 17017  002D48  6E07               	movwf	i2PHYGetLongRAMAddr@tmpRFIE,c	;volatile
 17018                           
 17019                           ;drv_mrf_miwi_24j40.c: 190: INTCONbits.INT0IE = 0;
 17020  002D4A  98F2               	bcf	intcon,4,c	;volatile
 17021                           
 17022                           ;drv_mrf_miwi_24j40.c: 191: LATAbits.LATA5 = 0;
 17023  002D4C  9A89               	bcf	3977,5,c	;volatile
 17024                           
 17025                           ;drv_mrf_miwi_24j40.c: 192: SPI1_Exchange8bit(((address >> 3)&0x7F) | 0x80);
 17026  002D4E  C002  F004         	movff	i2PHYGetLongRAMAddr@address,??i2_PHYGetLongRAMAddr
 17027  002D52  C003  F005         	movff	i2PHYGetLongRAMAddr@address+1,??i2_PHYGetLongRAMAddr+1
 17028  002D56  90D8               	bcf	status,0,c
 17029  002D58  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 17030  002D5A  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 17031  002D5C  90D8               	bcf	status,0,c
 17032  002D5E  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 17033  002D60  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 17034  002D62  90D8               	bcf	status,0,c
 17035  002D64  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 17036  002D66  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 17037  002D68  5004               	movf	??i2_PHYGetLongRAMAddr,w,c
 17038  002D6A  0B7F               	andlw	127
 17039  002D6C  0980               	iorlw	128
 17040  002D6E  ECFD  F019         	call	i2_SPI1_Exchange8bit
 17041                           
 17042                           ;drv_mrf_miwi_24j40.c: 193: SPI1_Exchange8bit(((address << 5)&0xE0));
 17043  002D72  3802               	swapf	i2PHYGetLongRAMAddr@address,w,c
 17044  002D74  46E8               	rlncf	wreg,f,c
 17045  002D76  0BE0               	andlw	224
 17046  002D78  ECFD  F019         	call	i2_SPI1_Exchange8bit
 17047                           
 17048                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPI1_Exchange8bit(0x00);
 17049  002D7C  0E00               	movlw	0
 17050  002D7E  ECFD  F019         	call	i2_SPI1_Exchange8bit
 17051  002D82  6E06               	movwf	i2PHYGetLongRAMAddr@toReturn,c
 17052                           
 17053                           ;drv_mrf_miwi_24j40.c: 195: LATAbits.LATA5 = 1;
 17054  002D84  8A89               	bsf	3977,5,c	;volatile
 17055                           
 17056                           ;drv_mrf_miwi_24j40.c: 196: INTCONbits.INT0IE = tmpRFIE;
 17057  002D86  B007               	btfsc	i2PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
 17058  002D88  D002               	bra	i2u611_45
 17059  002D8A  98F2               	bcf	intcon,4,c	;volatile
 17060  002D8C  D001               	bra	i2u611_46
 17061  002D8E                     i2u611_45:
 17062  002D8E  88F2               	bsf	intcon,4,c	;volatile
 17063  002D90                     i2u611_46:
 17064                           
 17065                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 17066  002D90  5006               	movf	i2PHYGetLongRAMAddr@toReturn,w,c
 17067  002D92  0012               	return		;funcret
 17068  002D94                     __end_ofi2_PHYGetLongRAMAddr:
 17069                           	opt stack 0
 17070                           tblptru	equ	0xFF8
 17071                           tblptrh	equ	0xFF7
 17072                           tblptrl	equ	0xFF6
 17073                           tablat	equ	0xFF5
 17074                           prodh	equ	0xFF4
 17075                           prodl	equ	0xFF3
 17076                           intcon	equ	0xFF2
 17077                           intcon2	equ	0xFF1
 17078                           postinc0	equ	0xFEE
 17079                           plusw0	equ	0xFEB
 17080                           wreg	equ	0xFE8
 17081                           indf1	equ	0xFE7
 17082                           postinc1	equ	0xFE6
 17083                           postdec1	equ	0xFE5
 17084                           fsr1h	equ	0xFE2
 17085                           fsr1l	equ	0xFE1
 17086                           indf2	equ	0xFDF
 17087                           postinc2	equ	0xFDE
 17088                           postdec2	equ	0xFDD
 17089                           plusw2	equ	0xFDB
 17090                           fsr2h	equ	0xFDA
 17091                           fsr2l	equ	0xFD9
 17092                           status	equ	0xFD8
 17093                           
 17094 ;; *************** function i2_SPI1_Exchange8bit *****************
 17095 ;; Defined at:
 17096 ;;		line 52 in file "../src/system_config/miwikit_pic18f46j50_24j40/spi.c"
 17097 ;; Parameters:    Size  Location     Type
 17098 ;;  data            1    wreg     unsigned char 
 17099 ;; Auto vars:     Size  Location     Type
 17100 ;;  data            1    0[COMRAM] unsigned char 
 17101 ;; Return value:  Size  Location     Type
 17102 ;;                  1    wreg      unsigned char 
 17103 ;; Registers used:
 17104 ;;		wreg, status,2
 17105 ;; Tracked objects:
 17106 ;;		On entry : 0/0
 17107 ;;		On exit  : 0/0
 17108 ;;		Unchanged: 0/0
 17109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17114 ;;Total ram usage:        1 bytes
 17115 ;; Hardware stack levels used:    1
 17116 ;; This function calls:
 17117 ;;		Nothing
 17118 ;; This function is called by:
 17119 ;;		i2_PHYSetShortRAMAddr
 17120 ;;		i2_PHYGetShortRAMAddr
 17121 ;;		i2_PHYGetLongRAMAddr
 17122 ;; This function uses a non-reentrant model
 17123 ;;
 17124                           
 17125                           	psect	text78
 17126  0033FA                     __ptext78:
 17127                           	opt stack 0
 17128  0033FA                     i2_SPI1_Exchange8bit:
 17129                           	opt stack 14
 17130                           
 17131                           ;incstack = 0
 17132                           ;i2SPI1_Exchange8bit@data stored from wreg
 17133  0033FA  6E01               	movwf	i2SPI1_Exchange8bit@data,c
 17134                           
 17135                           ;spi.c: 54: SSP1CON1bits.WCOL = 0;
 17136  0033FC  9EC6               	bcf	4038,7,c	;volatile
 17137                           
 17138                           ;spi.c: 56: SSP1BUF = data;
 17139  0033FE  C001  FFC9         	movff	i2SPI1_Exchange8bit@data,4041	;volatile
 17140  003402                     i2l793:
 17141  003402  A0C7               	btfss	4039,0,c	;volatile
 17142  003404  D7FE               	goto	i2l793
 17143                           
 17144                           ;spi.c: 59: }
 17145                           ;spi.c: 61: return (SSP1BUF);
 17146  003406  50C9               	movf	4041,w,c	;volatile
 17147  003408  0012               	return		;funcret
 17148  00340A                     __end_ofi2_SPI1_Exchange8bit:
 17149                           	opt stack 0
 17150                           tblptru	equ	0xFF8
 17151                           tblptrh	equ	0xFF7
 17152                           tblptrl	equ	0xFF6
 17153                           tablat	equ	0xFF5
 17154                           prodh	equ	0xFF4
 17155                           prodl	equ	0xFF3
 17156                           intcon	equ	0xFF2
 17157                           intcon2	equ	0xFF1
 17158                           postinc0	equ	0xFEE
 17159                           plusw0	equ	0xFEB
 17160                           wreg	equ	0xFE8
 17161                           indf1	equ	0xFE7
 17162                           postinc1	equ	0xFE6
 17163                           postdec1	equ	0xFE5
 17164                           fsr1h	equ	0xFE2
 17165                           fsr1l	equ	0xFE1
 17166                           indf2	equ	0xFDF
 17167                           postinc2	equ	0xFDE
 17168                           postdec2	equ	0xFDD
 17169                           plusw2	equ	0xFDB
 17170                           fsr2h	equ	0xFDA
 17171                           fsr2l	equ	0xFD9
 17172                           status	equ	0xFD8
 17173                           
 17174 ;; *************** function _UserInterruptHandler *****************
 17175 ;; Defined at:
 17176 ;;		line 205 in file "../src/system_config/miwikit_pic18f46j50_24j40/lcd.c"
 17177 ;; Parameters:    Size  Location     Type
 17178 ;;		None
 17179 ;; Auto vars:     Size  Location     Type
 17180 ;;		None
 17181 ;; Return value:  Size  Location     Type
 17182 ;;		None               void
 17183 ;; Registers used:
 17184 ;;		None
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17194 ;;Total ram usage:        0 bytes
 17195 ;; Hardware stack levels used:    1
 17196 ;; This function calls:
 17197 ;;		Nothing
 17198 ;; This function is called by:
 17199 ;;		_high_isr
 17200 ;; This function uses a non-reentrant model
 17201 ;;
 17202                           
 17203                           	psect	text79
 17204  00344E                     __ptext79:
 17205                           	opt stack 0
 17206  00344E                     _UserInterruptHandler:
 17207                           	opt stack 15
 17208                           
 17209                           ;incstack = 0
 17210  00344E  0012               	return		;funcret
 17211  003450                     __end_of_UserInterruptHandler:
 17212                           	opt stack 0
 17213                           tblptru	equ	0xFF8
 17214                           tblptrh	equ	0xFF7
 17215                           tblptrl	equ	0xFF6
 17216                           tablat	equ	0xFF5
 17217                           prodh	equ	0xFF4
 17218                           prodl	equ	0xFF3
 17219                           intcon	equ	0xFF2
 17220                           intcon2	equ	0xFF1
 17221                           postinc0	equ	0xFEE
 17222                           plusw0	equ	0xFEB
 17223                           wreg	equ	0xFE8
 17224                           indf1	equ	0xFE7
 17225                           postinc1	equ	0xFE6
 17226                           postdec1	equ	0xFE5
 17227                           fsr1h	equ	0xFE2
 17228                           fsr1l	equ	0xFE1
 17229                           indf2	equ	0xFDF
 17230                           postinc2	equ	0xFDE
 17231                           postdec2	equ	0xFDD
 17232                           plusw2	equ	0xFDB
 17233                           fsr2h	equ	0xFDA
 17234                           fsr2l	equ	0xFD9
 17235                           status	equ	0xFD8
 17236                           tblptru	equ	0xFF8
 17237                           tblptrh	equ	0xFF7
 17238                           tblptrl	equ	0xFF6
 17239                           tablat	equ	0xFF5
 17240                           prodh	equ	0xFF4
 17241                           prodl	equ	0xFF3
 17242                           intcon	equ	0xFF2
 17243                           intcon2	equ	0xFF1
 17244                           postinc0	equ	0xFEE
 17245                           plusw0	equ	0xFEB
 17246                           wreg	equ	0xFE8
 17247                           indf1	equ	0xFE7
 17248                           postinc1	equ	0xFE6
 17249                           postdec1	equ	0xFE5
 17250                           fsr1h	equ	0xFE2
 17251                           fsr1l	equ	0xFE1
 17252                           indf2	equ	0xFDF
 17253                           postinc2	equ	0xFDE
 17254                           postdec2	equ	0xFDD
 17255                           plusw2	equ	0xFDB
 17256                           fsr2h	equ	0xFDA
 17257                           fsr2l	equ	0xFD9
 17258                           status	equ	0xFD8
 17259                           
 17260                           	psect	rparam
 17261  0000                     tblptru	equ	0xFF8
 17262                           tblptrh	equ	0xFF7
 17263                           tblptrl	equ	0xFF6
 17264                           tablat	equ	0xFF5
 17265                           prodh	equ	0xFF4
 17266                           prodl	equ	0xFF3
 17267                           intcon	equ	0xFF2
 17268                           intcon2	equ	0xFF1
 17269                           postinc0	equ	0xFEE
 17270                           plusw0	equ	0xFEB
 17271                           wreg	equ	0xFE8
 17272                           indf1	equ	0xFE7
 17273                           postinc1	equ	0xFE6
 17274                           postdec1	equ	0xFE5
 17275                           fsr1h	equ	0xFE2
 17276                           fsr1l	equ	0xFE1
 17277                           indf2	equ	0xFDF
 17278                           postinc2	equ	0xFDE
 17279                           postdec2	equ	0xFDD
 17280                           plusw2	equ	0xFDB
 17281                           fsr2h	equ	0xFDA
 17282                           fsr2l	equ	0xFD9
 17283                           status	equ	0xFD8
 17284                           
 17285                           	psect	temp
 17286  00004A                     btemp:
 17287                           	opt stack 0
 17288  00004A                     	ds	1
 17289  0000                     int$flags	set	btemp
 17290                           tblptru	equ	0xFF8
 17291                           tblptrh	equ	0xFF7
 17292                           tblptrl	equ	0xFF6
 17293                           tablat	equ	0xFF5
 17294                           prodh	equ	0xFF4
 17295                           prodl	equ	0xFF3
 17296                           intcon	equ	0xFF2
 17297                           intcon2	equ	0xFF1
 17298                           postinc0	equ	0xFEE
 17299                           plusw0	equ	0xFEB
 17300                           wreg	equ	0xFE8
 17301                           indf1	equ	0xFE7
 17302                           postinc1	equ	0xFE6
 17303                           postdec1	equ	0xFE5
 17304                           fsr1h	equ	0xFE2
 17305                           fsr1l	equ	0xFE1
 17306                           indf2	equ	0xFDF
 17307                           postinc2	equ	0xFDE
 17308                           postdec2	equ	0xFDD
 17309                           plusw2	equ	0xFDB
 17310                           fsr2h	equ	0xFDA
 17311                           fsr2l	equ	0xFD9
 17312                           status	equ	0xFD8


Data Sizes:
    Strings     630
    Constant    156
    Data        5
    BSS         1043
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      73
    BANK0           160     76     158
    BANK1           256     24     247
    BANK2           256      0     160
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf$3954	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_40(CODE[17]), STR_39(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_38(CODE[12]), STR_37(CODE[20]), STR_36(CODE[17]), STR_35(CODE[22]), 
		 -> STR_34(CODE[22]), STR_33(CODE[25]), STR_32(CODE[11]), STR_31(CODE[11]), 
		 -> STR_30(CODE[28]), STR_29(CODE[22]), STR_28(CODE[17]), STR_27(CODE[32]), 
		 -> STR_26(CODE[33]), STR_25(CODE[16]), STR_19(CODE[29]), STR_18(CODE[31]), 
		 -> STR_17(CODE[32]), STR_16(CODE[31]), STR_15(CODE[14]), STR_14(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 33
		 -> STR_38(CODE[12]), STR_37(CODE[20]), STR_32(CODE[11]), STR_31(CODE[11]), 
		 -> STR_30(CODE[28]), STR_27(CODE[32]), STR_26(CODE[33]), STR_25(CODE[16]), 
		 -> STR_19(CODE[29]), STR_18(CODE[31]), STR_17(CODE[32]), STR_16(CODE[31]), 

    sp__memset	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    EEPROM_Write@dest	PTR unsigned char  size(2) Largest target is 560
		 -> myConnectionIndex_in_PanCo(BANK0[1]), myPANID(BANK0[2]), currentChannel(BANK0[1]), ConnMode(BANK0[1]), 
		 -> role(COMRAM[1]), conn_size(COMRAM[1]), ConnectionTable(BIGRAM[560]), 

    Read_MAC_Address@myAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    EEPROM_Read@dest	PTR unsigned char  size(2) Largest target is 560
		 -> myConnectionIndex_in_PanCo(BANK0[1]), myPANID(BANK0[2]), currentChannel(BANK0[1]), ConnMode(BANK0[1]), 
		 -> myLongAddress(BANK1[8]), role(COMRAM[1]), conn_size(COMRAM[1]), ConnectionTable(BIGRAM[560]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 560
		 -> ConnectionTable(BIGRAM[560]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    SW_Ack_SrED@Dest_Addr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 560
		 -> ConnectionTable(BIGRAM[560]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 560
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[560]), RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 560
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[560]), RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S1141$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK1[138]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    S1141$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK1[138]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    Forward_Packet_PANCr_to_EDy@fw_payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    Forward_Packet_PANCr_to_EDy@EDxAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    store_connection_tb@payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    Find_Index@DestAddr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    NVMalloc@location	PTR unsigned int  size(1) Largest target is 2
		 -> nvmmyIndex(BANK0[2]), nvmRole(BANK0[2]), nvmEdc(BANK0[2]), nvmOutFrameCounter(BANK0[2]), 
		 -> nvmConnectionTable(BANK0[2]), nvmConnMode(BANK0[2]), nvmCurrentChannel(BANK0[2]), nvmMyPANID(BANK0[2]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(1) Largest target is 2
		 -> myPANID(BANK0[2]), MAC_PANID(COMRAM[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(1) Largest target is 2
		 -> MiApp_StartConnection@tmp(COMRAM[2]), MiApp_ProtocolInit@tmp(BANK0[2]), P2PTasks@tmp(BANK0[2]), myNetworkAddress(COMRAM[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 40
		 -> TxBuffer(BANK1[40]), 

    S475$DestAddress	PTR unsigned char  size(2) Largest target is 560
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[560]), RxBuffer(BANK1[138]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 560
		 -> NULL(NULL[0]), ConnectionTable(BIGRAM[560]), RxBuffer(BANK1[138]), 

    S42$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S431$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK1[138]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 

    S431$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK1[138]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK1[68]), RxBuffer(BANK1[138]), 


Critical Paths under _main in COMRAM

    _freezer_feature->_LCDDisplay
    _SYSTEM_Initialize->_DELAY_ms
    _LCD_Initialize->_DELAY_ms
    _run_star_demo->_LCDDisplay
    _STAR_DEMO_OPTIONS_MESSAGE->_LCDDisplay
    _MiMAC_PowerState->_InitMRF24J40
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _ButtonPressed->_MiWi_TickGet
    _Read_MAC_Address->_EEPROM_Read
    _NVMInit->_NVMalloc
    _MiMAC_Init->_InitMRF24J40
    _MiApp_SetChannel->_MiMAC_SetChannel
    _EEPROM_Read->_SPIPut2
    _store_connection_tb->_handle_lost_connection
    _MiMAC_SendPacket->_InitMRF24J40
    _MiMAC_SetAltAddress->_PHYSetShortRAMAddr
    _InitMRF24J40->_MiMAC_SetChannel
    _PHYGetShortRAMAddr->_SPI1_Exchange8bit
    _PHYGetLongRAMAddr->_SPI1_Exchange8bit
    _MiMAC_SetChannel->_PHYSetLongRAMAddr
    _PHYSetShortRAMAddr->_SPI1_Exchange8bit
    _PHYSetLongRAMAddr->_SPI1_Exchange8bit
    _DemoOutput_UnicastFail->_LCDDisplay
    _AddConnection->_EEPROM_Write
    _MiApp_ConnectionMode->_EEPROM_Write
    _EEPROM_Write->_SPIPut2
    _SPIGet2->_SPIPut2
    _DemoOutput_Instruction->_LCDDisplay
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Update->_LCD_WriteCmd
    _LCD_Update->_LCD_WriteData
    _LCD_WriteData->_SPIPut2
    _LCD_Erase->_DELAY_ms
    _LCD_WriteCmd->_SPIPut2

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_PHYGetLongRAMAddr
    i2_PHYSetShortRAMAddr->i2_SPI1_Exchange8bit
    i2_PHYGetShortRAMAddr->i2_SPI1_Exchange8bit
    i2_PHYGetLongRAMAddr->i2_SPI1_Exchange8bit

Critical Paths under _main in BANK0

    _main->_Initialize_Demo
    _freezer_feature->_LCDDisplay
    _run_star_demo->_MiApp_EstablishConnection
    _STAR_DEMO_OPTIONS_MESSAGE->_LCDDisplay
    _MiApp_TransceiverPowerState->_P2PTasks
    _CheckForData->_SendPacket
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _Initialize_Demo->_MiApp_EstablishConnection
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_Forward_Packet_PANCr_to_EDy
    _SW_Ack_SrED->_SendPacket
    _Forward_Packet_PANCr_to_EDy->_MiApp_UnicastConnection
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _DemoOutput_UnicastFail->_LCDDisplay
    _DemoOutput_Instruction->_LCDDisplay
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _Run_Demo->_run_star_demo
    _run_star_demo->_MiApp_EstablishConnection
    _Initialize_Demo->_MiApp_EstablishConnection

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 1651006
                                             75 BANK0      1     1      0
                _DemoOutput_Greeting
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                      1     1      0   21431
                                             23 BANK0      1     1      0
                      _ButtonPressed
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    5650
                           _DELAY_ms
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2867
                           _DELAY_ms
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0 1209771
                      _run_star_demo
 ---------------------------------------------------------------------------------
 (2) _run_star_demo                                       13    13      0 1209771
                                             12 BANK1     12    12      0
                      _ButtonPressed
                       _CheckForData
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
                         _LCDDisplay
                   _LCD_BacklightOFF
                    _LCD_BacklightON
                          _LCD_Erase
                         _LCD_Update
               _MiApp_ConnectionMode
               _MiApp_DiscardMessage
          _MiApp_EstablishConnection
             _MiApp_MessageAvailable
                   _MiApp_SetChannel
        _MiApp_TransceiverPowerState
            _MiApp_UnicastConnection
                  _MiApp_UnicastStar
                       _MiWi_TickGet
          _STAR_DEMO_OPTIONS_MESSAGE
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _STAR_DEMO_OPTIONS_MESSAGE                            1     1      0   20771
                                             23 BANK0      1     1      0
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastStar                                   14    14      0  254652
                                             69 BANK0      4     4      0
                                              0 BANK1      9     9      0
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_TransceiverPowerState                          1     1      0  295669
                                             69 BANK0      1     1      0
                       _CheckForData
                       _EEPROM_Write
                   _MiMAC_PowerState
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (4) _MiMAC_PowerState                                    10    10      0   35911
                                              0 BANK0     10    10      0
                       _InitMRF24J40
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (4) _CheckForData                                         2     2      0   53316
                                             43 BANK0      2     2      0
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _LCD_BacklightON                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCD_BacklightOFF                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DemoOutput_UpdateTxRx                                2     1      1   13778
                                             20 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (4) _LCDTRXCount                                          2     1      1   13573
                                             49 COMRAM     1     0      1
                                             19 BANK0      1     1      0
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     612
                                             31 COMRAM     8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      1     1      0  390588
                                             74 BANK0      1     1      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
             _DemoOutput_Instruction
                       _EEPROM_Write
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
                   _Read_MAC_Address
 ---------------------------------------------------------------------------------
 (2) _Read_MAC_Address                                     5     3      2    3953
                                             26 COMRAM     5     3      2
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   7     7      0   59190
                                              4 BANK0      7     7      0
                        _EEPROM_Read
                       _EEPROM_Write
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
                            _NVMInit
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    2124
                                             26 COMRAM     1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             5     2      3    2062
                                             21 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           4     1      3   25909
                                              0 BANK0      4     1      3
                       _InitMRF24J40
 ---------------------------------------------------------------------------------
 (3) _MiApp_SetChannel                                     1     1      0   17430
                                             30 COMRAM     1     1      0
                       _EEPROM_Write
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          4     0      4    3152
                                             22 COMRAM     4     0      4
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _MiApp_EstablishConnection                           18    17      1  255236
                                             69 BANK0      5     4      1
                                              0 BANK1     12    12      0
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0  201378
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            22    22      0  201378
                                             56 BANK0     13    13      0
                      _AddConnection
                       _EEPROM_Write
                         _Find_Index
        _Forward_Packet_PANCr_to_EDy
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                        _SW_Ack_SrED
                         _SendPacket
                      _isSameAddress
                _store_connection_tb
 ---------------------------------------------------------------------------------
 (6) _store_connection_tb                                  8     6      2     975
                                             28 COMRAM     6     4      2
             _handle_lost_connection
 ---------------------------------------------------------------------------------
 (7) _handle_lost_connection                               7     7      0     192
                                             21 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (6) _SW_Ack_SrED                                          2     0      2   52713
                                             43 BANK0      2     0      2
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                 8     8      0     408
                                             21 COMRAM     8     8      0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _Forward_Packet_PANCr_to_EDy                          7     2      5   74825
                                             49 BANK0      7     2      5
             _DemoOutput_UnicastFail
            _MiApp_UnicastConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_UnicastConnection                              2     1      1   53365
                                             47 BANK0      2     1      1
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (8) _MiApp_UnicastAddress                                 4     0      4   52997
                                             43 BANK0      4     0      4
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _SendPacket                                          16    10      6   52620
                                             27 BANK0     16    10      6
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (5) _MiMAC_SendPacket                                    27    17     10   46708
                                              0 BANK0     27    17     10
                       _InitMRF24J40
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (3) _MiWi_TickGet                                        10     6      4     516
                                             21 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _MiMAC_SetAltAddress                                  2     1      1    4887
                                             25 COMRAM     2     1      1
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (6) _InitMRF24J40                                        20    20      0   25608
                                             30 COMRAM    20    20      0
                   _MiMAC_SetChannel
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (7) _PHYGetShortRAMAddr                                   3     3      0     180
                                             22 COMRAM     3     3      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _PHYGetLongRAMAddr                                    6     4      2     614
                                             22 COMRAM     6     4      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _MiMAC_SetChannel                                     2     1      1   12324
                                             28 COMRAM     2     1      1
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (6) _PHYSetShortRAMAddr                                   3     2      1    3770
                                             22 COMRAM     3     2      1
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _PHYSetLongRAMAddr                                    6     3      3    8144
                                             22 COMRAM     6     3      3
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI1_Exchange8bit                                    1     1      0      42
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _DemoOutput_UnicastFail                               0     0      0   20729
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (6) _Find_Index                                           5     3      2     483
                                             21 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        7     7      0    7057
                                             29 COMRAM     7     7      0
                       _EEPROM_Write
                  _Total_Connections
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     3      4     780
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0     276
                                             21 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MiApp_ConnectionMode                                 2     2      0    5106
                                             29 COMRAM     2     2      0
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (6) _EEPROM_Write                                         7     3      4    5022
                                             22 COMRAM     7     3      4
                           _MacroNop
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (7) _SPIGet2                                              0     0      0      42
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (7) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Instruction                               0     0      0   20729
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   23880
                                             23 BANK0      2     1      1
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   23512
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   20729
                                             49 COMRAM     1     1      0
                                             19 BANK0      4     0      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    27     12    9492
                                             33 COMRAM    16     4     12
                                              0 BANK0     19    19      0
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     138
                                             21 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     566
                                             21 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     566
                                             28 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1068
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           1     1      0     528
                                             23 COMRAM     1     1      0
                       _LCD_WriteCmd
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteData                                        1     1      0      84
                                             22 COMRAM     1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            0     0      0    3348
                           _DELAY_ms
                       _LCD_WriteCmd
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     481
                                             21 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteCmd                                         1     1      0      84
                                             22 COMRAM     1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (5) _SPIPut2                                              2     2      0      42
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _DELAY_ms                                            14    12      2    2783
                                             21 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _high_isr                                           14    14      0     859
                                              7 COMRAM    14    14      0
               _UserInterruptHandler
                i2_PHYGetLongRAMAddr
               i2_PHYGetShortRAMAddr
               i2_PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (16) i2_PHYSetShortRAMAddr                                3     2      1     245
                                              1 COMRAM     3     2      1
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (16) i2_PHYGetShortRAMAddr                                3     3      0      90
                                              1 COMRAM     3     3      0
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (16) i2_PHYGetLongRAMAddr                                 6     4      2     164
                                              1 COMRAM     6     4      2
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (17) i2_SPI1_Exchange8bit                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _UserInterruptHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DemoOutput_Greeting
     _DELAY_ms
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _Initialize_Demo
     _DemoOutput_Channel
       _DELAY_ms
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DemoOutput_ChannelError
     _DemoOutput_Instruction
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _EEPROM_Write
       _MacroNop
       _SPIGet2
         _SPIPut2
       _SPIPut2
     _MiApp_ConnectionMode
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Total_Connections
             _isSameAddress
           _EEPROM_Write
             _MacroNop
             _SPIGet2
               _SPIPut2
             _SPIPut2
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                   _DELAY_ms
                   _LCD_WriteCmd
                     _SPIPut2
                   _memset
                 _LCD_Update
                   _LCD_WriteCmd
                     _SPIPut2
                   _LCD_WriteData
                     _SPIPut2
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiMAC_DiscardPacket
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _InitMRF24J40
             _MiMAC_SetChannel
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _PHYGetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYGetShortRAMAddr
               _SPI1_Exchange8bit
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
     _MiApp_ProtocolInit
       _EEPROM_Read
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _MiApp_SetChannel
         _EEPROM_Write
           _MacroNop
           _SPIGet2
             _SPIPut2
           _SPIPut2
         _MiMAC_SetChannel
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
       _MiMAC_Init
         _InitMRF24J40
           _MiMAC_SetChannel
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _PHYGetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYGetShortRAMAddr
             _SPI1_Exchange8bit
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPI1_Exchange8bit
       _NVMInit
         _NVMalloc
     _MiApp_SetChannel
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _MiMAC_SetChannel
         _PHYSetLongRAMAddr
           _SPI1_Exchange8bit
         _PHYSetShortRAMAddr
           _SPI1_Exchange8bit
     _Read_MAC_Address
       _EEPROM_Read
         _SPIGet2
           _SPIPut2
         _SPIPut2
   _Run_Demo
     _run_star_demo
       _ButtonPressed
         _MiWi_TickGet
       _CheckForData
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _DELAY_ms
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _LCD_Erase
             _DELAY_ms
             _LCD_WriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCD_WriteCmd
               _SPIPut2
             _LCD_WriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _LCD_BacklightOFF
       _LCD_BacklightON
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _MiApp_ConnectionMode
         _EEPROM_Write
           _MacroNop
           _SPIGet2
             _SPIPut2
           _SPIPut2
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_EstablishConnection
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _Total_Connections
               _isSameAddress
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                     _DELAY_ms
                     _LCD_WriteCmd
                       _SPIPut2
                     _memset
                   _LCD_Update
                     _LCD_WriteCmd
                       _SPIPut2
                     _LCD_WriteData
                       _SPIPut2
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPI1_Exchange8bit
                           _PHYSetShortRAMAddr
                             _SPI1_Exchange8bit
                         _PHYGetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYGetShortRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             _isSameAddress
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Total_Connections
             _isSameAddress
           _EEPROM_Write
             _MacroNop
             _SPIGet2
               _SPIPut2
             _SPIPut2
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                   _DELAY_ms
                   _LCD_WriteCmd
                     _SPIPut2
                   _memset
                 _LCD_Update
                   _LCD_WriteCmd
                     _SPIPut2
                   _LCD_WriteData
                     _SPIPut2
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiMAC_DiscardPacket
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiApp_SetChannel
         _EEPROM_Write
           _MacroNop
           _SPIGet2
             _SPIPut2
           _SPIPut2
         _MiMAC_SetChannel
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
       _MiApp_TransceiverPowerState
         _CheckForData
           _MiWi_TickGet
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
         _EEPROM_Write
           _MacroNop
           _SPIGet2
             _SPIPut2
           _SPIPut2
         _MiMAC_PowerState
           _InitMRF24J40
             _MiMAC_SetChannel
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _PHYGetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYGetShortRAMAddr
               _SPI1_Exchange8bit
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _PHYGetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYGetShortRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
         _P2PTasks
           _AddConnection
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Total_Connections
             _isSameAddress
           _EEPROM_Write
             _MacroNop
             _SPIGet2
               _SPIPut2
             _SPIPut2
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                   _DELAY_ms
                   _LCD_WriteCmd
                     _SPIPut2
                   _memset
                 _LCD_Update
                   _LCD_WriteCmd
                     _SPIPut2
                   _LCD_WriteData
                     _SPIPut2
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiMAC_DiscardPacket
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
       _MiApp_UnicastStar
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _Total_Connections
               _isSameAddress
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                     _DELAY_ms
                     _LCD_WriteCmd
                       _SPIPut2
                     _memset
                   _LCD_Update
                     _LCD_WriteCmd
                       _SPIPut2
                     _LCD_WriteData
                       _SPIPut2
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPI1_Exchange8bit
                           _PHYSetShortRAMAddr
                             _SPI1_Exchange8bit
                         _PHYGetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYGetShortRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             _isSameAddress
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _MiWi_TickGet
       _STAR_DEMO_OPTIONS_MESSAGE
         _LCDDisplay
           _DELAY_ms
           _LCD_Erase
             _DELAY_ms
             _LCD_WriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCD_WriteCmd
               _SPIPut2
             _LCD_WriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _SYSTEM_Initialize
     _DELAY_ms
     _LCD_Initialize
       _DELAY_ms
       _LCD_WriteCmd
         _SPIPut2
   _TMR1_Initialize
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit

 _high_isr (ROOT)
   _UserInterruptHandler
   i2_PHYGetLongRAMAddr
     i2_SPI1_Exchange8bit
   i2_PHYGetShortRAMAddr
     i2_SPI1_Exchange8bit
   i2_PHYSetShortRAMAddr
     i2_SPI1_Exchange8bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0     230      35       14.8%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      A0      10       62.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100     18      F7       8       96.5%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      49       1       77.7%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     27E       6        0.0%
DATA                 0      0     4AE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Feb 14 03:15:27 2016

                          _SPI1_Exchange8bit 33CA                       _PUSH_BUTTON_press_time 006E  
                                          _i 0040                               _LCD_Initialize 23DE  
                        EEPROM_Write@oldRFIE 001C                          P2PTasks@final_index 00EE  
                  __end_of_MiApp_UnicastStar 26A6                         ?_MiMAC_DiscardPacket 0001  
                             ?_isSameAddress 0016                           ?_SPI1_Exchange8bit 0001  
                                         l71 1B26                                           l83 1B82  
                                         l77 1B6E                                           _t1 0076  
                                         _t2 007A                                           _t3 007E  
                                ?_LCD_Update 0001                          ___wmul@multiplicand 0018  
                        MiApp_ProtocolInit@i 00B9                    i2PHYSetShortRAMAddr@value 0002  
                                 _MiMAC_Init 3000                              _P2PCapacityInfo 0091  
                                        l112 1018                                          l105 0E9C  
                                        l202 2F56                                          l114 10A6  
                                        l117 116C                                          l109 0F5A  
                                        l143 1800                                          l160 1988  
                                        l165 1A02                                          l166 1A2A  
                                        l521 17B0                                          l185 211C  
                                        l187 2148                                          l188 215E  
                                        l517 179A                                          l525 1D2C  
                                        l622 1F28                                          l392 2E26  
                                        l544 2ABE                                          l801 339E  
                                        l473 1798                                          l553 2C32  
                                        l537 2A72                                          l467 136A  
                                        l484 14EA                                          l717 23CC  
                                        l718 23BE                                          l672 202A  
                                        l841 2E3A                                          l497 1650  
                                        l692 3078                                          l844 2E56  
                                        l793 33D2                                          l799 3394  
                                P2PTasks@tmp 00EC                  __size_of_PHYSetShortRAMAddr 0028  
                            _timer1ReloadVal 008D                          ??_SPI1_Exchange8bit 0016  
                                        _tt1 0082                                          _tt2 0100  
                __end_of_MiMAC_SetAltAddress 2CF0                              ??_AddConnection 001E  
                                LCDDisplay@i 0032                                          prod 000FF3  
                                        wreg 000FE8                                NVMInit@result 001B  
          __end_of_MiApp_EstablishConnection 1FCE                            _Total_Connections 2DE4  
                       i2_PHYSetShortRAMAddr 3252                                         l1112 290E  
                                       l1410 02C2                                         l1219 2B7A  
                                       l1350 0B10                                         l1424 0306  
                                       l1409 02FA                                         l1354 0BFC  
                                       l1346 0A1C                                         l1427 0340  
                                       l1428 0344                                         l1473 05CE  
                                       l1393 01B0                                         l1490 0776  
                                       l1475 05F4                                         l1467 055C  
                                       l1476 05F8                                         l1494 06DC  
                                       l1478 0618                                         l1923 2EBE  
                                       l1933 2FF6         __size_of_Forward_Packet_PANCr_to_EDy 009A  
                                       STR_1 FF1A                                         STR_2 FFC5  
                                       STR_3 FFB9                                         STR_5 FF9F  
                                       STR_9 FD81                       __size_of_ButtonPressed 0086  
                  DemoOutput_Channel@channel 00C7                                         u9245 2DE0  
                                       u9246 2DE2                                         u9255 324E  
                                       u9256 3250                                         u9265 3152  
                                       u9266 3154                                         u9275 2D3C  
                                       u9276 2D3E                                         u9490 17EE  
                                       u9740 1AD6                                         u9905 24EA  
                                       u9906 24EE                                         u9915 24F6  
                                       u9940 2510                                         u9916 24FA  
                                       u9860 24B8                                         u9880 24D0  
                                       u9961 2540                                         _TMR1 000FCE  
                                       u9958 2514                                         u9878 24BC  
                                       u9898 24D4                                         _MiWi FCE5  
                         ?_Total_Connections 0001                       MiApp_UnicastStar@SecEn 01DF  
                 MiMAC_SetChannel@offsetFreq 001D                                         _main 3306  
                            __end_of_SPIGet2 342E                              __end_of_NVMInit 2862  
                                       _role 0049                                         fsr1h 000FE2  
                                       fsr2h 000FDA                                         indf1 000FE7  
                                       fsr1l 000FE1                                         indf2 000FDF  
                                       fsr2l 000FD9                                         btemp 004A  
                            __end_of_SPIPut2 33A6                           __size_of_LCD_Erase 0026  
                             ??_InitMRF24J40 001F                                         prodh 000FF4  
                                       prodl 000FF3                                         start 018C  
                     __size_of_run_star_demo 0538                    __end_of_SPI1_Exchange8bit 33DA  
                           __end_of_DELAY_ms 23DE                        MiApp_ProtocolInit@tmp 00B3  
                              ?_LCD_WriteCmd 0001                                 _sprintf$3954 00B4  
                               _sprintf$3947 00B0                                 _sprintf$3948 00B2  
                        ??_Total_Connections 0016                       __end_of_LCD_Initialize 24A8  
                              _LCD_WriteData 33DA                                 ___param_bank 000010  
                          _PHYGetLongRAMAddr 2CF0                        ??_MiMAC_DiscardPacket 0016  
                       __end_of_EEPROM_Write 2A6E                           ?_PHYGetLongRAMAddr 0017  
                           __end_of_P2PTasks 17B6                 __end_of_MiApp_DiscardMessage 3436  
                              __CFG_PLLDIV$2 000000                                   _Find_Index 2740  
                 MiMAC_PowerState@PowerState 00AF                                        l10110 1B3E  
                                      l10102 1AF6                                        l10112 1B4A  
                                      l10104 1B02                                        l10124 1B98  
                                      l11014 29FA                                        l11102 0E36  
                                      l11040 2A32                                        l10136 1BD2  
                                      l10312 18E0                                        l10304 18C8  
                                      l10224 17D0                                        l10216 17C0  
                                      l11112 0E72                                        l10154 1C86  
                                      l10402 1A88                                        l11202 1222  
                                      l11210 1228                                        l10332 194A  
                                      l10316 18F0                                        l10228 17DA  
                                      l11220 1262                                        l11140 0FBC  
                                      l11212 124C                                        l11300 2304  
                                      l10502 2EB4                                        l10510 2FCE  
                                      l11054 2A5C                                        l11062 315A  
                                      l10414 1A98                                        l10238 17FA  
                                      l11222 1268                                        l11126 0EFE  
                                      l12030 1D58                                        l10512 2FD6  
                                      l10360 19D8                                        l10344 198A  
                                      l10352 19B0                                        l11224 1272  
                                      l12032 1DC6                                        l12008 1CDC  
                                      l10514 2FDA                                        l10610 02C6  
                                      l10178 2E62                                        l10258 181C  
                                      l11234 1278                                        l12042 1E16  
                                      l12018 1D30                                        l12210 0B9E  
                                      l10460 31BA                                        l10620 030A  
                                      l11068 317A                                        l10380 1A2E  
                                      l10372 1A04                                        l10268 1832  
                                      l11324 2702                                        l11236 12A2  
                                      l11172 110C                                        l11084 0E0C  
                                      l12220 0BC2                                        l12204 0AA2  
                                      l10518 2FEC                                        l10614 02E6  
                                      l11270 27C2                                        l10294 18AA  
                                      l11158 107C                                        l11094 0E14  
                                      l11086 0E10                                        l11510 1500  
                                      l10464 31CA                                        l10720 04C0  
                                      l10704 0490                                        l10632 034A  
                                      l10616 0300                                        l12144 2FA2  
                                      l11360 2014                                        l11256 2744  
                                      l11272 27C4                                        l10296 18B0  
                                      l10288 1894                                        l11192 11E2  
                                      l11432 13C4                                        l12232 0BEE  
                                      l12224 0BCA                                        l10490 2E8E  
                                      l10474 3354                                        l10810 06A4  
                                      l10706 0494                                        l10626 032C  
                                      l10618 0304                                        l10570 01C6  
                                      l12146 2FB6                                        l11370 2022  
                                      l10394 1A64                                        l10386 1A4E  
                                      l11338 273A                                        l11186 11AC  
                                      l11098 0E2E                                        l11290 225E  
                                      l11610 174A                                        l11602 1716  
                                      l11522 157E                                        l12074 2972  
                                      l12234 0BF6                                        l12314 0DE8  
                                      l12154 08E0                                        l10900 2B1A  
                                      l10492 2E96                                        l10740 050E  
                                      l10652 03A6                                        l10636 035A  
                                      l10644 0382                                        l10564 01BA  
                                      l11364 201C                                        l11356 200C  
                                      l11348 1FD2                                        l11620 175E  
                                      l12180 09E0                                        l12172 097A  
                                      l10494 2E9A                                        l10830 071C  
                                      l10806 069A                                        l10750 0536  
                                      l10718 04BC                                        l10734 04E8  
                                      l10662 03D4                                        l10654 03B8  
                                      l10638 036A                                        l10582 0204  
                                      l10590 025E                                        l10566 01BE  
                                      l10574 01CC                                        l10558 0198  
                                      l10398 1A6A                                        l11198 120C  
                                      l11286 2238                                        l11542 15F8  
                                      l11534 15A6                                        l11526 1588  
                                      l11462 1458                                        l12254 0C86  
                                      l12190 0A08                                        l12502 331E  
                                      l10912 2B2C                                        l10832 0722  
                                      l10816 06C0                                        l10744 0520  
                                      l10736 04FA                                        l10680 0444  
                                      l10648 0396                                        l10568 01C2  
                                      l11392 20AE                                        l11536 15CA  
                                      l11472 1466                                        l11448 1436  
                                      l12088 29C0                                        l12280 0D24  
                                      l10850 07B6                                        l10842 0762  
                                      l10826 06EC                                        l10762 0592  
                                      l10690 0464                                        l10658 03C6  
                                      l10666 03DA                                        l11378 202C  
                                      l11626 17A4                                        l11570 166A  
                                      l11562 1656                                        l11554 163A  
                                      l12282 0D26                                        l12266 0CCA  
                                      l12258 0C8E                                        l12274 0CEC  
                                      l12290 0D40                                        l12450 31FA  
                                      l10916 2B44                                        l10860 0814  
                                      l10756 0560                                        l10692 0468  
                                      l10684 0456                                        l10668 0416  
                                      l11468 145E                                        l11820 2AA0  
                                      l12284 0D2A                                        l10918 2B56  
                                      l10870 0866                                        l10782 0628  
                                      l10598 0286                                        l11806 3228  
                                      l12470 2B90                                        l11670 2210  
                                      l11654 21B2                                        l12198 0A24  
                                      l12286 0D32                                        l12438 31EC  
                                      l10864 0846                                        l10856 07F0  
                                      l10848 0778                                        l10792 0666  
                                      l10776 0612                                        l10768 05D2  
                                      l10880 0896                                        l11592 16EE  
                                      l11584 16E2                                        l11488 14A0  
                                      l11664 21F8                                        l11648 21A4  
                                      l11832 2ACC                                        l11824 2AB2  
                                      l11816 2A8E                                        l12296 0D52  
                                      l10874 087A                                        l10866 0858  
                                      l10882 08AE                                        l10970 2E24  
                                      l11578 16D6                                        l11922 1F78  
                                      l11754 301E                                        l11690 30E8  
                                      l12482 2BBC                                        l11834 2AD0  
                                      l12298 0D60                                        l10948 2EF4  
                                      l10964 2DE8                                        l11932 1FB4  
                                      l10894 2AF0                                        l10798 067A  
                                      l10990 2C70                                        l11678 2224  
                                      l11838 2AD8                                        l11846 2648  
                                      l10984 2C46                                        l10992 2C72  
                                      l11936 1FC0                                        l11856 269C  
                                      l11960 32D6                                        l10898 2B08  
                                      l11794 3124                                        l11858 26A2  
                                      l11884 1EB2                                        l11876 1E84  
                                      l11788 3110                                        l11984 2932  
                                      l11992 296E                                        ?_main 0001  
                                      STR_20 FFE7                MiApp_EstablishConnection@Mode 00F4  
                                      STR_21 FE8B                                        STR_14 FF81  
                                      STR_22 FEA7                                        STR_30 FE6F  
                                      STR_23 FFF0                                        STR_31 FFDC  
                                      STR_15 FF91                                        STR_32 FFD1  
                                      STR_40 FF3E                                        STR_16 FE14  
                                      STR_25 FF71                                        STR_33 FEC1  
                                      STR_17 FDD4                                        STR_34 FEDA  
                                      STR_18 FE33                                        STR_26 FDB3  
                                      STR_35 FEDA                                        STR_19 FE52  
                                      STR_27 FDF4                                        STR_28 FF60  
                                      STR_36 FF4F                                        STR_37 FF06  
                                      STR_29 FEF0                                        STR_38 FFAD  
                                      STR_39 FF2D                                        u10320 05C4  
                                      u11200 13E4                                        u11220 140C  
                                      u11150 1368                                        u11215 13FA  
                                      u10520 087A                                        u11208 13E8  
                                      u11217 13FE                                        u11170 13AE  
                                      u11500 2194                                        u11245 1426  
                                      u11238 1410                                        u11247 142A  
                                      u11520 21E8                                        _T1CON 000FCD  
                                      u11700 1F00                                        u10745 2A6A  
                                      u10746 2A6C                                        u11820 296C  
                                      u11660 2698                                  LCD_Update@i 0018  
                                      u10790 0E04                                        u11920 0930  
                                      u11930 09C8                                        u11885 1E32  
                                      u11886 1E36                      ?_DemoOutput_Instruction 0001  
                            __end_of___lwdiv 2EC8                              __end_of___lwmod 3000  
                                      i2l231 004C                                        i2l244 0142  
                                      i2l793 3402                          ??_PHYGetLongRAMAddr 0019  
                                      _TMR1H 000FCF                                        _TMR0L 000FD6  
                                      _TMR1L 000FCE                             SendPacket@tParam 00D3  
                      __size_of_CheckForData 0068                       ?_DemoOutput_UpdateTxRx 00C3  
                 __end_of_PHYGetShortRAMAddr 3158                    __end_of_Total_Connections 2E32  
                                      _RxNum 0094                       run_star_demo@select_ed 01F6  
                                      _TxNum 0096                          __size_of_LCDDisplay 0040  
              __size_of_MiApp_ConnectionMode 0034                                        _awake 0097  
                            __end_of_dpowers FD79                        ?i2_PHYSetShortRAMAddr 0002  
                           SendPacket@status 00D1                   store_connection_tb@payload 001D  
              __size_of_MiApp_UnicastAddress 001C                                  _SW_Ack_SrED 30A2  
                            __end_of_isdigit 335C                      __end_of_TMR1_Initialize 3376  
                           __end_of_NVMalloc 3100                                        tablat 000FF5  
                              InitMRF24J40@i 0032                                InitMRF24J40@j 0030  
                             ButtonPressed@t 0024                  __end_ofi2_SPI1_Exchange8bit 340A  
                                      plusw0 000FEB                                        plusw2 000FDB  
                        __size_of_LCD_Update 0078                                        status 000FD8  
                            __end_of_sprintf 08BA          __end_of_MiApp_TransceiverPowerState 2AE8  
                _MiApp_TransceiverPowerState 2A6E                       run_star_demo@update_ed 01F3  
                           EEPROM_Write@addr 0019                             EEPROM_Write@dest 0017  
                  __end_of_PHYGetLongRAMAddr 2D42                               ??_LCD_WriteCmd 0017  
                             ?_LCD_WriteData 0001                    __size_of_MiMAC_SetChannel 003E  
                       __size_of_EEPROM_Read 002C                    __size_of_Read_MAC_Address 0080  
                __end_of_DemoOutput_Greeting 3306                              ?_LCD_Initialize 0001  
                               __end_of_MiWi FD63                              __initialization 2862  
                            ??_isSameAddress 001A                    __size_of_MiMAC_SendPacket 0332  
       STAR_DEMO_OPTIONS_MESSAGE@NetworkRole 00C6                             __end_of_MacroNop 3446  
                               __end_of_main 3324                      handle_lost_connection@i 001C  
                 __size_of_MiApp_UnicastStar 009A                                high_isr@flags 0012  
                              _ButtonPressed 28EA                            _MACCurrentChannel 0090  
                  PHYGetShortRAMAddr@address 0017                      MiMAC_PowerState@results 00B4  
                               _CheckForData 2BD4       MiApp_UnicastConnection@ConnectionIndex 00DF  
             __end_of_DemoOutput_Instruction 33CA                                       ??_main 0033  
                                ?_MiMAC_Init 00AF                      _DemoOutput_ChannelError 344C  
                              __activetblptr 000002                            __end_of_LCD_Erase 32C6  
                              _run_star_demo 08BA                         __end_of_MiWi_TickGet 2E7E  
                    MiApp_SetChannel@channel 001F                         store_connection_tb@i 0022  
                       store_connection_tb@j 0021                 __size_of_store_connection_tb 00DC  
                  PHYGetShortRAMAddr@tmpRFIE 0019                             __end_of_Run_Demo 343A  
          MiApp_ProtocolInit@bNetworkFreezer 00B5                         _MiMAC_ReceivedPacket 0DF2  
                  PHYSetShortRAMAddr@address 0018                                   _SendPacket 24A8  
                                  ??_SPIGet2 0017                                    ??_NVMInit 001B  
                                     _EECON2 000FA7                                       _ANCON0 000F48  
                                     _ANCON1 000F49                                    ??_SPIPut2 0016  
                   ?_MiApp_UnicastConnection 00DE                                       _T1GCON 000F9A  
                             __CFG_WDTEN$OFF 000000                                       i2l7402 0174  
                                     i2l7362 0076                                       i2l7354 0054  
                                     i2l7374 00C2                                       i2l7382 0138  
                                     i2l7358 006E                                       i2l7390 0164  
                                     i2l7384 014C                                       i2l7378 00F6  
                                     i2l7386 0156                  __end_ofi2_PHYGetLongRAMAddr 2D94  
                                     _OSCCON 000FD3                                       _RPOR21 000EDB  
                                     _RPINR1 000EE7                                       _RPOR19 000ED9  
                  PHYSetShortRAMAddr@tmpRFIE 0019                    __size_of_MiMAC_PowerState 011E  
                i2PHYGetLongRAMAddr@toReturn 0006                        SPI1_Exchange8bit@data 0016  
                       __size_of_LCDTRXCount 003E                __size_of_UserInterruptHandler 0002  
                    ?_DemoOutput_UnicastFail 0001                   __size_of_SPI1_Exchange8bit 0010  
                             __CFG_XINST$OFF 000000                                       _TxData 0095  
                           LCD_WriteCmd@data 0017                             __end_of_high_isr 018C  
                                     ___wmul 327A                               ?_ButtonPressed 0001  
                   __size_of_freezer_feature 0028                    __size_of_MiApp_SetChannel 0028  
                                  ??___lwdiv 001A                                    ??___lwmod 0021  
                                     _fix_me 0099                                       _memset 31B0  
                                ?_Find_Index 0016                                       clear_0 286A  
                                     clear_1 287C                                       clear_2 2888  
                                     clear_3 2894                                       clear_4 28A0  
                                     _nvmEdc 00A3                                 NVMalloc@size 0016  
                             ?_run_star_demo 0001                         __end_of_InitMRF24J40 1CCE  
                               __pdataCOMRAM 0048                                    ??_isdigit 0016  
                             LCDDisplay@text 00C2                                 __mediumconst FCE4  
                      ?_MiMAC_ReceivedPacket 0001                  __size_of_DemoOutput_Channel 003E  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                 __size_of_Total_Connections 004E                                       tblptru 000FF8  
                     ??i2_PHYSetShortRAMAddr 0003                  ??_MiApp_EstablishConnection 00F5  
                                  ?_DELAY_ms 0016                                    ??_sprintf 002E  
                           ?_TMR1_Initialize 0001                            _SYSTEM_Initialize 2562  
                                  ?_P2PTasks 0001                         _MiApp_DiscardMessage 342E  
                        _PUSH_BUTTON_pressed 0093                                   __accesstop 0060  
                    __end_of__initialization 28DC                            EEPROM_Write@count 001A  
             __end_of_DemoOutput_UnicastFail 33B8                              ??_LCD_WriteData 0017  
                                  P2PTasks@i 00F3                           ?_SYSTEM_Initialize 0001  
               i2PHYGetShortRAMAddr@toReturn 0003                          __size_of_MiMAC_Init 003A  
                              ___rparam_used 000001                               _chk_sel_status 00FC  
                           _LatestConnection 008F                   __size_of_PHYGetLongRAMAddr 0052  
                      __size_of_EEPROM_Write 007E                                 ??_LCDDisplay 0032  
                 _myConnectionIndex_in_PanCo 00AE                               __pcstackCOMRAM 0001  
              MiMAC_ReceivedPacket@bIntraPAN 001D        Forward_Packet_PANCr_to_EDy@fw_payload 00E0  
                             high_isr@RxBank 0014                                 __pidataBANK0 3446  
                        ??_SYSTEM_Initialize 0024                     __size_of_Initialize_Demo 0074  
                  ??_DemoOutput_ChannelError 0016                                 ??_LCD_Update 0018  
                 i2PHYGetLongRAMAddr@address 0002                      run_star_demo@switch_val 01F5  
               ?_Forward_Packet_PANCr_to_EDy 00E0                                    ?_NVMalloc 0016  
                 SendPacket@DestinationPANID 00CA                    __size_of_LCD_BacklightOFF 0004  
                   CheckForData@firstuint8_t 00DB                              _ConnectionTable 02A0  
            __end_of_MiApp_UnicastConnection 306E                         __end_of_LCD_WriteCmd 33FA  
                 i2PHYGetLongRAMAddr@tmpRFIE 0007                        InitMRF24J40@_dcnt_705 0024  
                                 ??_DELAY_ms 0018                    _END_DEVICES_Short_Address 0200  
                                ?_SendPacket 00CA                           __end_of_LCDDisplay 2F08  
                  __end_of_SYSTEM_Initialize 260C              MiApp_TransceiverPowerState@Mode 00F4  
                               sprintf@width 00BD                        isSameAddress@Address1 0016  
                      isSameAddress@Address2 0018                                    ?_MacroNop 0001  
                               _EEPROM_Write 29F0                                   __pbssBANK0 0060  
                                 __pbssBANK1 0100                                   __pbssBANK2 0200  
                      ?_MiApp_DiscardMessage 0001                                   ??_P2PTasks 00E7  
                __size_of_MiApp_ProtocolInit 019E                          __size_of_Find_Index 0094  
                         __end_of_LCD_Update 2B60                    SendPacket@SecurityEnabled 00CF  
                             isSameAddress@i 001C                __size_ofi2_PHYGetShortRAMAddr 002C  
                            P2PTasks@FW_Stat 00EB                          InitMRF24J40@_ms_706 002C  
                           _MiMAC_SetChannel 2F46                           MiMAC_SendPacket@t1 00BD  
                         MiMAC_SendPacket@t2 00C1                        CheckForData@tmpTxData 00DA  
                  _MiApp_EstablishConnection 1E6C                     MiMAC_SetAltAddress@PANID 001A  
                           _Read_MAC_Address 2970                   PHYGetShortRAMAddr@toReturn 0018  
                            ??_ButtonPressed 0020                             _MiMAC_SendPacket 17B6  
                                  ?_Run_Demo 0001                                      ?___wmul 0016  
                      __size_of_MiWi_TickGet 004C                                      ?_memset 0016  
                            ??_run_star_demo 01EB                   __end_of_PHYSetShortRAMAddr 3252  
                   __size_of_LCD_BacklightON 0004             run_star_demo@sw_layer_ack_status 01F2  
                                 ??_NVMalloc 0019                      ??_DemoOutput_UpdateTxRx 0033  
                          ??_freezer_feature 0033                ??_Forward_Packet_PANCr_to_EDy 0033  
                     ??_MiMAC_ReceivedPacket 0016                           __CFG_OSC$INTOSCPLL 000000  
                                    _LCDText 01B6                              __CFG_WDTPS$2048 000000  
                      __end_of_AddConnection 2116                                      _RPINR21 000EFB  
                             _failureCounter 0089                                      _SSP1BUF 000FC9  
                                    _SSP2BUF 000F75                                      _SPIGet2 3424  
                               ?_SW_Ack_SrED 00DA                                      _NVMInit 27D4  
                                    _SPIPut2 3390                                    ?_high_isr 0001  
                                 ??_MacroNop 0016                 __size_of_MiMAC_SetAltAddress 0056  
         __size_of_STAR_DEMO_OPTIONS_MESSAGE 0020                      i2SPI1_Exchange8bit@data 0001  
                           ??_LCD_Initialize 0024                   ?_STAR_DEMO_OPTIONS_MESSAGE 0001  
                AddConnection@connectionSlot 0023                              _timerExtension1 0041  
                            _timerExtension2 0042                     MiApp_ConnectionMode@Mode 001F  
                           _MiMAC_PowerState 2116                             _AdditionalNodeID 00FB  
                __end_of_MiMAC_DiscardPacket 3390                              P2PTasks@tmpTick 00EF  
                         _PHYGetShortRAMAddr 312C                                   DELAY_ms@ms 0016  
                               _MiWi_TickGet 2E32                                      __Hparam 0000  
                        _store_connection_tb 2234                                      __Lparam 0000  
               __end_of_MiApp_ConnectionMode 30A2                 __end_of_MiApp_UnicastAddress 3340  
                                 ??_Run_Demo 0033                            LCD_WriteData@data 0017  
                        ?_PHYGetShortRAMAddr 0001                              __size_of___wmul 0026  
                           _MiApp_SetChannel 3202                          __size_of_SendPacket 00BA  
                                    ___lwdiv 2E7E                                      ___lwmod 2FC2  
                   ??_handle_lost_connection 0016                        __size_of_InitMRF24J40 01E6  
                                    __pcinit 2862                              __size_of_memset 002A  
             DemoOutput_ChannelError@channel 0001                                      __ramtop 0F00  
       __size_of_MiApp_TransceiverPowerState 007A                                      __ptext0 3306  
                                    __ptext1 31DA                                 ??_MiMAC_Init 0033  
                                    __ptext2 335C                                      __ptext3 2562  
                                    __ptext4 23DE                                      __ptext5 3436  
                                    __ptext6 08BA                                      __ptext7 32C6  
                                    __ptext8 260C                                      __ptext9 2A6E  
                                    _myPANID 009B                            __end_of_hexpowers FD81  
                                  _T1CONbits 000FCD                                      _dpowers FD6F  
              Initialize_Demo@freezer_enable 00F9                     ??_MiApp_MessageAvailable 0033  
                                    _rec_ack 009A                                      _isdigit 3340  
                          ??_Initialize_Demo 0033                                _myLongAddress 01D7  
                                  _MAC_PANID 0043                         ?_store_connection_tb 001D  
                     DemoOutput_Channel@Step 00C6                                      _nvmRole 00A9  
                                  _P2PStatus 0092                                    _LCD_Erase 32A0  
                       ??_PHYGetShortRAMAddr 0017                   __size_of_SYSTEM_Initialize 00AA  
                                    _sprintf 0190                       ??_MiApp_DiscardMessage 0016  
                                 ??_high_isr 0008                         end_of_initialization 28DC  
                          __end_of_octpowers FD6F                                ??_EEPROM_Read 001B  
                                    memset@c 0018                                      memset@n 001A  
                                    memset@p 001C                MiMAC_SendPacket@MACPayloadLen 00B8  
                              __Lmediumconst FCE4                              LCDDisplay@delay 00C5  
                                 _nvmMyPANID 00A5            __end_of_STAR_DEMO_OPTIONS_MESSAGE 32E6  
                            InitMRF24J40@_ms 0028                              LCDDisplay@value 00C4  
                               _InitMRF24J40 1AE8                           __end_of_MiMAC_Init 303A  
               __size_ofi2_SPI1_Exchange8bit 0010                 MiApp_UnicastConnection@SecEn 00DE  
           __size_of_MiApp_UnicastConnection 0034                      MiMAC_SetChannel@channel 001E  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc1 000FE6  
                                    postinc2 000FDE                        __end_of_isSameAddress 3184  
       DELAY_ms@cyclesRequiredForEntireDelay 0020                                 ??_Find_Index 0018  
                 run_star_demo@PressedButton 01F4                        __size_of_LCD_WriteCmd 0010  
               __size_of_DemoOutput_Greeting 0020                                    _PORTBbits 000F81  
                           NVMalloc@location 0018                 __end_of_UserInterruptHandler 3450  
                           _LCD_BacklightOFF 343E                        ??_store_connection_tb 001F  
                                 _nvmmyIndex 00AB                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISDbits 000F95                                    _TRISEbits 000F96  
                          ??_LCD_BacklightON 0016                                   ?_LCD_Erase 0001  
                                  _BankIndex 0048                            __size_of_DELAY_ms 00CE  
                              ??_LCDTRXCount 0033                   MiMAC_SendPacket@transParam 00AF  
                 MiMAC_SetAltAddress@Address 001B                    MiApp_UnicastAddress@SecEn 00DD  
                         __end_of_Find_Index 27D4                            __size_of_P2PTasks 0496  
                               _LCD_WriteCmd 33EA                 __size_ofi2_PHYGetLongRAMAddr 0052  
                        __end_of_EEPROM_Read 312C                freezer_feature@PressedButton1 00C6  
                             __end_of___wmul 32A0              __size_of_handle_lost_connection 005E  
                   PHYGetLongRAMAddr@address 0017                                __pidataCOMRAM 3449  
         __size_of_MiApp_EstablishConnection 0162                               __end_of_memset 31DA  
                 __end_of_DemoOutput_Channel 2FC2                    Read_MAC_Address@myAddress 001B  
                   PHYSetLongRAMAddr@address 0017              __size_of_MiApp_MessageAvailable 000C  
                   __end_of_MiMAC_SetChannel 2F84                            __size_of_NVMalloc 002E  
                        start_initialization 2862                     __end_of_Read_MAC_Address 29F0  
                   PHYGetLongRAMAddr@tmpRFIE 001C                     __end_of_MiMAC_SendPacket 1AE8  
                               ??_SendPacket 00D0                         _MiApp_ConnectionMode 306E  
               MiMAC_SendPacket@headerLength 00C7                         _MiApp_UnicastAddress 3324  
              __size_ofi2_PHYSetShortRAMAddr 0028                     PHYSetLongRAMAddr@tmpRFIE 001C  
                       __size_of_SW_Ack_SrED 0030                              high_isr@results 0011  
                    EEPROM_Write@PageCounter 001D            Forward_Packet_PANCr_to_EDy@status 00E5  
                          __size_of_MacroNop 0004                               _currentChannel 00AD  
                      __end_of_LCD_WriteData 33EA                          __end_of_LCDTRXCount 2F46  
MiApp_EstablishConnection@connectionInterval 01E1                     __size_of_TMR1_Initialize 001A  
                   ??_DemoOutput_Instruction 0033                              _freezer_feature 31DA  
                                   ??___wmul 001A            MiApp_UnicastAddress@PermanentAddr 00DC  
                i2PHYGetShortRAMAddr@address 0002                                  __pdataBANK0 00FB  
                         __end_of_SendPacket 2562                          _MiMAC_SetAltAddress 2C9A  
                                   ??_memset 001C                            __size_of_Run_Demo 0004  
               __end_ofi2_PHYGetShortRAMAddr 31B0                     __end_of_MiMAC_PowerState 2234  
             __size_of_DemoOutput_UpdateTxRx 000E                                  __pbssBIGRAM 02A0  
                    MiWi_TickGet@currentTime 001C                __end_of_DemoOutput_UpdateTxRx 3418  
                i2PHYGetShortRAMAddr@tmpRFIE 0004                                  __pbssCOMRAM 0033  
                              __pcstackBANK0 00AF                                __pcstackBANK1 01DF  
                i2PHYSetShortRAMAddr@address 0003                        ?_MiApp_ConnectionMode 0001  
                        SendPacket@Broadcast 00D2                                  ??_LCD_Erase 0024  
     MiApp_UnicastAddress@DestinationAddress 00DA                        ?_MiApp_UnicastAddress 00DA  
                               _isdigit$4178 0017                                     ?_SPIGet2 0001  
                                   ?_NVMInit 0001                   __end_of_MiApp_ProtocolInit 1E6C  
                                   ?_SPIPut2 0001                           _PHYSetShortRAMAddr 322A  
                 MiApp_EstablishConnection@i 01EA                     __end_of_MiApp_SetChannel 322A  
                          Read_MAC_Address@i 001F                       _handle_lost_connection 2C3C  
                       ?_MiMAC_SetAltAddress 001A                       PHYSetLongRAMAddr@value 0019  
                                MiMAC_Init@i 00B2                      PHYSetShortRAMAddr@value 0017  
                          __size_of_high_isr 0184                                  sprintf@flag 00C0  
                i2PHYSetShortRAMAddr@tmpRFIE 0004                 MiMAC_ReceivedPacket@addrMode 001B  
                ??_STAR_DEMO_OPTIONS_MESSAGE 0033                                  _EEPROM_Read 3100  
                                sprintf@prec 00BC                          ?_PHYSetShortRAMAddr 0017  
                        MiMAC_SendPacket@loc 00C9                       _MiApp_MessageAvailable 3418  
               ?_MiApp_TransceiverPowerState 0001                         _UserInterruptHandler 344E  
                          MiMAC_SendPacket@i 00C8                             ___lwdiv@dividend 0016  
                    _MiApp_UnicastConnection 303A                     ?_DemoOutput_ChannelError 0001  
                                  __pintcode 0008                                __pmediumconst FCE4  
                            _Initialize_Demo 2B60                        __end_of_ButtonPressed 2970  
                                   ?___lwdiv 0016                                     ?___lwmod 001D  
                                  _end_nodes 0098                                ?_CheckForData 0001  
                           _DataRequestTimer 006A                                    _conn_size 0047  
                      __end_of_run_star_demo 0DF2                 Forward_Packet_PANCr_to_EDy@i 00E6  
                       ??_PHYSetShortRAMAddr 0018                            _PHYSetLongRAMAddr 2D94  
                                   ?_isdigit 0001                                     SPIPut2@v 0016  
              __size_of_MiMAC_ReceivedPacket 052E                           ?_PHYSetLongRAMAddr 0017  
                        i2_SPI1_Exchange8bit 33FA                                     _DELAY_ms 2310  
                                  _hexpowers FD79                     ??_DemoOutput_UnicastFail 0033  
                           ___lwdiv@quotient 001B                                     ?_sprintf 0022  
                      ??_MiMAC_SetAltAddress 001B                                  _LCDTRXCount 2F08  
                                   _P2PTasks 1320                          ??_PHYSetLongRAMAddr 001A  
                        _DemoOutput_Greeting 32E6                      __end_of_freezer_feature 3202  
                             ___wmul@product 001A                                     _LATAbits 000F89  
                                   _LATCbits 000F8B                                     _LATDbits 000F8C  
                                   _LATEbits 000F8D                     __end_of_LCD_BacklightOFF 3442  
                      ?_UserInterruptHandler 0001                                    _octpowers FD63  
                                   _PIE1bits 000F9D                    PHYGetLongRAMAddr@toReturn 001B  
                 DemoOutput_UpdateTxRx@RxNum 00C3                   DemoOutput_UpdateTxRx@TxNum 00C4  
                                   _PIR1bits 000F9E                                     i2u610_45 31AA  
                                   i2u610_46 31AC                                     i2u611_45 2D8E  
                                   i2u611_46 2D90                                     _PIR3bits 000FA4  
                                   i2u609_45 3276                                     i2u609_46 3278  
              ??_MiApp_TransceiverPowerState 0033                         ?i2_SPI1_Exchange8bit 0001  
                                  _rxMessage 0060                           _nvmConnectionTable 009F  
               MiMAC_SendPacket@frameControl 00C6              __size_of_DemoOutput_Instruction 0012  
                                   _SSP1CON1 000FC6                                     _SSP2CON1 000F72  
                     __size_of_AddConnection 0148                               ??_CheckForData 0033  
                                   _SSP1STAT 000FC7                                     _SSP2STAT 000F73  
               __size_of_MiMAC_DiscardPacket 001A                              _LCD_BacklightON 343A  
   MiApp_EstablishConnection@ActiveScanIndex 0001          __end_of_Forward_Packet_PANCr_to_EDy 2740  
                _Forward_Packet_PANCr_to_EDy 26A6                                  _MACRxPacket 0033  
                       ?_DemoOutput_Greeting 0001                    _STAR_DEMO_OPTIONS_MESSAGE 32C6  
                          ??_TMR1_Initialize 0016                    __end_of_PHYSetLongRAMAddr 2DE4  
                                   _NVMalloc 30D2                           MiMAC_PowerState@t1 00B0  
                         MiMAC_PowerState@t2 00B5                            ___wmul@multiplier 0016  
                                  high_isr@i 0015                       ??_MiApp_ConnectionMode 001E  
                         main@freezer_enable 00FA                       ??_MiApp_UnicastAddress 0033  
                        SendPacket@isCommand 00CE                          i2_PHYGetLongRAMAddr 2D42  
                             _nextEEPosition 008B                                     _ConnMode 00FD  
                                _INTCON2bits 000FF1               MiApp_EstablishConnection@retry 01E0  
                __size_of_PHYGetShortRAMAddr 002C        Forward_Packet_PANCr_to_EDy@EDxAddress 00E3  
                                   _MacroNop 3442                             __size_of_SPIGet2 000A  
                           __size_of_NVMInit 008E                             __size_of_SPIPut2 0016  
              __size_of_MiApp_DiscardMessage 0008              __end_of_DemoOutput_ChannelError 344E  
                  ??_MiApp_UnicastConnection 0033                      __end_of_Initialize_Demo 2BD4  
                       i2_PHYGetShortRAMAddr 3184                                     _RxBuffer 0104  
                                   __Hrparam 0000                        ??i2_SPI1_Exchange8bit 0001  
                                   _TxBuffer 018E                         ?i2_PHYGetLongRAMAddr 0002  
                               _nvmDelayTick 0072                                     __Lrparam 0000  
                                   _Run_Demo 3436                           Total_Connections@i 0017  
                    __size_of_LCD_Initialize 00CA                        MiMAC_ReceivedPacket@i 001C  
                __end_of_store_connection_tb 2310                        ??_DemoOutput_Greeting 0033  
                           __size_of___lwdiv 004A                             __size_of___lwmod 003E  
                                 sprintf@idx 00AF                                   sprintf@len 00B7  
                                 sprintf@val 00BA                            InitMRF24J40@_dcnt 0020  
                           __size_of_isdigit 001C                            ?_MiMAC_SetChannel 001D  
                            ___lwdiv@divisor 0018                       _DemoOutput_Instruction 33B8  
                          ?_Read_MAC_Address 001B                                   _IEEESeqNum 003E  
                            ___lwdiv@counter 001A                                     __ptext10 2116  
                                   __ptext11 2BD4                                     __ptext20 27D4  
                                   __ptext12 343A                                     __ptext21 30D2  
                                   __ptext13 343E                                     __ptext30 30A2  
                                   __ptext22 3000                                     __ptext14 340A  
                                   __ptext31 0DF2                                     __ptext23 3202  
                                   __ptext15 2F08                                     __ptext40 312C  
                                   __ptext32 26A6                                     __ptext24 3100  
                                   __ptext16 28EA                                     __ptext41 2CF0  
                                   __ptext33 303A                                     __ptext25 1E6C  
                                   __ptext17 2B60                                     __ptext50 2DE4  
                                   __ptext42 2F46                                     __ptext34 3324  
                                   __ptext26 3418                                     __ptext18 2970  
                                   __ptext51 342E                                     __ptext43 322A  
                                   __ptext35 24A8                                     __ptext27 1320  
                                   __ptext19 1CCE                                     __ptext60 32E6  
                                   __ptext52 3376                                     __ptext44 2D94  
                                   __ptext36 17B6                                     __ptext28 2234  
                                   __ptext61 2EC8                                     __ptext53 306E  
                                   __ptext45 33CA                                     __ptext37 2E32  
                                   __ptext29 2C3C                                     __ptext70 31B0  
                                   __ptext62 0190                                     __ptext54 29F0  
                                   __ptext46 33A6                                     __ptext38 2C9A  
                                   __ptext71 33EA                                     __ptext63 3340  
                                   __ptext55 3424                                     __ptext47 2740  
                                   __ptext39 1AE8                                     __ptext72 3390  
                                   __ptext64 327A                                     __ptext56 3442  
                                   __ptext48 1FCE                                     __ptext73 2310  
                                   __ptext65 2FC2                                     __ptext57 33B8  
                                   __ptext49 3158                                     __ptext66 2E7E  
                                   __ptext58 344C                                     __ptext75 3252  
                                   __ptext67 2AE8                                     __ptext59 2F84  
                                   __ptext76 3184                                     __ptext68 33DA  
                                   __ptext77 2D42                                     __ptext69 32A0  
                                   __ptext78 33FA                                     __ptext79 344E  
                               _SSP1CON1bits 000FC6                                _AddConnection 1FCE  
                         ??_MiMAC_SetChannel 001E                            ?_MiMAC_SendPacket 00AF  
            __size_of_DemoOutput_UnicastFail 0012                                     _high_isr 0008  
                         ??_Read_MAC_Address 001D                                 _SSP2CON1bits 000F72  
                              ?_EEPROM_Write 0017                             __size_of_sprintf 072A  
                     __size_of_isSameAddress 002C                           ??_MiMAC_SendPacket 00B9  
                         _DemoOutput_Channel 2F84                       ??_UserInterruptHandler 0001  
                              __size_of_main 001E                             ?_freezer_feature 0001  
                      ?i2_PHYGetShortRAMAddr 0001                      __end_of_LCD_BacklightON 343E  
                      ??i2_PHYGetLongRAMAddr 0004                          ?_DemoOutput_Channel 00C6  
                                 _LCDDisplay 2EC8                 __end_ofi2_PHYSetShortRAMAddr 327A  
                                   int$flags 004A                           LCDTRXCount@rxCount 0032  
                MiApp_EstablishConnection@t1 01E2                  MiApp_EstablishConnection@t2 01E6  
                         LCDTRXCount@txCount 00C2                                 _SSP1STATbits 000FC7  
                                 _LCD_Update 2AE8                          MiApp_UnicastStar@t1 01E0  
                        MiApp_UnicastStar@t2 01E4                   __size_of_PHYSetLongRAMAddr 0050  
                 MiMAC_SendPacket@MACPayload 00B6                        __CFG_CPUDIV$OSC3_PLL3 000000  
                                Find_Index@i 001A                            ?_MiMAC_PowerState 0001  
                                _OSCTUNEbits 000F9B                                   _INTCONbits 000FF2  
                             AddConnection@i 0024                         ??_DemoOutput_Channel 0033  
                    ?_handle_lost_connection 0001                           ??_MiMAC_PowerState 0033  
                             ?_AddConnection 0001                  ButtonPressed@tickDifference 0020  
                                   isdigit@c 0018                             _myNetworkAddress 0045  
                                   memset@p1 0016                                ??_SW_Ack_SrED 0033  
                             ??_EEPROM_Write 001B                                  _nvmConnMode 009D  
                       SW_Ack_SrED@Dest_Addr 00DA                       Total_Connections@count 0016  
                MiApp_ProtocolInit@initValue 00B6                         __end_of_CheckForData 2C3C  
                                   intlevel2 0000                            ?_MiApp_SetChannel 0001  
                                  sprintf@ap 00B9                                    sprintf@cp 00B6  
                                  sprintf@sp 0022                      ?_MiApp_MessageAvailable 0001  
                           ___lwmod@dividend 001D                                 ?_EEPROM_Read 0017  
                         ??_MiApp_SetChannel 001F                             ?_Initialize_Demo 0001  
                              ?_MiWi_TickGet 0016                           _MiApp_ProtocolInit 1CCE  
               SendPacket@DestinationAddress 00CC                       _DemoOutput_UnicastFail 33A6  
                              _MACInitParams 0086                          MiMAC_Init@initValue 00AF  
                             _MRF24J40Status 003F                                _isSameAddress 3158  
                        ?_MiApp_ProtocolInit 0001                   MiWi_TickGet@failureCounter 001B  
                          _MiApp_UnicastStar 260C                                     sprintf@c 00BF  
                                   sprintf@f 0024                           ?_MiApp_UnicastStar 0001  
                                 _PPSCONbits 000EFF             __size_of_DemoOutput_ChannelError 0002  
             __end_of_handle_lost_connection 2C9A                              ___lwmod@divisor 001F  
 MiApp_EstablishConnection@tmpConnectionMode 01DF                              ___lwmod@counter 0021  
                 ?_MiApp_EstablishConnection 00F4                       __size_of_LCD_WriteData 0010  
                      _DemoOutput_UpdateTxRx 340A                                   _WDTCONbits 000FC0  
                        ??_MiApp_UnicastStar 00F4               __end_of_MiApp_MessageAvailable 3424  
                        _MiMAC_DiscardPacket 3376                           _nvmOutFrameCounter 00A7  
                          _nvmCurrentChannel 00A1                         ??_MiApp_ProtocolInit 0033  
                               ?_LCDTRXCount 0032                       ??i2_PHYGetShortRAMAddr 0002  
                           EEPROM_Read@count 001A                               ??_MiWi_TickGet 001A  
                        __end_of_SW_Ack_SrED 30D2                              EEPROM_Read@addr 0019  
                            EEPROM_Read@dest 0017                                ?_InitMRF24J40 0001  
                          ?_LCD_BacklightOFF 0001             Forward_Packet_PANCr_to_EDy@index 00E2  
                            _TMR1_Initialize 335C                     MiMAC_SendPacket@IntraPAN 00C5  
               __end_of_MiMAC_ReceivedPacket 1320                           Find_Index@DestAddr 0016  
                           ?_LCD_BacklightON 0001                                  ?_LCDDisplay 00C2  
                         ??_LCD_BacklightOFF 0016  
