

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 13 19:28:32 2016

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   110                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   111  0000                     
   112                           	psect	idataBANK0
   113  003512                     __pidataBANK0:
   114                           	opt stack 0
   115                           
   116                           ;initializer for _AdditionalNodeID
   117  003512  01                 	db	1
   118                           
   119                           ;initializer for _chk_sel_status
   120  003513  01                 	db	1
   121                           
   122                           ;initializer for _ConnMode
   123  003514  03                 	db	3
   124                           
   125                           ;initializer for _role
   126  003515  01                 	db	1
   127                           
   128                           	psect	idataBANK1
   129  0034AC                     __pidataBANK1:
   130                           	opt stack 0
   131                           
   132                           ;initializer for _CharacterArray
   133  0034AC  30                 	db	48
   134  0034AD  31                 	db	49
   135  0034AE  32                 	db	50
   136  0034AF  33                 	db	51
   137  0034B0  34                 	db	52
   138  0034B1  35                 	db	53
   139  0034B2  36                 	db	54
   140  0034B3  37                 	db	55
   141  0034B4  38                 	db	56
   142  0034B5  39                 	db	57
   143  0034B6  41                 	db	65
   144  0034B7  42                 	db	66
   145  0034B8  43                 	db	67
   146  0034B9  44                 	db	68
   147  0034BA  45                 	db	69
   148  0034BB  46                 	db	70
   149                           
   150                           	psect	mediumconst
   151  00F9AE                     __pmediumconst:
   152                           	opt stack 0
   153  00F9AE  00                 	db	0
   154  00F9AF                     _MiWi:
   155                           	opt stack 0
   156  00F9AF  20                 	db	32
   157  00F9B0  B2                 	db	178
   158  00F9B1  20                 	db	32
   159  00F9B2  20                 	db	32
   160  00F9B3  20                 	db	32
   161  00F9B4  B2                 	db	178
   162  00F9B5  20                 	db	32
   163  00F9B6  20                 	db	32
   164  00F9B7  B2                 	db	178
   165  00F9B8  20                 	db	32
   166  00F9B9  B2                 	db	178
   167  00F9BA  20                 	db	32
   168  00F9BB  20                 	db	32
   169  00F9BC  20                 	db	32
   170  00F9BD  20                 	db	32
   171  00F9BE  20                 	db	32
   172  00F9BF  B2                 	db	178
   173  00F9C0  20                 	db	32
   174  00F9C1  B2                 	db	178
   175  00F9C2  0D                 	db	13
   176  00F9C3  0A                 	db	10
   177  00F9C4  B2                 	db	178
   178  00F9C5  20                 	db	32
   179  00F9C6  B2                 	db	178
   180  00F9C7  20                 	db	32
   181  00F9C8  B2                 	db	178
   182  00F9C9  20                 	db	32
   183  00F9CA  B2                 	db	178
   184  00F9CB  20                 	db	32
   185  00F9CC  20                 	db	32
   186  00F9CD  20                 	db	32
   187  00F9CE  B2                 	db	178
   188  00F9CF  20                 	db	32
   189  00F9D0  20                 	db	32
   190  00F9D1  B2                 	db	178
   191  00F9D2  20                 	db	32
   192  00F9D3  20                 	db	32
   193  00F9D4  B2                 	db	178
   194  00F9D5  20                 	db	32
   195  00F9D6  20                 	db	32
   196  00F9D7  0D                 	db	13
   197  00F9D8  0A                 	db	10
   198  00F9D9  B2                 	db	178
   199  00F9DA  20                 	db	32
   200  00F9DB  20                 	db	32
   201  00F9DC  B2                 	db	178
   202  00F9DD  20                 	db	32
   203  00F9DE  20                 	db	32
   204  00F9DF  B2                 	db	178
   205  00F9E0  20                 	db	32
   206  00F9E1  B2                 	db	178
   207  00F9E2  20                 	db	32
   208  00F9E3  B2                 	db	178
   209  00F9E4  20                 	db	32
   210  00F9E5  20                 	db	32
   211  00F9E6  B2                 	db	178
   212  00F9E7  20                 	db	32
   213  00F9E8  20                 	db	32
   214  00F9E9  B2                 	db	178
   215  00F9EA  20                 	db	32
   216  00F9EB  B2                 	db	178
   217  00F9EC  0D                 	db	13
   218  00F9ED  0A                 	db	10
   219  00F9EE  B2                 	db	178
   220  00F9EF  20                 	db	32
   221  00F9F0  20                 	db	32
   222  00F9F1  B2                 	db	178
   223  00F9F2  20                 	db	32
   224  00F9F3  20                 	db	32
   225  00F9F4  B2                 	db	178
   226  00F9F5  20                 	db	32
   227  00F9F6  B2                 	db	178
   228  00F9F7  20                 	db	32
   229  00F9F8  20                 	db	32
   230  00F9F9  B2                 	db	178
   231  00F9FA  20                 	db	32
   232  00F9FB  B2                 	db	178
   233  00F9FC  20                 	db	32
   234  00F9FD  B2                 	db	178
   235  00F9FE  20                 	db	32
   236  00F9FF  20                 	db	32
   237  00FA00  B2                 	db	178
   238  00FA01  0D                 	db	13
   239  00FA02  0A                 	db	10
   240  00FA03  B2                 	db	178
   241  00FA04  20                 	db	32
   242  00FA05  20                 	db	32
   243  00FA06  B2                 	db	178
   244  00FA07  20                 	db	32
   245  00FA08  20                 	db	32
   246  00FA09  B2                 	db	178
   247  00FA0A  20                 	db	32
   248  00FA0B  B2                 	db	178
   249  00FA0C  20                 	db	32
   250  00FA0D  20                 	db	32
   251  00FA0E  20                 	db	32
   252  00FA0F  B2                 	db	178
   253  00FA10  20                 	db	32
   254  00FA11  B2                 	db	178
   255  00FA12  20                 	db	32
   256  00FA13  20                 	db	32
   257  00FA14  20                 	db	32
   258  00FA15  B2                 	db	178
   259  00FA16  0D                 	db	13
   260  00FA17  0A                 	db	10
   261  00FA18  20                 	db	32
   262  00FA19  20                 	db	32
   263  00FA1A  20                 	db	32
   264  00FA1B  20                 	db	32
   265  00FA1C  20                 	db	32
   266  00FA1D  20                 	db	32
   267  00FA1E  20                 	db	32
   268  00FA1F  20                 	db	32
   269  00FA20  20                 	db	32
   270  00FA21  20                 	db	32
   271  00FA22  20                 	db	32
   272  00FA23  20                 	db	32
   273  00FA24  20                 	db	32
   274  00FA25  20                 	db	32
   275  00FA26  20                 	db	32
   276  00FA27  20                 	db	32
   277  00FA28  20                 	db	32
   278  00FA29  20                 	db	32
   279  00FA2A  20                 	db	32
   280  00FA2B  0D                 	db	13
   281  00FA2C  0A                 	db	10
   282  00FA2D                     __end_of_MiWi:
   283                           	opt stack 0
   284  00FA2D                     _InitConfigRegs:
   285                           	opt stack 0
   286  00FA2D  0026               	dw	38
   287  00FA2F  0284               	dw	644
   288  00FA31  0409               	dw	1033
   289  00FA33  0609               	dw	1545
   290  00FA35  080C               	dw	2060
   291  00FA37  0AC1               	dw	2753
   292  00FA39  0C77               	dw	3191
   293  00FA3B  0E63               	dw	3683
   294  00FA3D  1019               	dw	4121
   295  00FA3F  1200               	dw	4608
   296  00FA41  1400               	dw	5120
   297  00FA43  1600               	dw	5632
   298  00FA45  1838               	dw	6200
   299  00FA47  1AC8               	dw	6856
   300  00FA49  1C0D               	dw	7181
   301  00FA4B  1E00               	dw	7680
   302  00FA4D  2072               	dw	8306
   303  00FA4F  2238               	dw	8760
   304  00FA51  2438               	dw	9272
   305  00FA53  2607               	dw	9735
   306  00FA55  2800               	dw	10240
   307  00FA57  2A00               	dw	10752
   308  00FA59  2C69               	dw	11369
   309  00FA5B  2E81               	dw	11905
   310  00FA5D  307E               	dw	12414
   311  00FA5F  3296               	dw	12950
   312  00FA61  34F8               	dw	13560
   313  00FA63  3688               	dw	13960
   314  00FA65  3840               	dw	14400
   315  00FA67  3A00               	dw	14848
   316  00FA69  3CE8               	dw	15592
   317  00FA6B  3E00               	dw	15872
   318  00FA6D                     __end_of_InitConfigRegs:
   319                           	opt stack 0
   320  00FA6D                     _PVALUE:
   321                           	opt stack 0
   322  00FA6D  53                 	db	83
   323  00FA6E  53                 	db	83
   324  00FA6F  53                 	db	83
   325  00FA70  53                 	db	83
   326  00FA71  53                 	db	83
   327  00FA72  53                 	db	83
   328  00FA73  53                 	db	83
   329  00FA74  53                 	db	83
   330  00FA75  53                 	db	83
   331  00FA76  53                 	db	83
   332  00FA77  53                 	db	83
   333  00FA78  53                 	db	83
   334  00FA79  53                 	db	83
   335  00FA7A  53                 	db	83
   336  00FA7B  53                 	db	83
   337  00FA7C  53                 	db	83
   338  00FA7D  53                 	db	83
   339  00FA7E  53                 	db	83
   340  00FA7F  53                 	db	83
   341  00FA80  53                 	db	83
   342  00FA81  54                 	db	84
   343  00FA82  54                 	db	84
   344  00FA83  54                 	db	84
   345  00FA84  54                 	db	84
   346  00FA85  54                 	db	84
   347  00FA86  54                 	db	84
   348  00FA87  54                 	db	84
   349  00FA88  54                 	db	84
   350  00FA89  54                 	db	84
   351  00FA8A  54                 	db	84
   352  00FA8B  54                 	db	84
   353  00FA8C  54                 	db	84
   354  00FA8D                     __end_of_PVALUE:
   355                           	opt stack 0
   356  00FA8D                     _SVALUE:
   357                           	opt stack 0
   358  00FA8D  1D                 	db	29
   359  00FA8E  20                 	db	32
   360  00FA8F  22                 	db	34
   361  00FA90  25                 	db	37
   362  00FA91  28                 	db	40
   363  00FA92  2B                 	db	43
   364  00FA93  2E                 	db	46
   365  00FA94  30                 	db	48
   366  00FA95  33                 	db	51
   367  00FA96  36                 	db	54
   368  00FA97  39                 	db	57
   369  00FA98  3C                 	db	60
   370  00FA99  3F                 	db	63
   371  00FA9A  41                 	db	65
   372  00FA9B  44                 	db	68
   373  00FA9C  47                 	db	71
   374  00FA9D  4A                 	db	74
   375  00FA9E  4D                 	db	77
   376  00FA9F  4F                 	db	79
   377  00FAA0  52                 	db	82
   378  00FAA1  0A                 	db	10
   379  00FAA2  0D                 	db	13
   380  00FAA3  10                 	db	16
   381  00FAA4  12                 	db	18
   382  00FAA5  15                 	db	21
   383  00FAA6  18                 	db	24
   384  00FAA7  1B                 	db	27
   385  00FAA8  1E                 	db	30
   386  00FAA9  20                 	db	32
   387  00FAAA  23                 	db	35
   388  00FAAB  26                 	db	38
   389  00FAAC  29                 	db	41
   390  00FAAD                     __end_of_SVALUE:
   391                           	opt stack 0
   392  00FAAD                     _octpowers:
   393                           	opt stack 0
   394  00FAAD  0001               	dw	1
   395  00FAAF  0008               	dw	8
   396  00FAB1  0040               	dw	64
   397  00FAB3  0200               	dw	512
   398  00FAB5  1000               	dw	4096
   399  00FAB7  8000               	dw	32768
   400  00FAB9                     __end_of_octpowers:
   401                           	opt stack 0
   402  00FAB9                     _dpowers:
   403                           	opt stack 0
   404  00FAB9  0001               	dw	1
   405  00FABB  000A               	dw	10
   406  00FABD  0064               	dw	100
   407  00FABF  03E8               	dw	1000
   408  00FAC1  2710               	dw	10000
   409  00FAC3                     __end_of_dpowers:
   410                           	opt stack 0
   411  00FAC3                     _hexpowers:
   412                           	opt stack 0
   413  00FAC3  0001               	dw	1
   414  00FAC5  0010               	dw	16
   415  00FAC7  0100               	dw	256
   416  00FAC9  1000               	dw	4096
   417  00FACB                     __end_of_hexpowers:
   418                           	opt stack 0
   419  0000                     _PPSCONbits	set	3839
   420  0000                     _RPINR16	set	3830
   421  0000                     _RPINR3	set	3817
   422  0000                     _RPOR17	set	3799
   423  0000                     _ANCON0	set	3912
   424  0000                     _ANCON1	set	3913
   425  0000                     _TMR1	set	4046
   426  0000                     _EECON2	set	4007
   427  0000                     _INTCON	set	4082
   428  0000                     _INTCON2bits	set	4081
   429  0000                     _INTCON3bits	set	4080
   430  0000                     _INTCONbits	set	4082
   431  0000                     _LATA	set	3977
   432  0000                     _LATAbits	set	3977
   433  0000                     _LATB	set	3978
   434  0000                     _LATCbits	set	3979
   435  0000                     _LATD	set	3980
   436  0000                     _LATDbits	set	3980
   437  0000                     _LATE	set	3981
   438  0000                     _LATEbits	set	3981
   439  0000                     _OSCCON	set	4051
   440  0000                     _PIE1bits	set	3997
   441  0000                     _PIE3bits	set	4003
   442  0000                     _PIR1bits	set	3998
   443  0000                     _PIR3bits	set	4004
   444  0000                     _PORTBbits	set	3969
   445  0000                     _SSP1BUF	set	4041
   446  0000                     _SSP1CON1	set	4038
   447  0000                     _SSP1CON1bits	set	4038
   448  0000                     _SSP1STAT	set	4039
   449  0000                     _SSP1STATbits	set	4039
   450  0000                     _SSP2ADD	set	3956
   451  0000                     _SSP2BUF	set	3957
   452  0000                     _SSP2CON1	set	3954
   453  0000                     _SSP2CON2	set	3953
   454  0000                     _SSP2CON2bits	set	3953
   455  0000                     _SSP2STAT	set	3955
   456  0000                     _T1CON	set	4045
   457  0000                     _T1CONbits	set	4045
   458  0000                     _T1GCON	set	3994
   459  0000                     _TMR0L	set	4054
   460  0000                     _TMR1H	set	4047
   461  0000                     _TMR1L	set	4046
   462  0000                     _TRISA	set	3986
   463  0000                     _TRISAbits	set	3986
   464  0000                     _TRISB	set	3987
   465  0000                     _TRISBbits	set	3987
   466  0000                     _TRISC	set	3988
   467  0000                     _TRISCbits	set	3988
   468  0000                     _TRISD	set	3989
   469  0000                     _TRISDbits	set	3989
   470  0000                     _TRISE	set	3990
   471  0000                     _TRISEbits	set	3990
   472  0000                     _TXREG2	set	4009
   473  0000                     _TXSTA2bits	set	4008
   474  0000                     _WDTCONbits	set	4032
   475  00FACB                     STR_28:
   476  00FACB  0D                 	db	13
   477  00FACC  0A                 	db	10
   478  00FACD  20                 	db	32
   479  00FACE  20                 	db	32
   480  00FACF  20                 	db	32
   481  00FAD0  20                 	db	32
   482  00FAD1  20                 	db	32
   483  00FAD2  20                 	db	32
   484  00FAD3  20                 	db	32
   485  00FAD4  20                 	db	32
   486  00FAD5  20                 	db	32
   487  00FAD6  20                 	db	32
   488  00FAD7  20                 	db	32
   489  00FAD8  20                 	db	32
   490  00FAD9  20                 	db	32
   491  00FADA  20                 	db	32
   492  00FADB  20                 	db	32
   493  00FADC  20                 	db	32
   494  00FADD  20                 	db	32
   495  00FADE  20                 	db	32
   496  00FADF  20                 	db	32
   497  00FAE0  20                 	db	32
   498  00FAE1  20                 	db	32
   499  00FAE2  32                 	db	50	;'2'
   500  00FAE3  20                 	db	32
   501  00FAE4  74                 	db	116	;'t'
   502  00FAE5  6F                 	db	111	;'o'
   503  00FAE6  20                 	db	32
   504  00FAE7  75                 	db	117	;'u'
   505  00FAE8  6E                 	db	110	;'n'
   506  00FAE9  69                 	db	105	;'i'
   507  00FAEA  63                 	db	99	;'c'
   508  00FAEB  61                 	db	97	;'a'
   509  00FAEC  73                 	db	115	;'s'
   510  00FAED  74                 	db	116	;'t'
   511  00FAEE  20                 	db	32
   512  00FAEF  65                 	db	101	;'e'
   513  00FAF0  6E                 	db	110	;'n'
   514  00FAF1  63                 	db	99	;'c'
   515  00FAF2  72                 	db	114	;'r'
   516  00FAF3  79                 	db	121	;'y'
   517  00FAF4  70                 	db	112	;'p'
   518  00FAF5  74                 	db	116	;'t'
   519  00FAF6  65                 	db	101	;'e'
   520  00FAF7  64                 	db	100	;'d'
   521  00FAF8  20                 	db	32
   522  00FAF9  6D                 	db	109	;'m'
   523  00FAFA  65                 	db	101	;'e'
   524  00FAFB  73                 	db	115	;'s'
   525  00FAFC  73                 	db	115	;'s'
   526  00FAFD  61                 	db	97	;'a'
   527  00FAFE  67                 	db	103	;'g'
   528  00FAFF  65                 	db	101	;'e'
   529  00FB00  2E                 	db	46
   530  00FB01  20                 	db	32
   531  00FB02  4C                 	db	76	;'L'
   532  00FB03  45                 	db	69	;'E'
   533  00FB04  44                 	db	68	;'D'
   534  00FB05  20                 	db	32
   535  00FB06  32                 	db	50	;'2'
   536  00FB07  20                 	db	32
   537  00FB08  77                 	db	119	;'w'
   538  00FB09  69                 	db	105	;'i'
   539  00FB0A  6C                 	db	108	;'l'
   540  00FB0B  6C                 	db	108	;'l'
   541  00FB0C  00                 	db	0
   542  00FB0D                     STR_27:
   543  00FB0D  0D                 	db	13
   544  00FB0E  0A                 	db	10
   545  00FB0F  20                 	db	32
   546  00FB10  20                 	db	32
   547  00FB11  20                 	db	32
   548  00FB12  20                 	db	32
   549  00FB13  20                 	db	32
   550  00FB14  20                 	db	32
   551  00FB15  20                 	db	32
   552  00FB16  20                 	db	32
   553  00FB17  20                 	db	32
   554  00FB18  20                 	db	32
   555  00FB19  20                 	db	32
   556  00FB1A  20                 	db	32
   557  00FB1B  20                 	db	32
   558  00FB1C  20                 	db	32
   559  00FB1D  20                 	db	32
   560  00FB1E  20                 	db	32
   561  00FB1F  20                 	db	32
   562  00FB20  20                 	db	32
   563  00FB21  20                 	db	32
   564  00FB22  20                 	db	32
   565  00FB23  20                 	db	32
   566  00FB24  42                 	db	66	;'B'
   567  00FB25  75                 	db	117	;'u'
   568  00FB26  74                 	db	116	;'t'
   569  00FB27  74                 	db	116	;'t'
   570  00FB28  6F                 	db	111	;'o'
   571  00FB29  6E                 	db	110	;'n'
   572  00FB2A  20                 	db	32
   573  00FB2B  31                 	db	49	;'1'
   574  00FB2C  20                 	db	32
   575  00FB2D  74                 	db	116	;'t'
   576  00FB2E  6F                 	db	111	;'o'
   577  00FB2F  20                 	db	32
   578  00FB30  62                 	db	98	;'b'
   579  00FB31  72                 	db	114	;'r'
   580  00FB32  6F                 	db	111	;'o'
   581  00FB33  61                 	db	97	;'a'
   582  00FB34  64                 	db	100	;'d'
   583  00FB35  63                 	db	99	;'c'
   584  00FB36  61                 	db	97	;'a'
   585  00FB37  73                 	db	115	;'s'
   586  00FB38  74                 	db	116	;'t'
   587  00FB39  20                 	db	32
   588  00FB3A  6D                 	db	109	;'m'
   589  00FB3B  65                 	db	101	;'e'
   590  00FB3C  73                 	db	115	;'s'
   591  00FB3D  73                 	db	115	;'s'
   592  00FB3E  61                 	db	97	;'a'
   593  00FB3F  67                 	db	103	;'g'
   594  00FB40  65                 	db	101	;'e'
   595  00FB41  2E                 	db	46
   596  00FB42  20                 	db	32
   597  00FB43  50                 	db	80	;'P'
   598  00FB44  75                 	db	117	;'u'
   599  00FB45  73                 	db	115	;'s'
   600  00FB46  68                 	db	104	;'h'
   601  00FB47  20                 	db	32
   602  00FB48  42                 	db	66	;'B'
   603  00FB49  75                 	db	117	;'u'
   604  00FB4A  74                 	db	116	;'t'
   605  00FB4B  74                 	db	116	;'t'
   606  00FB4C  6F                 	db	111	;'o'
   607  00FB4D  6E                 	db	110	;'n'
   608  00FB4E  00                 	db	0
   609  00FB4F                     STR_25:
   610  00FB4F  0D                 	db	13
   611  00FB50  0A                 	db	10
   612  00FB51  20                 	db	32
   613  00FB52  20                 	db	32
   614  00FB53  20                 	db	32
   615  00FB54  20                 	db	32
   616  00FB55  20                 	db	32
   617  00FB56  20                 	db	32
   618  00FB57  20                 	db	32
   619  00FB58  20                 	db	32
   620  00FB59  20                 	db	32
   621  00FB5A  20                 	db	32
   622  00FB5B  20                 	db	32
   623  00FB5C  20                 	db	32
   624  00FB5D  20                 	db	32
   625  00FB5E  20                 	db	32
   626  00FB5F  20                 	db	32
   627  00FB60  20                 	db	32
   628  00FB61  20                 	db	32
   629  00FB62  20                 	db	32
   630  00FB63  20                 	db	32
   631  00FB64  20                 	db	32
   632  00FB65  20                 	db	32
   633  00FB66  50                 	db	80	;'P'
   634  00FB67  6F                 	db	111	;'o'
   635  00FB68  77                 	db	119	;'w'
   636  00FB69  65                 	db	101	;'e'
   637  00FB6A  72                 	db	114	;'r'
   638  00FB6B  20                 	db	32
   639  00FB6C  6F                 	db	111	;'o'
   640  00FB6D  6E                 	db	110	;'n'
   641  00FB6E  20                 	db	32
   642  00FB6F  74                 	db	116	;'t'
   643  00FB70  68                 	db	104	;'h'
   644  00FB71  65                 	db	101	;'e'
   645  00FB72  20                 	db	32
   646  00FB73  62                 	db	98	;'b'
   647  00FB74  6F                 	db	111	;'o'
   648  00FB75  61                 	db	97	;'a'
   649  00FB76  72                 	db	114	;'r'
   650  00FB77  64                 	db	100	;'d'
   651  00FB78  20                 	db	32
   652  00FB79  75                 	db	117	;'u'
   653  00FB7A  6E                 	db	110	;'n'
   654  00FB7B  74                 	db	116	;'t'
   655  00FB7C  69                 	db	105	;'i'
   656  00FB7D  6C                 	db	108	;'l'
   657  00FB7E  20                 	db	32
   658  00FB7F  4C                 	db	76	;'L'
   659  00FB80  45                 	db	69	;'E'
   660  00FB81  44                 	db	68	;'D'
   661  00FB82  20                 	db	32
   662  00FB83  31                 	db	49	;'1'
   663  00FB84  20                 	db	32
   664  00FB85  6C                 	db	108	;'l'
   665  00FB86  69                 	db	105	;'i'
   666  00FB87  67                 	db	103	;'g'
   667  00FB88  68                 	db	104	;'h'
   668  00FB89  74                 	db	116	;'t'
   669  00FB8A  73                 	db	115	;'s'
   670  00FB8B  20                 	db	32
   671  00FB8C  75                 	db	117	;'u'
   672  00FB8D  70                 	db	112	;'p'
   673  00FB8E  00                 	db	0
   674  00FB8F                     STR_26:
   675  00FB8F  0D                 	db	13
   676  00FB90  0A                 	db	10
   677  00FB91  20                 	db	32
   678  00FB92  20                 	db	32
   679  00FB93  20                 	db	32
   680  00FB94  20                 	db	32
   681  00FB95  20                 	db	32
   682  00FB96  20                 	db	32
   683  00FB97  20                 	db	32
   684  00FB98  20                 	db	32
   685  00FB99  20                 	db	32
   686  00FB9A  20                 	db	32
   687  00FB9B  20                 	db	32
   688  00FB9C  20                 	db	32
   689  00FB9D  20                 	db	32
   690  00FB9E  20                 	db	32
   691  00FB9F  20                 	db	32
   692  00FBA0  20                 	db	32
   693  00FBA1  20                 	db	32
   694  00FBA2  20                 	db	32
   695  00FBA3  20                 	db	32
   696  00FBA4  20                 	db	32
   697  00FBA5  20                 	db	32
   698  00FBA6  74                 	db	116	;'t'
   699  00FBA7  6F                 	db	111	;'o'
   700  00FBA8  20                 	db	32
   701  00FBA9  69                 	db	105	;'i'
   702  00FBAA  6E                 	db	110	;'n'
   703  00FBAB  64                 	db	100	;'d'
   704  00FBAC  69                 	db	105	;'i'
   705  00FBAD  63                 	db	99	;'c'
   706  00FBAE  61                 	db	97	;'a'
   707  00FBAF  74                 	db	116	;'t'
   708  00FBB0  65                 	db	101	;'e'
   709  00FBB1  20                 	db	32
   710  00FBB2  63                 	db	99	;'c'
   711  00FBB3  6F                 	db	111	;'o'
   712  00FBB4  6E                 	db	110	;'n'
   713  00FBB5  6E                 	db	110	;'n'
   714  00FBB6  65                 	db	101	;'e'
   715  00FBB7  63                 	db	99	;'c'
   716  00FBB8  74                 	db	116	;'t'
   717  00FBB9  69                 	db	105	;'i'
   718  00FBBA  6E                 	db	110	;'n'
   719  00FBBB  67                 	db	103	;'g'
   720  00FBBC  20                 	db	32
   721  00FBBD  77                 	db	119	;'w'
   722  00FBBE  69                 	db	105	;'i'
   723  00FBBF  74                 	db	116	;'t'
   724  00FBC0  68                 	db	104	;'h'
   725  00FBC1  20                 	db	32
   726  00FBC2  70                 	db	112	;'p'
   727  00FBC3  65                 	db	101	;'e'
   728  00FBC4  65                 	db	101	;'e'
   729  00FBC5  72                 	db	114	;'r'
   730  00FBC6  2E                 	db	46
   731  00FBC7  20                 	db	32
   732  00FBC8  50                 	db	80	;'P'
   733  00FBC9  75                 	db	117	;'u'
   734  00FBCA  73                 	db	115	;'s'
   735  00FBCB  68                 	db	104	;'h'
   736  00FBCC  00                 	db	0
   737  00FBCD                     STR_29:
   738  00FBCD  0D                 	db	13
   739  00FBCE  0A                 	db	10
   740  00FBCF  20                 	db	32
   741  00FBD0  20                 	db	32
   742  00FBD1  20                 	db	32
   743  00FBD2  20                 	db	32
   744  00FBD3  20                 	db	32
   745  00FBD4  20                 	db	32
   746  00FBD5  20                 	db	32
   747  00FBD6  20                 	db	32
   748  00FBD7  20                 	db	32
   749  00FBD8  20                 	db	32
   750  00FBD9  20                 	db	32
   751  00FBDA  20                 	db	32
   752  00FBDB  20                 	db	32
   753  00FBDC  20                 	db	32
   754  00FBDD  20                 	db	32
   755  00FBDE  20                 	db	32
   756  00FBDF  20                 	db	32
   757  00FBE0  20                 	db	32
   758  00FBE1  20                 	db	32
   759  00FBE2  20                 	db	32
   760  00FBE3  20                 	db	32
   761  00FBE4  62                 	db	98	;'b'
   762  00FBE5  65                 	db	101	;'e'
   763  00FBE6  20                 	db	32
   764  00FBE7  74                 	db	116	;'t'
   765  00FBE8  6F                 	db	111	;'o'
   766  00FBE9  67                 	db	103	;'g'
   767  00FBEA  67                 	db	103	;'g'
   768  00FBEB  6C                 	db	108	;'l'
   769  00FBEC  65                 	db	101	;'e'
   770  00FBED  64                 	db	100	;'d'
   771  00FBEE  20                 	db	32
   772  00FBEF  75                 	db	117	;'u'
   773  00FBF0  70                 	db	112	;'p'
   774  00FBF1  6F                 	db	111	;'o'
   775  00FBF2  6E                 	db	110	;'n'
   776  00FBF3  20                 	db	32
   777  00FBF4  72                 	db	114	;'r'
   778  00FBF5  65                 	db	101	;'e'
   779  00FBF6  63                 	db	99	;'c'
   780  00FBF7  65                 	db	101	;'e'
   781  00FBF8  69                 	db	105	;'i'
   782  00FBF9  76                 	db	118	;'v'
   783  00FBFA  69                 	db	105	;'i'
   784  00FBFB  6E                 	db	110	;'n'
   785  00FBFC  67                 	db	103	;'g'
   786  00FBFD  20                 	db	32
   787  00FBFE  6D                 	db	109	;'m'
   788  00FBFF  65                 	db	101	;'e'
   789  00FC00  73                 	db	115	;'s'
   790  00FC01  73                 	db	115	;'s'
   791  00FC02  61                 	db	97	;'a'
   792  00FC03  67                 	db	103	;'g'
   793  00FC04  65                 	db	101	;'e'
   794  00FC05  73                 	db	115	;'s'
   795  00FC06  2E                 	db	46
   796  00FC07  20                 	db	32
   797  00FC08  00                 	db	0
   798  00FC09                     STR_9:
   799  00FC09  0D                 	db	13
   800  00FC0A  0A                 	db	10
   801  00FC0B  0D                 	db	13
   802  00FC0C  0A                 	db	10
   803  00FC0D  43                 	db	67	;'C'
   804  00FC0E  6F                 	db	111	;'o'
   805  00FC0F  6E                 	db	110	;'n'
   806  00FC10  6E                 	db	110	;'n'
   807  00FC11  65                 	db	101	;'e'
   808  00FC12  63                 	db	99	;'c'
   809  00FC13  74                 	db	116	;'t'
   810  00FC14  69                 	db	105	;'i'
   811  00FC15  6F                 	db	111	;'o'
   812  00FC16  6E                 	db	110	;'n'
   813  00FC17  20                 	db	32
   814  00FC18  20                 	db	32
   815  00FC19  20                 	db	32
   816  00FC1A  20                 	db	32
   817  00FC1B  20                 	db	32
   818  00FC1C  50                 	db	80	;'P'
   819  00FC1D  65                 	db	101	;'e'
   820  00FC1E  65                 	db	101	;'e'
   821  00FC1F  72                 	db	114	;'r'
   822  00FC20  4C                 	db	76	;'L'
   823  00FC21  6F                 	db	111	;'o'
   824  00FC22  6E                 	db	110	;'n'
   825  00FC23  67                 	db	103	;'g'
   826  00FC24  41                 	db	65	;'A'
   827  00FC25  64                 	db	100	;'d'
   828  00FC26  64                 	db	100	;'d'
   829  00FC27  72                 	db	114	;'r'
   830  00FC28  65                 	db	101	;'e'
   831  00FC29  73                 	db	115	;'s'
   832  00FC2A  73                 	db	115	;'s'
   833  00FC2B  20                 	db	32
   834  00FC2C  20                 	db	32
   835  00FC2D  20                 	db	32
   836  00FC2E  20                 	db	32
   837  00FC2F  20                 	db	32
   838  00FC30  50                 	db	80	;'P'
   839  00FC31  65                 	db	101	;'e'
   840  00FC32  65                 	db	101	;'e'
   841  00FC33  72                 	db	114	;'r'
   842  00FC34  49                 	db	73	;'I'
   843  00FC35  6E                 	db	110	;'n'
   844  00FC36  66                 	db	102	;'f'
   845  00FC37  6F                 	db	111	;'o'
   846  00FC38  0D                 	db	13
   847  00FC39  0A                 	db	10
   848  00FC3A  00                 	db	0
   849  00FC3B                     STR_44:
   850  00FC3B  20                 	db	32
   851  00FC3C  69                 	db	105	;'i'
   852  00FC3D  73                 	db	115	;'s'
   853  00FC3E  20                 	db	32
   854  00FC3F  6E                 	db	110	;'n'
   855  00FC40  6F                 	db	111	;'o'
   856  00FC41  74                 	db	116	;'t'
   857  00FC42  20                 	db	32
   858  00FC43  73                 	db	115	;'s'
   859  00FC44  75                 	db	117	;'u'
   860  00FC45  70                 	db	112	;'p'
   861  00FC46  70                 	db	112	;'p'
   862  00FC47  6F                 	db	111	;'o'
   863  00FC48  72                 	db	114	;'r'
   864  00FC49  74                 	db	116	;'t'
   865  00FC4A  65                 	db	101	;'e'
   866  00FC4B  64                 	db	100	;'d'
   867  00FC4C  20                 	db	32
   868  00FC4D  69                 	db	105	;'i'
   869  00FC4E  6E                 	db	110	;'n'
   870  00FC4F  20                 	db	32
   871  00FC50  63                 	db	99	;'c'
   872  00FC51  75                 	db	117	;'u'
   873  00FC52  72                 	db	114	;'r'
   874  00FC53  72                 	db	114	;'r'
   875  00FC54  65                 	db	101	;'e'
   876  00FC55  6E                 	db	110	;'n'
   877  00FC56  74                 	db	116	;'t'
   878  00FC57  20                 	db	32
   879  00FC58  63                 	db	99	;'c'
   880  00FC59  6F                 	db	111	;'o'
   881  00FC5A  6E                 	db	110	;'n'
   882  00FC5B  66                 	db	102	;'f'
   883  00FC5C  69                 	db	105	;'i'
   884  00FC5D  67                 	db	103	;'g'
   885  00FC5E  75                 	db	117	;'u'
   886  00FC5F  72                 	db	114	;'r'
   887  00FC60  61                 	db	97	;'a'
   888  00FC61  74                 	db	116	;'t'
   889  00FC62  69                 	db	105	;'i'
   890  00FC63  6F                 	db	111	;'o'
   891  00FC64  6E                 	db	110	;'n'
   892  00FC65  2E                 	db	46
   893  00FC66  0D                 	db	13
   894  00FC67  0A                 	db	10
   895  00FC68  00                 	db	0
   896  00FC69                     STR_47:
   897  00FC69  50                 	db	80	;'P'
   898  00FC6A  43                 	db	67	;'C'
   899  00FC6B  20                 	db	32
   900  00FC6C  3A                 	db	58	;':'
   901  00FC6D  52                 	db	82	;'R'
   902  00FC6E  42                 	db	66	;'B'
   903  00FC6F  30                 	db	48	;'0'
   904  00FC70  20                 	db	32
   905  00FC71  6F                 	db	111	;'o'
   906  00FC72  72                 	db	114	;'r'
   907  00FC73  20                 	db	32
   908  00FC74  52                 	db	82	;'R'
   909  00FC75  42                 	db	66	;'B'
   910  00FC76  32                 	db	50	;'2'
   911  00FC77  20                 	db	32
   912  00FC78  20                 	db	32
   913  00FC79  74                 	db	116	;'t'
   914  00FC7A  6F                 	db	111	;'o'
   915  00FC7B  20                 	db	32
   916  00FC7C  42                 	db	66	;'B'
   917  00FC7D  72                 	db	114	;'r'
   918  00FC7E  6F                 	db	111	;'o'
   919  00FC7F  61                 	db	97	;'a'
   920  00FC80  64                 	db	100	;'d'
   921  00FC81  63                 	db	99	;'c'
   922  00FC82  61                 	db	97	;'a'
   923  00FC83  73                 	db	115	;'s'
   924  00FC84  74                 	db	116	;'t'
   925  00FC85  20                 	db	32
   926  00FC86  6D                 	db	109	;'m'
   927  00FC87  73                 	db	115	;'s'
   928  00FC88  67                 	db	103	;'g'
   929  00FC89  00                 	db	0
   930  00FC8A                     STR_31:
   931  00FC8A  43                 	db	67	;'C'
   932  00FC8B  6F                 	db	111	;'o'
   933  00FC8C  6E                 	db	110	;'n'
   934  00FC8D  6E                 	db	110	;'n'
   935  00FC8E  65                 	db	101	;'e'
   936  00FC8F  63                 	db	99	;'c'
   937  00FC90  74                 	db	116	;'t'
   938  00FC91  69                 	db	105	;'i'
   939  00FC92  6E                 	db	110	;'n'
   940  00FC93  67                 	db	103	;'g'
   941  00FC94  20                 	db	32
   942  00FC95  50                 	db	80	;'P'
   943  00FC96  65                 	db	101	;'e'
   944  00FC97  65                 	db	101	;'e'
   945  00FC98  72                 	db	114	;'r'
   946  00FC99  20                 	db	32
   947  00FC9A  20                 	db	32
   948  00FC9B  6F                 	db	111	;'o'
   949  00FC9C  6E                 	db	110	;'n'
   950  00FC9D  20                 	db	32
   951  00FC9E  43                 	db	67	;'C'
   952  00FC9F  68                 	db	104	;'h'
   953  00FCA0  61                 	db	97	;'a'
   954  00FCA1  6E                 	db	110	;'n'
   955  00FCA2  6E                 	db	110	;'n'
   956  00FCA3  65                 	db	101	;'e'
   957  00FCA4  6C                 	db	108	;'l'
   958  00FCA5  20                 	db	32
   959  00FCA6  25                 	db	37
   960  00FCA7  64                 	db	100	;'d'
   961  00FCA8  20                 	db	32
   962  00FCA9  00                 	db	0
   963  00FCAA                     STR_48:
   964  00FCAA  52                 	db	82	;'R'
   965  00FCAB  42                 	db	66	;'B'
   966  00FCAC  30                 	db	48	;'0'
   967  00FCAD  20                 	db	32
   968  00FCAE  3A                 	db	58	;':'
   969  00FCAF  20                 	db	32
   970  00FCB0  55                 	db	85	;'U'
   971  00FCB1  6E                 	db	110	;'n'
   972  00FCB2  69                 	db	105	;'i'
   973  00FCB3  63                 	db	99	;'c'
   974  00FCB4  61                 	db	97	;'a'
   975  00FCB5  73                 	db	115	;'s'
   976  00FCB6  74                 	db	116	;'t'
   977  00FCB7  20                 	db	32
   978  00FCB8  20                 	db	32
   979  00FCB9  20                 	db	32
   980  00FCBA  52                 	db	82	;'R'
   981  00FCBB  42                 	db	66	;'B'
   982  00FCBC  32                 	db	50	;'2'
   983  00FCBD  20                 	db	32
   984  00FCBE  3A                 	db	58	;':'
   985  00FCBF  20                 	db	32
   986  00FCC0  4E                 	db	78	;'N'
   987  00FCC1  65                 	db	101	;'e'
   988  00FCC2  78                 	db	120	;'x'
   989  00FCC3  74                 	db	116	;'t'
   990  00FCC4  20                 	db	32
   991  00FCC5  4E                 	db	78	;'N'
   992  00FCC6  6F                 	db	111	;'o'
   993  00FCC7  64                 	db	100	;'d'
   994  00FCC8  65                 	db	101	;'e'
   995  00FCC9  00                 	db	0
   996  00FCCA                     STR_23:
   997  00FCCA  0D                 	db	13
   998  00FCCB  0A                 	db	10
   999  00FCCC  20                 	db	32
  1000  00FCCD  20                 	db	32
  1001  00FCCE  20                 	db	32
  1002  00FCCF  20                 	db	32
  1003  00FCD0  20                 	db	32
  1004  00FCD1  52                 	db	82	;'R'
  1005  00FCD2  46                 	db	70	;'F'
  1006  00FCD3  20                 	db	32
  1007  00FCD4  54                 	db	84	;'T'
  1008  00FCD5  72                 	db	114	;'r'
  1009  00FCD6  61                 	db	97	;'a'
  1010  00FCD7  6E                 	db	110	;'n'
  1011  00FCD8  73                 	db	115	;'s'
  1012  00FCD9  63                 	db	99	;'c'
  1013  00FCDA  65                 	db	101	;'e'
  1014  00FCDB  69                 	db	105	;'i'
  1015  00FCDC  76                 	db	118	;'v'
  1016  00FCDD  65                 	db	101	;'e'
  1017  00FCDE  72                 	db	114	;'r'
  1018  00FCDF  3A                 	db	58	;':'
  1019  00FCE0  20                 	db	32
  1020  00FCE1  4D                 	db	77	;'M'
  1021  00FCE2  52                 	db	82	;'R'
  1022  00FCE3  46                 	db	70	;'F'
  1023  00FCE4  38                 	db	56	;'8'
  1024  00FCE5  39                 	db	57	;'9'
  1025  00FCE6  58                 	db	88	;'X'
  1026  00FCE7  41                 	db	65	;'A'
  1027  00FCE8  00                 	db	0
  1028  00FCE9                     STR_34:
  1029  00FCE9  20                 	db	32
  1030  00FCEA  43                 	db	67	;'C'
  1031  00FCEB  6F                 	db	111	;'o'
  1032  00FCEC  6E                 	db	110	;'n'
  1033  00FCED  6E                 	db	110	;'n'
  1034  00FCEE  65                 	db	101	;'e'
  1035  00FCEF  63                 	db	99	;'c'
  1036  00FCF0  74                 	db	116	;'t'
  1037  00FCF1  65                 	db	101	;'e'
  1038  00FCF2  64                 	db	100	;'d'
  1039  00FCF3  20                 	db	32
  1040  00FCF4  50                 	db	80	;'P'
  1041  00FCF5  65                 	db	101	;'e'
  1042  00FCF6  65                 	db	101	;'e'
  1043  00FCF7  72                 	db	114	;'r'
  1044  00FCF8  20                 	db	32
  1045  00FCF9  20                 	db	32
  1046  00FCFA  6F                 	db	111	;'o'
  1047  00FCFB  6E                 	db	110	;'n'
  1048  00FCFC  20                 	db	32
  1049  00FCFD  43                 	db	67	;'C'
  1050  00FCFE  68                 	db	104	;'h'
  1051  00FCFF  61                 	db	97	;'a'
  1052  00FD00  6E                 	db	110	;'n'
  1053  00FD01  6E                 	db	110	;'n'
  1054  00FD02  65                 	db	101	;'e'
  1055  00FD03  6C                 	db	108	;'l'
  1056  00FD04  20                 	db	32
  1057  00FD05  25                 	db	37
  1058  00FD06  64                 	db	100	;'d'
  1059  00FD07  00                 	db	0
  1060  00FD08                     STR_32:
  1061  00FD08  0D                 	db	13
  1062  00FD09  0A                 	db	10
  1063  00FD0A  43                 	db	67	;'C'
  1064  00FD0B  6F                 	db	111	;'o'
  1065  00FD0C  6E                 	db	110	;'n'
  1066  00FD0D  6E                 	db	110	;'n'
  1067  00FD0E  65                 	db	101	;'e'
  1068  00FD0F  63                 	db	99	;'c'
  1069  00FD10  74                 	db	116	;'t'
  1070  00FD11  69                 	db	105	;'i'
  1071  00FD12  6E                 	db	110	;'n'
  1072  00FD13  67                 	db	103	;'g'
  1073  00FD14  20                 	db	32
  1074  00FD15  50                 	db	80	;'P'
  1075  00FD16  65                 	db	101	;'e'
  1076  00FD17  65                 	db	101	;'e'
  1077  00FD18  72                 	db	114	;'r'
  1078  00FD19  20                 	db	32
  1079  00FD1A  6F                 	db	111	;'o'
  1080  00FD1B  6E                 	db	110	;'n'
  1081  00FD1C  20                 	db	32
  1082  00FD1D  43                 	db	67	;'C'
  1083  00FD1E  68                 	db	104	;'h'
  1084  00FD1F  61                 	db	97	;'a'
  1085  00FD20  6E                 	db	110	;'n'
  1086  00FD21  6E                 	db	110	;'n'
  1087  00FD22  65                 	db	101	;'e'
  1088  00FD23  6C                 	db	108	;'l'
  1089  00FD24  20                 	db	32
  1090  00FD25  00                 	db	0
  1091  00FD26                     STR_16:
  1092  00FD26  53                 	db	83	;'S'
  1093  00FD27  69                 	db	105	;'i'
  1094  00FD28  6D                 	db	109	;'m'
  1095  00FD29  70                 	db	112	;'p'
  1096  00FD2A  6C                 	db	108	;'l'
  1097  00FD2B  65                 	db	101	;'e'
  1098  00FD2C  20                 	db	32
  1099  00FD2D  53                 	db	83	;'S'
  1100  00FD2E  54                 	db	84	;'T'
  1101  00FD2F  41                 	db	65	;'A'
  1102  00FD30  52                 	db	82	;'R'
  1103  00FD31  20                 	db	32
  1104  00FD32  20                 	db	32
  1105  00FD33  20                 	db	32
  1106  00FD34  20                 	db	32
  1107  00FD35  20                 	db	32
  1108  00FD36  4D                 	db	77	;'M'
  1109  00FD37  52                 	db	82	;'R'
  1110  00FD38  46                 	db	70	;'F'
  1111  00FD39  38                 	db	56	;'8'
  1112  00FD3A  39                 	db	57	;'9'
  1113  00FD3B  58                 	db	88	;'X'
  1114  00FD3C  41                 	db	65	;'A'
  1115  00FD3D  20                 	db	32
  1116  00FD3E  4E                 	db	78	;'N'
  1117  00FD3F  6F                 	db	111	;'o'
  1118  00FD40  64                 	db	100	;'d'
  1119  00FD41  65                 	db	101	;'e'
  1120  00FD42  31                 	db	49	;'1'
  1121  00FD43  00                 	db	0
  1122  00FD44                     STR_35:
  1123  00FD44  0D                 	db	13
  1124  00FD45  0A                 	db	10
  1125  00FD46  43                 	db	67	;'C'
  1126  00FD47  6F                 	db	111	;'o'
  1127  00FD48  6E                 	db	110	;'n'
  1128  00FD49  6E                 	db	110	;'n'
  1129  00FD4A  65                 	db	101	;'e'
  1130  00FD4B  63                 	db	99	;'c'
  1131  00FD4C  74                 	db	116	;'t'
  1132  00FD4D  65                 	db	101	;'e'
  1133  00FD4E  64                 	db	100	;'d'
  1134  00FD4F  20                 	db	32
  1135  00FD50  50                 	db	80	;'P'
  1136  00FD51  65                 	db	101	;'e'
  1137  00FD52  65                 	db	101	;'e'
  1138  00FD53  72                 	db	114	;'r'
  1139  00FD54  20                 	db	32
  1140  00FD55  6F                 	db	111	;'o'
  1141  00FD56  6E                 	db	110	;'n'
  1142  00FD57  20                 	db	32
  1143  00FD58  43                 	db	67	;'C'
  1144  00FD59  68                 	db	104	;'h'
  1145  00FD5A  61                 	db	97	;'a'
  1146  00FD5B  6E                 	db	110	;'n'
  1147  00FD5C  6E                 	db	110	;'n'
  1148  00FD5D  65                 	db	101	;'e'
  1149  00FD5E  6C                 	db	108	;'l'
  1150  00FD5F  20                 	db	32
  1151  00FD60  00                 	db	0
  1152  00FD61                     STR_37:
  1153  00FD61  52                 	db	82	;'R'
  1154  00FD62  42                 	db	66	;'B'
  1155  00FD63  30                 	db	48	;'0'
  1156  00FD64  3A                 	db	58	;':'
  1157  00FD65  20                 	db	32
  1158  00FD66  42                 	db	66	;'B'
  1159  00FD67  72                 	db	114	;'r'
  1160  00FD68  6F                 	db	111	;'o'
  1161  00FD69  61                 	db	97	;'a'
  1162  00FD6A  64                 	db	100	;'d'
  1163  00FD6B  63                 	db	99	;'c'
  1164  00FD6C  61                 	db	97	;'a'
  1165  00FD6D  73                 	db	115	;'s'
  1166  00FD6E  74                 	db	116	;'t'
  1167  00FD6F  20                 	db	32
  1168  00FD70  20                 	db	32
  1169  00FD71  52                 	db	82	;'R'
  1170  00FD72  42                 	db	66	;'B'
  1171  00FD73  32                 	db	50	;'2'
  1172  00FD74  3A                 	db	58	;':'
  1173  00FD75  20                 	db	32
  1174  00FD76  55                 	db	85	;'U'
  1175  00FD77  6E                 	db	110	;'n'
  1176  00FD78  69                 	db	105	;'i'
  1177  00FD79  63                 	db	99	;'c'
  1178  00FD7A  61                 	db	97	;'a'
  1179  00FD7B  73                 	db	115	;'s'
  1180  00FD7C  74                 	db	116	;'t'
  1181  00FD7D  00                 	db	0
  1182  00FD7E                     STR_51:
  1183  00FD7E  52                 	db	82	;'R'
  1184  00FD7F  42                 	db	66	;'B'
  1185  00FD80  30                 	db	48	;'0'
  1186  00FD81  3A                 	db	58	;':'
  1187  00FD82  4E                 	db	78	;'N'
  1188  00FD83  65                 	db	101	;'e'
  1189  00FD84  77                 	db	119	;'w'
  1190  00FD85  20                 	db	32
  1191  00FD86  4E                 	db	78	;'N'
  1192  00FD87  65                 	db	101	;'e'
  1193  00FD88  74                 	db	116	;'t'
  1194  00FD89  77                 	db	119	;'w'
  1195  00FD8A  6F                 	db	111	;'o'
  1196  00FD8B  72                 	db	114	;'r'
  1197  00FD8C  6B                 	db	107	;'k'
  1198  00FD8D  20                 	db	32
  1199  00FD8E  52                 	db	82	;'R'
  1200  00FD8F  42                 	db	66	;'B'
  1201  00FD90  32                 	db	50	;'2'
  1202  00FD91  3A                 	db	58	;':'
  1203  00FD92  46                 	db	70	;'F'
  1204  00FD93  72                 	db	114	;'r'
  1205  00FD94  65                 	db	101	;'e'
  1206  00FD95  65                 	db	101	;'e'
  1207  00FD96  7A                 	db	122	;'z'
  1208  00FD97  65                 	db	101	;'e'
  1209  00FD98  72                 	db	114	;'r'
  1210  00FD99  00                 	db	0
  1211  00FD9A  42                 	db	66	;'B'
  1212  00FD9B  72                 	db	114	;'r'
  1213  00FD9C  6F                 	db	111	;'o'
  1214  00FD9D  61                 	db	97	;'a'
  1215  00FD9E  64                 	db	100	;'d'
  1216  00FD9F  63                 	db	99	;'c'
  1217  00FDA0  61                 	db	97	;'a'
  1218  00FDA1  73                 	db	115	;'s'
  1219  00FDA2  74                 	db	116	;'t'
  1220  00FDA3  20                 	db	32
  1221  00FDA4  50                 	db	80	;'P'
  1222  00FDA5  61                 	db	97	;'a'
  1223  00FDA6  63                 	db	99	;'c'
  1224  00FDA7  6B                 	db	107	;'k'
  1225  00FDA8  65                 	db	101	;'e'
  1226  00FDA9  74                 	db	116	;'t'
  1227  00FDAA  20                 	db	32
  1228  00FDAB  77                 	db	119	;'w'
  1229  00FDAC  69                 	db	105	;'i'
  1230  00FDAD  74                 	db	116	;'t'
  1231  00FDAE  68                 	db	104	;'h'
  1232  00FDAF  20                 	db	32
  1233  00FDB0  52                 	db	82	;'R'
  1234  00FDB1  53                 	db	83	;'S'
  1235  00FDB2  53                 	db	83	;'S'
  1236  00FDB3  49                 	db	73	;'I'
  1237  00FDB4  20                 	db	32
  1238  00FDB5  00                 	db	0
  1239  00FDB6                     STR_18:
  1240  00FDB6  0D                 	db	13
  1241  00FDB7  0A                 	db	10
  1242  00FDB8  20                 	db	32
  1243  00FDB9  20                 	db	32
  1244  00FDBA  20                 	db	32
  1245  00FDBB  20                 	db	32
  1246  00FDBC  20                 	db	32
  1247  00FDBD  20                 	db	32
  1248  00FDBE  20                 	db	32
  1249  00FDBF  20                 	db	32
  1250  00FDC0  20                 	db	32
  1251  00FDC1  20                 	db	32
  1252  00FDC2  20                 	db	32
  1253  00FDC3  42                 	db	66	;'B'
  1254  00FDC4  75                 	db	117	;'u'
  1255  00FDC5  74                 	db	116	;'t'
  1256  00FDC6  74                 	db	116	;'t'
  1257  00FDC7  6F                 	db	111	;'o'
  1258  00FDC8  6E                 	db	110	;'n'
  1259  00FDC9  20                 	db	32
  1260  00FDCA  31                 	db	49	;'1'
  1261  00FDCB  3A                 	db	58	;':'
  1262  00FDCC  20                 	db	32
  1263  00FDCD  52                 	db	82	;'R'
  1264  00FDCE  42                 	db	66	;'B'
  1265  00FDCF  30                 	db	48	;'0'
  1266  00FDD0  00                 	db	0
  1267  00FDD1                     STR_21:
  1268  00FDD1  0D                 	db	13
  1269  00FDD2  0A                 	db	10
  1270  00FDD3  20                 	db	32
  1271  00FDD4  20                 	db	32
  1272  00FDD5  20                 	db	32
  1273  00FDD6  20                 	db	32
  1274  00FDD7  20                 	db	32
  1275  00FDD8  20                 	db	32
  1276  00FDD9  20                 	db	32
  1277  00FDDA  20                 	db	32
  1278  00FDDB  20                 	db	32
  1279  00FDDC  20                 	db	32
  1280  00FDDD  20                 	db	32
  1281  00FDDE  20                 	db	32
  1282  00FDDF  20                 	db	32
  1283  00FDE0  20                 	db	32
  1284  00FDE1  4C                 	db	76	;'L'
  1285  00FDE2  45                 	db	69	;'E'
  1286  00FDE3  44                 	db	68	;'D'
  1287  00FDE4  20                 	db	32
  1288  00FDE5  31                 	db	49	;'1'
  1289  00FDE6  3A                 	db	58	;':'
  1290  00FDE7  20                 	db	32
  1291  00FDE8  52                 	db	82	;'R'
  1292  00FDE9  41                 	db	65	;'A'
  1293  00FDEA  32                 	db	50	;'2'
  1294  00FDEB  00                 	db	0
  1295  00FDEC                     STR_19:
  1296  00FDEC  0D                 	db	13
  1297  00FDED  0A                 	db	10
  1298  00FDEE  20                 	db	32
  1299  00FDEF  20                 	db	32
  1300  00FDF0  20                 	db	32
  1301  00FDF1  20                 	db	32
  1302  00FDF2  20                 	db	32
  1303  00FDF3  20                 	db	32
  1304  00FDF4  20                 	db	32
  1305  00FDF5  20                 	db	32
  1306  00FDF6  20                 	db	32
  1307  00FDF7  20                 	db	32
  1308  00FDF8  20                 	db	32
  1309  00FDF9  42                 	db	66	;'B'
  1310  00FDFA  75                 	db	117	;'u'
  1311  00FDFB  74                 	db	116	;'t'
  1312  00FDFC  74                 	db	116	;'t'
  1313  00FDFD  6F                 	db	111	;'o'
  1314  00FDFE  6E                 	db	110	;'n'
  1315  00FDFF  20                 	db	32
  1316  00FE00  32                 	db	50	;'2'
  1317  00FE01  3A                 	db	58	;':'
  1318  00FE02  20                 	db	32
  1319  00FE03  52                 	db	82	;'R'
  1320  00FE04  42                 	db	66	;'B'
  1321  00FE05  32                 	db	50	;'2'
  1322  00FE06  00                 	db	0
  1323  00FE07                     STR_22:
  1324  00FE07  0D                 	db	13
  1325  00FE08  0A                 	db	10
  1326  00FE09  20                 	db	32
  1327  00FE0A  20                 	db	32
  1328  00FE0B  20                 	db	32
  1329  00FE0C  20                 	db	32
  1330  00FE0D  20                 	db	32
  1331  00FE0E  20                 	db	32
  1332  00FE0F  20                 	db	32
  1333  00FE10  20                 	db	32
  1334  00FE11  20                 	db	32
  1335  00FE12  20                 	db	32
  1336  00FE13  20                 	db	32
  1337  00FE14  20                 	db	32
  1338  00FE15  20                 	db	32
  1339  00FE16  20                 	db	32
  1340  00FE17  4C                 	db	76	;'L'
  1341  00FE18  45                 	db	69	;'E'
  1342  00FE19  44                 	db	68	;'D'
  1343  00FE1A  20                 	db	32
  1344  00FE1B  32                 	db	50	;'2'
  1345  00FE1C  3A                 	db	58	;':'
  1346  00FE1D  20                 	db	32
  1347  00FE1E  52                 	db	82	;'R'
  1348  00FE1F  41                 	db	65	;'A'
  1349  00FE20  33                 	db	51	;'3'
  1350  00FE21  00                 	db	0
  1351  00FE22  55                 	db	85	;'U'
  1352  00FE23  6E                 	db	110	;'n'
  1353  00FE24  69                 	db	105	;'i'
  1354  00FE25  63                 	db	99	;'c'
  1355  00FE26  61                 	db	97	;'a'
  1356  00FE27  73                 	db	115	;'s'
  1357  00FE28  74                 	db	116	;'t'
  1358  00FE29  20                 	db	32
  1359  00FE2A  50                 	db	80	;'P'
  1360  00FE2B  61                 	db	97	;'a'
  1361  00FE2C  63                 	db	99	;'c'
  1362  00FE2D  6B                 	db	107	;'k'
  1363  00FE2E  65                 	db	101	;'e'
  1364  00FE2F  74                 	db	116	;'t'
  1365  00FE30  20                 	db	32
  1366  00FE31  77                 	db	119	;'w'
  1367  00FE32  69                 	db	105	;'i'
  1368  00FE33  74                 	db	116	;'t'
  1369  00FE34  68                 	db	104	;'h'
  1370  00FE35  20                 	db	32
  1371  00FE36  52                 	db	82	;'R'
  1372  00FE37  53                 	db	83	;'S'
  1373  00FE38  53                 	db	83	;'S'
  1374  00FE39  49                 	db	73	;'I'
  1375  00FE3A  20                 	db	32
  1376  00FE3B  00                 	db	0
  1377  00FE3C                     STR_54:
  1378  00FE3C  52                 	db	82	;'R'
  1379  00FE3D  42                 	db	66	;'B'
  1380  00FE3E  30                 	db	48	;'0'
  1381  00FE3F  3A                 	db	58	;':'
  1382  00FE40  25                 	db	37
  1383  00FE41  30                 	db	48	;'0'
  1384  00FE42  32                 	db	50	;'2'
  1385  00FE43  64                 	db	100	;'d'
  1386  00FE44  2D                 	db	45
  1387  00FE45  25                 	db	37
  1388  00FE46  30                 	db	48	;'0'
  1389  00FE47  32                 	db	50	;'2'
  1390  00FE48  78                 	db	120	;'x'
  1391  00FE49  25                 	db	37
  1392  00FE4A  30                 	db	48	;'0'
  1393  00FE4B  32                 	db	50	;'2'
  1394  00FE4C  78                 	db	120	;'x'
  1395  00FE4D  25                 	db	37
  1396  00FE4E  30                 	db	48	;'0'
  1397  00FE4F  32                 	db	50	;'2'
  1398  00FE50  78                 	db	120	;'x'
  1399  00FE51  2D                 	db	45
  1400  00FE52  6D                 	db	109	;'m'
  1401  00FE53  65                 	db	101	;'e'
  1402  00FE54  00                 	db	0
  1403  00FE55                     STR_43:
  1404  00FE55  0D                 	db	13
  1405  00FE56  0A                 	db	10
  1406  00FE57  53                 	db	83	;'S'
  1407  00FE58  65                 	db	101	;'e'
  1408  00FE59  6C                 	db	108	;'l'
  1409  00FE5A  65                 	db	101	;'e'
  1410  00FE5B  63                 	db	99	;'c'
  1411  00FE5C  74                 	db	116	;'t'
  1412  00FE5D  69                 	db	105	;'i'
  1413  00FE5E  6F                 	db	111	;'o'
  1414  00FE5F  6E                 	db	110	;'n'
  1415  00FE60  20                 	db	32
  1416  00FE61  6F                 	db	111	;'o'
  1417  00FE62  66                 	db	102	;'f'
  1418  00FE63  20                 	db	32
  1419  00FE64  63                 	db	99	;'c'
  1420  00FE65  68                 	db	104	;'h'
  1421  00FE66  61                 	db	97	;'a'
  1422  00FE67  6E                 	db	110	;'n'
  1423  00FE68  6E                 	db	110	;'n'
  1424  00FE69  65                 	db	101	;'e'
  1425  00FE6A  6C                 	db	108	;'l'
  1426  00FE6B  20                 	db	32
  1427  00FE6C  00                 	db	0
  1428  00FE6D                     STR_20:
  1429  00FE6D  0D                 	db	13
  1430  00FE6E  0A                 	db	10
  1431  00FE6F  4F                 	db	79	;'O'
  1432  00FE70  75                 	db	117	;'u'
  1433  00FE71  74                 	db	116	;'t'
  1434  00FE72  70                 	db	112	;'p'
  1435  00FE73  75                 	db	117	;'u'
  1436  00FE74  74                 	db	116	;'t'
  1437  00FE75  20                 	db	32
  1438  00FE76  43                 	db	67	;'C'
  1439  00FE77  6F                 	db	111	;'o'
  1440  00FE78  6E                 	db	110	;'n'
  1441  00FE79  66                 	db	102	;'f'
  1442  00FE7A  69                 	db	105	;'i'
  1443  00FE7B  67                 	db	103	;'g'
  1444  00FE7C  75                 	db	117	;'u'
  1445  00FE7D  72                 	db	114	;'r'
  1446  00FE7E  61                 	db	97	;'a'
  1447  00FE7F  74                 	db	116	;'t'
  1448  00FE80  69                 	db	105	;'i'
  1449  00FE81  6F                 	db	111	;'o'
  1450  00FE82  6E                 	db	110	;'n'
  1451  00FE83  3A                 	db	58	;':'
  1452  00FE84  00                 	db	0
  1453  00FE85                     STR_17:
  1454  00FE85  0D                 	db	13
  1455  00FE86  0A                 	db	10
  1456  00FE87  49                 	db	73	;'I'
  1457  00FE88  6E                 	db	110	;'n'
  1458  00FE89  70                 	db	112	;'p'
  1459  00FE8A  75                 	db	117	;'u'
  1460  00FE8B  74                 	db	116	;'t'
  1461  00FE8C  20                 	db	32
  1462  00FE8D  43                 	db	67	;'C'
  1463  00FE8E  6F                 	db	111	;'o'
  1464  00FE8F  6E                 	db	110	;'n'
  1465  00FE90  66                 	db	102	;'f'
  1466  00FE91  69                 	db	105	;'i'
  1467  00FE92  67                 	db	103	;'g'
  1468  00FE93  75                 	db	117	;'u'
  1469  00FE94  72                 	db	114	;'r'
  1470  00FE95  61                 	db	97	;'a'
  1471  00FE96  74                 	db	116	;'t'
  1472  00FE97  69                 	db	105	;'i'
  1473  00FE98  6F                 	db	111	;'o'
  1474  00FE99  6E                 	db	110	;'n'
  1475  00FE9A  3A                 	db	58	;':'
  1476  00FE9B  00                 	db	0
  1477  00FE9C                     STR_24:
  1478  00FE9C  0D                 	db	13
  1479  00FE9D  0A                 	db	10
  1480  00FE9E  20                 	db	32
  1481  00FE9F  20                 	db	32
  1482  00FEA0  20                 	db	32
  1483  00FEA1  44                 	db	68	;'D'
  1484  00FEA2  65                 	db	101	;'e'
  1485  00FEA3  6D                 	db	109	;'m'
  1486  00FEA4  6F                 	db	111	;'o'
  1487  00FEA5  20                 	db	32
  1488  00FEA6  49                 	db	73	;'I'
  1489  00FEA7  6E                 	db	110	;'n'
  1490  00FEA8  73                 	db	115	;'s'
  1491  00FEA9  74                 	db	116	;'t'
  1492  00FEAA  72                 	db	114	;'r'
  1493  00FEAB  75                 	db	117	;'u'
  1494  00FEAC  63                 	db	99	;'c'
  1495  00FEAD  74                 	db	116	;'t'
  1496  00FEAE  69                 	db	105	;'i'
  1497  00FEAF  6F                 	db	111	;'o'
  1498  00FEB0  6E                 	db	110	;'n'
  1499  00FEB1  3A                 	db	58	;':'
  1500  00FEB2  00                 	db	0
  1501  00FEB3                     STR_1:
  1502  00FEB3  44                 	db	68	;'D'
  1503  00FEB4  61                 	db	97	;'a'
  1504  00FEB5  74                 	db	116	;'t'
  1505  00FEB6  61                 	db	97	;'a'
  1506  00FEB7  20                 	db	32
  1507  00FEB8  52                 	db	82	;'R'
  1508  00FEB9  65                 	db	101	;'e'
  1509  00FEBA  71                 	db	113	;'q'
  1510  00FEBB  75                 	db	117	;'u'
  1511  00FEBC  65                 	db	101	;'e'
  1512  00FEBD  73                 	db	115	;'s'
  1513  00FEBE  74                 	db	116	;'t'
  1514  00FEBF  20                 	db	32
  1515  00FEC0  45                 	db	69	;'E'
  1516  00FEC1  78                 	db	120	;'x'
  1517  00FEC2  70                 	db	112	;'p'
  1518  00FEC3  69                 	db	105	;'i'
  1519  00FEC4  72                 	db	114	;'r'
  1520  00FEC5  65                 	db	101	;'e'
  1521  00FEC6  64                 	db	100	;'d'
  1522  00FEC7  0D                 	db	13
  1523  00FEC8  0A                 	db	10
  1524  00FEC9  00                 	db	0
  1525  00FECA                     STR_55:
  1526  00FECA  52                 	db	82	;'R'
  1527  00FECB  42                 	db	66	;'B'
  1528  00FECC  30                 	db	48	;'0'
  1529  00FECD  3A                 	db	58	;':'
  1530  00FECE  25                 	db	37
  1531  00FECF  30                 	db	48	;'0'
  1532  00FED0  32                 	db	50	;'2'
  1533  00FED1  64                 	db	100	;'d'
  1534  00FED2  2D                 	db	45
  1535  00FED3  25                 	db	37
  1536  00FED4  30                 	db	48	;'0'
  1537  00FED5  32                 	db	50	;'2'
  1538  00FED6  78                 	db	120	;'x'
  1539  00FED7  25                 	db	37
  1540  00FED8  30                 	db	48	;'0'
  1541  00FED9  32                 	db	50	;'2'
  1542  00FEDA  78                 	db	120	;'x'
  1543  00FEDB  25                 	db	37
  1544  00FEDC  30                 	db	48	;'0'
  1545  00FEDD  32                 	db	50	;'2'
  1546  00FEDE  78                 	db	120	;'x'
  1547  00FEDF  00                 	db	0
  1548  00FEE0  20                 	db	32
  1549  00FEE1  41                 	db	65	;'A'
  1550  00FEE2  64                 	db	100	;'d'
  1551  00FEE3  64                 	db	100	;'d'
  1552  00FEE4  72                 	db	114	;'r'
  1553  00FEE5  65                 	db	101	;'e'
  1554  00FEE6  73                 	db	115	;'s'
  1555  00FEE7  73                 	db	115	;'s'
  1556  00FEE8  3A                 	db	58	;':'
  1557  00FEE9  25                 	db	37
  1558  00FEEA  30                 	db	48	;'0'
  1559  00FEEB  32                 	db	50	;'2'
  1560  00FEEC  78                 	db	120	;'x'
  1561  00FEED  25                 	db	37
  1562  00FEEE  30                 	db	48	;'0'
  1563  00FEEF  32                 	db	50	;'2'
  1564  00FEF0  78                 	db	120	;'x'
  1565  00FEF1  25                 	db	37
  1566  00FEF2  30                 	db	48	;'0'
  1567  00FEF3  32                 	db	50	;'2'
  1568  00FEF4  78                 	db	120	;'x'
  1569  00FEF5  00                 	db	0
  1570  00FEF6                     STR_58:
  1571  00FEF6  44                 	db	68	;'D'
  1572  00FEF7  61                 	db	97	;'a'
  1573  00FEF8  74                 	db	116	;'t'
  1574  00FEF9  61                 	db	97	;'a'
  1575  00FEFA  5F                 	db	95	;'_'
  1576  00FEFB  53                 	db	83	;'S'
  1577  00FEFC  65                 	db	101	;'e'
  1578  00FEFD  6E                 	db	110	;'n'
  1579  00FEFE  64                 	db	100	;'d'
  1580  00FEFF  69                 	db	105	;'i'
  1581  00FF00  6E                 	db	110	;'n'
  1582  00FF01  67                 	db	103	;'g'
  1583  00FF02  5F                 	db	95	;'_'
  1584  00FF03  46                 	db	70	;'F'
  1585  00FF04  61                 	db	97	;'a'
  1586  00FF05  69                 	db	105	;'i'
  1587  00FF06  6C                 	db	108	;'l'
  1588  00FF07  21                 	db	33
  1589  00FF08  21                 	db	33
  1590  00FF09  00                 	db	0
  1591  00FF0A                     STR_45:
  1592  00FF0A  0D                 	db	13
  1593  00FF0B  0A                 	db	10
  1594  00FF0C  55                 	db	85	;'U'
  1595  00FF0D  6E                 	db	110	;'n'
  1596  00FF0E  69                 	db	105	;'i'
  1597  00FF0F  63                 	db	99	;'c'
  1598  00FF10  61                 	db	97	;'a'
  1599  00FF11  73                 	db	115	;'s'
  1600  00FF12  74                 	db	116	;'t'
  1601  00FF13  20                 	db	32
  1602  00FF14  46                 	db	70	;'F'
  1603  00FF15  61                 	db	97	;'a'
  1604  00FF16  69                 	db	105	;'i'
  1605  00FF17  6C                 	db	108	;'l'
  1606  00FF18  65                 	db	101	;'e'
  1607  00FF19  64                 	db	100	;'d'
  1608  00FF1A  0D                 	db	13
  1609  00FF1B  0A                 	db	10
  1610  00FF1C  00                 	db	0
  1611  00FF1D                     STR_2:
  1612  00FF1D  0D                 	db	13
  1613  00FF1E  0A                 	db	10
  1614  00FF1F  0D                 	db	13
  1615  00FF20  0A                 	db	10
  1616  00FF21  4D                 	db	77	;'M'
  1617  00FF22  79                 	db	121	;'y'
  1618  00FF23  20                 	db	32
  1619  00FF24  41                 	db	65	;'A'
  1620  00FF25  64                 	db	100	;'d'
  1621  00FF26  64                 	db	100	;'d'
  1622  00FF27  72                 	db	114	;'r'
  1623  00FF28  65                 	db	101	;'e'
  1624  00FF29  73                 	db	115	;'s'
  1625  00FF2A  73                 	db	115	;'s'
  1626  00FF2B  3A                 	db	58	;':'
  1627  00FF2C  20                 	db	32
  1628  00FF2D  30                 	db	48	;'0'
  1629  00FF2E  78                 	db	120	;'x'
  1630  00FF2F  00                 	db	0
  1631  00FF30                     STR_60:
  1632  00FF30  30                 	db	48	;'0'
  1633  00FF31  31                 	db	49	;'1'
  1634  00FF32  32                 	db	50	;'2'
  1635  00FF33  33                 	db	51	;'3'
  1636  00FF34  34                 	db	52	;'4'
  1637  00FF35  35                 	db	53	;'5'
  1638  00FF36  36                 	db	54	;'6'
  1639  00FF37  37                 	db	55	;'7'
  1640  00FF38  38                 	db	56	;'8'
  1641  00FF39  39                 	db	57	;'9'
  1642  00FF3A  41                 	db	65	;'A'
  1643  00FF3B  42                 	db	66	;'B'
  1644  00FF3C  43                 	db	67	;'C'
  1645  00FF3D  44                 	db	68	;'D'
  1646  00FF3E  45                 	db	69	;'E'
  1647  00FF3F  46                 	db	70	;'F'
  1648  00FF40  00                 	db	0
  1649  00FF41                     STR_61:
  1650  00FF41  30                 	db	48	;'0'
  1651  00FF42  31                 	db	49	;'1'
  1652  00FF43  32                 	db	50	;'2'
  1653  00FF44  33                 	db	51	;'3'
  1654  00FF45  34                 	db	52	;'4'
  1655  00FF46  35                 	db	53	;'5'
  1656  00FF47  36                 	db	54	;'6'
  1657  00FF48  37                 	db	55	;'7'
  1658  00FF49  38                 	db	56	;'8'
  1659  00FF4A  39                 	db	57	;'9'
  1660  00FF4B  61                 	db	97	;'a'
  1661  00FF4C  62                 	db	98	;'b'
  1662  00FF4D  63                 	db	99	;'c'
  1663  00FF4E  64                 	db	100	;'d'
  1664  00FF4F  65                 	db	101	;'e'
  1665  00FF50  66                 	db	102	;'f'
  1666  00FF51  00                 	db	0
  1667  00FF52                     STR_57:
  1668  00FF52  52                 	db	82	;'R'
  1669  00FF53  42                 	db	66	;'B'
  1670  00FF54  32                 	db	50	;'2'
  1671  00FF55  3A                 	db	58	;':'
  1672  00FF56  20                 	db	32
  1673  00FF57  43                 	db	67	;'C'
  1674  00FF58  68                 	db	104	;'h'
  1675  00FF59  61                 	db	97	;'a'
  1676  00FF5A  6E                 	db	110	;'n'
  1677  00FF5B  67                 	db	103	;'g'
  1678  00FF5C  65                 	db	101	;'e'
  1679  00FF5D  20                 	db	32
  1680  00FF5E  6E                 	db	110	;'n'
  1681  00FF5F  6F                 	db	111	;'o'
  1682  00FF60  64                 	db	100	;'d'
  1683  00FF61  65                 	db	101	;'e'
  1684  00FF62  00                 	db	0
  1685  00FF63  44                 	db	68	;'D'
  1686  00FF64  61                 	db	97	;'a'
  1687  00FF65  74                 	db	116	;'t'
  1688  00FF66  61                 	db	97	;'a'
  1689  00FF67  20                 	db	32
  1690  00FF68  50                 	db	80	;'P'
  1691  00FF69  61                 	db	97	;'a'
  1692  00FF6A  63                 	db	99	;'c'
  1693  00FF6B  6B                 	db	107	;'k'
  1694  00FF6C  65                 	db	101	;'e'
  1695  00FF6D  74                 	db	116	;'t'
  1696  00FF6E  20                 	db	32
  1697  00FF6F  66                 	db	102	;'f'
  1698  00FF70  72                 	db	114	;'r'
  1699  00FF71  6F                 	db	111	;'o'
  1700  00FF72  6D                 	db	109	;'m'
  1701  00FF73  00                 	db	0
  1702  00FF74                     STR_15:
  1703  00FF74  52                 	db	82	;'R'
  1704  00FF75  58                 	db	88	;'X'
  1705  00FF76  20                 	db	32
  1706  00FF77  4D                 	db	77	;'M'
  1707  00FF78  65                 	db	101	;'e'
  1708  00FF79  73                 	db	115	;'s'
  1709  00FF7A  73                 	db	115	;'s'
  1710  00FF7B  61                 	db	97	;'a'
  1711  00FF7C  67                 	db	103	;'g'
  1712  00FF7D  65                 	db	101	;'e'
  1713  00FF7E  73                 	db	115	;'s'
  1714  00FF7F  3A                 	db	58	;':'
  1715  00FF80  20                 	db	32
  1716  00FF81  25                 	db	37
  1717  00FF82  33                 	db	51	;'3'
  1718  00FF83  64                 	db	100	;'d'
  1719  00FF84  00                 	db	0
  1720  00FF85                     STR_14:
  1721  00FF85  54                 	db	84	;'T'
  1722  00FF86  58                 	db	88	;'X'
  1723  00FF87  20                 	db	32
  1724  00FF88  4D                 	db	77	;'M'
  1725  00FF89  65                 	db	101	;'e'
  1726  00FF8A  73                 	db	115	;'s'
  1727  00FF8B  73                 	db	115	;'s'
  1728  00FF8C  61                 	db	97	;'a'
  1729  00FF8D  67                 	db	103	;'g'
  1730  00FF8E  65                 	db	101	;'e'
  1731  00FF8F  73                 	db	115	;'s'
  1732  00FF90  3A                 	db	58	;':'
  1733  00FF91  20                 	db	32
  1734  00FF92  25                 	db	37
  1735  00FF93  33                 	db	51	;'3'
  1736  00FF94  64                 	db	100	;'d'
  1737  00FF95  00                 	db	0
  1738  00FF96                     STR_46:
  1739  00FF96  20                 	db	32
  1740  00FF97  55                 	db	85	;'U'
  1741  00FF98  6E                 	db	110	;'n'
  1742  00FF99  69                 	db	105	;'i'
  1743  00FF9A  63                 	db	99	;'c'
  1744  00FF9B  61                 	db	97	;'a'
  1745  00FF9C  73                 	db	115	;'s'
  1746  00FF9D  74                 	db	116	;'t'
  1747  00FF9E  20                 	db	32
  1748  00FF9F  46                 	db	70	;'F'
  1749  00FFA0  61                 	db	97	;'a'
  1750  00FFA1  69                 	db	105	;'i'
  1751  00FFA2  6C                 	db	108	;'l'
  1752  00FFA3  65                 	db	101	;'e'
  1753  00FFA4  64                 	db	100	;'d'
  1754  00FFA5  00                 	db	0
  1755  00FFA6                     STR_5:
  1756  00FFA6  20                 	db	32
  1757  00FFA7  20                 	db	32
  1758  00FFA8  20                 	db	32
  1759  00FFA9  20                 	db	32
  1760  00FFAA  20                 	db	32
  1761  00FFAB  20                 	db	32
  1762  00FFAC  20                 	db	32
  1763  00FFAD  20                 	db	32
  1764  00FFAE  20                 	db	32
  1765  00FFAF  20                 	db	32
  1766  00FFB0  20                 	db	32
  1767  00FFB1  20                 	db	32
  1768  00FFB2  20                 	db	32
  1769  00FFB3  00                 	db	0
  1770  00FFB4                     STR_59:
  1771  00FFB4  53                 	db	83	;'S'
  1772  00FFB5  6C                 	db	108	;'l'
  1773  00FFB6  65                 	db	101	;'e'
  1774  00FFB7  65                 	db	101	;'e'
  1775  00FFB8  70                 	db	112	;'p'
  1776  00FFB9  69                 	db	105	;'i'
  1777  00FFBA  6E                 	db	110	;'n'
  1778  00FFBB  67                 	db	103	;'g'
  1779  00FFBC  21                 	db	33
  1780  00FFBD  21                 	db	33
  1781  00FFBE  21                 	db	33
  1782  00FFBF  00                 	db	0
  1783  00FFC0                     STR_3:
  1784  00FFC0  20                 	db	32
  1785  00FFC1  20                 	db	32
  1786  00FFC2  43                 	db	67	;'C'
  1787  00FFC3  68                 	db	104	;'h'
  1788  00FFC4  61                 	db	97	;'a'
  1789  00FFC5  6E                 	db	110	;'n'
  1790  00FFC6  6E                 	db	110	;'n'
  1791  00FFC7  65                 	db	101	;'e'
  1792  00FFC8  6C                 	db	108	;'l'
  1793  00FFC9  3A                 	db	58	;':'
  1794  00FFCA  20                 	db	32
  1795  00FFCB  00                 	db	0
  1796  00FFCC                     STR_53:
  1797  00FFCC  57                 	db	87	;'W'
  1798  00FFCD  6F                 	db	111	;'o'
  1799  00FFCE  6B                 	db	107	;'k'
  1800  00FFCF  65                 	db	101	;'e'
  1801  00FFD0  20                 	db	32
  1802  00FFD1  55                 	db	85	;'U'
  1803  00FFD2  70                 	db	112	;'p'
  1804  00FFD3  21                 	db	33
  1805  00FFD4  21                 	db	33
  1806  00FFD5  21                 	db	33
  1807  00FFD6  00                 	db	0
  1808  00FFD7                     STR_52:
  1809  00FFD7  53                 	db	83	;'S'
  1810  00FFD8  6C                 	db	108	;'l'
  1811  00FFD9  65                 	db	101	;'e'
  1812  00FFDA  65                 	db	101	;'e'
  1813  00FFDB  70                 	db	112	;'p'
  1814  00FFDC  69                 	db	105	;'i'
  1815  00FFDD  6E                 	db	110	;'n'
  1816  00FFDE  67                 	db	103	;'g'
  1817  00FFDF  21                 	db	33
  1818  00FFE0  21                 	db	33
  1819  00FFE1  00                 	db	0
  1820  00FFE2  53                 	db	83	;'S'
  1821  00FFE3  65                 	db	101	;'e'
  1822  00FFE4  63                 	db	99	;'c'
  1823  00FFE5  75                 	db	117	;'u'
  1824  00FFE6  72                 	db	114	;'r'
  1825  00FFE7  65                 	db	101	;'e'
  1826  00FFE8  64                 	db	100	;'d'
  1827  00FFE9  20                 	db	32
  1828  00FFEA  00                 	db	0
  1829  00FFEB  20                 	db	32
  1830  00FFEC  66                 	db	102	;'f'
  1831  00FFED  72                 	db	114	;'r'
  1832  00FFEE  6F                 	db	111	;'o'
  1833  00FFEF  6D                 	db	109	;'m'
  1834  00FFF0  20                 	db	32
  1835  00FFF1  00                 	db	0
  1836  00FFF2                     STR_30:
  1837  00FFF2  0D                 	db	13
  1838  00FFF3  0A                 	db	10
  1839  00FFF4  0D                 	db	13
  1840  00FFF5  0A                 	db	10
  1841  00FFF6  00                 	db	0
  1842  0000                     
  1843                           ; #config settings
  1844  00FFF7  00                 	db	0	; dummy byte at the end
  1845  0000                     
  1846                           	psect	cinit
  1847  002542                     __pcinit:
  1848                           	opt stack 0
  1849  002542                     start_initialization:
  1850                           	opt stack 0
  1851  002542                     __initialization:
  1852                           	opt stack 0
  1853                           
  1854                           ; Clear objects allocated to BIGRAM (280 bytes)
  1855  002542  EE02  F0C2         	lfsr	0,__pbssBIGRAM
  1856  002546  EE11 F018          	lfsr	1,280
  1857  00254A                     clear_0:
  1858  00254A  6AEE               	clrf	postinc0,c
  1859  00254C  50E5               	movf	postdec1,w,c
  1860  00254E  50E1               	movf	fsr1l,w,c
  1861  002550  E1FC               	bnz	clear_0
  1862  002552  50E2               	movf	fsr1h,w,c
  1863  002554  E1FA               	bnz	clear_0
  1864                           
  1865                           ; Clear objects allocated to BANK2 (194 bytes)
  1866  002556  EE02  F000         	lfsr	0,__pbssBANK2
  1867  00255A  0EC2               	movlw	194
  1868  00255C                     clear_1:
  1869  00255C  6AEE               	clrf	postinc0,c
  1870  00255E  06E8               	decf	wreg,f,c
  1871  002560  E1FD               	bnz	clear_1
  1872                           
  1873                           ; Clear objects allocated to BANK1 (177 bytes)
  1874  002562  EE01  F000         	lfsr	0,__pbssBANK1
  1875  002566  0EB1               	movlw	177
  1876  002568                     clear_2:
  1877  002568  6AEE               	clrf	postinc0,c
  1878  00256A  06E8               	decf	wreg,f,c
  1879  00256C  E1FD               	bnz	clear_2
  1880                           
  1881                           ; Clear objects allocated to BANK0 (52 bytes)
  1882  00256E  EE00  F0C7         	lfsr	0,__pbssBANK0
  1883  002572  0E34               	movlw	52
  1884  002574                     clear_3:
  1885  002574  6AEE               	clrf	postinc0,c
  1886  002576  06E8               	decf	wreg,f,c
  1887  002578  E1FD               	bnz	clear_3
  1888                           
  1889                           ; Clear objects allocated to COMRAM (38 bytes)
  1890  00257A  EE00  F036         	lfsr	0,__pbssCOMRAM
  1891  00257E  0E26               	movlw	38
  1892  002580                     clear_4:
  1893  002580  6AEE               	clrf	postinc0,c
  1894  002582  06E8               	decf	wreg,f,c
  1895  002584  E1FD               	bnz	clear_4
  1896                           
  1897                           ; Initialize objects allocated to BANK1 (16 bytes)
  1898                           ; load TBLPTR registers with __pidataBANK1
  1899  002586  0EAC               	movlw	low __pidataBANK1
  1900  002588  6EF6               	movwf	tblptrl,c
  1901  00258A  0E34               	movlw	high __pidataBANK1
  1902  00258C  6EF7               	movwf	tblptrh,c
  1903  00258E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1904  002590  6EF8               	movwf	tblptru,c
  1905  002592  EE01  F0B1         	lfsr	0,__pdataBANK1
  1906  002596  EE10 F010          	lfsr	1,16
  1907  00259A                     copy_data0:
  1908  00259A  0009               	tblrd		*+
  1909  00259C  CFF5 FFEE          	movff	tablat,postinc0
  1910  0025A0  50E5               	movf	postdec1,w,c
  1911  0025A2  50E1               	movf	fsr1l,w,c
  1912  0025A4  E1FA               	bnz	copy_data0
  1913                           
  1914                           ; Initialize objects allocated to BANK0 (4 bytes)
  1915                           ; load TBLPTR registers with __pidataBANK0
  1916  0025A6  0E12               	movlw	low __pidataBANK0
  1917  0025A8  6EF6               	movwf	tblptrl,c
  1918  0025AA  0E35               	movlw	high __pidataBANK0
  1919  0025AC  6EF7               	movwf	tblptrh,c
  1920  0025AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1921  0025B0  6EF8               	movwf	tblptru,c
  1922  0025B2  EE00  F0FB         	lfsr	0,__pdataBANK0
  1923  0025B6  EE10 F004          	lfsr	1,4
  1924  0025BA                     copy_data1:
  1925  0025BA  0009               	tblrd		*+
  1926  0025BC  CFF5 FFEE          	movff	tablat,postinc0
  1927  0025C0  50E5               	movf	postdec1,w,c
  1928  0025C2  50E1               	movf	fsr1l,w,c
  1929  0025C4  E1FA               	bnz	copy_data1
  1930  0025C6                     end_of_initialization:
  1931                           	opt stack 0
  1932  0025C6                     __end_of__initialization:
  1933                           	opt stack 0
  1934  0025C6  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1935  0025C8  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1936  0025CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1937  0025CC  6EF8               	movwf	tblptru,c
  1938  0025CE  0100               	movlb	0
  1939  0025D0  EFDA  F019         	goto	_main	;jump to C main() function
  1940                           tblptru	equ	0xFF8
  1941                           tblptrh	equ	0xFF7
  1942                           tblptrl	equ	0xFF6
  1943                           tablat	equ	0xFF5
  1944                           postinc0	equ	0xFEE
  1945                           wreg	equ	0xFE8
  1946                           postdec1	equ	0xFE5
  1947                           fsr1h	equ	0xFE2
  1948                           fsr1l	equ	0xFE1
  1949                           
  1950                           	psect	bssCOMRAM
  1951  000036                     __pbssCOMRAM:
  1952                           	opt stack 0
  1953  000036                     _MACRxPacket:
  1954                           	opt stack 0
  1955  000036                     	ds	8
  1956  00003E                     _DataRequestTimer:
  1957                           	opt stack 0
  1958  00003E                     	ds	4
  1959  000042                     _LCDCommand:
  1960                           	opt stack 0
  1961  000042                     	ds	4
  1962  000046                     _PUSH_BUTTON_press_time:
  1963                           	opt stack 0
  1964  000046                     	ds	4
  1965  00004A                     _nvmDelayTick:
  1966                           	opt stack 0
  1967  00004A                     	ds	4
  1968  00004E                     _t3:
  1969                           	opt stack 0
  1970  00004E                     	ds	4
  1971  000052                     _timer1ReloadVal:
  1972                           	opt stack 0
  1973  000052                     	ds	2
  1974  000054                     _CommandLen:
  1975                           	opt stack 0
  1976  000054                     	ds	1
  1977  000055                     _CommandPtr:
  1978                           	opt stack 0
  1979  000055                     	ds	1
  1980  000056                     _RF_Mode:
  1981                           	opt stack 0
  1982  000056                     	ds	1
  1983  000057                     _RSSIVal:
  1984                           	opt stack 0
  1985  000057                     	ds	1
  1986  000058                     _TextLen:
  1987                           	opt stack 0
  1988  000058                     	ds	1
  1989  000059                     _TextPtr:
  1990                           	opt stack 0
  1991  000059                     	ds	1
  1992  00005A                     _TxMACSeq:
  1993                           	opt stack 0
  1994  00005A                     	ds	1
  1995  00005B                     _timerExtension1:
  1996                           	opt stack 0
  1997  00005B                     	ds	1
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           postdec1	equ	0xFE5
  2005                           fsr1h	equ	0xFE2
  2006                           fsr1l	equ	0xFE1
  2007                           
  2008                           	psect	bssBANK0
  2009  0000C7                     __pbssBANK0:
  2010                           	opt stack 0
  2011  0000C7                     _rxMessage:
  2012                           	opt stack 0
  2013  0000C7                     	ds	10
  2014  0000D1                     _MACInitParams:
  2015                           	opt stack 0
  2016  0000D1                     	ds	3
  2017  0000D4                     _nextEEPosition:
  2018                           	opt stack 0
  2019  0000D4                     	ds	2
  2020  0000D6                     _IRQ1_Received:
  2021                           	opt stack 0
  2022  0000D6                     	ds	1
  2023  0000D7                     _LatestConnection:
  2024                           	opt stack 0
  2025  0000D7                     	ds	1
  2026  0000D8                     _MACSeq:
  2027                           	opt stack 0
  2028  0000D8                     	ds	1
  2029  0000D9                     _P2PCapacityInfo:
  2030                           	opt stack 0
  2031  0000D9                     	ds	1
  2032  0000DA                     _P2PStatus:
  2033                           	opt stack 0
  2034  0000DA                     	ds	1
  2035  0000DB                     _PUSH_BUTTON_pressed:
  2036                           	opt stack 0
  2037  0000DB                     	ds	1
  2038  0000DC                     _RSSILock:
  2039                           	opt stack 0
  2040  0000DC                     	ds	1
  2041  0000DD                     _ReceivedBankIndex:
  2042                           	opt stack 0
  2043  0000DD                     	ds	1
  2044  0000DE                     _RxNum:
  2045                           	opt stack 0
  2046  0000DE                     	ds	1
  2047  0000DF                     _TxData:
  2048                           	opt stack 0
  2049  0000DF                     	ds	1
  2050  0000E0                     _TxNum:
  2051                           	opt stack 0
  2052  0000E0                     	ds	1
  2053  0000E1                     _awake:
  2054                           	opt stack 0
  2055  0000E1                     	ds	1
  2056  0000E2                     _end_nodes:
  2057                           	opt stack 0
  2058  0000E2                     	ds	1
  2059  0000E3                     _fix_me:
  2060                           	opt stack 0
  2061  0000E3                     	ds	1
  2062  0000E4                     _hasAck:
  2063                           	opt stack 0
  2064  0000E4                     	ds	1
  2065  0000E5                     _i:
  2066                           	opt stack 0
  2067  0000E5                     	ds	1
  2068  0000E6                     _rec_ack:
  2069                           	opt stack 0
  2070  0000E6                     	ds	1
  2071  0000E7                     _timerExtension2:
  2072                           	opt stack 0
  2073  0000E7                     	ds	1
  2074  0000E8                     _nvmConnMode:
  2075                           	opt stack 0
  2076  0000E8                     	ds	2
  2077  0000EA                     _nvmConnectionTable:
  2078                           	opt stack 0
  2079  0000EA                     	ds	2
  2080  0000EC                     _nvmCurrentChannel:
  2081                           	opt stack 0
  2082  0000EC                     	ds	2
  2083  0000EE                     _nvmEdc:
  2084                           	opt stack 0
  2085  0000EE                     	ds	2
  2086  0000F0                     _nvmMyPANID:
  2087                           	opt stack 0
  2088  0000F0                     	ds	2
  2089  0000F2                     _nvmOutFrameCounter:
  2090                           	opt stack 0
  2091  0000F2                     	ds	2
  2092  0000F4                     _nvmRole:
  2093                           	opt stack 0
  2094  0000F4                     	ds	2
  2095  0000F6                     _nvmmyIndex:
  2096                           	opt stack 0
  2097  0000F6                     	ds	2
  2098  0000F8                     _conn_size:
  2099                           	opt stack 0
  2100  0000F8                     	ds	1
  2101  0000F9                     _currentChannel:
  2102                           	opt stack 0
  2103  0000F9                     	ds	1
  2104  0000FA                     _myConnectionIndex_in_PanCo:
  2105                           	opt stack 0
  2106  0000FA                     	ds	1
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           postinc0	equ	0xFEE
  2112                           wreg	equ	0xFE8
  2113                           postdec1	equ	0xFE5
  2114                           fsr1h	equ	0xFE2
  2115                           fsr1l	equ	0xFE1
  2116                           
  2117                           	psect	dataBANK0
  2118  0000FB                     __pdataBANK0:
  2119                           	opt stack 0
  2120  0000FB                     _AdditionalNodeID:
  2121                           	opt stack 0
  2122  0000FB                     	ds	1
  2123  0000FC                     _chk_sel_status:
  2124                           	opt stack 0
  2125  0000FC                     	ds	1
  2126  0000FD                     _ConnMode:
  2127                           	opt stack 0
  2128  0000FD                     	ds	1
  2129  0000FE                     _role:
  2130                           	opt stack 0
  2131  0000FE                     	ds	1
  2132                           tblptru	equ	0xFF8
  2133                           tblptrh	equ	0xFF7
  2134                           tblptrl	equ	0xFF6
  2135                           tablat	equ	0xFF5
  2136                           postinc0	equ	0xFEE
  2137                           wreg	equ	0xFE8
  2138                           postdec1	equ	0xFE5
  2139                           fsr1h	equ	0xFE2
  2140                           fsr1l	equ	0xFE1
  2141                           
  2142                           	psect	bssBANK1
  2143  000100                     __pbssBANK1:
  2144                           	opt stack 0
  2145  000100                     _MACTxBuffer:
  2146                           	opt stack 0
  2147  000100                     	ds	55
  2148  000137                     _AckInfo:
  2149                           	opt stack 0
  2150  000137                     	ds	30
  2151  000155                     _t1:
  2152                           	opt stack 0
  2153  000155                     	ds	4
  2154  000159                     _t2:
  2155                           	opt stack 0
  2156  000159                     	ds	4
  2157  00015D                     _tt1:
  2158                           	opt stack 0
  2159  00015D                     	ds	4
  2160  000161                     _tt2:
  2161                           	opt stack 0
  2162  000161                     	ds	4
  2163  000165                     _TxBuffer:
  2164                           	opt stack 0
  2165  000165                     	ds	35
  2166  000188                     _LCDText:
  2167                           	opt stack 0
  2168  000188                     	ds	33
  2169  0001A9                     _myLongAddress:
  2170                           	opt stack 0
  2171  0001A9                     	ds	8
  2172                           tblptru	equ	0xFF8
  2173                           tblptrh	equ	0xFF7
  2174                           tblptrl	equ	0xFF6
  2175                           tablat	equ	0xFF5
  2176                           postinc0	equ	0xFEE
  2177                           wreg	equ	0xFE8
  2178                           postdec1	equ	0xFE5
  2179                           fsr1h	equ	0xFE2
  2180                           fsr1l	equ	0xFE1
  2181                           
  2182                           	psect	dataBANK1
  2183  0001B1                     __pdataBANK1:
  2184                           	opt stack 0
  2185  0001B1                     _CharacterArray:
  2186                           	opt stack 0
  2187  0001B1                     	ds	16
  2188                           tblptru	equ	0xFF8
  2189                           tblptrh	equ	0xFF7
  2190                           tblptrl	equ	0xFF6
  2191                           tablat	equ	0xFF5
  2192                           postinc0	equ	0xFEE
  2193                           wreg	equ	0xFE8
  2194                           postdec1	equ	0xFE5
  2195                           fsr1h	equ	0xFE2
  2196                           fsr1l	equ	0xFE1
  2197                           
  2198                           	psect	bssBANK2
  2199  000200                     __pbssBANK2:
  2200                           	opt stack 0
  2201  000200                     _END_DEVICES_Short_Address:
  2202                           	opt stack 0
  2203  000200                     	ds	80
  2204  000250                     _RxPacket:
  2205                           	opt stack 0
  2206  000250                     	ds	114
  2207                           tblptru	equ	0xFF8
  2208                           tblptrh	equ	0xFF7
  2209                           tblptrl	equ	0xFF6
  2210                           tablat	equ	0xFF5
  2211                           postinc0	equ	0xFEE
  2212                           wreg	equ	0xFE8
  2213                           postdec1	equ	0xFE5
  2214                           fsr1h	equ	0xFE2
  2215                           fsr1l	equ	0xFE1
  2216                           
  2217                           	psect	bssBIGRAM
  2218  0002C2                     __pbssBIGRAM:
  2219                           	opt stack 0
  2220  0002C2                     _ConnectionTable:
  2221                           	opt stack 0
  2222  0002C2                     	ds	280
  2223                           tblptru	equ	0xFF8
  2224                           tblptrh	equ	0xFF7
  2225                           tblptrl	equ	0xFF6
  2226                           tablat	equ	0xFF5
  2227                           postinc0	equ	0xFEE
  2228                           wreg	equ	0xFE8
  2229                           postdec1	equ	0xFE5
  2230                           fsr1h	equ	0xFE2
  2231                           fsr1l	equ	0xFE1
  2232                           
  2233                           	psect	cstackBANK0
  2234  000060                     __pcstackBANK0:
  2235                           	opt stack 0
  2236  000060                     ??_isdigit:
  2237  000060                     ??_handle_lost_connection:
  2238  000060                     ?___wmul:
  2239                           	opt stack 0
  2240  000060                     ?___lwdiv:
  2241                           	opt stack 0
  2242  000060                     ?_MiWi_TickGet:
  2243                           	opt stack 0
  2244  000060                     Total_Connections@count:
  2245                           	opt stack 0
  2246  000060                     CONSOLE_Put@c:
  2247                           	opt stack 0
  2248  000060                     EUSART2_Write@txData:
  2249                           	opt stack 0
  2250  000060                     I2CWrite@BufferLen:
  2251                           	opt stack 0
  2252  000060                     LCD_Erase@i:
  2253                           	opt stack 0
  2254  000060                     SPI1_Exchange8bit@data:
  2255                           	opt stack 0
  2256  000060                     ___lbmod@divisor:
  2257                           	opt stack 0
  2258  000060                     NVMalloc@size:
  2259                           	opt stack 0
  2260  000060                     Find_Index@DestAddr:
  2261                           	opt stack 0
  2262  000060                     isSameAddress@Address1:
  2263                           	opt stack 0
  2264  000060                     DELAY_ms@ms:
  2265                           	opt stack 0
  2266  000060                     ___wmul@multiplier:
  2267                           	opt stack 0
  2268  000060                     ___lwdiv@dividend:
  2269                           	opt stack 0
  2270  000060                     DELAY_10us@tenMicroSecondCounter:
  2271                           	opt stack 0
  2272                           
  2273                           ; 4 bytes @ 0x0
  2274  000060                     	ds	1
  2275  000061                     RegisterRead@address:
  2276                           	opt stack 0
  2277  000061                     WriteFIFO@Data:
  2278                           	opt stack 0
  2279  000061                     Total_Connections@i:
  2280                           	opt stack 0
  2281  000061                     CONSOLE_PrintHex@PRINT_VAR:
  2282                           	opt stack 0
  2283  000061                     I2CWrite@Commandlen:
  2284                           	opt stack 0
  2285  000061                     _isdigit$4052:
  2286                           	opt stack 0
  2287  000061                     ___lbmod@dividend:
  2288                           	opt stack 0
  2289  000061                     RegisterSet@setting:
  2290                           	opt stack 0
  2291  000061                     NVMRead@dest:
  2292                           	opt stack 0
  2293  000061                     NVMWrite@source:
  2294                           	opt stack 0
  2295  000061                     CONSOLE_PutString@str:
  2296                           	opt stack 0
  2297  000061                     EEPROM_Read@dest:
  2298                           	opt stack 0
  2299                           
  2300                           ; 2 bytes @ 0x1
  2301  000061                     	ds	1
  2302  000062                     ??_DELAY_ms:
  2303  000062                     RegisterRead@value:
  2304                           	opt stack 0
  2305  000062                     WriteFIFO@IRQ1select:
  2306                           	opt stack 0
  2307  000062                     NVMalloc@location:
  2308                           	opt stack 0
  2309  000062                     CONSOLE_PrintHex@toPrint:
  2310                           	opt stack 0
  2311  000062                     isdigit@c:
  2312                           	opt stack 0
  2313  000062                     ___lbmod@counter:
  2314                           	opt stack 0
  2315  000062                     isSameAddress@Address2:
  2316                           	opt stack 0
  2317  000062                     ___wmul@multiplicand:
  2318                           	opt stack 0
  2319  000062                     ___lwdiv@divisor:
  2320                           	opt stack 0
  2321                           
  2322                           ; 2 bytes @ 0x2
  2323  000062                     	ds	1
  2324  000063                     ??_NVMalloc:
  2325  000063                     RegisterSet@IRQ1select:
  2326                           	opt stack 0
  2327  000063                     RegisterRead@IRQ1select:
  2328                           	opt stack 0
  2329  000063                     CONSOLE_PutString@c:
  2330                           	opt stack 0
  2331  000063                     EEPROM_Read@addr:
  2332                           	opt stack 0
  2333  000063                     ___lbmod@rem:
  2334                           	opt stack 0
  2335  000063                     NVMRead@addr:
  2336                           	opt stack 0
  2337  000063                     NVMWrite@addr:
  2338                           	opt stack 0
  2339                           
  2340                           ; 2 bytes @ 0x3
  2341  000063                     	ds	1
  2342  000064                     ??_MiWi_TickGet:
  2343  000064                     ??_DumpConnection:
  2344  000064                     SetRFMode@mode:
  2345                           	opt stack 0
  2346  000064                     Find_Index@i:
  2347                           	opt stack 0
  2348  000064                     EEPROM_Read@count:
  2349                           	opt stack 0
  2350  000064                     ___lbdiv@divisor:
  2351                           	opt stack 0
  2352  000064                     ___lwdiv@counter:
  2353                           	opt stack 0
  2354  000064                     ___wmul@product:
  2355                           	opt stack 0
  2356  000064                     DELAY_10us@cyclesRequiredForEntireDelay:
  2357                           	opt stack 0
  2358                           
  2359                           ; 4 bytes @ 0x4
  2360  000064                     	ds	1
  2361  000065                     MiMAC_SetChannel@offsetFreq:
  2362                           	opt stack 0
  2363  000065                     NVMInit@result:
  2364                           	opt stack 0
  2365  000065                     EEPROM_Read@oldGIEH:
  2366                           	opt stack 0
  2367  000065                     MiWi_TickGet@failureCounter:
  2368                           	opt stack 0
  2369  000065                     ___lbdiv@dividend:
  2370                           	opt stack 0
  2371  000065                     NVMRead@count:
  2372                           	opt stack 0
  2373  000065                     NVMWrite@count:
  2374                           	opt stack 0
  2375  000065                     ___lwdiv@quotient:
  2376                           	opt stack 0
  2377                           
  2378                           ; 2 bytes @ 0x5
  2379  000065                     	ds	1
  2380  000066                     ??_MiMAC_SetChannel:
  2381  000066                     handle_lost_connection@i:
  2382                           	opt stack 0
  2383  000066                     isSameAddress@i:
  2384                           	opt stack 0
  2385  000066                     DumpConnection@index:
  2386                           	opt stack 0
  2387  000066                     ___lbdiv@counter:
  2388                           	opt stack 0
  2389  000066                     Read_MAC_Address@myAddress:
  2390                           	opt stack 0
  2391  000066                     MiWi_TickGet@currentTime:
  2392                           	opt stack 0
  2393                           
  2394                           ; 4 bytes @ 0x6
  2395  000066                     	ds	1
  2396  000067                     ??_NVMWrite:
  2397  000067                     ?___lwmod:
  2398                           	opt stack 0
  2399  000067                     MiMAC_SetChannel@channel:
  2400                           	opt stack 0
  2401  000067                     NVMRead@oldRFIE:
  2402                           	opt stack 0
  2403  000067                     DumpConnection@j:
  2404                           	opt stack 0
  2405  000067                     ___lbdiv@quotient:
  2406                           	opt stack 0
  2407  000067                     store_connection_tb@payload:
  2408                           	opt stack 0
  2409  000067                     ___lwmod@dividend:
  2410                           	opt stack 0
  2411                           
  2412                           ; 2 bytes @ 0x7
  2413  000067                     	ds	1
  2414  000068                     ??_CONSOLE_PrintDec:
  2415  000068                     ??_Read_MAC_Address:
  2416  000068                     NVMWrite@oldRFIE:
  2417                           	opt stack 0
  2418  000068                     DumpConnection@i:
  2419                           	opt stack 0
  2420                           
  2421                           ; 1 bytes @ 0x8
  2422  000068                     	ds	1
  2423  000069                     ??_store_connection_tb:
  2424  000069                     NVMWrite@PageCounter:
  2425                           	opt stack 0
  2426  000069                     ___lwmod@divisor:
  2427                           	opt stack 0
  2428                           
  2429                           ; 2 bytes @ 0x9
  2430  000069                     	ds	1
  2431  00006A                     ??_AddConnection:
  2432  00006A                     ??_MiMAC_ReceivedPacket:
  2433  00006A                     ??_MiApp_ConnectionMode:
  2434  00006A                     TxPacket@CCA:
  2435                           	opt stack 0
  2436  00006A                     MiApp_SetChannel@channel:
  2437                           	opt stack 0
  2438  00006A                     CONSOLE_PrintDec@toPrint:
  2439                           	opt stack 0
  2440  00006A                     Read_MAC_Address@i:
  2441                           	opt stack 0
  2442  00006A                     DELAY_ms@cyclesRequiredForEntireDelay:
  2443                           	opt stack 0
  2444  00006A                     ButtonPressed@tickDifference:
  2445                           	opt stack 0
  2446                           
  2447                           ; 4 bytes @ 0xA
  2448  00006A                     	ds	1
  2449  00006B                     ??_TxPacket:
  2450  00006B                     store_connection_tb@j:
  2451                           	opt stack 0
  2452  00006B                     MiApp_ConnectionMode@Mode:
  2453                           	opt stack 0
  2454  00006B                     DemoOutput_ChannelError@channel:
  2455                           	opt stack 0
  2456  00006B                     ___lwmod@counter:
  2457                           	opt stack 0
  2458                           
  2459                           ; 1 bytes @ 0xB
  2460  00006B                     	ds	1
  2461  00006C                     ?_sprintf:
  2462                           	opt stack 0
  2463  00006C                     store_connection_tb@i:
  2464                           	opt stack 0
  2465  00006C                     sprintf@sp:
  2466                           	opt stack 0
  2467                           
  2468                           ; 2 bytes @ 0xC
  2469  00006C                     	ds	2
  2470  00006E                     MiMAC_PowerState@PowerState:
  2471                           	opt stack 0
  2472  00006E                     sprintf@f:
  2473                           	opt stack 0
  2474  00006E                     MiMAC_Init@initValue:
  2475                           	opt stack 0
  2476  00006E                     ButtonPressed@t:
  2477                           	opt stack 0
  2478                           
  2479                           ; 4 bytes @ 0xE
  2480  00006E                     	ds	1
  2481  00006F                     MiMAC_PowerState@i:
  2482                           	opt stack 0
  2483  00006F                     AddConnection@connectionSlot:
  2484                           	opt stack 0
  2485  00006F                     TxPacket@t1:
  2486                           	opt stack 0
  2487                           
  2488                           ; 4 bytes @ 0xF
  2489  00006F                     	ds	1
  2490  000070                     AddConnection@i:
  2491                           	opt stack 0
  2492                           
  2493                           ; 1 bytes @ 0x10
  2494  000070                     	ds	1
  2495  000071                     MiMAC_Init@i:
  2496                           	opt stack 0
  2497                           
  2498                           ; 1 bytes @ 0x11
  2499  000071                     	ds	1
  2500  000072                     MiApp_ProtocolInit@bNetworkFreezer:
  2501                           	opt stack 0
  2502  000072                     MiMAC_ReceivedPacket@currentTick:
  2503                           	opt stack 0
  2504                           
  2505                           ; 4 bytes @ 0x12
  2506  000072                     	ds	1
  2507  000073                     MiApp_ProtocolInit@initValue:
  2508                           	opt stack 0
  2509  000073                     TxPacket@t2:
  2510                           	opt stack 0
  2511                           
  2512                           ; 4 bytes @ 0x13
  2513  000073                     	ds	3
  2514  000076                     MiMAC_ReceivedPacket@PayloadIndex:
  2515                           	opt stack 0
  2516  000076                     MiApp_ProtocolInit@i:
  2517                           	opt stack 0
  2518                           
  2519                           ; 1 bytes @ 0x16
  2520  000076                     	ds	1
  2521  000077                     TxPacket@CCARetries:
  2522                           	opt stack 0
  2523  000077                     MiMAC_ReceivedPacket@i:
  2524                           	opt stack 0
  2525                           
  2526                           ; 1 bytes @ 0x17
  2527  000077                     	ds	1
  2528  000078                     ??_sprintf:
  2529  000078                     TxPacket@reTry:
  2530                           	opt stack 0
  2531                           
  2532                           ; 1 bytes @ 0x18
  2533  000078                     	ds	1
  2534  000079                     TxPacket@allowedTxFailure:
  2535                           	opt stack 0
  2536                           
  2537                           ; 1 bytes @ 0x19
  2538  000079                     	ds	1
  2539  00007A                     TxPacket@rssival:
  2540                           	opt stack 0
  2541                           
  2542                           ; 1 bytes @ 0x1A
  2543  00007A                     	ds	1
  2544  00007B                     TxPacket@TxPacketLen:
  2545                           	opt stack 0
  2546                           
  2547                           ; 1 bytes @ 0x1B
  2548  00007B                     	ds	1
  2549  00007C                     TxPacket@status:
  2550                           	opt stack 0
  2551  00007C                     sprintf@idx:
  2552                           	opt stack 0
  2553                           
  2554                           ; 1 bytes @ 0x1C
  2555  00007C                     	ds	1
  2556  00007D                     TxPacket@i:
  2557                           	opt stack 0
  2558  00007D                     _sprintf$3821:
  2559                           	opt stack 0
  2560                           
  2561                           ; 2 bytes @ 0x1D
  2562  00007D                     	ds	1
  2563  00007E                     MiMAC_SendPacket@transParam:
  2564                           	opt stack 0
  2565                           
  2566                           ; 3 bytes @ 0x1E
  2567  00007E                     	ds	1
  2568  00007F                     _sprintf$3822:
  2569                           	opt stack 0
  2570                           
  2571                           ; 2 bytes @ 0x1F
  2572  00007F                     	ds	2
  2573  000081                     MiMAC_SendPacket@MACPayload:
  2574                           	opt stack 0
  2575  000081                     _sprintf$3828:
  2576                           	opt stack 0
  2577                           
  2578                           ; 2 bytes @ 0x21
  2579  000081                     	ds	2
  2580  000083                     MiMAC_SendPacket@MACPayloadLen:
  2581                           	opt stack 0
  2582  000083                     sprintf@cp:
  2583                           	opt stack 0
  2584                           
  2585                           ; 1 bytes @ 0x23
  2586  000083                     	ds	1
  2587  000084                     ??_MiMAC_SendPacket:
  2588  000084                     sprintf@len:
  2589                           	opt stack 0
  2590                           
  2591                           ; 2 bytes @ 0x24
  2592  000084                     	ds	1
  2593  000085                     MiMAC_SendPacket@TxIndex:
  2594                           	opt stack 0
  2595                           
  2596                           ; 1 bytes @ 0x25
  2597  000085                     	ds	1
  2598  000086                     MiMAC_SendPacket@i:
  2599                           	opt stack 0
  2600  000086                     sprintf@ap:
  2601                           	opt stack 0
  2602                           
  2603                           ; 1 bytes @ 0x26
  2604  000086                     	ds	1
  2605  000087                     SendPacket@DestinationAddress:
  2606                           	opt stack 0
  2607  000087                     sprintf@val:
  2608                           	opt stack 0
  2609                           
  2610                           ; 2 bytes @ 0x27
  2611  000087                     	ds	2
  2612  000089                     SendPacket@isCommand:
  2613                           	opt stack 0
  2614  000089                     sprintf@prec:
  2615                           	opt stack 0
  2616                           
  2617                           ; 1 bytes @ 0x29
  2618  000089                     	ds	1
  2619  00008A                     SendPacket@SecurityEnabled:
  2620                           	opt stack 0
  2621  00008A                     sprintf@width:
  2622                           	opt stack 0
  2623                           
  2624                           ; 2 bytes @ 0x2A
  2625  00008A                     	ds	1
  2626  00008B                     ??_SendPacket:
  2627                           
  2628                           ; 0 bytes @ 0x2B
  2629  00008B                     	ds	1
  2630  00008C                     SendPacket@status:
  2631                           	opt stack 0
  2632  00008C                     sprintf@c:
  2633                           	opt stack 0
  2634                           
  2635                           ; 1 bytes @ 0x2C
  2636  00008C                     	ds	1
  2637  00008D                     SendPacket@Broadcast:
  2638                           	opt stack 0
  2639  00008D                     sprintf@flag:
  2640                           	opt stack 0
  2641                           
  2642                           ; 2 bytes @ 0x2D
  2643  00008D                     	ds	1
  2644  00008E                     SendPacket@tParam:
  2645                           	opt stack 0
  2646                           
  2647                           ; 3 bytes @ 0x2E
  2648  00008E                     	ds	1
  2649  00008F                     LCDTRXCount@rxCount:
  2650                           	opt stack 0
  2651  00008F                     LCDDisplay@text:
  2652                           	opt stack 0
  2653                           
  2654                           ; 2 bytes @ 0x2F
  2655  00008F                     	ds	1
  2656  000090                     LCDTRXCount@txCount:
  2657                           	opt stack 0
  2658                           
  2659                           ; 1 bytes @ 0x30
  2660  000090                     	ds	1
  2661  000091                     CheckForData@tmpTxData:
  2662                           	opt stack 0
  2663  000091                     LCDDisplay@value:
  2664                           	opt stack 0
  2665  000091                     DemoOutput_UpdateTxRx@RxNum:
  2666                           	opt stack 0
  2667  000091                     MiApp_UnicastAddress@DestinationAddress:
  2668                           	opt stack 0
  2669  000091                     SW_Ack_SrED@Dest_Addr:
  2670                           	opt stack 0
  2671                           
  2672                           ; 2 bytes @ 0x31
  2673  000091                     	ds	1
  2674  000092                     CheckForData@firstuint8_t:
  2675                           	opt stack 0
  2676  000092                     LCDDisplay@delay:
  2677                           	opt stack 0
  2678  000092                     DemoOutput_UpdateTxRx@TxNum:
  2679                           	opt stack 0
  2680                           
  2681                           ; 1 bytes @ 0x32
  2682  000092                     	ds	1
  2683  000093                     MiApp_UnicastAddress@PermanentAddr:
  2684                           	opt stack 0
  2685  000093                     LCDDisplay@i:
  2686                           	opt stack 0
  2687                           
  2688                           ; 1 bytes @ 0x33
  2689  000093                     	ds	1
  2690  000094                     MiApp_UnicastAddress@SecEn:
  2691                           	opt stack 0
  2692  000094                     DemoOutput_Channel@Step:
  2693                           	opt stack 0
  2694  000094                     STAR_DEMO_OPTIONS_MESSAGE@NetworkRole:
  2695                           	opt stack 0
  2696  000094                     freezer_feature@PressedButton1:
  2697                           	opt stack 0
  2698                           
  2699                           ; 1 bytes @ 0x34
  2700  000094                     	ds	1
  2701  000095                     MiApp_UnicastConnection@SecEn:
  2702                           	opt stack 0
  2703  000095                     DemoOutput_Channel@channel:
  2704                           	opt stack 0
  2705                           
  2706                           ; 1 bytes @ 0x35
  2707  000095                     	ds	1
  2708  000096                     MiApp_UnicastConnection@ConnectionIndex:
  2709                           	opt stack 0
  2710                           
  2711                           ; 1 bytes @ 0x36
  2712  000096                     	ds	1
  2713  000097                     Forward_Packet_PANCr_to_EDy@fw_payload:
  2714                           	opt stack 0
  2715                           
  2716                           ; 2 bytes @ 0x37
  2717  000097                     	ds	2
  2718  000099                     Forward_Packet_PANCr_to_EDy@index:
  2719                           	opt stack 0
  2720                           
  2721                           ; 1 bytes @ 0x39
  2722  000099                     	ds	1
  2723  00009A                     Forward_Packet_PANCr_to_EDy@EDxAddress:
  2724                           	opt stack 0
  2725                           
  2726                           ; 2 bytes @ 0x3A
  2727  00009A                     	ds	2
  2728  00009C                     Forward_Packet_PANCr_to_EDy@status:
  2729                           	opt stack 0
  2730                           
  2731                           ; 1 bytes @ 0x3C
  2732  00009C                     	ds	1
  2733  00009D                     Forward_Packet_PANCr_to_EDy@i:
  2734                           	opt stack 0
  2735                           
  2736                           ; 1 bytes @ 0x3D
  2737  00009D                     	ds	1
  2738  00009E                     ??_P2PTasks:
  2739                           
  2740                           ; 0 bytes @ 0x3E
  2741  00009E                     	ds	4
  2742  0000A2                     P2PTasks@FW_Stat:
  2743                           	opt stack 0
  2744                           
  2745                           ; 1 bytes @ 0x42
  2746  0000A2                     	ds	1
  2747  0000A3                     P2PTasks@final_index:
  2748                           	opt stack 0
  2749                           
  2750                           ; 1 bytes @ 0x43
  2751  0000A3                     	ds	1
  2752  0000A4                     P2PTasks@tmpTick:
  2753                           	opt stack 0
  2754                           
  2755                           ; 4 bytes @ 0x44
  2756  0000A4                     	ds	4
  2757  0000A8                     P2PTasks@i:
  2758                           	opt stack 0
  2759                           
  2760                           ; 1 bytes @ 0x48
  2761  0000A8                     	ds	1
  2762  0000A9                     ??_MiApp_UnicastStar:
  2763  0000A9                     MiApp_TransceiverPowerState@Mode:
  2764                           	opt stack 0
  2765  0000A9                     MiApp_EstablishConnection@Mode:
  2766                           	opt stack 0
  2767                           
  2768                           ; 1 bytes @ 0x49
  2769  0000A9                     	ds	1
  2770  0000AA                     ??_MiApp_EstablishConnection:
  2771                           
  2772                           ; 0 bytes @ 0x4A
  2773  0000AA                     	ds	3
  2774  0000AD                     MiApp_UnicastStar@SecEn:
  2775                           	opt stack 0
  2776                           
  2777                           ; 1 bytes @ 0x4D
  2778  0000AD                     	ds	1
  2779  0000AE                     MiApp_EstablishConnection@tmpConnectionMode:
  2780                           	opt stack 0
  2781  0000AE                     MiApp_UnicastStar@t1:
  2782                           	opt stack 0
  2783                           
  2784                           ; 4 bytes @ 0x4E
  2785  0000AE                     	ds	1
  2786  0000AF                     MiApp_EstablishConnection@retry:
  2787                           	opt stack 0
  2788                           
  2789                           ; 1 bytes @ 0x4F
  2790  0000AF                     	ds	1
  2791  0000B0                     MiApp_EstablishConnection@connectionInterval:
  2792                           	opt stack 0
  2793                           
  2794                           ; 1 bytes @ 0x50
  2795  0000B0                     	ds	1
  2796  0000B1                     MiApp_EstablishConnection@t1:
  2797                           	opt stack 0
  2798                           
  2799                           ; 4 bytes @ 0x51
  2800  0000B1                     	ds	1
  2801  0000B2                     MiApp_UnicastStar@t2:
  2802                           	opt stack 0
  2803                           
  2804                           ; 4 bytes @ 0x52
  2805  0000B2                     	ds	3
  2806  0000B5                     MiApp_EstablishConnection@t2:
  2807                           	opt stack 0
  2808                           
  2809                           ; 4 bytes @ 0x55
  2810  0000B5                     	ds	4
  2811  0000B9                     MiApp_EstablishConnection@i:
  2812                           	opt stack 0
  2813                           
  2814                           ; 1 bytes @ 0x59
  2815  0000B9                     	ds	1
  2816  0000BA                     ??_run_star_demo:
  2817  0000BA                     Initialize_Demo@freezer_enable:
  2818                           	opt stack 0
  2819                           
  2820                           ; 1 bytes @ 0x5A
  2821  0000BA                     	ds	7
  2822  0000C1                     run_star_demo@sw_layer_ack_status:
  2823                           	opt stack 0
  2824                           
  2825                           ; 1 bytes @ 0x61
  2826  0000C1                     	ds	1
  2827  0000C2                     run_star_demo@update_ed:
  2828                           	opt stack 0
  2829                           
  2830                           ; 1 bytes @ 0x62
  2831  0000C2                     	ds	1
  2832  0000C3                     run_star_demo@PressedButton:
  2833                           	opt stack 0
  2834                           
  2835                           ; 1 bytes @ 0x63
  2836  0000C3                     	ds	1
  2837  0000C4                     run_star_demo@switch_val:
  2838                           	opt stack 0
  2839                           
  2840                           ; 1 bytes @ 0x64
  2841  0000C4                     	ds	1
  2842  0000C5                     run_star_demo@select_ed:
  2843                           	opt stack 0
  2844                           
  2845                           ; 1 bytes @ 0x65
  2846  0000C5                     	ds	1
  2847  0000C6                     main@freezer_enable:
  2848                           	opt stack 0
  2849                           
  2850                           ; 1 bytes @ 0x66
  2851  0000C6                     	ds	1
  2852                           tblptru	equ	0xFF8
  2853                           tblptrh	equ	0xFF7
  2854                           tblptrl	equ	0xFF6
  2855                           tablat	equ	0xFF5
  2856                           postinc0	equ	0xFEE
  2857                           wreg	equ	0xFE8
  2858                           postdec1	equ	0xFE5
  2859                           fsr1h	equ	0xFE2
  2860                           fsr1l	equ	0xFE1
  2861                           
  2862                           	psect	cstackCOMRAM
  2863  000001                     __pcstackCOMRAM:
  2864                           	opt stack 0
  2865  000001                     ?i2_MiWi_TickGet:
  2866                           	opt stack 0
  2867  000001                     i2SPI1_Exchange8bit@data:
  2868                           	opt stack 0
  2869  000001                     i2DELAY_ms@ms:
  2870                           	opt stack 0
  2871  000001                     i2DELAY_10us@tenMicroSecondCounter:
  2872                           	opt stack 0
  2873                           
  2874                           ; 4 bytes @ 0x0
  2875  000001                     	ds	1
  2876  000002                     i2RegisterRead@address:
  2877                           	opt stack 0
  2878  000002                     i2WriteFIFO@Data:
  2879                           	opt stack 0
  2880  000002                     i2RegisterSet@setting:
  2881                           	opt stack 0
  2882                           
  2883                           ; 2 bytes @ 0x1
  2884  000002                     	ds	1
  2885  000003                     ??i2_DELAY_ms:
  2886  000003                     i2RegisterRead@value:
  2887                           	opt stack 0
  2888  000003                     i2WriteFIFO@IRQ1select:
  2889                           	opt stack 0
  2890                           
  2891                           ; 1 bytes @ 0x2
  2892  000003                     	ds	1
  2893  000004                     i2RegisterSet@IRQ1select:
  2894                           	opt stack 0
  2895  000004                     i2RegisterRead@IRQ1select:
  2896                           	opt stack 0
  2897                           
  2898                           ; 1 bytes @ 0x3
  2899  000004                     	ds	1
  2900  000005                     ??i2_MiWi_TickGet:
  2901  000005                     i2SetRFMode@mode:
  2902                           	opt stack 0
  2903                           
  2904                           ; 1 bytes @ 0x4
  2905  000005                     	ds	1
  2906  000006                     i2MiWi_TickGet@failureCounter:
  2907                           	opt stack 0
  2908                           
  2909                           ; 1 bytes @ 0x5
  2910  000006                     	ds	1
  2911  000007                     i2MiWi_TickGet@currentTime:
  2912                           	opt stack 0
  2913                           
  2914                           ; 4 bytes @ 0x6
  2915  000007                     	ds	4
  2916  00000B                     i2TxPacket@CCA:
  2917                           	opt stack 0
  2918  00000B                     i2DELAY_ms@cyclesRequiredForEntireDelay:
  2919                           	opt stack 0
  2920                           
  2921                           ; 4 bytes @ 0xA
  2922  00000B                     	ds	1
  2923  00000C                     ??i2_TxPacket:
  2924                           
  2925                           ; 0 bytes @ 0xB
  2926  00000C                     	ds	3
  2927  00000F                     
  2928                           ; 0 bytes @ 0xE
  2929  00000F                     	ds	1
  2930  000010                     i2TxPacket@TxPacketLen:
  2931                           	opt stack 0
  2932                           
  2933                           ; 1 bytes @ 0xF
  2934  000010                     	ds	1
  2935  000011                     i2TxPacket@status:
  2936                           	opt stack 0
  2937                           
  2938                           ; 1 bytes @ 0x10
  2939  000011                     	ds	1
  2940  000012                     i2TxPacket@t1:
  2941                           	opt stack 0
  2942                           
  2943                           ; 4 bytes @ 0x11
  2944  000012                     	ds	4
  2945  000016                     i2TxPacket@t2:
  2946                           	opt stack 0
  2947                           
  2948                           ; 4 bytes @ 0x15
  2949  000016                     	ds	4
  2950  00001A                     i2TxPacket@CCARetries:
  2951                           	opt stack 0
  2952                           
  2953                           ; 1 bytes @ 0x19
  2954  00001A                     	ds	1
  2955  00001B                     i2TxPacket@reTry:
  2956                           	opt stack 0
  2957                           
  2958                           ; 1 bytes @ 0x1A
  2959  00001B                     	ds	1
  2960  00001C                     i2TxPacket@allowedTxFailure:
  2961                           	opt stack 0
  2962                           
  2963                           ; 1 bytes @ 0x1B
  2964  00001C                     	ds	1
  2965  00001D                     i2TxPacket@rssival:
  2966                           	opt stack 0
  2967                           
  2968                           ; 1 bytes @ 0x1C
  2969  00001D                     	ds	1
  2970  00001E                     i2TxPacket@i:
  2971                           	opt stack 0
  2972                           
  2973                           ; 1 bytes @ 0x1D
  2974  00001E                     	ds	1
  2975  00001F                     ??_high_isr:
  2976                           
  2977                           ; 0 bytes @ 0x1E
  2978  00001F                     	ds	10
  2979  000029                     high_isr@counter:
  2980                           	opt stack 0
  2981                           
  2982                           ; 2 bytes @ 0x28
  2983  000029                     	ds	2
  2984  00002B                     high_isr@fifo_stat:
  2985                           	opt stack 0
  2986                           
  2987                           ; 1 bytes @ 0x2A
  2988  00002B                     	ds	1
  2989  00002C                     high_isr@ackPacket:
  2990                           	opt stack 0
  2991                           
  2992                           ; 4 bytes @ 0x2B
  2993  00002C                     	ds	4
  2994  000030                     high_isr@bAck:
  2995                           	opt stack 0
  2996                           
  2997                           ; 1 bytes @ 0x2F
  2998  000030                     	ds	1
  2999  000031                     high_isr@RxPacketPtr:
  3000                           	opt stack 0
  3001                           
  3002                           ; 1 bytes @ 0x30
  3003  000031                     	ds	1
  3004  000032                     high_isr@ackInfoIndex:
  3005                           	opt stack 0
  3006                           
  3007                           ; 1 bytes @ 0x31
  3008  000032                     	ds	1
  3009  000033                     high_isr@PacketLen:
  3010                           	opt stack 0
  3011                           
  3012                           ; 1 bytes @ 0x32
  3013  000033                     	ds	1
  3014  000034                     high_isr@BankIndex:
  3015                           	opt stack 0
  3016                           
  3017                           ; 1 bytes @ 0x33
  3018  000034                     	ds	1
  3019  000035                     high_isr@i:
  3020                           	opt stack 0
  3021                           
  3022                           ; 1 bytes @ 0x34
  3023  000035                     	ds	1
  3024                           tblptru	equ	0xFF8
  3025                           tblptrh	equ	0xFF7
  3026                           tblptrl	equ	0xFF6
  3027                           tablat	equ	0xFF5
  3028                           postinc0	equ	0xFEE
  3029                           wreg	equ	0xFE8
  3030                           postdec1	equ	0xFE5
  3031                           fsr1h	equ	0xFE2
  3032                           fsr1l	equ	0xFE1
  3033                           
  3034 ;;
  3035 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3036 ;;
  3037 ;; *************** function _main *****************
  3038 ;; Defined at:
  3039 ;;		line 56 in file "../src/main.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  freezer_enab    1  102[BANK0 ] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;		None               void
  3046 ;; Registers used:
  3047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : F/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3056 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3057 ;;Total ram usage:        1 bytes
  3058 ;; Hardware stack levels required when called:   19
  3059 ;; This function calls:
  3060 ;;		_DemoOutput_Greeting
  3061 ;;		_Initialize_Demo
  3062 ;;		_Run_Demo
  3063 ;;		_SYSTEM_Initialize
  3064 ;;		_TMR1_Initialize
  3065 ;;		_freezer_feature
  3066 ;; This function is called by:
  3067 ;;		Startup code after reset
  3068 ;; This function uses a non-reentrant model
  3069 ;;
  3070                           
  3071                           	psect	text0
  3072  0033B4                     __ptext0:
  3073                           	opt stack 0
  3074  0033B4                     _main:
  3075                           	opt stack 12
  3076                           
  3077                           ;main.c: 60: SYSTEM_Initialize();
  3078                           
  3079                           ;incstack = 0
  3080  0033B4  ECFD  F013         	call	_SYSTEM_Initialize	;wreg free
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;main.c: 62: TMR1_Initialize();
  3084  0033B8  EC16  F01A         	call	_TMR1_Initialize	;wreg free
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;main.c: 64: DemoOutput_Greeting();
  3088  0033BC  ECBE  F010         	call	_DemoOutput_Greeting	;wreg free
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;main.c: 68: freezer_enable = freezer_feature();
  3092  0033C0  EC74  F019         	call	_freezer_feature	;wreg free
  3093  0033C4  6FC6               	movwf	main@freezer_enable& (0+255),b
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;main.c: 72: Initialize_Demo(freezer_enable);
  3097  0033C6  51C6               	movf	main@freezer_enable& (0+255),w,b
  3098  0033C8  EC3E  F014         	call	_Initialize_Demo
  3099  0033CC                     l12484:
  3100                           
  3101                           ; BSR set to: 0
  3102                           ;main.c: 74: {
  3103                           ;main.c: 76: Run_Demo();
  3104  0033CC  EC8D  F01A         	call	_Run_Demo	;wreg free
  3105  0033D0  D7FD               	goto	l12484
  3106  0033D2                     __end_of_main:
  3107                           	opt stack 0
  3108                           tblptru	equ	0xFF8
  3109                           tblptrh	equ	0xFF7
  3110                           tblptrl	equ	0xFF6
  3111                           tablat	equ	0xFF5
  3112                           postinc0	equ	0xFEE
  3113                           wreg	equ	0xFE8
  3114                           postdec1	equ	0xFE5
  3115                           fsr1h	equ	0xFE2
  3116                           fsr1l	equ	0xFE1
  3117                           
  3118 ;; *************** function _freezer_feature *****************
  3119 ;; Defined at:
  3120 ;;		line 74 in file "../src/task.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  PressedButto    1   52[BANK0 ] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      unsigned char 
  3127 ;; Registers used:
  3128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : F/0
  3131 ;;		On exit  : F/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3137 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    8
  3141 ;; This function calls:
  3142 ;;		_ButtonPressed
  3143 ;;		_LCDDisplay
  3144 ;; This function is called by:
  3145 ;;		_main
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text1
  3150  0032E8                     __ptext1:
  3151                           	opt stack 0
  3152  0032E8                     _freezer_feature:
  3153                           	opt stack 22
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;task.c: 77: LCDDisplay((char *)"RB0:New Network RB2:Freezer", 0, 0);
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;incstack = 0
  3160  0032E8  0E7E               	movlw	low STR_51
  3161  0032EA  6F8F               	movwf	LCDDisplay@text& (0+255),b
  3162  0032EC  0EFD               	movlw	high STR_51
  3163  0032EE  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
  3164  0032F0  6B91               	clrf	LCDDisplay@value& (0+255),b
  3165  0032F2  6B92               	clrf	LCDDisplay@delay& (0+255),b
  3166  0032F4  ECBA  F017         	call	_LCDDisplay	;wreg free
  3167  0032F8                     l12416:
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;task.c: 82: {
  3171                           ;task.c: 83: uint8_t PressedButton1 = ButtonPressed();
  3172  0032F8  ECBF  F014         	call	_ButtonPressed	;wreg free
  3173  0032FC  6F94               	movwf	freezer_feature@PressedButton1& (0+255),b
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;task.c: 84: if (PressedButton1 == 1)
  3177  0032FE  0594               	decf	freezer_feature@PressedButton1& (0+255),w,b
  3178  003300  E101               	bnz	l12428
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;task.c: 85: {
  3182                           ;task.c: 86: return 0;
  3183  003302  0C00               	retlw	0
  3184  003304                     l12428:
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;task.c: 89: else if (PressedButton1 == 2)
  3188  003304  0E02               	movlw	2
  3189  003306  1994               	xorwf	freezer_feature@PressedButton1& (0+255),w,b
  3190  003308  E1F7               	bnz	l12416
  3191                           
  3192                           ; BSR set to: 0
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;task.c: 90: {
  3196                           ;task.c: 91: return 1;
  3197  00330A  0C01               	retlw	1	;funcret
  3198  00330C                     __end_of_freezer_feature:
  3199                           	opt stack 0
  3200                           tblptru	equ	0xFF8
  3201                           tblptrh	equ	0xFF7
  3202                           tblptrl	equ	0xFF6
  3203                           tablat	equ	0xFF5
  3204                           postinc0	equ	0xFEE
  3205                           wreg	equ	0xFE8
  3206                           postdec1	equ	0xFE5
  3207                           fsr1h	equ	0xFE2
  3208                           fsr1l	equ	0xFE1
  3209                           
  3210 ;; *************** function _TMR1_Initialize *****************
  3211 ;; Defined at:
  3212 ;;		line 174 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/symbol.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;		None               void
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, cstack
  3221 ;; Tracked objects:
  3222 ;;		On entry : F/0
  3223 ;;		On exit  : F/0
  3224 ;;		Unchanged: F/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used:    1
  3232 ;; Hardware stack levels required when called:    6
  3233 ;; This function calls:
  3234 ;;		_TMR1_StartTimer
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text2
  3241  00342C                     __ptext2:
  3242                           	opt stack 0
  3243  00342C                     _TMR1_Initialize:
  3244                           	opt stack 24
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;symbol.c: 178: T1CON = 0x38;
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;incstack = 0
  3251  00342C  0E38               	movlw	56
  3252  00342E  6ECD               	movwf	4045,c	;volatile
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;symbol.c: 181: T1GCON = 0x00;
  3256  003430  6A9A               	clrf	3994,c	;volatile
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;symbol.c: 184: TMR1H = 0x00;
  3260  003432  6ACF               	clrf	4047,c	;volatile
  3261                           
  3262                           ; BSR set to: 0
  3263                           ;symbol.c: 187: TMR1L = 0x00;
  3264  003434  6ACE               	clrf	4046,c	;volatile
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;symbol.c: 190: timer1ReloadVal = TMR1;
  3268  003436  CFCE F052          	movff	4046,_timer1ReloadVal	;volatile
  3269  00343A  CFCF F053          	movff	4047,_timer1ReloadVal+1	;volatile
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;symbol.c: 193: PIR1bits.TMR1IF = 0;
  3273  00343E  909E               	bcf	3998,0,c	;volatile
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;symbol.c: 196: PIE1bits.TMR1IE = 1;
  3277  003440  809D               	bsf	3997,0,c	;volatile
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;symbol.c: 199: TMR1_StartTimer();
  3281  003442  EF8B  F01A         	goto	_TMR1_StartTimer	;wreg free
  3282  003446                     __end_of_TMR1_Initialize:
  3283                           	opt stack 0
  3284                           tblptru	equ	0xFF8
  3285                           tblptrh	equ	0xFF7
  3286                           tblptrl	equ	0xFF6
  3287                           tablat	equ	0xFF5
  3288                           postinc0	equ	0xFEE
  3289                           wreg	equ	0xFE8
  3290                           postdec1	equ	0xFE5
  3291                           fsr1h	equ	0xFE2
  3292                           fsr1l	equ	0xFE1
  3293                           
  3294 ;; *************** function _TMR1_StartTimer *****************
  3295 ;; Defined at:
  3296 ;;		line 202 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/symbol.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;		None               void
  3303 ;; Registers used:
  3304 ;;		None
  3305 ;; Tracked objects:
  3306 ;;		On entry : F/0
  3307 ;;		On exit  : F/0
  3308 ;;		Unchanged: F/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3314 ;;Total ram usage:        0 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:    5
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_TMR1_Initialize
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text3
  3325  003516                     __ptext3:
  3326                           	opt stack 0
  3327  003516                     _TMR1_StartTimer:
  3328                           	opt stack 24
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;symbol.c: 204: T1CONbits.TMR1ON = 1;
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;incstack = 0
  3335  003516  80CD               	bsf	4045,0,c	;volatile
  3336                           
  3337                           ; BSR set to: 0
  3338  003518  0012               	return		;funcret
  3339  00351A                     __end_of_TMR1_StartTimer:
  3340                           	opt stack 0
  3341                           tblptru	equ	0xFF8
  3342                           tblptrh	equ	0xFF7
  3343                           tblptrl	equ	0xFF6
  3344                           tablat	equ	0xFF5
  3345                           postinc0	equ	0xFEE
  3346                           wreg	equ	0xFE8
  3347                           postdec1	equ	0xFE5
  3348                           fsr1h	equ	0xFE2
  3349                           fsr1l	equ	0xFE1
  3350                           
  3351 ;; *************** function _SYSTEM_Initialize *****************
  3352 ;; Defined at:
  3353 ;;		line 50 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/system.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : F/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3371 ;;Total ram usage:        0 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    7
  3374 ;; This function calls:
  3375 ;;		_LCD_Initialize
  3376 ;; This function is called by:
  3377 ;;		_main
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text4
  3382  0027FA                     __ptext4:
  3383                           	opt stack 0
  3384  0027FA                     _SYSTEM_Initialize:
  3385                           	opt stack 23
  3386                           
  3387                           ;system.c: 54: OSCCON = 0x7B;
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;incstack = 0
  3391  0027FA  0E7B               	movlw	123
  3392  0027FC  6ED3               	movwf	4051,c	;volatile
  3393                           
  3394                           ;system.c: 55: WDTCONbits.SWDTEN = 0;
  3395  0027FE  90C0               	bcf	4032,0,c	;volatile
  3396                           
  3397                           ;system.c: 57: INTCON = 0;
  3398  002800  6AF2               	clrf	intcon,c	;volatile
  3399                           
  3400                           ;system.c: 59: EECON2 = 0x55;
  3401  002802  0E55               	movlw	85
  3402  002804  6EA7               	movwf	4007,c	;volatile
  3403                           
  3404                           ;system.c: 60: EECON2 = 0xAA;
  3405  002806  0EAA               	movlw	170
  3406  002808  6EA7               	movwf	4007,c	;volatile
  3407                           
  3408                           ;system.c: 61: PPSCONbits.IOLOCK = 0;
  3409  00280A  010E               	movlb	14	; () banked
  3410  00280C  91FF               	bcf	255,0,b	;volatile
  3411                           
  3412                           ;system.c: 72: RPINR3 = 6;
  3413  00280E  0E06               	movlw	6
  3414  002810  6FE9               	movwf	233,b	;volatile
  3415                           
  3416                           ;system.c: 84: RPINR16 = 19;
  3417  002812  0E13               	movlw	19
  3418  002814  6FF6               	movwf	246,b	;volatile
  3419                           
  3420                           ;system.c: 85: RPOR17 = 5;
  3421  002816  0E05               	movlw	5
  3422  002818  6FD7               	movwf	215,b	;volatile
  3423                           
  3424                           ;system.c: 88: EECON2 = 0x55;
  3425  00281A  0E55               	movlw	85
  3426  00281C  6EA7               	movwf	4007,c	;volatile
  3427                           
  3428                           ;system.c: 89: EECON2 = 0xAA;
  3429  00281E  0EAA               	movlw	170
  3430  002820  6EA7               	movwf	4007,c	;volatile
  3431                           
  3432                           ; BSR set to: 14
  3433                           ;system.c: 90: PPSCONbits.IOLOCK = 1;
  3434  002822  81FF               	bsf	255,0,b	;volatile
  3435                           
  3436                           ; BSR set to: 14
  3437                           ;system.c: 93: ANCON0 = 0xFF;
  3438  002824  010F               	movlb	15	; () banked
  3439  002826  6948               	setf	72,b	;volatile
  3440                           
  3441                           ;system.c: 94: ANCON1 = 0x3F;
  3442  002828  0E3F               	movlw	63
  3443  00282A  6F49               	movwf	73,b	;volatile
  3444                           
  3445                           ; BSR set to: 15
  3446                           ;system.c: 95: INTCON2bits.RBPU = 0;
  3447  00282C  9EF1               	bcf	intcon2,7,c	;volatile
  3448                           
  3449                           ; BSR set to: 15
  3450                           ;system.c: 97: TRISA = 0xFF;
  3451  00282E  6892               	setf	3986,c	;volatile
  3452                           
  3453                           ; BSR set to: 15
  3454                           ;system.c: 98: TRISB = 0xFF;
  3455  002830  6893               	setf	3987,c	;volatile
  3456                           
  3457                           ; BSR set to: 15
  3458                           ;system.c: 99: TRISC = 0xFF;
  3459  002832  6894               	setf	3988,c	;volatile
  3460                           
  3461                           ; BSR set to: 15
  3462                           ;system.c: 100: TRISD = 0xFF;
  3463  002834  6895               	setf	3989,c	;volatile
  3464                           
  3465                           ; BSR set to: 15
  3466                           ;system.c: 101: TRISE = 0xFF;
  3467  002836  6896               	setf	3990,c	;volatile
  3468                           
  3469                           ; BSR set to: 15
  3470                           ;system.c: 103: LATA = 0;
  3471  002838  6A89               	clrf	3977,c	;volatile
  3472                           
  3473                           ; BSR set to: 15
  3474                           ;system.c: 104: LATB = 0;
  3475  00283A  6A8A               	clrf	3978,c	;volatile
  3476                           
  3477                           ; BSR set to: 15
  3478                           ;system.c: 106: LATD = 0;
  3479  00283C  6A8C               	clrf	3980,c	;volatile
  3480                           
  3481                           ; BSR set to: 15
  3482                           ;system.c: 107: LATE = 0;
  3483  00283E  6A8D               	clrf	3981,c	;volatile
  3484                           
  3485                           ; BSR set to: 15
  3486                           ;system.c: 109: TRISDbits.TRISD2 = 0;
  3487  002840  9495               	bcf	3989,2,c	;volatile
  3488                           
  3489                           ; BSR set to: 15
  3490                           ;system.c: 110: LATDbits.LATD2 = 1;
  3491  002842  848C               	bsf	3980,2,c	;volatile
  3492                           
  3493                           ; BSR set to: 15
  3494                           ;system.c: 111: TRISCbits.TRISC6 = 0;
  3495  002844  9C94               	bcf	3988,6,c	;volatile
  3496                           
  3497                           ; BSR set to: 15
  3498                           ;system.c: 112: LATCbits.LATC6 = 0;
  3499  002846  9C8B               	bcf	3979,6,c	;volatile
  3500                           
  3501                           ; BSR set to: 15
  3502                           ;system.c: 115: TRISBbits.TRISB0 = 1;
  3503  002848  8093               	bsf	3987,0,c	;volatile
  3504                           
  3505                           ; BSR set to: 15
  3506                           ;system.c: 116: TRISBbits.TRISB2 = 1;
  3507  00284A  8493               	bsf	3987,2,c	;volatile
  3508                           
  3509                           ; BSR set to: 15
  3510                           ;system.c: 117: TRISAbits.TRISA2 = 0;
  3511  00284C  9492               	bcf	3986,2,c	;volatile
  3512                           
  3513                           ; BSR set to: 15
  3514                           ;system.c: 118: TRISAbits.TRISA3 = 0;
  3515  00284E  9692               	bcf	3986,3,c	;volatile
  3516                           
  3517                           ; BSR set to: 15
  3518                           ;system.c: 128: TRISDbits.TRISD7 = 1;
  3519  002850  8E95               	bsf	3989,7,c	;volatile
  3520                           
  3521                           ; BSR set to: 15
  3522                           ;system.c: 129: TRISBbits.TRISB3 = 1;
  3523  002852  8693               	bsf	3987,3,c	;volatile
  3524                           
  3525                           ; BSR set to: 15
  3526                           ;system.c: 130: TRISDbits.TRISD3 = 1;
  3527  002854  8695               	bsf	3989,3,c	;volatile
  3528                           
  3529                           ; BSR set to: 15
  3530                           ;system.c: 139: TRISBbits.TRISB5 = 1;
  3531  002856  8A93               	bsf	3987,5,c	;volatile
  3532                           
  3533                           ; BSR set to: 15
  3534                           ;system.c: 140: TRISCbits.TRISC7 = 0;
  3535  002858  9E94               	bcf	3988,7,c	;volatile
  3536                           
  3537                           ; BSR set to: 15
  3538                           ;system.c: 141: TRISBbits.TRISB4 = 0;
  3539  00285A  9893               	bcf	3987,4,c	;volatile
  3540                           
  3541                           ;system.c: 145: SSP1STAT = 0xC0;
  3542  00285C  0EC0               	movlw	192
  3543  00285E  6EC7               	movwf	4039,c	;volatile
  3544                           
  3545                           ;system.c: 146: SSP1CON1 = 0x21;
  3546  002860  0E21               	movlw	33
  3547  002862  6EC6               	movwf	4038,c	;volatile
  3548                           
  3549                           ; BSR set to: 15
  3550                           ;system.c: 175: TRISCbits.TRISC2 = 0;
  3551  002864  9494               	bcf	3988,2,c	;volatile
  3552                           
  3553                           ; BSR set to: 15
  3554                           ;system.c: 176: TRISEbits.TRISE1 = 0;
  3555  002866  9296               	bcf	3990,1,c	;volatile
  3556                           
  3557                           ; BSR set to: 15
  3558                           ;system.c: 177: LATCbits.LATC2 = 1;
  3559  002868  848B               	bsf	3979,2,c	;volatile
  3560                           
  3561                           ; BSR set to: 15
  3562                           ;system.c: 178: LATEbits.LATE1 = 1;
  3563  00286A  828D               	bsf	3981,1,c	;volatile
  3564                           
  3565                           ; BSR set to: 15
  3566                           ;system.c: 179: INTCON2bits.INTEDG3 = 1;
  3567  00286C  86F1               	bsf	intcon2,3,c	;volatile
  3568                           
  3569                           ; BSR set to: 15
  3570                           ;system.c: 181: TRISEbits.TRISE0 = 0;
  3571  00286E  9096               	bcf	3990,0,c	;volatile
  3572                           
  3573                           ; BSR set to: 15
  3574                           ;system.c: 182: LATEbits.LATE0 = 1;
  3575  002870  808D               	bsf	3981,0,c	;volatile
  3576                           
  3577                           ; BSR set to: 15
  3578                           ;system.c: 185: TRISDbits.TRISD5 = 0;
  3579  002872  9A95               	bcf	3989,5,c	;volatile
  3580                           
  3581                           ; BSR set to: 15
  3582                           ;system.c: 186: LATDbits.LATD5 = 1;
  3583  002874  8A8C               	bsf	3980,5,c	;volatile
  3584                           
  3585                           ; BSR set to: 15
  3586                           ;system.c: 190: INTCONbits.GIEH = 1;
  3587  002876  8EF2               	bsf	intcon,7,c	;volatile
  3588                           
  3589                           ; BSR set to: 15
  3590                           ;system.c: 197: LCD_Initialize();
  3591  002878  EF98  F017         	goto	_LCD_Initialize	;wreg free
  3592  00287C                     __end_of_SYSTEM_Initialize:
  3593                           	opt stack 0
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           intcon	equ	0xFF2
  3599                           intcon2	equ	0xFF1
  3600                           postinc0	equ	0xFEE
  3601                           wreg	equ	0xFE8
  3602                           postdec1	equ	0xFE5
  3603                           fsr1h	equ	0xFE2
  3604                           fsr1l	equ	0xFE1
  3605                           
  3606 ;; *************** function _LCD_Initialize *****************
  3607 ;; Defined at:
  3608 ;;		line 150 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/lcd.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;		None               void
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : F/F
  3619 ;;		On exit  : F/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    6
  3629 ;; This function calls:
  3630 ;;		_DELAY_ms
  3631 ;;		_I2CWrite
  3632 ;; This function is called by:
  3633 ;;		_SYSTEM_Initialize
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           	psect	text5
  3638  002F30                     __ptext5:
  3639                           	opt stack 0
  3640  002F30                     _LCD_Initialize:
  3641                           	opt stack 23
  3642                           
  3643                           ; BSR set to: 15
  3644                           ;lcd.c: 153: TRISD |= 0x53;
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;incstack = 0
  3648  002F30  0E53               	movlw	83
  3649  002F32  1295               	iorwf	3989,f,c	;volatile
  3650                           
  3651                           ; BSR set to: 15
  3652                           ;lcd.c: 156: PIR3bits.SSP2IF = 0;
  3653  002F34  9EA4               	bcf	4004,7,c	;volatile
  3654                           
  3655                           ; BSR set to: 15
  3656                           ;lcd.c: 157: SSP2STAT = 0x00;
  3657  002F36  6A73               	clrf	3955,c	;volatile
  3658                           
  3659                           ; BSR set to: 15
  3660                           ;lcd.c: 159: SSP2ADD = 0xF0;
  3661  002F38  0EF0               	movlw	240
  3662  002F3A  6E74               	movwf	3956,c	;volatile
  3663                           
  3664                           ; BSR set to: 15
  3665                           ;lcd.c: 160: SSP2CON1 = 0x28;
  3666  002F3C  0E28               	movlw	40
  3667  002F3E  6E72               	movwf	3954,c	;volatile
  3668                           
  3669                           ; BSR set to: 15
  3670                           ;lcd.c: 161: SSP2CON2 = 0x00;
  3671  002F40  6A71               	clrf	3953,c	;volatile
  3672                           
  3673                           ; BSR set to: 15
  3674                           ;lcd.c: 162: PIE3bits.SSP2IE = 1;
  3675  002F42  8EA3               	bsf	4003,7,c	;volatile
  3676                           
  3677                           ; BSR set to: 15
  3678                           ;lcd.c: 164: INTCONbits.GIEH = 1;
  3679  002F44  8EF2               	bsf	intcon,7,c	;volatile
  3680                           
  3681                           ; BSR set to: 15
  3682                           ;lcd.c: 165: INTCONbits.GIEL = 1;
  3683  002F46  8CF2               	bsf	intcon,6,c	;volatile
  3684                           
  3685                           ; BSR set to: 15
  3686                           ;lcd.c: 167: DELAY_ms(300);
  3687  002F48  0E01               	movlw	1
  3688  002F4A  0100               	movlb	0	; () banked
  3689  002F4C  6F61               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3690  002F4E  0E2C               	movlw	44
  3691  002F50  6F60               	movwf	DELAY_ms@ms& (0+255),b
  3692  002F52  ECEF  F00F         	call	_DELAY_ms	;wreg free
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;lcd.c: 169: LCDCommand[0] = 0x3E << 1;
  3696  002F56  0E7C               	movlw	124
  3697  002F58  6E42               	movwf	_LCDCommand,c
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;lcd.c: 170: LCDCommand[1] = 0x81;
  3701  002F5A  0E81               	movlw	129
  3702  002F5C  6E43               	movwf	_LCDCommand+1,c
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;lcd.c: 171: LCDCommand[2] = 0x00;
  3706  002F5E  6A44               	clrf	_LCDCommand+2,c
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;lcd.c: 173: I2CWrite(3, 0);
  3710  002F60  6B60               	clrf	I2CWrite@BufferLen& (0+255),b
  3711  002F62  0E03               	movlw	3
  3712  002F64  EC2E  F01A         	call	_I2CWrite
  3713                           
  3714                           ;lcd.c: 175: DELAY_ms(200);
  3715  002F68  0100               	movlb	0	; () banked
  3716  002F6A  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3717  002F6C  0EC8               	movlw	200
  3718  002F6E  6F60               	movwf	DELAY_ms@ms& (0+255),b
  3719  002F70  EFEF  F00F         	goto	_DELAY_ms	;wreg free
  3720  002F74                     __end_of_LCD_Initialize:
  3721                           	opt stack 0
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           intcon	equ	0xFF2
  3727                           intcon2	equ	0xFF1
  3728                           postinc0	equ	0xFEE
  3729                           wreg	equ	0xFE8
  3730                           postdec1	equ	0xFE5
  3731                           fsr1h	equ	0xFE2
  3732                           fsr1l	equ	0xFE1
  3733                           
  3734 ;; *************** function _Run_Demo *****************
  3735 ;; Defined at:
  3736 ;;		line 199 in file "../src/task.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;		None               void
  3743 ;; Registers used:
  3744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : F/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;Total ram usage:        0 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:   18
  3757 ;; This function calls:
  3758 ;;		_run_star_demo
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text6
  3765  00351A                     __ptext6:
  3766                           	opt stack 0
  3767  00351A                     _Run_Demo:
  3768                           	opt stack 12
  3769                           
  3770                           ;task.c: 202: run_star_demo();
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;incstack = 0
  3774  00351A  EF69  F005         	goto	_run_star_demo	;wreg free
  3775  00351E                     __end_of_Run_Demo:
  3776                           	opt stack 0
  3777                           tblptru	equ	0xFF8
  3778                           tblptrh	equ	0xFF7
  3779                           tblptrl	equ	0xFF6
  3780                           tablat	equ	0xFF5
  3781                           intcon	equ	0xFF2
  3782                           intcon2	equ	0xFF1
  3783                           postinc0	equ	0xFEE
  3784                           wreg	equ	0xFE8
  3785                           postdec1	equ	0xFE5
  3786                           fsr1h	equ	0xFE2
  3787                           fsr1l	equ	0xFE1
  3788                           
  3789 ;; *************** function _run_star_demo *****************
  3790 ;; Defined at:
  3791 ;;		line 85 in file "../src/star_demo.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  switch_val      1  100[BANK0 ] unsigned char 
  3796 ;;  sw_layer_ack    1   97[BANK0 ] unsigned char 
  3797 ;;  mac_ack_stat    1    0        unsigned char 
  3798 ;;  select_ed       1  101[BANK0 ] unsigned char 
  3799 ;;  update_ed       1   98[BANK0 ] unsigned char 
  3800 ;;  PressedButto    1   99[BANK0 ] unsigned char 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;		None               void
  3803 ;; Registers used:
  3804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : F/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3811 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3812 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3813 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3814 ;;Total ram usage:       12 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:   17
  3817 ;; This function calls:
  3818 ;;		_ButtonPressed
  3819 ;;		_CheckForData
  3820 ;;		_DELAY_ms
  3821 ;;		_DemoOutput_UpdateTxRx
  3822 ;;		_LCDDisplay
  3823 ;;		_LCD_Erase
  3824 ;;		_LCD_Update
  3825 ;;		_MiApp_ConnectionMode
  3826 ;;		_MiApp_DiscardMessage
  3827 ;;		_MiApp_EstablishConnection
  3828 ;;		_MiApp_MessageAvailable
  3829 ;;		_MiApp_SetChannel
  3830 ;;		_MiApp_TransceiverPowerState
  3831 ;;		_MiApp_UnicastConnection
  3832 ;;		_MiApp_UnicastStar
  3833 ;;		_MiWi_TickGet
  3834 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  3835 ;;		_sprintf
  3836 ;; This function is called by:
  3837 ;;		_Run_Demo
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text7
  3842  000AD2                     __ptext7:
  3843                           	opt stack 0
  3844  000AD2                     _run_star_demo:
  3845                           	opt stack 12
  3846                           
  3847                           ;star_demo.c: 88: t1 = MiWi_TickGet();
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;incstack = 0
  3851  000AD2  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  3852  000AD6  C060  F155         	movff	?_MiWi_TickGet,_t1
  3853  000ADA  C061  F156         	movff	?_MiWi_TickGet+1,_t1+1
  3854  000ADE  C062  F157         	movff	?_MiWi_TickGet+2,_t1+2
  3855  000AE2  C063  F158         	movff	?_MiWi_TickGet+3,_t1+3
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;star_demo.c: 89: LCDDisplay((char *)"Sleeping!!", 0, 0);
  3859  000AE6  0ED7               	movlw	low STR_52
  3860  000AE8  6F8F               	movwf	LCDDisplay@text& (0+255),b
  3861  000AEA  0EFF               	movlw	high STR_52
  3862  000AEC  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
  3863  000AEE  6B91               	clrf	LCDDisplay@value& (0+255),b
  3864  000AF0  6B92               	clrf	LCDDisplay@delay& (0+255),b
  3865  000AF2  ECBA  F017         	call	_LCDDisplay	;wreg free
  3866  000AF6                     l12128:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;star_demo.c: 91: {
  3870                           ;star_demo.c: 93: t2 = MiWi_TickGet();
  3871  000AF6  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  3872  000AFA  C060  F159         	movff	?_MiWi_TickGet,_t2
  3873  000AFE  C061  F15A         	movff	?_MiWi_TickGet+1,_t2+1
  3874  000B02  C062  F15B         	movff	?_MiWi_TickGet+2,_t2+2
  3875  000B06  C063  F15C         	movff	?_MiWi_TickGet+3,_t2+3
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;star_demo.c: 95: if(((t2.Val - t1.Val) > (((uint32_t)(8000000)/32) * 20)))
  3879  000B0A  0101               	movlb	1	; () banked
  3880  000B0C  5155               	movf	_t1& (0+255),w,b
  3881  000B0E  5D59               	subwf	_t2& (0+255),w,b
  3882  000B10  0100               	movlb	0	; () banked
  3883  000B12  6FBA               	movwf	??_run_star_demo& (0+255),b
  3884  000B14  0101               	movlb	1	; () banked
  3885  000B16  5156               	movf	(_t1+1)& (0+255),w,b
  3886  000B18  595A               	subwfb	(_t2+1)& (0+255),w,b
  3887  000B1A  0100               	movlb	0	; () banked
  3888  000B1C  6FBB               	movwf	(??_run_star_demo+1)& (0+255),b
  3889  000B1E  0101               	movlb	1	; () banked
  3890  000B20  5157               	movf	(_t1+2)& (0+255),w,b
  3891  000B22  595B               	subwfb	(_t2+2)& (0+255),w,b
  3892  000B24  0100               	movlb	0	; () banked
  3893  000B26  6FBC               	movwf	(??_run_star_demo+2)& (0+255),b
  3894  000B28  0101               	movlb	1	; () banked
  3895  000B2A  5158               	movf	(_t1+3)& (0+255),w,b
  3896  000B2C  595C               	subwfb	(_t2+3)& (0+255),w,b
  3897  000B2E  0100               	movlb	0	; () banked
  3898  000B30  6FBD               	movwf	(??_run_star_demo+3)& (0+255),b
  3899  000B32  51BD               	movf	(??_run_star_demo+3)& (0+255),w,b
  3900  000B34  E108               	bnz	u12110
  3901  000B36  0E41               	movlw	65
  3902  000B38  5DBA               	subwf	??_run_star_demo& (0+255),w,b
  3903  000B3A  0E4B               	movlw	75
  3904  000B3C  59BB               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  3905  000B3E  0E4C               	movlw	76
  3906  000B40  59BC               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  3907  000B42  E201 D23D          	bnc	l12282
  3908  000B46                     u12110:
  3909                           
  3910                           ; BSR set to: 0
  3911                           ;star_demo.c: 96: {
  3912                           ;star_demo.c: 97: awake = 1;
  3913  000B46  0E01               	movlw	1
  3914  000B48  6FE1               	movwf	_awake& (0+255),b
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;star_demo.c: 102: MiApp_TransceiverPowerState(0x02);
  3918  000B4A  0E02               	movlw	2
  3919  000B4C  EC7F  F014         	call	_MiApp_TransceiverPowerState
  3920                           
  3921                           ;star_demo.c: 103: LCDDisplay((char *)"Woke Up!!!", 0, 0);
  3922  000B50  0ECC               	movlw	low STR_53
  3923  000B52  0100               	movlb	0	; () banked
  3924  000B54  6F8F               	movwf	LCDDisplay@text& (0+255),b
  3925  000B56  0EFF               	movlw	high STR_53
  3926  000B58  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
  3927  000B5A  6B91               	clrf	LCDDisplay@value& (0+255),b
  3928  000B5C  6B92               	clrf	LCDDisplay@delay& (0+255),b
  3929  000B5E  ECBA  F017         	call	_LCDDisplay	;wreg free
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;star_demo.c: 104: DELAY_ms(1000);
  3933  000B62  0E03               	movlw	3
  3934  000B64  6F61               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3935  000B66  0EE8               	movlw	232
  3936  000B68  6F60               	movwf	DELAY_ms@ms& (0+255),b
  3937  000B6A  ECEF  F00F         	call	_DELAY_ms	;wreg free
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;star_demo.c: 105: STAR_DEMO_OPTIONS_MESSAGE (0);
  3941  000B6E  0E00               	movlw	0
  3942  000B70  ECBA  F019         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;star_demo.c: 106: tt1 = MiWi_TickGet();
  3946  000B74  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  3947  000B78  C060  F15D         	movff	?_MiWi_TickGet,_tt1
  3948  000B7C  C061  F15E         	movff	?_MiWi_TickGet+1,_tt1+1
  3949  000B80  C062  F15F         	movff	?_MiWi_TickGet+2,_tt1+2
  3950  000B84  C063  F160         	movff	?_MiWi_TickGet+3,_tt1+3
  3951  000B88  D21B               	goto	l12282
  3952  000B8A                     l12144:
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;star_demo.c: 109: {
  3956                           ;star_demo.c: 110: tt2 = MiWi_TickGet();
  3957  000B8A  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  3958  000B8E  C060  F161         	movff	?_MiWi_TickGet,_tt2
  3959  000B92  C061  F162         	movff	?_MiWi_TickGet+1,_tt2+1
  3960  000B96  C062  F163         	movff	?_MiWi_TickGet+2,_tt2+2
  3961  000B9A  C063  F164         	movff	?_MiWi_TickGet+3,_tt2+3
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;star_demo.c: 111: if(((tt2.Val - tt1.Val) > (((uint32_t)(8000000)/32) * 10)))
  3965  000B9E  0101               	movlb	1	; () banked
  3966  000BA0  515D               	movf	_tt1& (0+255),w,b
  3967  000BA2  5D61               	subwf	_tt2& (0+255),w,b
  3968  000BA4  0100               	movlb	0	; () banked
  3969  000BA6  6FBA               	movwf	??_run_star_demo& (0+255),b
  3970  000BA8  0101               	movlb	1	; () banked
  3971  000BAA  515E               	movf	(_tt1+1)& (0+255),w,b
  3972  000BAC  5962               	subwfb	(_tt2+1)& (0+255),w,b
  3973  000BAE  0100               	movlb	0	; () banked
  3974  000BB0  6FBB               	movwf	(??_run_star_demo+1)& (0+255),b
  3975  000BB2  0101               	movlb	1	; () banked
  3976  000BB4  515F               	movf	(_tt1+2)& (0+255),w,b
  3977  000BB6  5963               	subwfb	(_tt2+2)& (0+255),w,b
  3978  000BB8  0100               	movlb	0	; () banked
  3979  000BBA  6FBC               	movwf	(??_run_star_demo+2)& (0+255),b
  3980  000BBC  0101               	movlb	1	; () banked
  3981  000BBE  5160               	movf	(_tt1+3)& (0+255),w,b
  3982  000BC0  5964               	subwfb	(_tt2+3)& (0+255),w,b
  3983  000BC2  0100               	movlb	0	; () banked
  3984  000BC4  6FBD               	movwf	(??_run_star_demo+3)& (0+255),b
  3985  000BC6  51BD               	movf	(??_run_star_demo+3)& (0+255),w,b
  3986  000BC8  E107               	bnz	u12120
  3987  000BCA  0EA1               	movlw	161
  3988  000BCC  5DBA               	subwf	??_run_star_demo& (0+255),w,b
  3989  000BCE  0E25               	movlw	37
  3990  000BD0  59BB               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  3991  000BD2  0E26               	movlw	38
  3992  000BD4  59BC               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  3993  000BD6  E30C               	bnc	l12152
  3994  000BD8                     u12120:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;star_demo.c: 112: {
  3998                           ;star_demo.c: 116: CheckForData();
  3999  000BD8  EC55  F016         	call	_CheckForData	;wreg free
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;star_demo.c: 117: tt1 = MiWi_TickGet();
  4003  000BDC  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  4004  000BE0  C060  F15D         	movff	?_MiWi_TickGet,_tt1
  4005  000BE4  C061  F15E         	movff	?_MiWi_TickGet+1,_tt1+1
  4006  000BE8  C062  F15F         	movff	?_MiWi_TickGet+2,_tt1+2
  4007  000BEC  C063  F160         	movff	?_MiWi_TickGet+3,_tt1+3
  4008  000BF0                     l12152:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;star_demo.c: 118: }
  4012                           ;star_demo.c: 126: if( MiApp_MessageAvailable())
  4013  000BF0  EC81  F01A         	call	_MiApp_MessageAvailable	;wreg free
  4014  000BF4  0900               	iorlw	0
  4015  000BF6  E011               	bz	l12162
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;star_demo.c: 127: {
  4019                           ;star_demo.c: 133: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  4020  000BF8  2BDE               	incf	_RxNum& (0+255),f,b
  4021  000BFA  C0DE  F091         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  4022  000BFE  51E0               	movf	_TxNum& (0+255),w,b
  4023  000C00  EC6E  F01A         	call	_DemoOutput_UpdateTxRx
  4024                           
  4025                           ;star_demo.c: 134: DELAY_ms(2000);
  4026  000C04  0E07               	movlw	7
  4027  000C06  0100               	movlb	0	; () banked
  4028  000C08  6F61               	movwf	(DELAY_ms@ms+1)& (0+255),b
  4029  000C0A  0ED0               	movlw	208
  4030  000C0C  6F60               	movwf	DELAY_ms@ms& (0+255),b
  4031  000C0E  ECEF  F00F         	call	_DELAY_ms	;wreg free
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;star_demo.c: 136: LATAbits.LATA3 ^= 1;
  4035  000C12  7689               	btg	3977,3,c	;volatile
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;star_demo.c: 144: MiApp_DiscardMessage();
  4039  000C14  EC86  F01A         	call	_MiApp_DiscardMessage	;wreg free
  4040                           
  4041                           ;star_demo.c: 149: }
  4042  000C18  D182               	goto	l12262
  4043  000C1A                     l12162:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;star_demo.c: 150: else
  4047                           ;star_demo.c: 151: {
  4048                           ;star_demo.c: 158: uint8_t PressedButton = ButtonPressed();
  4049  000C1A  ECBF  F014         	call	_ButtonPressed	;wreg free
  4050  000C1E  6FC3               	movwf	run_star_demo@PressedButton& (0+255),b
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;star_demo.c: 159: if ( PressedButton == 1 || PressedButton == 2)
  4054  000C20  05C3               	decf	run_star_demo@PressedButton& (0+255),w,b
  4055  000C22  E004               	bz	l1316
  4056                           
  4057                           ; BSR set to: 0
  4058  000C24  0E02               	movlw	2
  4059  000C26  19C3               	xorwf	run_star_demo@PressedButton& (0+255),w,b
  4060  000C28  E001 D179          	bnz	l12262
  4061  000C2C                     l1316:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;star_demo.c: 160: {
  4065                           ;star_demo.c: 162: uint8_t select_ed =0;
  4066  000C2C  6BC5               	clrf	run_star_demo@select_ed& (0+255),b
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;star_demo.c: 163: bool update_ed = 1;
  4070  000C2E  0E01               	movlw	1
  4071  000C30  6FC2               	movwf	run_star_demo@update_ed& (0+255),b
  4072                           
  4073                           ;star_demo.c: 164: while(update_ed == 1)
  4074  000C32  D16F               	goto	l12258
  4075  000C34                     l12170:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;star_demo.c: 165: {
  4079                           ;star_demo.c: 168: LCD_Erase();
  4080  000C34  EC07  F01A         	call	_LCD_Erase	;wreg free
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;star_demo.c: 169: if (myConnectionIndex_in_PanCo == select_ed)
  4084  000C38  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4085  000C3A  19FA               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  4086  000C3C  E137               	bnz	l12176
  4087                           
  4088                           ; BSR set to: 0
  4089                           ;star_demo.c: 170: {
  4090                           ;star_demo.c: 171: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x-me",END_DEVICE
      +                          S_Short_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[
      +                          0],
  4091                           ;star_demo.c: 172: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  4092  000C3E  0E88               	movlw	low _LCDText
  4093  000C40  6F6C               	movwf	sprintf@sp& (0+255),b
  4094  000C42  0E01               	movlw	high _LCDText
  4095  000C44  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  4096  000C46  0E3C               	movlw	low STR_54
  4097  000C48  6F6E               	movwf	sprintf@f& (0+255),b
  4098  000C4A  0EFE               	movlw	high STR_54
  4099  000C4C  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  4100  000C4E  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4101  000C50  0D04               	mullw	4
  4102  000C52  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  4103  000C54  24F3               	addwf	prodl,w,c
  4104  000C56  6ED9               	movwf	fsr2l,c
  4105  000C58  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  4106  000C5A  20F4               	addwfc	prodh,w,c
  4107  000C5C  6EDA               	movwf	fsr2h,c
  4108  000C5E  50DF               	movf	indf2,w,c
  4109  000C60  6F70               	movwf	(?_sprintf+4)& (0+255),b
  4110  000C62  6B71               	clrf	(?_sprintf+5)& (0+255),b
  4111  000C64  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4112  000C66  0D04               	mullw	4
  4113  000C68  0E00               	movlw	low _END_DEVICES_Short_Address
  4114  000C6A  24F3               	addwf	prodl,w,c
  4115  000C6C  6ED9               	movwf	fsr2l,c
  4116  000C6E  0E02               	movlw	high _END_DEVICES_Short_Address
  4117  000C70  20F4               	addwfc	prodh,w,c
  4118  000C72  6EDA               	movwf	fsr2h,c
  4119  000C74  50DF               	movf	indf2,w,c
  4120  000C76  6F72               	movwf	(?_sprintf+6)& (0+255),b
  4121  000C78  6B73               	clrf	(?_sprintf+7)& (0+255),b
  4122  000C7A  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4123  000C7C  0D04               	mullw	4
  4124  000C7E  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  4125  000C80  24F3               	addwf	prodl,w,c
  4126  000C82  6ED9               	movwf	fsr2l,c
  4127  000C84  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  4128  000C86  20F4               	addwfc	prodh,w,c
  4129  000C88  6EDA               	movwf	fsr2h,c
  4130  000C8A  50DF               	movf	indf2,w,c
  4131  000C8C  6F74               	movwf	(?_sprintf+8)& (0+255),b
  4132  000C8E  6B75               	clrf	(?_sprintf+9)& (0+255),b
  4133  000C90  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4134  000C92  0D04               	mullw	4
  4135  000C94  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  4136  000C96  24F3               	addwf	prodl,w,c
  4137  000C98  6ED9               	movwf	fsr2l,c
  4138  000C9A  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  4139  000C9C  20F4               	addwfc	prodh,w,c
  4140  000C9E  6EDA               	movwf	fsr2h,c
  4141  000CA0  50DF               	movf	indf2,w,c
  4142  000CA2  6F76               	movwf	(?_sprintf+10)& (0+255),b
  4143  000CA4  6B77               	clrf	(?_sprintf+11)& (0+255),b
  4144  000CA6  ECDC  F001         	call	_sprintf	;wreg free
  4145                           
  4146                           ;star_demo.c: 173: }
  4147  000CAA  D036               	goto	l1320
  4148  000CAC                     l12176:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;star_demo.c: 174: else
  4152                           ;star_demo.c: 175: {
  4153                           ;star_demo.c: 176: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  4154                           ;star_demo.c: 177: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  4155  000CAC  0E88               	movlw	low _LCDText
  4156  000CAE  6F6C               	movwf	sprintf@sp& (0+255),b
  4157  000CB0  0E01               	movlw	high _LCDText
  4158  000CB2  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  4159  000CB4  0ECA               	movlw	low STR_55
  4160  000CB6  6F6E               	movwf	sprintf@f& (0+255),b
  4161  000CB8  0EFE               	movlw	high STR_55
  4162  000CBA  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  4163  000CBC  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4164  000CBE  0D04               	mullw	4
  4165  000CC0  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  4166  000CC2  24F3               	addwf	prodl,w,c
  4167  000CC4  6ED9               	movwf	fsr2l,c
  4168  000CC6  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  4169  000CC8  20F4               	addwfc	prodh,w,c
  4170  000CCA  6EDA               	movwf	fsr2h,c
  4171  000CCC  50DF               	movf	indf2,w,c
  4172  000CCE  6F70               	movwf	(?_sprintf+4)& (0+255),b
  4173  000CD0  6B71               	clrf	(?_sprintf+5)& (0+255),b
  4174  000CD2  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4175  000CD4  0D04               	mullw	4
  4176  000CD6  0E00               	movlw	low _END_DEVICES_Short_Address
  4177  000CD8  24F3               	addwf	prodl,w,c
  4178  000CDA  6ED9               	movwf	fsr2l,c
  4179  000CDC  0E02               	movlw	high _END_DEVICES_Short_Address
  4180  000CDE  20F4               	addwfc	prodh,w,c
  4181  000CE0  6EDA               	movwf	fsr2h,c
  4182  000CE2  50DF               	movf	indf2,w,c
  4183  000CE4  6F72               	movwf	(?_sprintf+6)& (0+255),b
  4184  000CE6  6B73               	clrf	(?_sprintf+7)& (0+255),b
  4185  000CE8  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4186  000CEA  0D04               	mullw	4
  4187  000CEC  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  4188  000CEE  24F3               	addwf	prodl,w,c
  4189  000CF0  6ED9               	movwf	fsr2l,c
  4190  000CF2  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  4191  000CF4  20F4               	addwfc	prodh,w,c
  4192  000CF6  6EDA               	movwf	fsr2h,c
  4193  000CF8  50DF               	movf	indf2,w,c
  4194  000CFA  6F74               	movwf	(?_sprintf+8)& (0+255),b
  4195  000CFC  6B75               	clrf	(?_sprintf+9)& (0+255),b
  4196  000CFE  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4197  000D00  0D04               	mullw	4
  4198  000D02  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  4199  000D04  24F3               	addwf	prodl,w,c
  4200  000D06  6ED9               	movwf	fsr2l,c
  4201  000D08  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  4202  000D0A  20F4               	addwfc	prodh,w,c
  4203  000D0C  6EDA               	movwf	fsr2h,c
  4204  000D0E  50DF               	movf	indf2,w,c
  4205  000D10  6F76               	movwf	(?_sprintf+10)& (0+255),b
  4206  000D12  6B77               	clrf	(?_sprintf+11)& (0+255),b
  4207  000D14  ECDC  F001         	call	_sprintf	;wreg free
  4208  000D18                     l1320:
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;star_demo.c: 178: }
  4212                           ;star_demo.c: 179: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  4213                           ;star_demo.c: 180: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  4214  000D18  0E88               	movlw	low _LCDText
  4215  000D1A  6F6C               	movwf	sprintf@sp& (0+255),b
  4216  000D1C  0E01               	movlw	high _LCDText
  4217  000D1E  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  4218  000D20  0ECA               	movlw	low STR_55
  4219  000D22  6F6E               	movwf	sprintf@f& (0+255),b
  4220  000D24  0EFE               	movlw	high STR_55
  4221  000D26  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  4222  000D28  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4223  000D2A  0D04               	mullw	4
  4224  000D2C  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  4225  000D2E  24F3               	addwf	prodl,w,c
  4226  000D30  6ED9               	movwf	fsr2l,c
  4227  000D32  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  4228  000D34  20F4               	addwfc	prodh,w,c
  4229  000D36  6EDA               	movwf	fsr2h,c
  4230  000D38  50DF               	movf	indf2,w,c
  4231  000D3A  6F70               	movwf	(?_sprintf+4)& (0+255),b
  4232  000D3C  6B71               	clrf	(?_sprintf+5)& (0+255),b
  4233  000D3E  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4234  000D40  0D04               	mullw	4
  4235  000D42  0E00               	movlw	low _END_DEVICES_Short_Address
  4236  000D44  24F3               	addwf	prodl,w,c
  4237  000D46  6ED9               	movwf	fsr2l,c
  4238  000D48  0E02               	movlw	high _END_DEVICES_Short_Address
  4239  000D4A  20F4               	addwfc	prodh,w,c
  4240  000D4C  6EDA               	movwf	fsr2h,c
  4241  000D4E  50DF               	movf	indf2,w,c
  4242  000D50  6F72               	movwf	(?_sprintf+6)& (0+255),b
  4243  000D52  6B73               	clrf	(?_sprintf+7)& (0+255),b
  4244  000D54  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4245  000D56  0D04               	mullw	4
  4246  000D58  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  4247  000D5A  24F3               	addwf	prodl,w,c
  4248  000D5C  6ED9               	movwf	fsr2l,c
  4249  000D5E  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  4250  000D60  20F4               	addwfc	prodh,w,c
  4251  000D62  6EDA               	movwf	fsr2h,c
  4252  000D64  50DF               	movf	indf2,w,c
  4253  000D66  6F74               	movwf	(?_sprintf+8)& (0+255),b
  4254  000D68  6B75               	clrf	(?_sprintf+9)& (0+255),b
  4255  000D6A  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4256  000D6C  0D04               	mullw	4
  4257  000D6E  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  4258  000D70  24F3               	addwf	prodl,w,c
  4259  000D72  6ED9               	movwf	fsr2l,c
  4260  000D74  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  4261  000D76  20F4               	addwfc	prodh,w,c
  4262  000D78  6EDA               	movwf	fsr2h,c
  4263  000D7A  50DF               	movf	indf2,w,c
  4264  000D7C  6F76               	movwf	(?_sprintf+10)& (0+255),b
  4265  000D7E  6B77               	clrf	(?_sprintf+11)& (0+255),b
  4266  000D80  ECDC  F001         	call	_sprintf	;wreg free
  4267                           
  4268                           ;star_demo.c: 181: sprintf((char *)&(LCDText[16]), (char*)"RB2: Change node");
  4269  000D84  0E98               	movlw	low (_LCDText+16)
  4270  000D86  6F6C               	movwf	sprintf@sp& (0+255),b
  4271  000D88  0E01               	movlw	high (_LCDText+16)
  4272  000D8A  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  4273  000D8C  0E52               	movlw	low STR_57
  4274  000D8E  6F6E               	movwf	sprintf@f& (0+255),b
  4275  000D90  0EFF               	movlw	high STR_57
  4276  000D92  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  4277  000D94  ECDC  F001         	call	_sprintf	;wreg free
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;star_demo.c: 182: LCD_Update();
  4281  000D98  EC23  F01A         	call	_LCD_Update	;wreg free
  4282                           
  4283                           ;star_demo.c: 183: chk_sel_status = 1;
  4284  000D9C  0E01               	movlw	1
  4285  000D9E  0100               	movlb	0	; () banked
  4286  000DA0  6FFC               	movwf	_chk_sel_status& (0+255),b
  4287                           
  4288                           ;star_demo.c: 184: bool sw_layer_ack_status , mac_ack_status;
  4289                           ;star_demo.c: 185: while(chk_sel_status)
  4290  000DA2  D0B4               	goto	l12256
  4291  000DA4                     l12182:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;star_demo.c: 186: {
  4295                           ;star_demo.c: 187: uint8_t switch_val = ButtonPressed();
  4296  000DA4  ECBF  F014         	call	_ButtonPressed	;wreg free
  4297  000DA8  6FC4               	movwf	run_star_demo@switch_val& (0+255),b
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;star_demo.c: 188: if(switch_val == 1)
  4301  000DAA  05C4               	decf	run_star_demo@switch_val& (0+255),w,b
  4302  000DAC  E001 D092          	bnz	l12246
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;star_demo.c: 189: {
  4306                           ;star_demo.c: 190: update_ed = 0;
  4307  000DB0  6BC2               	clrf	run_star_demo@update_ed& (0+255),b
  4308                           
  4309                           ;star_demo.c: 191: chk_sel_status = 0;
  4310  000DB2  6BFC               	clrf	_chk_sel_status& (0+255),b
  4311                           
  4312                           ;star_demo.c: 192: update_ed = 0;
  4313  000DB4  6BC2               	clrf	run_star_demo@update_ed& (0+255),b
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;star_demo.c: 197: if (myConnectionIndex_in_PanCo == select_ed)
  4317  000DB6  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4318  000DB8  19FA               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  4319  000DBA  E11E               	bnz	l1324
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;star_demo.c: 198: {
  4323                           ;star_demo.c: 199: {TxData = 0;};
  4324  000DBC  6BDF               	clrf	_TxData& (0+255),b
  4325                           
  4326                           ;star_demo.c: 200: for (i = 0 ; i < 21 ; i++)
  4327  000DBE  6BE5               	clrf	_i& (0+255),b
  4328  000DC0                     l12192:
  4329                           
  4330                           ; BSR set to: 0
  4331  000DC0  0E14               	movlw	20
  4332  000DC2  65E5               	cpfsgt	_i& (0+255),b
  4333  000DC4  D001               	goto	l12196
  4334  000DC6  D012               	goto	l12204
  4335  000DC8                     l12196:
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;star_demo.c: 201: {
  4339                           ;star_demo.c: 202: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  4340  000DC8  0EAF               	movlw	low _MiWi
  4341  000DCA  25E5               	addwf	_i& (0+255),w,b
  4342  000DCC  6EF6               	movwf	tblptrl,c
  4343  000DCE  6AF7               	clrf	tblptrh,c
  4344  000DD0  0EF9               	movlw	high _MiWi
  4345  000DD2  22F7               	addwfc	tblptrh,f,c
  4346  000DD4                     	if	0	;There are less than 3 active tblptr bytes
  4347  000DD4                     	endif
  4348  000DD4  0E65               	movlw	low _TxBuffer
  4349  000DD6  25DF               	addwf	_TxData& (0+255),w,b
  4350  000DD8  6ED9               	movwf	fsr2l,c
  4351  000DDA  6ADA               	clrf	fsr2h,c
  4352  000DDC  0E01               	movlw	high _TxBuffer
  4353  000DDE  22DA               	addwfc	fsr2h,f,c
  4354  000DE0  0008               	tblrd		*
  4355  000DE2  CFF5 FFDF          	movff	tablat,indf2
  4356                           
  4357                           ; BSR set to: 0
  4358  000DE6  2BDF               	incf	_TxData& (0+255),f,b
  4359                           
  4360                           ; BSR set to: 0
  4361  000DE8  2BE5               	incf	_i& (0+255),f,b
  4362  000DEA  D7EA               	goto	l12192
  4363  000DEC                     l12204:
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;star_demo.c: 203: }
  4367                           ;star_demo.c: 210: mac_ack_status = MiApp_UnicastConnection (0, 0);
  4368  000DEC  0E00               	movlw	0
  4369  000DEE  6B95               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  4370  000DF0  EC6D  F018         	call	_MiApp_UnicastConnection
  4371  000DF4                     l12206:
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;star_demo.c: 212: TxNum++;
  4375  000DF4  2BE0               	incf	_TxNum& (0+255),f,b
  4376                           
  4377                           ;star_demo.c: 213: }
  4378  000DF6  D08A               	goto	l12256
  4379  000DF8                     l1324:
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;star_demo.c: 214: else
  4383                           ;star_demo.c: 215: {
  4384                           ;star_demo.c: 220: {TxData = 0;};
  4385  000DF8  6BDF               	clrf	_TxData& (0+255),b
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;star_demo.c: 221: TxBuffer[TxData++] = 0xCC;
  4389  000DFA  0E65               	movlw	low _TxBuffer
  4390  000DFC  25DF               	addwf	_TxData& (0+255),w,b
  4391  000DFE  6ED9               	movwf	fsr2l,c
  4392  000E00  6ADA               	clrf	fsr2h,c
  4393  000E02  0E01               	movlw	high _TxBuffer
  4394  000E04  22DA               	addwfc	fsr2h,f,c
  4395  000E06  0ECC               	movlw	204
  4396  000E08  6EDF               	movwf	indf2,c
  4397                           
  4398                           ; BSR set to: 0
  4399  000E0A  2BDF               	incf	_TxData& (0+255),f,b
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;star_demo.c: 222: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[0];
  4403  000E0C  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4404  000E0E  0D04               	mullw	4
  4405  000E10  0E00               	movlw	low _END_DEVICES_Short_Address
  4406  000E12  24F3               	addwf	prodl,w,c
  4407  000E14  6ED9               	movwf	fsr2l,c
  4408  000E16  0E02               	movlw	high _END_DEVICES_Short_Address
  4409  000E18  20F4               	addwfc	prodh,w,c
  4410  000E1A  6EDA               	movwf	fsr2h,c
  4411  000E1C  0E65               	movlw	low _TxBuffer
  4412  000E1E  25DF               	addwf	_TxData& (0+255),w,b
  4413  000E20  6EE1               	movwf	fsr1l,c
  4414  000E22  6AE2               	clrf	fsr1h,c
  4415  000E24  0E01               	movlw	high _TxBuffer
  4416  000E26  22E2               	addwfc	fsr1h,f,c
  4417  000E28  CFDF FFE7          	movff	indf2,indf1
  4418                           
  4419                           ; BSR set to: 0
  4420  000E2C  2BDF               	incf	_TxData& (0+255),f,b
  4421                           
  4422                           ; BSR set to: 0
  4423                           ;star_demo.c: 223: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[1];
  4424  000E2E  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4425  000E30  0D04               	mullw	4
  4426  000E32  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  4427  000E34  24F3               	addwf	prodl,w,c
  4428  000E36  6ED9               	movwf	fsr2l,c
  4429  000E38  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  4430  000E3A  20F4               	addwfc	prodh,w,c
  4431  000E3C  6EDA               	movwf	fsr2h,c
  4432  000E3E  0E65               	movlw	low _TxBuffer
  4433  000E40  25DF               	addwf	_TxData& (0+255),w,b
  4434  000E42  6EE1               	movwf	fsr1l,c
  4435  000E44  6AE2               	clrf	fsr1h,c
  4436  000E46  0E01               	movlw	high _TxBuffer
  4437  000E48  22E2               	addwfc	fsr1h,f,c
  4438  000E4A  CFDF FFE7          	movff	indf2,indf1
  4439                           
  4440                           ; BSR set to: 0
  4441  000E4E  2BDF               	incf	_TxData& (0+255),f,b
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;star_demo.c: 224: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[2];
  4445  000E50  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4446  000E52  0D04               	mullw	4
  4447  000E54  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  4448  000E56  24F3               	addwf	prodl,w,c
  4449  000E58  6ED9               	movwf	fsr2l,c
  4450  000E5A  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  4451  000E5C  20F4               	addwfc	prodh,w,c
  4452  000E5E  6EDA               	movwf	fsr2h,c
  4453  000E60  0E65               	movlw	low _TxBuffer
  4454  000E62  25DF               	addwf	_TxData& (0+255),w,b
  4455  000E64  6EE1               	movwf	fsr1l,c
  4456  000E66  6AE2               	clrf	fsr1h,c
  4457  000E68  0E01               	movlw	high _TxBuffer
  4458  000E6A  22E2               	addwfc	fsr1h,f,c
  4459  000E6C  CFDF FFE7          	movff	indf2,indf1
  4460                           
  4461                           ; BSR set to: 0
  4462  000E70  2BDF               	incf	_TxData& (0+255),f,b
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;star_demo.c: 225: for (i = 4 ; i < 25 ; i++)
  4466  000E72  0E04               	movlw	4
  4467  000E74  6FE5               	movwf	_i& (0+255),b
  4468  000E76                     l12226:
  4469                           
  4470                           ; BSR set to: 0
  4471  000E76  0E18               	movlw	24
  4472  000E78  65E5               	cpfsgt	_i& (0+255),b
  4473  000E7A  D001               	goto	l12230
  4474  000E7C  D01C               	goto	l12238
  4475  000E7E                     l12230:
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;star_demo.c: 226: {
  4479                           ;star_demo.c: 227: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i-4];
  4480  000E7E  0EFC               	movlw	252
  4481  000E80  6FBA               	movwf	??_run_star_demo& (0+255),b
  4482  000E82  69BB               	setf	(??_run_star_demo+1)& (0+255),b
  4483  000E84  51E5               	movf	_i& (0+255),w,b
  4484  000E86  6FBC               	movwf	(??_run_star_demo+2)& (0+255),b
  4485  000E88  6BBD               	clrf	(??_run_star_demo+3)& (0+255),b
  4486  000E8A  51BA               	movf	??_run_star_demo& (0+255),w,b
  4487  000E8C  27BC               	addwf	(??_run_star_demo+2)& (0+255),f,b
  4488  000E8E  51BB               	movf	(??_run_star_demo+1)& (0+255),w,b
  4489  000E90  23BD               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  4490  000E92  0EAF               	movlw	low _MiWi
  4491  000E94  25BC               	addwf	(??_run_star_demo+2)& (0+255),w,b
  4492  000E96  6EF6               	movwf	tblptrl,c
  4493  000E98  0EF9               	movlw	high _MiWi
  4494  000E9A  21BD               	addwfc	(??_run_star_demo+3)& (0+255),w,b
  4495  000E9C  6EF7               	movwf	tblptrh,c
  4496  000E9E                     	if	0	;There are less than 3 active tblptr bytes
  4497  000E9E                     	endif
  4498  000E9E  0E65               	movlw	low _TxBuffer
  4499  000EA0  25DF               	addwf	_TxData& (0+255),w,b
  4500  000EA2  6ED9               	movwf	fsr2l,c
  4501  000EA4  6ADA               	clrf	fsr2h,c
  4502  000EA6  0E01               	movlw	high _TxBuffer
  4503  000EA8  22DA               	addwfc	fsr2h,f,c
  4504  000EAA  0008               	tblrd		*
  4505  000EAC  CFF5 FFDF          	movff	tablat,indf2
  4506                           
  4507                           ; BSR set to: 0
  4508  000EB0  2BDF               	incf	_TxData& (0+255),f,b
  4509                           
  4510                           ; BSR set to: 0
  4511  000EB2  2BE5               	incf	_i& (0+255),f,b
  4512  000EB4  D7E0               	goto	l12226
  4513  000EB6                     l12238:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;star_demo.c: 228: }
  4517                           ;star_demo.c: 232: sw_layer_ack_status = MiApp_UnicastStar (0);
  4518  000EB6  0E00               	movlw	0
  4519  000EB8  ECFF  F014         	call	_MiApp_UnicastStar
  4520  000EBC  6FC1               	movwf	run_star_demo@sw_layer_ack_status& (0+255),b
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;star_demo.c: 237: if (sw_layer_ack_status)
  4524  000EBE  51C1               	movf	run_star_demo@sw_layer_ack_status& (0+255),w,b
  4525  000EC0  E199               	bnz	l12206
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;star_demo.c: 241: else
  4529                           ;star_demo.c: 242: {
  4530                           ;star_demo.c: 243: LCDDisplay((char *)"Data_Sending_Fail!!", 0, 0);
  4531  000EC2  0EF6               	movlw	low STR_58
  4532  000EC4  6F8F               	movwf	LCDDisplay@text& (0+255),b
  4533  000EC6  0EFE               	movlw	high STR_58
  4534  000EC8  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
  4535  000ECA  6B91               	clrf	LCDDisplay@value& (0+255),b
  4536  000ECC  6B92               	clrf	LCDDisplay@delay& (0+255),b
  4537  000ECE  ECBA  F017         	call	_LCDDisplay	;wreg free
  4538  000ED2  D01C               	goto	l12256
  4539  000ED4                     l12246:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;star_demo.c: 252: else if(switch_val == 2)
  4543  000ED4  0E02               	movlw	2
  4544  000ED6  19C4               	xorwf	run_star_demo@switch_val& (0+255),w,b
  4545  000ED8  E119               	bnz	l12256
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;star_demo.c: 253: {
  4549                           ;star_demo.c: 254: if (select_ed > end_nodes-1)
  4550  000EDA  51C5               	movf	run_star_demo@select_ed& (0+255),w,b
  4551  000EDC  6FBA               	movwf	??_run_star_demo& (0+255),b
  4552  000EDE  6BBB               	clrf	(??_run_star_demo+1)& (0+255),b
  4553  000EE0  69BC               	setf	(??_run_star_demo+2)& (0+255),b
  4554  000EE2  69BD               	setf	(??_run_star_demo+3)& (0+255),b
  4555  000EE4  51E2               	movf	_end_nodes& (0+255),w,b
  4556  000EE6  6FBE               	movwf	(??_run_star_demo+4)& (0+255),b
  4557  000EE8  6BBF               	clrf	(??_run_star_demo+5)& (0+255),b
  4558  000EEA  51BC               	movf	(??_run_star_demo+2)& (0+255),w,b
  4559  000EEC  27BE               	addwf	(??_run_star_demo+4)& (0+255),f,b
  4560  000EEE  51BD               	movf	(??_run_star_demo+3)& (0+255),w,b
  4561  000EF0  23BF               	addwfc	(??_run_star_demo+5)& (0+255),f,b
  4562  000EF2  51BA               	movf	??_run_star_demo& (0+255),w,b
  4563  000EF4  5DBE               	subwf	(??_run_star_demo+4)& (0+255),w,b
  4564  000EF6  51BF               	movf	(??_run_star_demo+5)& (0+255),w,b
  4565  000EF8  0A80               	xorlw	128
  4566  000EFA  6FC0               	movwf	(??_run_star_demo+6)& (0+255),b
  4567  000EFC  51BB               	movf	(??_run_star_demo+1)& (0+255),w,b
  4568  000EFE  0A80               	xorlw	128
  4569  000F00  59C0               	subwfb	(??_run_star_demo+6)& (0+255),w,b
  4570  000F02  E202               	bc	l12252
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;star_demo.c: 255: {
  4574                           ;star_demo.c: 256: select_ed = 0;
  4575  000F04  6BC5               	clrf	run_star_demo@select_ed& (0+255),b
  4576                           
  4577                           ;star_demo.c: 257: }
  4578  000F06  D001               	goto	l12254
  4579  000F08                     l12252:
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;star_demo.c: 258: else
  4583                           ;star_demo.c: 259: {
  4584                           ;star_demo.c: 260: select_ed = select_ed+1;
  4585  000F08  2BC5               	incf	run_star_demo@select_ed& (0+255),f,b
  4586  000F0A                     l12254:
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;star_demo.c: 261: }
  4590                           ;star_demo.c: 262: chk_sel_status = 0;
  4591  000F0A  6BFC               	clrf	_chk_sel_status& (0+255),b
  4592  000F0C                     l12256:
  4593                           
  4594                           ; BSR set to: 0
  4595  000F0C  51FC               	movf	_chk_sel_status& (0+255),w,b
  4596  000F0E  E001 D749          	bnz	l12182
  4597  000F12                     l12258:
  4598                           
  4599                           ; BSR set to: 0
  4600  000F12  05C2               	decf	run_star_demo@update_ed& (0+255),w,b
  4601  000F14  E101 D68E          	bz	l12170
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;star_demo.c: 264: }
  4605                           ;star_demo.c: 265: }
  4606                           ;star_demo.c: 267: }
  4607                           ;star_demo.c: 268: STAR_DEMO_OPTIONS_MESSAGE (0);
  4608  000F18  0E00               	movlw	0
  4609  000F1A  ECBA  F019         	call	_STAR_DEMO_OPTIONS_MESSAGE
  4610  000F1E                     l12262:
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;star_demo.c: 269: }
  4614                           ;star_demo.c: 270: }
  4615                           ;star_demo.c: 271: if (fix_me == 1)
  4616  000F1E  05E3               	decf	_fix_me& (0+255),w,b
  4617  000F20  E10D               	bnz	l12270
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;star_demo.c: 272: {
  4621                           ;star_demo.c: 273: MiApp_SetChannel(myChannel);
  4622  000F22  0E19               	movlw	25
  4623  000F24  ECA1  F018         	call	_MiApp_SetChannel
  4624                           
  4625                           ;star_demo.c: 274: MiApp_ConnectionMode(0x00);
  4626  000F28  0E00               	movlw	0
  4627  000F2A  EC18  F018         	call	_MiApp_ConnectionMode
  4628  000F2E                     l12268:
  4629  000F2E  0100               	movlb	0	; () banked
  4630  000F30  6BA9               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  4631  000F32  EC52  F00D         	call	_MiApp_EstablishConnection
  4632  000F36  0AFF               	xorlw	255
  4633  000F38  E0FA               	bz	l12268
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;star_demo.c: 276: fix_me = 0;
  4637  000F3A  6BE3               	clrf	_fix_me& (0+255),b
  4638  000F3C                     l12270:
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;star_demo.c: 277: }
  4642                           ;star_demo.c: 278: t3 = MiWi_TickGet();
  4643  000F3C  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  4644  000F40  C060  F04E         	movff	?_MiWi_TickGet,_t3
  4645  000F44  C061  F04F         	movff	?_MiWi_TickGet+1,_t3+1
  4646  000F48  C062  F050         	movff	?_MiWi_TickGet+2,_t3+2
  4647  000F4C  C063  F051         	movff	?_MiWi_TickGet+3,_t3+3
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;star_demo.c: 279: if(((t3.Val - t2.Val) > (((uint32_t)(8000000)/32) * 40)))
  4651  000F50  0101               	movlb	1	; () banked
  4652  000F52  5159               	movf	_t2& (0+255),w,b
  4653  000F54  5C4E               	subwf	_t3,w,c
  4654  000F56  0100               	movlb	0	; () banked
  4655  000F58  6FBA               	movwf	??_run_star_demo& (0+255),b
  4656  000F5A  0101               	movlb	1	; () banked
  4657  000F5C  515A               	movf	(_t2+1)& (0+255),w,b
  4658  000F5E  584F               	subwfb	_t3+1,w,c
  4659  000F60  0100               	movlb	0	; () banked
  4660  000F62  6FBB               	movwf	(??_run_star_demo+1)& (0+255),b
  4661  000F64  0101               	movlb	1	; () banked
  4662  000F66  515B               	movf	(_t2+2)& (0+255),w,b
  4663  000F68  5850               	subwfb	_t3+2,w,c
  4664  000F6A  0100               	movlb	0	; () banked
  4665  000F6C  6FBC               	movwf	(??_run_star_demo+2)& (0+255),b
  4666  000F6E  0101               	movlb	1	; () banked
  4667  000F70  515C               	movf	(_t2+3)& (0+255),w,b
  4668  000F72  5851               	subwfb	_t3+3,w,c
  4669  000F74  0100               	movlb	0	; () banked
  4670  000F76  6FBD               	movwf	(??_run_star_demo+3)& (0+255),b
  4671  000F78  51BD               	movf	(??_run_star_demo+3)& (0+255),w,b
  4672  000F7A  E107               	bnz	u12280
  4673  000F7C  0E81               	movlw	129
  4674  000F7E  5DBA               	subwf	??_run_star_demo& (0+255),w,b
  4675  000F80  0E96               	movlw	150
  4676  000F82  59BB               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  4677  000F84  0E98               	movlw	152
  4678  000F86  59BC               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  4679  000F88  E31B               	bnc	l12282
  4680  000F8A                     u12280:
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;star_demo.c: 280: {
  4684                           ;star_demo.c: 281: awake = 0;
  4685  000F8A  6BE1               	clrf	_awake& (0+255),b
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;star_demo.c: 285: MiApp_TransceiverPowerState(0x00);
  4689  000F8C  0E00               	movlw	0
  4690  000F8E  EC7F  F014         	call	_MiApp_TransceiverPowerState
  4691                           
  4692                           ;star_demo.c: 286: LCDDisplay((char *)"Sleeping!!!", 0, 0);
  4693  000F92  0EB4               	movlw	low STR_59
  4694  000F94  0100               	movlb	0	; () banked
  4695  000F96  6F8F               	movwf	LCDDisplay@text& (0+255),b
  4696  000F98  0EFF               	movlw	high STR_59
  4697  000F9A  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
  4698  000F9C  6B91               	clrf	LCDDisplay@value& (0+255),b
  4699  000F9E  6B92               	clrf	LCDDisplay@delay& (0+255),b
  4700  000FA0  ECBA  F017         	call	_LCDDisplay	;wreg free
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;star_demo.c: 287: DELAY_ms(1000);
  4704  000FA4  0E03               	movlw	3
  4705  000FA6  6F61               	movwf	(DELAY_ms@ms+1)& (0+255),b
  4706  000FA8  0EE8               	movlw	232
  4707  000FAA  6F60               	movwf	DELAY_ms@ms& (0+255),b
  4708  000FAC  ECEF  F00F         	call	_DELAY_ms	;wreg free
  4709                           
  4710                           ; BSR set to: 0
  4711                           ;star_demo.c: 288: t1 = t3;
  4712  000FB0  C04E  F155         	movff	_t3,_t1
  4713  000FB4  C04F  F156         	movff	_t3+1,_t1+1
  4714  000FB8  C050  F157         	movff	_t3+2,_t1+2
  4715  000FBC  C051  F158         	movff	_t3+3,_t1+3
  4716  000FC0                     l12282:
  4717                           
  4718                           ; BSR set to: 0
  4719  000FC0  51E1               	movf	_awake& (0+255),w,b
  4720  000FC2  E101 D598          	bz	l12128
  4721  000FC6  D5E1               	goto	l12144
  4722  000FC8                     __end_of_run_star_demo:
  4723                           	opt stack 0
  4724                           tblptru	equ	0xFF8
  4725                           tblptrh	equ	0xFF7
  4726                           tblptrl	equ	0xFF6
  4727                           tablat	equ	0xFF5
  4728                           prodh	equ	0xFF4
  4729                           prodl	equ	0xFF3
  4730                           intcon	equ	0xFF2
  4731                           intcon2	equ	0xFF1
  4732                           postinc0	equ	0xFEE
  4733                           wreg	equ	0xFE8
  4734                           indf1	equ	0xFE7
  4735                           postdec1	equ	0xFE5
  4736                           fsr1h	equ	0xFE2
  4737                           fsr1l	equ	0xFE1
  4738                           indf2	equ	0xFDF
  4739                           fsr2h	equ	0xFDA
  4740                           fsr2l	equ	0xFD9
  4741                           
  4742 ;; *************** function _STAR_DEMO_OPTIONS_MESSAGE *****************
  4743 ;; Defined at:
  4744 ;;		line 212 in file "../src/demo_ouput.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  NetworkRole     1    wreg     unsigned char 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  NetworkRole     1   52[BANK0 ] unsigned char 
  4749 ;; Return value:  Size  Location     Type
  4750 ;;		None               void
  4751 ;; Registers used:
  4752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4753 ;; Tracked objects:
  4754 ;;		On entry : F/0
  4755 ;;		On exit  : F/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4761 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4762 ;;Total ram usage:        1 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    8
  4765 ;; This function calls:
  4766 ;;		_LCDDisplay
  4767 ;; This function is called by:
  4768 ;;		_run_star_demo
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text8
  4773  003374                     __ptext8:
  4774                           	opt stack 0
  4775  003374                     _STAR_DEMO_OPTIONS_MESSAGE:
  4776                           	opt stack 20
  4777                           
  4778                           ; BSR set to: 0
  4779                           ;incstack = 0
  4780                           ;STAR_DEMO_OPTIONS_MESSAGE@NetworkRole stored from wreg
  4781  003374  6F94               	movwf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),b
  4782                           
  4783                           ;demo_ouput.c: 214: if (NetworkRole)
  4784  003376  0100               	movlb	0	; () banked
  4785  003378  5194               	movf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),w,b
  4786  00337A  E004               	bz	l11822
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;demo_ouput.c: 215: {
  4790                           ;demo_ouput.c: 217: LCDDisplay((char *)"PC :RB0 or RB2  to Broadcast msg", 0, 0);
  4791  00337C  0E69               	movlw	low STR_47
  4792  00337E  6F8F               	movwf	LCDDisplay@text& (0+255),b
  4793  003380  0EFC               	movlw	high STR_47
  4794  003382  D003               	goto	L9
  4795  003384                     l11822:
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;demo_ouput.c: 222: else
  4799                           ;demo_ouput.c: 223: {
  4800                           ;demo_ouput.c: 225: LCDDisplay((char *)"RB0 : Unicast   RB2 : Next Node", 0, 0);
  4801  003384  0EAA               	movlw	low STR_48
  4802  003386  6F8F               	movwf	LCDDisplay@text& (0+255),b
  4803  003388  0EFC               	movlw	high STR_48
  4804  00338A                     L9:
  4805  00338A  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
  4806  00338C  6B91               	clrf	LCDDisplay@value& (0+255),b
  4807  00338E  6B92               	clrf	LCDDisplay@delay& (0+255),b
  4808  003390  EFBA  F017         	goto	_LCDDisplay	;wreg free
  4809  003394                     __end_of_STAR_DEMO_OPTIONS_MESSAGE:
  4810                           	opt stack 0
  4811                           tblptru	equ	0xFF8
  4812                           tblptrh	equ	0xFF7
  4813                           tblptrl	equ	0xFF6
  4814                           tablat	equ	0xFF5
  4815                           prodh	equ	0xFF4
  4816                           prodl	equ	0xFF3
  4817                           intcon	equ	0xFF2
  4818                           intcon2	equ	0xFF1
  4819                           postinc0	equ	0xFEE
  4820                           wreg	equ	0xFE8
  4821                           indf1	equ	0xFE7
  4822                           postdec1	equ	0xFE5
  4823                           fsr1h	equ	0xFE2
  4824                           fsr1l	equ	0xFE1
  4825                           indf2	equ	0xFDF
  4826                           fsr2h	equ	0xFDA
  4827                           fsr2l	equ	0xFD9
  4828                           
  4829 ;; *************** function _MiApp_UnicastStar *****************
  4830 ;; Defined at:
  4831 ;;		line 1974 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;  SecEn           1    wreg     unsigned char 
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  SecEn           1   77[BANK0 ] unsigned char 
  4836 ;;  t2              4   82[BANK0 ] struct _MIWI_TICK
  4837 ;;  t1              4   78[BANK0 ] struct _MIWI_TICK
  4838 ;;  status          1    0        unsigned char 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      unsigned char 
  4841 ;; Registers used:
  4842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4843 ;; Tracked objects:
  4844 ;;		On entry : F/0
  4845 ;;		On exit  : F/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4849 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4850 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4851 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4852 ;;Total ram usage:       13 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; Hardware stack levels required when called:   16
  4855 ;; This function calls:
  4856 ;;		_MiApp_MessageAvailable
  4857 ;;		_MiWi_TickGet
  4858 ;;		_SendPacket
  4859 ;; This function is called by:
  4860 ;;		_run_star_demo
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text9
  4865  0029FE                     __ptext9:
  4866                           	opt stack 0
  4867  0029FE                     _MiApp_UnicastStar:
  4868                           	opt stack 12
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;incstack = 0
  4872                           ;MiApp_UnicastStar@SecEn stored from wreg
  4873  0029FE  6FAD               	movwf	MiApp_UnicastStar@SecEn& (0+255),b
  4874                           
  4875                           ;miwi_p2p.c: 1976: rec_ack = 0;
  4876  002A00  0100               	movlb	0	; () banked
  4877  002A02  6BE6               	clrf	_rec_ack& (0+255),b
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;miwi_p2p.c: 1977: bool status;
  4881                           ;miwi_p2p.c: 1980: status = SendPacket(0, ConnectionTable[0].Address, 1, SecEn);
  4882  002A04  0EC6               	movlw	low (_ConnectionTable+4)
  4883  002A06  6F87               	movwf	SendPacket@DestinationAddress& (0+255),b
  4884  002A08  0E02               	movlw	high (_ConnectionTable+4)
  4885  002A0A  6F88               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  4886  002A0C  0E01               	movlw	1
  4887  002A0E  6F89               	movwf	SendPacket@isCommand& (0+255),b
  4888  002A10  C0AD  F08A         	movff	MiApp_UnicastStar@SecEn,SendPacket@SecurityEnabled
  4889  002A14  0E00               	movlw	0
  4890  002A16  EC21  F011         	call	_SendPacket
  4891                           
  4892                           ; BSR set to: 0
  4893                           ;miwi_p2p.c: 1987: MIWI_TICK t1, t2;
  4894                           ;miwi_p2p.c: 1989: t1 = MiWi_TickGet();
  4895  002A1A  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  4896  002A1E  C060  F0AE         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t1
  4897  002A22  C061  F0AF         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t1+1
  4898  002A26  C062  F0B0         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t1+2
  4899  002A2A  C063  F0B1         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t1+3
  4900                           
  4901                           ;miwi_p2p.c: 1990: while (!rec_ack)
  4902  002A2E  D022               	goto	l11684
  4903  002A30                     l11674:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;miwi_p2p.c: 1991: {
  4907                           ;miwi_p2p.c: 1992: t2 = MiWi_TickGet();
  4908  002A30  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  4909  002A34  C060  F0B2         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t2
  4910  002A38  C061  F0B3         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t2+1
  4911  002A3C  C062  F0B4         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t2+2
  4912  002A40  C063  F0B5         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t2+3
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;miwi_p2p.c: 1993: MiApp_MessageAvailable();
  4916  002A44  EC81  F01A         	call	_MiApp_MessageAvailable	;wreg free
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;miwi_p2p.c: 1996: if((t2.Val - t1.Val) > ((((uint32_t)(8000000)/32)/10)))
  4920  002A48  51AE               	movf	MiApp_UnicastStar@t1& (0+255),w,b
  4921  002A4A  5DB2               	subwf	MiApp_UnicastStar@t2& (0+255),w,b
  4922  002A4C  6FA9               	movwf	??_MiApp_UnicastStar& (0+255),b
  4923  002A4E  51AF               	movf	(MiApp_UnicastStar@t1+1)& (0+255),w,b
  4924  002A50  59B3               	subwfb	(MiApp_UnicastStar@t2+1)& (0+255),w,b
  4925  002A52  6FAA               	movwf	(??_MiApp_UnicastStar+1)& (0+255),b
  4926  002A54  51B0               	movf	(MiApp_UnicastStar@t1+2)& (0+255),w,b
  4927  002A56  59B4               	subwfb	(MiApp_UnicastStar@t2+2)& (0+255),w,b
  4928  002A58  6FAB               	movwf	(??_MiApp_UnicastStar+2)& (0+255),b
  4929  002A5A  51B1               	movf	(MiApp_UnicastStar@t1+3)& (0+255),w,b
  4930  002A5C  59B5               	subwfb	(MiApp_UnicastStar@t2+3)& (0+255),w,b
  4931  002A5E  6FAC               	movwf	(??_MiApp_UnicastStar+3)& (0+255),b
  4932  002A60  51AC               	movf	(??_MiApp_UnicastStar+3)& (0+255),w,b
  4933  002A62  11AB               	iorwf	(??_MiApp_UnicastStar+2)& (0+255),w,b
  4934  002A64  E105               	bnz	u11690
  4935  002A66  0EA9               	movlw	169
  4936  002A68  5DA9               	subwf	??_MiApp_UnicastStar& (0+255),w,b
  4937  002A6A  0E61               	movlw	97
  4938  002A6C  59AA               	subwfb	(??_MiApp_UnicastStar+1)& (0+255),w,b
  4939  002A6E  E302               	bnc	l11684
  4940  002A70                     u11690:
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;miwi_p2p.c: 1997: {
  4944                           ;miwi_p2p.c: 1998: if (rec_ack != 1)
  4945  002A70  05E6               	decf	_rec_ack& (0+255),w,b
  4946  002A72  E102               	bnz	l11686
  4947  002A74                     l11684:
  4948                           
  4949                           ; BSR set to: 0
  4950  002A74  51E6               	movf	_rec_ack& (0+255),w,b
  4951  002A76  E0DC               	bz	l11674
  4952  002A78                     l11686:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;miwi_p2p.c: 2001: }
  4956                           ;miwi_p2p.c: 2002: }
  4957                           ;miwi_p2p.c: 2003: }
  4958                           ;miwi_p2p.c: 2006: return rec_ack;
  4959  002A78  51E6               	movf	_rec_ack& (0+255),w,b
  4960                           
  4961                           ; BSR set to: 0
  4962  002A7A  0012               	return		;funcret
  4963  002A7C                     __end_of_MiApp_UnicastStar:
  4964                           	opt stack 0
  4965                           tblptru	equ	0xFF8
  4966                           tblptrh	equ	0xFF7
  4967                           tblptrl	equ	0xFF6
  4968                           tablat	equ	0xFF5
  4969                           prodh	equ	0xFF4
  4970                           prodl	equ	0xFF3
  4971                           intcon	equ	0xFF2
  4972                           intcon2	equ	0xFF1
  4973                           postinc0	equ	0xFEE
  4974                           wreg	equ	0xFE8
  4975                           indf1	equ	0xFE7
  4976                           postdec1	equ	0xFE5
  4977                           fsr1h	equ	0xFE2
  4978                           fsr1l	equ	0xFE1
  4979                           indf2	equ	0xFDF
  4980                           fsr2h	equ	0xFDA
  4981                           fsr2l	equ	0xFD9
  4982                           
  4983 ;; *************** function _MiApp_TransceiverPowerState *****************
  4984 ;; Defined at:
  4985 ;;		line 1321 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;  Mode            1    wreg     unsigned char 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  Mode            1   73[BANK0 ] unsigned char 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      unsigned char 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : F/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5003 ;;Total ram usage:        1 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:   15
  5006 ;; This function calls:
  5007 ;;		_CheckForData
  5008 ;;		_MiMAC_PowerState
  5009 ;;		_NVMWrite
  5010 ;;		_P2PTasks
  5011 ;; This function is called by:
  5012 ;;		_run_star_demo
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text10
  5017  0028FE                     __ptext10:
  5018                           	opt stack 0
  5019  0028FE                     _MiApp_TransceiverPowerState:
  5020                           	opt stack 13
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;incstack = 0
  5024                           ;MiApp_TransceiverPowerState@Mode stored from wreg
  5025  0028FE  6FA9               	movwf	MiApp_TransceiverPowerState@Mode& (0+255),b
  5026                           
  5027                           ;miwi_p2p.c: 1325: switch(Mode)
  5028  002900  D036               	goto	l11666
  5029  002902                     l506:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;miwi_p2p.c: 1328: {
  5033                           ;miwi_p2p.c: 1330: if( P2PStatus.bits.SaveConnection )
  5034  002902  A3DA               	btfss	_P2PStatus& (0+255),1,b	;volatile
  5035  002904  D010               	goto	l11644
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;miwi_p2p.c: 1331: {
  5039                           ;miwi_p2p.c: 1332: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)20
      +                           * sizeof(CONNECTION_ENTRY));
  5040  002906  0EC2               	movlw	low _ConnectionTable
  5041  002908  6F61               	movwf	NVMWrite@source& (0+255),b
  5042  00290A  0E02               	movlw	high _ConnectionTable
  5043  00290C  6F62               	movwf	(NVMWrite@source+1)& (0+255),b
  5044  00290E  C0EA  F063         	movff	_nvmConnectionTable,NVMWrite@addr
  5045  002912  C0EB  F064         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  5046  002916  0E01               	movlw	1
  5047  002918  6F66               	movwf	(NVMWrite@count+1)& (0+255),b
  5048  00291A  0E18               	movlw	24
  5049  00291C  6F65               	movwf	NVMWrite@count& (0+255),b
  5050  00291E  EC70  F011         	call	_NVMWrite	;wreg free
  5051                           
  5052                           ;miwi_p2p.c: 1333: P2PStatus.bits.SaveConnection = 0;
  5053  002922  0100               	movlb	0	; () banked
  5054  002924  93DA               	bcf	_P2PStatus& (0+255),1,b	;volatile
  5055  002926                     l11644:
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;miwi_p2p.c: 1334: }
  5059                           ;miwi_p2p.c: 1336: if( MiMAC_PowerState(0x00) )
  5060  002926  0E00               	movlw	0
  5061  002928  EC84  F016         	call	_MiMAC_PowerState
  5062  00292C  0900               	iorlw	0
  5063  00292E  B4D8               	btfsc	status,2,c
  5064  002930  0012               	return	
  5065                           
  5066                           ;miwi_p2p.c: 1337: {
  5067                           ;miwi_p2p.c: 1338: P2PStatus.bits.Sleeping = 1;
  5068  002932  0100               	movlb	0	; () banked
  5069  002934  81DA               	bsf	_P2PStatus& (0+255),0,b	;volatile
  5070                           
  5071                           ;miwi_p2p.c: 1339: return 0x00;
  5072                           ;	Return value of _MiApp_TransceiverPowerState is never used
  5073  002936  0012               	return	
  5074  002938                     l11648:
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;miwi_p2p.c: 1345: {
  5078                           ;miwi_p2p.c: 1346: if( MiMAC_PowerState(0xFF) )
  5079  002938  0EFF               	movlw	255
  5080  00293A  EC84  F016         	call	_MiMAC_PowerState
  5081  00293E  0900               	iorlw	0
  5082  002940  B4D8               	btfsc	status,2,c
  5083  002942  0012               	return	
  5084                           
  5085                           ;miwi_p2p.c: 1347: {
  5086                           ;miwi_p2p.c: 1348: P2PStatus.bits.Sleeping = 0;
  5087  002944  0100               	movlb	0	; () banked
  5088  002946  91DA               	bcf	_P2PStatus& (0+255),0,b	;volatile
  5089                           
  5090                           ;miwi_p2p.c: 1349: return 0x00;
  5091                           ;	Return value of _MiApp_TransceiverPowerState is never used
  5092  002948  0012               	return	
  5093  00294A                     l11652:
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;miwi_p2p.c: 1355: {
  5097                           ;miwi_p2p.c: 1356: if( 0 == MiMAC_PowerState(0xFF) )
  5098  00294A  0EFF               	movlw	255
  5099  00294C  EC84  F016         	call	_MiMAC_PowerState
  5100  002950  0900               	iorlw	0
  5101  002952  E101               	bnz	l513
  5102  002954  0012               	return	
  5103  002956                     l513:
  5104                           
  5105                           ;miwi_p2p.c: 1359: }
  5106                           ;miwi_p2p.c: 1360: P2PStatus.bits.Sleeping = 0;
  5107  002956  0100               	movlb	0	; () banked
  5108  002958  91DA               	bcf	_P2PStatus& (0+255),0,b	;volatile
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;miwi_p2p.c: 1361: if( CheckForData() == 0 )
  5112  00295A  EC55  F016         	call	_CheckForData	;wreg free
  5113  00295E  0900               	iorlw	0
  5114  002960  E103               	bnz	l11662
  5115  002962  0012               	return	
  5116  002964                     l11660:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;miwi_p2p.c: 1366: {
  5120                           ;miwi_p2p.c: 1367: P2PTasks();
  5121  002964  ECE4  F007         	call	_P2PTasks	;wreg free
  5122  002968                     l11662:
  5123                           
  5124                           ; BSR set to: 0
  5125  002968  A5DA               	btfss	_P2PStatus& (0+255),2,b	;volatile
  5126  00296A  0012               	return	
  5127  00296C  D7FB               	goto	l11660
  5128  00296E                     l11666:
  5129  00296E  0100               	movlb	0	; () banked
  5130  002970  51A9               	movf	MiApp_TransceiverPowerState@Mode& (0+255),w,b
  5131                           
  5132                           ; Switch size 1, requested type "speed"
  5133                           ; Number of cases is 3, Range of values is 0 to 2
  5134                           ; switch strategies available:
  5135                           ; Name         Instructions Cycles
  5136                           ; simple_byte           10     6 (average)
  5137                           ;	Chosen strategy is simple_byte
  5138  002972  E0C7               	bz	l506
  5139  002974  0A01               	xorlw	1	; case 1
  5140  002976  E0E0               	bz	l11648
  5141  002978  0A03               	xorlw	3	; case 2
  5142  00297A  E0E7               	bz	l11652
  5143  00297C  0012               	return		;funcret
  5144  00297E                     __end_of_MiApp_TransceiverPowerState:
  5145                           	opt stack 0
  5146                           tblptru	equ	0xFF8
  5147                           tblptrh	equ	0xFF7
  5148                           tblptrl	equ	0xFF6
  5149                           tablat	equ	0xFF5
  5150                           prodh	equ	0xFF4
  5151                           prodl	equ	0xFF3
  5152                           intcon	equ	0xFF2
  5153                           intcon2	equ	0xFF1
  5154                           postinc0	equ	0xFEE
  5155                           wreg	equ	0xFE8
  5156                           indf1	equ	0xFE7
  5157                           postdec1	equ	0xFE5
  5158                           fsr1h	equ	0xFE2
  5159                           fsr1l	equ	0xFE1
  5160                           indf2	equ	0xFDF
  5161                           fsr2h	equ	0xFDA
  5162                           fsr2l	equ	0xFD9
  5163                           status	equ	0xFD8
  5164                           
  5165 ;; *************** function _MiMAC_PowerState *****************
  5166 ;; Defined at:
  5167 ;;		line 1167 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  PowerState      1    wreg     unsigned char 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  PowerState      1   14[BANK0 ] unsigned char 
  5172 ;;  i               1   15[BANK0 ] unsigned char 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      unsigned char 
  5175 ;; Registers used:
  5176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5183 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5185 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;Total ram usage:        2 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    8
  5189 ;; This function calls:
  5190 ;;		_DELAY_ms
  5191 ;;		_SetRFMode
  5192 ;; This function is called by:
  5193 ;;		_MiApp_TransceiverPowerState
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text11
  5198  002D08                     __ptext11:
  5199                           	opt stack 0
  5200  002D08                     _MiMAC_PowerState:
  5201                           	opt stack 19
  5202                           
  5203                           ;incstack = 0
  5204                           ;MiMAC_PowerState@PowerState stored from wreg
  5205  002D08  0100               	movlb	0	; () banked
  5206  002D0A  6F6E               	movwf	MiMAC_PowerState@PowerState& (0+255),b
  5207                           
  5208                           ;drv_mrf_miwi_89xa.c: 1169: switch(PowerState)
  5209  002D0C  D021               	goto	l11424
  5210  002D0E                     l11396:
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;drv_mrf_miwi_89xa.c: 1172: {
  5214                           ;drv_mrf_miwi_89xa.c: 1173: SetRFMode(0x00);
  5215  002D0E  0E00               	movlw	0
  5216  002D10  ECBB  F015         	call	_SetRFMode
  5217                           
  5218                           ;drv_mrf_miwi_89xa.c: 1177: INTCON3bits.INT3IE = 0;
  5219  002D14  9AF0               	bcf	intcon3,5,c	;volatile
  5220                           
  5221                           ;drv_mrf_miwi_89xa.c: 1178: }
  5222                           ;drv_mrf_miwi_89xa.c: 1179: break;
  5223  002D16  0C01               	retlw	1
  5224  002D18                     l11400:
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;drv_mrf_miwi_89xa.c: 1182: {
  5228                           ;drv_mrf_miwi_89xa.c: 1183: uint8_t i;
  5229                           ;drv_mrf_miwi_89xa.c: 1185: SetRFMode(0x20);
  5230  002D18  0E20               	movlw	32
  5231  002D1A  ECBB  F015         	call	_SetRFMode
  5232                           
  5233                           ;drv_mrf_miwi_89xa.c: 1186: SetRFMode(0x60);
  5234  002D1E  0E60               	movlw	96
  5235  002D20  ECBB  F015         	call	_SetRFMode
  5236                           
  5237                           ;drv_mrf_miwi_89xa.c: 1190: INTCON3bits.INT3IE = 1;
  5238  002D24  8AF0               	bsf	intcon3,5,c	;volatile
  5239                           
  5240                           ;drv_mrf_miwi_89xa.c: 1191: DELAY_ms(10);
  5241  002D26  0100               	movlb	0	; () banked
  5242  002D28  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
  5243  002D2A  0E0A               	movlw	10
  5244  002D2C  6F60               	movwf	DELAY_ms@ms& (0+255),b
  5245  002D2E  ECEF  F00F         	call	_DELAY_ms	;wreg free
  5246                           
  5247                           ; BSR set to: 0
  5248                           ;drv_mrf_miwi_89xa.c: 1193: for(i = 0; i < 5; i++)
  5249  002D32  6B6F               	clrf	MiMAC_PowerState@i& (0+255),b
  5250  002D34                     l11412:
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;drv_mrf_miwi_89xa.c: 1194: {
  5254                           ;drv_mrf_miwi_89xa.c: 1195: AckInfo[i].Valid = 0;
  5255  002D34  516F               	movf	MiMAC_PowerState@i& (0+255),w,b
  5256  002D36  0D06               	mullw	6
  5257  002D38  0E37               	movlw	low _AckInfo
  5258  002D3A  24F3               	addwf	prodl,w,c
  5259  002D3C  6ED9               	movwf	fsr2l,c
  5260  002D3E  0E01               	movlw	high _AckInfo
  5261  002D40  20F4               	addwfc	prodh,w,c
  5262  002D42  6EDA               	movwf	fsr2h,c
  5263  002D44  6ADF               	clrf	indf2,c
  5264                           
  5265                           ; BSR set to: 0
  5266  002D46  2B6F               	incf	MiMAC_PowerState@i& (0+255),f,b
  5267                           
  5268                           ; BSR set to: 0
  5269  002D48  0E04               	movlw	4
  5270  002D4A  656F               	cpfsgt	MiMAC_PowerState@i& (0+255),b
  5271  002D4C  D7F3               	goto	l11412
  5272  002D4E  0C01               	retlw	1
  5273  002D50                     l11424:
  5274  002D50  0100               	movlb	0	; () banked
  5275  002D52  516E               	movf	MiMAC_PowerState@PowerState& (0+255),w,b
  5276                           
  5277                           ; Switch size 1, requested type "speed"
  5278                           ; Number of cases is 2, Range of values is 0 to 255
  5279                           ; switch strategies available:
  5280                           ; Name         Instructions Cycles
  5281                           ; simple_byte            7     4 (average)
  5282                           ;	Chosen strategy is simple_byte
  5283  002D54  E0DC               	bz	l11396
  5284  002D56  0AFF               	xorlw	255	; case 255
  5285  002D58  A4D8               	btfss	status,2,c
  5286  002D5A  0C00               	retlw	0
  5287  002D5C  D7DD               	goto	l11400
  5288  002D5E                     __end_of_MiMAC_PowerState:
  5289                           	opt stack 0
  5290                           tblptru	equ	0xFF8
  5291                           tblptrh	equ	0xFF7
  5292                           tblptrl	equ	0xFF6
  5293                           tablat	equ	0xFF5
  5294                           prodh	equ	0xFF4
  5295                           prodl	equ	0xFF3
  5296                           intcon	equ	0xFF2
  5297                           intcon2	equ	0xFF1
  5298                           intcon3	equ	0xFF0
  5299                           postinc0	equ	0xFEE
  5300                           wreg	equ	0xFE8
  5301                           indf1	equ	0xFE7
  5302                           postdec1	equ	0xFE5
  5303                           fsr1h	equ	0xFE2
  5304                           fsr1l	equ	0xFE1
  5305                           indf2	equ	0xFDF
  5306                           fsr2h	equ	0xFDA
  5307                           fsr2l	equ	0xFD9
  5308                           status	equ	0xFD8
  5309                           
  5310 ;; *************** function _CheckForData *****************
  5311 ;; Defined at:
  5312 ;;		line 1399 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;		None
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  firstuint8_t    1   50[BANK0 ] unsigned char 
  5317 ;;  tmpTxData       1   49[BANK0 ] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      unsigned char 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : F/0
  5324 ;;		On exit  : F/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5328 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5330 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5331 ;;Total ram usage:        2 bytes
  5332 ;; Hardware stack levels used:    1
  5333 ;; Hardware stack levels required when called:   11
  5334 ;; This function calls:
  5335 ;;		_MiWi_TickGet
  5336 ;;		_SendPacket
  5337 ;; This function is called by:
  5338 ;;		_MiApp_TransceiverPowerState
  5339 ;;		_run_star_demo
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text12
  5344  002CAA                     __ptext12:
  5345                           	opt stack 0
  5346  002CAA                     _CheckForData:
  5347                           	opt stack 16
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;miwi_p2p.c: 1401: uint8_t tmpTxData = TxData;
  5351                           
  5352                           ;incstack = 0
  5353  002CAA  C0DF  F091         	movff	_TxData,CheckForData@tmpTxData
  5354                           
  5355                           ;miwi_p2p.c: 1402: uint8_t firstuint8_t = TxBuffer[0];
  5356  002CAE  C165  F092         	movff	_TxBuffer,CheckForData@firstuint8_t
  5357                           
  5358                           ;miwi_p2p.c: 1404: {TxData = 0;};
  5359  002CB2  6BDF               	clrf	_TxData& (0+255),b
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;miwi_p2p.c: 1405: TxBuffer[TxData++] = 0x04;
  5363  002CB4  0E65               	movlw	low _TxBuffer
  5364  002CB6  25DF               	addwf	_TxData& (0+255),w,b
  5365  002CB8  6ED9               	movwf	fsr2l,c
  5366  002CBA  6ADA               	clrf	fsr2h,c
  5367  002CBC  0E01               	movlw	high _TxBuffer
  5368  002CBE  22DA               	addwfc	fsr2h,f,c
  5369  002CC0  0E04               	movlw	4
  5370  002CC2  6EDF               	movwf	indf2,c
  5371                           
  5372                           ; BSR set to: 0
  5373  002CC4  2BDF               	incf	_TxData& (0+255),f,b
  5374                           
  5375                           ; BSR set to: 0
  5376                           ;miwi_p2p.c: 1431: if( SendPacket(0, ConnectionTable[0].Address, 1, 0) )
  5377  002CC6  0EC6               	movlw	low (_ConnectionTable+4)
  5378  002CC8  6F87               	movwf	SendPacket@DestinationAddress& (0+255),b
  5379  002CCA  0E02               	movlw	high (_ConnectionTable+4)
  5380  002CCC  6F88               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  5381  002CCE  0E01               	movlw	1
  5382  002CD0  6F89               	movwf	SendPacket@isCommand& (0+255),b
  5383  002CD2  0E00               	movlw	0
  5384  002CD4  6B8A               	clrf	SendPacket@SecurityEnabled& (0+255),b
  5385  002CD6  EC21  F011         	call	_SendPacket
  5386  002CDA  0900               	iorlw	0
  5387  002CDC  E010               	bz	l522
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;miwi_p2p.c: 1434: {
  5391                           ;miwi_p2p.c: 1435: P2PStatus.bits.DataRequesting = 1;
  5392  002CDE  85DA               	bsf	_P2PStatus& (0+255),2,b	;volatile
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;miwi_p2p.c: 1439: DataRequestTimer = MiWi_TickGet();
  5396  002CE0  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  5397  002CE4  C060  F03E         	movff	?_MiWi_TickGet,_DataRequestTimer
  5398  002CE8  C061  F03F         	movff	?_MiWi_TickGet+1,_DataRequestTimer+1
  5399  002CEC  C062  F040         	movff	?_MiWi_TickGet+2,_DataRequestTimer+2
  5400  002CF0  C063  F041         	movff	?_MiWi_TickGet+3,_DataRequestTimer+3
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;miwi_p2p.c: 1440: TxBuffer[0] = firstuint8_t;
  5404  002CF4  C092  F165         	movff	CheckForData@firstuint8_t,_TxBuffer
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;miwi_p2p.c: 1441: TxData = tmpTxData;
  5408  002CF8  C091  F0DF         	movff	CheckForData@tmpTxData,_TxData
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;miwi_p2p.c: 1455: return 1;
  5412  002CFC  0C01               	retlw	1
  5413  002CFE                     l522:
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;miwi_p2p.c: 1456: }
  5417                           ;miwi_p2p.c: 1457: TxBuffer[0] = firstuint8_t;
  5418  002CFE  C092  F165         	movff	CheckForData@firstuint8_t,_TxBuffer
  5419                           
  5420                           ;miwi_p2p.c: 1458: TxData = tmpTxData;
  5421  002D02  C091  F0DF         	movff	CheckForData@tmpTxData,_TxData
  5422                           
  5423                           ; BSR set to: 0
  5424                           
  5425                           ; BSR set to: 0
  5426                           ;miwi_p2p.c: 1462: return 0;
  5427  002D06  0C00               	retlw	0	;funcret
  5428  002D08                     __end_of_CheckForData:
  5429                           	opt stack 0
  5430                           tblptru	equ	0xFF8
  5431                           tblptrh	equ	0xFF7
  5432                           tblptrl	equ	0xFF6
  5433                           tablat	equ	0xFF5
  5434                           prodh	equ	0xFF4
  5435                           prodl	equ	0xFF3
  5436                           intcon	equ	0xFF2
  5437                           intcon2	equ	0xFF1
  5438                           intcon3	equ	0xFF0
  5439                           postinc0	equ	0xFEE
  5440                           wreg	equ	0xFE8
  5441                           indf1	equ	0xFE7
  5442                           postdec1	equ	0xFE5
  5443                           fsr1h	equ	0xFE2
  5444                           fsr1l	equ	0xFE1
  5445                           indf2	equ	0xFDF
  5446                           fsr2h	equ	0xFDA
  5447                           fsr2l	equ	0xFD9
  5448                           status	equ	0xFD8
  5449                           
  5450 ;; *************** function _DemoOutput_UpdateTxRx *****************
  5451 ;; Defined at:
  5452 ;;		line 188 in file "../src/demo_ouput.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  TxNum           1    wreg     unsigned char 
  5455 ;;  RxNum           1   49[BANK0 ] unsigned char 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  TxNum           1   50[BANK0 ] unsigned char 
  5458 ;; Return value:  Size  Location     Type
  5459 ;;		None               void
  5460 ;; Registers used:
  5461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : F/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5467 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5470 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5471 ;;Total ram usage:        2 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    8
  5474 ;; This function calls:
  5475 ;;		_LCDTRXCount
  5476 ;; This function is called by:
  5477 ;;		_run_star_demo
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           	psect	text13
  5482  0034DC                     __ptext13:
  5483                           	opt stack 0
  5484  0034DC                     _DemoOutput_UpdateTxRx:
  5485                           	opt stack 20
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;incstack = 0
  5489                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  5490  0034DC  6F92               	movwf	DemoOutput_UpdateTxRx@TxNum& (0+255),b
  5491                           
  5492                           ;demo_ouput.c: 190: LCDTRXCount(TxNum, RxNum);
  5493  0034DE  C091  F08F         	movff	DemoOutput_UpdateTxRx@RxNum,LCDTRXCount@rxCount
  5494  0034E2  0100               	movlb	0	; () banked
  5495  0034E4  5192               	movf	DemoOutput_UpdateTxRx@TxNum& (0+255),w,b
  5496  0034E6  EFDA  F017         	goto	_LCDTRXCount
  5497  0034EA                     __end_of_DemoOutput_UpdateTxRx:
  5498                           	opt stack 0
  5499                           tblptru	equ	0xFF8
  5500                           tblptrh	equ	0xFF7
  5501                           tblptrl	equ	0xFF6
  5502                           tablat	equ	0xFF5
  5503                           prodh	equ	0xFF4
  5504                           prodl	equ	0xFF3
  5505                           intcon	equ	0xFF2
  5506                           intcon2	equ	0xFF1
  5507                           intcon3	equ	0xFF0
  5508                           postinc0	equ	0xFEE
  5509                           wreg	equ	0xFE8
  5510                           indf1	equ	0xFE7
  5511                           postdec1	equ	0xFE5
  5512                           fsr1h	equ	0xFE2
  5513                           fsr1l	equ	0xFE1
  5514                           indf2	equ	0xFDF
  5515                           fsr2h	equ	0xFDA
  5516                           fsr2l	equ	0xFD9
  5517                           status	equ	0xFD8
  5518                           
  5519 ;; *************** function _LCDTRXCount *****************
  5520 ;; Defined at:
  5521 ;;		line 294 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/lcd.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  txCount         1    wreg     unsigned char 
  5524 ;;  rxCount         1   47[BANK0 ] unsigned char 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  txCount         1   48[BANK0 ] unsigned char 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;		None               void
  5529 ;; Registers used:
  5530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : F/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5536 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5539 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5540 ;;Total ram usage:        2 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:    7
  5543 ;; This function calls:
  5544 ;;		_LCD_Erase
  5545 ;;		_LCD_Update
  5546 ;;		_sprintf
  5547 ;; This function is called by:
  5548 ;;		_DemoOutput_UpdateTxRx
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           	psect	text14
  5553  002FB4                     __ptext14:
  5554                           	opt stack 0
  5555  002FB4                     _LCDTRXCount:
  5556                           	opt stack 20
  5557                           
  5558                           ;incstack = 0
  5559                           ;LCDTRXCount@txCount stored from wreg
  5560  002FB4  6F90               	movwf	LCDTRXCount@txCount& (0+255),b
  5561                           
  5562                           ;lcd.c: 297: LCD_Erase();
  5563  002FB6  EC07  F01A         	call	_LCD_Erase	;wreg free
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;lcd.c: 298: sprintf((char *)LCDText, (char*)"TX Messages: %3d", txCount);
  5567  002FBA  0E88               	movlw	low _LCDText
  5568  002FBC  6F6C               	movwf	sprintf@sp& (0+255),b
  5569  002FBE  0E01               	movlw	high _LCDText
  5570  002FC0  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  5571  002FC2  0E85               	movlw	low STR_14
  5572  002FC4  6F6E               	movwf	sprintf@f& (0+255),b
  5573  002FC6  0EFF               	movlw	high STR_14
  5574  002FC8  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  5575  002FCA  C090  F070         	movff	LCDTRXCount@txCount,?_sprintf+4
  5576  002FCE  6B71               	clrf	(?_sprintf+5)& (0+255),b
  5577  002FD0  ECDC  F001         	call	_sprintf	;wreg free
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;lcd.c: 299: sprintf((char *)&(LCDText[16]), (char*)"RX Messages: %3d", rxCount);
  5581  002FD4  0E98               	movlw	low (_LCDText+16)
  5582  002FD6  6F6C               	movwf	sprintf@sp& (0+255),b
  5583  002FD8  0E01               	movlw	high (_LCDText+16)
  5584  002FDA  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
  5585  002FDC  0E74               	movlw	low STR_15
  5586  002FDE  6F6E               	movwf	sprintf@f& (0+255),b
  5587  002FE0  0EFF               	movlw	high STR_15
  5588  002FE2  6F6F               	movwf	(sprintf@f+1)& (0+255),b
  5589  002FE4  C08F  F070         	movff	LCDTRXCount@rxCount,?_sprintf+4
  5590  002FE8  6B71               	clrf	(?_sprintf+5)& (0+255),b
  5591  002FEA  ECDC  F001         	call	_sprintf	;wreg free
  5592                           
  5593                           ; BSR set to: 0
  5594                           ;lcd.c: 300: LCD_Update();
  5595  002FEE  EF23  F01A         	goto	_LCD_Update	;wreg free
  5596  002FF2                     __end_of_LCDTRXCount:
  5597                           	opt stack 0
  5598                           tblptru	equ	0xFF8
  5599                           tblptrh	equ	0xFF7
  5600                           tblptrl	equ	0xFF6
  5601                           tablat	equ	0xFF5
  5602                           prodh	equ	0xFF4
  5603                           prodl	equ	0xFF3
  5604                           intcon	equ	0xFF2
  5605                           intcon2	equ	0xFF1
  5606                           intcon3	equ	0xFF0
  5607                           postinc0	equ	0xFEE
  5608                           wreg	equ	0xFE8
  5609                           indf1	equ	0xFE7
  5610                           postdec1	equ	0xFE5
  5611                           fsr1h	equ	0xFE2
  5612                           fsr1l	equ	0xFE1
  5613                           indf2	equ	0xFDF
  5614                           fsr2h	equ	0xFDA
  5615                           fsr2l	equ	0xFD9
  5616                           status	equ	0xFD8
  5617                           
  5618 ;; *************** function _ButtonPressed *****************
  5619 ;; Defined at:
  5620 ;;		line 260 in file "../src/demo_ouput.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  t               4   14[BANK0 ] struct _MIWI_TICK
  5625 ;;  tickDifferen    4   10[BANK0 ] struct _MIWI_TICK
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      unsigned char 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : F/0
  5632 ;;		On exit  : F/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5636 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5638 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5639 ;;Total ram usage:        8 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    6
  5642 ;; This function calls:
  5643 ;;		_MiWi_TickGet
  5644 ;; This function is called by:
  5645 ;;		_freezer_feature
  5646 ;;		_run_star_demo
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text15
  5651  00297E                     __ptext15:
  5652                           	opt stack 0
  5653  00297E                     _ButtonPressed:
  5654                           	opt stack 23
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;demo_ouput.c: 262: MIWI_TICK tickDifference;
  5658                           ;demo_ouput.c: 264: if(PORTBbits.RB0 == 0)
  5659                           
  5660                           ;incstack = 0
  5661  00297E  B081               	btfsc	3969,0,c	;volatile
  5662  002980  D00F               	goto	l1100
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;demo_ouput.c: 265: {
  5666                           ;demo_ouput.c: 267: if(PUSH_BUTTON_pressed == 0)
  5667  002982  51DB               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  5668  002984  E13B               	bnz	l11854
  5669                           
  5670                           ; BSR set to: 0
  5671                           ;demo_ouput.c: 268: {
  5672                           ;demo_ouput.c: 269: PUSH_BUTTON_pressed = 1;
  5673  002986  0E01               	movlw	1
  5674  002988  6FDB               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;demo_ouput.c: 270: PUSH_BUTTON_press_time = MiWi_TickGet();
  5678  00298A  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  5679  00298E  C060  F046         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  5680  002992  C061  F047         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  5681  002996  C062  F048         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  5682  00299A  C063  F049         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  5683                           
  5684                           ; BSR set to: 0
  5685                           ;demo_ouput.c: 271: return 1;
  5686  00299E  0C01               	retlw	1
  5687  0029A0                     l1100:
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;demo_ouput.c: 274: else if(PORTBbits.RB2 == 0)
  5691  0029A0  B481               	btfsc	3969,2,c	;volatile
  5692  0029A2  D00F               	goto	l11846
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;demo_ouput.c: 275: {
  5696                           ;demo_ouput.c: 277: if(PUSH_BUTTON_pressed == 0)
  5697  0029A4  51DB               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  5698  0029A6  E12A               	bnz	l11854
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;demo_ouput.c: 278: {
  5702                           ;demo_ouput.c: 279: PUSH_BUTTON_pressed = 1;
  5703  0029A8  0E01               	movlw	1
  5704  0029AA  6FDB               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  5705                           
  5706                           ; BSR set to: 0
  5707                           ;demo_ouput.c: 280: PUSH_BUTTON_press_time = MiWi_TickGet();
  5708  0029AC  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  5709  0029B0  C060  F046         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  5710  0029B4  C061  F047         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  5711  0029B8  C062  F048         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  5712  0029BC  C063  F049         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  5713                           
  5714                           ; BSR set to: 0
  5715                           ;demo_ouput.c: 281: return 2;
  5716  0029C0  0C02               	retlw	2
  5717  0029C2                     l11846:
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;demo_ouput.c: 284: else
  5721                           ;demo_ouput.c: 285: {
  5722                           ;demo_ouput.c: 287: MIWI_TICK t = MiWi_TickGet();
  5723  0029C2  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  5724  0029C6  C060  F06E         	movff	?_MiWi_TickGet,ButtonPressed@t
  5725  0029CA  C061  F06F         	movff	?_MiWi_TickGet+1,ButtonPressed@t+1
  5726  0029CE  C062  F070         	movff	?_MiWi_TickGet+2,ButtonPressed@t+2
  5727  0029D2  C063  F071         	movff	?_MiWi_TickGet+3,ButtonPressed@t+3
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;demo_ouput.c: 290: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  5731  0029D6  5046               	movf	_PUSH_BUTTON_press_time,w,c
  5732  0029D8  5D6E               	subwf	ButtonPressed@t& (0+255),w,b
  5733  0029DA  6F6A               	movwf	ButtonPressed@tickDifference& (0+255),b
  5734  0029DC  5047               	movf	_PUSH_BUTTON_press_time+1,w,c
  5735  0029DE  596F               	subwfb	(ButtonPressed@t+1)& (0+255),w,b
  5736  0029E0  6F6B               	movwf	(ButtonPressed@tickDifference+1)& (0+255),b
  5737  0029E2  5048               	movf	_PUSH_BUTTON_press_time+2,w,c
  5738  0029E4  5970               	subwfb	(ButtonPressed@t+2)& (0+255),w,b
  5739  0029E6  6F6C               	movwf	(ButtonPressed@tickDifference+2)& (0+255),b
  5740  0029E8  5049               	movf	_PUSH_BUTTON_press_time+3,w,c
  5741  0029EA  5971               	subwfb	(ButtonPressed@t+3)& (0+255),w,b
  5742  0029EC  6F6D               	movwf	(ButtonPressed@tickDifference+3)& (0+255),b
  5743                           
  5744                           ; BSR set to: 0
  5745                           ;demo_ouput.c: 293: if(tickDifference.Val > 0x00003FFF)
  5746  0029EE  516D               	movf	(ButtonPressed@tickDifference+3)& (0+255),w,b
  5747  0029F0  116C               	iorwf	(ButtonPressed@tickDifference+2)& (0+255),w,b
  5748  0029F2  E103               	bnz	u11890
  5749  0029F4  0E40               	movlw	64
  5750  0029F6  5D6B               	subwf	(ButtonPressed@tickDifference+1)& (0+255),w,b
  5751  0029F8  E301               	bnc	l11854
  5752  0029FA                     u11890:
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;demo_ouput.c: 294: {
  5756                           ;demo_ouput.c: 295: PUSH_BUTTON_pressed = 0;
  5757  0029FA  6BDB               	clrf	_PUSH_BUTTON_pressed& (0+255),b
  5758  0029FC                     l11854:
  5759                           
  5760                           ; BSR set to: 0
  5761                           
  5762                           ; BSR set to: 0
  5763                           ;demo_ouput.c: 296: }
  5764                           ;demo_ouput.c: 297: }
  5765                           ;demo_ouput.c: 299: return 0;
  5766  0029FC  0C00               	retlw	0	;funcret
  5767  0029FE                     __end_of_ButtonPressed:
  5768                           	opt stack 0
  5769                           tblptru	equ	0xFF8
  5770                           tblptrh	equ	0xFF7
  5771                           tblptrl	equ	0xFF6
  5772                           tablat	equ	0xFF5
  5773                           prodh	equ	0xFF4
  5774                           prodl	equ	0xFF3
  5775                           intcon	equ	0xFF2
  5776                           intcon2	equ	0xFF1
  5777                           intcon3	equ	0xFF0
  5778                           postinc0	equ	0xFEE
  5779                           wreg	equ	0xFE8
  5780                           indf1	equ	0xFE7
  5781                           postdec1	equ	0xFE5
  5782                           fsr1h	equ	0xFE2
  5783                           fsr1l	equ	0xFE1
  5784                           indf2	equ	0xFDF
  5785                           fsr2h	equ	0xFDA
  5786                           fsr2l	equ	0xFD9
  5787                           status	equ	0xFD8
  5788                           
  5789 ;; *************** function _Initialize_Demo *****************
  5790 ;; Defined at:
  5791 ;;		line 97 in file "../src/task.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  freezer_enab    1    wreg     unsigned char 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  freezer_enab    1   90[BANK0 ] unsigned char 
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  1    wreg      unsigned char 
  5798 ;; Registers used:
  5799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5800 ;; Tracked objects:
  5801 ;;		On entry : F/0
  5802 ;;		On exit  : F/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5808 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5809 ;;Total ram usage:        1 bytes
  5810 ;; Hardware stack levels used:    1
  5811 ;; Hardware stack levels required when called:   17
  5812 ;; This function calls:
  5813 ;;		_DemoOutput_Channel
  5814 ;;		_DemoOutput_ChannelError
  5815 ;;		_DemoOutput_Instruction
  5816 ;;		_DumpConnection
  5817 ;;		_MiApp_ConnectionMode
  5818 ;;		_MiApp_EstablishConnection
  5819 ;;		_MiApp_ProtocolInit
  5820 ;;		_MiApp_SetChannel
  5821 ;;		_NVMWrite
  5822 ;;		_Read_MAC_Address
  5823 ;; This function is called by:
  5824 ;;		_main
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text16
  5829  00287C                     __ptext16:
  5830                           	opt stack 0
  5831  00287C                     _Initialize_Demo:
  5832                           	opt stack 13
  5833                           
  5834                           ; BSR set to: 0
  5835                           ;incstack = 0
  5836                           ;Initialize_Demo@freezer_enable stored from wreg
  5837  00287C  6FBA               	movwf	Initialize_Demo@freezer_enable& (0+255),b
  5838                           
  5839                           ;task.c: 100: Read_MAC_Address(myLongAddress);
  5840  00287E  0EA9               	movlw	low _myLongAddress
  5841  002880  0100               	movlb	0	; () banked
  5842  002882  6F66               	movwf	Read_MAC_Address@myAddress& (0+255),b
  5843  002884  0E01               	movlw	high _myLongAddress
  5844  002886  6F67               	movwf	(Read_MAC_Address@myAddress+1)& (0+255),b
  5845  002888  EC79  F013         	call	_Read_MAC_Address	;wreg free
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;task.c: 103: if (freezer_enable)
  5849  00288C  51BA               	movf	Initialize_Demo@freezer_enable& (0+255),w,b
  5850  00288E  E003               	bz	l1199
  5851                           
  5852                           ; BSR set to: 0
  5853                           ;task.c: 104: {
  5854                           ;task.c: 105: MiApp_ProtocolInit(1);
  5855  002890  0E01               	movlw	1
  5856  002892  EF14  F00B         	goto	_MiApp_ProtocolInit
  5857  002896                     l1199:
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;task.c: 107: else
  5861                           ;task.c: 108: {
  5862                           ;task.c: 109: LATAbits.LATA2 = 0;
  5863  002896  9489               	bcf	3977,2,c	;volatile
  5864                           
  5865                           ;task.c: 110: LATAbits.LATA3 = 0;
  5866  002898  9689               	bcf	3977,3,c	;volatile
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;task.c: 122: MiApp_ProtocolInit(0);
  5870  00289A  0E00               	movlw	0
  5871  00289C  EC14  F00B         	call	_MiApp_ProtocolInit
  5872                           
  5873                           ; BSR set to: 0
  5874  0028A0  0E19               	movlw	25
  5875  0028A2  ECA1  F018         	call	_MiApp_SetChannel
  5876  0028A6  0900               	iorlw	0
  5877  0028A8  E103               	bnz	l12450
  5878  0028AA  0E19               	movlw	25
  5879  0028AC  EF86  F019         	goto	_DemoOutput_ChannelError
  5880  0028B0                     l12450:
  5881                           
  5882                           ;task.c: 133: }
  5883                           ;task.c: 144: MiApp_ConnectionMode(0x00);
  5884  0028B0  0E00               	movlw	0
  5885  0028B2  EC18  F018         	call	_MiApp_ConnectionMode
  5886  0028B6  0E00               	movlw	0
  5887  0028B8  0100               	movlb	0	; () banked
  5888  0028BA  6F94               	movwf	DemoOutput_Channel@Step& (0+255),b
  5889  0028BC  0E19               	movlw	25
  5890  0028BE  EC3E  F015         	call	_DemoOutput_Channel
  5891                           
  5892                           ; BSR set to: 0
  5893                           ;task.c: 159: i = MiApp_EstablishConnection(0xFF , 0x00);
  5894  0028C2  6BA9               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  5895  0028C4  EC52  F00D         	call	_MiApp_EstablishConnection
  5896  0028C8  6FE5               	movwf	_i& (0+255),b
  5897                           
  5898                           ; BSR set to: 0
  5899                           ;task.c: 164: if( i != 0xFF )
  5900  0028CA  29E5               	incf	_i& (0+255),w,b
  5901  0028CC  E006               	bz	l12462
  5902                           
  5903                           ; BSR set to: 0
  5904  0028CE  0E01               	movlw	1
  5905  0028D0  6F94               	movwf	DemoOutput_Channel@Step& (0+255),b
  5906  0028D2  0E19               	movlw	25
  5907  0028D4  EC3E  F015         	call	_DemoOutput_Channel
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;task.c: 167: role = 0;
  5911  0028D8  6BFE               	clrf	_role& (0+255),b
  5912  0028DA                     l12462:
  5913                           
  5914                           ; BSR set to: 0
  5915                           ;task.c: 168: }
  5916                           ;task.c: 170: NVMWrite((uint8_t *)&role, nvmRole, 1);
  5917  0028DA  0EFE               	movlw	low _role
  5918  0028DC  6F61               	movwf	NVMWrite@source& (0+255),b
  5919  0028DE  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
  5920  0028E0  C0F4  F063         	movff	_nvmRole,NVMWrite@addr
  5921  0028E4  C0F5  F064         	movff	_nvmRole+1,NVMWrite@addr+1
  5922  0028E8  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  5923  0028EA  0E01               	movlw	1
  5924  0028EC  6F65               	movwf	NVMWrite@count& (0+255),b
  5925  0028EE  EC70  F011         	call	_NVMWrite	;wreg free
  5926                           
  5927                           ;task.c: 182: DumpConnection(0xFF);
  5928  0028F2  0EFF               	movlw	255
  5929  0028F4  EC15  F00A         	call	_DumpConnection
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;task.c: 187: LATAbits.LATA2 = 1;
  5933  0028F8  8489               	bsf	3977,2,c	;volatile
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;task.c: 188: DemoOutput_Instruction();
  5937  0028FA  EF5E  F01A         	goto	_DemoOutput_Instruction	;wreg free
  5938  0028FE                     __end_of_Initialize_Demo:
  5939                           	opt stack 0
  5940                           tblptru	equ	0xFF8
  5941                           tblptrh	equ	0xFF7
  5942                           tblptrl	equ	0xFF6
  5943                           tablat	equ	0xFF5
  5944                           prodh	equ	0xFF4
  5945                           prodl	equ	0xFF3
  5946                           intcon	equ	0xFF2
  5947                           intcon2	equ	0xFF1
  5948                           intcon3	equ	0xFF0
  5949                           postinc0	equ	0xFEE
  5950                           wreg	equ	0xFE8
  5951                           indf1	equ	0xFE7
  5952                           postdec1	equ	0xFE5
  5953                           fsr1h	equ	0xFE2
  5954                           fsr1l	equ	0xFE1
  5955                           indf2	equ	0xFDF
  5956                           fsr2h	equ	0xFDA
  5957                           fsr2l	equ	0xFD9
  5958                           status	equ	0xFD8
  5959                           
  5960 ;; *************** function _Read_MAC_Address *****************
  5961 ;; Defined at:
  5962 ;;		line 77 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/eeprom.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  myAddress       2    6[BANK0 ] PTR unsigned char 
  5965 ;;		 -> myLongAddress(8), 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  i               1   10[BANK0 ] unsigned char 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;		None               void
  5970 ;; Registers used:
  5971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : F/0
  5974 ;;		On exit  : F/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5977 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5978 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;Total ram usage:        5 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    7
  5984 ;; This function calls:
  5985 ;;		_EEPROM_Read
  5986 ;; This function is called by:
  5987 ;;		_Initialize_Demo
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text17
  5992  0026F2                     __ptext17:
  5993                           	opt stack 0
  5994  0026F2                     _Read_MAC_Address:
  5995                           	opt stack 22
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;eeprom.c: 82: {
  5999                           ;eeprom.c: 83: for(i = 0; i < 3; i++)
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;incstack = 0
  6003  0026F2  6B6A               	clrf	Read_MAC_Address@i& (0+255),b
  6004  0026F4                     l12034:
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;eeprom.c: 84: {
  6008                           ;eeprom.c: 85: EEPROM_Read(&(myAddress[8-1-i]), 0xFA+i, 1);
  6009  0026F4  516A               	movf	Read_MAC_Address@i& (0+255),w,b
  6010  0026F6  5D66               	subwf	Read_MAC_Address@myAddress& (0+255),w,b
  6011  0026F8  6F68               	movwf	??_Read_MAC_Address& (0+255),b
  6012  0026FA  0E00               	movlw	0
  6013  0026FC  5967               	subwfb	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  6014  0026FE  6F69               	movwf	(??_Read_MAC_Address+1)& (0+255),b
  6015  002700  0E07               	movlw	7
  6016  002702  2568               	addwf	??_Read_MAC_Address& (0+255),w,b
  6017  002704  6F61               	movwf	EEPROM_Read@dest& (0+255),b
  6018  002706  0E00               	movlw	0
  6019  002708  2169               	addwfc	(??_Read_MAC_Address+1)& (0+255),w,b
  6020  00270A  6F62               	movwf	(EEPROM_Read@dest+1)& (0+255),b
  6021  00270C  516A               	movf	Read_MAC_Address@i& (0+255),w,b
  6022  00270E  0FFA               	addlw	250
  6023  002710  6F63               	movwf	EEPROM_Read@addr& (0+255),b
  6024  002712  0E01               	movlw	1
  6025  002714  6F64               	movwf	EEPROM_Read@count& (0+255),b
  6026  002716  EC74  F017         	call	_EEPROM_Read	;wreg free
  6027  00271A  0100               	movlb	0	; () banked
  6028  00271C  2B6A               	incf	Read_MAC_Address@i& (0+255),f,b
  6029                           
  6030                           ; BSR set to: 0
  6031  00271E  0E02               	movlw	2
  6032  002720  656A               	cpfsgt	Read_MAC_Address@i& (0+255),b
  6033  002722  D7E8               	goto	l12034
  6034                           
  6035                           ; BSR set to: 0
  6036                           ;eeprom.c: 89: {
  6037                           ;eeprom.c: 90: myAddress[4] = 0xFF;
  6038  002724  EE20 F004          	lfsr	2,4
  6039  002728  5166               	movf	Read_MAC_Address@myAddress& (0+255),w,b
  6040  00272A  26D9               	addwf	fsr2l,f,c
  6041  00272C  5167               	movf	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  6042  00272E  22DA               	addwfc	fsr2h,f,c
  6043  002730  68DF               	setf	indf2,c
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;eeprom.c: 92: }
  6047                           ;eeprom.c: 93: myAddress[3] = 0xFE;
  6048  002732  EE20 F003          	lfsr	2,3
  6049  002736  5166               	movf	Read_MAC_Address@myAddress& (0+255),w,b
  6050  002738  26D9               	addwf	fsr2l,f,c
  6051  00273A  5167               	movf	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  6052  00273C  22DA               	addwfc	fsr2h,f,c
  6053  00273E  0EFE               	movlw	254
  6054  002740  6EDF               	movwf	indf2,c
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;eeprom.c: 95: for(i = 0; i < 3; i++)
  6058  002742  6B6A               	clrf	Read_MAC_Address@i& (0+255),b
  6059  002744                     l12048:
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;eeprom.c: 96: {
  6063                           ;eeprom.c: 97: EEPROM_Read(&(myAddress[2-i]), 0xFA+3+i, 1);
  6064  002744  516A               	movf	Read_MAC_Address@i& (0+255),w,b
  6065  002746  5D66               	subwf	Read_MAC_Address@myAddress& (0+255),w,b
  6066  002748  6F68               	movwf	??_Read_MAC_Address& (0+255),b
  6067  00274A  0E00               	movlw	0
  6068  00274C  5967               	subwfb	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  6069  00274E  6F69               	movwf	(??_Read_MAC_Address+1)& (0+255),b
  6070  002750  0E02               	movlw	2
  6071  002752  2568               	addwf	??_Read_MAC_Address& (0+255),w,b
  6072  002754  6F61               	movwf	EEPROM_Read@dest& (0+255),b
  6073  002756  0E00               	movlw	0
  6074  002758  2169               	addwfc	(??_Read_MAC_Address+1)& (0+255),w,b
  6075  00275A  6F62               	movwf	(EEPROM_Read@dest+1)& (0+255),b
  6076  00275C  516A               	movf	Read_MAC_Address@i& (0+255),w,b
  6077  00275E  0FFD               	addlw	253
  6078  002760  6F63               	movwf	EEPROM_Read@addr& (0+255),b
  6079  002762  0E01               	movlw	1
  6080  002764  6F64               	movwf	EEPROM_Read@count& (0+255),b
  6081  002766  EC74  F017         	call	_EEPROM_Read	;wreg free
  6082  00276A  0100               	movlb	0	; () banked
  6083  00276C  2B6A               	incf	Read_MAC_Address@i& (0+255),f,b
  6084                           
  6085                           ; BSR set to: 0
  6086  00276E  0E02               	movlw	2
  6087  002770  656A               	cpfsgt	Read_MAC_Address@i& (0+255),b
  6088  002772  D7E8               	goto	l12048
  6089  002774  0C02               	retlw	2
  6090  002776                     __end_of_Read_MAC_Address:
  6091                           	opt stack 0
  6092                           tblptru	equ	0xFF8
  6093                           tblptrh	equ	0xFF7
  6094                           tblptrl	equ	0xFF6
  6095                           tablat	equ	0xFF5
  6096                           prodh	equ	0xFF4
  6097                           prodl	equ	0xFF3
  6098                           intcon	equ	0xFF2
  6099                           intcon2	equ	0xFF1
  6100                           intcon3	equ	0xFF0
  6101                           postinc0	equ	0xFEE
  6102                           wreg	equ	0xFE8
  6103                           indf1	equ	0xFE7
  6104                           postdec1	equ	0xFE5
  6105                           fsr1h	equ	0xFE2
  6106                           fsr1l	equ	0xFE1
  6107                           indf2	equ	0xFDF
  6108                           fsr2h	equ	0xFDA
  6109                           fsr2l	equ	0xFD9
  6110                           status	equ	0xFD8
  6111                           
  6112 ;; *************** function _EEPROM_Read *****************
  6113 ;; Defined at:
  6114 ;;		line 42 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/eeprom.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  dest            2    1[BANK0 ] PTR unsigned char 
  6117 ;;		 -> myLongAddress(8), 
  6118 ;;  addr            1    3[BANK0 ] unsigned char 
  6119 ;;  count           1    4[BANK0 ] unsigned char 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  oldGIEH         1    5[BANK0 ] unsigned char 
  6122 ;; Return value:  Size  Location     Type
  6123 ;;		None               void
  6124 ;; Registers used:
  6125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : F/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6131 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6132 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6134 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6135 ;;Total ram usage:        5 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:    6
  6138 ;; This function calls:
  6139 ;;		_SPI1_Exchange8bit
  6140 ;; This function is called by:
  6141 ;;		_Read_MAC_Address
  6142 ;; This function uses a non-reentrant model
  6143 ;;
  6144                           
  6145                           	psect	text18
  6146  002EE8                     __ptext18:
  6147                           	opt stack 0
  6148  002EE8                     _EEPROM_Read:
  6149                           	opt stack 22
  6150                           
  6151                           ; BSR set to: 0
  6152                           ;eeprom.c: 45: uint8_t oldGIEH = INTCONbits.GIEH;
  6153                           
  6154                           ; BSR set to: 0
  6155                           ;incstack = 0
  6156  002EE8  0E00               	movlw	0
  6157  002EEA  BEF2               	btfsc	intcon,7,c	;volatile
  6158  002EEC  0E01               	movlw	1
  6159  002EEE  6F65               	movwf	EEPROM_Read@oldGIEH& (0+255),b
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;eeprom.c: 47: INTCONbits.GIEH = 0;
  6163  002EF0  9EF2               	bcf	intcon,7,c	;volatile
  6164                           
  6165                           ; BSR set to: 0
  6166                           ;eeprom.c: 50: LATEbits.LATE0 = 0;
  6167  002EF2  908D               	bcf	3981,0,c	;volatile
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;eeprom.c: 51: SPI1_Exchange8bit(0x03);
  6171  002EF4  0E03               	movlw	3
  6172  002EF6  EC4D  F01A         	call	_SPI1_Exchange8bit
  6173                           
  6174                           ;eeprom.c: 52: SPI1_Exchange8bit(addr);
  6175  002EFA  0100               	movlb	0	; () banked
  6176  002EFC  5163               	movf	EEPROM_Read@addr& (0+255),w,b
  6177  002EFE  EC4D  F01A         	call	_SPI1_Exchange8bit
  6178                           
  6179                           ;eeprom.c: 53: while( count )
  6180  002F02  D00C               	goto	l11814
  6181  002F04                     l11808:
  6182                           
  6183                           ; BSR set to: 0
  6184                           ;eeprom.c: 54: {
  6185                           ;eeprom.c: 55: *dest++ = SPI1_Exchange8bit(0x00);
  6186  002F04  0E00               	movlw	0
  6187  002F06  EC4D  F01A         	call	_SPI1_Exchange8bit
  6188  002F0A  C061  FFD9         	movff	EEPROM_Read@dest,fsr2l
  6189  002F0E  C062  FFDA         	movff	EEPROM_Read@dest+1,fsr2h
  6190  002F12  6EDF               	movwf	indf2,c
  6191  002F14  0100               	movlb	0	; () banked
  6192  002F16  4B61               	infsnz	EEPROM_Read@dest& (0+255),f,b
  6193  002F18  2B62               	incf	(EEPROM_Read@dest+1)& (0+255),f,b
  6194                           
  6195                           ; BSR set to: 0
  6196                           ;eeprom.c: 56: count--;
  6197  002F1A  0764               	decf	EEPROM_Read@count& (0+255),f,b
  6198  002F1C                     l11814:
  6199  002F1C  0100               	movlb	0	; () banked
  6200  002F1E  5164               	movf	EEPROM_Read@count& (0+255),w,b
  6201  002F20  E1F1               	bnz	l11808
  6202                           
  6203                           ; BSR set to: 0
  6204                           ;eeprom.c: 57: }
  6205                           ;eeprom.c: 58: LATEbits.LATE0 = 1;
  6206  002F22  808D               	bsf	3981,0,c	;volatile
  6207                           
  6208                           ;eeprom.c: 61: INTCONbits.GIEH = oldGIEH;
  6209  002F24  B165               	btfsc	EEPROM_Read@oldGIEH& (0+255),0,b
  6210  002F26  D002               	bra	u11835
  6211  002F28  9EF2               	bcf	intcon,7,c	;volatile
  6212  002F2A  D001               	bra	u11836
  6213  002F2C                     u11835:
  6214  002F2C  8EF2               	bsf	intcon,7,c	;volatile
  6215  002F2E                     u11836:
  6216  002F2E  0012               	return		;funcret
  6217  002F30                     __end_of_EEPROM_Read:
  6218                           	opt stack 0
  6219                           tblptru	equ	0xFF8
  6220                           tblptrh	equ	0xFF7
  6221                           tblptrl	equ	0xFF6
  6222                           tablat	equ	0xFF5
  6223                           prodh	equ	0xFF4
  6224                           prodl	equ	0xFF3
  6225                           intcon	equ	0xFF2
  6226                           intcon2	equ	0xFF1
  6227                           intcon3	equ	0xFF0
  6228                           postinc0	equ	0xFEE
  6229                           wreg	equ	0xFE8
  6230                           indf1	equ	0xFE7
  6231                           postdec1	equ	0xFE5
  6232                           fsr1h	equ	0xFE2
  6233                           fsr1l	equ	0xFE1
  6234                           indf2	equ	0xFDF
  6235                           fsr2h	equ	0xFDA
  6236                           fsr2l	equ	0xFD9
  6237                           status	equ	0xFD8
  6238                           
  6239 ;; *************** function _MiApp_ProtocolInit *****************
  6240 ;; Defined at:
  6241 ;;		line 1130 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6242 ;; Parameters:    Size  Location     Type
  6243 ;;  bNetworkFree    1    wreg     unsigned char 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;  bNetworkFree    1   18[BANK0 ] unsigned char 
  6246 ;;  initValue       3   19[BANK0 ] struct .
  6247 ;;  i               1   22[BANK0 ] unsigned char 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      unsigned char 
  6250 ;; Registers used:
  6251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : F/0
  6254 ;;		On exit  : F/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6258 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6260 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6261 ;;Total ram usage:        5 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:   10
  6264 ;; This function calls:
  6265 ;;		_MiApp_SetChannel
  6266 ;;		_MiMAC_Init
  6267 ;;		_NVMInit
  6268 ;;		_NVMRead
  6269 ;;		_NVMWrite
  6270 ;; This function is called by:
  6271 ;;		_Initialize_Demo
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text19
  6276  001628                     __ptext19:
  6277                           	opt stack 0
  6278  001628                     _MiApp_ProtocolInit:
  6279                           	opt stack 19
  6280                           
  6281                           ;incstack = 0
  6282                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  6283  001628  6F72               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
  6284                           
  6285                           ;miwi_p2p.c: 1132: uint8_t i;
  6286                           ;miwi_p2p.c: 1134: MACINIT_PARAM initValue;
  6287                           ;miwi_p2p.c: 1137: NVMInit();
  6288  00162A  EC32  F013         	call	_NVMInit	;wreg free
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;miwi_p2p.c: 1141: P2PStatus.Val = 0;
  6292  00162E  6BDA               	clrf	_P2PStatus& (0+255),b	;volatile
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;miwi_p2p.c: 1142: if (!bNetworkFreezer)
  6296  001630  5172               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  6297  001632  E129               	bnz	l494
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;miwi_p2p.c: 1143: {
  6301                           ;miwi_p2p.c: 1144: for(i = 0; i < 20; i++)
  6302  001634  6B76               	clrf	MiApp_ProtocolInit@i& (0+255),b
  6303  001636                     l11870:
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;miwi_p2p.c: 1145: {
  6307                           ;miwi_p2p.c: 1146: ConnectionTable[i].status.Val = 0;
  6308  001636  5176               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  6309  001638  0D0E               	mullw	14
  6310  00163A  0ECE               	movlw	low (_ConnectionTable+12)
  6311  00163C  24F3               	addwf	prodl,w,c
  6312  00163E  6ED9               	movwf	fsr2l,c
  6313  001640  0E02               	movlw	high (_ConnectionTable+12)
  6314  001642  20F4               	addwfc	prodh,w,c
  6315  001644  6EDA               	movwf	fsr2h,c
  6316  001646  6ADF               	clrf	indf2,c
  6317                           
  6318                           ;miwi_p2p.c: 1147: ConnectionTable[i].Address[0] = 0x00;
  6319  001648  5176               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  6320  00164A  0D0E               	mullw	14
  6321  00164C  0EC6               	movlw	low (_ConnectionTable+4)
  6322  00164E  24F3               	addwf	prodl,w,c
  6323  001650  6ED9               	movwf	fsr2l,c
  6324  001652  0E02               	movlw	high (_ConnectionTable+4)
  6325  001654  20F4               	addwfc	prodh,w,c
  6326  001656  6EDA               	movwf	fsr2h,c
  6327  001658  6ADF               	clrf	indf2,c
  6328                           
  6329                           ;miwi_p2p.c: 1148: ConnectionTable[i].Address[1] = 0x00;
  6330  00165A  5176               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  6331  00165C  0D0E               	mullw	14
  6332  00165E  0EC7               	movlw	low (_ConnectionTable+5)
  6333  001660  24F3               	addwf	prodl,w,c
  6334  001662  6ED9               	movwf	fsr2l,c
  6335  001664  0E02               	movlw	high (_ConnectionTable+5)
  6336  001666  20F4               	addwfc	prodh,w,c
  6337  001668  6EDA               	movwf	fsr2h,c
  6338  00166A  6ADF               	clrf	indf2,c
  6339                           
  6340                           ;miwi_p2p.c: 1149: ConnectionTable[i].Address[2] = 0x00;
  6341  00166C  5176               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  6342  00166E  0D0E               	mullw	14
  6343  001670  0EC8               	movlw	low (_ConnectionTable+6)
  6344  001672  24F3               	addwf	prodl,w,c
  6345  001674  6ED9               	movwf	fsr2l,c
  6346  001676  0E02               	movlw	high (_ConnectionTable+6)
  6347  001678  20F4               	addwfc	prodh,w,c
  6348  00167A  6EDA               	movwf	fsr2h,c
  6349  00167C  6ADF               	clrf	indf2,c
  6350                           
  6351                           ; BSR set to: 0
  6352  00167E  2B76               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  6353                           
  6354                           ; BSR set to: 0
  6355  001680  0E13               	movlw	19
  6356  001682  6576               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  6357  001684  D7D8               	goto	l11870
  6358  001686                     l494:
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;miwi_p2p.c: 1154: }
  6362                           ;miwi_p2p.c: 1155: }
  6363                           ;miwi_p2p.c: 1157: TxData = 0;
  6364  001686  6BDF               	clrf	_TxData& (0+255),b
  6365                           
  6366                           ;miwi_p2p.c: 1166: for (i=0;i<20;i++)
  6367  001688  6B76               	clrf	MiApp_ProtocolInit@i& (0+255),b
  6368  00168A                     l11880:
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;miwi_p2p.c: 1167: {
  6372  00168A  2B76               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  6373                           
  6374                           ; BSR set to: 0
  6375  00168C  0E13               	movlw	19
  6376  00168E  6576               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  6377  001690  D7FC               	goto	l11880
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;miwi_p2p.c: 1170: }
  6381                           ;miwi_p2p.c: 1180: if( bNetworkFreezer )
  6382  001692  5172               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  6383  001694  E054               	bz	l11894
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;miwi_p2p.c: 1181: {
  6387                           ;miwi_p2p.c: 1182: NVMRead( (uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  6388  001696  0EF9               	movlw	low _currentChannel
  6389  001698  6F61               	movwf	NVMRead@dest& (0+255),b
  6390  00169A  6B62               	clrf	(NVMRead@dest+1)& (0+255),b
  6391  00169C  C0EC  F063         	movff	_nvmCurrentChannel,NVMRead@addr
  6392  0016A0  C0ED  F064         	movff	_nvmCurrentChannel+1,NVMRead@addr+1
  6393  0016A4  6B66               	clrf	(NVMRead@count+1)& (0+255),b
  6394  0016A6  0E01               	movlw	1
  6395  0016A8  6F65               	movwf	NVMRead@count& (0+255),b
  6396  0016AA  ECAF  F016         	call	_NVMRead	;wreg free
  6397                           
  6398                           ;miwi_p2p.c: 1183: if( currentChannel >= 32 )
  6399  0016AE  0E1F               	movlw	31
  6400  0016B0  0100               	movlb	0	; () banked
  6401  0016B2  65F9               	cpfsgt	_currentChannel& (0+255),b
  6402  0016B4  D001               	goto	l11892
  6403  0016B6  0C1F               	retlw	31
  6404  0016B8                     l11892:
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;miwi_p2p.c: 1186: }
  6408                           ;miwi_p2p.c: 1191: NVMRead( (uint8_t *)&ConnMode, nvmConnMode, 1);
  6409  0016B8  0EFD               	movlw	low _ConnMode
  6410  0016BA  6F61               	movwf	NVMRead@dest& (0+255),b
  6411  0016BC  6B62               	clrf	(NVMRead@dest+1)& (0+255),b
  6412  0016BE  C0E8  F063         	movff	_nvmConnMode,NVMRead@addr
  6413  0016C2  C0E9  F064         	movff	_nvmConnMode+1,NVMRead@addr+1
  6414  0016C6  6B66               	clrf	(NVMRead@count+1)& (0+255),b
  6415  0016C8  0E01               	movlw	1
  6416  0016CA  6F65               	movwf	NVMRead@count& (0+255),b
  6417  0016CC  ECAF  F016         	call	_NVMRead	;wreg free
  6418                           
  6419                           ;miwi_p2p.c: 1192: NVMRead( (uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)20
      +                           * sizeof(CONNECTION_ENTRY));
  6420  0016D0  0EC2               	movlw	low _ConnectionTable
  6421  0016D2  0100               	movlb	0	; () banked
  6422  0016D4  6F61               	movwf	NVMRead@dest& (0+255),b
  6423  0016D6  0E02               	movlw	high _ConnectionTable
  6424  0016D8  6F62               	movwf	(NVMRead@dest+1)& (0+255),b
  6425  0016DA  C0EA  F063         	movff	_nvmConnectionTable,NVMRead@addr
  6426  0016DE  C0EB  F064         	movff	_nvmConnectionTable+1,NVMRead@addr+1
  6427  0016E2  0E01               	movlw	1
  6428  0016E4  6F66               	movwf	(NVMRead@count+1)& (0+255),b
  6429  0016E6  0E18               	movlw	24
  6430  0016E8  6F65               	movwf	NVMRead@count& (0+255),b
  6431  0016EA  ECAF  F016         	call	_NVMRead	;wreg free
  6432                           
  6433                           ;miwi_p2p.c: 1195: NVMRead( (uint8_t *)&role, nvmRole, 1);
  6434  0016EE  0EFE               	movlw	low _role
  6435  0016F0  0100               	movlb	0	; () banked
  6436  0016F2  6F61               	movwf	NVMRead@dest& (0+255),b
  6437  0016F4  6B62               	clrf	(NVMRead@dest+1)& (0+255),b
  6438  0016F6  C0F4  F063         	movff	_nvmRole,NVMRead@addr
  6439  0016FA  C0F5  F064         	movff	_nvmRole+1,NVMRead@addr+1
  6440  0016FE  6B66               	clrf	(NVMRead@count+1)& (0+255),b
  6441  001700  0E01               	movlw	1
  6442  001702  6F65               	movwf	NVMRead@count& (0+255),b
  6443  001704  ECAF  F016         	call	_NVMRead	;wreg free
  6444                           
  6445                           ;miwi_p2p.c: 1196: NVMRead( (uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
  6446  001708  0EFA               	movlw	low _myConnectionIndex_in_PanCo
  6447  00170A  0100               	movlb	0	; () banked
  6448  00170C  6F61               	movwf	NVMRead@dest& (0+255),b
  6449  00170E  6B62               	clrf	(NVMRead@dest+1)& (0+255),b
  6450  001710  C0F6  F063         	movff	_nvmmyIndex,NVMRead@addr
  6451  001714  C0F7  F064         	movff	_nvmmyIndex+1,NVMRead@addr+1
  6452  001718  6B66               	clrf	(NVMRead@count+1)& (0+255),b
  6453  00171A  0E01               	movlw	1
  6454  00171C  6F65               	movwf	NVMRead@count& (0+255),b
  6455  00171E  ECAF  F016         	call	_NVMRead	;wreg free
  6456                           
  6457                           ;miwi_p2p.c: 1198: NVMRead( (uint8_t *)&conn_size, nvmEdc, 1);
  6458  001722  0EF8               	movlw	low _conn_size
  6459  001724  0100               	movlb	0	; () banked
  6460  001726  6F61               	movwf	NVMRead@dest& (0+255),b
  6461  001728  6B62               	clrf	(NVMRead@dest+1)& (0+255),b
  6462  00172A  C0EE  F063         	movff	_nvmEdc,NVMRead@addr
  6463  00172E  C0EF  F064         	movff	_nvmEdc+1,NVMRead@addr+1
  6464  001732  6B66               	clrf	(NVMRead@count+1)& (0+255),b
  6465  001734  0E01               	movlw	1
  6466  001736  6F65               	movwf	NVMRead@count& (0+255),b
  6467  001738  ECAF  F016         	call	_NVMRead	;wreg free
  6468                           
  6469                           ;miwi_p2p.c: 1210: }
  6470  00173C  D028               	goto	l11896
  6471  00173E                     l11894:
  6472                           
  6473                           ; BSR set to: 0
  6474                           ;miwi_p2p.c: 1211: else
  6475                           ;miwi_p2p.c: 1212: {
  6476                           ;miwi_p2p.c: 1217: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  6477  00173E  0EF9               	movlw	low _currentChannel
  6478  001740  6F61               	movwf	NVMWrite@source& (0+255),b
  6479  001742  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
  6480  001744  C0EC  F063         	movff	_nvmCurrentChannel,NVMWrite@addr
  6481  001748  C0ED  F064         	movff	_nvmCurrentChannel+1,NVMWrite@addr+1
  6482  00174C  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  6483  00174E  0E01               	movlw	1
  6484  001750  6F65               	movwf	NVMWrite@count& (0+255),b
  6485  001752  EC70  F011         	call	_NVMWrite	;wreg free
  6486                           
  6487                           ;miwi_p2p.c: 1218: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
  6488  001756  0EFD               	movlw	low _ConnMode
  6489  001758  0100               	movlb	0	; () banked
  6490  00175A  6F61               	movwf	NVMWrite@source& (0+255),b
  6491  00175C  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
  6492  00175E  C0E8  F063         	movff	_nvmConnMode,NVMWrite@addr
  6493  001762  C0E9  F064         	movff	_nvmConnMode+1,NVMWrite@addr+1
  6494  001766  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  6495  001768  0E01               	movlw	1
  6496  00176A  6F65               	movwf	NVMWrite@count& (0+255),b
  6497  00176C  EC70  F011         	call	_NVMWrite	;wreg free
  6498                           
  6499                           ;miwi_p2p.c: 1219: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)20
      +                           * sizeof(CONNECTION_ENTRY));
  6500  001770  0EC2               	movlw	low _ConnectionTable
  6501  001772  0100               	movlb	0	; () banked
  6502  001774  6F61               	movwf	NVMWrite@source& (0+255),b
  6503  001776  0E02               	movlw	high _ConnectionTable
  6504  001778  6F62               	movwf	(NVMWrite@source+1)& (0+255),b
  6505  00177A  C0EA  F063         	movff	_nvmConnectionTable,NVMWrite@addr
  6506  00177E  C0EB  F064         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  6507  001782  0E01               	movlw	1
  6508  001784  6F66               	movwf	(NVMWrite@count+1)& (0+255),b
  6509  001786  0E18               	movlw	24
  6510  001788  6F65               	movwf	NVMWrite@count& (0+255),b
  6511  00178A  EC70  F011         	call	_NVMWrite	;wreg free
  6512  00178E                     l11896:
  6513                           
  6514                           ;miwi_p2p.c: 1221: }
  6515                           ;miwi_p2p.c: 1228: initValue.PAddress = myLongAddress;
  6516  00178E  0EA9               	movlw	low _myLongAddress
  6517  001790  0100               	movlb	0	; () banked
  6518  001792  6F74               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
  6519  001794  0E01               	movlw	high _myLongAddress
  6520  001796  6F75               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;miwi_p2p.c: 1229: initValue.actionFlags.bits.CCAEnable = 1;
  6524  001798  8373               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
  6525                           
  6526                           ; BSR set to: 0
  6527                           ;miwi_p2p.c: 1230: initValue.actionFlags.bits.PAddrLength = 8;
  6528  00179A  5173               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
  6529  00179C  0B87               	andlw	-121
  6530  00179E  0940               	iorlw	64
  6531  0017A0  6F73               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;miwi_p2p.c: 1231: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
  6535  0017A2  B172               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
  6536  0017A4  D002               	bra	u11955
  6537  0017A6  9573               	bcf	MiApp_ProtocolInit@initValue& (0+255),2,b
  6538  0017A8  D002               	bra	u11956
  6539  0017AA                     u11955:
  6540  0017AA  0100               	movlb	0	; () banked
  6541  0017AC  8573               	bsf	MiApp_ProtocolInit@initValue& (0+255),2,b
  6542  0017AE                     u11956:
  6543                           
  6544                           ; BSR set to: 0
  6545                           ;miwi_p2p.c: 1232: initValue.actionFlags.bits.RepeaterMode = 0;
  6546  0017AE  9173               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;miwi_p2p.c: 1234: MiMAC_Init(initValue);
  6550  0017B0  C073  F06E         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
  6551  0017B4  C074  F06F         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
  6552  0017B8  C075  F070         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
  6553  0017BC  ECBE  F011         	call	_MiMAC_Init	;wreg free
  6554                           
  6555                           ;miwi_p2p.c: 1243: MiApp_SetChannel(currentChannel);
  6556  0017C0  0100               	movlb	0	; () banked
  6557  0017C2  51F9               	movf	_currentChannel& (0+255),w,b
  6558  0017C4  ECA1  F018         	call	_MiApp_SetChannel
  6559                           
  6560                           ;miwi_p2p.c: 1254: P2PCapacityInfo = 0;
  6561  0017C8  0100               	movlb	0	; () banked
  6562  0017CA  6BD9               	clrf	_P2PCapacityInfo& (0+255),b
  6563                           
  6564                           ; BSR set to: 0
  6565                           ;miwi_p2p.c: 1261: P2PCapacityInfo |= (ConnMode << 4);
  6566  0017CC  39FD               	swapf	_ConnMode& (0+255),w,b
  6567  0017CE  0BF0               	andlw	240
  6568  0017D0  13D9               	iorwf	_P2PCapacityInfo& (0+255),f,b
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;miwi_p2p.c: 1263: INTCON3bits.INT3IE = 1;
  6572  0017D2  8AF0               	bsf	intcon3,5,c	;volatile
  6573                           
  6574                           ; BSR set to: 0
  6575  0017D4  0012               	return		;funcret
  6576  0017D6                     __end_of_MiApp_ProtocolInit:
  6577                           	opt stack 0
  6578                           tblptru	equ	0xFF8
  6579                           tblptrh	equ	0xFF7
  6580                           tblptrl	equ	0xFF6
  6581                           tablat	equ	0xFF5
  6582                           prodh	equ	0xFF4
  6583                           prodl	equ	0xFF3
  6584                           intcon	equ	0xFF2
  6585                           intcon2	equ	0xFF1
  6586                           intcon3	equ	0xFF0
  6587                           postinc0	equ	0xFEE
  6588                           wreg	equ	0xFE8
  6589                           indf1	equ	0xFE7
  6590                           postdec1	equ	0xFE5
  6591                           fsr1h	equ	0xFE2
  6592                           fsr1l	equ	0xFE1
  6593                           indf2	equ	0xFDF
  6594                           fsr2h	equ	0xFDA
  6595                           fsr2l	equ	0xFD9
  6596                           status	equ	0xFD8
  6597                           
  6598 ;; *************** function _NVMRead *****************
  6599 ;; Defined at:
  6600 ;;		line 129 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  dest            2    1[BANK0 ] PTR unsigned char 
  6603 ;;		 -> myConnectionIndex_in_PanCo(1), currentChannel(1), ConnMode(1), role(1), 
  6604 ;;		 -> conn_size(1), ConnectionTable(280), 
  6605 ;;  addr            2    3[BANK0 ] unsigned int 
  6606 ;;  count           2    5[BANK0 ] unsigned int 
  6607 ;; Auto vars:     Size  Location     Type
  6608 ;;  oldRFIE         1    7[BANK0 ] unsigned char 
  6609 ;; Return value:  Size  Location     Type
  6610 ;;		None               void
  6611 ;; Registers used:
  6612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6613 ;; Tracked objects:
  6614 ;;		On entry : F/0
  6615 ;;		On exit  : 0/0
  6616 ;;		Unchanged: 0/0
  6617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6618 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6621 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6622 ;;Total ram usage:        7 bytes
  6623 ;; Hardware stack levels used:    1
  6624 ;; Hardware stack levels required when called:    6
  6625 ;; This function calls:
  6626 ;;		_SPI1_Exchange8bit
  6627 ;; This function is called by:
  6628 ;;		_MiApp_ProtocolInit
  6629 ;; This function uses a non-reentrant model
  6630 ;;
  6631                           
  6632                           	psect	text20
  6633  002D5E                     __ptext20:
  6634                           	opt stack 0
  6635  002D5E                     _NVMRead:
  6636                           	opt stack 22
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;miwi_nvm.c: 136: uint8_t oldRFIE = INTCON3bits.INT3IE;
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;incstack = 0
  6643  002D5E  0E00               	movlw	0
  6644  002D60  BAF0               	btfsc	intcon3,5,c	;volatile
  6645  002D62  0E01               	movlw	1
  6646  002D64  6F67               	movwf	NVMRead@oldRFIE& (0+255),b
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;miwi_nvm.c: 138: INTCON3bits.INT3IE = 0;
  6650  002D66  9AF0               	bcf	intcon3,5,c	;volatile
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;miwi_nvm.c: 141: LATDbits.LATD5 = 0;
  6654  002D68  9A8C               	bcf	3980,5,c	;volatile
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;miwi_nvm.c: 160: SPI1_Exchange8bit(0x03);
  6658  002D6A  0E03               	movlw	3
  6659  002D6C  EC4D  F01A         	call	_SPI1_Exchange8bit
  6660                           
  6661                           ;miwi_nvm.c: 161: SPI1_Exchange8bit(addr>>8);
  6662  002D70  0100               	movlb	0	; () banked
  6663  002D72  5164               	movf	(NVMRead@addr+1)& (0+255),w,b
  6664  002D74  EC4D  F01A         	call	_SPI1_Exchange8bit
  6665                           
  6666                           ;miwi_nvm.c: 162: SPI1_Exchange8bit(addr);
  6667  002D78  0100               	movlb	0	; () banked
  6668  002D7A  5163               	movf	NVMRead@addr& (0+255),w,b
  6669  002D7C  EC4D  F01A         	call	_SPI1_Exchange8bit
  6670                           
  6671                           ;miwi_nvm.c: 165: while( count > 0 )
  6672  002D80  D00E               	goto	l11600
  6673  002D82                     l11594:
  6674                           
  6675                           ; BSR set to: 0
  6676                           ;miwi_nvm.c: 166: {
  6677                           ;miwi_nvm.c: 167: *dest++ = SPI1_Exchange8bit(0x00);
  6678  002D82  0E00               	movlw	0
  6679  002D84  EC4D  F01A         	call	_SPI1_Exchange8bit
  6680  002D88  C061  FFD9         	movff	NVMRead@dest,fsr2l
  6681  002D8C  C062  FFDA         	movff	NVMRead@dest+1,fsr2h
  6682  002D90  6EDF               	movwf	indf2,c
  6683  002D92  0100               	movlb	0	; () banked
  6684  002D94  4B61               	infsnz	NVMRead@dest& (0+255),f,b
  6685  002D96  2B62               	incf	(NVMRead@dest+1)& (0+255),f,b
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;miwi_nvm.c: 168: count--;
  6689  002D98  0765               	decf	NVMRead@count& (0+255),f,b
  6690  002D9A  A0D8               	btfss	status,0,c
  6691  002D9C  0766               	decf	(NVMRead@count+1)& (0+255),f,b
  6692  002D9E                     l11600:
  6693  002D9E  0100               	movlb	0	; () banked
  6694  002DA0  5165               	movf	NVMRead@count& (0+255),w,b
  6695  002DA2  1166               	iorwf	(NVMRead@count+1)& (0+255),w,b
  6696  002DA4  E1EE               	bnz	l11594
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;miwi_nvm.c: 169: }
  6700                           ;miwi_nvm.c: 170: LATDbits.LATD5 = 1;
  6701  002DA6  8A8C               	bsf	3980,5,c	;volatile
  6702                           
  6703                           ;miwi_nvm.c: 175: INTCON3bits.INT3IE = oldRFIE;
  6704  002DA8  B167               	btfsc	NVMRead@oldRFIE& (0+255),0,b
  6705  002DAA  D002               	bra	u11615
  6706  002DAC  9AF0               	bcf	intcon3,5,c	;volatile
  6707  002DAE  D001               	bra	u11616
  6708  002DB0                     u11615:
  6709  002DB0  8AF0               	bsf	intcon3,5,c	;volatile
  6710  002DB2                     u11616:
  6711  002DB2  0012               	return		;funcret
  6712  002DB4                     __end_of_NVMRead:
  6713                           	opt stack 0
  6714                           tblptru	equ	0xFF8
  6715                           tblptrh	equ	0xFF7
  6716                           tblptrl	equ	0xFF6
  6717                           tablat	equ	0xFF5
  6718                           prodh	equ	0xFF4
  6719                           prodl	equ	0xFF3
  6720                           intcon	equ	0xFF2
  6721                           intcon2	equ	0xFF1
  6722                           intcon3	equ	0xFF0
  6723                           postinc0	equ	0xFEE
  6724                           wreg	equ	0xFE8
  6725                           indf1	equ	0xFE7
  6726                           postdec1	equ	0xFE5
  6727                           fsr1h	equ	0xFE2
  6728                           fsr1l	equ	0xFE1
  6729                           indf2	equ	0xFDF
  6730                           fsr2h	equ	0xFDA
  6731                           fsr2l	equ	0xFD9
  6732                           status	equ	0xFD8
  6733                           
  6734 ;; *************** function _NVMInit *****************
  6735 ;; Defined at:
  6736 ;;		line 631 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;		None
  6739 ;; Auto vars:     Size  Location     Type
  6740 ;;  result          1    5[BANK0 ] unsigned char 
  6741 ;; Return value:  Size  Location     Type
  6742 ;;                  1    wreg      unsigned char 
  6743 ;; Registers used:
  6744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6745 ;; Tracked objects:
  6746 ;;		On entry : 0/0
  6747 ;;		On exit  : F/0
  6748 ;;		Unchanged: 0/0
  6749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6753 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6754 ;;Total ram usage:        1 bytes
  6755 ;; Hardware stack levels used:    1
  6756 ;; Hardware stack levels required when called:    6
  6757 ;; This function calls:
  6758 ;;		_NVMalloc
  6759 ;; This function is called by:
  6760 ;;		_MiApp_ProtocolInit
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text21
  6765  002664                     __ptext21:
  6766                           	opt stack 0
  6767  002664                     _NVMInit:
  6768                           	opt stack 22
  6769                           
  6770                           ;miwi_nvm.c: 633: bool result = 1;
  6771                           
  6772                           ;incstack = 0
  6773  002664  0E01               	movlw	1
  6774  002666  0100               	movlb	0	; () banked
  6775  002668  6F65               	movwf	NVMInit@result& (0+255),b
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;miwi_nvm.c: 635: nextEEPosition = 0;
  6779  00266A  6BD4               	clrf	_nextEEPosition& (0+255),b
  6780  00266C  6BD5               	clrf	(_nextEEPosition+1)& (0+255),b
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;miwi_nvm.c: 637: result &= NVMalloc(2, &nvmMyPANID);
  6784  00266E  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  6785  002670  0E02               	movlw	2
  6786  002672  6F60               	movwf	NVMalloc@size& (0+255),b
  6787  002674  0EF0               	movlw	low _nvmMyPANID
  6788  002676  6F62               	movwf	NVMalloc@location& (0+255),b
  6789  002678  ECBA  F018         	call	_NVMalloc	;wreg free
  6790  00267C  1765               	andwf	NVMInit@result& (0+255),f,b
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;miwi_nvm.c: 638: result &= NVMalloc(1, &nvmCurrentChannel);
  6794  00267E  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  6795  002680  0E01               	movlw	1
  6796  002682  6F60               	movwf	NVMalloc@size& (0+255),b
  6797  002684  0EEC               	movlw	low _nvmCurrentChannel
  6798  002686  6F62               	movwf	NVMalloc@location& (0+255),b
  6799  002688  ECBA  F018         	call	_NVMalloc	;wreg free
  6800  00268C  1765               	andwf	NVMInit@result& (0+255),f,b
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;miwi_nvm.c: 639: result &= NVMalloc(1, &nvmConnMode);
  6804  00268E  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  6805  002690  0E01               	movlw	1
  6806  002692  6F60               	movwf	NVMalloc@size& (0+255),b
  6807  002694  0EE8               	movlw	low _nvmConnMode
  6808  002696  6F62               	movwf	NVMalloc@location& (0+255),b
  6809  002698  ECBA  F018         	call	_NVMalloc	;wreg free
  6810  00269C  1765               	andwf	NVMInit@result& (0+255),f,b
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;miwi_nvm.c: 640: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 20, &nvmConnectionTable)
      +                          ;
  6814  00269E  0E01               	movlw	1
  6815  0026A0  6F61               	movwf	(NVMalloc@size+1)& (0+255),b
  6816  0026A2  0E18               	movlw	24
  6817  0026A4  6F60               	movwf	NVMalloc@size& (0+255),b
  6818  0026A6  0EEA               	movlw	low _nvmConnectionTable
  6819  0026A8  6F62               	movwf	NVMalloc@location& (0+255),b
  6820  0026AA  ECBA  F018         	call	_NVMalloc	;wreg free
  6821  0026AE  1765               	andwf	NVMInit@result& (0+255),f,b
  6822                           
  6823                           ; BSR set to: 0
  6824                           ;miwi_nvm.c: 641: result &= NVMalloc(4, &nvmOutFrameCounter);
  6825  0026B0  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  6826  0026B2  0E04               	movlw	4
  6827  0026B4  6F60               	movwf	NVMalloc@size& (0+255),b
  6828  0026B6  0EF2               	movlw	low _nvmOutFrameCounter
  6829  0026B8  6F62               	movwf	NVMalloc@location& (0+255),b
  6830  0026BA  ECBA  F018         	call	_NVMalloc	;wreg free
  6831  0026BE  1765               	andwf	NVMInit@result& (0+255),f,b
  6832                           
  6833                           ; BSR set to: 0
  6834                           ;miwi_nvm.c: 642: result &= NVMalloc(1,&nvmEdc);
  6835  0026C0  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  6836  0026C2  0E01               	movlw	1
  6837  0026C4  6F60               	movwf	NVMalloc@size& (0+255),b
  6838  0026C6  0EEE               	movlw	low _nvmEdc
  6839  0026C8  6F62               	movwf	NVMalloc@location& (0+255),b
  6840  0026CA  ECBA  F018         	call	_NVMalloc	;wreg free
  6841  0026CE  1765               	andwf	NVMInit@result& (0+255),f,b
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;miwi_nvm.c: 645: result &= NVMalloc(1,&nvmRole);
  6845  0026D0  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  6846  0026D2  0E01               	movlw	1
  6847  0026D4  6F60               	movwf	NVMalloc@size& (0+255),b
  6848  0026D6  0EF4               	movlw	low _nvmRole
  6849  0026D8  6F62               	movwf	NVMalloc@location& (0+255),b
  6850  0026DA  ECBA  F018         	call	_NVMalloc	;wreg free
  6851  0026DE  1765               	andwf	NVMInit@result& (0+255),f,b
  6852                           
  6853                           ; BSR set to: 0
  6854                           ;miwi_nvm.c: 646: result &= NVMalloc(1,&nvmmyIndex);
  6855  0026E0  6B61               	clrf	(NVMalloc@size+1)& (0+255),b
  6856  0026E2  0E01               	movlw	1
  6857  0026E4  6F60               	movwf	NVMalloc@size& (0+255),b
  6858  0026E6  0EF6               	movlw	low _nvmmyIndex
  6859  0026E8  6F62               	movwf	NVMalloc@location& (0+255),b
  6860  0026EA  ECBA  F018         	call	_NVMalloc	;wreg free
  6861  0026EE  1765               	andwf	NVMInit@result& (0+255),f,b
  6862                           
  6863                           ; BSR set to: 0
  6864  0026F0  0012               	return		;funcret
  6865  0026F2                     __end_of_NVMInit:
  6866                           	opt stack 0
  6867                           tblptru	equ	0xFF8
  6868                           tblptrh	equ	0xFF7
  6869                           tblptrl	equ	0xFF6
  6870                           tablat	equ	0xFF5
  6871                           prodh	equ	0xFF4
  6872                           prodl	equ	0xFF3
  6873                           intcon	equ	0xFF2
  6874                           intcon2	equ	0xFF1
  6875                           intcon3	equ	0xFF0
  6876                           postinc0	equ	0xFEE
  6877                           wreg	equ	0xFE8
  6878                           indf1	equ	0xFE7
  6879                           postdec1	equ	0xFE5
  6880                           fsr1h	equ	0xFE2
  6881                           fsr1l	equ	0xFE1
  6882                           indf2	equ	0xFDF
  6883                           fsr2h	equ	0xFDA
  6884                           fsr2l	equ	0xFD9
  6885                           status	equ	0xFD8
  6886                           
  6887 ;; *************** function _NVMalloc *****************
  6888 ;; Defined at:
  6889 ;;		line 616 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  size            2    0[BANK0 ] unsigned int 
  6892 ;;  location        1    2[BANK0 ] PTR unsigned int 
  6893 ;;		 -> nvmmyIndex(2), nvmRole(2), nvmEdc(2), nvmOutFrameCounter(2), 
  6894 ;;		 -> nvmConnectionTable(2), nvmConnMode(2), nvmCurrentChannel(2), nvmMyPANID(2), 
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;		None
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1    wreg      unsigned char 
  6899 ;; Registers used:
  6900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6901 ;; Tracked objects:
  6902 ;;		On entry : F/0
  6903 ;;		On exit  : F/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6906 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6908 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6909 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6910 ;;Total ram usage:        5 bytes
  6911 ;; Hardware stack levels used:    1
  6912 ;; Hardware stack levels required when called:    5
  6913 ;; This function calls:
  6914 ;;		Nothing
  6915 ;; This function is called by:
  6916 ;;		_NVMInit
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           	psect	text22
  6921  003174                     __ptext22:
  6922                           	opt stack 0
  6923  003174                     _NVMalloc:
  6924                           	opt stack 22
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;miwi_nvm.c: 620: if ((nextEEPosition + size) > 32768)
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;incstack = 0
  6931  003174  5160               	movf	NVMalloc@size& (0+255),w,b
  6932  003176  25D4               	addwf	_nextEEPosition& (0+255),w,b
  6933  003178  6F63               	movwf	??_NVMalloc& (0+255),b
  6934  00317A  5161               	movf	(NVMalloc@size+1)& (0+255),w,b
  6935  00317C  21D5               	addwfc	(_nextEEPosition+1)& (0+255),w,b
  6936  00317E  6F64               	movwf	(??_NVMalloc+1)& (0+255),b
  6937  003180  0563               	decf	??_NVMalloc& (0+255),w,b
  6938  003182  0E80               	movlw	128
  6939  003184  5964               	subwfb	(??_NVMalloc+1)& (0+255),w,b
  6940  003186  E301               	bnc	l11436
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;miwi_nvm.c: 621: {
  6944                           ;miwi_nvm.c: 622: return 0;
  6945  003188  0C00               	retlw	0
  6946  00318A                     l11436:
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;miwi_nvm.c: 623: }
  6950                           ;miwi_nvm.c: 625: *location = nextEEPosition;
  6951  00318A  5162               	movf	NVMalloc@location& (0+255),w,b
  6952  00318C  6ED9               	movwf	fsr2l,c
  6953  00318E  6ADA               	clrf	fsr2h,c
  6954  003190  C0D4  FFDE         	movff	_nextEEPosition,postinc2
  6955  003194  C0D5  FFDD         	movff	_nextEEPosition+1,postdec2
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;miwi_nvm.c: 626: nextEEPosition += size;
  6959  003198  5160               	movf	NVMalloc@size& (0+255),w,b
  6960  00319A  27D4               	addwf	_nextEEPosition& (0+255),f,b
  6961  00319C  5161               	movf	(NVMalloc@size+1)& (0+255),w,b
  6962  00319E  23D5               	addwfc	(_nextEEPosition+1)& (0+255),f,b
  6963                           
  6964                           ; BSR set to: 0
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;miwi_nvm.c: 627: return 1;
  6968  0031A0  0C01               	retlw	1	;funcret
  6969  0031A2                     __end_of_NVMalloc:
  6970                           	opt stack 0
  6971                           tblptru	equ	0xFF8
  6972                           tblptrh	equ	0xFF7
  6973                           tblptrl	equ	0xFF6
  6974                           tablat	equ	0xFF5
  6975                           prodh	equ	0xFF4
  6976                           prodl	equ	0xFF3
  6977                           intcon	equ	0xFF2
  6978                           intcon2	equ	0xFF1
  6979                           intcon3	equ	0xFF0
  6980                           postinc0	equ	0xFEE
  6981                           wreg	equ	0xFE8
  6982                           indf1	equ	0xFE7
  6983                           postdec1	equ	0xFE5
  6984                           fsr1h	equ	0xFE2
  6985                           fsr1l	equ	0xFE1
  6986                           indf2	equ	0xFDF
  6987                           postinc2	equ	0xFDE
  6988                           postdec2	equ	0xFDD
  6989                           fsr2h	equ	0xFDA
  6990                           fsr2l	equ	0xFD9
  6991                           status	equ	0xFD8
  6992                           
  6993 ;; *************** function _MiMAC_Init *****************
  6994 ;; Defined at:
  6995 ;;		line 579 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  initValue       3   14[BANK0 ] struct .
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;  i               1   17[BANK0 ] unsigned char 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  1    wreg      unsigned char 
  7002 ;; Registers used:
  7003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7004 ;; Tracked objects:
  7005 ;;		On entry : F/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7009 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7012 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7013 ;;Total ram usage:        4 bytes
  7014 ;; Hardware stack levels used:    1
  7015 ;; Hardware stack levels required when called:    8
  7016 ;; This function calls:
  7017 ;;		_DELAY_ms
  7018 ;;		_RegisterSet
  7019 ;;		_SetRFMode
  7020 ;; This function is called by:
  7021 ;;		_MiApp_ProtocolInit
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text23
  7026  00237C                     __ptext23:
  7027                           	opt stack 0
  7028  00237C                     _MiMAC_Init:
  7029                           	opt stack 20
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;drv_mrf_miwi_89xa.c: 581: uint8_t i;
  7033                           ;drv_mrf_miwi_89xa.c: 583: MACInitParams = initValue;
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;incstack = 0
  7037  00237C  C06E  F0D1         	movff	MiMAC_Init@initValue,_MACInitParams
  7038  002380  C06F  F0D2         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
  7039  002384  C070  F0D3         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
  7040                           
  7041                           ; BSR set to: 0
  7042                           ;drv_mrf_miwi_89xa.c: 585: DELAY_ms(20);
  7043  002388  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
  7044  00238A  0E14               	movlw	20
  7045  00238C  6F60               	movwf	DELAY_ms@ms& (0+255),b
  7046  00238E  ECEF  F00F         	call	_DELAY_ms	;wreg free
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;drv_mrf_miwi_89xa.c: 586: LATEbits.LATE1 = 1;
  7050  002392  828D               	bsf	3981,1,c	;volatile
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;drv_mrf_miwi_89xa.c: 587: LATCbits.LATC2 = 1;
  7054  002394  848B               	bsf	3979,2,c	;volatile
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;drv_mrf_miwi_89xa.c: 590: MACSeq = TMR0L;
  7058  002396  CFD6 F0D8          	movff	4054,_MACSeq	;volatile
  7059                           
  7060                           ; BSR set to: 0
  7061                           ;drv_mrf_miwi_89xa.c: 591: ReceivedBankIndex = 0xFF;
  7062  00239A  69DD               	setf	_ReceivedBankIndex& (0+255),b
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;drv_mrf_miwi_89xa.c: 593: for(i = 0; i < 2; i++)
  7066  00239C  6B71               	clrf	MiMAC_Init@i& (0+255),b
  7067  00239E                     l11552:
  7068                           
  7069                           ; BSR set to: 0
  7070                           ;drv_mrf_miwi_89xa.c: 594: {
  7071                           ;drv_mrf_miwi_89xa.c: 595: RxPacket[i].flags.Val = 0;
  7072  00239E  5171               	movf	MiMAC_Init@i& (0+255),w,b
  7073  0023A0  0D39               	mullw	57
  7074  0023A2  0E50               	movlw	low _RxPacket
  7075  0023A4  24F3               	addwf	prodl,w,c
  7076  0023A6  6ED9               	movwf	fsr2l,c
  7077  0023A8  0E02               	movlw	high _RxPacket
  7078  0023AA  20F4               	addwfc	prodh,w,c
  7079  0023AC  6EDA               	movwf	fsr2h,c
  7080  0023AE  6ADF               	clrf	indf2,c
  7081                           
  7082                           ; BSR set to: 0
  7083  0023B0  2B71               	incf	MiMAC_Init@i& (0+255),f,b
  7084                           
  7085                           ; BSR set to: 0
  7086  0023B2  0E01               	movlw	1
  7087  0023B4  6571               	cpfsgt	MiMAC_Init@i& (0+255),b
  7088  0023B6  D7F3               	goto	l11552
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;drv_mrf_miwi_89xa.c: 596: }
  7092                           ;drv_mrf_miwi_89xa.c: 630: for (i = 0 ; i <= 31; i++)
  7093  0023B8  6B71               	clrf	MiMAC_Init@i& (0+255),b
  7094  0023BA                     l11562:
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;drv_mrf_miwi_89xa.c: 631: {
  7098                           ;drv_mrf_miwi_89xa.c: 632: RegisterSet(InitConfigRegs[i]);
  7099  0023BA  5171               	movf	MiMAC_Init@i& (0+255),w,b
  7100  0023BC  0D02               	mullw	2
  7101  0023BE  0E2D               	movlw	low _InitConfigRegs
  7102  0023C0  24F3               	addwf	prodl,w,c
  7103  0023C2  6EF6               	movwf	tblptrl,c
  7104  0023C4  0EFA               	movlw	high _InitConfigRegs
  7105  0023C6  20F4               	addwfc	prodh,w,c
  7106  0023C8  6EF7               	movwf	tblptrh,c
  7107  0023CA                     	if	0	;There are less than 3 active tblptr bytes
  7108  0023CA                     	endif
  7109  0023CA  0009               	tblrd		*+
  7110  0023CC  CFF5 F061          	movff	tablat,RegisterSet@setting
  7111  0023D0  000A               	tblrd		*-
  7112  0023D2  CFF5 F062          	movff	tablat,RegisterSet@setting+1
  7113  0023D6  ECFE  F018         	call	_RegisterSet	;wreg free
  7114  0023DA  0100               	movlb	0	; () banked
  7115  0023DC  2B71               	incf	MiMAC_Init@i& (0+255),f,b
  7116                           
  7117                           ; BSR set to: 0
  7118  0023DE  0E1F               	movlw	31
  7119  0023E0  6571               	cpfsgt	MiMAC_Init@i& (0+255),b
  7120  0023E2  D7EB               	goto	l11562
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;drv_mrf_miwi_89xa.c: 633: }
  7124                           ;drv_mrf_miwi_89xa.c: 634: SetRFMode(0x20);
  7125  0023E4  0E20               	movlw	32
  7126  0023E6  ECBB  F015         	call	_SetRFMode
  7127                           
  7128                           ;drv_mrf_miwi_89xa.c: 635: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
  7129  0023EA  0100               	movlb	0	; () banked
  7130  0023EC  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
  7131  0023EE  0E46               	movlw	70
  7132  0023F0  6F61               	movwf	RegisterSet@setting& (0+255),b
  7133  0023F2  ECFE  F018         	call	_RegisterSet	;wreg free
  7134                           
  7135                           ;drv_mrf_miwi_89xa.c: 636: SetRFMode(0x40);
  7136  0023F6  0E40               	movlw	64
  7137  0023F8  ECBB  F015         	call	_SetRFMode
  7138                           
  7139                           ;drv_mrf_miwi_89xa.c: 640: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  7140  0023FC  0E1C               	movlw	28
  7141  0023FE  0100               	movlb	0	; () banked
  7142  002400  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
  7143  002402  0E0F               	movlw	15
  7144  002404  6F61               	movwf	RegisterSet@setting& (0+255),b
  7145  002406  ECFE  F018         	call	_RegisterSet	;wreg free
  7146                           
  7147                           ;drv_mrf_miwi_89xa.c: 642: SetRFMode(0x60);
  7148  00240A  0E60               	movlw	96
  7149  00240C  ECBB  F015         	call	_SetRFMode
  7150                           
  7151                           ;drv_mrf_miwi_89xa.c: 647: INTCON3bits.INT3IF = 0;
  7152  002410  94F0               	bcf	intcon3,2,c	;volatile
  7153                           
  7154                           ;drv_mrf_miwi_89xa.c: 648: INTCON3bits.INT3IE = 1;
  7155  002412  8AF0               	bsf	intcon3,5,c	;volatile
  7156  002414  0012               	return		;funcret
  7157  002416                     __end_of_MiMAC_Init:
  7158                           	opt stack 0
  7159                           tblptru	equ	0xFF8
  7160                           tblptrh	equ	0xFF7
  7161                           tblptrl	equ	0xFF6
  7162                           tablat	equ	0xFF5
  7163                           prodh	equ	0xFF4
  7164                           prodl	equ	0xFF3
  7165                           intcon	equ	0xFF2
  7166                           intcon2	equ	0xFF1
  7167                           intcon3	equ	0xFF0
  7168                           postinc0	equ	0xFEE
  7169                           wreg	equ	0xFE8
  7170                           indf1	equ	0xFE7
  7171                           postdec1	equ	0xFE5
  7172                           fsr1h	equ	0xFE2
  7173                           fsr1l	equ	0xFE1
  7174                           indf2	equ	0xFDF
  7175                           postinc2	equ	0xFDE
  7176                           postdec2	equ	0xFDD
  7177                           fsr2h	equ	0xFDA
  7178                           fsr2l	equ	0xFD9
  7179                           status	equ	0xFD8
  7180                           
  7181 ;; *************** function _MiApp_SetChannel *****************
  7182 ;; Defined at:
  7183 ;;		line 2378 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  channel         1    wreg     unsigned char 
  7186 ;; Auto vars:     Size  Location     Type
  7187 ;;  channel         1   10[BANK0 ] unsigned char 
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  1    wreg      unsigned char 
  7190 ;; Registers used:
  7191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7192 ;; Tracked objects:
  7193 ;;		On entry : F/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7198 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7200 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7201 ;;Total ram usage:        1 bytes
  7202 ;; Hardware stack levels used:    1
  7203 ;; Hardware stack levels required when called:    9
  7204 ;; This function calls:
  7205 ;;		_MiMAC_SetChannel
  7206 ;;		_NVMWrite
  7207 ;; This function is called by:
  7208 ;;		_MiApp_ProtocolInit
  7209 ;;		_Initialize_Demo
  7210 ;;		_run_star_demo
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           	psect	text24
  7215  003142                     __ptext24:
  7216                           	opt stack 0
  7217  003142                     _MiApp_SetChannel:
  7218                           	opt stack 19
  7219                           
  7220                           ;incstack = 0
  7221                           ;MiApp_SetChannel@channel stored from wreg
  7222  003142  6F6A               	movwf	MiApp_SetChannel@channel& (0+255),b
  7223                           
  7224                           ;miwi_p2p.c: 2380: if( MiMAC_SetChannel(channel, 0) )
  7225  003144  0100               	movlb	0	; () banked
  7226  003146  6B65               	clrf	MiMAC_SetChannel@offsetFreq& (0+255),b
  7227  003148  516A               	movf	MiApp_SetChannel@channel& (0+255),w,b
  7228  00314A  ECEA  F012         	call	_MiMAC_SetChannel
  7229  00314E  0900               	iorlw	0
  7230  003150  E010               	bz	l11634
  7231                           
  7232                           ;miwi_p2p.c: 2381: {
  7233                           ;miwi_p2p.c: 2382: currentChannel = channel;
  7234  003152  C06A  F0F9         	movff	MiApp_SetChannel@channel,_currentChannel
  7235                           
  7236                           ;miwi_p2p.c: 2384: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  7237  003156  0EF9               	movlw	low _currentChannel
  7238  003158  0100               	movlb	0	; () banked
  7239  00315A  6F61               	movwf	NVMWrite@source& (0+255),b
  7240  00315C  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
  7241  00315E  C0EC  F063         	movff	_nvmCurrentChannel,NVMWrite@addr
  7242  003162  C0ED  F064         	movff	_nvmCurrentChannel+1,NVMWrite@addr+1
  7243  003166  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  7244  003168  0E01               	movlw	1
  7245  00316A  6F65               	movwf	NVMWrite@count& (0+255),b
  7246  00316C  EC70  F011         	call	_NVMWrite	;wreg free
  7247                           
  7248                           ;miwi_p2p.c: 2386: return 1;
  7249  003170  0C01               	retlw	1
  7250  003172                     l11634:
  7251                           
  7252                           ;miwi_p2p.c: 2387: }
  7253                           ;miwi_p2p.c: 2388: return 0;
  7254  003172  0C00               	retlw	0	;funcret
  7255  003174                     __end_of_MiApp_SetChannel:
  7256                           	opt stack 0
  7257                           tblptru	equ	0xFF8
  7258                           tblptrh	equ	0xFF7
  7259                           tblptrl	equ	0xFF6
  7260                           tablat	equ	0xFF5
  7261                           prodh	equ	0xFF4
  7262                           prodl	equ	0xFF3
  7263                           intcon	equ	0xFF2
  7264                           intcon2	equ	0xFF1
  7265                           intcon3	equ	0xFF0
  7266                           postinc0	equ	0xFEE
  7267                           wreg	equ	0xFE8
  7268                           indf1	equ	0xFE7
  7269                           postdec1	equ	0xFE5
  7270                           fsr1h	equ	0xFE2
  7271                           fsr1l	equ	0xFE1
  7272                           indf2	equ	0xFDF
  7273                           postinc2	equ	0xFDE
  7274                           postdec2	equ	0xFDD
  7275                           fsr2h	equ	0xFDA
  7276                           fsr2l	equ	0xFD9
  7277                           status	equ	0xFD8
  7278                           
  7279 ;; *************** function _MiMAC_SetChannel *****************
  7280 ;; Defined at:
  7281 ;;		line 484 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;  channel         1    wreg     unsigned char 
  7284 ;;  offsetFreq      1    5[BANK0 ] unsigned char 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  channel         1    7[BANK0 ] unsigned char 
  7287 ;; Return value:  Size  Location     Type
  7288 ;;                  1    wreg      unsigned char 
  7289 ;; Registers used:
  7290 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7291 ;; Tracked objects:
  7292 ;;		On entry : F/0
  7293 ;;		On exit  : 0/0
  7294 ;;		Unchanged: 0/0
  7295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7296 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7298 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7299 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7300 ;;Total ram usage:        3 bytes
  7301 ;; Hardware stack levels used:    1
  7302 ;; Hardware stack levels required when called:    8
  7303 ;; This function calls:
  7304 ;;		_RegisterSet
  7305 ;;		_SetRFMode
  7306 ;; This function is called by:
  7307 ;;		_MiApp_SetChannel
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text25
  7312  0025D4                     __ptext25:
  7313                           	opt stack 0
  7314  0025D4                     _MiMAC_SetChannel:
  7315                           	opt stack 19
  7316                           
  7317                           ;incstack = 0
  7318                           ;MiMAC_SetChannel@channel stored from wreg
  7319  0025D4  6F67               	movwf	MiMAC_SetChannel@channel& (0+255),b
  7320                           
  7321                           ;drv_mrf_miwi_89xa.c: 486: if( channel >= 32 )
  7322  0025D6  0E1F               	movlw	31
  7323  0025D8  0100               	movlb	0	; () banked
  7324  0025DA  6567               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
  7325  0025DC  D001               	goto	l11374
  7326  0025DE  0C00               	retlw	0
  7327  0025E0                     l11374:
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;drv_mrf_miwi_89xa.c: 489: }
  7331                           ;drv_mrf_miwi_89xa.c: 492: RegisterSet(0x0C00 | 100);
  7332  0025E0  0E0C               	movlw	12
  7333  0025E2  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
  7334  0025E4  0E64               	movlw	100
  7335  0025E6  6F61               	movwf	RegisterSet@setting& (0+255),b
  7336  0025E8  ECFE  F018         	call	_RegisterSet	;wreg free
  7337                           
  7338                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x0E00 | PVALUE[channel]);
  7339  0025EC  0E6D               	movlw	low _PVALUE
  7340  0025EE  0100               	movlb	0	; () banked
  7341  0025F0  2567               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  7342  0025F2  6EF6               	movwf	tblptrl,c
  7343  0025F4  6AF7               	clrf	tblptrh,c
  7344  0025F6  0EFA               	movlw	high _PVALUE
  7345  0025F8  22F7               	addwfc	tblptrh,f,c
  7346  0025FA                     	if	0	;There are less than 3 active tblptr bytes
  7347  0025FA                     	endif
  7348  0025FA  0008               	tblrd		*
  7349  0025FC  CFF5 F066          	movff	tablat,??_MiMAC_SetChannel
  7350  002600  0E00               	movlw	0
  7351  002602  1166               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  7352  002604  6F61               	movwf	RegisterSet@setting& (0+255),b
  7353  002606  0E0E               	movlw	14
  7354  002608  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
  7355  00260A  ECFE  F018         	call	_RegisterSet	;wreg free
  7356                           
  7357                           ;drv_mrf_miwi_89xa.c: 494: RegisterSet(0x1000 | SVALUE[channel]);
  7358  00260E  0E8D               	movlw	low _SVALUE
  7359  002610  0100               	movlb	0	; () banked
  7360  002612  2567               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  7361  002614  6EF6               	movwf	tblptrl,c
  7362  002616  6AF7               	clrf	tblptrh,c
  7363  002618  0EFA               	movlw	high _SVALUE
  7364  00261A  22F7               	addwfc	tblptrh,f,c
  7365  00261C                     	if	0	;There are less than 3 active tblptr bytes
  7366  00261C                     	endif
  7367  00261C  0008               	tblrd		*
  7368  00261E  CFF5 F066          	movff	tablat,??_MiMAC_SetChannel
  7369  002622  0E00               	movlw	0
  7370  002624  1166               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  7371  002626  6F61               	movwf	RegisterSet@setting& (0+255),b
  7372  002628  0E10               	movlw	16
  7373  00262A  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
  7374  00262C  ECFE  F018         	call	_RegisterSet	;wreg free
  7375                           
  7376                           ;drv_mrf_miwi_89xa.c: 495: SetRFMode(0x20);
  7377  002630  0E20               	movlw	32
  7378  002632  ECBB  F015         	call	_SetRFMode
  7379                           
  7380                           ;drv_mrf_miwi_89xa.c: 496: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
  7381  002636  0100               	movlb	0	; () banked
  7382  002638  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
  7383  00263A  0E46               	movlw	70
  7384  00263C  6F61               	movwf	RegisterSet@setting& (0+255),b
  7385  00263E  ECFE  F018         	call	_RegisterSet	;wreg free
  7386                           
  7387                           ;drv_mrf_miwi_89xa.c: 497: SetRFMode(0x40);
  7388  002642  0E40               	movlw	64
  7389  002644  ECBB  F015         	call	_SetRFMode
  7390                           
  7391                           ;drv_mrf_miwi_89xa.c: 498: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  7392  002648  0E1C               	movlw	28
  7393  00264A  0100               	movlb	0	; () banked
  7394  00264C  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
  7395  00264E  0E0F               	movlw	15
  7396  002650  6F61               	movwf	RegisterSet@setting& (0+255),b
  7397  002652  ECFE  F018         	call	_RegisterSet	;wreg free
  7398                           
  7399                           ;drv_mrf_miwi_89xa.c: 499: SetRFMode(0x20);
  7400  002656  0E20               	movlw	32
  7401  002658  ECBB  F015         	call	_SetRFMode
  7402                           
  7403                           ;drv_mrf_miwi_89xa.c: 500: SetRFMode(0x60);
  7404  00265C  0E60               	movlw	96
  7405  00265E  ECBB  F015         	call	_SetRFMode
  7406                           
  7407                           ;drv_mrf_miwi_89xa.c: 502: return 1;
  7408  002662  0C01               	retlw	1	;funcret
  7409  002664                     __end_of_MiMAC_SetChannel:
  7410                           	opt stack 0
  7411                           tblptru	equ	0xFF8
  7412                           tblptrh	equ	0xFF7
  7413                           tblptrl	equ	0xFF6
  7414                           tablat	equ	0xFF5
  7415                           prodh	equ	0xFF4
  7416                           prodl	equ	0xFF3
  7417                           intcon	equ	0xFF2
  7418                           intcon2	equ	0xFF1
  7419                           intcon3	equ	0xFF0
  7420                           postinc0	equ	0xFEE
  7421                           wreg	equ	0xFE8
  7422                           indf1	equ	0xFE7
  7423                           postdec1	equ	0xFE5
  7424                           fsr1h	equ	0xFE2
  7425                           fsr1l	equ	0xFE1
  7426                           indf2	equ	0xFDF
  7427                           postinc2	equ	0xFDE
  7428                           postdec2	equ	0xFDD
  7429                           fsr2h	equ	0xFDA
  7430                           fsr2l	equ	0xFD9
  7431                           status	equ	0xFD8
  7432                           
  7433 ;; *************** function _MiApp_EstablishConnection *****************
  7434 ;; Defined at:
  7435 ;;		line 2260 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  ActiveScanIn    1    wreg     unsigned char 
  7438 ;;  Mode            1   73[BANK0 ] unsigned char 
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;  ActiveScanIn    1    0[COMRAM] unsigned char 
  7441 ;;  i               1   89[BANK0 ] unsigned char 
  7442 ;;  t2              4   85[BANK0 ] struct _MIWI_TICK
  7443 ;;  t1              4   81[BANK0 ] struct _MIWI_TICK
  7444 ;;  connectionIn    1   80[BANK0 ] unsigned char 
  7445 ;;  retry           1   79[BANK0 ] unsigned char 
  7446 ;;  tmpConnectio    1   78[BANK0 ] unsigned char 
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  1    wreg      unsigned char 
  7449 ;; Registers used:
  7450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7451 ;; Tracked objects:
  7452 ;;		On entry : F/0
  7453 ;;		On exit  : F/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7456 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7457 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7458 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7459 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7460 ;;Total ram usage:       17 bytes
  7461 ;; Hardware stack levels used:    1
  7462 ;; Hardware stack levels required when called:   16
  7463 ;; This function calls:
  7464 ;;		_MiApp_DiscardMessage
  7465 ;;		_MiApp_MessageAvailable
  7466 ;;		_MiWi_TickGet
  7467 ;;		_SendPacket
  7468 ;; This function is called by:
  7469 ;;		_Initialize_Demo
  7470 ;;		_run_star_demo
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           	psect	text26
  7475  001AA4                     __ptext26:
  7476                           	opt stack 0
  7477  001AA4                     _MiApp_EstablishConnection:
  7478                           	opt stack 12
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;miwi_p2p.c: 2262: uint8_t tmpConnectionMode = ConnMode;
  7482                           
  7483                           ;incstack = 0
  7484  001AA4  C0FD  F0AE         	movff	_ConnMode,MiApp_EstablishConnection@tmpConnectionMode
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;miwi_p2p.c: 2263: uint8_t retry = 3;
  7488  001AA8  0E03               	movlw	3
  7489  001AAA  6FAF               	movwf	MiApp_EstablishConnection@retry& (0+255),b
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;miwi_p2p.c: 2264: uint8_t connectionInterval = 0;
  7493  001AAC  6BB0               	clrf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;miwi_p2p.c: 2265: MIWI_TICK t1, t2;
  7497                           ;miwi_p2p.c: 2266: tick1 = MiWi_TickGet();
  7498  001AAE  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  7499                           
  7500                           ; BSR set to: 0
  7501                           ;miwi_p2p.c: 2267: if( Mode == 0x01 )
  7502  001AB2  05A9               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
  7503  001AB4  E101               	bnz	l11704
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;miwi_p2p.c: 2268: {
  7507                           ;miwi_p2p.c: 2269: return 0xFF;
  7508  001AB6  0CFF               	retlw	255
  7509  001AB8                     l11704:
  7510                           
  7511                           ; BSR set to: 0
  7512                           ;miwi_p2p.c: 2270: }
  7513                           ;miwi_p2p.c: 2272: t1 = MiWi_TickGet();
  7514  001AB8  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  7515  001ABC  C060  F0B1         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
  7516  001AC0  C061  F0B2         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
  7517  001AC4  C062  F0B3         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
  7518  001AC8  C063  F0B4         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;miwi_p2p.c: 2274: t1.Val -= (((uint32_t)(8000000)/32));
  7522  001ACC  0E90               	movlw	144
  7523  001ACE  5FB1               	subwf	MiApp_EstablishConnection@t1& (0+255),f,b
  7524  001AD0  0ED0               	movlw	208
  7525  001AD2  5BB2               	subwfb	(MiApp_EstablishConnection@t1+1)& (0+255),f,b
  7526  001AD4  0E03               	movlw	3
  7527  001AD6  5BB3               	subwfb	(MiApp_EstablishConnection@t1+2)& (0+255),f,b
  7528  001AD8  0E00               	movlw	0
  7529  001ADA  5BB4               	subwfb	(MiApp_EstablishConnection@t1+3)& (0+255),f,b
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;miwi_p2p.c: 2275: ConnMode = 0x00;
  7533  001ADC  6BFD               	clrf	_ConnMode& (0+255),b
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;miwi_p2p.c: 2276: P2PStatus.bits.SearchConnection = 1;
  7537  001ADE  89DA               	bsf	_P2PStatus& (0+255),4,b	;volatile
  7538                           
  7539                           ;miwi_p2p.c: 2277: while( P2PStatus.bits.SearchConnection )
  7540  001AE0  D074               	goto	l11764
  7541  001AE2                     l11712:
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;miwi_p2p.c: 2278: {
  7545                           ;miwi_p2p.c: 2279: t2 = MiWi_TickGet();
  7546  001AE2  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  7547  001AE6  C060  F0B5         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
  7548  001AEA  C061  F0B6         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
  7549  001AEE  C062  F0B7         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
  7550  001AF2  C063  F0B8         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
  7551                           
  7552                           ; BSR set to: 0
  7553                           ;miwi_p2p.c: 2280: if( (t2.Val - t1.Val) > (((uint32_t)(8000000)/32)) )
  7554  001AF6  51B1               	movf	MiApp_EstablishConnection@t1& (0+255),w,b
  7555  001AF8  5DB5               	subwf	MiApp_EstablishConnection@t2& (0+255),w,b
  7556  001AFA  6FAA               	movwf	??_MiApp_EstablishConnection& (0+255),b
  7557  001AFC  51B2               	movf	(MiApp_EstablishConnection@t1+1)& (0+255),w,b
  7558  001AFE  59B6               	subwfb	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
  7559  001B00  6FAB               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
  7560  001B02  51B3               	movf	(MiApp_EstablishConnection@t1+2)& (0+255),w,b
  7561  001B04  59B7               	subwfb	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
  7562  001B06  6FAC               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
  7563  001B08  51B4               	movf	(MiApp_EstablishConnection@t1+3)& (0+255),w,b
  7564  001B0A  59B8               	subwfb	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
  7565  001B0C  6FAD               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
  7566  001B0E  51AD               	movf	(??_MiApp_EstablishConnection+3)& (0+255),w,b
  7567  001B10  E107               	bnz	u11730
  7568  001B12  0E91               	movlw	145
  7569  001B14  5DAA               	subwf	??_MiApp_EstablishConnection& (0+255),w,b
  7570  001B16  0ED0               	movlw	208
  7571  001B18  59AB               	subwfb	(??_MiApp_EstablishConnection+1)& (0+255),w,b
  7572  001B1A  0E03               	movlw	3
  7573  001B1C  59AC               	subwfb	(??_MiApp_EstablishConnection+2)& (0+255),w,b
  7574  001B1E  E34F               	bnc	l11760
  7575  001B20                     u11730:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;miwi_p2p.c: 2281: {
  7579                           ;miwi_p2p.c: 2282: t1.Val = t2.Val;
  7580  001B20  C0B5  F0B1         	movff	MiApp_EstablishConnection@t2,MiApp_EstablishConnection@t1
  7581  001B24  C0B6  F0B2         	movff	MiApp_EstablishConnection@t2+1,MiApp_EstablishConnection@t1+1
  7582  001B28  C0B7  F0B3         	movff	MiApp_EstablishConnection@t2+2,MiApp_EstablishConnection@t1+2
  7583  001B2C  C0B8  F0B4         	movff	MiApp_EstablishConnection@t2+3,MiApp_EstablishConnection@t1+3
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;miwi_p2p.c: 2284: if( connectionInterval-- > 0 )
  7587  001B30  07B0               	decf	MiApp_EstablishConnection@connectionInterval& (0+255),f,b
  7588  001B32  29B0               	incf	MiApp_EstablishConnection@connectionInterval& (0+255),w,b
  7589  001B34  E14A               	bnz	l11764
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;miwi_p2p.c: 2287: }
  7593                           ;miwi_p2p.c: 2288: connectionInterval = 2-1;
  7594  001B36  0E01               	movlw	1
  7595  001B38  6FB0               	movwf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;miwi_p2p.c: 2289: if( retry-- == 0 )
  7599  001B3A  07AF               	decf	MiApp_EstablishConnection@retry& (0+255),f,b
  7600  001B3C  29AF               	incf	MiApp_EstablishConnection@retry& (0+255),w,b
  7601  001B3E  E102               	bnz	l591
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;miwi_p2p.c: 2290: {
  7605                           ;miwi_p2p.c: 2292: P2PStatus.bits.SearchConnection = 0;
  7606  001B40  99DA               	bcf	_P2PStatus& (0+255),4,b	;volatile
  7607  001B42  0CFF               	retlw	255
  7608  001B44                     l591:
  7609                           
  7610                           ; BSR set to: 0
  7611                           ;miwi_p2p.c: 2294: }
  7612                           ;miwi_p2p.c: 2295: {TxData = 0;};
  7613  001B44  6BDF               	clrf	_TxData& (0+255),b
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;miwi_p2p.c: 2296: TxBuffer[TxData++] = 0x81;
  7617  001B46  0E65               	movlw	low _TxBuffer
  7618  001B48  25DF               	addwf	_TxData& (0+255),w,b
  7619  001B4A  6ED9               	movwf	fsr2l,c
  7620  001B4C  6ADA               	clrf	fsr2h,c
  7621  001B4E  0E01               	movlw	high _TxBuffer
  7622  001B50  22DA               	addwfc	fsr2h,f,c
  7623  001B52  0E81               	movlw	129
  7624  001B54  6EDF               	movwf	indf2,c
  7625                           
  7626                           ; BSR set to: 0
  7627  001B56  2BDF               	incf	_TxData& (0+255),f,b
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;miwi_p2p.c: 2297: TxBuffer[TxData++] = currentChannel;
  7631  001B58  0E65               	movlw	low _TxBuffer
  7632  001B5A  25DF               	addwf	_TxData& (0+255),w,b
  7633  001B5C  6ED9               	movwf	fsr2l,c
  7634  001B5E  6ADA               	clrf	fsr2h,c
  7635  001B60  0E01               	movlw	high _TxBuffer
  7636  001B62  22DA               	addwfc	fsr2h,f,c
  7637  001B64  C0F9  FFDF         	movff	_currentChannel,indf2
  7638  001B68  2BDF               	incf	_TxData& (0+255),f,b
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;miwi_p2p.c: 2298: TxBuffer[TxData++] = P2PCapacityInfo;
  7642  001B6A  0E65               	movlw	low _TxBuffer
  7643  001B6C  25DF               	addwf	_TxData& (0+255),w,b
  7644  001B6E  6ED9               	movwf	fsr2l,c
  7645  001B70  6ADA               	clrf	fsr2h,c
  7646  001B72  0E01               	movlw	high _TxBuffer
  7647  001B74  22DA               	addwfc	fsr2h,f,c
  7648  001B76  C0D9  FFDF         	movff	_P2PCapacityInfo,indf2
  7649                           
  7650                           ; BSR set to: 0
  7651  001B7A  2BDF               	incf	_TxData& (0+255),f,b
  7652                           
  7653                           ;miwi_p2p.c: 2300: {
  7654                           ;miwi_p2p.c: 2301: TxBuffer[TxData++] = 0xAA;
  7655  001B7C  0E65               	movlw	low _TxBuffer
  7656  001B7E  25DF               	addwf	_TxData& (0+255),w,b
  7657  001B80  6ED9               	movwf	fsr2l,c
  7658  001B82  6ADA               	clrf	fsr2h,c
  7659  001B84  0E01               	movlw	high _TxBuffer
  7660  001B86  22DA               	addwfc	fsr2h,f,c
  7661  001B88  0EAA               	movlw	170
  7662  001B8A  6EDF               	movwf	indf2,c
  7663                           
  7664                           ; BSR set to: 0
  7665  001B8C  2BDF               	incf	_TxData& (0+255),f,b
  7666                           
  7667                           ; BSR set to: 0
  7668                           ;miwi_p2p.c: 2302: }
  7669                           ;miwi_p2p.c: 2305: {
  7670                           ;miwi_p2p.c: 2306: uint8_t i;
  7671                           ;miwi_p2p.c: 2308: for(i = 0; i < 1; i++)
  7672  001B8E  6BB9               	clrf	MiApp_EstablishConnection@i& (0+255),b
  7673  001B90                     l11750:
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;miwi_p2p.c: 2309: {
  7677                           ;miwi_p2p.c: 2310: TxBuffer[TxData++] = AdditionalNodeID[i];
  7678  001B90  51B9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  7679  001B92  0FFB               	addlw	low _AdditionalNodeID
  7680  001B94  6ED9               	movwf	fsr2l,c
  7681  001B96  6ADA               	clrf	fsr2h,c
  7682  001B98  0E65               	movlw	low _TxBuffer
  7683  001B9A  25DF               	addwf	_TxData& (0+255),w,b
  7684  001B9C  6EE1               	movwf	fsr1l,c
  7685  001B9E  6AE2               	clrf	fsr1h,c
  7686  001BA0  0E01               	movlw	high _TxBuffer
  7687  001BA2  22E2               	addwfc	fsr1h,f,c
  7688  001BA4  CFDF FFE7          	movff	indf2,indf1
  7689                           
  7690                           ; BSR set to: 0
  7691  001BA8  2BDF               	incf	_TxData& (0+255),f,b
  7692                           
  7693                           ; BSR set to: 0
  7694  001BAA  2BB9               	incf	MiApp_EstablishConnection@i& (0+255),f,b
  7695                           
  7696                           ; BSR set to: 0
  7697  001BAC  51B9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  7698  001BAE  E0F0               	bz	l11750
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;miwi_p2p.c: 2311: }
  7702                           ;miwi_p2p.c: 2312: }
  7703                           ;miwi_p2p.c: 2341: SendPacket(1, (0), 1, 0);
  7704  001BB0  6B87               	clrf	SendPacket@DestinationAddress& (0+255),b
  7705  001BB2  6B88               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  7706  001BB4  0E01               	movlw	1
  7707  001BB6  6F89               	movwf	SendPacket@isCommand& (0+255),b
  7708  001BB8  6B8A               	clrf	SendPacket@SecurityEnabled& (0+255),b
  7709  001BBA  EC21  F011         	call	_SendPacket
  7710  001BBE                     l11760:
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;miwi_p2p.c: 2344: }
  7714                           ;miwi_p2p.c: 2346: if( MiApp_MessageAvailable())
  7715  001BBE  EC81  F01A         	call	_MiApp_MessageAvailable	;wreg free
  7716  001BC2  0900               	iorlw	0
  7717  001BC4  E002               	bz	l11764
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;miwi_p2p.c: 2347: {
  7721                           ;miwi_p2p.c: 2348: MiApp_DiscardMessage();
  7722  001BC6  EC86  F01A         	call	_MiApp_DiscardMessage	;wreg free
  7723  001BCA                     l11764:
  7724                           
  7725                           ; BSR set to: 0
  7726  001BCA  B9DA               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  7727  001BCC  D78A               	goto	l11712
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;miwi_p2p.c: 2349: }
  7731                           ;miwi_p2p.c: 2351: }
  7732                           ;miwi_p2p.c: 2353: ConnMode = tmpConnectionMode;
  7733  001BCE  C0AE  F0FD         	movff	MiApp_EstablishConnection@tmpConnectionMode,_ConnMode
  7734                           
  7735                           ; BSR set to: 0
  7736                           ;miwi_p2p.c: 2360: return LatestConnection;
  7737  001BD2  51D7               	movf	_LatestConnection& (0+255),w,b
  7738                           
  7739                           ; BSR set to: 0
  7740  001BD4  0012               	return		;funcret
  7741  001BD6                     __end_of_MiApp_EstablishConnection:
  7742                           	opt stack 0
  7743                           tblptru	equ	0xFF8
  7744                           tblptrh	equ	0xFF7
  7745                           tblptrl	equ	0xFF6
  7746                           tablat	equ	0xFF5
  7747                           prodh	equ	0xFF4
  7748                           prodl	equ	0xFF3
  7749                           intcon	equ	0xFF2
  7750                           intcon2	equ	0xFF1
  7751                           intcon3	equ	0xFF0
  7752                           postinc0	equ	0xFEE
  7753                           wreg	equ	0xFE8
  7754                           indf1	equ	0xFE7
  7755                           postdec1	equ	0xFE5
  7756                           fsr1h	equ	0xFE2
  7757                           fsr1l	equ	0xFE1
  7758                           indf2	equ	0xFDF
  7759                           postinc2	equ	0xFDE
  7760                           postdec2	equ	0xFDD
  7761                           fsr2h	equ	0xFDA
  7762                           fsr2l	equ	0xFD9
  7763                           status	equ	0xFD8
  7764                           
  7765 ;; *************** function _MiApp_MessageAvailable *****************
  7766 ;; Defined at:
  7767 ;;		line 2392 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;		None
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;		None
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      unsigned char 
  7774 ;; Registers used:
  7775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7776 ;; Tracked objects:
  7777 ;;		On entry : F/0
  7778 ;;		On exit  : F/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7785 ;;Total ram usage:        0 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; Hardware stack levels required when called:   15
  7788 ;; This function calls:
  7789 ;;		_P2PTasks
  7790 ;; This function is called by:
  7791 ;;		_MiApp_UnicastStar
  7792 ;;		_MiApp_EstablishConnection
  7793 ;;		_run_star_demo
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text27
  7798  003502                     __ptext27:
  7799                           	opt stack 0
  7800  003502                     _MiApp_MessageAvailable:
  7801                           	opt stack 12
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;miwi_p2p.c: 2394: P2PTasks();
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;incstack = 0
  7808  003502  ECE4  F007         	call	_P2PTasks	;wreg free
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;miwi_p2p.c: 2396: return P2PStatus.bits.RxHasUserData;
  7812  003506  B7DA               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  7813  003508  0C01               	retlw	1
  7814                           
  7815                           ; BSR set to: 0
  7816  00350A  0C00               	retlw	0	;funcret
  7817  00350C                     __end_of_MiApp_MessageAvailable:
  7818                           	opt stack 0
  7819                           tblptru	equ	0xFF8
  7820                           tblptrh	equ	0xFF7
  7821                           tblptrl	equ	0xFF6
  7822                           tablat	equ	0xFF5
  7823                           prodh	equ	0xFF4
  7824                           prodl	equ	0xFF3
  7825                           intcon	equ	0xFF2
  7826                           intcon2	equ	0xFF1
  7827                           intcon3	equ	0xFF0
  7828                           postinc0	equ	0xFEE
  7829                           wreg	equ	0xFE8
  7830                           indf1	equ	0xFE7
  7831                           postdec1	equ	0xFE5
  7832                           fsr1h	equ	0xFE2
  7833                           fsr1l	equ	0xFE1
  7834                           indf2	equ	0xFDF
  7835                           postinc2	equ	0xFDE
  7836                           postdec2	equ	0xFDD
  7837                           fsr2h	equ	0xFDA
  7838                           fsr2l	equ	0xFD9
  7839                           status	equ	0xFD8
  7840                           
  7841 ;; *************** function _P2PTasks *****************
  7842 ;; Defined at:
  7843 ;;		line 344 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;		None
  7846 ;; Auto vars:     Size  Location     Type
  7847 ;;  final_index     1   67[BANK0 ] unsigned char 
  7848 ;;  FW_Stat         1   66[BANK0 ] unsigned char 
  7849 ;;  tmpTick         4   68[BANK0 ] struct _MIWI_TICK
  7850 ;;  tick3           4    0        struct _MIWI_TICK
  7851 ;;  tick2           4    0        struct _MIWI_TICK
  7852 ;;  i               1   72[BANK0 ] unsigned char 
  7853 ;;  broadcast_st    1    0        unsigned char 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;		None               void
  7856 ;; Registers used:
  7857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : F/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7864 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7865 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7866 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7867 ;;Total ram usage:       11 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:   14
  7870 ;; This function calls:
  7871 ;;		_AddConnection
  7872 ;;		_CONSOLE_PutString
  7873 ;;		_Find_Index
  7874 ;;		_Forward_Packet_PANCr_to_EDy
  7875 ;;		_MiMAC_DiscardPacket
  7876 ;;		_MiMAC_ReceivedPacket
  7877 ;;		_MiWi_TickGet
  7878 ;;		_NVMWrite
  7879 ;;		_SW_Ack_SrED
  7880 ;;		_SendPacket
  7881 ;;		_isSameAddress
  7882 ;;		_store_connection_tb
  7883 ;; This function is called by:
  7884 ;;		_MiApp_TransceiverPowerState
  7885 ;;		_MiApp_MessageAvailable
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text28
  7890  000FC8                     __ptext28:
  7891                           	opt stack 0
  7892  000FC8                     _P2PTasks:
  7893                           	opt stack 12
  7894                           
  7895                           ;miwi_p2p.c: 346: uint8_t i;
  7896                           ;miwi_p2p.c: 347: MIWI_TICK tmpTick ,tick2 , tick3 ;
  7897                           ;miwi_p2p.c: 348: bool broadcast_status;
  7898                           ;miwi_p2p.c: 351: tick2 = MiWi_TickGet();
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;incstack = 0
  7902  000FC8  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  7903                           
  7904                           ;miwi_p2p.c: 352: tick3 = MiWi_TickGet();
  7905  000FCC  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;miwi_p2p.c: 411: if( P2PStatus.bits.DataRequesting )
  7909  000FD0  A5DA               	btfss	_P2PStatus& (0+255),2,b	;volatile
  7910  000FD2  D023               	goto	l11164
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;miwi_p2p.c: 412: {
  7914                           ;miwi_p2p.c: 413: tmpTick = MiWi_TickGet();
  7915  000FD4  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  7916  000FD8  C060  F0A4         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  7917  000FDC  C061  F0A5         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  7918  000FE0  C062  F0A6         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  7919  000FE4  C063  F0A7         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;miwi_p2p.c: 414: if( (tmpTick.Val - DataRequestTimer.Val) > 0x00003FFF )
  7923  000FE8  503E               	movf	_DataRequestTimer,w,c
  7924  000FEA  5DA4               	subwf	P2PTasks@tmpTick& (0+255),w,b
  7925  000FEC  6F9E               	movwf	??_P2PTasks& (0+255),b
  7926  000FEE  503F               	movf	_DataRequestTimer+1,w,c
  7927  000FF0  59A5               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  7928  000FF2  6F9F               	movwf	(??_P2PTasks+1)& (0+255),b
  7929  000FF4  5040               	movf	_DataRequestTimer+2,w,c
  7930  000FF6  59A6               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  7931  000FF8  6FA0               	movwf	(??_P2PTasks+2)& (0+255),b
  7932  000FFA  5041               	movf	_DataRequestTimer+3,w,c
  7933  000FFC  59A7               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  7934  000FFE  6FA1               	movwf	(??_P2PTasks+3)& (0+255),b
  7935  001000  51A1               	movf	(??_P2PTasks+3)& (0+255),w,b
  7936  001002  11A0               	iorwf	(??_P2PTasks+2)& (0+255),w,b
  7937  001004  E103               	bnz	u11140
  7938  001006  0E40               	movlw	64
  7939  001008  5D9F               	subwf	(??_P2PTasks+1)& (0+255),w,b
  7940  00100A  E307               	bnc	l11164
  7941  00100C                     u11140:
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;miwi_p2p.c: 415: {
  7945                           ;miwi_p2p.c: 417: CONSOLE_PutString((char*)"Data Request Expired\r\n");
  7946  00100C  0EB3               	movlw	low STR_1
  7947  00100E  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
  7948  001010  0EFE               	movlw	high STR_1
  7949  001012  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
  7950  001014  EC98  F019         	call	_CONSOLE_PutString	;wreg free
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;miwi_p2p.c: 419: P2PStatus.bits.DataRequesting = 0;
  7954  001018  95DA               	bcf	_P2PStatus& (0+255),2,b	;volatile
  7955  00101A                     l11164:
  7956                           
  7957                           ; BSR set to: 0
  7958                           ;miwi_p2p.c: 424: }
  7959                           ;miwi_p2p.c: 425: }
  7960                           ;miwi_p2p.c: 429: if( P2PStatus.bits.SaveConnection )
  7961  00101A  A3DA               	btfss	_P2PStatus& (0+255),1,b	;volatile
  7962  00101C  D02E               	goto	l11174
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;miwi_p2p.c: 430: {
  7966                           ;miwi_p2p.c: 431: tmpTick = MiWi_TickGet();
  7967  00101E  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  7968  001022  C060  F0A4         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  7969  001026  C061  F0A5         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  7970  00102A  C062  F0A6         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  7971  00102E  C063  F0A7         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;miwi_p2p.c: 433: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(8000000)/32)) )
  7975  001032  504A               	movf	_nvmDelayTick,w,c
  7976  001034  5DA4               	subwf	P2PTasks@tmpTick& (0+255),w,b
  7977  001036  6F9E               	movwf	??_P2PTasks& (0+255),b
  7978  001038  504B               	movf	_nvmDelayTick+1,w,c
  7979  00103A  59A5               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  7980  00103C  6F9F               	movwf	(??_P2PTasks+1)& (0+255),b
  7981  00103E  504C               	movf	_nvmDelayTick+2,w,c
  7982  001040  59A6               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  7983  001042  6FA0               	movwf	(??_P2PTasks+2)& (0+255),b
  7984  001044  504D               	movf	_nvmDelayTick+3,w,c
  7985  001046  59A7               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  7986  001048  6FA1               	movwf	(??_P2PTasks+3)& (0+255),b
  7987  00104A  51A1               	movf	(??_P2PTasks+3)& (0+255),w,b
  7988  00104C  E107               	bnz	u11160
  7989  00104E  0E91               	movlw	145
  7990  001050  5D9E               	subwf	??_P2PTasks& (0+255),w,b
  7991  001052  0ED0               	movlw	208
  7992  001054  599F               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7993  001056  0E03               	movlw	3
  7994  001058  59A0               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7995  00105A  E30F               	bnc	l11174
  7996  00105C                     u11160:
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;miwi_p2p.c: 434: {
  8000                           ;miwi_p2p.c: 435: P2PStatus.bits.SaveConnection = 0;
  8001  00105C  93DA               	bcf	_P2PStatus& (0+255),1,b	;volatile
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;miwi_p2p.c: 436: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)20 
      +                          * sizeof(CONNECTION_ENTRY));
  8005  00105E  0EC2               	movlw	low _ConnectionTable
  8006  001060  6F61               	movwf	NVMWrite@source& (0+255),b
  8007  001062  0E02               	movlw	high _ConnectionTable
  8008  001064  6F62               	movwf	(NVMWrite@source+1)& (0+255),b
  8009  001066  C0EA  F063         	movff	_nvmConnectionTable,NVMWrite@addr
  8010  00106A  C0EB  F064         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  8011  00106E  0E01               	movlw	1
  8012  001070  6F66               	movwf	(NVMWrite@count+1)& (0+255),b
  8013  001072  0E18               	movlw	24
  8014  001074  6F65               	movwf	NVMWrite@count& (0+255),b
  8015  001076  EC70  F011         	call	_NVMWrite	;wreg free
  8016  00107A                     l11174:
  8017                           
  8018                           ;miwi_p2p.c: 438: }
  8019                           ;miwi_p2p.c: 439: }
  8020                           ;miwi_p2p.c: 457: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
  8021  00107A  0100               	movlb	0	; () banked
  8022  00107C  B7DA               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  8023  00107E  0012               	return	
  8024                           
  8025                           ; BSR set to: 0
  8026  001080  ECEB  F00B         	call	_MiMAC_ReceivedPacket	;wreg free
  8027  001084  0900               	iorlw	0
  8028  001086  B4D8               	btfsc	status,2,c
  8029  001088  0012               	return	
  8030                           
  8031                           ; BSR set to: 0
  8032                           ;miwi_p2p.c: 458: {
  8033                           ;miwi_p2p.c: 459: bool FW_Stat = 0;
  8034  00108A  6BA2               	clrf	P2PTasks@FW_Stat& (0+255),b
  8035                           
  8036                           ;miwi_p2p.c: 460: rxMessage.flags.Val = 0;
  8037  00108C  6BC7               	clrf	_rxMessage& (0+255),b
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;miwi_p2p.c: 461: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
  8041  00108E  A436               	btfss	_MACRxPacket,2,c
  8042  001090  D003               	goto	u11190
  8043  001092  6B9E               	clrf	??_P2PTasks& (0+255),b
  8044  001094  2B9E               	incf	??_P2PTasks& (0+255),f,b
  8045  001096  D002               	goto	u11198
  8046  001098                     u11190:
  8047  001098  0100               	movlb	0	; () banked
  8048  00109A  6B9E               	clrf	??_P2PTasks& (0+255),b
  8049  00109C                     u11198:
  8050  00109C  51C7               	movf	_rxMessage& (0+255),w,b
  8051  00109E  199E               	xorwf	??_P2PTasks& (0+255),w,b
  8052  0010A0  0BFC               	andlw	-4
  8053  0010A2  199E               	xorwf	??_P2PTasks& (0+255),w,b
  8054  0010A4  6FC7               	movwf	_rxMessage& (0+255),b
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;miwi_p2p.c: 462: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
  8058  0010A6  A636               	btfss	_MACRxPacket,3,c
  8059  0010A8  D002               	bra	u11205
  8060  0010AA  87C7               	bsf	_rxMessage& (0+255),3,b
  8061  0010AC  D002               	bra	u11207
  8062  0010AE                     u11205:
  8063  0010AE  0100               	movlb	0	; () banked
  8064  0010B0  97C7               	bcf	_rxMessage& (0+255),3,b
  8065  0010B2                     u11207:
  8066                           
  8067                           ;miwi_p2p.c: 463: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
  8068  0010B2  5036               	movf	_MACRxPacket,w,c
  8069  0010B4  0B03               	andlw	3
  8070  0010B6  06E8               	decf	wreg,f,c
  8071  0010B8  E103               	bnz	u11210
  8072  0010BA  6B9E               	clrf	??_P2PTasks& (0+255),b
  8073  0010BC  2B9E               	incf	??_P2PTasks& (0+255),f,b
  8074  0010BE  D002               	goto	u11228
  8075  0010C0                     u11210:
  8076  0010C0  0100               	movlb	0	; () banked
  8077  0010C2  6B9E               	clrf	??_P2PTasks& (0+255),b
  8078  0010C4                     u11228:
  8079  0010C4  3B9E               	swapf	??_P2PTasks& (0+255),f,b
  8080  0010C6  479E               	rlncf	??_P2PTasks& (0+255),f,b
  8081  0010C8  51C7               	movf	_rxMessage& (0+255),w,b
  8082  0010CA  199E               	xorwf	??_P2PTasks& (0+255),w,b
  8083  0010CC  0BDF               	andlw	-33
  8084  0010CE  199E               	xorwf	??_P2PTasks& (0+255),w,b
  8085  0010D0  6FC7               	movwf	_rxMessage& (0+255),b
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;miwi_p2p.c: 464: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
  8089  0010D2  AE36               	btfss	_MACRxPacket,7,c
  8090  0010D4  D002               	bra	u11235
  8091  0010D6  8DC7               	bsf	_rxMessage& (0+255),6,b
  8092  0010D8  D002               	bra	u11237
  8093  0010DA                     u11235:
  8094  0010DA  0100               	movlb	0	; () banked
  8095  0010DC  9DC7               	bcf	_rxMessage& (0+255),6,b
  8096  0010DE                     u11237:
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;miwi_p2p.c: 465: if( MACRxPacket.flags.bits.sourcePrsnt )
  8100  0010DE  AE36               	btfss	_MACRxPacket,7,c
  8101  0010E0  D004               	goto	l11190
  8102                           
  8103                           ; BSR set to: 0
  8104                           ;miwi_p2p.c: 466: {
  8105                           ;miwi_p2p.c: 467: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
  8106  0010E2  C037  F0CA         	movff	_MACRxPacket+1,_rxMessage+3
  8107  0010E6  C038  F0CB         	movff	_MACRxPacket+2,_rxMessage+4
  8108  0010EA                     l11190:
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;miwi_p2p.c: 468: }
  8112                           ;miwi_p2p.c: 473: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
  8113  0010EA  C03B  F0CE         	movff	_MACRxPacket+5,_rxMessage+7
  8114                           
  8115                           ;miwi_p2p.c: 474: rxMessage.Payload = MACRxPacket.Payload;
  8116  0010EE  C039  F0CC         	movff	_MACRxPacket+3,_rxMessage+5
  8117  0010F2  C03A  F0CD         	movff	_MACRxPacket+4,_rxMessage+6
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;miwi_p2p.c: 483: rxMessage.PacketLQI = MACRxPacket.LQIValue;
  8121  0010F6  C03D  F0D0         	movff	_MACRxPacket+7,_rxMessage+9
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;miwi_p2p.c: 484: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
  8125  0010FA  C03C  F0CF         	movff	_MACRxPacket+6,_rxMessage+8
  8126                           
  8127                           ; BSR set to: 0
  8128                           ;miwi_p2p.c: 487: if( rxMessage.flags.bits.command )
  8129  0010FE  ABC7               	btfss	_rxMessage& (0+255),5,b
  8130  001100  D186               	goto	l443
  8131  001102  D168               	goto	l11354
  8132  001104                     l11202:
  8133                           
  8134                           ;miwi_p2p.c: 498: {
  8135                           ;miwi_p2p.c: 505: MiMAC_DiscardPacket();
  8136  001104  ECCA  F019         	call	_MiMAC_DiscardPacket	;wreg free
  8137                           
  8138                           ;miwi_p2p.c: 506: break;
  8139  001108  D183               	goto	l486
  8140  00110A                     l11208:
  8141                           
  8142                           ; BSR set to: 0
  8143                           ;miwi_p2p.c: 631: {
  8144                           ;miwi_p2p.c: 632: if(ConnMode > 0x02)
  8145  00110A  0E02               	movlw	2
  8146  00110C  65FD               	cpfsgt	_ConnMode& (0+255),b
  8147  00110E  D001               	goto	l11212
  8148  001110  D7F9               	goto	l11202
  8149  001112                     l11212:
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;miwi_p2p.c: 636: }
  8153                           ;miwi_p2p.c: 637: if( currentChannel != rxMessage.Payload[1] )
  8154  001112  EE20 F001          	lfsr	2,1
  8155  001116  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  8156  001118  26D9               	addwf	fsr2l,f,c
  8157  00111A  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  8158  00111C  22DA               	addwfc	fsr2h,f,c
  8159  00111E  51F9               	movf	_currentChannel& (0+255),w,b
  8160  001120  18DE               	xorwf	postinc2,w,c
  8161  001122  E1F0               	bnz	l11202
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;miwi_p2p.c: 641: }
  8165                           ;miwi_p2p.c: 643: {TxData = 0;};
  8166  001124  6BDF               	clrf	_TxData& (0+255),b
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;miwi_p2p.c: 644: TxBuffer[TxData++] = 0x97;
  8170  001126  0E65               	movlw	low _TxBuffer
  8171  001128  25DF               	addwf	_TxData& (0+255),w,b
  8172  00112A  6ED9               	movwf	fsr2l,c
  8173  00112C  6ADA               	clrf	fsr2h,c
  8174  00112E  0E01               	movlw	high _TxBuffer
  8175  001130  22DA               	addwfc	fsr2h,f,c
  8176  001132  0E97               	movlw	151
  8177  001134  6EDF               	movwf	indf2,c
  8178                           
  8179                           ; BSR set to: 0
  8180  001136  2BDF               	incf	_TxData& (0+255),f,b
  8181                           
  8182                           ; BSR set to: 0
  8183                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = P2PCapacityInfo;
  8184  001138  0E65               	movlw	low _TxBuffer
  8185  00113A  25DF               	addwf	_TxData& (0+255),w,b
  8186  00113C  6ED9               	movwf	fsr2l,c
  8187  00113E  6ADA               	clrf	fsr2h,c
  8188  001140  0E01               	movlw	high _TxBuffer
  8189  001142  22DA               	addwfc	fsr2h,f,c
  8190  001144  C0D9  FFDF         	movff	_P2PCapacityInfo,indf2
  8191  001148  2BDF               	incf	_TxData& (0+255),f,b
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;miwi_p2p.c: 647: for(i = 0; i < 1; i++)
  8195  00114A  6BA8               	clrf	P2PTasks@i& (0+255),b
  8196  00114C                     l11228:
  8197                           
  8198                           ; BSR set to: 0
  8199                           ;miwi_p2p.c: 648: {
  8200                           ;miwi_p2p.c: 649: TxBuffer[TxData++] = AdditionalNodeID[i];
  8201  00114C  51A8               	movf	P2PTasks@i& (0+255),w,b
  8202  00114E  0FFB               	addlw	low _AdditionalNodeID
  8203  001150  6ED9               	movwf	fsr2l,c
  8204  001152  6ADA               	clrf	fsr2h,c
  8205  001154  0E65               	movlw	low _TxBuffer
  8206  001156  25DF               	addwf	_TxData& (0+255),w,b
  8207  001158  6EE1               	movwf	fsr1l,c
  8208  00115A  6AE2               	clrf	fsr1h,c
  8209  00115C  0E01               	movlw	high _TxBuffer
  8210  00115E  22E2               	addwfc	fsr1h,f,c
  8211  001160  CFDF FFE7          	movff	indf2,indf1
  8212                           
  8213                           ; BSR set to: 0
  8214  001164  2BDF               	incf	_TxData& (0+255),f,b
  8215                           
  8216                           ; BSR set to: 0
  8217  001166  2BA8               	incf	P2PTasks@i& (0+255),f,b
  8218                           
  8219                           ; BSR set to: 0
  8220  001168  51A8               	movf	P2PTasks@i& (0+255),w,b
  8221  00116A  E0F0               	bz	l11228
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;miwi_p2p.c: 650: }
  8225                           ;miwi_p2p.c: 652: MiMAC_DiscardPacket();
  8226  00116C  ECCA  F019         	call	_MiMAC_DiscardPacket	;wreg free
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;miwi_p2p.c: 665: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  8230  001170  C0CA  F087         	movff	_rxMessage+3,SendPacket@DestinationAddress
  8231  001174  C0CB  F088         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  8232  001178  0E01               	movlw	1
  8233  00117A  6F89               	movwf	SendPacket@isCommand& (0+255),b
  8234  00117C  0E00               	movlw	0
  8235  00117E  B7C7               	btfsc	_rxMessage& (0+255),3,b
  8236  001180  0E01               	movlw	1
  8237  001182  6F8A               	movwf	SendPacket@SecurityEnabled& (0+255),b
  8238  001184  0E00               	movlw	0
  8239  001186  EC21  F011         	call	_SendPacket
  8240                           
  8241                           ;miwi_p2p.c: 668: }
  8242                           ;miwi_p2p.c: 669: break;
  8243  00118A  D142               	goto	l486
  8244  00118C                     l454:
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;miwi_p2p.c: 677: {
  8248                           ;miwi_p2p.c: 678: {TxData = 0;};
  8249  00118C  6BDF               	clrf	_TxData& (0+255),b
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;miwi_p2p.c: 679: TxBuffer[TxData++] = 0x92;
  8253  00118E  0E65               	movlw	low _TxBuffer
  8254  001190  25DF               	addwf	_TxData& (0+255),w,b
  8255  001192  6ED9               	movwf	fsr2l,c
  8256  001194  6ADA               	clrf	fsr2h,c
  8257  001196  0E01               	movlw	high _TxBuffer
  8258  001198  22DA               	addwfc	fsr2h,f,c
  8259  00119A  0E92               	movlw	146
  8260  00119C  6EDF               	movwf	indf2,c
  8261                           
  8262                           ; BSR set to: 0
  8263  00119E  2BDF               	incf	_TxData& (0+255),f,b
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;miwi_p2p.c: 681: for(i = 0; i < 20; i++)
  8267  0011A0  6BA8               	clrf	P2PTasks@i& (0+255),b
  8268  0011A2                     l11250:
  8269                           
  8270                           ; BSR set to: 0
  8271                           ;miwi_p2p.c: 682: {
  8272                           ;miwi_p2p.c: 684: if( ConnectionTable[i].status.bits.isValid )
  8273  0011A2  51A8               	movf	P2PTasks@i& (0+255),w,b
  8274  0011A4  0D0E               	mullw	14
  8275  0011A6  0ECE               	movlw	low (_ConnectionTable+12)
  8276  0011A8  24F3               	addwf	prodl,w,c
  8277  0011AA  6ED9               	movwf	fsr2l,c
  8278  0011AC  0E02               	movlw	high (_ConnectionTable+12)
  8279  0011AE  20F4               	addwfc	prodh,w,c
  8280  0011B0  6EDA               	movwf	fsr2h,c
  8281  0011B2  AEDF               	btfss	indf2,7,c
  8282  0011B4  D038               	goto	l11262
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;miwi_p2p.c: 685: {
  8286                           ;miwi_p2p.c: 687: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  8287  0011B6  C0CA  F060         	movff	_rxMessage+3,isSameAddress@Address1
  8288  0011BA  C0CB  F061         	movff	_rxMessage+4,isSameAddress@Address1+1
  8289  0011BE  51A8               	movf	P2PTasks@i& (0+255),w,b
  8290  0011C0  0D0E               	mullw	14
  8291  0011C2  0EC6               	movlw	low (_ConnectionTable+4)
  8292  0011C4  24F3               	addwf	prodl,w,c
  8293  0011C6  6F62               	movwf	isSameAddress@Address2& (0+255),b
  8294  0011C8  0E02               	movlw	high (_ConnectionTable+4)
  8295  0011CA  20F4               	addwfc	prodh,w,c
  8296  0011CC  6F63               	movwf	(isSameAddress@Address2+1)& (0+255),b
  8297  0011CE  ECE8  F018         	call	_isSameAddress	;wreg free
  8298  0011D2  0900               	iorlw	0
  8299  0011D4  E028               	bz	l11262
  8300                           
  8301                           ; BSR set to: 0
  8302                           ;miwi_p2p.c: 688: {
  8303                           ;miwi_p2p.c: 691: ConnectionTable[i].status.Val = 0;
  8304  0011D6  51A8               	movf	P2PTasks@i& (0+255),w,b
  8305  0011D8  0D0E               	mullw	14
  8306  0011DA  0ECE               	movlw	low (_ConnectionTable+12)
  8307  0011DC  24F3               	addwf	prodl,w,c
  8308  0011DE  6ED9               	movwf	fsr2l,c
  8309  0011E0  0E02               	movlw	high (_ConnectionTable+12)
  8310  0011E2  20F4               	addwfc	prodh,w,c
  8311  0011E4  6EDA               	movwf	fsr2h,c
  8312  0011E6  6ADF               	clrf	indf2,c
  8313                           
  8314                           ; BSR set to: 0
  8315                           ;miwi_p2p.c: 693: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  8316  0011E8  51A8               	movf	P2PTasks@i& (0+255),w,b
  8317  0011EA  0D0E               	mullw	14
  8318  0011EC  0EC2               	movlw	low _ConnectionTable
  8319  0011EE  24F3               	addwf	prodl,w,c
  8320  0011F0  6F61               	movwf	NVMWrite@source& (0+255),b
  8321  0011F2  0E02               	movlw	high _ConnectionTable
  8322  0011F4  20F4               	addwfc	prodh,w,c
  8323  0011F6  6F62               	movwf	(NVMWrite@source+1)& (0+255),b
  8324  0011F8  51A8               	movf	P2PTasks@i& (0+255),w,b
  8325  0011FA  0D0E               	mullw	14
  8326  0011FC  51EA               	movf	_nvmConnectionTable& (0+255),w,b
  8327  0011FE  24F3               	addwf	prodl,w,c
  8328  001200  6F63               	movwf	NVMWrite@addr& (0+255),b
  8329  001202  51EB               	movf	(_nvmConnectionTable+1)& (0+255),w,b
  8330  001204  20F4               	addwfc	prodh,w,c
  8331  001206  6F64               	movwf	(NVMWrite@addr+1)& (0+255),b
  8332  001208  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  8333  00120A  0E0E               	movlw	14
  8334  00120C  6F65               	movwf	NVMWrite@count& (0+255),b
  8335  00120E  EC70  F011         	call	_NVMWrite	;wreg free
  8336                           
  8337                           ;miwi_p2p.c: 695: TxBuffer[TxData++] = 0x00;
  8338  001212  0E65               	movlw	low _TxBuffer
  8339  001214  0100               	movlb	0	; () banked
  8340  001216  25DF               	addwf	_TxData& (0+255),w,b
  8341  001218  6ED9               	movwf	fsr2l,c
  8342  00121A  6ADA               	clrf	fsr2h,c
  8343  00121C  0E01               	movlw	high _TxBuffer
  8344  00121E  22DA               	addwfc	fsr2h,f,c
  8345  001220  6ADF               	clrf	indf2,c
  8346                           
  8347                           ; BSR set to: 0
  8348  001222  2BDF               	incf	_TxData& (0+255),f,b
  8349                           
  8350                           ;miwi_p2p.c: 697: break;
  8351  001224  D004               	goto	l11266
  8352  001226                     l11262:
  8353                           
  8354                           ; BSR set to: 0
  8355  001226  2BA8               	incf	P2PTasks@i& (0+255),f,b
  8356                           
  8357                           ; BSR set to: 0
  8358  001228  0E13               	movlw	19
  8359  00122A  65A8               	cpfsgt	P2PTasks@i& (0+255),b
  8360  00122C  D7BA               	goto	l11250
  8361  00122E                     l11266:
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;miwi_p2p.c: 698: }
  8365                           ;miwi_p2p.c: 699: }
  8366                           ;miwi_p2p.c: 700: }
  8367                           ;miwi_p2p.c: 702: MiMAC_DiscardPacket();
  8368  00122E  ECCA  F019         	call	_MiMAC_DiscardPacket	;wreg free
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;miwi_p2p.c: 704: if( i == 20 )
  8372  001232  0E14               	movlw	20
  8373  001234  19A8               	xorwf	P2PTasks@i& (0+255),w,b
  8374  001236  E109               	bnz	l11274
  8375                           
  8376                           ; BSR set to: 0
  8377                           ;miwi_p2p.c: 705: {
  8378                           ;miwi_p2p.c: 707: TxBuffer[TxData++] = 0xF0;
  8379  001238  0E65               	movlw	low _TxBuffer
  8380  00123A  25DF               	addwf	_TxData& (0+255),w,b
  8381  00123C  6ED9               	movwf	fsr2l,c
  8382  00123E  6ADA               	clrf	fsr2h,c
  8383  001240  0E01               	movlw	high _TxBuffer
  8384  001242  22DA               	addwfc	fsr2h,f,c
  8385  001244  0EF0               	movlw	240
  8386  001246  6EDF               	movwf	indf2,c
  8387                           
  8388                           ; BSR set to: 0
  8389  001248  2BDF               	incf	_TxData& (0+255),f,b
  8390  00124A                     l11274:
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;miwi_p2p.c: 708: }
  8394                           ;miwi_p2p.c: 719: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  8395  00124A  C0CA  F087         	movff	_rxMessage+3,SendPacket@DestinationAddress
  8396  00124E  C0CB  F088         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  8397  001252  0E01               	movlw	1
  8398  001254  6F89               	movwf	SendPacket@isCommand& (0+255),b
  8399  001256  0E00               	movlw	0
  8400  001258  B7C7               	btfsc	_rxMessage& (0+255),3,b
  8401  00125A  0E01               	movlw	1
  8402  00125C  6F8A               	movwf	SendPacket@SecurityEnabled& (0+255),b
  8403  00125E  0E00               	movlw	0
  8404  001260  EC21  F011         	call	_SendPacket
  8405                           
  8406                           ;miwi_p2p.c: 723: }
  8407                           ;miwi_p2p.c: 724: break;
  8408  001264  D0D5               	goto	l486
  8409  001266                     l11276:
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;miwi_p2p.c: 732: case 0x01:
  8413                           ;miwi_p2p.c: 746: AddConnection();
  8414  001266  ECAC  F00C         	call	_AddConnection	;wreg free
  8415                           
  8416                           ;miwi_p2p.c: 748: myConnectionIndex_in_PanCo = rxMessage.Payload[2];
  8417  00126A  0100               	movlb	0	; () banked
  8418  00126C  EE20 F002          	lfsr	2,2
  8419  001270  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  8420  001272  26D9               	addwf	fsr2l,f,c
  8421  001274  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  8422  001276  22DA               	addwfc	fsr2h,f,c
  8423  001278  50DF               	movf	indf2,w,c
  8424  00127A  6FFA               	movwf	_myConnectionIndex_in_PanCo& (0+255),b
  8425                           
  8426                           ; BSR set to: 0
  8427                           ;miwi_p2p.c: 749: NVMWrite((uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
  8428  00127C  0EFA               	movlw	low _myConnectionIndex_in_PanCo
  8429  00127E  6F61               	movwf	NVMWrite@source& (0+255),b
  8430  001280  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
  8431  001282  C0F6  F063         	movff	_nvmmyIndex,NVMWrite@addr
  8432  001286  C0F7  F064         	movff	_nvmmyIndex+1,NVMWrite@addr+1
  8433  00128A  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  8434  00128C  0E01               	movlw	1
  8435  00128E  6F65               	movwf	NVMWrite@count& (0+255),b
  8436  001290  EC70  F011         	call	_NVMWrite	;wreg free
  8437                           
  8438                           ;miwi_p2p.c: 753: P2PStatus.bits.SaveConnection = 1;
  8439  001294  0100               	movlb	0	; () banked
  8440  001296  83DA               	bsf	_P2PStatus& (0+255),1,b	;volatile
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;miwi_p2p.c: 754: nvmDelayTick = MiWi_TickGet();
  8444  001298  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  8445  00129C  C060  F04A         	movff	?_MiWi_TickGet,_nvmDelayTick
  8446  0012A0  C061  F04B         	movff	?_MiWi_TickGet+1,_nvmDelayTick+1
  8447  0012A4  C062  F04C         	movff	?_MiWi_TickGet+2,_nvmDelayTick+2
  8448  0012A8  C063  F04D         	movff	?_MiWi_TickGet+3,_nvmDelayTick+3
  8449                           
  8450                           ;miwi_p2p.c: 756: break;
  8451  0012AC  D72B               	goto	l11202
  8452  0012AE                     l11288:
  8453                           
  8454                           ; BSR set to: 0
  8455  0012AE  EE20 F001          	lfsr	2,1
  8456  0012B2  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  8457  0012B4  26D9               	addwf	fsr2l,f,c
  8458  0012B6  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  8459  0012B8  22DA               	addwfc	fsr2h,f,c
  8460  0012BA  50DF               	movf	indf2,w,c
  8461                           
  8462                           ; Switch size 1, requested type "speed"
  8463                           ; Number of cases is 2, Range of values is 0 to 1
  8464                           ; switch strategies available:
  8465                           ; Name         Instructions Cycles
  8466                           ; simple_byte            7     4 (average)
  8467                           ;	Chosen strategy is simple_byte
  8468  0012BC  E0D4               	bz	l11276
  8469  0012BE  0A01               	xorlw	1	; case 1
  8470  0012C0  E0D2               	bz	l11276
  8471  0012C2  D720               	goto	l11202
  8472  0012C4                     l466:
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;miwi_p2p.c: 766: {
  8476                           ;miwi_p2p.c: 767: if( P2PStatus.bits.Resync )
  8477  0012C4  BBDA               	btfsc	_P2PStatus& (0+255),5,b	;volatile
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;miwi_p2p.c: 768: {
  8481                           ;miwi_p2p.c: 769: P2PStatus.bits.Resync = 0;
  8482  0012C6  9BDA               	bcf	_P2PStatus& (0+255),5,b	;volatile
  8483  0012C8  D71D               	goto	l11202
  8484  0012CA                     l11296:
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;miwi_p2p.c: 817: {
  8488                           ;miwi_p2p.c: 818: if( rxMessage.Payload[1] == 0x00 )
  8489  0012CA  EE20 F001          	lfsr	2,1
  8490  0012CE  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  8491  0012D0  26D9               	addwf	fsr2l,f,c
  8492  0012D2  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  8493  0012D4  22DA               	addwfc	fsr2h,f,c
  8494  0012D6  50DF               	movf	indf2,w,c
  8495  0012D8  E001 D714          	bnz	l11202
  8496                           
  8497                           ; BSR set to: 0
  8498                           ;miwi_p2p.c: 819: {
  8499                           ;miwi_p2p.c: 820: for(i = 0; i < 20; i++)
  8500  0012DC  6BA8               	clrf	P2PTasks@i& (0+255),b
  8501  0012DE                     l11304:
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;miwi_p2p.c: 821: {
  8505                           ;miwi_p2p.c: 823: if( ConnectionTable[i].status.bits.isValid )
  8506  0012DE  51A8               	movf	P2PTasks@i& (0+255),w,b
  8507  0012E0  0D0E               	mullw	14
  8508  0012E2  0ECE               	movlw	low (_ConnectionTable+12)
  8509  0012E4  24F3               	addwf	prodl,w,c
  8510  0012E6  6ED9               	movwf	fsr2l,c
  8511  0012E8  0E02               	movlw	high (_ConnectionTable+12)
  8512  0012EA  20F4               	addwfc	prodh,w,c
  8513  0012EC  6EDA               	movwf	fsr2h,c
  8514  0012EE  AEDF               	btfss	indf2,7,c
  8515  0012F0  D02F               	goto	l11312
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;miwi_p2p.c: 824: {
  8519                           ;miwi_p2p.c: 826: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  8520  0012F2  C0CA  F060         	movff	_rxMessage+3,isSameAddress@Address1
  8521  0012F6  C0CB  F061         	movff	_rxMessage+4,isSameAddress@Address1+1
  8522  0012FA  51A8               	movf	P2PTasks@i& (0+255),w,b
  8523  0012FC  0D0E               	mullw	14
  8524  0012FE  0EC6               	movlw	low (_ConnectionTable+4)
  8525  001300  24F3               	addwf	prodl,w,c
  8526  001302  6F62               	movwf	isSameAddress@Address2& (0+255),b
  8527  001304  0E02               	movlw	high (_ConnectionTable+4)
  8528  001306  20F4               	addwfc	prodh,w,c
  8529  001308  6F63               	movwf	(isSameAddress@Address2+1)& (0+255),b
  8530  00130A  ECE8  F018         	call	_isSameAddress	;wreg free
  8531  00130E  0900               	iorlw	0
  8532  001310  E01F               	bz	l11312
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;miwi_p2p.c: 827: {
  8536                           ;miwi_p2p.c: 829: ConnectionTable[i].status.Val = 0;
  8537  001312  51A8               	movf	P2PTasks@i& (0+255),w,b
  8538  001314  0D0E               	mullw	14
  8539  001316  0ECE               	movlw	low (_ConnectionTable+12)
  8540  001318  24F3               	addwf	prodl,w,c
  8541  00131A  6ED9               	movwf	fsr2l,c
  8542  00131C  0E02               	movlw	high (_ConnectionTable+12)
  8543  00131E  20F4               	addwfc	prodh,w,c
  8544  001320  6EDA               	movwf	fsr2h,c
  8545  001322  6ADF               	clrf	indf2,c
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;miwi_p2p.c: 831: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  8549  001324  51A8               	movf	P2PTasks@i& (0+255),w,b
  8550  001326  0D0E               	mullw	14
  8551  001328  0EC2               	movlw	low _ConnectionTable
  8552  00132A  24F3               	addwf	prodl,w,c
  8553  00132C  6F61               	movwf	NVMWrite@source& (0+255),b
  8554  00132E  0E02               	movlw	high _ConnectionTable
  8555  001330  20F4               	addwfc	prodh,w,c
  8556  001332  6F62               	movwf	(NVMWrite@source+1)& (0+255),b
  8557  001334  51A8               	movf	P2PTasks@i& (0+255),w,b
  8558  001336  0D0E               	mullw	14
  8559  001338  51EA               	movf	_nvmConnectionTable& (0+255),w,b
  8560  00133A  24F3               	addwf	prodl,w,c
  8561  00133C  6F63               	movwf	NVMWrite@addr& (0+255),b
  8562  00133E  51EB               	movf	(_nvmConnectionTable+1)& (0+255),w,b
  8563  001340  20F4               	addwfc	prodh,w,c
  8564  001342  6F64               	movwf	(NVMWrite@addr+1)& (0+255),b
  8565  001344  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
  8566  001346  0E0E               	movlw	14
  8567  001348  6F65               	movwf	NVMWrite@count& (0+255),b
  8568  00134A  EC70  F011         	call	_NVMWrite	;wreg free
  8569                           
  8570                           ;miwi_p2p.c: 833: break;
  8571  00134E  D6DA               	goto	l11202
  8572  001350                     l11312:
  8573                           
  8574                           ; BSR set to: 0
  8575  001350  2BA8               	incf	P2PTasks@i& (0+255),f,b
  8576                           
  8577                           ; BSR set to: 0
  8578  001352  0E13               	movlw	19
  8579  001354  65A8               	cpfsgt	P2PTasks@i& (0+255),b
  8580  001356  D7C3               	goto	l11304
  8581  001358  D6D5               	goto	l11202
  8582  00135A                     l11318:
  8583                           
  8584                           ; BSR set to: 0
  8585                           ;miwi_p2p.c: 1016: {
  8586                           ;miwi_p2p.c: 1017: if (!role)
  8587  00135A  51FE               	movf	_role& (0+255),w,b
  8588  00135C  E001 D6D2          	bnz	l11202
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;miwi_p2p.c: 1018: {
  8592                           ;miwi_p2p.c: 1019: rec_ack = 1;
  8593  001360  0E01               	movlw	1
  8594  001362  6FE6               	movwf	_rec_ack& (0+255),b
  8595  001364  D6CF               	goto	l11202
  8596  001366                     l11326:
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;miwi_p2p.c: 1029: {
  8600                           ;miwi_p2p.c: 1030: if (!role)
  8601  001366  51FE               	movf	_role& (0+255),w,b
  8602  001368  E001 D6CC          	bnz	l11202
  8603                           
  8604                           ; BSR set to: 0
  8605                           ;miwi_p2p.c: 1031: {
  8606                           ;miwi_p2p.c: 1033: end_nodes = rxMessage.Payload[1]-1;
  8607  00136C  EE20 F001          	lfsr	2,1
  8608  001370  51CC               	movf	(_rxMessage+5)& (0+255),w,b
  8609  001372  26D9               	addwf	fsr2l,f,c
  8610  001374  51CD               	movf	(_rxMessage+6)& (0+255),w,b
  8611  001376  22DA               	addwfc	fsr2h,f,c
  8612  001378  50DF               	movf	indf2,w,c
  8613  00137A  6F9E               	movwf	??_P2PTasks& (0+255),b
  8614  00137C  059E               	decf	??_P2PTasks& (0+255),w,b
  8615  00137E  6FE2               	movwf	_end_nodes& (0+255),b
  8616                           
  8617                           ; BSR set to: 0
  8618                           ;miwi_p2p.c: 1034: store_connection_tb(rxMessage.Payload);
  8619  001380  C0CC  F067         	movff	_rxMessage+5,store_connection_tb@payload
  8620  001384  C0CD  F068         	movff	_rxMessage+6,store_connection_tb@payload+1
  8621  001388  EC81  F00F         	call	_store_connection_tb	;wreg free
  8622  00138C  D6BB               	goto	l11202
  8623  00138E                     l11336:
  8624                           
  8625                           ; BSR set to: 0
  8626                           ;miwi_p2p.c: 1043: {
  8627                           ;miwi_p2p.c: 1044: if (role)
  8628  00138E  51FE               	movf	_role& (0+255),w,b
  8629  001390  E101 D6B8          	bz	l11202
  8630                           
  8631                           ; BSR set to: 0
  8632                           ;miwi_p2p.c: 1045: {
  8633                           ;miwi_p2p.c: 1047: uint8_t final_index;
  8634                           ;miwi_p2p.c: 1048: final_index = Find_Index(rxMessage.Payload);
  8635  001394  C0CC  F060         	movff	_rxMessage+5,Find_Index@DestAddr
  8636  001398  C0CD  F061         	movff	_rxMessage+6,Find_Index@DestAddr+1
  8637  00139C  EC57  F012         	call	_Find_Index	;wreg free
  8638  0013A0  6FA3               	movwf	P2PTasks@final_index& (0+255),b
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;miwi_p2p.c: 1049: if (final_index != 0xFF)
  8642  0013A2  29A3               	incf	P2PTasks@final_index& (0+255),w,b
  8643  0013A4  E00D               	bz	l11344
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;miwi_p2p.c: 1050: {
  8647                           ;miwi_p2p.c: 1051: FW_Stat = Forward_Packet_PANCr_to_EDy (rxMessage.Payload , final_inde
      +                          x , rxMessage.SourceAddress);
  8648  0013A6  C0CC  F097         	movff	_rxMessage+5,Forward_Packet_PANCr_to_EDy@fw_payload
  8649  0013AA  C0CD  F098         	movff	_rxMessage+6,Forward_Packet_PANCr_to_EDy@fw_payload+1
  8650  0013AE  C0A3  F099         	movff	P2PTasks@final_index,Forward_Packet_PANCr_to_EDy@index
  8651  0013B2  C0CA  F09A         	movff	_rxMessage+3,Forward_Packet_PANCr_to_EDy@EDxAddress
  8652  0013B6  C0CB  F09B         	movff	_rxMessage+4,Forward_Packet_PANCr_to_EDy@EDxAddress+1
  8653  0013BA  EC0B  F012         	call	_Forward_Packet_PANCr_to_EDy	;wreg free
  8654  0013BE  6FA2               	movwf	P2PTasks@FW_Stat& (0+255),b
  8655  0013C0                     l11344:
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;miwi_p2p.c: 1052: }
  8659                           ;miwi_p2p.c: 1054: if (FW_Stat)
  8660  0013C0  51A2               	movf	P2PTasks@FW_Stat& (0+255),w,b
  8661  0013C2  E101 D69F          	bz	l11202
  8662                           
  8663                           ; BSR set to: 0
  8664                           ;miwi_p2p.c: 1055: {
  8665                           ;miwi_p2p.c: 1056: SW_Ack_SrED (rxMessage.SourceAddress);
  8666  0013C6  C0CA  F091         	movff	_rxMessage+3,SW_Ack_SrED@Dest_Addr
  8667  0013CA  C0CB  F092         	movff	_rxMessage+4,SW_Ack_SrED@Dest_Addr+1
  8668  0013CE  EC13  F019         	call	_SW_Ack_SrED	;wreg free
  8669  0013D2  D698               	goto	l11202
  8670  0013D4                     l11354:
  8671                           
  8672                           ; BSR set to: 0
  8673  0013D4  C0CC  FFD9         	movff	_rxMessage+5,fsr2l
  8674  0013D8  C0CD  FFDA         	movff	_rxMessage+6,fsr2h
  8675  0013DC  50DF               	movf	indf2,w,c
  8676                           
  8677                           ; Switch size 1, requested type "speed"
  8678                           ; Number of cases is 9, Range of values is 119 to 218
  8679                           ; switch strategies available:
  8680                           ; Name         Instructions Cycles
  8681                           ; simple_byte           28    15 (average)
  8682                           ;	Chosen strategy is simple_byte
  8683  0013DE  0A77               	xorlw	119	; case 119
  8684  0013E0  E0C2               	bz	l11326
  8685  0013E2  0AF6               	xorlw	246	; case 129
  8686  0013E4  E101 D68E          	bz	l11202
  8687  0013E8  0A03               	xorlw	3	; case 130
  8688  0013EA  E101 D6CF          	bz	l454
  8689  0013EE  0A05               	xorlw	5	; case 135
  8690  0013F0  E101 D68B          	bz	l11208
  8691  0013F4  0A16               	xorlw	22	; case 145
  8692  0013F6  E101 D75A          	bz	l11288
  8693  0013FA  0A03               	xorlw	3	; case 146
  8694  0013FC  E101 D765          	bz	l11296
  8695  001400  0A05               	xorlw	5	; case 151
  8696  001402  E101 D75F          	bz	l466
  8697  001406  0A5B               	xorlw	91	; case 204
  8698  001408  E0C2               	bz	l11336
  8699  00140A  0A16               	xorlw	22	; case 218
  8700  00140C  E0A6               	bz	l11318
  8701  00140E                     l443:
  8702                           
  8703                           ; BSR set to: 0
  8704                           ;miwi_p2p.c: 1101: else
  8705                           ;miwi_p2p.c: 1102: {
  8706                           ;miwi_p2p.c: 1103: P2PStatus.bits.RxHasUserData = 1;
  8707  00140E  87DA               	bsf	_P2PStatus& (0+255),3,b	;volatile
  8708  001410                     l486:
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;miwi_p2p.c: 1104: }
  8712                           ;miwi_p2p.c: 1107: if( P2PStatus.bits.DataRequesting && P2PStatus.bits.RxHasUserData )
  8713  001410  B5DA               	btfsc	_P2PStatus& (0+255),2,b	;volatile
  8714                           
  8715                           ; BSR set to: 0
  8716  001412  A7DA               	btfss	_P2PStatus& (0+255),3,b	;volatile
  8717  001414  D001               	goto	l11360
  8718                           
  8719                           ; BSR set to: 0
  8720                           ;miwi_p2p.c: 1108: {
  8721                           ;miwi_p2p.c: 1109: P2PStatus.bits.DataRequesting = 0;
  8722  001416  95DA               	bcf	_P2PStatus& (0+255),2,b	;volatile
  8723  001418                     l11360:
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;miwi_p2p.c: 1110: }
  8727                           ;miwi_p2p.c: 1113: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
  8728  001418  51CE               	movf	(_rxMessage+7)& (0+255),w,b
  8729  00141A  E004               	bz	l490
  8730                           
  8731                           ; BSR set to: 0
  8732  00141C  B9DA               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  8733  00141E  D002               	goto	l490
  8734                           
  8735                           ; BSR set to: 0
  8736  001420  ABDA               	btfss	_P2PStatus& (0+255),5,b	;volatile
  8737  001422  0012               	return	
  8738  001424                     l490:
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;miwi_p2p.c: 1114: {
  8742                           ;miwi_p2p.c: 1115: P2PStatus.bits.RxHasUserData = 0;
  8743  001424  97DA               	bcf	_P2PStatus& (0+255),3,b	;volatile
  8744                           
  8745                           ; BSR set to: 0
  8746                           ;miwi_p2p.c: 1116: MiMAC_DiscardPacket();
  8747  001426  EFCA  F019         	goto	_MiMAC_DiscardPacket	;wreg free
  8748  00142A                     __end_of_P2PTasks:
  8749                           	opt stack 0
  8750                           tblptru	equ	0xFF8
  8751                           tblptrh	equ	0xFF7
  8752                           tblptrl	equ	0xFF6
  8753                           tablat	equ	0xFF5
  8754                           prodh	equ	0xFF4
  8755                           prodl	equ	0xFF3
  8756                           intcon	equ	0xFF2
  8757                           intcon2	equ	0xFF1
  8758                           intcon3	equ	0xFF0
  8759                           postinc0	equ	0xFEE
  8760                           wreg	equ	0xFE8
  8761                           indf1	equ	0xFE7
  8762                           postdec1	equ	0xFE5
  8763                           fsr1h	equ	0xFE2
  8764                           fsr1l	equ	0xFE1
  8765                           indf2	equ	0xFDF
  8766                           postinc2	equ	0xFDE
  8767                           postdec2	equ	0xFDD
  8768                           fsr2h	equ	0xFDA
  8769                           fsr2l	equ	0xFD9
  8770                           status	equ	0xFD8
  8771                           
  8772 ;; *************** function _store_connection_tb *****************
  8773 ;; Defined at:
  8774 ;;		line 150 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  payload         2    7[BANK0 ] PTR unsigned char 
  8777 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;  i               1   12[BANK0 ] unsigned char 
  8780 ;;  j               1   11[BANK0 ] unsigned char 
  8781 ;;  connections_    1    0        unsigned char 
  8782 ;;  k               1    0        unsigned char 
  8783 ;; Return value:  Size  Location     Type
  8784 ;;		None               void
  8785 ;; Registers used:
  8786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8787 ;; Tracked objects:
  8788 ;;		On entry : F/0
  8789 ;;		On exit  : F/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8792 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8793 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8794 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8795 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8796 ;;Total ram usage:        6 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; Hardware stack levels required when called:    6
  8799 ;; This function calls:
  8800 ;;		_handle_lost_connection
  8801 ;; This function is called by:
  8802 ;;		_P2PTasks
  8803 ;; This function uses a non-reentrant model
  8804 ;;
  8805                           
  8806                           	psect	text29
  8807  001F02                     __ptext29:
  8808                           	opt stack 0
  8809  001F02                     _store_connection_tb:
  8810                           	opt stack 19
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;miwi_p2p.c: 154: for (i=4; i < 35; i++)
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;incstack = 0
  8817  001F02  0E04               	movlw	4
  8818  001F04  6F6C               	movwf	store_connection_tb@i& (0+255),b
  8819  001F06                     l11024:
  8820                           
  8821                           ; BSR set to: 0
  8822                           ;miwi_p2p.c: 155: {
  8823                           ;miwi_p2p.c: 156: if (i % 4 == 0 && (i+3) < 35)
  8824  001F06  C06C  F069         	movff	store_connection_tb@i,??_store_connection_tb
  8825  001F0A  0E03               	movlw	3
  8826  001F0C  1769               	andwf	??_store_connection_tb& (0+255),f,b
  8827  001F0E  E161               	bnz	l11038
  8828                           
  8829                           ; BSR set to: 0
  8830  001F10  516C               	movf	store_connection_tb@i& (0+255),w,b
  8831  001F12  6F69               	movwf	??_store_connection_tb& (0+255),b
  8832  001F14  6B6A               	clrf	(??_store_connection_tb+1)& (0+255),b
  8833  001F16  0E03               	movlw	3
  8834  001F18  2769               	addwf	??_store_connection_tb& (0+255),f,b
  8835  001F1A  0E00               	movlw	0
  8836  001F1C  236A               	addwfc	(??_store_connection_tb+1)& (0+255),f,b
  8837  001F1E  BF6A               	btfsc	(??_store_connection_tb+1)& (0+255),7,b
  8838  001F20  D005               	goto	l11028
  8839  001F22  516A               	movf	(??_store_connection_tb+1)& (0+255),w,b
  8840  001F24  E156               	bnz	l11038
  8841  001F26  0E23               	movlw	35
  8842  001F28  5D69               	subwf	??_store_connection_tb& (0+255),w,b
  8843  001F2A  E253               	bc	l11038
  8844  001F2C                     l11028:
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;miwi_p2p.c: 157: {
  8848                           ;miwi_p2p.c: 158: j = payload[i+3];
  8849  001F2C  516C               	movf	store_connection_tb@i& (0+255),w,b
  8850  001F2E  2567               	addwf	store_connection_tb@payload& (0+255),w,b
  8851  001F30  6F69               	movwf	??_store_connection_tb& (0+255),b
  8852  001F32  0E00               	movlw	0
  8853  001F34  2168               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8854  001F36  6F6A               	movwf	(??_store_connection_tb+1)& (0+255),b
  8855  001F38  0E03               	movlw	3
  8856  001F3A  2569               	addwf	??_store_connection_tb& (0+255),w,b
  8857  001F3C  6ED9               	movwf	fsr2l,c
  8858  001F3E  0E00               	movlw	0
  8859  001F40  216A               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  8860  001F42  6EDA               	movwf	fsr2h,c
  8861  001F44  50DF               	movf	indf2,w,c
  8862  001F46  6F6B               	movwf	store_connection_tb@j& (0+255),b
  8863                           
  8864                           ; BSR set to: 0
  8865                           ;miwi_p2p.c: 159: END_DEVICES_Short_Address[j].connection_slot = j;
  8866  001F48  516B               	movf	store_connection_tb@j& (0+255),w,b
  8867  001F4A  0D04               	mullw	4
  8868  001F4C  0E03               	movlw	low (_END_DEVICES_Short_Address+3)
  8869  001F4E  24F3               	addwf	prodl,w,c
  8870  001F50  6ED9               	movwf	fsr2l,c
  8871  001F52  0E02               	movlw	high (_END_DEVICES_Short_Address+3)
  8872  001F54  20F4               	addwfc	prodh,w,c
  8873  001F56  6EDA               	movwf	fsr2h,c
  8874  001F58  C06B  FFDF         	movff	store_connection_tb@j,indf2
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;miwi_p2p.c: 160: END_DEVICES_Short_Address[j].Address[0] = payload[i];
  8878  001F5C  516C               	movf	store_connection_tb@i& (0+255),w,b
  8879  001F5E  2567               	addwf	store_connection_tb@payload& (0+255),w,b
  8880  001F60  6ED9               	movwf	fsr2l,c
  8881  001F62  0E00               	movlw	0
  8882  001F64  2168               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8883  001F66  6EDA               	movwf	fsr2h,c
  8884  001F68  516B               	movf	store_connection_tb@j& (0+255),w,b
  8885  001F6A  0D04               	mullw	4
  8886  001F6C  0E00               	movlw	low _END_DEVICES_Short_Address
  8887  001F6E  24F3               	addwf	prodl,w,c
  8888  001F70  6EE1               	movwf	fsr1l,c
  8889  001F72  0E02               	movlw	high _END_DEVICES_Short_Address
  8890  001F74  20F4               	addwfc	prodh,w,c
  8891  001F76  6EE2               	movwf	fsr1h,c
  8892  001F78  CFDF FFE7          	movff	indf2,indf1
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;miwi_p2p.c: 161: END_DEVICES_Short_Address[j].Address[1] = payload[i+1];
  8896  001F7C  516C               	movf	store_connection_tb@i& (0+255),w,b
  8897  001F7E  2567               	addwf	store_connection_tb@payload& (0+255),w,b
  8898  001F80  6F69               	movwf	??_store_connection_tb& (0+255),b
  8899  001F82  0E00               	movlw	0
  8900  001F84  2168               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8901  001F86  6F6A               	movwf	(??_store_connection_tb+1)& (0+255),b
  8902  001F88  2969               	incf	??_store_connection_tb& (0+255),w,b
  8903  001F8A  6ED9               	movwf	fsr2l,c
  8904  001F8C  0E00               	movlw	0
  8905  001F8E  216A               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  8906  001F90  6EDA               	movwf	fsr2h,c
  8907  001F92  516B               	movf	store_connection_tb@j& (0+255),w,b
  8908  001F94  0D04               	mullw	4
  8909  001F96  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  8910  001F98  24F3               	addwf	prodl,w,c
  8911  001F9A  6EE1               	movwf	fsr1l,c
  8912  001F9C  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  8913  001F9E  20F4               	addwfc	prodh,w,c
  8914  001FA0  6EE2               	movwf	fsr1h,c
  8915  001FA2  CFDF FFE7          	movff	indf2,indf1
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;miwi_p2p.c: 162: END_DEVICES_Short_Address[j].Address[2] = payload[i+2];
  8919  001FA6  516C               	movf	store_connection_tb@i& (0+255),w,b
  8920  001FA8  2567               	addwf	store_connection_tb@payload& (0+255),w,b
  8921  001FAA  6F69               	movwf	??_store_connection_tb& (0+255),b
  8922  001FAC  0E00               	movlw	0
  8923  001FAE  2168               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8924  001FB0  6F6A               	movwf	(??_store_connection_tb+1)& (0+255),b
  8925  001FB2  0E02               	movlw	2
  8926  001FB4  2569               	addwf	??_store_connection_tb& (0+255),w,b
  8927  001FB6  6ED9               	movwf	fsr2l,c
  8928  001FB8  0E00               	movlw	0
  8929  001FBA  216A               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  8930  001FBC  6EDA               	movwf	fsr2h,c
  8931  001FBE  516B               	movf	store_connection_tb@j& (0+255),w,b
  8932  001FC0  0D04               	mullw	4
  8933  001FC2  0E02               	movlw	low (_END_DEVICES_Short_Address+2)
  8934  001FC4  24F3               	addwf	prodl,w,c
  8935  001FC6  6EE1               	movwf	fsr1l,c
  8936  001FC8  0E02               	movlw	high (_END_DEVICES_Short_Address+2)
  8937  001FCA  20F4               	addwfc	prodh,w,c
  8938  001FCC  6EE2               	movwf	fsr1h,c
  8939  001FCE  CFDF FFE7          	movff	indf2,indf1
  8940  001FD2                     l11038:
  8941                           
  8942                           ; BSR set to: 0
  8943  001FD2  2B6C               	incf	store_connection_tb@i& (0+255),f,b
  8944                           
  8945                           ; BSR set to: 0
  8946  001FD4  0E22               	movlw	34
  8947  001FD6  656C               	cpfsgt	store_connection_tb@i& (0+255),b
  8948  001FD8  D796               	goto	l11024
  8949  001FDA  EF25  F016         	goto	_handle_lost_connection
  8950  001FDE                     __end_of_store_connection_tb:
  8951                           	opt stack 0
  8952                           tblptru	equ	0xFF8
  8953                           tblptrh	equ	0xFF7
  8954                           tblptrl	equ	0xFF6
  8955                           tablat	equ	0xFF5
  8956                           prodh	equ	0xFF4
  8957                           prodl	equ	0xFF3
  8958                           intcon	equ	0xFF2
  8959                           intcon2	equ	0xFF1
  8960                           intcon3	equ	0xFF0
  8961                           postinc0	equ	0xFEE
  8962                           wreg	equ	0xFE8
  8963                           indf1	equ	0xFE7
  8964                           postdec1	equ	0xFE5
  8965                           fsr1h	equ	0xFE2
  8966                           fsr1l	equ	0xFE1
  8967                           indf2	equ	0xFDF
  8968                           postinc2	equ	0xFDE
  8969                           postdec2	equ	0xFDD
  8970                           fsr2h	equ	0xFDA
  8971                           fsr2l	equ	0xFD9
  8972                           status	equ	0xFD8
  8973                           
  8974 ;; *************** function _handle_lost_connection *****************
  8975 ;; Defined at:
  8976 ;;		line 127 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;		None
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  i               1    6[BANK0 ] unsigned char 
  8981 ;;  stat            1    0        unsigned char 
  8982 ;; Return value:  Size  Location     Type
  8983 ;;		None               void
  8984 ;; Registers used:
  8985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8986 ;; Tracked objects:
  8987 ;;		On entry : F/0
  8988 ;;		On exit  : F/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8992 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8993 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8994 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8995 ;;Total ram usage:        7 bytes
  8996 ;; Hardware stack levels used:    1
  8997 ;; Hardware stack levels required when called:    5
  8998 ;; This function calls:
  8999 ;;		Nothing
  9000 ;; This function is called by:
  9001 ;;		_store_connection_tb
  9002 ;; This function uses a non-reentrant model
  9003 ;;
  9004                           
  9005                           	psect	text30
  9006  002C4A                     __ptext30:
  9007                           	opt stack 0
  9008  002C4A                     _handle_lost_connection:
  9009                           	opt stack 19
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;miwi_p2p.c: 131: if (!role)
  9013                           
  9014                           ; BSR set to: 0
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;incstack = 0
  9018  002C4A  51FE               	movf	_role& (0+255),w,b
  9019  002C4C  A4D8               	btfss	status,2,c
  9020  002C4E  0012               	return	
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;miwi_p2p.c: 132: {
  9024                           ;miwi_p2p.c: 133: for (i=0;i<end_nodes+1;i++)
  9025  002C50  6B66               	clrf	handle_lost_connection@i& (0+255),b
  9026  002C52  D018               	goto	l10882
  9027  002C54                     l10874:
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;miwi_p2p.c: 134: {
  9031                           ;miwi_p2p.c: 135: if (myLongAddress[0] == END_DEVICES_Short_Address[i].Address[0] && myL
      +                          ongAddress[1] == END_DEVICES_Short_Address[i].Address[1])
  9032  002C54  5166               	movf	handle_lost_connection@i& (0+255),w,b
  9033  002C56  0D04               	mullw	4
  9034  002C58  0E00               	movlw	low _END_DEVICES_Short_Address
  9035  002C5A  24F3               	addwf	prodl,w,c
  9036  002C5C  6ED9               	movwf	fsr2l,c
  9037  002C5E  0E02               	movlw	high _END_DEVICES_Short_Address
  9038  002C60  20F4               	addwfc	prodh,w,c
  9039  002C62  6EDA               	movwf	fsr2h,c
  9040  002C64  0101               	movlb	1	; () banked
  9041  002C66  51A9               	movf	_myLongAddress& (0+255),w,b
  9042  002C68  18DE               	xorwf	postinc2,w,c
  9043  002C6A  E10A               	bnz	l10880
  9044                           
  9045                           ; BSR set to: 1
  9046  002C6C  0100               	movlb	0	; () banked
  9047  002C6E  5166               	movf	handle_lost_connection@i& (0+255),w,b
  9048  002C70  0D04               	mullw	4
  9049  002C72  0E01               	movlw	low (_END_DEVICES_Short_Address+1)
  9050  002C74  24F3               	addwf	prodl,w,c
  9051  002C76  6ED9               	movwf	fsr2l,c
  9052  002C78  0E02               	movlw	high (_END_DEVICES_Short_Address+1)
  9053  002C7A  20F4               	addwfc	prodh,w,c
  9054  002C7C  6EDA               	movwf	fsr2h,c
  9055  002C7E  50DE               	movf	postinc2,w,c
  9056  002C80                     l10880:
  9057                           
  9058                           ; BSR set to: 1
  9059  002C80  0100               	movlb	0	; () banked
  9060  002C82  2B66               	incf	handle_lost_connection@i& (0+255),f,b
  9061  002C84                     l10882:
  9062                           
  9063                           ; BSR set to: 0
  9064  002C84  51E2               	movf	_end_nodes& (0+255),w,b
  9065  002C86  6F60               	movwf	??_handle_lost_connection& (0+255),b
  9066  002C88  6B61               	clrf	(??_handle_lost_connection+1)& (0+255),b
  9067  002C8A  2B60               	incf	??_handle_lost_connection& (0+255),f,b
  9068  002C8C  0E00               	movlw	0
  9069  002C8E  2361               	addwfc	(??_handle_lost_connection+1)& (0+255),f,b
  9070  002C90  5166               	movf	handle_lost_connection@i& (0+255),w,b
  9071  002C92  6F62               	movwf	(??_handle_lost_connection+2)& (0+255),b
  9072  002C94  6B63               	clrf	(??_handle_lost_connection+3)& (0+255),b
  9073  002C96  5160               	movf	??_handle_lost_connection& (0+255),w,b
  9074  002C98  5D62               	subwf	(??_handle_lost_connection+2)& (0+255),w,b
  9075  002C9A  5163               	movf	(??_handle_lost_connection+3)& (0+255),w,b
  9076  002C9C  0A80               	xorlw	128
  9077  002C9E  6F64               	movwf	(??_handle_lost_connection+4)& (0+255),b
  9078  002CA0  5161               	movf	(??_handle_lost_connection+1)& (0+255),w,b
  9079  002CA2  0A80               	xorlw	128
  9080  002CA4  5964               	subwfb	(??_handle_lost_connection+4)& (0+255),w,b
  9081  002CA6  E3D6               	bnc	l10874
  9082                           
  9083                           ; BSR set to: 0
  9084  002CA8  0012               	return		;funcret
  9085  002CAA                     __end_of_handle_lost_connection:
  9086                           	opt stack 0
  9087                           tblptru	equ	0xFF8
  9088                           tblptrh	equ	0xFF7
  9089                           tblptrl	equ	0xFF6
  9090                           tablat	equ	0xFF5
  9091                           prodh	equ	0xFF4
  9092                           prodl	equ	0xFF3
  9093                           intcon	equ	0xFF2
  9094                           intcon2	equ	0xFF1
  9095                           intcon3	equ	0xFF0
  9096                           postinc0	equ	0xFEE
  9097                           wreg	equ	0xFE8
  9098                           indf1	equ	0xFE7
  9099                           postdec1	equ	0xFE5
  9100                           fsr1h	equ	0xFE2
  9101                           fsr1l	equ	0xFE1
  9102                           indf2	equ	0xFDF
  9103                           postinc2	equ	0xFDE
  9104                           postdec2	equ	0xFDD
  9105                           fsr2h	equ	0xFDA
  9106                           fsr2l	equ	0xFD9
  9107                           status	equ	0xFD8
  9108                           
  9109 ;; *************** function _SW_Ack_SrED *****************
  9110 ;; Defined at:
  9111 ;;		line 2092 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;  Dest_Addr       2   49[BANK0 ] PTR unsigned char 
  9114 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;		None
  9117 ;; Return value:  Size  Location     Type
  9118 ;;                  1    wreg      unsigned char 
  9119 ;; Registers used:
  9120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9121 ;; Tracked objects:
  9122 ;;		On entry : F/0
  9123 ;;		On exit  : F/0
  9124 ;;		Unchanged: 0/0
  9125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9126 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9129 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9130 ;;Total ram usage:        2 bytes
  9131 ;; Hardware stack levels used:    1
  9132 ;; Hardware stack levels required when called:   11
  9133 ;; This function calls:
  9134 ;;		_SendPacket
  9135 ;; This function is called by:
  9136 ;;		_P2PTasks
  9137 ;; This function uses a non-reentrant model
  9138 ;;
  9139                           
  9140                           	psect	text31
  9141  003226                     __ptext31:
  9142                           	opt stack 0
  9143  003226                     _SW_Ack_SrED:
  9144                           	opt stack 14
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;miwi_p2p.c: 2094: {TxData = 0;};
  9148                           
  9149                           ; BSR set to: 0
  9150                           ;incstack = 0
  9151  003226  6BDF               	clrf	_TxData& (0+255),b
  9152                           
  9153                           ; BSR set to: 0
  9154                           ;miwi_p2p.c: 2095: TxBuffer[TxData++] = 0xDA;
  9155  003228  0E65               	movlw	low _TxBuffer
  9156  00322A  25DF               	addwf	_TxData& (0+255),w,b
  9157  00322C  6ED9               	movwf	fsr2l,c
  9158  00322E  6ADA               	clrf	fsr2h,c
  9159  003230  0E01               	movlw	high _TxBuffer
  9160  003232  22DA               	addwfc	fsr2h,f,c
  9161  003234  0EDA               	movlw	218
  9162  003236  6EDF               	movwf	indf2,c
  9163                           
  9164                           ; BSR set to: 0
  9165  003238  2BDF               	incf	_TxData& (0+255),f,b
  9166                           
  9167                           ; BSR set to: 0
  9168                           ;miwi_p2p.c: 2097: return SendPacket(0, Dest_Addr, 1, 0);
  9169                           ;	Return value of _SW_Ack_SrED is never used
  9170  00323A  C091  F087         	movff	SW_Ack_SrED@Dest_Addr,SendPacket@DestinationAddress
  9171  00323E  C092  F088         	movff	SW_Ack_SrED@Dest_Addr+1,SendPacket@DestinationAddress+1
  9172  003242  0E01               	movlw	1
  9173  003244  6F89               	movwf	SendPacket@isCommand& (0+255),b
  9174  003246  0E00               	movlw	0
  9175  003248  6B8A               	clrf	SendPacket@SecurityEnabled& (0+255),b
  9176  00324A  EF21  F011         	goto	_SendPacket
  9177  00324E                     __end_of_SW_Ack_SrED:
  9178                           	opt stack 0
  9179                           tblptru	equ	0xFF8
  9180                           tblptrh	equ	0xFF7
  9181                           tblptrl	equ	0xFF6
  9182                           tablat	equ	0xFF5
  9183                           prodh	equ	0xFF4
  9184                           prodl	equ	0xFF3
  9185                           intcon	equ	0xFF2
  9186                           intcon2	equ	0xFF1
  9187                           intcon3	equ	0xFF0
  9188                           postinc0	equ	0xFEE
  9189                           wreg	equ	0xFE8
  9190                           indf1	equ	0xFE7
  9191                           postdec1	equ	0xFE5
  9192                           fsr1h	equ	0xFE2
  9193                           fsr1l	equ	0xFE1
  9194                           indf2	equ	0xFDF
  9195                           postinc2	equ	0xFDE
  9196                           postdec2	equ	0xFDD
  9197                           fsr2h	equ	0xFDA
  9198                           fsr2l	equ	0xFD9
  9199                           status	equ	0xFD8
  9200                           
  9201 ;; *************** function _MiMAC_ReceivedPacket *****************
  9202 ;; Defined at:
  9203 ;;		line 851 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;		None
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;  PayloadIndex    1   22[BANK0 ] unsigned char 
  9208 ;;  j               1    0        unsigned char 
  9209 ;;  currentTick     4   18[BANK0 ] struct _MIWI_TICK
  9210 ;;  i               1   23[BANK0 ] unsigned char 
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  1    wreg      unsigned char 
  9213 ;; Registers used:
  9214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9215 ;; Tracked objects:
  9216 ;;		On entry : F/0
  9217 ;;		On exit  : F/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9221 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9222 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9223 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9224 ;;Total ram usage:       14 bytes
  9225 ;; Hardware stack levels used:    1
  9226 ;; Hardware stack levels required when called:    6
  9227 ;; This function calls:
  9228 ;;		_MiWi_TickGet
  9229 ;; This function is called by:
  9230 ;;		_P2PTasks
  9231 ;; This function uses a non-reentrant model
  9232 ;;
  9233                           
  9234                           	psect	text32
  9235  0017D6                     __ptext32:
  9236                           	opt stack 0
  9237  0017D6                     _MiMAC_ReceivedPacket:
  9238                           	opt stack 19
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;drv_mrf_miwi_89xa.c: 853: uint8_t i;
  9242                           ;drv_mrf_miwi_89xa.c: 854: MIWI_TICK currentTick;
  9243                           ;drv_mrf_miwi_89xa.c: 858: for(i = 0; i < 5; i++)
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;incstack = 0
  9247  0017D6  6B77               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
  9248  0017D8                     l10926:
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;drv_mrf_miwi_89xa.c: 859: {
  9252                           ;drv_mrf_miwi_89xa.c: 860: currentTick = MiWi_TickGet();
  9253  0017D8  ECDA  F016         	call	_MiWi_TickGet	;wreg free
  9254  0017DC  C060  F072         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
  9255  0017E0  C061  F073         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
  9256  0017E4  C062  F074         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
  9257  0017E8  C063  F075         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;drv_mrf_miwi_89xa.c: 861: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
  9261                           ;drv_mrf_miwi_89xa.c: 862: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(8
      +                          000000)/32)) )
  9262  0017EC  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9263  0017EE  0D06               	mullw	6
  9264  0017F0  0E37               	movlw	low _AckInfo
  9265  0017F2  24F3               	addwf	prodl,w,c
  9266  0017F4  6ED9               	movwf	fsr2l,c
  9267  0017F6  0E01               	movlw	high _AckInfo
  9268  0017F8  20F4               	addwfc	prodh,w,c
  9269  0017FA  6EDA               	movwf	fsr2h,c
  9270  0017FC  50DF               	movf	indf2,w,c
  9271  0017FE  E03F               	bz	l10936
  9272                           
  9273                           ; BSR set to: 0
  9274  001800  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9275  001802  0D06               	mullw	6
  9276  001804  0E39               	movlw	low (_AckInfo+2)
  9277  001806  24F3               	addwf	prodl,w,c
  9278  001808  6ED9               	movwf	fsr2l,c
  9279  00180A  0E01               	movlw	high (_AckInfo+2)
  9280  00180C  20F4               	addwfc	prodh,w,c
  9281  00180E  6EDA               	movwf	fsr2h,c
  9282  001810  5172               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
  9283  001812  5CDE               	subwf	postinc2,w,c
  9284  001814  5173               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
  9285  001816  58DE               	subwfb	postinc2,w,c
  9286  001818  5174               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
  9287  00181A  58DE               	subwfb	postinc2,w,c
  9288  00181C  5175               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
  9289  00181E  58DE               	subwfb	postinc2,w,c
  9290  001820  E22E               	bc	l10936
  9291                           
  9292                           ; BSR set to: 0
  9293  001822  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9294  001824  0D06               	mullw	6
  9295  001826  0E39               	movlw	low (_AckInfo+2)
  9296  001828  24F3               	addwf	prodl,w,c
  9297  00182A  6ED9               	movwf	fsr2l,c
  9298  00182C  0E01               	movlw	high (_AckInfo+2)
  9299  00182E  20F4               	addwfc	prodh,w,c
  9300  001830  6EDA               	movwf	fsr2h,c
  9301  001832  CFDE F06A          	movff	postinc2,??_MiMAC_ReceivedPacket
  9302  001836  CFDE F06B          	movff	postinc2,??_MiMAC_ReceivedPacket+1
  9303  00183A  CFDE F06C          	movff	postinc2,??_MiMAC_ReceivedPacket+2
  9304  00183E  CFDE F06D          	movff	postinc2,??_MiMAC_ReceivedPacket+3
  9305  001842  516A               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9306  001844  5D72               	subwf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
  9307  001846  6F6E               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
  9308  001848  516B               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9309  00184A  5973               	subwfb	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
  9310  00184C  6F6F               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
  9311  00184E  516C               	movf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
  9312  001850  5974               	subwfb	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
  9313  001852  6F70               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
  9314  001854  516D               	movf	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
  9315  001856  5975               	subwfb	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
  9316  001858  6F71               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
  9317  00185A  5171               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
  9318  00185C  E107               	bnz	u10860
  9319  00185E  0E91               	movlw	145
  9320  001860  5D6E               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
  9321  001862  0ED0               	movlw	208
  9322  001864  596F               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
  9323  001866  0E03               	movlw	3
  9324  001868  5970               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
  9325  00186A  E309               	bnc	l10936
  9326  00186C                     u10860:
  9327                           
  9328                           ; BSR set to: 0
  9329                           ;drv_mrf_miwi_89xa.c: 863: {
  9330                           ;drv_mrf_miwi_89xa.c: 864: AckInfo[i].Valid = 0;
  9331  00186C  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9332  00186E  0D06               	mullw	6
  9333  001870  0E37               	movlw	low _AckInfo
  9334  001872  24F3               	addwf	prodl,w,c
  9335  001874  6ED9               	movwf	fsr2l,c
  9336  001876  0E01               	movlw	high _AckInfo
  9337  001878  20F4               	addwfc	prodh,w,c
  9338  00187A  6EDA               	movwf	fsr2h,c
  9339  00187C  6ADF               	clrf	indf2,c
  9340  00187E                     l10936:
  9341                           
  9342                           ; BSR set to: 0
  9343  00187E  2B77               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
  9344                           
  9345                           ; BSR set to: 0
  9346  001880  0E04               	movlw	4
  9347  001882  6577               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
  9348  001884  D7A9               	goto	l10926
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;drv_mrf_miwi_89xa.c: 865: }
  9352                           ;drv_mrf_miwi_89xa.c: 866: }
  9353                           ;drv_mrf_miwi_89xa.c: 869: if( ReceivedBankIndex != 0xFF )
  9354  001886  29DD               	incf	_ReceivedBankIndex& (0+255),w,b
  9355  001888  E001               	bz	l155
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;drv_mrf_miwi_89xa.c: 870: {
  9359                           ;drv_mrf_miwi_89xa.c: 871: return 0;
  9360  00188A  0C00               	retlw	0
  9361  00188C                     l155:
  9362                           
  9363                           ; BSR set to: 0
  9364                           ;drv_mrf_miwi_89xa.c: 872: }
  9365                           ;drv_mrf_miwi_89xa.c: 874: for(i = 0; i < 2; i++)
  9366  00188C  6B77               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
  9367  00188E                     l10950:
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;drv_mrf_miwi_89xa.c: 875: {
  9371                           ;drv_mrf_miwi_89xa.c: 876: if( RxPacket[i].flags.bits.Valid )
  9372  00188E  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9373  001890  0D39               	mullw	57
  9374  001892  0E50               	movlw	low _RxPacket
  9375  001894  24F3               	addwf	prodl,w,c
  9376  001896  6ED9               	movwf	fsr2l,c
  9377  001898  0E02               	movlw	high _RxPacket
  9378  00189A  20F4               	addwfc	prodh,w,c
  9379  00189C  6EDA               	movwf	fsr2h,c
  9380  00189E  A0DF               	btfss	indf2,0,c
  9381  0018A0  D055               	goto	l10978
  9382                           
  9383                           ; BSR set to: 2
  9384                           ;drv_mrf_miwi_89xa.c: 877: {
  9385                           ;drv_mrf_miwi_89xa.c: 878: uint8_t PayloadIndex;
  9386                           ;drv_mrf_miwi_89xa.c: 879: uint8_t j;
  9387                           ;drv_mrf_miwi_89xa.c: 881: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
  9388  0018A2  0100               	movlb	0	; () banked
  9389  0018A4  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9390  0018A6  0D39               	mullw	57
  9391  0018A8  0E51               	movlw	low (_RxPacket+1)
  9392  0018AA  24F3               	addwf	prodl,w,c
  9393  0018AC  6ED9               	movwf	fsr2l,c
  9394  0018AE  0E02               	movlw	high (_RxPacket+1)
  9395  0018B0  20F4               	addwfc	prodh,w,c
  9396  0018B2  6EDA               	movwf	fsr2h,c
  9397  0018B4  50DF               	movf	indf2,w,c
  9398  0018B6  6E36               	movwf	_MACRxPacket,c
  9399                           
  9400                           ;drv_mrf_miwi_89xa.c: 882: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
  9401  0018B8  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9402  0018BA  0D39               	mullw	57
  9403  0018BC  0E88               	movlw	low (_RxPacket+56)
  9404  0018BE  24F3               	addwf	prodl,w,c
  9405  0018C0  6ED9               	movwf	fsr2l,c
  9406  0018C2  0E02               	movlw	high (_RxPacket+56)
  9407  0018C4  20F4               	addwfc	prodh,w,c
  9408  0018C6  6EDA               	movwf	fsr2h,c
  9409  0018C8  50DF               	movf	indf2,w,c
  9410  0018CA  6E3B               	movwf	_MACRxPacket+5,c
  9411                           
  9412                           ; BSR set to: 0
  9413                           ;drv_mrf_miwi_89xa.c: 883: PayloadIndex = 2;
  9414  0018CC  0E02               	movlw	2
  9415  0018CE  6F76               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;drv_mrf_miwi_89xa.c: 885: if( MACRxPacket.flags.bits.destPrsnt )
  9419  0018D0  AC36               	btfss	_MACRxPacket,6,c
  9420  0018D2  D005               	goto	l10960
  9421                           
  9422                           ; BSR set to: 0
  9423                           ;drv_mrf_miwi_89xa.c: 886: {
  9424                           ;drv_mrf_miwi_89xa.c: 887: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
  9425  0018D4  31D1               	rrcf	_MACInitParams& (0+255),w,b
  9426  0018D6  32E8               	rrcf	wreg,f,c
  9427  0018D8  32E8               	rrcf	wreg,f,c
  9428  0018DA  0B0F               	andlw	15
  9429  0018DC  2776               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
  9430  0018DE                     l10960:
  9431                           
  9432                           ; BSR set to: 0
  9433                           ;drv_mrf_miwi_89xa.c: 888: }
  9434                           ;drv_mrf_miwi_89xa.c: 890: if( MACRxPacket.flags.bits.sourcePrsnt )
  9435  0018DE  AE36               	btfss	_MACRxPacket,7,c
  9436  0018E0  D019               	goto	l161
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;drv_mrf_miwi_89xa.c: 891: {
  9440                           ;drv_mrf_miwi_89xa.c: 892: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
  9441  0018E2  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9442  0018E4  0D39               	mullw	57
  9443  0018E6  0E50               	movlw	low _RxPacket
  9444  0018E8  6F6A               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
  9445  0018EA  0E02               	movlw	high _RxPacket
  9446  0018EC  6F6B               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
  9447  0018EE  2B6A               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9448  0018F0  0E00               	movlw	0
  9449  0018F2  236B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9450  0018F4  50F3               	movf	prodl,w,c
  9451  0018F6  276A               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9452  0018F8  50F4               	movf	prodh,w,c
  9453  0018FA  236B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9454  0018FC  5176               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9455  0018FE  256A               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9456  001900  6E37               	movwf	_MACRxPacket+1,c
  9457  001902  0E00               	movlw	0
  9458  001904  216B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9459  001906  6E38               	movwf	_MACRxPacket+2,c
  9460                           
  9461                           ; BSR set to: 0
  9462                           ;drv_mrf_miwi_89xa.c: 893: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
  9463  001908  31D1               	rrcf	_MACInitParams& (0+255),w,b
  9464  00190A  32E8               	rrcf	wreg,f,c
  9465  00190C  32E8               	rrcf	wreg,f,c
  9466  00190E  0B0F               	andlw	15
  9467  001910  2776               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
  9468                           
  9469                           ;drv_mrf_miwi_89xa.c: 894: }
  9470  001912  D002               	goto	l10966
  9471  001914                     l161:
  9472                           
  9473                           ; BSR set to: 0
  9474                           ;drv_mrf_miwi_89xa.c: 895: else
  9475                           ;drv_mrf_miwi_89xa.c: 896: {
  9476                           ;drv_mrf_miwi_89xa.c: 897: MACRxPacket.SourceAddress = (0);
  9477  001914  6A37               	clrf	_MACRxPacket+1,c
  9478  001916  6A38               	clrf	_MACRxPacket+2,c
  9479  001918                     l10966:
  9480                           
  9481                           ; BSR set to: 0
  9482                           ;drv_mrf_miwi_89xa.c: 898: }
  9483                           ;drv_mrf_miwi_89xa.c: 998: MACRxPacket.PayloadLen -= PayloadIndex;
  9484  001918  5176               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9485  00191A  5E3B               	subwf	_MACRxPacket+5,f,c
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;drv_mrf_miwi_89xa.c: 1002: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
  9489  00191C  5177               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9490  00191E  0D39               	mullw	57
  9491  001920  0E50               	movlw	low _RxPacket
  9492  001922  6F6A               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
  9493  001924  0E02               	movlw	high _RxPacket
  9494  001926  6F6B               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
  9495  001928  2B6A               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9496  00192A  0E00               	movlw	0
  9497  00192C  236B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9498  00192E  50F3               	movf	prodl,w,c
  9499  001930  276A               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9500  001932  50F4               	movf	prodh,w,c
  9501  001934  236B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9502  001936  5176               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9503  001938  256A               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9504  00193A  6E39               	movwf	_MACRxPacket+3,c
  9505  00193C  0E00               	movlw	0
  9506  00193E  216B               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9507  001940  6E3A               	movwf	_MACRxPacket+4,c
  9508                           
  9509                           ; BSR set to: 0
  9510                           ;drv_mrf_miwi_89xa.c: 1004: MACRxPacket.RSSIValue = RSSILock;
  9511  001942  C0DC  F03C         	movff	_RSSILock,_MACRxPacket+6
  9512                           
  9513                           ; BSR set to: 0
  9514                           ;drv_mrf_miwi_89xa.c: 1007: ReceivedBankIndex = i;
  9515  001946  C077  F0DD         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
  9516                           
  9517                           ; BSR set to: 0
  9518                           ;drv_mrf_miwi_89xa.c: 1008: return 1;
  9519  00194A  0C01               	retlw	1
  9520  00194C                     l10978:
  9521                           
  9522                           ; BSR set to: 2
  9523  00194C  0100               	movlb	0	; () banked
  9524  00194E  2B77               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
  9525                           
  9526                           ; BSR set to: 0
  9527  001950  0E01               	movlw	1
  9528  001952  6577               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
  9529  001954  D79C               	goto	l10950
  9530  001956  0C00               	retlw	0
  9531  001958                     __end_of_MiMAC_ReceivedPacket:
  9532                           	opt stack 0
  9533                           tblptru	equ	0xFF8
  9534                           tblptrh	equ	0xFF7
  9535                           tblptrl	equ	0xFF6
  9536                           tablat	equ	0xFF5
  9537                           prodh	equ	0xFF4
  9538                           prodl	equ	0xFF3
  9539                           intcon	equ	0xFF2
  9540                           intcon2	equ	0xFF1
  9541                           intcon3	equ	0xFF0
  9542                           postinc0	equ	0xFEE
  9543                           wreg	equ	0xFE8
  9544                           indf1	equ	0xFE7
  9545                           postdec1	equ	0xFE5
  9546                           fsr1h	equ	0xFE2
  9547                           fsr1l	equ	0xFE1
  9548                           indf2	equ	0xFDF
  9549                           postinc2	equ	0xFDE
  9550                           postdec2	equ	0xFDD
  9551                           fsr2h	equ	0xFDA
  9552                           fsr2l	equ	0xFD9
  9553                           status	equ	0xFD8
  9554                           
  9555 ;; *************** function _Forward_Packet_PANCr_to_EDy *****************
  9556 ;; Defined at:
  9557 ;;		line 178 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;  fw_payload      2   55[BANK0 ] PTR unsigned char 
  9560 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
  9561 ;;  index           1   57[BANK0 ] unsigned char 
  9562 ;;  EDxAddress      2   58[BANK0 ] PTR unsigned char 
  9563 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  i               1   61[BANK0 ] unsigned char 
  9566 ;;  status          1   60[BANK0 ] unsigned char 
  9567 ;; Return value:  Size  Location     Type
  9568 ;;                  1    wreg      unsigned char 
  9569 ;; Registers used:
  9570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9571 ;; Tracked objects:
  9572 ;;		On entry : F/0
  9573 ;;		On exit  : F/0
  9574 ;;		Unchanged: 0/0
  9575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9576 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9579 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9580 ;;Total ram usage:        7 bytes
  9581 ;; Hardware stack levels used:    1
  9582 ;; Hardware stack levels required when called:   13
  9583 ;; This function calls:
  9584 ;;		_DemoOutput_UnicastFail
  9585 ;;		_MiApp_UnicastConnection
  9586 ;; This function is called by:
  9587 ;;		_P2PTasks
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           	psect	text33
  9592  002416                     __ptext33:
  9593                           	opt stack 0
  9594  002416                     _Forward_Packet_PANCr_to_EDy:
  9595                           	opt stack 12
  9596                           
  9597                           ; BSR set to: 0
  9598                           ;miwi_p2p.c: 180: uint8_t i;
  9599                           ;miwi_p2p.c: 181: bool status;
  9600                           ;miwi_p2p.c: 182: {TxData = 0;};
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;incstack = 0
  9604  002416  6BDF               	clrf	_TxData& (0+255),b
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;miwi_p2p.c: 183: TxBuffer[TxData++] = EDxAddress[0];
  9608  002418  C09A  FFD9         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress,fsr2l
  9609  00241C  C09B  FFDA         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress+1,fsr2h
  9610  002420  0E65               	movlw	low _TxBuffer
  9611  002422  25DF               	addwf	_TxData& (0+255),w,b
  9612  002424  6EE1               	movwf	fsr1l,c
  9613  002426  6AE2               	clrf	fsr1h,c
  9614  002428  0E01               	movlw	high _TxBuffer
  9615  00242A  22E2               	addwfc	fsr1h,f,c
  9616  00242C  CFDF FFE7          	movff	indf2,indf1
  9617                           
  9618                           ; BSR set to: 0
  9619  002430  2BDF               	incf	_TxData& (0+255),f,b
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;miwi_p2p.c: 184: TxBuffer[TxData++] = EDxAddress[1];
  9623  002432  EE20 F001          	lfsr	2,1
  9624  002436  519A               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
  9625  002438  26D9               	addwf	fsr2l,f,c
  9626  00243A  519B               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
  9627  00243C  22DA               	addwfc	fsr2h,f,c
  9628  00243E  0E65               	movlw	low _TxBuffer
  9629  002440  25DF               	addwf	_TxData& (0+255),w,b
  9630  002442  6EE1               	movwf	fsr1l,c
  9631  002444  6AE2               	clrf	fsr1h,c
  9632  002446  0E01               	movlw	high _TxBuffer
  9633  002448  22E2               	addwfc	fsr1h,f,c
  9634  00244A  CFDF FFE7          	movff	indf2,indf1
  9635  00244E  2BDF               	incf	_TxData& (0+255),f,b
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;miwi_p2p.c: 185: TxBuffer[TxData++] = EDxAddress[2];
  9639  002450  EE20 F002          	lfsr	2,2
  9640  002454  519A               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
  9641  002456  26D9               	addwf	fsr2l,f,c
  9642  002458  519B               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
  9643  00245A  22DA               	addwfc	fsr2h,f,c
  9644  00245C  0E65               	movlw	low _TxBuffer
  9645  00245E  25DF               	addwf	_TxData& (0+255),w,b
  9646  002460  6EE1               	movwf	fsr1l,c
  9647  002462  6AE2               	clrf	fsr1h,c
  9648  002464  0E01               	movlw	high _TxBuffer
  9649  002466  22E2               	addwfc	fsr1h,f,c
  9650  002468  CFDF FFE7          	movff	indf2,indf1
  9651                           
  9652                           ; BSR set to: 0
  9653  00246C  2BDF               	incf	_TxData& (0+255),f,b
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;miwi_p2p.c: 186: for(i = 3; i < 35; i++)
  9657  00246E  0E03               	movlw	3
  9658  002470  6F9D               	movwf	Forward_Packet_PANCr_to_EDy@i& (0+255),b
  9659  002472                     l11062:
  9660                           
  9661                           ; BSR set to: 0
  9662                           ;miwi_p2p.c: 187: {
  9663                           ;miwi_p2p.c: 188: TxBuffer[TxData++] = fw_payload[i];
  9664  002472  519D               	movf	Forward_Packet_PANCr_to_EDy@i& (0+255),w,b
  9665  002474  2597               	addwf	Forward_Packet_PANCr_to_EDy@fw_payload& (0+255),w,b
  9666  002476  6ED9               	movwf	fsr2l,c
  9667  002478  0E00               	movlw	0
  9668  00247A  2198               	addwfc	(Forward_Packet_PANCr_to_EDy@fw_payload+1)& (0+255),w,b
  9669  00247C  6EDA               	movwf	fsr2h,c
  9670  00247E  0E65               	movlw	low _TxBuffer
  9671  002480  25DF               	addwf	_TxData& (0+255),w,b
  9672  002482  6EE1               	movwf	fsr1l,c
  9673  002484  6AE2               	clrf	fsr1h,c
  9674  002486  0E01               	movlw	high _TxBuffer
  9675  002488  22E2               	addwfc	fsr1h,f,c
  9676  00248A  CFDF FFE7          	movff	indf2,indf1
  9677                           
  9678                           ; BSR set to: 0
  9679  00248E  2BDF               	incf	_TxData& (0+255),f,b
  9680                           
  9681                           ; BSR set to: 0
  9682  002490  2B9D               	incf	Forward_Packet_PANCr_to_EDy@i& (0+255),f,b
  9683                           
  9684                           ; BSR set to: 0
  9685  002492  0E22               	movlw	34
  9686  002494  659D               	cpfsgt	Forward_Packet_PANCr_to_EDy@i& (0+255),b
  9687  002496  D7ED               	goto	l11062
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;miwi_p2p.c: 189: }
  9691                           ;miwi_p2p.c: 193: status = MiApp_UnicastConnection (index,0) ;
  9692  002498  6B95               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  9693  00249A  5199               	movf	Forward_Packet_PANCr_to_EDy@index& (0+255),w,b
  9694  00249C  EC6D  F018         	call	_MiApp_UnicastConnection
  9695  0024A0  6F9C               	movwf	Forward_Packet_PANCr_to_EDy@status& (0+255),b
  9696                           
  9697                           ; BSR set to: 0
  9698                           ;miwi_p2p.c: 196: if(!status)
  9699  0024A2  519C               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
  9700  0024A4  E102               	bnz	l11076
  9701                           
  9702                           ; BSR set to: 0
  9703                           ;miwi_p2p.c: 197: {
  9704                           ;miwi_p2p.c: 198: DemoOutput_UnicastFail();
  9705  0024A6  ECE9  F019         	call	_DemoOutput_UnicastFail	;wreg free
  9706  0024AA                     l11076:
  9707                           
  9708                           ; BSR set to: 0
  9709                           ;miwi_p2p.c: 199: }
  9710                           ;miwi_p2p.c: 200: return status;
  9711  0024AA  519C               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
  9712                           
  9713                           ; BSR set to: 0
  9714  0024AC  0012               	return		;funcret
  9715  0024AE                     __end_of_Forward_Packet_PANCr_to_EDy:
  9716                           	opt stack 0
  9717                           tblptru	equ	0xFF8
  9718                           tblptrh	equ	0xFF7
  9719                           tblptrl	equ	0xFF6
  9720                           tablat	equ	0xFF5
  9721                           prodh	equ	0xFF4
  9722                           prodl	equ	0xFF3
  9723                           intcon	equ	0xFF2
  9724                           intcon2	equ	0xFF1
  9725                           intcon3	equ	0xFF0
  9726                           postinc0	equ	0xFEE
  9727                           wreg	equ	0xFE8
  9728                           indf1	equ	0xFE7
  9729                           postdec1	equ	0xFE5
  9730                           fsr1h	equ	0xFE2
  9731                           fsr1l	equ	0xFE1
  9732                           indf2	equ	0xFDF
  9733                           postinc2	equ	0xFDE
  9734                           postdec2	equ	0xFDD
  9735                           fsr2h	equ	0xFDA
  9736                           fsr2l	equ	0xFD9
  9737                           status	equ	0xFD8
  9738                           
  9739 ;; *************** function _MiApp_UnicastConnection *****************
  9740 ;; Defined at:
  9741 ;;		line 1764 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;  ConnectionIn    1    wreg     unsigned char 
  9744 ;;  SecEn           1   53[BANK0 ] unsigned char 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;  ConnectionIn    1   54[BANK0 ] unsigned char 
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      unsigned char 
  9749 ;; Registers used:
  9750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9751 ;; Tracked objects:
  9752 ;;		On entry : F/0
  9753 ;;		On exit  : F/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9756 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9759 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9760 ;;Total ram usage:        2 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:   12
  9763 ;; This function calls:
  9764 ;;		_MiApp_UnicastAddress
  9765 ;; This function is called by:
  9766 ;;		_Forward_Packet_PANCr_to_EDy
  9767 ;;		_run_star_demo
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text34
  9772  0030DA                     __ptext34:
  9773                           	opt stack 0
  9774  0030DA                     _MiApp_UnicastConnection:
  9775                           	opt stack 12
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;incstack = 0
  9779                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
  9780  0030DA  6F96               	movwf	MiApp_UnicastConnection@ConnectionIndex& (0+255),b
  9781                           
  9782                           ;miwi_p2p.c: 1767: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
  9783  0030DC  0100               	movlb	0	; () banked
  9784  0030DE  5196               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  9785  0030E0  0D0E               	mullw	14
  9786  0030E2  0ECE               	movlw	low (_ConnectionTable+12)
  9787  0030E4  24F3               	addwf	prodl,w,c
  9788  0030E6  6ED9               	movwf	fsr2l,c
  9789  0030E8  0E02               	movlw	high (_ConnectionTable+12)
  9790  0030EA  20F4               	addwfc	prodh,w,c
  9791  0030EC  6EDA               	movwf	fsr2h,c
  9792  0030EE  AEDF               	btfss	indf2,7,c
  9793  0030F0  0C00               	retlw	0
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;miwi_p2p.c: 1768: {
  9797                           ;miwi_p2p.c: 1801: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
  9798  0030F2  5196               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  9799  0030F4  0D0E               	mullw	14
  9800  0030F6  0EC6               	movlw	low (_ConnectionTable+4)
  9801  0030F8  24F3               	addwf	prodl,w,c
  9802  0030FA  6F91               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
  9803  0030FC  0E02               	movlw	high (_ConnectionTable+4)
  9804  0030FE  20F4               	addwfc	prodh,w,c
  9805  003100  6F92               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
  9806  003102  0E01               	movlw	1
  9807  003104  6F93               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  9808  003106  C095  F094         	movff	MiApp_UnicastConnection@SecEn,MiApp_UnicastAddress@SecEn
  9809  00310A  EF39  F01A         	goto	_MiApp_UnicastAddress	;wreg free
  9810  00310E                     __end_of_MiApp_UnicastConnection:
  9811                           	opt stack 0
  9812                           tblptru	equ	0xFF8
  9813                           tblptrh	equ	0xFF7
  9814                           tblptrl	equ	0xFF6
  9815                           tablat	equ	0xFF5
  9816                           prodh	equ	0xFF4
  9817                           prodl	equ	0xFF3
  9818                           intcon	equ	0xFF2
  9819                           intcon2	equ	0xFF1
  9820                           intcon3	equ	0xFF0
  9821                           postinc0	equ	0xFEE
  9822                           wreg	equ	0xFE8
  9823                           indf1	equ	0xFE7
  9824                           postdec1	equ	0xFE5
  9825                           fsr1h	equ	0xFE2
  9826                           fsr1l	equ	0xFE1
  9827                           indf2	equ	0xFDF
  9828                           postinc2	equ	0xFDE
  9829                           postdec2	equ	0xFDD
  9830                           fsr2h	equ	0xFDA
  9831                           fsr2l	equ	0xFD9
  9832                           status	equ	0xFD8
  9833                           
  9834 ;; *************** function _MiApp_UnicastAddress *****************
  9835 ;; Defined at:
  9836 ;;		line 1843 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9837 ;; Parameters:    Size  Location     Type
  9838 ;;  DestinationA    2   49[BANK0 ] PTR unsigned char 
  9839 ;;		 -> ConnectionTable(280), 
  9840 ;;  PermanentAdd    1   51[BANK0 ] unsigned char 
  9841 ;;  SecEn           1   52[BANK0 ] unsigned char 
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;		None
  9844 ;; Return value:  Size  Location     Type
  9845 ;;                  1    wreg      unsigned char 
  9846 ;; Registers used:
  9847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9848 ;; Tracked objects:
  9849 ;;		On entry : F/0
  9850 ;;		On exit  : F/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9853 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9856 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9857 ;;Total ram usage:        4 bytes
  9858 ;; Hardware stack levels used:    1
  9859 ;; Hardware stack levels required when called:   11
  9860 ;; This function calls:
  9861 ;;		_SendPacket
  9862 ;; This function is called by:
  9863 ;;		_MiApp_UnicastConnection
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           	psect	text35
  9868  003472                     __ptext35:
  9869                           	opt stack 0
  9870  003472                     _MiApp_UnicastAddress:
  9871                           	opt stack 12
  9872                           
  9873                           ; BSR set to: 0
  9874                           ;miwi_p2p.c: 1876: return SendPacket(0, DestinationAddress, 0, SecEn);
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;incstack = 0
  9878  003472  C091  F087         	movff	MiApp_UnicastAddress@DestinationAddress,SendPacket@DestinationAddress
  9879  003476  C092  F088         	movff	MiApp_UnicastAddress@DestinationAddress+1,SendPacket@DestinationAddress+1
  9880  00347A  0E00               	movlw	0
  9881  00347C  6B89               	clrf	SendPacket@isCommand& (0+255),b
  9882  00347E  C094  F08A         	movff	MiApp_UnicastAddress@SecEn,SendPacket@SecurityEnabled
  9883  003482  EF21  F011         	goto	_SendPacket
  9884  003486                     __end_of_MiApp_UnicastAddress:
  9885                           	opt stack 0
  9886                           tblptru	equ	0xFF8
  9887                           tblptrh	equ	0xFF7
  9888                           tblptrl	equ	0xFF6
  9889                           tablat	equ	0xFF5
  9890                           prodh	equ	0xFF4
  9891                           prodl	equ	0xFF3
  9892                           intcon	equ	0xFF2
  9893                           intcon2	equ	0xFF1
  9894                           intcon3	equ	0xFF0
  9895                           postinc0	equ	0xFEE
  9896                           wreg	equ	0xFE8
  9897                           indf1	equ	0xFE7
  9898                           postdec1	equ	0xFE5
  9899                           fsr1h	equ	0xFE2
  9900                           fsr1l	equ	0xFE1
  9901                           indf2	equ	0xFDF
  9902                           postinc2	equ	0xFDE
  9903                           postdec2	equ	0xFDD
  9904                           fsr2h	equ	0xFDA
  9905                           fsr2l	equ	0xFD9
  9906                           status	equ	0xFD8
  9907                           
  9908 ;; *************** function _SendPacket *****************
  9909 ;; Defined at:
  9910 ;;		line 1611 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;  Broadcast       1    wreg     unsigned char 
  9913 ;;  DestinationA    2   39[BANK0 ] PTR unsigned char 
  9914 ;;		 -> ConnectionTable(280), NULL(0), RxPacket.Payload(55), RxPacket(114), 
  9915 ;;  isCommand       1   41[BANK0 ] unsigned char 
  9916 ;;  SecurityEnab    1   42[BANK0 ] unsigned char 
  9917 ;; Auto vars:     Size  Location     Type
  9918 ;;  Broadcast       1   45[BANK0 ] unsigned char 
  9919 ;;  tParam          3   46[BANK0 ] struct .
  9920 ;;  status          1   44[BANK0 ] unsigned char 
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  1    wreg      unsigned char 
  9923 ;; Registers used:
  9924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9925 ;; Tracked objects:
  9926 ;;		On entry : F/0
  9927 ;;		On exit  : F/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9930 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9931 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9932 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9933 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9934 ;;Total ram usage:       10 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:   10
  9937 ;; This function calls:
  9938 ;;		_MiMAC_SendPacket
  9939 ;; This function is called by:
  9940 ;;		_P2PTasks
  9941 ;;		_CheckForData
  9942 ;;		_MiApp_UnicastAddress
  9943 ;;		_MiApp_UnicastStar
  9944 ;;		_SW_Ack_SrED
  9945 ;;		_MiApp_EstablishConnection
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949                           	psect	text36
  9950  002242                     __ptext36:
  9951                           	opt stack 0
  9952  002242                     _SendPacket:
  9953                           	opt stack 17
  9954                           
  9955                           ; BSR set to: 0
  9956                           ;incstack = 0
  9957                           ;SendPacket@Broadcast stored from wreg
  9958  002242  6F8D               	movwf	SendPacket@Broadcast& (0+255),b
  9959                           
  9960                           ;miwi_p2p.c: 1617: MAC_TRANS_PARAM tParam;
  9961                           ;miwi_p2p.c: 1618: bool status;
  9962                           ;miwi_p2p.c: 1620: tParam.flags.Val = 0;
  9963  002244  0100               	movlb	0	; () banked
  9964  002246  6B8E               	clrf	SendPacket@tParam& (0+255),b
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;miwi_p2p.c: 1621: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
  9968  002248  5189               	movf	SendPacket@isCommand& (0+255),w,b
  9969  00224A  E003               	bz	u9980
  9970  00224C  6B8B               	clrf	??_SendPacket& (0+255),b
  9971  00224E  2B8B               	incf	??_SendPacket& (0+255),f,b
  9972  002250  D002               	goto	u9998
  9973  002252                     u9980:
  9974  002252  0100               	movlb	0	; () banked
  9975  002254  6B8B               	clrf	??_SendPacket& (0+255),b
  9976  002256                     u9998:
  9977  002256  518E               	movf	SendPacket@tParam& (0+255),w,b
  9978  002258  198B               	xorwf	??_SendPacket& (0+255),w,b
  9979  00225A  0BFC               	andlw	-4
  9980  00225C  198B               	xorwf	??_SendPacket& (0+255),w,b
  9981  00225E  6F8E               	movwf	SendPacket@tParam& (0+255),b
  9982                           
  9983                           ;miwi_p2p.c: 1622: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
  9984  002260  518D               	movf	SendPacket@Broadcast& (0+255),w,b
  9985  002262  E103               	bnz	u10000
  9986  002264  6B8B               	clrf	??_SendPacket& (0+255),b
  9987  002266  2B8B               	incf	??_SendPacket& (0+255),f,b
  9988  002268  D002               	goto	u10018
  9989  00226A                     u10000:
  9990  00226A  0100               	movlb	0	; () banked
  9991  00226C  6B8B               	clrf	??_SendPacket& (0+255),b
  9992  00226E                     u10018:
  9993  00226E  3B8B               	swapf	??_SendPacket& (0+255),f,b
  9994  002270  478B               	rlncf	??_SendPacket& (0+255),f,b
  9995  002272  518E               	movf	SendPacket@tParam& (0+255),w,b
  9996  002274  198B               	xorwf	??_SendPacket& (0+255),w,b
  9997  002276  0BDF               	andlw	-33
  9998  002278  198B               	xorwf	??_SendPacket& (0+255),w,b
  9999  00227A  6F8E               	movwf	SendPacket@tParam& (0+255),b
 10000                           
 10001                           ; BSR set to: 0
 10002                           ;miwi_p2p.c: 1623: tParam.flags.bits.broadcast = Broadcast;
 10003  00227C  B18D               	btfsc	SendPacket@Broadcast& (0+255),0,b
 10004  00227E  D002               	bra	u10025
 10005  002280  958E               	bcf	SendPacket@tParam& (0+255),2,b
 10006  002282  D002               	bra	u10026
 10007  002284                     u10025:
 10008  002284  0100               	movlb	0	; () banked
 10009  002286  858E               	bsf	SendPacket@tParam& (0+255),2,b
 10010  002288                     u10026:
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;miwi_p2p.c: 1624: tParam.flags.bits.secEn = SecurityEnabled;
 10014  002288  B18A               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
 10015  00228A  D002               	bra	u10035
 10016  00228C  978E               	bcf	SendPacket@tParam& (0+255),3,b
 10017  00228E  D002               	bra	u10036
 10018  002290                     u10035:
 10019  002290  0100               	movlb	0	; () banked
 10020  002292  878E               	bsf	SendPacket@tParam& (0+255),3,b
 10021  002294                     u10036:
 10022                           
 10023                           ;miwi_p2p.c: 1633: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
 10024  002294  518D               	movf	SendPacket@Broadcast& (0+255),w,b
 10025  002296  E103               	bnz	u10040
 10026  002298  6B8B               	clrf	??_SendPacket& (0+255),b
 10027  00229A  2B8B               	incf	??_SendPacket& (0+255),f,b
 10028  00229C  D002               	goto	u10058
 10029  00229E                     u10040:
 10030  00229E  0100               	movlb	0	; () banked
 10031  0022A0  6B8B               	clrf	??_SendPacket& (0+255),b
 10032  0022A2                     u10058:
 10033  0022A2  3B8B               	swapf	??_SendPacket& (0+255),f,b
 10034  0022A4  478B               	rlncf	??_SendPacket& (0+255),f,b
 10035  0022A6  478B               	rlncf	??_SendPacket& (0+255),f,b
 10036  0022A8  518E               	movf	SendPacket@tParam& (0+255),w,b
 10037  0022AA  198B               	xorwf	??_SendPacket& (0+255),w,b
 10038  0022AC  0BBF               	andlw	-65
 10039  0022AE  198B               	xorwf	??_SendPacket& (0+255),w,b
 10040  0022B0  6F8E               	movwf	SendPacket@tParam& (0+255),b
 10041                           
 10042                           ; BSR set to: 0
 10043                           ;miwi_p2p.c: 1646: tParam.flags.bits.sourcePrsnt = 1;
 10044  0022B2  8F8E               	bsf	SendPacket@tParam& (0+255),7,b
 10045                           
 10046                           ;miwi_p2p.c: 1649: tParam.DestAddress = DestinationAddress;
 10047  0022B4  C087  F08F         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
 10048  0022B8  C088  F090         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;miwi_p2p.c: 1655: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
 10052  0022BC  C08E  F07E         	movff	SendPacket@tParam,MiMAC_SendPacket@transParam
 10053  0022C0  C08F  F07F         	movff	SendPacket@tParam+1,MiMAC_SendPacket@transParam+1
 10054  0022C4  C090  F080         	movff	SendPacket@tParam+2,MiMAC_SendPacket@transParam+2
 10055  0022C8  0E65               	movlw	low _TxBuffer
 10056  0022CA  6F81               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
 10057  0022CC  0E01               	movlw	high _TxBuffer
 10058  0022CE  6F82               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
 10059  0022D0  C0DF  F083         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
 10060  0022D4  EC0D  F00F         	call	_MiMAC_SendPacket	;wreg free
 10061  0022D8  6F8C               	movwf	SendPacket@status& (0+255),b
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;miwi_p2p.c: 1656: TxData = 0;
 10065  0022DA  6BDF               	clrf	_TxData& (0+255),b
 10066                           
 10067                           ; BSR set to: 0
 10068                           ;miwi_p2p.c: 1658: return status;
 10069  0022DC  518C               	movf	SendPacket@status& (0+255),w,b
 10070                           
 10071                           ; BSR set to: 0
 10072  0022DE  0012               	return		;funcret
 10073  0022E0                     __end_of_SendPacket:
 10074                           	opt stack 0
 10075                           tblptru	equ	0xFF8
 10076                           tblptrh	equ	0xFF7
 10077                           tblptrl	equ	0xFF6
 10078                           tablat	equ	0xFF5
 10079                           prodh	equ	0xFF4
 10080                           prodl	equ	0xFF3
 10081                           intcon	equ	0xFF2
 10082                           intcon2	equ	0xFF1
 10083                           intcon3	equ	0xFF0
 10084                           postinc0	equ	0xFEE
 10085                           wreg	equ	0xFE8
 10086                           indf1	equ	0xFE7
 10087                           postdec1	equ	0xFE5
 10088                           fsr1h	equ	0xFE2
 10089                           fsr1l	equ	0xFE1
 10090                           indf2	equ	0xFDF
 10091                           postinc2	equ	0xFDE
 10092                           postdec2	equ	0xFDD
 10093                           fsr2h	equ	0xFDA
 10094                           fsr2l	equ	0xFD9
 10095                           status	equ	0xFD8
 10096                           
 10097 ;; *************** function _MiMAC_SendPacket *****************
 10098 ;; Defined at:
 10099 ;;		line 728 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  transParam      3   30[BANK0 ] struct .
 10102 ;;  MACPayload      2   33[BANK0 ] PTR unsigned char 
 10103 ;;		 -> TxBuffer(35), 
 10104 ;;  MACPayloadLe    1   35[BANK0 ] unsigned char 
 10105 ;; Auto vars:     Size  Location     Type
 10106 ;;  i               1   38[BANK0 ] unsigned char 
 10107 ;;  TxIndex         1   37[BANK0 ] unsigned char 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1    wreg      unsigned char 
 10110 ;; Registers used:
 10111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10112 ;; Tracked objects:
 10113 ;;		On entry : F/0
 10114 ;;		On exit  : F/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10117 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10118 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10119 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10120 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10121 ;;Total ram usage:        9 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:    9
 10124 ;; This function calls:
 10125 ;;		_TxPacket
 10126 ;; This function is called by:
 10127 ;;		_SendPacket
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           	psect	text37
 10132  001E1A                     __ptext37:
 10133                           	opt stack 0
 10134  001E1A                     _MiMAC_SendPacket:
 10135                           	opt stack 17
 10136                           
 10137                           ; BSR set to: 0
 10138                           ;drv_mrf_miwi_89xa.c: 732: uint8_t i;
 10139                           ;drv_mrf_miwi_89xa.c: 733: uint8_t TxIndex;
 10140                           ;drv_mrf_miwi_89xa.c: 735: if( MACPayloadLen > 35 )
 10141                           
 10142                           ; BSR set to: 0
 10143                           ;incstack = 0
 10144  001E1A  0E23               	movlw	35
 10145  001E1C  6583               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
 10146  001E1E  D001               	goto	l10274
 10147  001E20  0C00               	retlw	0
 10148  001E22                     l10274:
 10149                           
 10150                           ; BSR set to: 0
 10151                           ;drv_mrf_miwi_89xa.c: 738: }
 10152                           ;drv_mrf_miwi_89xa.c: 743: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
 10153  001E22  B57E               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 10154  001E24  D003               	goto	u9790
 10155  001E26  6B84               	clrf	??_MiMAC_SendPacket& (0+255),b
 10156  001E28  2B84               	incf	??_MiMAC_SendPacket& (0+255),f,b
 10157  001E2A  D002               	goto	u9808
 10158  001E2C                     u9790:
 10159  001E2C  0100               	movlb	0	; () banked
 10160  001E2E  6B84               	clrf	??_MiMAC_SendPacket& (0+255),b
 10161  001E30                     u9808:
 10162  001E30  3B84               	swapf	??_MiMAC_SendPacket& (0+255),f,b
 10163  001E32  4784               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 10164  001E34  4784               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
 10165  001E36  517E               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 10166  001E38  1984               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 10167  001E3A  0BBF               	andlw	-65
 10168  001E3C  1984               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
 10169  001E3E  6F7E               	movwf	MiMAC_SendPacket@transParam& (0+255),b
 10170                           
 10171                           ; BSR set to: 0
 10172                           ;drv_mrf_miwi_89xa.c: 747: transParam.flags.bits.sourcePrsnt = 1;
 10173  001E40  8F7E               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 10174                           
 10175                           ;drv_mrf_miwi_89xa.c: 750: if( transParam.flags.bits.packetType == 0x01 )
 10176  001E42  517E               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
 10177  001E44  0B03               	andlw	3
 10178  001E46  06E8               	decf	wreg,f,c
 10179  001E48  E101               	bnz	l137
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;drv_mrf_miwi_89xa.c: 751: {
 10183                           ;drv_mrf_miwi_89xa.c: 752: transParam.flags.bits.sourcePrsnt = 1;
 10184  001E4A  8F7E               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
 10185  001E4C                     l137:
 10186                           
 10187                           ; BSR set to: 0
 10188                           ;drv_mrf_miwi_89xa.c: 753: }
 10189                           ;drv_mrf_miwi_89xa.c: 755: MACTxBuffer[0] = transParam.flags.Val;
 10190  001E4C  C07E  F100         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
 10191                           
 10192                           ;drv_mrf_miwi_89xa.c: 756: MACTxBuffer[1] = MACSeq++;
 10193  001E50  C0D8  F101         	movff	_MACSeq,_MACTxBuffer+1	;volatile
 10194                           
 10195                           ; BSR set to: 0
 10196  001E54  2BD8               	incf	_MACSeq& (0+255),f,b
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;drv_mrf_miwi_89xa.c: 759: TxIndex = 2;
 10200  001E56  0E02               	movlw	2
 10201  001E58  6F85               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
 10202                           
 10203                           ; BSR set to: 0
 10204                           ;drv_mrf_miwi_89xa.c: 761: if( transParam.flags.bits.destPrsnt )
 10205  001E5A  AD7E               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
 10206  001E5C  D01A               	goto	l142
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;drv_mrf_miwi_89xa.c: 762: {
 10210                           ;drv_mrf_miwi_89xa.c: 763: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 10211  001E5E  6B86               	clrf	MiMAC_SendPacket@i& (0+255),b
 10212  001E60  D010               	goto	l10294
 10213  001E62                     l10288:
 10214                           
 10215                           ; BSR set to: 0
 10216                           ;drv_mrf_miwi_89xa.c: 764: {
 10217                           ;drv_mrf_miwi_89xa.c: 765: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
 10218  001E62  5186               	movf	MiMAC_SendPacket@i& (0+255),w,b
 10219  001E64  257F               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 10220  001E66  6ED9               	movwf	fsr2l,c
 10221  001E68  0E00               	movlw	0
 10222  001E6A  2180               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 10223  001E6C  6EDA               	movwf	fsr2h,c
 10224  001E6E  0E00               	movlw	low _MACTxBuffer
 10225  001E70  2585               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 10226  001E72  6EE1               	movwf	fsr1l,c
 10227  001E74  6AE2               	clrf	fsr1h,c
 10228  001E76  0E01               	movlw	high _MACTxBuffer
 10229  001E78  22E2               	addwfc	fsr1h,f,c
 10230  001E7A  CFDF FFE7          	movff	indf2,indf1
 10231                           
 10232                           ; BSR set to: 0
 10233  001E7E  2B85               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 10234                           
 10235                           ; BSR set to: 0
 10236  001E80  2B86               	incf	MiMAC_SendPacket@i& (0+255),f,b
 10237  001E82                     l10294:
 10238                           
 10239                           ; BSR set to: 0
 10240  001E82  31D1               	rrcf	_MACInitParams& (0+255),w,b
 10241  001E84  32E8               	rrcf	wreg,f,c
 10242  001E86  32E8               	rrcf	wreg,f,c
 10243  001E88  0B0F               	andlw	15
 10244  001E8A  6F84               	movwf	??_MiMAC_SendPacket& (0+255),b
 10245  001E8C  5184               	movf	??_MiMAC_SendPacket& (0+255),w,b
 10246  001E8E  5D86               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 10247  001E90  E3E8               	bnc	l10288
 10248  001E92                     l142:
 10249                           
 10250                           ; BSR set to: 0
 10251                           ;drv_mrf_miwi_89xa.c: 771: }
 10252                           ;drv_mrf_miwi_89xa.c: 773: if( transParam.flags.bits.sourcePrsnt )
 10253  001E92  AF7E               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
 10254  001E94  D01A               	goto	l143
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;drv_mrf_miwi_89xa.c: 774: {
 10258                           ;drv_mrf_miwi_89xa.c: 775: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
 10259  001E96  6B86               	clrf	MiMAC_SendPacket@i& (0+255),b
 10260  001E98  D010               	goto	l10304
 10261  001E9A                     l10298:
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;drv_mrf_miwi_89xa.c: 776: {
 10265                           ;drv_mrf_miwi_89xa.c: 777: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
 10266  001E9A  5186               	movf	MiMAC_SendPacket@i& (0+255),w,b
 10267  001E9C  25D2               	addwf	(_MACInitParams+1)& (0+255),w,b
 10268  001E9E  6ED9               	movwf	fsr2l,c
 10269  001EA0  0E00               	movlw	0
 10270  001EA2  21D3               	addwfc	(_MACInitParams+2)& (0+255),w,b
 10271  001EA4  6EDA               	movwf	fsr2h,c
 10272  001EA6  0E00               	movlw	low _MACTxBuffer
 10273  001EA8  2585               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 10274  001EAA  6EE1               	movwf	fsr1l,c
 10275  001EAC  6AE2               	clrf	fsr1h,c
 10276  001EAE  0E01               	movlw	high _MACTxBuffer
 10277  001EB0  22E2               	addwfc	fsr1h,f,c
 10278  001EB2  CFDF FFE7          	movff	indf2,indf1
 10279                           
 10280                           ; BSR set to: 0
 10281  001EB6  2B85               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 10282                           
 10283                           ; BSR set to: 0
 10284  001EB8  2B86               	incf	MiMAC_SendPacket@i& (0+255),f,b
 10285  001EBA                     l10304:
 10286                           
 10287                           ; BSR set to: 0
 10288  001EBA  31D1               	rrcf	_MACInitParams& (0+255),w,b
 10289  001EBC  32E8               	rrcf	wreg,f,c
 10290  001EBE  32E8               	rrcf	wreg,f,c
 10291  001EC0  0B0F               	andlw	15
 10292  001EC2  6F84               	movwf	??_MiMAC_SendPacket& (0+255),b
 10293  001EC4  5184               	movf	??_MiMAC_SendPacket& (0+255),w,b
 10294  001EC6  5D86               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 10295  001EC8  E3E8               	bnc	l10298
 10296  001ECA                     l143:
 10297                           
 10298                           ; BSR set to: 0
 10299                           ;drv_mrf_miwi_89xa.c: 778: }
 10300                           ;drv_mrf_miwi_89xa.c: 780: }
 10301                           ;drv_mrf_miwi_89xa.c: 841: for(i = 0; i < MACPayloadLen; i++)
 10302  001ECA  6B86               	clrf	MiMAC_SendPacket@i& (0+255),b
 10303  001ECC  D010               	goto	l10312
 10304  001ECE                     l10306:
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;drv_mrf_miwi_89xa.c: 842: {
 10308                           ;drv_mrf_miwi_89xa.c: 843: MACTxBuffer[TxIndex++] = MACPayload[i];
 10309  001ECE  5186               	movf	MiMAC_SendPacket@i& (0+255),w,b
 10310  001ED0  2581               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 10311  001ED2  6ED9               	movwf	fsr2l,c
 10312  001ED4  0E00               	movlw	0
 10313  001ED6  2182               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 10314  001ED8  6EDA               	movwf	fsr2h,c
 10315  001EDA  0E00               	movlw	low _MACTxBuffer
 10316  001EDC  2585               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 10317  001EDE  6EE1               	movwf	fsr1l,c
 10318  001EE0  6AE2               	clrf	fsr1h,c
 10319  001EE2  0E01               	movlw	high _MACTxBuffer
 10320  001EE4  22E2               	addwfc	fsr1h,f,c
 10321  001EE6  CFDF FFE7          	movff	indf2,indf1
 10322                           
 10323                           ; BSR set to: 0
 10324  001EEA  2B85               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
 10325                           
 10326                           ; BSR set to: 0
 10327  001EEC  2B86               	incf	MiMAC_SendPacket@i& (0+255),f,b
 10328  001EEE                     l10312:
 10329                           
 10330                           ; BSR set to: 0
 10331  001EEE  5183               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 10332  001EF0  5D86               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 10333  001EF2  E3ED               	bnc	l10306
 10334                           
 10335                           ; BSR set to: 0
 10336                           ;drv_mrf_miwi_89xa.c: 844: }
 10337                           ;drv_mrf_miwi_89xa.c: 846: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
 10338  001EF4  0E00               	movlw	0
 10339  001EF6  B3D1               	btfsc	_MACInitParams& (0+255),1,b
 10340  001EF8  0E01               	movlw	1
 10341  001EFA  6F6A               	movwf	TxPacket@CCA& (0+255),b
 10342  001EFC  5185               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
 10343  001EFE  EFEB  F00D         	goto	_TxPacket
 10344  001F02                     __end_of_MiMAC_SendPacket:
 10345                           	opt stack 0
 10346                           tblptru	equ	0xFF8
 10347                           tblptrh	equ	0xFF7
 10348                           tblptrl	equ	0xFF6
 10349                           tablat	equ	0xFF5
 10350                           prodh	equ	0xFF4
 10351                           prodl	equ	0xFF3
 10352                           intcon	equ	0xFF2
 10353                           intcon2	equ	0xFF1
 10354                           intcon3	equ	0xFF0
 10355                           postinc0	equ	0xFEE
 10356                           wreg	equ	0xFE8
 10357                           indf1	equ	0xFE7
 10358                           postdec1	equ	0xFE5
 10359                           fsr1h	equ	0xFE2
 10360                           fsr1l	equ	0xFE1
 10361                           indf2	equ	0xFDF
 10362                           postinc2	equ	0xFDE
 10363                           postdec2	equ	0xFDD
 10364                           fsr2h	equ	0xFDA
 10365                           fsr2l	equ	0xFD9
 10366                           status	equ	0xFD8
 10367                           
 10368 ;; *************** function _TxPacket *****************
 10369 ;; Defined at:
 10370 ;;		line 288 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10371 ;; Parameters:    Size  Location     Type
 10372 ;;  TxPacketLen     1    wreg     unsigned char 
 10373 ;;  CCA             1   10[BANK0 ] unsigned char 
 10374 ;; Auto vars:     Size  Location     Type
 10375 ;;  TxPacketLen     1   27[BANK0 ] unsigned char 
 10376 ;;  allowedTxFai    1   25[BANK0 ] unsigned char 
 10377 ;;  t2              4   19[BANK0 ] struct _MIWI_TICK
 10378 ;;  t1              4   15[BANK0 ] struct _MIWI_TICK
 10379 ;;  i               1   29[BANK0 ] unsigned char 
 10380 ;;  status          1   28[BANK0 ] unsigned char 
 10381 ;;  rssival         1   26[BANK0 ] unsigned char 
 10382 ;;  reTry           1   24[BANK0 ] unsigned char 
 10383 ;;  CCARetries      1   23[BANK0 ] unsigned char 
 10384 ;; Return value:  Size  Location     Type
 10385 ;;                  1    wreg      unsigned char 
 10386 ;; Registers used:
 10387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10388 ;; Tracked objects:
 10389 ;;		On entry : F/0
 10390 ;;		On exit  : F/0
 10391 ;;		Unchanged: 0/0
 10392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10393 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10394 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10395 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10396 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10397 ;;Total ram usage:       20 bytes
 10398 ;; Hardware stack levels used:    1
 10399 ;; Hardware stack levels required when called:    8
 10400 ;; This function calls:
 10401 ;;		_DELAY_10us
 10402 ;;		_MiWi_TickGet
 10403 ;;		_RegisterRead
 10404 ;;		_RegisterSet
 10405 ;;		_SetRFMode
 10406 ;;		_WriteFIFO
 10407 ;; This function is called by:
 10408 ;;		_MiMAC_SendPacket
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           	psect	text38
 10413  001BD6                     __ptext38:
 10414                           	opt stack 0
 10415  001BD6                     _TxPacket:
 10416                           	opt stack 17
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;incstack = 0
 10420                           ;TxPacket@TxPacketLen stored from wreg
 10421  001BD6  6F7B               	movwf	TxPacket@TxPacketLen& (0+255),b
 10422                           
 10423                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 10424                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 10425                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 10426                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 10427                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 10428                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 10429  001BD8  0E03               	movlw	3
 10430  001BDA  0100               	movlb	0	; () banked
 10431  001BDC  6F78               	movwf	TxPacket@reTry& (0+255),b
 10432                           
 10433                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 10434  001BDE  D088               	goto	l10262
 10435  001BE0                     l80:
 10436                           
 10437                           ; BSR set to: 0
 10438                           ;drv_mrf_miwi_89xa.c: 305: {
 10439                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 10440                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 10441  001BE0  6B79               	clrf	TxPacket@allowedTxFailure& (0+255),b
 10442  001BE2                     l81:
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 10446  001BE2  6BE4               	clrf	_hasAck& (0+255),b	;volatile
 10447                           
 10448                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 10449  001BE4  6B77               	clrf	TxPacket@CCARetries& (0+255),b
 10450                           
 10451                           ; BSR set to: 0
 10452                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 10453  001BE6  516A               	movf	TxPacket@CCA& (0+255),w,b
 10454  001BE8  E019               	bz	l82
 10455  001BEA                     l10202:
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 10459  001BEA  0E28               	movlw	40
 10460  001BEC  EC87  F018         	call	_RegisterRead
 10461  001BF0  6F7A               	movwf	TxPacket@rssival& (0+255),b
 10462                           
 10463                           ; BSR set to: 0
 10464                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 10465  001BF2  90D8               	bcf	status,0,c
 10466  001BF4  337A               	rrcf	TxPacket@rssival& (0+255),f,b
 10467                           
 10468                           ; BSR set to: 0
 10469                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 10470  001BF6  0E41               	movlw	65
 10471  001BF8  657A               	cpfsgt	TxPacket@rssival& (0+255),b
 10472  001BFA  D010               	goto	l82
 10473                           
 10474                           ; BSR set to: 0
 10475                           ;drv_mrf_miwi_89xa.c: 326: {
 10476                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 10477  001BFC  2B77               	incf	TxPacket@CCARetries& (0+255),f,b
 10478  001BFE  0577               	decf	TxPacket@CCARetries& (0+255),w,b
 10479  001C00  6F6B               	movwf	??_TxPacket& (0+255),b
 10480  001C02  0E04               	movlw	4
 10481  001C04  656B               	cpfsgt	??_TxPacket& (0+255),b
 10482  001C06  D001               	goto	l10214
 10483  001C08  0C00               	retlw	0
 10484  001C0A                     l10214:
 10485                           
 10486                           ; BSR set to: 0
 10487                           ;drv_mrf_miwi_89xa.c: 331: }
 10488                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
 10489  001C0A  0E01               	movlw	1
 10490  001C0C  6F60               	movwf	DELAY_10us@tenMicroSecondCounter& (0+255),b
 10491  001C0E  0E00               	movlw	0
 10492  001C10  6B61               	clrf	(DELAY_10us@tenMicroSecondCounter+1)& (0+255),b
 10493  001C12  6B62               	clrf	(DELAY_10us@tenMicroSecondCounter+2)& (0+255),b
 10494  001C14  6B63               	clrf	(DELAY_10us@tenMicroSecondCounter+3)& (0+255),b
 10495  001C16  EC91  F01A         	call	_DELAY_10us	;wreg free
 10496                           
 10497                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
 10498  001C1A  D7E7               	goto	l10202
 10499  001C1C                     l82:
 10500                           
 10501                           ; BSR set to: 0
 10502                           ;drv_mrf_miwi_89xa.c: 334: }
 10503                           ;drv_mrf_miwi_89xa.c: 335: }
 10504                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT3IE = 0;
 10505  001C1C  9AF0               	bcf	intcon3,5,c	;volatile
 10506                           
 10507                           ; BSR set to: 0
 10508                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
 10509  001C1E  0E20               	movlw	32
 10510  001C20  ECBB  F015         	call	_SetRFMode
 10511                           
 10512                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
 10513  001C24  0E1A               	movlw	26
 10514  001C26  0100               	movlb	0	; () banked
 10515  001C28  6F62               	movwf	(RegisterSet@setting+1)& (0+255),b
 10516  001C2A  0EC9               	movlw	201
 10517  001C2C  6F61               	movwf	RegisterSet@setting& (0+255),b
 10518  001C2E  ECFE  F018         	call	_RegisterSet	;wreg free
 10519                           
 10520                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
 10521  001C32  0100               	movlb	0	; () banked
 10522  001C34  517B               	movf	TxPacket@TxPacketLen& (0+255),w,b
 10523  001C36  EC3B  F019         	call	_WriteFIFO
 10524                           
 10525                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
 10526  001C3A  0100               	movlb	0	; () banked
 10527  001C3C  6B7D               	clrf	TxPacket@i& (0+255),b
 10528  001C3E  D00B               	goto	l10228
 10529  001C40                     l10224:
 10530                           
 10531                           ; BSR set to: 0
 10532                           ;drv_mrf_miwi_89xa.c: 347: {
 10533                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
 10534  001C40  0E00               	movlw	low _MACTxBuffer
 10535  001C42  257D               	addwf	TxPacket@i& (0+255),w,b
 10536  001C44  6ED9               	movwf	fsr2l,c
 10537  001C46  6ADA               	clrf	fsr2h,c
 10538  001C48  0E01               	movlw	high _MACTxBuffer
 10539  001C4A  22DA               	addwfc	fsr2h,f,c
 10540  001C4C  50DF               	movf	indf2,w,c
 10541  001C4E  EC3B  F019         	call	_WriteFIFO
 10542  001C52  0100               	movlb	0	; () banked
 10543  001C54  2B7D               	incf	TxPacket@i& (0+255),f,b
 10544  001C56                     l10228:
 10545                           
 10546                           ; BSR set to: 0
 10547  001C56  517B               	movf	TxPacket@TxPacketLen& (0+255),w,b
 10548  001C58  5D7D               	subwf	TxPacket@i& (0+255),w,b
 10549  001C5A  E3F2               	bnc	l10224
 10550                           
 10551                           ; BSR set to: 0
 10552                           ;drv_mrf_miwi_89xa.c: 349: }
 10553                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
 10554  001C5C  0E80               	movlw	128
 10555  001C5E  ECBB  F015         	call	_SetRFMode
 10556                           
 10557                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT3IE = 1;
 10558  001C62  8AF0               	bsf	intcon3,5,c	;volatile
 10559  001C64                     l10234:
 10560  001C64  0100               	movlb	0	; () banked
 10561  001C66  51D6               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 10562  001C68  E102               	bnz	l94
 10563                           
 10564                           ; BSR set to: 0
 10565  001C6A  A4F0               	btfss	intcon3,2,c	;volatile
 10566  001C6C  D7FB               	goto	l10234
 10567  001C6E                     l94:
 10568                           
 10569                           ; BSR set to: 0
 10570                           ;drv_mrf_miwi_89xa.c: 358: };
 10571                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
 10572  001C6E  6BD6               	clrf	_IRQ1_Received& (0+255),b	;volatile
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
 10576  001C70  0E20               	movlw	32
 10577  001C72  ECBB  F015         	call	_SetRFMode
 10578                           
 10579                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
 10580  001C76  0E60               	movlw	96
 10581  001C78  ECBB  F015         	call	_SetRFMode
 10582                           
 10583                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
 10584  001C7C  0101               	movlb	1	; () banked
 10585  001C7E  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 10586  001C80  D00E               	goto	l10248
 10587                           
 10588                           ; BSR set to: 1
 10589                           ;drv_mrf_miwi_89xa.c: 368: {
 10590                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
 10591  001C82  C101  F05A         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 10592                           
 10593                           ; BSR set to: 1
 10594                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
 10595  001C86  ECDA  F016         	call	_MiWi_TickGet	;wreg free
 10596  001C8A  C060  F06F         	movff	?_MiWi_TickGet,TxPacket@t1
 10597  001C8E  C061  F070         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 10598  001C92  C062  F071         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 10599  001C96  C063  F072         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 10600  001C9A                     l10246:
 10601                           
 10602                           ; BSR set to: 0
 10603                           ;drv_mrf_miwi_89xa.c: 372: {
 10604                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
 10605  001C9A  51E4               	movf	_hasAck& (0+255),w,b	;volatile
 10606  001C9C  E004               	bz	l10250
 10607  001C9E                     l10248:
 10608                           
 10609                           ;drv_mrf_miwi_89xa.c: 374: {
 10610                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
 10611  001C9E  0E01               	movlw	1
 10612  001CA0  0100               	movlb	0	; () banked
 10613  001CA2  6F7C               	movwf	TxPacket@status& (0+255),b
 10614                           
 10615                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
 10616  001CA4  D02A               	goto	l10264
 10617  001CA6                     l10250:
 10618                           
 10619                           ; BSR set to: 0
 10620                           ;drv_mrf_miwi_89xa.c: 377: }
 10621                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
 10622  001CA6  ECDA  F016         	call	_MiWi_TickGet	;wreg free
 10623  001CAA  C060  F073         	movff	?_MiWi_TickGet,TxPacket@t2
 10624  001CAE  C061  F074         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 10625  001CB2  C062  F075         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 10626  001CB6  C063  F076         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 10627                           
 10628                           ; BSR set to: 0
 10629                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(8000000)/32)/20 )
 10630  001CBA  516F               	movf	TxPacket@t1& (0+255),w,b
 10631  001CBC  5D73               	subwf	TxPacket@t2& (0+255),w,b
 10632  001CBE  6F6B               	movwf	??_TxPacket& (0+255),b
 10633  001CC0  5170               	movf	(TxPacket@t1+1)& (0+255),w,b
 10634  001CC2  5974               	subwfb	(TxPacket@t2+1)& (0+255),w,b
 10635  001CC4  6F6C               	movwf	(??_TxPacket+1)& (0+255),b
 10636  001CC6  5171               	movf	(TxPacket@t1+2)& (0+255),w,b
 10637  001CC8  5975               	subwfb	(TxPacket@t2+2)& (0+255),w,b
 10638  001CCA  6F6D               	movwf	(??_TxPacket+2)& (0+255),b
 10639  001CCC  5172               	movf	(TxPacket@t1+3)& (0+255),w,b
 10640  001CCE  5976               	subwfb	(TxPacket@t2+3)& (0+255),w,b
 10641  001CD0  6F6E               	movwf	(??_TxPacket+3)& (0+255),b
 10642  001CD2  516E               	movf	(??_TxPacket+3)& (0+255),w,b
 10643  001CD4  116D               	iorwf	(??_TxPacket+2)& (0+255),w,b
 10644  001CD6  E105               	bnz	u9750
 10645  001CD8  0ED5               	movlw	213
 10646  001CDA  5D6B               	subwf	??_TxPacket& (0+255),w,b
 10647  001CDC  0E30               	movlw	48
 10648  001CDE  596C               	subwfb	(??_TxPacket+1)& (0+255),w,b
 10649  001CE0  E3DC               	bnc	l10246
 10650  001CE2                     u9750:
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;drv_mrf_miwi_89xa.c: 382: }
 10654                           ;drv_mrf_miwi_89xa.c: 383: }
 10655                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
 10656  001CE2  2B79               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 10657  001CE4  0579               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 10658  001CE6  6F6B               	movwf	??_TxPacket& (0+255),b
 10659  001CE8  0E04               	movlw	4
 10660  001CEA  616B               	cpfslt	??_TxPacket& (0+255),b
 10661  001CEC  D001               	goto	l10262
 10662  001CEE  D779               	goto	l81
 10663  001CF0                     l10262:
 10664                           
 10665                           ; BSR set to: 0
 10666  001CF0  0778               	decf	TxPacket@reTry& (0+255),f,b
 10667  001CF2  2978               	incf	TxPacket@reTry& (0+255),w,b
 10668  001CF4  E001 D774          	bnz	l80
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;drv_mrf_miwi_89xa.c: 394: }
 10672                           ;drv_mrf_miwi_89xa.c: 395: }
 10673                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
 10674  001CF8  6B7C               	clrf	TxPacket@status& (0+255),b
 10675  001CFA                     l10264:
 10676                           
 10677                           ; BSR set to: 0
 10678                           ;drv_mrf_miwi_89xa.c: 399: return status;
 10679  001CFA  517C               	movf	TxPacket@status& (0+255),w,b
 10680                           
 10681                           ; BSR set to: 0
 10682  001CFC  0012               	return		;funcret
 10683  001CFE                     __end_of_TxPacket:
 10684                           	opt stack 0
 10685                           tblptru	equ	0xFF8
 10686                           tblptrh	equ	0xFF7
 10687                           tblptrl	equ	0xFF6
 10688                           tablat	equ	0xFF5
 10689                           prodh	equ	0xFF4
 10690                           prodl	equ	0xFF3
 10691                           intcon	equ	0xFF2
 10692                           intcon2	equ	0xFF1
 10693                           intcon3	equ	0xFF0
 10694                           postinc0	equ	0xFEE
 10695                           wreg	equ	0xFE8
 10696                           indf1	equ	0xFE7
 10697                           postdec1	equ	0xFE5
 10698                           fsr1h	equ	0xFE2
 10699                           fsr1l	equ	0xFE1
 10700                           indf2	equ	0xFDF
 10701                           postinc2	equ	0xFDE
 10702                           postdec2	equ	0xFDD
 10703                           fsr2h	equ	0xFDA
 10704                           fsr2l	equ	0xFD9
 10705                           status	equ	0xFD8
 10706                           
 10707 ;; *************** function _WriteFIFO *****************
 10708 ;; Defined at:
 10709 ;;		line 244 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;  Data            1    wreg     unsigned char 
 10712 ;; Auto vars:     Size  Location     Type
 10713 ;;  Data            1    1[BANK0 ] unsigned char 
 10714 ;;  IRQ1select      1    2[BANK0 ] unsigned char 
 10715 ;; Return value:  Size  Location     Type
 10716 ;;		None               void
 10717 ;; Registers used:
 10718 ;;		wreg, status,2, cstack
 10719 ;; Tracked objects:
 10720 ;;		On entry : F/0
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10725 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10727 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10728 ;;Total ram usage:        2 bytes
 10729 ;; Hardware stack levels used:    1
 10730 ;; Hardware stack levels required when called:    6
 10731 ;; This function calls:
 10732 ;;		_SPI1_Exchange8bit
 10733 ;; This function is called by:
 10734 ;;		_TxPacket
 10735 ;; This function uses a non-reentrant model
 10736 ;;
 10737                           
 10738                           	psect	text39
 10739  003276                     __ptext39:
 10740                           	opt stack 0
 10741  003276                     _WriteFIFO:
 10742                           	opt stack 18
 10743                           
 10744                           ; BSR set to: 0
 10745                           ;incstack = 0
 10746                           ;WriteFIFO@Data stored from wreg
 10747  003276  6F61               	movwf	WriteFIFO@Data& (0+255),b
 10748                           
 10749                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT3IE;
 10750  003278  0E00               	movlw	0
 10751  00327A  BAF0               	btfsc	intcon3,5,c	;volatile
 10752  00327C  0E01               	movlw	1
 10753  00327E  0100               	movlb	0	; () banked
 10754  003280  6F62               	movwf	WriteFIFO@IRQ1select& (0+255),b
 10755                           
 10756                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT3IE = 0;
 10757  003282  9AF0               	bcf	intcon3,5,c	;volatile
 10758                           
 10759                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC2 = 0;
 10760  003284  948B               	bcf	3979,2,c	;volatile
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;drv_mrf_miwi_89xa.c: 255: SPI1_Exchange8bit(Data);
 10764  003286  5161               	movf	WriteFIFO@Data& (0+255),w,b
 10765  003288  EC4D  F01A         	call	_SPI1_Exchange8bit
 10766                           
 10767                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC2 = 1;
 10768  00328C  848B               	bsf	3979,2,c	;volatile
 10769                           
 10770                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT3IE = IRQ1select;
 10771  00328E  0100               	movlb	0	; () banked
 10772  003290  B162               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 10773  003292  D002               	bra	u9625
 10774  003294  9AF0               	bcf	intcon3,5,c	;volatile
 10775  003296  D001               	bra	u9626
 10776  003298                     u9625:
 10777  003298  8AF0               	bsf	intcon3,5,c	;volatile
 10778  00329A                     u9626:
 10779  00329A  0012               	return		;funcret
 10780  00329C                     __end_of_WriteFIFO:
 10781                           	opt stack 0
 10782                           tblptru	equ	0xFF8
 10783                           tblptrh	equ	0xFF7
 10784                           tblptrl	equ	0xFF6
 10785                           tablat	equ	0xFF5
 10786                           prodh	equ	0xFF4
 10787                           prodl	equ	0xFF3
 10788                           intcon	equ	0xFF2
 10789                           intcon2	equ	0xFF1
 10790                           intcon3	equ	0xFF0
 10791                           postinc0	equ	0xFEE
 10792                           wreg	equ	0xFE8
 10793                           indf1	equ	0xFE7
 10794                           postdec1	equ	0xFE5
 10795                           fsr1h	equ	0xFE2
 10796                           fsr1l	equ	0xFE1
 10797                           indf2	equ	0xFDF
 10798                           postinc2	equ	0xFDE
 10799                           postdec2	equ	0xFDD
 10800                           fsr2h	equ	0xFDA
 10801                           fsr2l	equ	0xFD9
 10802                           status	equ	0xFD8
 10803                           
 10804 ;; *************** function _SetRFMode *****************
 10805 ;; Defined at:
 10806 ;;		line 667 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;  mode            1    wreg     unsigned char 
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;  mode            1    4[BANK0 ] unsigned char 
 10811 ;; Return value:  Size  Location     Type
 10812 ;;		None               void
 10813 ;; Registers used:
 10814 ;;		wreg, status,2, status,0, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10823 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10824 ;;Total ram usage:        1 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:    7
 10827 ;; This function calls:
 10828 ;;		_RegisterSet
 10829 ;; This function is called by:
 10830 ;;		_TxPacket
 10831 ;;		_MiMAC_SetChannel
 10832 ;;		_MiMAC_Init
 10833 ;;		_MiMAC_PowerState
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           
 10837                           	psect	text40
 10838  002B76                     __ptext40:
 10839                           	opt stack 0
 10840  002B76                     _SetRFMode:
 10841                           	opt stack 17
 10842                           
 10843                           ;incstack = 0
 10844                           ;SetRFMode@mode stored from wreg
 10845  002B76  0100               	movlb	0	; () banked
 10846  002B78  6F64               	movwf	SetRFMode@mode& (0+255),b
 10847                           
 10848                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
 10849  002B7A  D027               	goto	l10174
 10850  002B7C                     l10152:
 10851                           
 10852                           ; BSR set to: 0
 10853                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x80);
 10854  002B7C  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
 10855  002B7E  0E86               	movlw	134
 10856  002B80  6F61               	movwf	RegisterSet@setting& (0+255),b
 10857  002B82  ECFE  F018         	call	_RegisterSet	;wreg free
 10858                           
 10859                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
 10860  002B86  0E80               	movlw	128
 10861  002B88  6E56               	movwf	_RF_Mode,c
 10862                           
 10863                           ;drv_mrf_miwi_89xa.c: 673: break;
 10864  002B8A  0C80               	retlw	128
 10865  002B8C                     l10156:
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x00 | 0x06) & 0x1F) | 0x60);
 10869  002B8C  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
 10870  002B8E  0E66               	movlw	102
 10871  002B90  6F61               	movwf	RegisterSet@setting& (0+255),b
 10872  002B92  ECFE  F018         	call	_RegisterSet	;wreg free
 10873                           
 10874                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
 10875  002B96  0E60               	movlw	96
 10876  002B98  6E56               	movwf	_RF_Mode,c
 10877                           
 10878                           ;drv_mrf_miwi_89xa.c: 677: break;
 10879  002B9A  0C60               	retlw	96
 10880  002B9C                     l10160:
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
 10884  002B9C  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
 10885  002B9E  0E46               	movlw	70
 10886  002BA0  6F61               	movwf	RegisterSet@setting& (0+255),b
 10887  002BA2  ECFE  F018         	call	_RegisterSet	;wreg free
 10888                           
 10889                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
 10890  002BA6  0E40               	movlw	64
 10891  002BA8  6E56               	movwf	_RF_Mode,c
 10892                           
 10893                           ;drv_mrf_miwi_89xa.c: 681: break;
 10894  002BAA  0C40               	retlw	64
 10895  002BAC                     l10164:
 10896                           
 10897                           ; BSR set to: 0
 10898                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x20);
 10899  002BAC  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
 10900  002BAE  0E26               	movlw	38
 10901  002BB0  6F61               	movwf	RegisterSet@setting& (0+255),b
 10902  002BB2  ECFE  F018         	call	_RegisterSet	;wreg free
 10903                           
 10904                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
 10905  002BB6  0E20               	movlw	32
 10906  002BB8  6E56               	movwf	_RF_Mode,c
 10907                           
 10908                           ;drv_mrf_miwi_89xa.c: 685: break;
 10909  002BBA  0C20               	retlw	32
 10910  002BBC                     l10168:
 10911                           
 10912                           ; BSR set to: 0
 10913                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x00);
 10914  002BBC  6B62               	clrf	(RegisterSet@setting+1)& (0+255),b
 10915  002BBE  0E06               	movlw	6
 10916  002BC0  6F61               	movwf	RegisterSet@setting& (0+255),b
 10917  002BC2  ECFE  F018         	call	_RegisterSet	;wreg free
 10918                           
 10919                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
 10920  002BC6  6A56               	clrf	_RF_Mode,c
 10921                           
 10922                           ;drv_mrf_miwi_89xa.c: 689: break;
 10923  002BC8  0012               	return	
 10924  002BCA                     l10174:
 10925  002BCA  0100               	movlb	0	; () banked
 10926  002BCC  5164               	movf	SetRFMode@mode& (0+255),w,b
 10927                           
 10928                           ; Switch size 1, requested type "speed"
 10929                           ; Number of cases is 5, Range of values is 0 to 128
 10930                           ; switch strategies available:
 10931                           ; Name         Instructions Cycles
 10932                           ; simple_byte           16     9 (average)
 10933                           ;	Chosen strategy is simple_byte
 10934  002BCE  E0F6               	bz	l10168
 10935  002BD0  0A20               	xorlw	32	; case 32
 10936  002BD2  E0EC               	bz	l10164
 10937  002BD4  0A60               	xorlw	96	; case 64
 10938  002BD6  E0E2               	bz	l10160
 10939  002BD8  0A20               	xorlw	32	; case 96
 10940  002BDA  E0D8               	bz	l10156
 10941  002BDC  0AE0               	xorlw	224	; case 128
 10942  002BDE  E0CE               	bz	l10152
 10943  002BE0  0012               	return		;funcret
 10944  002BE2                     __end_of_SetRFMode:
 10945                           	opt stack 0
 10946                           tblptru	equ	0xFF8
 10947                           tblptrh	equ	0xFF7
 10948                           tblptrl	equ	0xFF6
 10949                           tablat	equ	0xFF5
 10950                           prodh	equ	0xFF4
 10951                           prodl	equ	0xFF3
 10952                           intcon	equ	0xFF2
 10953                           intcon2	equ	0xFF1
 10954                           intcon3	equ	0xFF0
 10955                           postinc0	equ	0xFEE
 10956                           wreg	equ	0xFE8
 10957                           indf1	equ	0xFE7
 10958                           postdec1	equ	0xFE5
 10959                           fsr1h	equ	0xFE2
 10960                           fsr1l	equ	0xFE1
 10961                           indf2	equ	0xFDF
 10962                           postinc2	equ	0xFDE
 10963                           postdec2	equ	0xFDD
 10964                           fsr2h	equ	0xFDA
 10965                           fsr2l	equ	0xFD9
 10966                           status	equ	0xFD8
 10967                           
 10968 ;; *************** function _RegisterSet *****************
 10969 ;; Defined at:
 10970 ;;		line 164 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10971 ;; Parameters:    Size  Location     Type
 10972 ;;  setting         2    1[BANK0 ] unsigned int 
 10973 ;; Auto vars:     Size  Location     Type
 10974 ;;  IRQ1select      1    3[BANK0 ] unsigned char 
 10975 ;; Return value:  Size  Location     Type
 10976 ;;		None               void
 10977 ;; Registers used:
 10978 ;;		wreg, status,2, cstack
 10979 ;; Tracked objects:
 10980 ;;		On entry : F/0
 10981 ;;		On exit  : 0/0
 10982 ;;		Unchanged: 0/0
 10983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10985 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10987 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10988 ;;Total ram usage:        3 bytes
 10989 ;; Hardware stack levels used:    1
 10990 ;; Hardware stack levels required when called:    6
 10991 ;; This function calls:
 10992 ;;		_SPI1_Exchange8bit
 10993 ;; This function is called by:
 10994 ;;		_TxPacket
 10995 ;;		_MiMAC_SetChannel
 10996 ;;		_MiMAC_Init
 10997 ;;		_SetRFMode
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001                           	psect	text41
 11002  0031FC                     __ptext41:
 11003                           	opt stack 0
 11004  0031FC                     _RegisterSet:
 11005                           	opt stack 17
 11006                           
 11007                           ; BSR set to: 0
 11008                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT3IE;
 11009                           
 11010                           ;incstack = 0
 11011  0031FC  0E00               	movlw	0
 11012  0031FE  BAF0               	btfsc	intcon3,5,c	;volatile
 11013  003200  0E01               	movlw	1
 11014  003202  6F63               	movwf	RegisterSet@IRQ1select& (0+255),b
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT3IE = 0;
 11018  003204  9AF0               	bcf	intcon3,5,c	;volatile
 11019                           
 11020                           ; BSR set to: 0
 11021                           ;drv_mrf_miwi_89xa.c: 173: LATEbits.LATE1 = 0;
 11022  003206  928D               	bcf	3981,1,c	;volatile
 11023                           
 11024                           ; BSR set to: 0
 11025                           ;drv_mrf_miwi_89xa.c: 174: SPI1_Exchange8bit((uint8_t)(setting >> 8));
 11026  003208  5162               	movf	(RegisterSet@setting+1)& (0+255),w,b
 11027  00320A  EC4D  F01A         	call	_SPI1_Exchange8bit
 11028                           
 11029                           ;drv_mrf_miwi_89xa.c: 175: SPI1_Exchange8bit((uint8_t)setting);
 11030  00320E  0100               	movlb	0	; () banked
 11031  003210  5161               	movf	RegisterSet@setting& (0+255),w,b
 11032  003212  EC4D  F01A         	call	_SPI1_Exchange8bit
 11033                           
 11034                           ;drv_mrf_miwi_89xa.c: 176: LATEbits.LATE1 = 1;
 11035  003216  828D               	bsf	3981,1,c	;volatile
 11036                           
 11037                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT3IE = IRQ1select;
 11038  003218  0100               	movlb	0	; () banked
 11039  00321A  B163               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 11040  00321C  D002               	bra	u9605
 11041  00321E  9AF0               	bcf	intcon3,5,c	;volatile
 11042  003220  D001               	bra	u9606
 11043  003222                     u9605:
 11044  003222  8AF0               	bsf	intcon3,5,c	;volatile
 11045  003224                     u9606:
 11046  003224  0012               	return		;funcret
 11047  003226                     __end_of_RegisterSet:
 11048                           	opt stack 0
 11049                           tblptru	equ	0xFF8
 11050                           tblptrh	equ	0xFF7
 11051                           tblptrl	equ	0xFF6
 11052                           tablat	equ	0xFF5
 11053                           prodh	equ	0xFF4
 11054                           prodl	equ	0xFF3
 11055                           intcon	equ	0xFF2
 11056                           intcon2	equ	0xFF1
 11057                           intcon3	equ	0xFF0
 11058                           postinc0	equ	0xFEE
 11059                           wreg	equ	0xFE8
 11060                           indf1	equ	0xFE7
 11061                           postdec1	equ	0xFE5
 11062                           fsr1h	equ	0xFE2
 11063                           fsr1l	equ	0xFE1
 11064                           indf2	equ	0xFDF
 11065                           postinc2	equ	0xFDE
 11066                           postdec2	equ	0xFDD
 11067                           fsr2h	equ	0xFDA
 11068                           fsr2l	equ	0xFD9
 11069                           status	equ	0xFD8
 11070                           
 11071 ;; *************** function _RegisterRead *****************
 11072 ;; Defined at:
 11073 ;;		line 200 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 11074 ;; Parameters:    Size  Location     Type
 11075 ;;  address         1    wreg     unsigned char 
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;  address         1    1[BANK0 ] unsigned char 
 11078 ;;  IRQ1select      1    3[BANK0 ] unsigned char 
 11079 ;;  value           1    2[BANK0 ] unsigned char 
 11080 ;; Return value:  Size  Location     Type
 11081 ;;                  1    wreg      unsigned char 
 11082 ;; Registers used:
 11083 ;;		wreg, status,2, status,0, cstack
 11084 ;; Tracked objects:
 11085 ;;		On entry : 0/0
 11086 ;;		On exit  : F/0
 11087 ;;		Unchanged: 0/0
 11088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11090 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11092 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11093 ;;Total ram usage:        3 bytes
 11094 ;; Hardware stack levels used:    1
 11095 ;; Hardware stack levels required when called:    6
 11096 ;; This function calls:
 11097 ;;		_SPI1_Exchange8bit
 11098 ;; This function is called by:
 11099 ;;		_TxPacket
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text42
 11104  00310E                     __ptext42:
 11105                           	opt stack 0
 11106  00310E                     _RegisterRead:
 11107                           	opt stack 18
 11108                           
 11109                           ;incstack = 0
 11110                           ;RegisterRead@address stored from wreg
 11111  00310E  0100               	movlb	0	; () banked
 11112  003110  6F61               	movwf	RegisterRead@address& (0+255),b
 11113                           
 11114                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 11115                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT3IE;
 11116  003112  0E00               	movlw	0
 11117  003114  BAF0               	btfsc	intcon3,5,c	;volatile
 11118  003116  0E01               	movlw	1
 11119  003118  6F63               	movwf	RegisterRead@IRQ1select& (0+255),b
 11120                           
 11121                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT3IE = 0;
 11122  00311A  9AF0               	bcf	intcon3,5,c	;volatile
 11123                           
 11124                           ;drv_mrf_miwi_89xa.c: 211: LATEbits.LATE1 = 0;
 11125  00311C  928D               	bcf	3981,1,c	;volatile
 11126                           
 11127                           ; BSR set to: 0
 11128                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 11129  00311E  8D61               	bsf	RegisterRead@address& (0+255),6,b
 11130                           
 11131                           ; BSR set to: 0
 11132                           ;drv_mrf_miwi_89xa.c: 213: SPI1_Exchange8bit(address);
 11133  003120  5161               	movf	RegisterRead@address& (0+255),w,b
 11134  003122  EC4D  F01A         	call	_SPI1_Exchange8bit
 11135                           
 11136                           ;drv_mrf_miwi_89xa.c: 214: value = SPI1_Exchange8bit(0x00);
 11137  003126  0E00               	movlw	0
 11138  003128  EC4D  F01A         	call	_SPI1_Exchange8bit
 11139  00312C  0100               	movlb	0	; () banked
 11140  00312E  6F62               	movwf	RegisterRead@value& (0+255),b
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;drv_mrf_miwi_89xa.c: 215: LATEbits.LATE1 = 1;
 11144  003130  828D               	bsf	3981,1,c	;volatile
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT3IE = IRQ1select;
 11148  003132  B163               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 11149  003134  D002               	bra	u9615
 11150  003136  9AF0               	bcf	intcon3,5,c	;volatile
 11151  003138  D001               	bra	u9616
 11152  00313A                     u9615:
 11153  00313A  8AF0               	bsf	intcon3,5,c	;volatile
 11154  00313C                     u9616:
 11155                           
 11156                           ;drv_mrf_miwi_89xa.c: 222: return value;
 11157  00313C  0100               	movlb	0	; () banked
 11158  00313E  5162               	movf	RegisterRead@value& (0+255),w,b
 11159                           
 11160                           ; BSR set to: 0
 11161  003140  0012               	return		;funcret
 11162  003142                     __end_of_RegisterRead:
 11163                           	opt stack 0
 11164                           tblptru	equ	0xFF8
 11165                           tblptrh	equ	0xFF7
 11166                           tblptrl	equ	0xFF6
 11167                           tablat	equ	0xFF5
 11168                           prodh	equ	0xFF4
 11169                           prodl	equ	0xFF3
 11170                           intcon	equ	0xFF2
 11171                           intcon2	equ	0xFF1
 11172                           intcon3	equ	0xFF0
 11173                           postinc0	equ	0xFEE
 11174                           wreg	equ	0xFE8
 11175                           indf1	equ	0xFE7
 11176                           postdec1	equ	0xFE5
 11177                           fsr1h	equ	0xFE2
 11178                           fsr1l	equ	0xFE1
 11179                           indf2	equ	0xFDF
 11180                           postinc2	equ	0xFDE
 11181                           postdec2	equ	0xFDD
 11182                           fsr2h	equ	0xFDA
 11183                           fsr2l	equ	0xFD9
 11184                           status	equ	0xFD8
 11185                           
 11186 ;; *************** function _MiWi_TickGet *****************
 11187 ;; Defined at:
 11188 ;;		line 114 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/symbol.c"
 11189 ;; Parameters:    Size  Location     Type
 11190 ;;		None
 11191 ;; Auto vars:     Size  Location     Type
 11192 ;;  currentTime     4    6[BANK0 ] struct _MIWI_TICK
 11193 ;;  failureCount    1    5[BANK0 ] unsigned char 
 11194 ;; Return value:  Size  Location     Type
 11195 ;;                  4    0[BANK0 ] struct _MIWI_TICK
 11196 ;; Registers used:
 11197 ;;		wreg, status,2, status,0
 11198 ;; Tracked objects:
 11199 ;;		On entry : 0/0
 11200 ;;		On exit  : F/0
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11203 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11204 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11205 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11206 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11207 ;;Total ram usage:       10 bytes
 11208 ;; Hardware stack levels used:    1
 11209 ;; Hardware stack levels required when called:    5
 11210 ;; This function calls:
 11211 ;;		Nothing
 11212 ;; This function is called by:
 11213 ;;		_TxPacket
 11214 ;;		_MiMAC_ReceivedPacket
 11215 ;;		_P2PTasks
 11216 ;;		_CheckForData
 11217 ;;		_MiApp_UnicastStar
 11218 ;;		_MiApp_EstablishConnection
 11219 ;;		_ButtonPressed
 11220 ;;		_run_star_demo
 11221 ;; This function uses a non-reentrant model
 11222 ;;
 11223                           
 11224                           	psect	text43
 11225  002DB4                     __ptext43:
 11226                           	opt stack 0
 11227  002DB4                     _MiWi_TickGet:
 11228                           	opt stack 23
 11229                           
 11230                           ;symbol.c: 116: MIWI_TICK currentTime;
 11231                           ;symbol.c: 119: uint8_t failureCounter;
 11232                           ;symbol.c: 122: PIE1bits.TMR1IE = 0;
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;incstack = 0
 11236  002DB4  909D               	bcf	3997,0,c	;volatile
 11237                           
 11238                           ;symbol.c: 125: currentTime.byte.b2 = 0;
 11239  002DB6  0100               	movlb	0	; () banked
 11240  002DB8  6B68               	clrf	(MiWi_TickGet@currentTime+2)& (0+255),b
 11241                           
 11242                           ;symbol.c: 126: currentTime.byte.b3 = 0;
 11243  002DBA  6B69               	clrf	(MiWi_TickGet@currentTime+3)& (0+255),b
 11244                           
 11245                           ;symbol.c: 128: failureCounter = 0;
 11246  002DBC  6B65               	clrf	MiWi_TickGet@failureCounter& (0+255),b
 11247  002DBE                     l934:
 11248                           
 11249                           ; BSR set to: 0
 11250                           ;symbol.c: 131: {
 11251                           ;symbol.c: 132: currentTime.byte.b0 = TMR1L;
 11252  002DBE  CFCE F066          	movff	4046,MiWi_TickGet@currentTime	;volatile
 11253                           
 11254                           ;symbol.c: 133: currentTime.byte.b1 = TMR1H;
 11255  002DC2  CFCF F067          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;symbol.c: 134: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 11259  002DC6  2966               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 11260  002DC8  E108               	bnz	l937
 11261  002DCA  2967               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 11262  002DCC  E106               	bnz	l937
 11263                           
 11264                           ; BSR set to: 0
 11265  002DCE  2B65               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 11266  002DD0  0565               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 11267  002DD2  6F64               	movwf	??_MiWi_TickGet& (0+255),b
 11268  002DD4  0E02               	movlw	2
 11269  002DD6  6564               	cpfsgt	??_MiWi_TickGet& (0+255),b
 11270  002DD8  D7F2               	goto	l934
 11271  002DDA                     l937:
 11272                           
 11273                           ; BSR set to: 0
 11274                           ;symbol.c: 138: if(PIR1bits.TMR1IF)
 11275  002DDA  A09E               	btfss	3998,0,c	;volatile
 11276  002DDC  D004               	goto	l10188
 11277                           
 11278                           ; BSR set to: 0
 11279                           ;symbol.c: 139: {
 11280                           ;symbol.c: 141: {
 11281                           ;symbol.c: 144: currentTime.byte.b2++;
 11282  002DDE  2B68               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 11283                           
 11284                           ; BSR set to: 0
 11285                           ;symbol.c: 145: if(timerExtension1 == 0xFF)
 11286  002DE0  285B               	incf	_timerExtension1,w,c	;volatile
 11287  002DE2  E101               	bnz	l10188
 11288                           
 11289                           ; BSR set to: 0
 11290                           ;symbol.c: 146: {
 11291                           ;symbol.c: 147: currentTime.byte.b3++;
 11292  002DE4  2B69               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 11293  002DE6                     l10188:
 11294                           
 11295                           ; BSR set to: 0
 11296                           ;symbol.c: 148: }
 11297                           ;symbol.c: 149: }
 11298                           ;symbol.c: 150: }
 11299                           ;symbol.c: 153: currentTime.byte.b2 += timerExtension1;
 11300  002DE6  505B               	movf	_timerExtension1,w,c	;volatile
 11301  002DE8  2768               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 11302                           
 11303                           ; BSR set to: 0
 11304                           ;symbol.c: 154: currentTime.byte.b3 += timerExtension2;
 11305  002DEA  51E7               	movf	_timerExtension2& (0+255),w,b	;volatile
 11306  002DEC  2769               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;symbol.c: 157: PIE1bits.TMR1IE = 1;
 11310  002DEE  809D               	bsf	3997,0,c	;volatile
 11311                           
 11312                           ; BSR set to: 0
 11313                           ;symbol.c: 159: return currentTime;
 11314  002DF0  C066  F060         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 11315  002DF4  C067  F061         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 11316  002DF8  C068  F062         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 11317  002DFC  C069  F063         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 11318                           
 11319                           ; BSR set to: 0
 11320  002E00  0012               	return		;funcret
 11321  002E02                     __end_of_MiWi_TickGet:
 11322                           	opt stack 0
 11323                           tblptru	equ	0xFF8
 11324                           tblptrh	equ	0xFF7
 11325                           tblptrl	equ	0xFF6
 11326                           tablat	equ	0xFF5
 11327                           prodh	equ	0xFF4
 11328                           prodl	equ	0xFF3
 11329                           intcon	equ	0xFF2
 11330                           intcon2	equ	0xFF1
 11331                           intcon3	equ	0xFF0
 11332                           postinc0	equ	0xFEE
 11333                           wreg	equ	0xFE8
 11334                           indf1	equ	0xFE7
 11335                           postdec1	equ	0xFE5
 11336                           fsr1h	equ	0xFE2
 11337                           fsr1l	equ	0xFE1
 11338                           indf2	equ	0xFDF
 11339                           postinc2	equ	0xFDE
 11340                           postdec2	equ	0xFDD
 11341                           fsr2h	equ	0xFDA
 11342                           fsr2l	equ	0xFD9
 11343                           status	equ	0xFD8
 11344                           
 11345 ;; *************** function _DELAY_10us *****************
 11346 ;; Defined at:
 11347 ;;		line 47 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/delay.c"
 11348 ;; Parameters:    Size  Location     Type
 11349 ;;  tenMicroSeco    4    0[BANK0 ] unsigned long 
 11350 ;; Auto vars:     Size  Location     Type
 11351 ;;  cyclesRequir    4    4[BANK0 ] volatile long 
 11352 ;; Return value:  Size  Location     Type
 11353 ;;		None               void
 11354 ;; Registers used:
 11355 ;;		None
 11356 ;; Tracked objects:
 11357 ;;		On entry : F/0
 11358 ;;		On exit  : F/0
 11359 ;;		Unchanged: F/0
 11360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11361 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11362 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11364 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11365 ;;Total ram usage:        8 bytes
 11366 ;; Hardware stack levels used:    1
 11367 ;; Hardware stack levels required when called:    5
 11368 ;; This function calls:
 11369 ;;		Nothing
 11370 ;; This function is called by:
 11371 ;;		_TxPacket
 11372 ;; This function uses a non-reentrant model
 11373 ;;
 11374                           
 11375                           	psect	text44
 11376  003522                     __ptext44:
 11377                           	opt stack 0
 11378  003522                     _DELAY_10us:
 11379                           	opt stack 19
 11380                           
 11381                           ; BSR set to: 0
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;delay.c: 53: {
 11385                           ;delay.c: 59: }
 11386                           
 11387                           ; BSR set to: 0
 11388                           ;incstack = 0
 11389  003522  0012               	return		;funcret
 11390  003524                     __end_of_DELAY_10us:
 11391                           	opt stack 0
 11392                           tblptru	equ	0xFF8
 11393                           tblptrh	equ	0xFF7
 11394                           tblptrl	equ	0xFF6
 11395                           tablat	equ	0xFF5
 11396                           prodh	equ	0xFF4
 11397                           prodl	equ	0xFF3
 11398                           intcon	equ	0xFF2
 11399                           intcon2	equ	0xFF1
 11400                           intcon3	equ	0xFF0
 11401                           postinc0	equ	0xFEE
 11402                           wreg	equ	0xFE8
 11403                           indf1	equ	0xFE7
 11404                           postdec1	equ	0xFE5
 11405                           fsr1h	equ	0xFE2
 11406                           fsr1l	equ	0xFE1
 11407                           indf2	equ	0xFDF
 11408                           postinc2	equ	0xFDE
 11409                           postdec2	equ	0xFDD
 11410                           fsr2h	equ	0xFDA
 11411                           fsr2l	equ	0xFD9
 11412                           status	equ	0xFD8
 11413                           
 11414 ;; *************** function _DemoOutput_UnicastFail *****************
 11415 ;; Defined at:
 11416 ;;		line 203 in file "../src/demo_ouput.c"
 11417 ;; Parameters:    Size  Location     Type
 11418 ;;		None
 11419 ;; Auto vars:     Size  Location     Type
 11420 ;;		None
 11421 ;; Return value:  Size  Location     Type
 11422 ;;		None               void
 11423 ;; Registers used:
 11424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11425 ;; Tracked objects:
 11426 ;;		On entry : F/0
 11427 ;;		On exit  : F/0
 11428 ;;		Unchanged: 0/0
 11429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11434 ;;Total ram usage:        0 bytes
 11435 ;; Hardware stack levels used:    1
 11436 ;; Hardware stack levels required when called:    8
 11437 ;; This function calls:
 11438 ;;		_CONSOLE_PutString
 11439 ;;		_LCDDisplay
 11440 ;; This function is called by:
 11441 ;;		_Forward_Packet_PANCr_to_EDy
 11442 ;; This function uses a non-reentrant model
 11443 ;;
 11444                           
 11445                           	psect	text45
 11446  0033D2                     __ptext45:
 11447                           	opt stack 0
 11448  0033D2                     _DemoOutput_UnicastFail:
 11449                           	opt stack 16
 11450                           
 11451                           ; BSR set to: 0
 11452                           ;demo_ouput.c: 206: CONSOLE_PutString((char*)"\r\nUnicast Failed\r\n");
 11453                           
 11454                           ; BSR set to: 0
 11455                           ;incstack = 0
 11456  0033D2  0E0A               	movlw	low STR_45
 11457  0033D4  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 11458  0033D6  0EFF               	movlw	high STR_45
 11459  0033D8  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 11460  0033DA  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;demo_ouput.c: 209: LCDDisplay((char *)" Unicast Failed", 0, 1);
 11464  0033DE  0E96               	movlw	low STR_46
 11465  0033E0  6F8F               	movwf	LCDDisplay@text& (0+255),b
 11466  0033E2  0EFF               	movlw	high STR_46
 11467  0033E4  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
 11468  0033E6  6B91               	clrf	LCDDisplay@value& (0+255),b
 11469  0033E8  0E01               	movlw	1
 11470  0033EA  6F92               	movwf	LCDDisplay@delay& (0+255),b
 11471  0033EC  EFBA  F017         	goto	_LCDDisplay	;wreg free
 11472  0033F0                     __end_of_DemoOutput_UnicastFail:
 11473                           	opt stack 0
 11474                           tblptru	equ	0xFF8
 11475                           tblptrh	equ	0xFF7
 11476                           tblptrl	equ	0xFF6
 11477                           tablat	equ	0xFF5
 11478                           prodh	equ	0xFF4
 11479                           prodl	equ	0xFF3
 11480                           intcon	equ	0xFF2
 11481                           intcon2	equ	0xFF1
 11482                           intcon3	equ	0xFF0
 11483                           postinc0	equ	0xFEE
 11484                           wreg	equ	0xFE8
 11485                           indf1	equ	0xFE7
 11486                           postdec1	equ	0xFE5
 11487                           fsr1h	equ	0xFE2
 11488                           fsr1l	equ	0xFE1
 11489                           indf2	equ	0xFDF
 11490                           postinc2	equ	0xFDE
 11491                           postdec2	equ	0xFDD
 11492                           fsr2h	equ	0xFDA
 11493                           fsr2l	equ	0xFD9
 11494                           status	equ	0xFD8
 11495                           
 11496 ;; *************** function _Find_Index *****************
 11497 ;; Defined at:
 11498 ;;		line 105 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11499 ;; Parameters:    Size  Location     Type
 11500 ;;  DestAddr        2    0[BANK0 ] PTR unsigned char 
 11501 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
 11502 ;; Auto vars:     Size  Location     Type
 11503 ;;  i               1    4[BANK0 ] unsigned char 
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  1    wreg      unsigned char 
 11506 ;; Registers used:
 11507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11508 ;; Tracked objects:
 11509 ;;		On entry : F/0
 11510 ;;		On exit  : F/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11513 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11514 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11515 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11516 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11517 ;;Total ram usage:        5 bytes
 11518 ;; Hardware stack levels used:    1
 11519 ;; Hardware stack levels required when called:    5
 11520 ;; This function calls:
 11521 ;;		Nothing
 11522 ;; This function is called by:
 11523 ;;		_P2PTasks
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           	psect	text46
 11528  0024AE                     __ptext46:
 11529                           	opt stack 0
 11530  0024AE                     _Find_Index:
 11531                           	opt stack 20
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;miwi_p2p.c: 107: uint8_t i;
 11535                           ;miwi_p2p.c: 108: for (i=0;i<conn_size;i++)
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;incstack = 0
 11539  0024AE  6B64               	clrf	Find_Index@i& (0+255),b
 11540  0024B0  D040               	goto	l11010
 11541  0024B2                     l10994:
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;miwi_p2p.c: 109: {
 11545                           ;miwi_p2p.c: 110: if (ConnectionTable[i].status.bits.isValid)
 11546  0024B2  5164               	movf	Find_Index@i& (0+255),w,b
 11547  0024B4  0D0E               	mullw	14
 11548  0024B6  0ECE               	movlw	low (_ConnectionTable+12)
 11549  0024B8  24F3               	addwf	prodl,w,c
 11550  0024BA  6ED9               	movwf	fsr2l,c
 11551  0024BC  0E02               	movlw	high (_ConnectionTable+12)
 11552  0024BE  20F4               	addwfc	prodh,w,c
 11553  0024C0  6EDA               	movwf	fsr2h,c
 11554  0024C2  AEDF               	btfss	indf2,7,c
 11555  0024C4  D035               	goto	l11008
 11556                           
 11557                           ; BSR set to: 0
 11558                           ;miwi_p2p.c: 111: {
 11559                           ;miwi_p2p.c: 112: if (DestAddr[1] == ConnectionTable[i].Address[0] && DestAddr[2] == Con
      +                          nectionTable[i].Address[1] && DestAddr[3] == ConnectionTable[i].Address[2] )
 11560  0024C6  5164               	movf	Find_Index@i& (0+255),w,b
 11561  0024C8  0D0E               	mullw	14
 11562  0024CA  0EC6               	movlw	low (_ConnectionTable+4)
 11563  0024CC  24F3               	addwf	prodl,w,c
 11564  0024CE  6ED9               	movwf	fsr2l,c
 11565  0024D0  0E02               	movlw	high (_ConnectionTable+4)
 11566  0024D2  20F4               	addwfc	prodh,w,c
 11567  0024D4  6EDA               	movwf	fsr2h,c
 11568  0024D6  EE10 F001          	lfsr	1,1
 11569  0024DA  5160               	movf	Find_Index@DestAddr& (0+255),w,b
 11570  0024DC  26E1               	addwf	fsr1l,f,c
 11571  0024DE  5161               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 11572  0024E0  22E2               	addwfc	fsr1h,f,c
 11573  0024E2  50DE               	movf	postinc2,w,c
 11574  0024E4  18E6               	xorwf	postinc1,w,c
 11575  0024E6  E124               	bnz	l11008
 11576                           
 11577                           ; BSR set to: 0
 11578  0024E8  5164               	movf	Find_Index@i& (0+255),w,b
 11579  0024EA  0D0E               	mullw	14
 11580  0024EC  0EC7               	movlw	low (_ConnectionTable+5)
 11581  0024EE  24F3               	addwf	prodl,w,c
 11582  0024F0  6ED9               	movwf	fsr2l,c
 11583  0024F2  0E02               	movlw	high (_ConnectionTable+5)
 11584  0024F4  20F4               	addwfc	prodh,w,c
 11585  0024F6  6EDA               	movwf	fsr2h,c
 11586  0024F8  EE10 F002          	lfsr	1,2
 11587  0024FC  5160               	movf	Find_Index@DestAddr& (0+255),w,b
 11588  0024FE  26E1               	addwf	fsr1l,f,c
 11589  002500  5161               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 11590  002502  22E2               	addwfc	fsr1h,f,c
 11591  002504  50DE               	movf	postinc2,w,c
 11592  002506  18E6               	xorwf	postinc1,w,c
 11593  002508  E113               	bnz	l11008
 11594                           
 11595                           ; BSR set to: 0
 11596  00250A  5164               	movf	Find_Index@i& (0+255),w,b
 11597  00250C  0D0E               	mullw	14
 11598  00250E  0EC8               	movlw	low (_ConnectionTable+6)
 11599  002510  24F3               	addwf	prodl,w,c
 11600  002512  6ED9               	movwf	fsr2l,c
 11601  002514  0E02               	movlw	high (_ConnectionTable+6)
 11602  002516  20F4               	addwfc	prodh,w,c
 11603  002518  6EDA               	movwf	fsr2h,c
 11604  00251A  EE10 F003          	lfsr	1,3
 11605  00251E  5160               	movf	Find_Index@DestAddr& (0+255),w,b
 11606  002520  26E1               	addwf	fsr1l,f,c
 11607  002522  5161               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 11608  002524  22E2               	addwfc	fsr1h,f,c
 11609  002526  50DE               	movf	postinc2,w,c
 11610  002528  18E6               	xorwf	postinc1,w,c
 11611  00252A  E102               	bnz	l11008
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;miwi_p2p.c: 113: {
 11615                           ;miwi_p2p.c: 114: return i;
 11616  00252C  5164               	movf	Find_Index@i& (0+255),w,b
 11617  00252E  0012               	return	
 11618  002530                     l11008:
 11619                           
 11620                           ; BSR set to: 0
 11621  002530  2B64               	incf	Find_Index@i& (0+255),f,b
 11622  002532                     l11010:
 11623                           
 11624                           ; BSR set to: 0
 11625  002532  51F8               	movf	_conn_size& (0+255),w,b
 11626  002534  5D64               	subwf	Find_Index@i& (0+255),w,b
 11627  002536  E3BD               	bnc	l10994
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;miwi_p2p.c: 116: }
 11631                           ;miwi_p2p.c: 118: }
 11632                           ;miwi_p2p.c: 119: }
 11633                           ;miwi_p2p.c: 120: if (i==conn_size)
 11634  002538  51F8               	movf	_conn_size& (0+255),w,b
 11635  00253A  1964               	xorwf	Find_Index@i& (0+255),w,b
 11636  00253C  B4D8               	btfsc	status,2,c
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;miwi_p2p.c: 121: {
 11640                           ;miwi_p2p.c: 122: return 0xff;
 11641  00253E  0EFF               	movlw	255
 11642                           
 11643                           ; BSR set to: 0
 11644  002540  0012               	return		;funcret
 11645  002542                     __end_of_Find_Index:
 11646                           	opt stack 0
 11647                           tblptru	equ	0xFF8
 11648                           tblptrh	equ	0xFF7
 11649                           tblptrl	equ	0xFF6
 11650                           tablat	equ	0xFF5
 11651                           prodh	equ	0xFF4
 11652                           prodl	equ	0xFF3
 11653                           intcon	equ	0xFF2
 11654                           intcon2	equ	0xFF1
 11655                           intcon3	equ	0xFF0
 11656                           postinc0	equ	0xFEE
 11657                           wreg	equ	0xFE8
 11658                           indf1	equ	0xFE7
 11659                           postinc1	equ	0xFE6
 11660                           postdec1	equ	0xFE5
 11661                           fsr1h	equ	0xFE2
 11662                           fsr1l	equ	0xFE1
 11663                           indf2	equ	0xFDF
 11664                           postinc2	equ	0xFDE
 11665                           postdec2	equ	0xFDD
 11666                           fsr2h	equ	0xFDA
 11667                           fsr2l	equ	0xFD9
 11668                           status	equ	0xFD8
 11669                           
 11670 ;; *************** function _AddConnection *****************
 11671 ;; Defined at:
 11672 ;;		line 2525 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11673 ;; Parameters:    Size  Location     Type
 11674 ;;		None
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;  i               1   16[BANK0 ] unsigned char 
 11677 ;;  connectionSl    1   15[BANK0 ] unsigned char 
 11678 ;;  status          1    0        unsigned char 
 11679 ;; Return value:  Size  Location     Type
 11680 ;;                  1    wreg      unsigned char 
 11681 ;; Registers used:
 11682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11683 ;; Tracked objects:
 11684 ;;		On entry : F/0
 11685 ;;		On exit  : 0/0
 11686 ;;		Unchanged: 0/0
 11687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11689 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11690 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11691 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11692 ;;Total ram usage:        7 bytes
 11693 ;; Hardware stack levels used:    1
 11694 ;; Hardware stack levels required when called:    7
 11695 ;; This function calls:
 11696 ;;		_NVMWrite
 11697 ;;		_Total_Connections
 11698 ;;		_isSameAddress
 11699 ;; This function is called by:
 11700 ;;		_P2PTasks
 11701 ;; This function uses a non-reentrant model
 11702 ;;
 11703                           
 11704                           	psect	text47
 11705  001958                     __ptext47:
 11706                           	opt stack 0
 11707  001958                     _AddConnection:
 11708                           	opt stack 18
 11709                           
 11710                           ; BSR set to: 0
 11711                           ;miwi_p2p.c: 2531: uint8_t connectionSlot = 0xFF;
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;incstack = 0
 11715  001958  696F               	setf	AddConnection@connectionSlot& (0+255),b
 11716                           
 11717                           ;miwi_p2p.c: 2542: for(i = 0; i < 20; i++)
 11718  00195A  6B70               	clrf	AddConnection@i& (0+255),b
 11719  00195C                     l11086:
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;miwi_p2p.c: 2543: {
 11723                           ;miwi_p2p.c: 2545: if( ConnectionTable[i].status.bits.isValid )
 11724  00195C  5170               	movf	AddConnection@i& (0+255),w,b
 11725  00195E  0D0E               	mullw	14
 11726  001960  0ECE               	movlw	low (_ConnectionTable+12)
 11727  001962  24F3               	addwf	prodl,w,c
 11728  001964  6ED9               	movwf	fsr2l,c
 11729  001966  0E02               	movlw	high (_ConnectionTable+12)
 11730  001968  20F4               	addwfc	prodh,w,c
 11731  00196A  6EDA               	movwf	fsr2h,c
 11732  00196C  AEDF               	btfss	indf2,7,c
 11733  00196E  D013               	goto	l11094
 11734                           
 11735                           ; BSR set to: 0
 11736                           ;miwi_p2p.c: 2546: {
 11737                           ;miwi_p2p.c: 2548: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 11738  001970  C0CA  F060         	movff	_rxMessage+3,isSameAddress@Address1
 11739  001974  C0CB  F061         	movff	_rxMessage+4,isSameAddress@Address1+1
 11740  001978  5170               	movf	AddConnection@i& (0+255),w,b
 11741  00197A  0D0E               	mullw	14
 11742  00197C  0EC6               	movlw	low (_ConnectionTable+4)
 11743  00197E  24F3               	addwf	prodl,w,c
 11744  001980  6F62               	movwf	isSameAddress@Address2& (0+255),b
 11745  001982  0E02               	movlw	high (_ConnectionTable+4)
 11746  001984  20F4               	addwfc	prodh,w,c
 11747  001986  6F63               	movwf	(isSameAddress@Address2+1)& (0+255),b
 11748  001988  ECE8  F018         	call	_isSameAddress	;wreg free
 11749  00198C  0900               	iorlw	0
 11750  00198E  E007               	bz	l11098
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;miwi_p2p.c: 2549: {
 11754                           ;miwi_p2p.c: 2550: connectionSlot = i;
 11755  001990  C070  F06F         	movff	AddConnection@i,AddConnection@connectionSlot
 11756                           
 11757                           ; BSR set to: 0
 11758                           ;miwi_p2p.c: 2552: break;
 11759  001994  D008               	goto	l11102
 11760  001996                     l11094:
 11761                           
 11762                           ; BSR set to: 0
 11763                           ;miwi_p2p.c: 2556: else if( connectionSlot == 0xFF )
 11764  001996  296F               	incf	AddConnection@connectionSlot& (0+255),w,b
 11765  001998  E102               	bnz	l11098
 11766                           
 11767                           ; BSR set to: 0
 11768                           ;miwi_p2p.c: 2557: {
 11769                           ;miwi_p2p.c: 2559: connectionSlot = i;
 11770  00199A  C070  F06F         	movff	AddConnection@i,AddConnection@connectionSlot
 11771  00199E                     l11098:
 11772                           
 11773                           ; BSR set to: 0
 11774  00199E  2B70               	incf	AddConnection@i& (0+255),f,b
 11775                           
 11776                           ; BSR set to: 0
 11777  0019A0  0E13               	movlw	19
 11778  0019A2  6570               	cpfsgt	AddConnection@i& (0+255),b
 11779  0019A4  D7DB               	goto	l11086
 11780  0019A6                     l11102:
 11781                           
 11782                           ; BSR set to: 0
 11783                           ;miwi_p2p.c: 2561: }
 11784                           ;miwi_p2p.c: 2562: }
 11785                           ;miwi_p2p.c: 2564: if( connectionSlot == 0xFF )
 11786  0019A6  296F               	incf	AddConnection@connectionSlot& (0+255),w,b
 11787  0019A8  E101               	bnz	l11108
 11788  0019AA  0012               	return	
 11789  0019AC                     l11108:
 11790                           
 11791                           ; BSR set to: 0
 11792                           ;miwi_p2p.c: 2568: else
 11793                           ;miwi_p2p.c: 2569: {
 11794                           ;miwi_p2p.c: 2570: if( ConnMode >= 0x01 )
 11795  0019AC  51FD               	movf	_ConnMode& (0+255),w,b
 11796  0019AE  E001               	bz	l641
 11797  0019B0  0012               	return	
 11798  0019B2                     l641:
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;miwi_p2p.c: 2578: for(i = 0; i < 8; i++)
 11802  0019B2  6B70               	clrf	AddConnection@i& (0+255),b
 11803  0019B4                     l11116:
 11804                           
 11805                           ; BSR set to: 0
 11806                           ;miwi_p2p.c: 2579: {
 11807                           ;miwi_p2p.c: 2580: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 11808  0019B4  5170               	movf	AddConnection@i& (0+255),w,b
 11809  0019B6  25CA               	addwf	(_rxMessage+3)& (0+255),w,b
 11810  0019B8  6ED9               	movwf	fsr2l,c
 11811  0019BA  0E00               	movlw	0
 11812  0019BC  21CB               	addwfc	(_rxMessage+4)& (0+255),w,b
 11813  0019BE  6EDA               	movwf	fsr2h,c
 11814  0019C0  516F               	movf	AddConnection@connectionSlot& (0+255),w,b
 11815  0019C2  0D0E               	mullw	14
 11816  0019C4  0EC2               	movlw	low _ConnectionTable
 11817  0019C6  6F6A               	movwf	??_AddConnection& (0+255),b
 11818  0019C8  0E02               	movlw	high _ConnectionTable
 11819  0019CA  6F6B               	movwf	(??_AddConnection+1)& (0+255),b
 11820  0019CC  0E04               	movlw	4
 11821  0019CE  276A               	addwf	??_AddConnection& (0+255),f,b
 11822  0019D0  0E00               	movlw	0
 11823  0019D2  236B               	addwfc	(??_AddConnection+1)& (0+255),f,b
 11824  0019D4  50F3               	movf	prodl,w,c
 11825  0019D6  276A               	addwf	??_AddConnection& (0+255),f,b
 11826  0019D8  50F4               	movf	prodh,w,c
 11827  0019DA  236B               	addwfc	(??_AddConnection+1)& (0+255),f,b
 11828  0019DC  5170               	movf	AddConnection@i& (0+255),w,b
 11829  0019DE  256A               	addwf	??_AddConnection& (0+255),w,b
 11830  0019E0  6EE1               	movwf	fsr1l,c
 11831  0019E2  0E00               	movlw	0
 11832  0019E4  216B               	addwfc	(??_AddConnection+1)& (0+255),w,b
 11833  0019E6  6EE2               	movwf	fsr1h,c
 11834  0019E8  CFDF FFE7          	movff	indf2,indf1
 11835                           
 11836                           ; BSR set to: 0
 11837  0019EC  2B70               	incf	AddConnection@i& (0+255),f,b
 11838                           
 11839                           ; BSR set to: 0
 11840  0019EE  0E07               	movlw	7
 11841  0019F0  6570               	cpfsgt	AddConnection@i& (0+255),b
 11842  0019F2  D7E0               	goto	l11116
 11843                           
 11844                           ; BSR set to: 0
 11845                           ;miwi_p2p.c: 2583: }
 11846                           ;miwi_p2p.c: 2588: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 11847  0019F4  516F               	movf	AddConnection@connectionSlot& (0+255),w,b
 11848  0019F6  0D0E               	mullw	14
 11849  0019F8  0ECE               	movlw	low (_ConnectionTable+12)
 11850  0019FA  24F3               	addwf	prodl,w,c
 11851  0019FC  6ED9               	movwf	fsr2l,c
 11852  0019FE  0E02               	movlw	high (_ConnectionTable+12)
 11853  001A00  20F4               	addwfc	prodh,w,c
 11854  001A02  6EDA               	movwf	fsr2h,c
 11855  001A04  8EDF               	bsf	indf2,7,c
 11856                           
 11857                           ;miwi_p2p.c: 2589: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 11858  001A06  EE20 F002          	lfsr	2,2
 11859  001A0A  51CC               	movf	(_rxMessage+5)& (0+255),w,b
 11860  001A0C  26D9               	addwf	fsr2l,f,c
 11861  001A0E  51CD               	movf	(_rxMessage+6)& (0+255),w,b
 11862  001A10  22DA               	addwfc	fsr2h,f,c
 11863  001A12  50DF               	movf	indf2,w,c
 11864  001A14  6F6A               	movwf	??_AddConnection& (0+255),b
 11865  001A16  0E01               	movlw	1
 11866  001A18  176A               	andwf	??_AddConnection& (0+255),f,b
 11867  001A1A  516F               	movf	AddConnection@connectionSlot& (0+255),w,b
 11868  001A1C  0D0E               	mullw	14
 11869  001A1E  0ECE               	movlw	low (_ConnectionTable+12)
 11870  001A20  24F3               	addwf	prodl,w,c
 11871  001A22  6ED9               	movwf	fsr2l,c
 11872  001A24  0E02               	movlw	high (_ConnectionTable+12)
 11873  001A26  20F4               	addwfc	prodh,w,c
 11874  001A28  6EDA               	movwf	fsr2h,c
 11875  001A2A  50DF               	movf	223,w,c
 11876  001A2C  196A               	xorwf	??_AddConnection& (0+255),w,b
 11877  001A2E  0BFE               	andlw	-2
 11878  001A30  196A               	xorwf	??_AddConnection& (0+255),w,b
 11879  001A32  6EDF               	movwf	223,c
 11880                           
 11881                           ; BSR set to: 0
 11882                           ;miwi_p2p.c: 2593: for(i = 0; i < 1; i++)
 11883  001A34  6B70               	clrf	AddConnection@i& (0+255),b
 11884  001A36                     l11130:
 11885                           
 11886                           ; BSR set to: 0
 11887                           ;miwi_p2p.c: 2594: {
 11888                           ;miwi_p2p.c: 2595: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 11889  001A36  5170               	movf	AddConnection@i& (0+255),w,b
 11890  001A38  25CC               	addwf	(_rxMessage+5)& (0+255),w,b
 11891  001A3A  6F6A               	movwf	??_AddConnection& (0+255),b
 11892  001A3C  0E00               	movlw	0
 11893  001A3E  21CD               	addwfc	(_rxMessage+6)& (0+255),w,b
 11894  001A40  6F6B               	movwf	(??_AddConnection+1)& (0+255),b
 11895  001A42  0E03               	movlw	3
 11896  001A44  256A               	addwf	??_AddConnection& (0+255),w,b
 11897  001A46  6ED9               	movwf	fsr2l,c
 11898  001A48  0E00               	movlw	0
 11899  001A4A  216B               	addwfc	(??_AddConnection+1)& (0+255),w,b
 11900  001A4C  6EDA               	movwf	fsr2h,c
 11901  001A4E  516F               	movf	AddConnection@connectionSlot& (0+255),w,b
 11902  001A50  0D0E               	mullw	14
 11903  001A52  0EC2               	movlw	low _ConnectionTable
 11904  001A54  6F6C               	movwf	(??_AddConnection+2)& (0+255),b
 11905  001A56  0E02               	movlw	high _ConnectionTable
 11906  001A58  6F6D               	movwf	(??_AddConnection+3)& (0+255),b
 11907  001A5A  0E0D               	movlw	13
 11908  001A5C  276C               	addwf	(??_AddConnection+2)& (0+255),f,b
 11909  001A5E  0E00               	movlw	0
 11910  001A60  236D               	addwfc	(??_AddConnection+3)& (0+255),f,b
 11911  001A62  50F3               	movf	prodl,w,c
 11912  001A64  276C               	addwf	(??_AddConnection+2)& (0+255),f,b
 11913  001A66  50F4               	movf	prodh,w,c
 11914  001A68  236D               	addwfc	(??_AddConnection+3)& (0+255),f,b
 11915  001A6A  5170               	movf	AddConnection@i& (0+255),w,b
 11916  001A6C  256C               	addwf	(??_AddConnection+2)& (0+255),w,b
 11917  001A6E  6EE1               	movwf	fsr1l,c
 11918  001A70  0E00               	movlw	0
 11919  001A72  216D               	addwfc	(??_AddConnection+3)& (0+255),w,b
 11920  001A74  6EE2               	movwf	fsr1h,c
 11921  001A76  CFDF FFE7          	movff	indf2,indf1
 11922                           
 11923                           ; BSR set to: 0
 11924  001A7A  2B70               	incf	AddConnection@i& (0+255),f,b
 11925                           
 11926                           ; BSR set to: 0
 11927  001A7C  5170               	movf	AddConnection@i& (0+255),w,b
 11928  001A7E  E0DB               	bz	l11130
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;miwi_p2p.c: 2596: }
 11932                           ;miwi_p2p.c: 2603: LatestConnection = connectionSlot;
 11933  001A80  C06F  F0D7         	movff	AddConnection@connectionSlot,_LatestConnection
 11934                           
 11935                           ;miwi_p2p.c: 2605: P2PStatus.bits.SearchConnection = 0;
 11936  001A84  99DA               	bcf	_P2PStatus& (0+255),4,b	;volatile
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;miwi_p2p.c: 2606: }
 11940                           ;miwi_p2p.c: 2607: conn_size = Total_Connections();
 11941  001A86  EC01  F017         	call	_Total_Connections	;wreg free
 11942  001A8A  6FF8               	movwf	_conn_size& (0+255),b
 11943                           
 11944                           ; BSR set to: 0
 11945                           ;miwi_p2p.c: 2608: NVMWrite((uint8_t *)&conn_size, nvmEdc, 1);
 11946  001A8C  0EF8               	movlw	low _conn_size
 11947  001A8E  6F61               	movwf	NVMWrite@source& (0+255),b
 11948  001A90  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
 11949  001A92  C0EE  F063         	movff	_nvmEdc,NVMWrite@addr
 11950  001A96  C0EF  F064         	movff	_nvmEdc+1,NVMWrite@addr+1
 11951  001A9A  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
 11952  001A9C  0E01               	movlw	1
 11953  001A9E  6F65               	movwf	NVMWrite@count& (0+255),b
 11954  001AA0  EF70  F011         	goto	_NVMWrite	;wreg free
 11955  001AA4                     __end_of_AddConnection:
 11956                           	opt stack 0
 11957                           tblptru	equ	0xFF8
 11958                           tblptrh	equ	0xFF7
 11959                           tblptrl	equ	0xFF6
 11960                           tablat	equ	0xFF5
 11961                           prodh	equ	0xFF4
 11962                           prodl	equ	0xFF3
 11963                           intcon	equ	0xFF2
 11964                           intcon2	equ	0xFF1
 11965                           intcon3	equ	0xFF0
 11966                           postinc0	equ	0xFEE
 11967                           wreg	equ	0xFE8
 11968                           indf1	equ	0xFE7
 11969                           postinc1	equ	0xFE6
 11970                           postdec1	equ	0xFE5
 11971                           fsr1h	equ	0xFE2
 11972                           fsr1l	equ	0xFE1
 11973                           indf2	equ	0xFDF
 11974                           postinc2	equ	0xFDE
 11975                           postdec2	equ	0xFDD
 11976                           fsr2h	equ	0xFDA
 11977                           fsr2l	equ	0xFD9
 11978                           status	equ	0xFD8
 11979                           
 11980 ;; *************** function _isSameAddress *****************
 11981 ;; Defined at:
 11982 ;;		line 2126 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11983 ;; Parameters:    Size  Location     Type
 11984 ;;  Address1        2    0[BANK0 ] PTR unsigned char 
 11985 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
 11986 ;;  Address2        2    2[BANK0 ] PTR unsigned char 
 11987 ;;		 -> ConnectionTable(280), 
 11988 ;; Auto vars:     Size  Location     Type
 11989 ;;  i               1    6[BANK0 ] unsigned char 
 11990 ;; Return value:  Size  Location     Type
 11991 ;;                  1    wreg      unsigned char 
 11992 ;; Registers used:
 11993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11994 ;; Tracked objects:
 11995 ;;		On entry : F/0
 11996 ;;		On exit  : F/0
 11997 ;;		Unchanged: 0/0
 11998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11999 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12001 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12002 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12003 ;;Total ram usage:        7 bytes
 12004 ;; Hardware stack levels used:    1
 12005 ;; Hardware stack levels required when called:    5
 12006 ;; This function calls:
 12007 ;;		Nothing
 12008 ;; This function is called by:
 12009 ;;		_P2PTasks
 12010 ;;		_AddConnection
 12011 ;; This function uses a non-reentrant model
 12012 ;;
 12013                           
 12014                           	psect	text48
 12015  0031D0                     __ptext48:
 12016                           	opt stack 0
 12017  0031D0                     _isSameAddress:
 12018                           	opt stack 20
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;miwi_p2p.c: 2128: uint8_t i;
 12022                           ;miwi_p2p.c: 2130: for(i = 0; i < 8; i++)
 12023                           
 12024                           ;incstack = 0
 12025  0031D0  6B66               	clrf	isSameAddress@i& (0+255),b
 12026  0031D2                     l10906:
 12027                           
 12028                           ; BSR set to: 0
 12029                           ;miwi_p2p.c: 2131: {
 12030                           ;miwi_p2p.c: 2132: if( Address1[i] != Address2[i] )
 12031  0031D2  5166               	movf	isSameAddress@i& (0+255),w,b
 12032  0031D4  2562               	addwf	isSameAddress@Address2& (0+255),w,b
 12033  0031D6  6ED9               	movwf	fsr2l,c
 12034  0031D8  0E00               	movlw	0
 12035  0031DA  2163               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 12036  0031DC  6EDA               	movwf	fsr2h,c
 12037  0031DE  5166               	movf	isSameAddress@i& (0+255),w,b
 12038  0031E0  2560               	addwf	isSameAddress@Address1& (0+255),w,b
 12039  0031E2  6EE1               	movwf	fsr1l,c
 12040  0031E4  0E00               	movlw	0
 12041  0031E6  2161               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 12042  0031E8  6EE2               	movwf	fsr1h,c
 12043  0031EA  50DE               	movf	postinc2,w,c
 12044  0031EC  18E6               	xorwf	postinc1,w,c
 12045  0031EE  E001               	bz	l10912
 12046                           
 12047                           ; BSR set to: 0
 12048                           ;miwi_p2p.c: 2133: {
 12049                           ;miwi_p2p.c: 2134: return 0;
 12050  0031F0  0C00               	retlw	0
 12051  0031F2                     l10912:
 12052                           
 12053                           ; BSR set to: 0
 12054  0031F2  2B66               	incf	isSameAddress@i& (0+255),f,b
 12055                           
 12056                           ; BSR set to: 0
 12057  0031F4  0E07               	movlw	7
 12058  0031F6  6566               	cpfsgt	isSameAddress@i& (0+255),b
 12059  0031F8  D7EC               	goto	l10906
 12060  0031FA  0C01               	retlw	1
 12061  0031FC                     __end_of_isSameAddress:
 12062                           	opt stack 0
 12063                           tblptru	equ	0xFF8
 12064                           tblptrh	equ	0xFF7
 12065                           tblptrl	equ	0xFF6
 12066                           tablat	equ	0xFF5
 12067                           prodh	equ	0xFF4
 12068                           prodl	equ	0xFF3
 12069                           intcon	equ	0xFF2
 12070                           intcon2	equ	0xFF1
 12071                           intcon3	equ	0xFF0
 12072                           postinc0	equ	0xFEE
 12073                           wreg	equ	0xFE8
 12074                           indf1	equ	0xFE7
 12075                           postinc1	equ	0xFE6
 12076                           postdec1	equ	0xFE5
 12077                           fsr1h	equ	0xFE2
 12078                           fsr1l	equ	0xFE1
 12079                           indf2	equ	0xFDF
 12080                           postinc2	equ	0xFDE
 12081                           postdec2	equ	0xFDD
 12082                           fsr2h	equ	0xFDA
 12083                           fsr2l	equ	0xFD9
 12084                           status	equ	0xFD8
 12085                           
 12086 ;; *************** function _Total_Connections *****************
 12087 ;; Defined at:
 12088 ;;		line 62 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12089 ;; Parameters:    Size  Location     Type
 12090 ;;		None
 12091 ;; Auto vars:     Size  Location     Type
 12092 ;;  i               1    1[BANK0 ] unsigned char 
 12093 ;;  count           1    0[BANK0 ] unsigned char 
 12094 ;; Return value:  Size  Location     Type
 12095 ;;                  1    wreg      unsigned char 
 12096 ;; Registers used:
 12097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12098 ;; Tracked objects:
 12099 ;;		On entry : F/0
 12100 ;;		On exit  : F/0
 12101 ;;		Unchanged: 0/0
 12102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12104 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12106 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12107 ;;Total ram usage:        2 bytes
 12108 ;; Hardware stack levels used:    1
 12109 ;; Hardware stack levels required when called:    5
 12110 ;; This function calls:
 12111 ;;		Nothing
 12112 ;; This function is called by:
 12113 ;;		_AddConnection
 12114 ;; This function uses a non-reentrant model
 12115 ;;
 12116                           
 12117                           	psect	text49
 12118  002E02                     __ptext49:
 12119                           	opt stack 0
 12120  002E02                     _Total_Connections:
 12121                           	opt stack 19
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;miwi_p2p.c: 64: uint8_t count=0 , i;
 12125                           
 12126                           ; BSR set to: 0
 12127                           ;incstack = 0
 12128  002E02  6B60               	clrf	Total_Connections@count& (0+255),b
 12129                           
 12130                           ;miwi_p2p.c: 65: for (i=0;i<20;i++)
 12131  002E04  6B61               	clrf	Total_Connections@i& (0+255),b
 12132  002E06                     l10854:
 12133                           
 12134                           ; BSR set to: 0
 12135                           ;miwi_p2p.c: 66: {
 12136                           ;miwi_p2p.c: 68: if (ConnectionTable[i].Address[0] != 0x00 || ConnectionTable[i].Address
      +                          [1] != 0x00 || ConnectionTable[i].Address[2] != 0x00)
 12137  002E06  5161               	movf	Total_Connections@i& (0+255),w,b
 12138  002E08  0D0E               	mullw	14
 12139  002E0A  0EC6               	movlw	low (_ConnectionTable+4)
 12140  002E0C  24F3               	addwf	prodl,w,c
 12141  002E0E  6ED9               	movwf	fsr2l,c
 12142  002E10  0E02               	movlw	high (_ConnectionTable+4)
 12143  002E12  20F4               	addwfc	prodh,w,c
 12144  002E14  6EDA               	movwf	fsr2h,c
 12145  002E16  50DF               	movf	indf2,w,c
 12146  002E18  E114               	bnz	l10860
 12147                           
 12148                           ; BSR set to: 0
 12149  002E1A  5161               	movf	Total_Connections@i& (0+255),w,b
 12150  002E1C  0D0E               	mullw	14
 12151  002E1E  0EC7               	movlw	low (_ConnectionTable+5)
 12152  002E20  24F3               	addwf	prodl,w,c
 12153  002E22  6ED9               	movwf	fsr2l,c
 12154  002E24  0E02               	movlw	high (_ConnectionTable+5)
 12155  002E26  20F4               	addwfc	prodh,w,c
 12156  002E28  6EDA               	movwf	fsr2h,c
 12157  002E2A  50DF               	movf	indf2,w,c
 12158  002E2C  E10A               	bnz	l10860
 12159                           
 12160                           ; BSR set to: 0
 12161  002E2E  5161               	movf	Total_Connections@i& (0+255),w,b
 12162  002E30  0D0E               	mullw	14
 12163  002E32  0EC8               	movlw	low (_ConnectionTable+6)
 12164  002E34  24F3               	addwf	prodl,w,c
 12165  002E36  6ED9               	movwf	fsr2l,c
 12166  002E38  0E02               	movlw	high (_ConnectionTable+6)
 12167  002E3A  20F4               	addwfc	prodh,w,c
 12168  002E3C  6EDA               	movwf	fsr2h,c
 12169  002E3E  50DF               	movf	indf2,w,c
 12170  002E40  E001               	bz	l364
 12171  002E42                     l10860:
 12172                           
 12173                           ; BSR set to: 0
 12174                           ;miwi_p2p.c: 69: {
 12175                           ;miwi_p2p.c: 70: count++;
 12176  002E42  2B60               	incf	Total_Connections@count& (0+255),f,b
 12177  002E44                     l364:
 12178                           
 12179                           ; BSR set to: 0
 12180  002E44  2B61               	incf	Total_Connections@i& (0+255),f,b
 12181                           
 12182                           ; BSR set to: 0
 12183  002E46  0E13               	movlw	19
 12184  002E48  6561               	cpfsgt	Total_Connections@i& (0+255),b
 12185  002E4A  D7DD               	goto	l10854
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;miwi_p2p.c: 71: }
 12189                           ;miwi_p2p.c: 78: }
 12190                           ;miwi_p2p.c: 79: return count;
 12191  002E4C  5160               	movf	Total_Connections@count& (0+255),w,b
 12192                           
 12193                           ; BSR set to: 0
 12194  002E4E  0012               	return		;funcret
 12195  002E50                     __end_of_Total_Connections:
 12196                           	opt stack 0
 12197                           tblptru	equ	0xFF8
 12198                           tblptrh	equ	0xFF7
 12199                           tblptrl	equ	0xFF6
 12200                           tablat	equ	0xFF5
 12201                           prodh	equ	0xFF4
 12202                           prodl	equ	0xFF3
 12203                           intcon	equ	0xFF2
 12204                           intcon2	equ	0xFF1
 12205                           intcon3	equ	0xFF0
 12206                           postinc0	equ	0xFEE
 12207                           wreg	equ	0xFE8
 12208                           indf1	equ	0xFE7
 12209                           postinc1	equ	0xFE6
 12210                           postdec1	equ	0xFE5
 12211                           fsr1h	equ	0xFE2
 12212                           fsr1l	equ	0xFE1
 12213                           indf2	equ	0xFDF
 12214                           postinc2	equ	0xFDE
 12215                           postdec2	equ	0xFDD
 12216                           fsr2h	equ	0xFDA
 12217                           fsr2l	equ	0xFD9
 12218                           status	equ	0xFD8
 12219                           
 12220 ;; *************** function _MiApp_DiscardMessage *****************
 12221 ;; Defined at:
 12222 ;;		line 2370 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;		None
 12225 ;; Auto vars:     Size  Location     Type
 12226 ;;		None
 12227 ;; Return value:  Size  Location     Type
 12228 ;;		None               void
 12229 ;; Registers used:
 12230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12231 ;; Tracked objects:
 12232 ;;		On entry : F/0
 12233 ;;		On exit  : F/0
 12234 ;;		Unchanged: 0/0
 12235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12240 ;;Total ram usage:        0 bytes
 12241 ;; Hardware stack levels used:    1
 12242 ;; Hardware stack levels required when called:    6
 12243 ;; This function calls:
 12244 ;;		_MiMAC_DiscardPacket
 12245 ;; This function is called by:
 12246 ;;		_MiApp_EstablishConnection
 12247 ;;		_run_star_demo
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251                           	psect	text50
 12252  00350C                     __ptext50:
 12253                           	opt stack 0
 12254  00350C                     _MiApp_DiscardMessage:
 12255                           	opt stack 21
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;miwi_p2p.c: 2372: P2PStatus.bits.RxHasUserData = 0;
 12259                           
 12260                           ; BSR set to: 0
 12261                           ;incstack = 0
 12262  00350C  97DA               	bcf	_P2PStatus& (0+255),3,b	;volatile
 12263                           
 12264                           ; BSR set to: 0
 12265                           ;miwi_p2p.c: 2373: MiMAC_DiscardPacket();
 12266  00350E  EFCA  F019         	goto	_MiMAC_DiscardPacket	;wreg free
 12267  003512                     __end_of_MiApp_DiscardMessage:
 12268                           	opt stack 0
 12269                           tblptru	equ	0xFF8
 12270                           tblptrh	equ	0xFF7
 12271                           tblptrl	equ	0xFF6
 12272                           tablat	equ	0xFF5
 12273                           prodh	equ	0xFF4
 12274                           prodl	equ	0xFF3
 12275                           intcon	equ	0xFF2
 12276                           intcon2	equ	0xFF1
 12277                           intcon3	equ	0xFF0
 12278                           postinc0	equ	0xFEE
 12279                           wreg	equ	0xFE8
 12280                           indf1	equ	0xFE7
 12281                           postinc1	equ	0xFE6
 12282                           postdec1	equ	0xFE5
 12283                           fsr1h	equ	0xFE2
 12284                           fsr1l	equ	0xFE1
 12285                           indf2	equ	0xFDF
 12286                           postinc2	equ	0xFDE
 12287                           postdec2	equ	0xFDD
 12288                           fsr2h	equ	0xFDA
 12289                           fsr2l	equ	0xFD9
 12290                           status	equ	0xFD8
 12291                           
 12292 ;; *************** function _MiMAC_DiscardPacket *****************
 12293 ;; Defined at:
 12294 ;;		line 1050 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;		None
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;		None
 12299 ;; Return value:  Size  Location     Type
 12300 ;;		None               void
 12301 ;; Registers used:
 12302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : F/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12312 ;;Total ram usage:        0 bytes
 12313 ;; Hardware stack levels used:    1
 12314 ;; Hardware stack levels required when called:    5
 12315 ;; This function calls:
 12316 ;;		Nothing
 12317 ;; This function is called by:
 12318 ;;		_P2PTasks
 12319 ;;		_MiApp_DiscardMessage
 12320 ;; This function uses a non-reentrant model
 12321 ;;
 12322                           
 12323                           	psect	text51
 12324  003394                     __ptext51:
 12325                           	opt stack 0
 12326  003394                     _MiMAC_DiscardPacket:
 12327                           	opt stack 20
 12328                           
 12329                           ;drv_mrf_miwi_89xa.c: 1052: if( ReceivedBankIndex < 2 )
 12330                           
 12331                           ; BSR set to: 0
 12332                           ;incstack = 0
 12333  003394  0E02               	movlw	2
 12334  003396  0100               	movlb	0	; () banked
 12335  003398  61DD               	cpfslt	_ReceivedBankIndex& (0+255),b
 12336  00339A  0C02               	retlw	2
 12337                           
 12338                           ; BSR set to: 0
 12339                           ;drv_mrf_miwi_89xa.c: 1053: {
 12340                           ;drv_mrf_miwi_89xa.c: 1054: RxPacket[ReceivedBankIndex].flags.Val = 0;
 12341  00339C  51DD               	movf	_ReceivedBankIndex& (0+255),w,b
 12342  00339E  0D39               	mullw	57
 12343  0033A0  0E50               	movlw	low _RxPacket
 12344  0033A2  24F3               	addwf	prodl,w,c
 12345  0033A4  6ED9               	movwf	fsr2l,c
 12346  0033A6  0E02               	movlw	high _RxPacket
 12347  0033A8  20F4               	addwfc	prodh,w,c
 12348  0033AA  6EDA               	movwf	fsr2h,c
 12349  0033AC  0E00               	movlw	0
 12350  0033AE  6ADF               	clrf	indf2,c
 12351                           
 12352                           ; BSR set to: 0
 12353                           ;drv_mrf_miwi_89xa.c: 1055: ReceivedBankIndex = 0xFF;
 12354  0033B0  69DD               	setf	_ReceivedBankIndex& (0+255),b
 12355                           
 12356                           ; BSR set to: 0
 12357  0033B2  0012               	return		;funcret
 12358  0033B4                     __end_of_MiMAC_DiscardPacket:
 12359                           	opt stack 0
 12360                           tblptru	equ	0xFF8
 12361                           tblptrh	equ	0xFF7
 12362                           tblptrl	equ	0xFF6
 12363                           tablat	equ	0xFF5
 12364                           prodh	equ	0xFF4
 12365                           prodl	equ	0xFF3
 12366                           intcon	equ	0xFF2
 12367                           intcon2	equ	0xFF1
 12368                           intcon3	equ	0xFF0
 12369                           postinc0	equ	0xFEE
 12370                           wreg	equ	0xFE8
 12371                           indf1	equ	0xFE7
 12372                           postinc1	equ	0xFE6
 12373                           postdec1	equ	0xFE5
 12374                           fsr1h	equ	0xFE2
 12375                           fsr1l	equ	0xFE1
 12376                           indf2	equ	0xFDF
 12377                           postinc2	equ	0xFDE
 12378                           postdec2	equ	0xFDD
 12379                           fsr2h	equ	0xFDA
 12380                           fsr2l	equ	0xFD9
 12381                           status	equ	0xFD8
 12382                           
 12383 ;; *************** function _MiApp_ConnectionMode *****************
 12384 ;; Defined at:
 12385 ;;		line 2962 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;  Mode            1    wreg     unsigned char 
 12388 ;; Auto vars:     Size  Location     Type
 12389 ;;  Mode            1   11[BANK0 ] unsigned char 
 12390 ;; Return value:  Size  Location     Type
 12391 ;;		None               void
 12392 ;; Registers used:
 12393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12394 ;; Tracked objects:
 12395 ;;		On entry : 0/0
 12396 ;;		On exit  : 0/0
 12397 ;;		Unchanged: 0/0
 12398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12400 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12401 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12402 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12403 ;;Total ram usage:        2 bytes
 12404 ;; Hardware stack levels used:    1
 12405 ;; Hardware stack levels required when called:    7
 12406 ;; This function calls:
 12407 ;;		_NVMWrite
 12408 ;; This function is called by:
 12409 ;;		_Initialize_Demo
 12410 ;;		_run_star_demo
 12411 ;; This function uses a non-reentrant model
 12412 ;;
 12413                           
 12414                           	psect	text52
 12415  003030                     __ptext52:
 12416                           	opt stack 0
 12417  003030                     _MiApp_ConnectionMode:
 12418                           	opt stack 21
 12419                           
 12420                           ; BSR set to: 0
 12421                           ;incstack = 0
 12422                           ;MiApp_ConnectionMode@Mode stored from wreg
 12423  003030  0100               	movlb	0	; () banked
 12424  003032  6F6B               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 12425                           
 12426                           ;miwi_p2p.c: 2964: if( Mode > 3 )
 12427  003034  0E03               	movlw	3
 12428  003036  656B               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 12429  003038  D001               	goto	l661
 12430  00303A  0C03               	retlw	3
 12431  00303C                     l661:
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;miwi_p2p.c: 2967: }
 12435                           ;miwi_p2p.c: 2968: ConnMode = Mode;
 12436  00303C  C06B  F0FD         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 12437                           
 12438                           ; BSR set to: 0
 12439                           ;miwi_p2p.c: 2969: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 12440  003040  C0FD  F06A         	movff	_ConnMode,??_MiApp_ConnectionMode
 12441  003044  3B6A               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 12442  003046  0EF0               	movlw	240
 12443  003048  176A               	andwf	??_MiApp_ConnectionMode& (0+255),f,b
 12444  00304A  51D9               	movf	_P2PCapacityInfo& (0+255),w,b
 12445  00304C  0B0F               	andlw	15
 12446  00304E  116A               	iorwf	??_MiApp_ConnectionMode& (0+255),w,b
 12447  003050  6FD9               	movwf	_P2PCapacityInfo& (0+255),b
 12448                           
 12449                           ; BSR set to: 0
 12450                           ;miwi_p2p.c: 2972: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
 12451  003052  0EFD               	movlw	low _ConnMode
 12452  003054  6F61               	movwf	NVMWrite@source& (0+255),b
 12453  003056  6B62               	clrf	(NVMWrite@source+1)& (0+255),b
 12454  003058  C0E8  F063         	movff	_nvmConnMode,NVMWrite@addr
 12455  00305C  C0E9  F064         	movff	_nvmConnMode+1,NVMWrite@addr+1
 12456  003060  6B66               	clrf	(NVMWrite@count+1)& (0+255),b
 12457  003062  0E01               	movlw	1
 12458  003064  6F65               	movwf	NVMWrite@count& (0+255),b
 12459  003066  EF70  F011         	goto	_NVMWrite	;wreg free
 12460  00306A                     __end_of_MiApp_ConnectionMode:
 12461                           	opt stack 0
 12462                           tblptru	equ	0xFF8
 12463                           tblptrh	equ	0xFF7
 12464                           tblptrl	equ	0xFF6
 12465                           tablat	equ	0xFF5
 12466                           prodh	equ	0xFF4
 12467                           prodl	equ	0xFF3
 12468                           intcon	equ	0xFF2
 12469                           intcon2	equ	0xFF1
 12470                           intcon3	equ	0xFF0
 12471                           postinc0	equ	0xFEE
 12472                           wreg	equ	0xFE8
 12473                           indf1	equ	0xFE7
 12474                           postinc1	equ	0xFE6
 12475                           postdec1	equ	0xFE5
 12476                           fsr1h	equ	0xFE2
 12477                           fsr1l	equ	0xFE1
 12478                           indf2	equ	0xFDF
 12479                           postinc2	equ	0xFDE
 12480                           postdec2	equ	0xFDD
 12481                           fsr2h	equ	0xFDA
 12482                           fsr2l	equ	0xFD9
 12483                           status	equ	0xFD8
 12484                           
 12485 ;; *************** function _NVMWrite *****************
 12486 ;; Defined at:
 12487 ;;		line 179 in file "../../../../../framework/miwi/src/miwi_nvm.c"
 12488 ;; Parameters:    Size  Location     Type
 12489 ;;  source          2    1[BANK0 ] PTR unsigned char 
 12490 ;;		 -> myConnectionIndex_in_PanCo(1), currentChannel(1), ConnMode(1), role(1), 
 12491 ;;		 -> conn_size(1), ConnectionTable(280), 
 12492 ;;  addr            2    3[BANK0 ] unsigned int 
 12493 ;;  count           2    5[BANK0 ] unsigned int 
 12494 ;; Auto vars:     Size  Location     Type
 12495 ;;  PageCounter     1    9[BANK0 ] unsigned char 
 12496 ;;  oldRFIE         1    8[BANK0 ] unsigned char 
 12497 ;; Return value:  Size  Location     Type
 12498 ;;		None               void
 12499 ;; Registers used:
 12500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12501 ;; Tracked objects:
 12502 ;;		On entry : F/0
 12503 ;;		On exit  : 0/0
 12504 ;;		Unchanged: 0/0
 12505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12506 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12508 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12509 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12510 ;;Total ram usage:        9 bytes
 12511 ;; Hardware stack levels used:    1
 12512 ;; Hardware stack levels required when called:    6
 12513 ;; This function calls:
 12514 ;;		_MacroNop
 12515 ;;		_SPI1_Exchange8bit
 12516 ;; This function is called by:
 12517 ;;		_P2PTasks
 12518 ;;		_MiApp_ProtocolInit
 12519 ;;		_MiApp_TransceiverPowerState
 12520 ;;		_MiApp_SetChannel
 12521 ;;		_AddConnection
 12522 ;;		_MiApp_ConnectionMode
 12523 ;;		_Initialize_Demo
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527                           	psect	text53
 12528  0022E0                     __ptext53:
 12529                           	opt stack 0
 12530  0022E0                     _NVMWrite:
 12531                           	opt stack 19
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;miwi_nvm.c: 187: uint8_t oldRFIE = INTCON3bits.INT3IE;
 12535                           
 12536                           ; BSR set to: 0
 12537                           
 12538                           ;incstack = 0
 12539  0022E0  0E00               	movlw	0
 12540  0022E2  BAF0               	btfsc	intcon3,5,c	;volatile
 12541  0022E4  0E01               	movlw	1
 12542  0022E6  6F68               	movwf	NVMWrite@oldRFIE& (0+255),b
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;miwi_nvm.c: 188: INTCON3bits.INT3IE = 0;
 12546  0022E8  9AF0               	bcf	intcon3,5,c	;volatile
 12547  0022EA                     l10804:
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;miwi_nvm.c: 194: {
 12551                           ;miwi_nvm.c: 195: LATDbits.LATD5 = 0;
 12552  0022EA  9A8C               	bcf	3980,5,c	;volatile
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;miwi_nvm.c: 196: SPI1_Exchange8bit(0x05);
 12556  0022EC  0E05               	movlw	5
 12557  0022EE  EC4D  F01A         	call	_SPI1_Exchange8bit
 12558                           
 12559                           ;miwi_nvm.c: 197: PageCounter = SPI1_Exchange8bit(0x00);
 12560  0022F2  0E00               	movlw	0
 12561  0022F4  EC4D  F01A         	call	_SPI1_Exchange8bit
 12562  0022F8  0100               	movlb	0	; () banked
 12563  0022FA  6F69               	movwf	NVMWrite@PageCounter& (0+255),b
 12564                           
 12565                           ; BSR set to: 0
 12566                           ;miwi_nvm.c: 198: LATDbits.LATD5 = 1;
 12567  0022FC  8A8C               	bsf	3980,5,c	;volatile
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;miwi_nvm.c: 199: MacroNop();
 12571  0022FE  EC8F  F01A         	call	_MacroNop	;wreg free
 12572                           
 12573                           ;miwi_nvm.c: 200: } while(PageCounter & 0x01 );
 12574  002302  0100               	movlb	0	; () banked
 12575  002304  B169               	btfsc	NVMWrite@PageCounter& (0+255),0,b
 12576  002306  D7F1               	goto	l10804
 12577                           
 12578                           ; BSR set to: 0
 12579                           ;miwi_nvm.c: 202: LATDbits.LATD5 = 0;
 12580  002308  9A8C               	bcf	3980,5,c	;volatile
 12581                           
 12582                           ; BSR set to: 0
 12583                           ;miwi_nvm.c: 203: SPI1_Exchange8bit(0x06);
 12584  00230A  0E06               	movlw	6
 12585  00230C  EC4D  F01A         	call	_SPI1_Exchange8bit
 12586                           
 12587                           ;miwi_nvm.c: 204: LATDbits.LATD5 = 1;
 12588  002310  8A8C               	bsf	3980,5,c	;volatile
 12589                           
 12590                           ;miwi_nvm.c: 205: MacroNop();
 12591  002312  EC8F  F01A         	call	_MacroNop	;wreg free
 12592                           
 12593                           ;miwi_nvm.c: 206: LATDbits.LATD5 = 0;
 12594  002316  9A8C               	bcf	3980,5,c	;volatile
 12595                           
 12596                           ;miwi_nvm.c: 221: SPI1_Exchange8bit(0x02);
 12597  002318  0E02               	movlw	2
 12598  00231A  EC4D  F01A         	call	_SPI1_Exchange8bit
 12599                           
 12600                           ;miwi_nvm.c: 222: SPI1_Exchange8bit(addr>>8);
 12601  00231E  0100               	movlb	0	; () banked
 12602  002320  5164               	movf	(NVMWrite@addr+1)& (0+255),w,b
 12603  002322  EC4D  F01A         	call	_SPI1_Exchange8bit
 12604                           
 12605                           ;miwi_nvm.c: 223: SPI1_Exchange8bit(addr);
 12606  002326  0100               	movlb	0	; () banked
 12607  002328  5163               	movf	NVMWrite@addr& (0+255),w,b
 12608  00232A  EC4D  F01A         	call	_SPI1_Exchange8bit
 12609                           
 12610                           ;miwi_nvm.c: 225: PageCounter = 0;
 12611  00232E  0100               	movlb	0	; () banked
 12612  002330  6B69               	clrf	NVMWrite@PageCounter& (0+255),b
 12613                           
 12614                           ;miwi_nvm.c: 226: while( count > 0 )
 12615  002332  D01A               	goto	l10846
 12616  002334                     l10832:
 12617                           
 12618                           ; BSR set to: 0
 12619                           ;miwi_nvm.c: 227: {
 12620                           ;miwi_nvm.c: 228: SPI1_Exchange8bit(*source++);
 12621  002334  C061  FFD9         	movff	NVMWrite@source,fsr2l
 12622  002338  C062  FFDA         	movff	NVMWrite@source+1,fsr2h
 12623  00233C  50DF               	movf	indf2,w,c
 12624  00233E  EC4D  F01A         	call	_SPI1_Exchange8bit
 12625  002342  0100               	movlb	0	; () banked
 12626  002344  4B61               	infsnz	NVMWrite@source& (0+255),f,b
 12627  002346  2B62               	incf	(NVMWrite@source+1)& (0+255),f,b
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;miwi_nvm.c: 229: count--;
 12631  002348  0765               	decf	NVMWrite@count& (0+255),f,b
 12632  00234A  A0D8               	btfss	status,0,c
 12633  00234C  0766               	decf	(NVMWrite@count+1)& (0+255),f,b
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;miwi_nvm.c: 230: PageCounter++;
 12637  00234E  2B69               	incf	NVMWrite@PageCounter& (0+255),f,b
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;miwi_nvm.c: 231: if( ((addr + PageCounter) & (64-1)) == 0 )
 12641  002350  5169               	movf	NVMWrite@PageCounter& (0+255),w,b
 12642  002352  2563               	addwf	NVMWrite@addr& (0+255),w,b
 12643  002354  6F67               	movwf	??_NVMWrite& (0+255),b
 12644  002356  0E3F               	movlw	63
 12645  002358  1767               	andwf	??_NVMWrite& (0+255),f,b
 12646  00235A  E106               	bnz	l10846
 12647                           
 12648                           ; BSR set to: 0
 12649                           ;miwi_nvm.c: 232: {
 12650                           ;miwi_nvm.c: 233: LATDbits.LATD5 = 1;
 12651  00235C  8A8C               	bsf	3980,5,c	;volatile
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;miwi_nvm.c: 234: addr += PageCounter;
 12655  00235E  5169               	movf	NVMWrite@PageCounter& (0+255),w,b
 12656  002360  2763               	addwf	NVMWrite@addr& (0+255),f,b
 12657  002362  0E00               	movlw	0
 12658  002364  2364               	addwfc	(NVMWrite@addr+1)& (0+255),f,b
 12659                           
 12660                           ;miwi_nvm.c: 235: goto EEPROM_NEXT_PAGE;
 12661  002366  D7C1               	goto	l10804
 12662  002368                     l10846:
 12663                           
 12664                           ; BSR set to: 0
 12665  002368  5165               	movf	NVMWrite@count& (0+255),w,b
 12666  00236A  1166               	iorwf	(NVMWrite@count+1)& (0+255),w,b
 12667  00236C  E1E3               	bnz	l10832
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;miwi_nvm.c: 236: }
 12671                           ;miwi_nvm.c: 237: }
 12672                           ;miwi_nvm.c: 238: LATDbits.LATD5 = 1;
 12673  00236E  8A8C               	bsf	3980,5,c	;volatile
 12674                           
 12675                           ;miwi_nvm.c: 243: INTCON3bits.INT3IE = oldRFIE;
 12676  002370  B168               	btfsc	NVMWrite@oldRFIE& (0+255),0,b
 12677  002372  D002               	bra	u10725
 12678  002374  9AF0               	bcf	intcon3,5,c	;volatile
 12679  002376  D001               	bra	u10726
 12680  002378                     u10725:
 12681  002378  8AF0               	bsf	intcon3,5,c	;volatile
 12682  00237A                     u10726:
 12683  00237A  0012               	return		;funcret
 12684  00237C                     __end_of_NVMWrite:
 12685                           	opt stack 0
 12686                           tblptru	equ	0xFF8
 12687                           tblptrh	equ	0xFF7
 12688                           tblptrl	equ	0xFF6
 12689                           tablat	equ	0xFF5
 12690                           prodh	equ	0xFF4
 12691                           prodl	equ	0xFF3
 12692                           intcon	equ	0xFF2
 12693                           intcon2	equ	0xFF1
 12694                           intcon3	equ	0xFF0
 12695                           postinc0	equ	0xFEE
 12696                           wreg	equ	0xFE8
 12697                           indf1	equ	0xFE7
 12698                           postinc1	equ	0xFE6
 12699                           postdec1	equ	0xFE5
 12700                           fsr1h	equ	0xFE2
 12701                           fsr1l	equ	0xFE1
 12702                           indf2	equ	0xFDF
 12703                           postinc2	equ	0xFDE
 12704                           postdec2	equ	0xFDD
 12705                           fsr2h	equ	0xFDA
 12706                           fsr2l	equ	0xFD9
 12707                           status	equ	0xFD8
 12708                           
 12709 ;; *************** function _SPI1_Exchange8bit *****************
 12710 ;; Defined at:
 12711 ;;		line 51 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/spi.c"
 12712 ;; Parameters:    Size  Location     Type
 12713 ;;  data            1    wreg     unsigned char 
 12714 ;; Auto vars:     Size  Location     Type
 12715 ;;  data            1    0[BANK0 ] unsigned char 
 12716 ;; Return value:  Size  Location     Type
 12717 ;;                  1    wreg      unsigned char 
 12718 ;; Registers used:
 12719 ;;		wreg, status,2
 12720 ;; Tracked objects:
 12721 ;;		On entry : 0/0
 12722 ;;		On exit  : 0/0
 12723 ;;		Unchanged: 0/0
 12724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12726 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12728 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12729 ;;Total ram usage:        1 bytes
 12730 ;; Hardware stack levels used:    1
 12731 ;; Hardware stack levels required when called:    5
 12732 ;; This function calls:
 12733 ;;		Nothing
 12734 ;; This function is called by:
 12735 ;;		_RegisterSet
 12736 ;;		_RegisterRead
 12737 ;;		_WriteFIFO
 12738 ;;		_NVMRead
 12739 ;;		_NVMWrite
 12740 ;;		_EEPROM_Read
 12741 ;; This function uses a non-reentrant model
 12742 ;;
 12743                           
 12744                           	psect	text54
 12745  00349A                     __ptext54:
 12746                           	opt stack 0
 12747  00349A                     _SPI1_Exchange8bit:
 12748                           	opt stack 18
 12749                           
 12750                           ;incstack = 0
 12751                           ;SPI1_Exchange8bit@data stored from wreg
 12752  00349A  0100               	movlb	0	; () banked
 12753  00349C  6F60               	movwf	SPI1_Exchange8bit@data& (0+255),b
 12754                           
 12755                           ;spi.c: 53: SSP1CON1bits.WCOL = 0;
 12756  00349E  9EC6               	bcf	4038,7,c	;volatile
 12757                           
 12758                           ;spi.c: 55: SSP1BUF = data;
 12759  0034A0  C060  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
 12760  0034A4                     l890:
 12761  0034A4  A0C7               	btfss	4039,0,c	;volatile
 12762  0034A6  D7FE               	goto	l890
 12763                           
 12764                           ;spi.c: 58: }
 12765                           ;spi.c: 60: return (SSP1BUF);
 12766  0034A8  50C9               	movf	4041,w,c	;volatile
 12767  0034AA  0012               	return		;funcret
 12768  0034AC                     __end_of_SPI1_Exchange8bit:
 12769                           	opt stack 0
 12770                           tblptru	equ	0xFF8
 12771                           tblptrh	equ	0xFF7
 12772                           tblptrl	equ	0xFF6
 12773                           tablat	equ	0xFF5
 12774                           prodh	equ	0xFF4
 12775                           prodl	equ	0xFF3
 12776                           intcon	equ	0xFF2
 12777                           intcon2	equ	0xFF1
 12778                           intcon3	equ	0xFF0
 12779                           postinc0	equ	0xFEE
 12780                           wreg	equ	0xFE8
 12781                           indf1	equ	0xFE7
 12782                           postinc1	equ	0xFE6
 12783                           postdec1	equ	0xFE5
 12784                           fsr1h	equ	0xFE2
 12785                           fsr1l	equ	0xFE1
 12786                           indf2	equ	0xFDF
 12787                           postinc2	equ	0xFDE
 12788                           postdec2	equ	0xFDD
 12789                           fsr2h	equ	0xFDA
 12790                           fsr2l	equ	0xFD9
 12791                           status	equ	0xFD8
 12792                           
 12793 ;; *************** function _MacroNop *****************
 12794 ;; Defined at:
 12795 ;;		line 322 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12796 ;; Parameters:    Size  Location     Type
 12797 ;;		None
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;		None
 12800 ;; Return value:  Size  Location     Type
 12801 ;;		None               void
 12802 ;; Registers used:
 12803 ;;		None
 12804 ;; Tracked objects:
 12805 ;;		On entry : 0/0
 12806 ;;		On exit  : 0/0
 12807 ;;		Unchanged: 0/0
 12808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12813 ;;Total ram usage:        0 bytes
 12814 ;; Hardware stack levels used:    1
 12815 ;; Hardware stack levels required when called:    5
 12816 ;; This function calls:
 12817 ;;		Nothing
 12818 ;; This function is called by:
 12819 ;;		_NVMWrite
 12820 ;; This function uses a non-reentrant model
 12821 ;;
 12822                           
 12823                           	psect	text55
 12824  00351E                     __ptext55:
 12825                           	opt stack 0
 12826  00351E                     _MacroNop:
 12827                           	opt stack 19
 12828                           
 12829                           ;miwi_p2p.c: 324: __nop();
 12830                           
 12831                           ;incstack = 0
 12832  00351E  F000               	nop	
 12833  003520  0012               	return		;funcret
 12834  003522                     __end_of_MacroNop:
 12835                           	opt stack 0
 12836                           tblptru	equ	0xFF8
 12837                           tblptrh	equ	0xFF7
 12838                           tblptrl	equ	0xFF6
 12839                           tablat	equ	0xFF5
 12840                           prodh	equ	0xFF4
 12841                           prodl	equ	0xFF3
 12842                           intcon	equ	0xFF2
 12843                           intcon2	equ	0xFF1
 12844                           intcon3	equ	0xFF0
 12845                           postinc0	equ	0xFEE
 12846                           wreg	equ	0xFE8
 12847                           indf1	equ	0xFE7
 12848                           postinc1	equ	0xFE6
 12849                           postdec1	equ	0xFE5
 12850                           fsr1h	equ	0xFE2
 12851                           fsr1l	equ	0xFE1
 12852                           indf2	equ	0xFDF
 12853                           postinc2	equ	0xFDE
 12854                           postdec2	equ	0xFDD
 12855                           fsr2h	equ	0xFDA
 12856                           fsr2l	equ	0xFD9
 12857                           status	equ	0xFD8
 12858                           
 12859 ;; *************** function _DumpConnection *****************
 12860 ;; Defined at:
 12861 ;;		line 2417 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12862 ;; Parameters:    Size  Location     Type
 12863 ;;  index           1    wreg     unsigned char 
 12864 ;; Auto vars:     Size  Location     Type
 12865 ;;  index           1    6[BANK0 ] unsigned char 
 12866 ;;  i               1    8[BANK0 ] unsigned char 
 12867 ;;  j               1    7[BANK0 ] unsigned char 
 12868 ;; Return value:  Size  Location     Type
 12869 ;;		None               void
 12870 ;; Registers used:
 12871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12872 ;; Tracked objects:
 12873 ;;		On entry : 0/0
 12874 ;;		On exit  : F/0
 12875 ;;		Unchanged: 0/0
 12876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12878 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12879 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12880 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12881 ;;Total ram usage:        5 bytes
 12882 ;; Hardware stack levels used:    1
 12883 ;; Hardware stack levels required when called:    7
 12884 ;; This function calls:
 12885 ;;		_CONSOLE_PrintHex
 12886 ;;		_CONSOLE_PutString
 12887 ;; This function is called by:
 12888 ;;		_Initialize_Demo
 12889 ;; This function uses a non-reentrant model
 12890 ;;
 12891                           
 12892                           	psect	text56
 12893  00142A                     __ptext56:
 12894                           	opt stack 0
 12895  00142A                     _DumpConnection:
 12896                           	opt stack 22
 12897                           
 12898                           ;incstack = 0
 12899                           ;DumpConnection@index stored from wreg
 12900  00142A  0100               	movlb	0	; () banked
 12901  00142C  6F66               	movwf	DumpConnection@index& (0+255),b
 12902                           
 12903                           ;miwi_p2p.c: 2419: uint8_t i, j;
 12904                           ;miwi_p2p.c: 2421: if( index > 20 )
 12905  00142E  0E14               	movlw	20
 12906  001430  6566               	cpfsgt	DumpConnection@index& (0+255),b
 12907  001432  D01D               	goto	l11936
 12908                           
 12909                           ; BSR set to: 0
 12910                           ;miwi_p2p.c: 2422: {
 12911                           ;miwi_p2p.c: 2423: CONSOLE_PutString((char*)"\r\n\r\nMy Address: 0x");
 12912  001434  0E1D               	movlw	low STR_2
 12913  001436  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12914  001438  0EFF               	movlw	high STR_2
 12915  00143A  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12916  00143C  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 12917                           
 12918                           ; BSR set to: 0
 12919                           ;miwi_p2p.c: 2424: for(i = 0; i < 8; i++)
 12920  001440  6B68               	clrf	DumpConnection@i& (0+255),b
 12921  001442                     l11928:
 12922                           
 12923                           ; BSR set to: 0
 12924                           ;miwi_p2p.c: 2425: {
 12925                           ;miwi_p2p.c: 2427: CONSOLE_PrintHex(myLongAddress[8-1-i]);
 12926  001442  5168               	movf	DumpConnection@i& (0+255),w,b
 12927  001444  08B0               	sublw	low (_myLongAddress+7)
 12928  001446  6ED9               	movwf	fsr2l,c
 12929  001448  0E00               	movlw	0
 12930  00144A  A0D8               	btfss	status,0,c
 12931  00144C  2AE8               	incf	wreg,f,c
 12932  00144E  0801               	sublw	high (_myLongAddress+7)
 12933  001450  6EDA               	movwf	fsr2h,c
 12934  001452  50DF               	movf	indf2,w,c
 12935  001454  EC35  F018         	call	_CONSOLE_PrintHex
 12936  001458  0100               	movlb	0	; () banked
 12937  00145A  2B68               	incf	DumpConnection@i& (0+255),f,b
 12938                           
 12939                           ; BSR set to: 0
 12940  00145C  0E07               	movlw	7
 12941  00145E  6568               	cpfsgt	DumpConnection@i& (0+255),b
 12942  001460  D7F0               	goto	l11928
 12943                           
 12944                           ; BSR set to: 0
 12945                           ;miwi_p2p.c: 2428: }
 12946                           ;miwi_p2p.c: 2436: CONSOLE_PutString((char*)"  Channel: ");
 12947  001462  0EC0               	movlw	low STR_3
 12948  001464  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12949  001466  0EFF               	movlw	high STR_3
 12950  001468  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12951  00146A  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 12952  00146E                     l11936:
 12953                           
 12954                           ; BSR set to: 0
 12955                           ;miwi_p2p.c: 2439: }
 12956                           ;miwi_p2p.c: 2441: if( index < 20 )
 12957  00146E  0E14               	movlw	20
 12958  001470  6166               	cpfslt	DumpConnection@index& (0+255),b
 12959  001472  D06A               	goto	l11978
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;miwi_p2p.c: 2442: {
 12963                           ;miwi_p2p.c: 2443: CONSOLE_PutString((char*)"\r\nConnection     PeerLongAddress     Peer
      +                          Info\r\n");
 12964  001474  0E0B               	movlw	low (STR_9+2)
 12965  001476  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12966  001478  0EFC               	movlw	high (STR_9+2)
 12967  00147A  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12968  00147C  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;miwi_p2p.c: 2444: if( ConnectionTable[index].status.bits.isValid )
 12972  001480  5166               	movf	DumpConnection@index& (0+255),w,b
 12973  001482  0D0E               	mullw	14
 12974  001484  0ECE               	movlw	low (_ConnectionTable+12)
 12975  001486  24F3               	addwf	prodl,w,c
 12976  001488  6ED9               	movwf	fsr2l,c
 12977  00148A  0E02               	movlw	high (_ConnectionTable+12)
 12978  00148C  20F4               	addwfc	prodh,w,c
 12979  00148E  6EDA               	movwf	fsr2h,c
 12980  001490  AEDF               	btfss	indf2,7,c
 12981  001492  0012               	return	
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;miwi_p2p.c: 2445: {
 12985                           ;miwi_p2p.c: 2446: CONSOLE_PrintHex(index);
 12986  001494  5166               	movf	DumpConnection@index& (0+255),w,b
 12987  001496  EC35  F018         	call	_CONSOLE_PrintHex
 12988                           
 12989                           ;miwi_p2p.c: 2447: CONSOLE_PutString((char*)"             ");
 12990  00149A  0EA6               	movlw	low STR_5
 12991  00149C  0100               	movlb	0	; () banked
 12992  00149E  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 12993  0014A0  0EFF               	movlw	high STR_5
 12994  0014A2  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 12995  0014A4  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;miwi_p2p.c: 2448: for(i = 0; i < 8; i++)
 12999  0014A8  6B68               	clrf	DumpConnection@i& (0+255),b
 13000  0014AA                     l11952:
 13001                           
 13002                           ; BSR set to: 0
 13003                           ;miwi_p2p.c: 2449: {
 13004                           ;miwi_p2p.c: 2450: if(i < 8)
 13005  0014AA  0E08               	movlw	8
 13006  0014AC  6168               	cpfslt	DumpConnection@i& (0+255),b
 13007  0014AE  D019               	goto	l11956
 13008                           
 13009                           ; BSR set to: 0
 13010                           ;miwi_p2p.c: 2451: {
 13011                           ;miwi_p2p.c: 2452: CONSOLE_PrintHex( ConnectionTable[index].Address[8-1-i] );
 13012  0014B0  5166               	movf	DumpConnection@index& (0+255),w,b
 13013  0014B2  0D0E               	mullw	14
 13014  0014B4  0EC2               	movlw	low _ConnectionTable
 13015  0014B6  6F64               	movwf	??_DumpConnection& (0+255),b
 13016  0014B8  0E02               	movlw	high _ConnectionTable
 13017  0014BA  6F65               	movwf	(??_DumpConnection+1)& (0+255),b
 13018  0014BC  0E0B               	movlw	11
 13019  0014BE  2764               	addwf	??_DumpConnection& (0+255),f,b
 13020  0014C0  0E00               	movlw	0
 13021  0014C2  2365               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 13022  0014C4  50F3               	movf	prodl,w,c
 13023  0014C6  2764               	addwf	??_DumpConnection& (0+255),f,b
 13024  0014C8  50F4               	movf	prodh,w,c
 13025  0014CA  2365               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 13026  0014CC  5168               	movf	DumpConnection@i& (0+255),w,b
 13027  0014CE  5D64               	subwf	??_DumpConnection& (0+255),w,b
 13028  0014D0  6ED9               	movwf	fsr2l,c
 13029  0014D2  5165               	movf	(??_DumpConnection+1)& (0+255),w,b
 13030  0014D4  A0D8               	btfss	status,0,c
 13031  0014D6  0565               	decf	(??_DumpConnection+1)& (0+255),w,b
 13032  0014D8  6EDA               	movwf	fsr2h,c
 13033  0014DA  50DF               	movf	indf2,w,c
 13034  0014DC  EC35  F018         	call	_CONSOLE_PrintHex
 13035                           
 13036                           ;miwi_p2p.c: 2453: }
 13037  0014E0  D006               	goto	l11958
 13038  0014E2                     l11956:
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;miwi_p2p.c: 2454: else
 13042                           ;miwi_p2p.c: 2455: {
 13043                           ;miwi_p2p.c: 2456: CONSOLE_PutString((char*)"  ");
 13044  0014E2  0EB1               	movlw	low (STR_5+11)
 13045  0014E4  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13046  0014E6  0EFF               	movlw	high (STR_5+11)
 13047  0014E8  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13048  0014EA  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13049  0014EE                     l11958:
 13050  0014EE  0100               	movlb	0	; () banked
 13051  0014F0  2B68               	incf	DumpConnection@i& (0+255),f,b
 13052                           
 13053                           ; BSR set to: 0
 13054  0014F2  0E07               	movlw	7
 13055  0014F4  6568               	cpfsgt	DumpConnection@i& (0+255),b
 13056  0014F6  D7D9               	goto	l11952
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;miwi_p2p.c: 2457: }
 13060                           ;miwi_p2p.c: 2458: }
 13061                           ;miwi_p2p.c: 2459: CONSOLE_PutString((char*)"    ");
 13062  0014F8  0EAF               	movlw	low (STR_5+9)
 13063  0014FA  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13064  0014FC  0EFF               	movlw	high (STR_5+9)
 13065  0014FE  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13066  001500  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13067                           
 13068                           ; BSR set to: 0
 13069                           ;miwi_p2p.c: 2461: for(i = 0; i < 1; i++)
 13070  001504  6B68               	clrf	DumpConnection@i& (0+255),b
 13071  001506                     l11970:
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;miwi_p2p.c: 2462: {
 13075                           ;miwi_p2p.c: 2463: CONSOLE_PrintHex( ConnectionTable[index].PeerInfo[i] );
 13076  001506  5166               	movf	DumpConnection@index& (0+255),w,b
 13077  001508  0D0E               	mullw	14
 13078  00150A  0EC2               	movlw	low _ConnectionTable
 13079  00150C  6F64               	movwf	??_DumpConnection& (0+255),b
 13080  00150E  0E02               	movlw	high _ConnectionTable
 13081  001510  6F65               	movwf	(??_DumpConnection+1)& (0+255),b
 13082  001512  0E0D               	movlw	13
 13083  001514  2764               	addwf	??_DumpConnection& (0+255),f,b
 13084  001516  0E00               	movlw	0
 13085  001518  2365               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 13086  00151A  50F3               	movf	prodl,w,c
 13087  00151C  2764               	addwf	??_DumpConnection& (0+255),f,b
 13088  00151E  50F4               	movf	prodh,w,c
 13089  001520  2365               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 13090  001522  5168               	movf	DumpConnection@i& (0+255),w,b
 13091  001524  2564               	addwf	??_DumpConnection& (0+255),w,b
 13092  001526  6ED9               	movwf	fsr2l,c
 13093  001528  0E00               	movlw	0
 13094  00152A  2165               	addwfc	(??_DumpConnection+1)& (0+255),w,b
 13095  00152C  6EDA               	movwf	fsr2h,c
 13096  00152E  50DF               	movf	indf2,w,c
 13097  001530  EC35  F018         	call	_CONSOLE_PrintHex
 13098  001534  0100               	movlb	0	; () banked
 13099  001536  2B68               	incf	DumpConnection@i& (0+255),f,b
 13100                           
 13101                           ; BSR set to: 0
 13102  001538  5168               	movf	DumpConnection@i& (0+255),w,b
 13103  00153A  E0E5               	bz	l11970
 13104                           
 13105                           ; BSR set to: 0
 13106                           ;miwi_p2p.c: 2464: }
 13107                           ;miwi_p2p.c: 2466: CONSOLE_PutString((char*)"\r\n");
 13108  00153C  0EF4               	movlw	low (STR_30+2)
 13109  00153E  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13110  001540  0EFF               	movlw	high (STR_30+2)
 13111  001542  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13112  001544  EF9C  F019         	goto	l10772	;wreg free
 13113  001548                     l11978:
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;miwi_p2p.c: 2469: else
 13117                           ;miwi_p2p.c: 2470: {
 13118                           ;miwi_p2p.c: 2471: CONSOLE_PutString((char*)"\r\n\r\nConnection     PeerLongAddress     
      +                          PeerInfo\r\n");
 13119  001548  0E09               	movlw	low STR_9
 13120  00154A  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13121  00154C  0EFC               	movlw	high STR_9
 13122  00154E  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13123  001550  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;miwi_p2p.c: 2472: for(i = 0; i < 20; i++)
 13127  001554  6B68               	clrf	DumpConnection@i& (0+255),b
 13128  001556                     l11986:
 13129                           
 13130                           ; BSR set to: 0
 13131                           ;miwi_p2p.c: 2473: {
 13132                           ;miwi_p2p.c: 2475: if( ConnectionTable[i].status.bits.isValid )
 13133  001556  5168               	movf	DumpConnection@i& (0+255),w,b
 13134  001558  0D0E               	mullw	14
 13135  00155A  0ECE               	movlw	low (_ConnectionTable+12)
 13136  00155C  24F3               	addwf	prodl,w,c
 13137  00155E  6ED9               	movwf	fsr2l,c
 13138  001560  0E02               	movlw	high (_ConnectionTable+12)
 13139  001562  20F4               	addwfc	prodh,w,c
 13140  001564  6EDA               	movwf	fsr2h,c
 13141  001566  AEDF               	btfss	indf2,7,c
 13142  001568  D05A               	goto	l12024
 13143                           
 13144                           ; BSR set to: 0
 13145                           ;miwi_p2p.c: 2476: {
 13146                           ;miwi_p2p.c: 2477: CONSOLE_PrintHex(i);
 13147  00156A  5168               	movf	DumpConnection@i& (0+255),w,b
 13148  00156C  EC35  F018         	call	_CONSOLE_PrintHex
 13149                           
 13150                           ;miwi_p2p.c: 2478: CONSOLE_PutString((char*)"             ");
 13151  001570  0EA6               	movlw	low STR_5
 13152  001572  0100               	movlb	0	; () banked
 13153  001574  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13154  001576  0EFF               	movlw	high STR_5
 13155  001578  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13156  00157A  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13157                           
 13158                           ; BSR set to: 0
 13159                           ;miwi_p2p.c: 2479: for(j = 0; j < 8; j++)
 13160  00157E  6B67               	clrf	DumpConnection@j& (0+255),b
 13161  001580                     l11998:
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;miwi_p2p.c: 2480: {
 13165                           ;miwi_p2p.c: 2481: if( j < 8 )
 13166  001580  0E08               	movlw	8
 13167  001582  6167               	cpfslt	DumpConnection@j& (0+255),b
 13168  001584  D019               	goto	l12002
 13169                           
 13170                           ; BSR set to: 0
 13171                           ;miwi_p2p.c: 2482: {
 13172                           ;miwi_p2p.c: 2483: CONSOLE_PrintHex( ConnectionTable[i].Address[8-1-j] );
 13173  001586  5168               	movf	DumpConnection@i& (0+255),w,b
 13174  001588  0D0E               	mullw	14
 13175  00158A  0EC2               	movlw	low _ConnectionTable
 13176  00158C  6F64               	movwf	??_DumpConnection& (0+255),b
 13177  00158E  0E02               	movlw	high _ConnectionTable
 13178  001590  6F65               	movwf	(??_DumpConnection+1)& (0+255),b
 13179  001592  0E0B               	movlw	11
 13180  001594  2764               	addwf	??_DumpConnection& (0+255),f,b
 13181  001596  0E00               	movlw	0
 13182  001598  2365               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 13183  00159A  50F3               	movf	prodl,w,c
 13184  00159C  2764               	addwf	??_DumpConnection& (0+255),f,b
 13185  00159E  50F4               	movf	prodh,w,c
 13186  0015A0  2365               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 13187  0015A2  5167               	movf	DumpConnection@j& (0+255),w,b
 13188  0015A4  5D64               	subwf	??_DumpConnection& (0+255),w,b
 13189  0015A6  6ED9               	movwf	fsr2l,c
 13190  0015A8  5165               	movf	(??_DumpConnection+1)& (0+255),w,b
 13191  0015AA  A0D8               	btfss	status,0,c
 13192  0015AC  0565               	decf	(??_DumpConnection+1)& (0+255),w,b
 13193  0015AE  6EDA               	movwf	fsr2h,c
 13194  0015B0  50DF               	movf	indf2,w,c
 13195  0015B2  EC35  F018         	call	_CONSOLE_PrintHex
 13196                           
 13197                           ;miwi_p2p.c: 2484: }
 13198  0015B6  D006               	goto	l12004
 13199  0015B8                     l12002:
 13200                           
 13201                           ; BSR set to: 0
 13202                           ;miwi_p2p.c: 2485: else
 13203                           ;miwi_p2p.c: 2486: {
 13204                           ;miwi_p2p.c: 2487: CONSOLE_PutString((char*)"  ");
 13205  0015B8  0EB1               	movlw	low (STR_5+11)
 13206  0015BA  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13207  0015BC  0EFF               	movlw	high (STR_5+11)
 13208  0015BE  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13209  0015C0  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13210  0015C4                     l12004:
 13211  0015C4  0100               	movlb	0	; () banked
 13212  0015C6  2B67               	incf	DumpConnection@j& (0+255),f,b
 13213                           
 13214                           ; BSR set to: 0
 13215  0015C8  0E07               	movlw	7
 13216  0015CA  6567               	cpfsgt	DumpConnection@j& (0+255),b
 13217  0015CC  D7D9               	goto	l11998
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;miwi_p2p.c: 2488: }
 13221                           ;miwi_p2p.c: 2489: }
 13222                           ;miwi_p2p.c: 2490: CONSOLE_PutString((char*)"    ");
 13223  0015CE  0EAF               	movlw	low (STR_5+9)
 13224  0015D0  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13225  0015D2  0EFF               	movlw	high (STR_5+9)
 13226  0015D4  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13227  0015D6  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;miwi_p2p.c: 2492: for(j = 0; j < 1; j++)
 13231  0015DA  6B67               	clrf	DumpConnection@j& (0+255),b
 13232  0015DC                     l12016:
 13233                           
 13234                           ; BSR set to: 0
 13235                           ;miwi_p2p.c: 2493: {
 13236                           ;miwi_p2p.c: 2494: CONSOLE_PrintHex( ConnectionTable[i].PeerInfo[j] );
 13237  0015DC  5168               	movf	DumpConnection@i& (0+255),w,b
 13238  0015DE  0D0E               	mullw	14
 13239  0015E0  0EC2               	movlw	low _ConnectionTable
 13240  0015E2  6F64               	movwf	??_DumpConnection& (0+255),b
 13241  0015E4  0E02               	movlw	high _ConnectionTable
 13242  0015E6  6F65               	movwf	(??_DumpConnection+1)& (0+255),b
 13243  0015E8  0E0D               	movlw	13
 13244  0015EA  2764               	addwf	??_DumpConnection& (0+255),f,b
 13245  0015EC  0E00               	movlw	0
 13246  0015EE  2365               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 13247  0015F0  50F3               	movf	prodl,w,c
 13248  0015F2  2764               	addwf	??_DumpConnection& (0+255),f,b
 13249  0015F4  50F4               	movf	prodh,w,c
 13250  0015F6  2365               	addwfc	(??_DumpConnection+1)& (0+255),f,b
 13251  0015F8  5167               	movf	DumpConnection@j& (0+255),w,b
 13252  0015FA  2564               	addwf	??_DumpConnection& (0+255),w,b
 13253  0015FC  6ED9               	movwf	fsr2l,c
 13254  0015FE  0E00               	movlw	0
 13255  001600  2165               	addwfc	(??_DumpConnection+1)& (0+255),w,b
 13256  001602  6EDA               	movwf	fsr2h,c
 13257  001604  50DF               	movf	indf2,w,c
 13258  001606  EC35  F018         	call	_CONSOLE_PrintHex
 13259  00160A  0100               	movlb	0	; () banked
 13260  00160C  2B67               	incf	DumpConnection@j& (0+255),f,b
 13261                           
 13262                           ; BSR set to: 0
 13263  00160E  5167               	movf	DumpConnection@j& (0+255),w,b
 13264  001610  E0E5               	bz	l12016
 13265                           
 13266                           ; BSR set to: 0
 13267                           ;miwi_p2p.c: 2495: }
 13268                           ;miwi_p2p.c: 2497: CONSOLE_PutString((char*)"\r\n");
 13269  001612  0EF4               	movlw	low (STR_30+2)
 13270  001614  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13271  001616  0EFF               	movlw	high (STR_30+2)
 13272  001618  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13273  00161A  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13274  00161E                     l12024:
 13275                           
 13276                           ; BSR set to: 0
 13277  00161E  2B68               	incf	DumpConnection@i& (0+255),f,b
 13278                           
 13279                           ; BSR set to: 0
 13280  001620  0E13               	movlw	19
 13281  001622  6568               	cpfsgt	DumpConnection@i& (0+255),b
 13282  001624  D798               	goto	l11986
 13283  001626  0C13               	retlw	19
 13284  001628                     __end_of_DumpConnection:
 13285                           	opt stack 0
 13286                           tblptru	equ	0xFF8
 13287                           tblptrh	equ	0xFF7
 13288                           tblptrl	equ	0xFF6
 13289                           tablat	equ	0xFF5
 13290                           prodh	equ	0xFF4
 13291                           prodl	equ	0xFF3
 13292                           intcon	equ	0xFF2
 13293                           intcon2	equ	0xFF1
 13294                           intcon3	equ	0xFF0
 13295                           postinc0	equ	0xFEE
 13296                           wreg	equ	0xFE8
 13297                           indf1	equ	0xFE7
 13298                           postinc1	equ	0xFE6
 13299                           postdec1	equ	0xFE5
 13300                           fsr1h	equ	0xFE2
 13301                           fsr1l	equ	0xFE1
 13302                           indf2	equ	0xFDF
 13303                           postinc2	equ	0xFDE
 13304                           postdec2	equ	0xFDD
 13305                           fsr2h	equ	0xFDA
 13306                           fsr2l	equ	0xFD9
 13307                           status	equ	0xFD8
 13308                           
 13309 ;; *************** function _CONSOLE_PrintHex *****************
 13310 ;; Defined at:
 13311 ;;		line 251 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/console.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;  toPrint         1    wreg     unsigned char 
 13314 ;; Auto vars:     Size  Location     Type
 13315 ;;  toPrint         1    2[BANK0 ] unsigned char 
 13316 ;;  PRINT_VAR       1    1[BANK0 ] unsigned char 
 13317 ;; Return value:  Size  Location     Type
 13318 ;;		None               void
 13319 ;; Registers used:
 13320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13321 ;; Tracked objects:
 13322 ;;		On entry : F/0
 13323 ;;		On exit  : 0/0
 13324 ;;		Unchanged: 0/0
 13325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13327 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13329 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13330 ;;Total ram usage:        2 bytes
 13331 ;; Hardware stack levels used:    1
 13332 ;; Hardware stack levels required when called:    6
 13333 ;; This function calls:
 13334 ;;		_CONSOLE_Put
 13335 ;; This function is called by:
 13336 ;;		_DumpConnection
 13337 ;; This function uses a non-reentrant model
 13338 ;;
 13339                           
 13340                           	psect	text57
 13341  00306A                     __ptext57:
 13342                           	opt stack 0
 13343  00306A                     _CONSOLE_PrintHex:
 13344                           	opt stack 22
 13345                           
 13346                           ; BSR set to: 0
 13347                           ;incstack = 0
 13348                           ;CONSOLE_PrintHex@toPrint stored from wreg
 13349  00306A  6F62               	movwf	CONSOLE_PrintHex@toPrint& (0+255),b
 13350                           
 13351                           ;console.c: 253: uint8_t PRINT_VAR;
 13352                           ;console.c: 254: PRINT_VAR = toPrint;
 13353  00306C  C062  F061         	movff	CONSOLE_PrintHex@toPrint,CONSOLE_PrintHex@PRINT_VAR
 13354                           
 13355                           ;console.c: 255: toPrint = (toPrint>>4)&0x0F;
 13356  003070  0100               	movlb	0	; () banked
 13357  003072  3962               	swapf	CONSOLE_PrintHex@toPrint& (0+255),w,b
 13358  003074  0B0F               	andlw	15
 13359  003076  6F62               	movwf	CONSOLE_PrintHex@toPrint& (0+255),b
 13360                           
 13361                           ; BSR set to: 0
 13362                           ;console.c: 256: CONSOLE_Put(CharacterArray[toPrint]);
 13363  003078  0EB1               	movlw	low _CharacterArray
 13364  00307A  2562               	addwf	CONSOLE_PrintHex@toPrint& (0+255),w,b
 13365  00307C  6ED9               	movwf	fsr2l,c
 13366  00307E  6ADA               	clrf	fsr2h,c
 13367  003080  0E01               	movlw	high _CharacterArray
 13368  003082  22DA               	addwfc	fsr2h,f,c
 13369  003084  50DF               	movf	indf2,w,c
 13370  003086  EC75  F01A         	call	_CONSOLE_Put
 13371                           
 13372                           ;console.c: 257: toPrint = (PRINT_VAR)&0x0F;
 13373  00308A  0100               	movlb	0	; () banked
 13374  00308C  5161               	movf	CONSOLE_PrintHex@PRINT_VAR& (0+255),w,b
 13375  00308E  0B0F               	andlw	15
 13376  003090  6F62               	movwf	CONSOLE_PrintHex@toPrint& (0+255),b
 13377                           
 13378                           ; BSR set to: 0
 13379                           ;console.c: 258: CONSOLE_Put(CharacterArray[toPrint]);
 13380  003092  0EB1               	movlw	low _CharacterArray
 13381  003094  2562               	addwf	CONSOLE_PrintHex@toPrint& (0+255),w,b
 13382  003096  6ED9               	movwf	fsr2l,c
 13383  003098  6ADA               	clrf	fsr2h,c
 13384  00309A  0E01               	movlw	high _CharacterArray
 13385  00309C  22DA               	addwfc	fsr2h,f,c
 13386  00309E  50DF               	movf	indf2,w,c
 13387  0030A0  EF75  F01A         	goto	_CONSOLE_Put
 13388  0030A4                     __end_of_CONSOLE_PrintHex:
 13389                           	opt stack 0
 13390                           tblptru	equ	0xFF8
 13391                           tblptrh	equ	0xFF7
 13392                           tblptrl	equ	0xFF6
 13393                           tablat	equ	0xFF5
 13394                           prodh	equ	0xFF4
 13395                           prodl	equ	0xFF3
 13396                           intcon	equ	0xFF2
 13397                           intcon2	equ	0xFF1
 13398                           intcon3	equ	0xFF0
 13399                           postinc0	equ	0xFEE
 13400                           wreg	equ	0xFE8
 13401                           indf1	equ	0xFE7
 13402                           postinc1	equ	0xFE6
 13403                           postdec1	equ	0xFE5
 13404                           fsr1h	equ	0xFE2
 13405                           fsr1l	equ	0xFE1
 13406                           indf2	equ	0xFDF
 13407                           postinc2	equ	0xFDE
 13408                           postdec2	equ	0xFDD
 13409                           fsr2h	equ	0xFDA
 13410                           fsr2l	equ	0xFD9
 13411                           status	equ	0xFD8
 13412                           
 13413 ;; *************** function _DemoOutput_Instruction *****************
 13414 ;; Defined at:
 13415 ;;		line 136 in file "../src/demo_ouput.c"
 13416 ;; Parameters:    Size  Location     Type
 13417 ;;		None
 13418 ;; Auto vars:     Size  Location     Type
 13419 ;;		None
 13420 ;; Return value:  Size  Location     Type
 13421 ;;		None               void
 13422 ;; Registers used:
 13423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13424 ;; Tracked objects:
 13425 ;;		On entry : F/0
 13426 ;;		On exit  : F/0
 13427 ;;		Unchanged: 0/0
 13428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13433 ;;Total ram usage:        0 bytes
 13434 ;; Hardware stack levels used:    1
 13435 ;; Hardware stack levels required when called:    8
 13436 ;; This function calls:
 13437 ;;		_LCDDisplay
 13438 ;; This function is called by:
 13439 ;;		_Initialize_Demo
 13440 ;; This function uses a non-reentrant model
 13441 ;;
 13442                           
 13443                           	psect	text58
 13444  0034BC                     __ptext58:
 13445                           	opt stack 0
 13446  0034BC                     _DemoOutput_Instruction:
 13447                           	opt stack 21
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;demo_ouput.c: 139: LCDDisplay((char *)"RB0: Broadcast  RB2: Unicast", 0, 0);
 13451                           
 13452                           ;incstack = 0
 13453  0034BC  0E61               	movlw	low STR_37
 13454  0034BE  6F8F               	movwf	LCDDisplay@text& (0+255),b
 13455  0034C0  0EFD               	movlw	high STR_37
 13456  0034C2  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
 13457  0034C4  6B91               	clrf	LCDDisplay@value& (0+255),b
 13458  0034C6  6B92               	clrf	LCDDisplay@delay& (0+255),b
 13459  0034C8  EFBA  F017         	goto	_LCDDisplay	;wreg free
 13460  0034CC                     __end_of_DemoOutput_Instruction:
 13461                           	opt stack 0
 13462                           tblptru	equ	0xFF8
 13463                           tblptrh	equ	0xFF7
 13464                           tblptrl	equ	0xFF6
 13465                           tablat	equ	0xFF5
 13466                           prodh	equ	0xFF4
 13467                           prodl	equ	0xFF3
 13468                           intcon	equ	0xFF2
 13469                           intcon2	equ	0xFF1
 13470                           intcon3	equ	0xFF0
 13471                           postinc0	equ	0xFEE
 13472                           wreg	equ	0xFE8
 13473                           indf1	equ	0xFE7
 13474                           postinc1	equ	0xFE6
 13475                           postdec1	equ	0xFE5
 13476                           fsr1h	equ	0xFE2
 13477                           fsr1l	equ	0xFE1
 13478                           indf2	equ	0xFDF
 13479                           postinc2	equ	0xFDE
 13480                           postdec2	equ	0xFDD
 13481                           fsr2h	equ	0xFDA
 13482                           fsr2l	equ	0xFD9
 13483                           status	equ	0xFD8
 13484                           
 13485 ;; *************** function _DemoOutput_ChannelError *****************
 13486 ;; Defined at:
 13487 ;;		line 193 in file "../src/demo_ouput.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;  channel         1    wreg     unsigned char 
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;  channel         1   11[BANK0 ] unsigned char 
 13492 ;; Return value:  Size  Location     Type
 13493 ;;		None               void
 13494 ;; Registers used:
 13495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : F/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13502 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13504 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13505 ;;Total ram usage:        1 bytes
 13506 ;; Hardware stack levels used:    1
 13507 ;; Hardware stack levels required when called:    7
 13508 ;; This function calls:
 13509 ;;		_CONSOLE_PrintDec
 13510 ;;		_CONSOLE_PutString
 13511 ;; This function is called by:
 13512 ;;		_Initialize_Demo
 13513 ;; This function uses a non-reentrant model
 13514 ;;
 13515                           
 13516                           	psect	text59
 13517  00330C                     __ptext59:
 13518                           	opt stack 0
 13519  00330C                     _DemoOutput_ChannelError:
 13520                           	opt stack 22
 13521                           
 13522                           ; BSR set to: 0
 13523                           ;incstack = 0
 13524                           ;DemoOutput_ChannelError@channel stored from wreg
 13525  00330C  0100               	movlb	0	; () banked
 13526  00330E  6F6B               	movwf	DemoOutput_ChannelError@channel& (0+255),b
 13527                           
 13528                           ;demo_ouput.c: 196: CONSOLE_PutString((char*)"\r\nSelection of channel ");
 13529  003310  0E55               	movlw	low STR_43
 13530  003312  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13531  003314  0EFE               	movlw	high STR_43
 13532  003316  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13533  003318  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;demo_ouput.c: 197: CONSOLE_PrintDec(channel);
 13537  00331C  516B               	movf	DemoOutput_ChannelError@channel& (0+255),w,b
 13538  00331E  EC7D  F015         	call	_CONSOLE_PrintDec
 13539                           
 13540                           ;demo_ouput.c: 198: CONSOLE_PutString((char*)" is not supported in current configuration
      +                          .\r\n");
 13541  003322  0E3B               	movlw	low STR_44
 13542  003324  0100               	movlb	0	; () banked
 13543  003326  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13544  003328  0EFC               	movlw	high STR_44
 13545  00332A  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13546  00332C  EF9C  F019         	goto	l10772	;wreg free
 13547  003330                     __end_of_DemoOutput_ChannelError:
 13548                           	opt stack 0
 13549                           tblptru	equ	0xFF8
 13550                           tblptrh	equ	0xFF7
 13551                           tblptrl	equ	0xFF6
 13552                           tablat	equ	0xFF5
 13553                           prodh	equ	0xFF4
 13554                           prodl	equ	0xFF3
 13555                           intcon	equ	0xFF2
 13556                           intcon2	equ	0xFF1
 13557                           intcon3	equ	0xFF0
 13558                           postinc0	equ	0xFEE
 13559                           wreg	equ	0xFE8
 13560                           indf1	equ	0xFE7
 13561                           postinc1	equ	0xFE6
 13562                           postdec1	equ	0xFE5
 13563                           fsr1h	equ	0xFE2
 13564                           fsr1l	equ	0xFE1
 13565                           indf2	equ	0xFDF
 13566                           postinc2	equ	0xFDE
 13567                           postdec2	equ	0xFDD
 13568                           fsr2h	equ	0xFDA
 13569                           fsr2l	equ	0xFD9
 13570                           status	equ	0xFD8
 13571                           
 13572 ;; *************** function _DemoOutput_Channel *****************
 13573 ;; Defined at:
 13574 ;;		line 111 in file "../src/demo_ouput.c"
 13575 ;; Parameters:    Size  Location     Type
 13576 ;;  channel         1    wreg     unsigned char 
 13577 ;;  Step            1   52[BANK0 ] unsigned char 
 13578 ;; Auto vars:     Size  Location     Type
 13579 ;;  channel         1   53[BANK0 ] unsigned char 
 13580 ;; Return value:  Size  Location     Type
 13581 ;;		None               void
 13582 ;; Registers used:
 13583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13584 ;; Tracked objects:
 13585 ;;		On entry : F/0
 13586 ;;		On exit  : F/0
 13587 ;;		Unchanged: 0/0
 13588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13589 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13590 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13592 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13593 ;;Total ram usage:        2 bytes
 13594 ;; Hardware stack levels used:    1
 13595 ;; Hardware stack levels required when called:    8
 13596 ;; This function calls:
 13597 ;;		_CONSOLE_PrintDec
 13598 ;;		_CONSOLE_PutString
 13599 ;;		_DELAY_ms
 13600 ;;		_LCDDisplay
 13601 ;; This function is called by:
 13602 ;;		_Initialize_Demo
 13603 ;; This function uses a non-reentrant model
 13604 ;;
 13605                           
 13606                           	psect	text60
 13607  002A7C                     __ptext60:
 13608                           	opt stack 0
 13609  002A7C                     _DemoOutput_Channel:
 13610                           	opt stack 21
 13611                           
 13612                           ; BSR set to: 0
 13613                           ;incstack = 0
 13614                           ;DemoOutput_Channel@channel stored from wreg
 13615  002A7C  6F95               	movwf	DemoOutput_Channel@channel& (0+255),b
 13616                           
 13617                           ;demo_ouput.c: 113: if( Step == 0 )
 13618  002A7E  0100               	movlb	0	; () banked
 13619  002A80  5194               	movf	DemoOutput_Channel@Step& (0+255),w,b
 13620  002A82  E11B               	bnz	l12106
 13621                           
 13622                           ; BSR set to: 0
 13623                           ;demo_ouput.c: 114: {
 13624                           ;demo_ouput.c: 115: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 13625  002A84  0E8A               	movlw	low STR_31
 13626  002A86  6F8F               	movwf	LCDDisplay@text& (0+255),b
 13627  002A88  0EFC               	movlw	high STR_31
 13628  002A8A  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
 13629  002A8C  C095  F091         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 13630  002A90  0E01               	movlw	1
 13631  002A92  6F92               	movwf	LCDDisplay@delay& (0+255),b
 13632  002A94  ECBA  F017         	call	_LCDDisplay	;wreg free
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;demo_ouput.c: 117: CONSOLE_PutString((char*)"\r\nConnecting Peer on Channel ");
 13636  002A98  0E08               	movlw	low STR_32
 13637  002A9A  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13638  002A9C  0EFD               	movlw	high STR_32
 13639  002A9E  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13640  002AA0  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;demo_ouput.c: 118: CONSOLE_PrintDec(channel);
 13644  002AA4  5195               	movf	DemoOutput_Channel@channel& (0+255),w,b
 13645  002AA6  EC7D  F015         	call	_CONSOLE_PrintDec
 13646                           
 13647                           ;demo_ouput.c: 119: CONSOLE_PutString((char*)"\r\n");
 13648  002AAA  0EF4               	movlw	low (STR_30+2)
 13649  002AAC  0100               	movlb	0	; () banked
 13650  002AAE  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13651  002AB0  0EFF               	movlw	high (STR_30+2)
 13652  002AB2  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13653  002AB4  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13654                           
 13655                           ;demo_ouput.c: 122: }
 13656  002AB8  D01A               	goto	l12114
 13657  002ABA                     l12106:
 13658                           
 13659                           ; BSR set to: 0
 13660                           ;demo_ouput.c: 123: else
 13661                           ;demo_ouput.c: 124: {
 13662                           ;demo_ouput.c: 125: LCDDisplay((char *)" Connected Peer  on Channel %d", channel, 1);
 13663  002ABA  0EE9               	movlw	low STR_34
 13664  002ABC  6F8F               	movwf	LCDDisplay@text& (0+255),b
 13665  002ABE  0EFC               	movlw	high STR_34
 13666  002AC0  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
 13667  002AC2  C095  F091         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 13668  002AC6  0E01               	movlw	1
 13669  002AC8  6F92               	movwf	LCDDisplay@delay& (0+255),b
 13670  002ACA  ECBA  F017         	call	_LCDDisplay	;wreg free
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;demo_ouput.c: 127: CONSOLE_PutString((char*)"\r\nConnected Peer on Channel ");
 13674  002ACE  0E44               	movlw	low STR_35
 13675  002AD0  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13676  002AD2  0EFD               	movlw	high STR_35
 13677  002AD4  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13678  002AD6  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13679                           
 13680                           ; BSR set to: 0
 13681                           ;demo_ouput.c: 128: CONSOLE_PrintDec(channel);
 13682  002ADA  5195               	movf	DemoOutput_Channel@channel& (0+255),w,b
 13683  002ADC  EC7D  F015         	call	_CONSOLE_PrintDec
 13684                           
 13685                           ;demo_ouput.c: 129: CONSOLE_PutString((char*)"\r\n");
 13686  002AE0  0EF4               	movlw	low (STR_30+2)
 13687  002AE2  0100               	movlb	0	; () banked
 13688  002AE4  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 13689  002AE6  0EFF               	movlw	high (STR_30+2)
 13690  002AE8  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 13691  002AEA  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 13692  002AEE                     l12114:
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;demo_ouput.c: 132: }
 13696                           ;demo_ouput.c: 133: DELAY_ms(1000);
 13697  002AEE  0E03               	movlw	3
 13698  002AF0  6F61               	movwf	(DELAY_ms@ms+1)& (0+255),b
 13699  002AF2  0EE8               	movlw	232
 13700  002AF4  6F60               	movwf	DELAY_ms@ms& (0+255),b
 13701  002AF6  EFEF  F00F         	goto	_DELAY_ms	;wreg free
 13702  002AFA                     __end_of_DemoOutput_Channel:
 13703                           	opt stack 0
 13704                           tblptru	equ	0xFF8
 13705                           tblptrh	equ	0xFF7
 13706                           tblptrl	equ	0xFF6
 13707                           tablat	equ	0xFF5
 13708                           prodh	equ	0xFF4
 13709                           prodl	equ	0xFF3
 13710                           intcon	equ	0xFF2
 13711                           intcon2	equ	0xFF1
 13712                           intcon3	equ	0xFF0
 13713                           postinc0	equ	0xFEE
 13714                           wreg	equ	0xFE8
 13715                           indf1	equ	0xFE7
 13716                           postinc1	equ	0xFE6
 13717                           postdec1	equ	0xFE5
 13718                           fsr1h	equ	0xFE2
 13719                           fsr1l	equ	0xFE1
 13720                           indf2	equ	0xFDF
 13721                           postinc2	equ	0xFDE
 13722                           postdec2	equ	0xFDD
 13723                           fsr2h	equ	0xFDA
 13724                           fsr2l	equ	0xFD9
 13725                           status	equ	0xFD8
 13726                           
 13727 ;; *************** function _CONSOLE_PrintDec *****************
 13728 ;; Defined at:
 13729 ;;		line 281 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/console.c"
 13730 ;; Parameters:    Size  Location     Type
 13731 ;;  toPrint         1    wreg     unsigned char 
 13732 ;; Auto vars:     Size  Location     Type
 13733 ;;  toPrint         1   10[BANK0 ] unsigned char 
 13734 ;; Return value:  Size  Location     Type
 13735 ;;		None               void
 13736 ;; Registers used:
 13737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13738 ;; Tracked objects:
 13739 ;;		On entry : F/0
 13740 ;;		On exit  : 0/0
 13741 ;;		Unchanged: 0/0
 13742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13745 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13746 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13747 ;;Total ram usage:        3 bytes
 13748 ;; Hardware stack levels used:    1
 13749 ;; Hardware stack levels required when called:    6
 13750 ;; This function calls:
 13751 ;;		_CONSOLE_Put
 13752 ;;		___lbdiv
 13753 ;;		___lbmod
 13754 ;; This function is called by:
 13755 ;;		_DemoOutput_Channel
 13756 ;;		_DemoOutput_ChannelError
 13757 ;; This function uses a non-reentrant model
 13758 ;;
 13759                           
 13760                           	psect	text61
 13761  002AFA                     __ptext61:
 13762                           	opt stack 0
 13763  002AFA                     _CONSOLE_PrintDec:
 13764                           	opt stack 22
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;incstack = 0
 13768                           ;CONSOLE_PrintDec@toPrint stored from wreg
 13769  002AFA  6F6A               	movwf	CONSOLE_PrintDec@toPrint& (0+255),b
 13770                           
 13771                           ;console.c: 283: if( toPrint >= 100 )
 13772  002AFC  0E63               	movlw	99
 13773  002AFE  0100               	movlb	0	; () banked
 13774  002B00  656A               	cpfsgt	CONSOLE_PrintDec@toPrint& (0+255),b
 13775  002B02  D010               	goto	l11794
 13776                           
 13777                           ; BSR set to: 0
 13778                           ;console.c: 284: CONSOLE_Put(CharacterArray[toPrint/100]);
 13779  002B04  0E64               	movlw	100
 13780  002B06  6F64               	movwf	___lbdiv@divisor& (0+255),b
 13781  002B08  516A               	movf	CONSOLE_PrintDec@toPrint& (0+255),w,b
 13782  002B0A  EC52  F018         	call	___lbdiv
 13783  002B0E  6F68               	movwf	??_CONSOLE_PrintDec& (0+255),b
 13784  002B10  6B69               	clrf	(??_CONSOLE_PrintDec+1)& (0+255),b
 13785  002B12  0EB1               	movlw	low _CharacterArray
 13786  002B14  2568               	addwf	??_CONSOLE_PrintDec& (0+255),w,b
 13787  002B16  6ED9               	movwf	fsr2l,c
 13788  002B18  0E01               	movlw	high _CharacterArray
 13789  002B1A  2169               	addwfc	(??_CONSOLE_PrintDec+1)& (0+255),w,b
 13790  002B1C  6EDA               	movwf	fsr2h,c
 13791  002B1E  50DF               	movf	indf2,w,c
 13792  002B20  EC75  F01A         	call	_CONSOLE_Put
 13793  002B24                     l11794:
 13794                           
 13795                           ;console.c: 285: if( toPrint >= 10 )
 13796  002B24  0E09               	movlw	9
 13797  002B26  0100               	movlb	0	; () banked
 13798  002B28  656A               	cpfsgt	CONSOLE_PrintDec@toPrint& (0+255),b
 13799  002B2A  D014               	goto	l740
 13800                           
 13801                           ; BSR set to: 0
 13802                           ;console.c: 286: CONSOLE_Put(CharacterArray[(toPrint%100)/10]);
 13803  002B2C  0E0A               	movlw	10
 13804  002B2E  6F64               	movwf	___lbdiv@divisor& (0+255),b
 13805  002B30  0E64               	movlw	100
 13806  002B32  6F60               	movwf	___lbmod@divisor& (0+255),b
 13807  002B34  516A               	movf	CONSOLE_PrintDec@toPrint& (0+255),w,b
 13808  002B36  EC27  F019         	call	___lbmod
 13809  002B3A  EC52  F018         	call	___lbdiv
 13810  002B3E  6F68               	movwf	??_CONSOLE_PrintDec& (0+255),b
 13811  002B40  6B69               	clrf	(??_CONSOLE_PrintDec+1)& (0+255),b
 13812  002B42  0EB1               	movlw	low _CharacterArray
 13813  002B44  2568               	addwf	??_CONSOLE_PrintDec& (0+255),w,b
 13814  002B46  6ED9               	movwf	fsr2l,c
 13815  002B48  0E01               	movlw	high _CharacterArray
 13816  002B4A  2169               	addwfc	(??_CONSOLE_PrintDec+1)& (0+255),w,b
 13817  002B4C  6EDA               	movwf	fsr2h,c
 13818  002B4E  50DF               	movf	indf2,w,c
 13819  002B50  EC75  F01A         	call	_CONSOLE_Put
 13820  002B54                     l740:
 13821                           
 13822                           ;console.c: 287: CONSOLE_Put(CharacterArray[toPrint%10]);
 13823  002B54  0E0A               	movlw	10
 13824  002B56  0100               	movlb	0	; () banked
 13825  002B58  6F60               	movwf	___lbmod@divisor& (0+255),b
 13826  002B5A  516A               	movf	CONSOLE_PrintDec@toPrint& (0+255),w,b
 13827  002B5C  EC27  F019         	call	___lbmod
 13828  002B60  6F68               	movwf	??_CONSOLE_PrintDec& (0+255),b
 13829  002B62  6B69               	clrf	(??_CONSOLE_PrintDec+1)& (0+255),b
 13830  002B64  0EB1               	movlw	low _CharacterArray
 13831  002B66  2568               	addwf	??_CONSOLE_PrintDec& (0+255),w,b
 13832  002B68  6ED9               	movwf	fsr2l,c
 13833  002B6A  0E01               	movlw	high _CharacterArray
 13834  002B6C  2169               	addwfc	(??_CONSOLE_PrintDec+1)& (0+255),w,b
 13835  002B6E  6EDA               	movwf	fsr2h,c
 13836  002B70  50DF               	movf	indf2,w,c
 13837  002B72  EF75  F01A         	goto	_CONSOLE_Put
 13838  002B76                     __end_of_CONSOLE_PrintDec:
 13839                           	opt stack 0
 13840                           tblptru	equ	0xFF8
 13841                           tblptrh	equ	0xFF7
 13842                           tblptrl	equ	0xFF6
 13843                           tablat	equ	0xFF5
 13844                           prodh	equ	0xFF4
 13845                           prodl	equ	0xFF3
 13846                           intcon	equ	0xFF2
 13847                           intcon2	equ	0xFF1
 13848                           intcon3	equ	0xFF0
 13849                           postinc0	equ	0xFEE
 13850                           wreg	equ	0xFE8
 13851                           indf1	equ	0xFE7
 13852                           postinc1	equ	0xFE6
 13853                           postdec1	equ	0xFE5
 13854                           fsr1h	equ	0xFE2
 13855                           fsr1l	equ	0xFE1
 13856                           indf2	equ	0xFDF
 13857                           postinc2	equ	0xFDE
 13858                           postdec2	equ	0xFDD
 13859                           fsr2h	equ	0xFDA
 13860                           fsr2l	equ	0xFD9
 13861                           status	equ	0xFD8
 13862                           
 13863 ;; *************** function ___lbmod *****************
 13864 ;; Defined at:
 13865 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbmod.c"
 13866 ;; Parameters:    Size  Location     Type
 13867 ;;  dividend        1    wreg     unsigned char 
 13868 ;;  divisor         1    0[BANK0 ] unsigned char 
 13869 ;; Auto vars:     Size  Location     Type
 13870 ;;  dividend        1    1[BANK0 ] unsigned char 
 13871 ;;  rem             1    3[BANK0 ] unsigned char 
 13872 ;;  counter         1    2[BANK0 ] unsigned char 
 13873 ;; Return value:  Size  Location     Type
 13874 ;;                  1    wreg      unsigned char 
 13875 ;; Registers used:
 13876 ;;		wreg, status,2, status,0
 13877 ;; Tracked objects:
 13878 ;;		On entry : F/0
 13879 ;;		On exit  : F/0
 13880 ;;		Unchanged: 0/0
 13881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13882 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13883 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13885 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13886 ;;Total ram usage:        4 bytes
 13887 ;; Hardware stack levels used:    1
 13888 ;; Hardware stack levels required when called:    5
 13889 ;; This function calls:
 13890 ;;		Nothing
 13891 ;; This function is called by:
 13892 ;;		_CONSOLE_PrintDec
 13893 ;;		_run_star_demo
 13894 ;; This function uses a non-reentrant model
 13895 ;;
 13896                           
 13897                           	psect	text62
 13898  00324E                     __ptext62:
 13899                           	opt stack 0
 13900  00324E                     ___lbmod:
 13901                           	opt stack 22
 13902                           
 13903                           ;incstack = 0
 13904                           ;___lbmod@dividend stored from wreg
 13905  00324E  6F61               	movwf	___lbmod@dividend& (0+255),b
 13906  003250  0E08               	movlw	8
 13907  003252  0100               	movlb	0	; () banked
 13908  003254  6F62               	movwf	___lbmod@counter& (0+255),b
 13909                           
 13910                           ; BSR set to: 0
 13911  003256  6B63               	clrf	___lbmod@rem& (0+255),b
 13912  003258                     l11520:
 13913                           
 13914                           ; BSR set to: 0
 13915  003258  90D8               	bcf	status,0,c
 13916  00325A  3561               	rlcf	___lbmod@dividend& (0+255),w,b
 13917  00325C  3563               	rlcf	___lbmod@rem& (0+255),w,b
 13918  00325E  6F63               	movwf	___lbmod@rem& (0+255),b
 13919                           
 13920                           ; BSR set to: 0
 13921  003260  90D8               	bcf	status,0,c
 13922  003262  3761               	rlcf	___lbmod@dividend& (0+255),f,b
 13923                           
 13924                           ; BSR set to: 0
 13925  003264  5160               	movf	___lbmod@divisor& (0+255),w,b
 13926  003266  5D63               	subwf	___lbmod@rem& (0+255),w,b
 13927  003268  E302               	bnc	l11528
 13928                           
 13929                           ; BSR set to: 0
 13930  00326A  5160               	movf	___lbmod@divisor& (0+255),w,b
 13931  00326C  5F63               	subwf	___lbmod@rem& (0+255),f,b
 13932  00326E                     l11528:
 13933                           
 13934                           ; BSR set to: 0
 13935  00326E  2F62               	decfsz	___lbmod@counter& (0+255),f,b
 13936  003270  D7F3               	goto	l11520
 13937                           
 13938                           ; BSR set to: 0
 13939  003272  5163               	movf	___lbmod@rem& (0+255),w,b
 13940                           
 13941                           ; BSR set to: 0
 13942  003274  0012               	return		;funcret
 13943  003276                     __end_of___lbmod:
 13944                           	opt stack 0
 13945                           tblptru	equ	0xFF8
 13946                           tblptrh	equ	0xFF7
 13947                           tblptrl	equ	0xFF6
 13948                           tablat	equ	0xFF5
 13949                           prodh	equ	0xFF4
 13950                           prodl	equ	0xFF3
 13951                           intcon	equ	0xFF2
 13952                           intcon2	equ	0xFF1
 13953                           intcon3	equ	0xFF0
 13954                           postinc0	equ	0xFEE
 13955                           wreg	equ	0xFE8
 13956                           indf1	equ	0xFE7
 13957                           postinc1	equ	0xFE6
 13958                           postdec1	equ	0xFE5
 13959                           fsr1h	equ	0xFE2
 13960                           fsr1l	equ	0xFE1
 13961                           indf2	equ	0xFDF
 13962                           postinc2	equ	0xFDE
 13963                           postdec2	equ	0xFDD
 13964                           fsr2h	equ	0xFDA
 13965                           fsr2l	equ	0xFD9
 13966                           status	equ	0xFD8
 13967                           
 13968 ;; *************** function ___lbdiv *****************
 13969 ;; Defined at:
 13970 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbdiv.c"
 13971 ;; Parameters:    Size  Location     Type
 13972 ;;  dividend        1    wreg     unsigned char 
 13973 ;;  divisor         1    4[BANK0 ] unsigned char 
 13974 ;; Auto vars:     Size  Location     Type
 13975 ;;  dividend        1    5[BANK0 ] unsigned char 
 13976 ;;  quotient        1    7[BANK0 ] unsigned char 
 13977 ;;  counter         1    6[BANK0 ] unsigned char 
 13978 ;; Return value:  Size  Location     Type
 13979 ;;                  1    wreg      unsigned char 
 13980 ;; Registers used:
 13981 ;;		wreg, status,2, status,0
 13982 ;; Tracked objects:
 13983 ;;		On entry : F/0
 13984 ;;		On exit  : F/0
 13985 ;;		Unchanged: 0/0
 13986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13987 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13988 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13990 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13991 ;;Total ram usage:        4 bytes
 13992 ;; Hardware stack levels used:    1
 13993 ;; Hardware stack levels required when called:    5
 13994 ;; This function calls:
 13995 ;;		Nothing
 13996 ;; This function is called by:
 13997 ;;		_CONSOLE_PrintDec
 13998 ;; This function uses a non-reentrant model
 13999 ;;
 14000                           
 14001                           	psect	text63
 14002  0030A4                     __ptext63:
 14003                           	opt stack 0
 14004  0030A4                     ___lbdiv:
 14005                           	opt stack 22
 14006                           
 14007                           ; BSR set to: 0
 14008                           ;incstack = 0
 14009                           ;___lbdiv@dividend stored from wreg
 14010  0030A4  6F65               	movwf	___lbdiv@dividend& (0+255),b
 14011  0030A6  0100               	movlb	0	; () banked
 14012  0030A8  6B67               	clrf	___lbdiv@quotient& (0+255),b
 14013                           
 14014                           ; BSR set to: 0
 14015  0030AA  5164               	movf	___lbdiv@divisor& (0+255),w,b
 14016  0030AC  E014               	bz	l11512
 14017                           
 14018                           ; BSR set to: 0
 14019  0030AE  0E01               	movlw	1
 14020  0030B0  6F66               	movwf	___lbdiv@counter& (0+255),b
 14021  0030B2  D003               	goto	l11500
 14022  0030B4                     l11496:
 14023                           
 14024                           ; BSR set to: 0
 14025  0030B4  90D8               	bcf	status,0,c
 14026  0030B6  3764               	rlcf	___lbdiv@divisor& (0+255),f,b
 14027                           
 14028                           ; BSR set to: 0
 14029  0030B8  2B66               	incf	___lbdiv@counter& (0+255),f,b
 14030  0030BA                     l11500:
 14031                           
 14032                           ; BSR set to: 0
 14033  0030BA  AF64               	btfss	___lbdiv@divisor& (0+255),7,b
 14034  0030BC  D7FB               	goto	l11496
 14035  0030BE                     l11502:
 14036                           
 14037                           ; BSR set to: 0
 14038  0030BE  90D8               	bcf	status,0,c
 14039  0030C0  3767               	rlcf	___lbdiv@quotient& (0+255),f,b
 14040  0030C2  5164               	movf	___lbdiv@divisor& (0+255),w,b
 14041  0030C4  5D65               	subwf	___lbdiv@dividend& (0+255),w,b
 14042  0030C6  E303               	bnc	l11508
 14043                           
 14044                           ; BSR set to: 0
 14045  0030C8  5164               	movf	___lbdiv@divisor& (0+255),w,b
 14046  0030CA  5F65               	subwf	___lbdiv@dividend& (0+255),f,b
 14047                           
 14048                           ; BSR set to: 0
 14049  0030CC  8167               	bsf	___lbdiv@quotient& (0+255),0,b
 14050  0030CE                     l11508:
 14051                           
 14052                           ; BSR set to: 0
 14053  0030CE  90D8               	bcf	status,0,c
 14054  0030D0  3364               	rrcf	___lbdiv@divisor& (0+255),f,b
 14055                           
 14056                           ; BSR set to: 0
 14057  0030D2  2F66               	decfsz	___lbdiv@counter& (0+255),f,b
 14058  0030D4  D7F4               	goto	l11502
 14059  0030D6                     l11512:
 14060                           
 14061                           ; BSR set to: 0
 14062  0030D6  5167               	movf	___lbdiv@quotient& (0+255),w,b
 14063                           
 14064                           ; BSR set to: 0
 14065  0030D8  0012               	return		;funcret
 14066  0030DA                     __end_of___lbdiv:
 14067                           	opt stack 0
 14068                           tblptru	equ	0xFF8
 14069                           tblptrh	equ	0xFF7
 14070                           tblptrl	equ	0xFF6
 14071                           tablat	equ	0xFF5
 14072                           prodh	equ	0xFF4
 14073                           prodl	equ	0xFF3
 14074                           intcon	equ	0xFF2
 14075                           intcon2	equ	0xFF1
 14076                           intcon3	equ	0xFF0
 14077                           postinc0	equ	0xFEE
 14078                           wreg	equ	0xFE8
 14079                           indf1	equ	0xFE7
 14080                           postinc1	equ	0xFE6
 14081                           postdec1	equ	0xFE5
 14082                           fsr1h	equ	0xFE2
 14083                           fsr1l	equ	0xFE1
 14084                           indf2	equ	0xFDF
 14085                           postinc2	equ	0xFDE
 14086                           postdec2	equ	0xFDD
 14087                           fsr2h	equ	0xFDA
 14088                           fsr2l	equ	0xFD9
 14089                           status	equ	0xFD8
 14090                           
 14091 ;; *************** function _CONSOLE_Put *****************
 14092 ;; Defined at:
 14093 ;;		line 166 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/console.c"
 14094 ;; Parameters:    Size  Location     Type
 14095 ;;  c               1    wreg     unsigned char 
 14096 ;; Auto vars:     Size  Location     Type
 14097 ;;  c               1    0[BANK0 ] unsigned char 
 14098 ;; Return value:  Size  Location     Type
 14099 ;;		None               void
 14100 ;; Registers used:
 14101 ;;		wreg
 14102 ;; Tracked objects:
 14103 ;;		On entry : F/0
 14104 ;;		On exit  : 0/0
 14105 ;;		Unchanged: 0/0
 14106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14108 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14110 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14111 ;;Total ram usage:        1 bytes
 14112 ;; Hardware stack levels used:    1
 14113 ;; Hardware stack levels required when called:    5
 14114 ;; This function calls:
 14115 ;;		Nothing
 14116 ;; This function is called by:
 14117 ;;		_CONSOLE_PrintHex
 14118 ;;		_CONSOLE_PrintDec
 14119 ;; This function uses a non-reentrant model
 14120 ;;
 14121                           
 14122                           	psect	text64
 14123  0034EA                     __ptext64:
 14124                           	opt stack 0
 14125  0034EA                     _CONSOLE_Put:
 14126                           	opt stack 22
 14127                           
 14128                           ; BSR set to: 0
 14129                           ;incstack = 0
 14130                           ;CONSOLE_Put@c stored from wreg
 14131  0034EA  6F60               	movwf	CONSOLE_Put@c& (0+255),b
 14132  0034EC                     l707:
 14133  0034EC  A2A8               	btfss	4008,1,c	;volatile
 14134  0034EE  D7FE               	goto	l707
 14135                           
 14136                           ;console.c: 169: TXREG2 = c;
 14137  0034F0  C060  FFA9         	movff	CONSOLE_Put@c,4009	;volatile
 14138  0034F4  0012               	return		;funcret
 14139  0034F6                     __end_of_CONSOLE_Put:
 14140                           	opt stack 0
 14141                           tblptru	equ	0xFF8
 14142                           tblptrh	equ	0xFF7
 14143                           tblptrl	equ	0xFF6
 14144                           tablat	equ	0xFF5
 14145                           prodh	equ	0xFF4
 14146                           prodl	equ	0xFF3
 14147                           intcon	equ	0xFF2
 14148                           intcon2	equ	0xFF1
 14149                           intcon3	equ	0xFF0
 14150                           postinc0	equ	0xFEE
 14151                           wreg	equ	0xFE8
 14152                           indf1	equ	0xFE7
 14153                           postinc1	equ	0xFE6
 14154                           postdec1	equ	0xFE5
 14155                           fsr1h	equ	0xFE2
 14156                           fsr1l	equ	0xFE1
 14157                           indf2	equ	0xFDF
 14158                           postinc2	equ	0xFDE
 14159                           postdec2	equ	0xFDD
 14160                           fsr2h	equ	0xFDA
 14161                           fsr2l	equ	0xFD9
 14162                           status	equ	0xFD8
 14163                           
 14164 ;; *************** function _DemoOutput_Greeting *****************
 14165 ;; Defined at:
 14166 ;;		line 63 in file "../src/demo_ouput.c"
 14167 ;; Parameters:    Size  Location     Type
 14168 ;;		None
 14169 ;; Auto vars:     Size  Location     Type
 14170 ;;		None
 14171 ;; Return value:  Size  Location     Type
 14172 ;;		None               void
 14173 ;; Registers used:
 14174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14175 ;; Tracked objects:
 14176 ;;		On entry : F/0
 14177 ;;		On exit  : F/0
 14178 ;;		Unchanged: 0/0
 14179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14184 ;;Total ram usage:        0 bytes
 14185 ;; Hardware stack levels used:    1
 14186 ;; Hardware stack levels required when called:    8
 14187 ;; This function calls:
 14188 ;;		_CONSOLE_PutString
 14189 ;;		_DELAY_ms
 14190 ;;		_LCDDisplay
 14191 ;; This function is called by:
 14192 ;;		_main
 14193 ;; This function uses a non-reentrant model
 14194 ;;
 14195                           
 14196                           	psect	text65
 14197  00217C                     __ptext65:
 14198                           	opt stack 0
 14199  00217C                     _DemoOutput_Greeting:
 14200                           	opt stack 22
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;demo_ouput.c: 77: LCDDisplay((char *)"Simple STAR     MRF89XA Node1", 0, 1);
 14204                           
 14205                           ;incstack = 0
 14206  00217C  0E26               	movlw	low STR_16
 14207  00217E  6F8F               	movwf	LCDDisplay@text& (0+255),b
 14208  002180  0EFD               	movlw	high STR_16
 14209  002182  6F90               	movwf	(LCDDisplay@text+1)& (0+255),b
 14210  002184  6B91               	clrf	LCDDisplay@value& (0+255),b
 14211  002186  0E01               	movlw	1
 14212  002188  6F92               	movwf	LCDDisplay@delay& (0+255),b
 14213  00218A  ECBA  F017         	call	_LCDDisplay	;wreg free
 14214                           
 14215                           ; BSR set to: 0
 14216                           ;demo_ouput.c: 86: CONSOLE_PutString((char*)"\r\nInput Configuration:");
 14217  00218E  0E85               	movlw	low STR_17
 14218  002190  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14219  002192  0EFE               	movlw	high STR_17
 14220  002194  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14221  002196  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;demo_ouput.c: 87: CONSOLE_PutString((char*)"\r\n           Button 1: RB0");
 14225  00219A  0EB6               	movlw	low STR_18
 14226  00219C  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14227  00219E  0EFD               	movlw	high STR_18
 14228  0021A0  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14229  0021A2  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14230                           
 14231                           ; BSR set to: 0
 14232                           ;demo_ouput.c: 88: CONSOLE_PutString((char*)"\r\n           Button 2: RB2");
 14233  0021A6  0EEC               	movlw	low STR_19
 14234  0021A8  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14235  0021AA  0EFD               	movlw	high STR_19
 14236  0021AC  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14237  0021AE  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14238                           
 14239                           ; BSR set to: 0
 14240                           ;demo_ouput.c: 89: CONSOLE_PutString((char*)"\r\nOutput Configuration:");
 14241  0021B2  0E6D               	movlw	low STR_20
 14242  0021B4  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14243  0021B6  0EFE               	movlw	high STR_20
 14244  0021B8  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14245  0021BA  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14246                           
 14247                           ; BSR set to: 0
 14248                           ;demo_ouput.c: 90: CONSOLE_PutString((char*)"\r\n              LED 1: RA2");
 14249  0021BE  0ED1               	movlw	low STR_21
 14250  0021C0  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14251  0021C2  0EFD               	movlw	high STR_21
 14252  0021C4  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14253  0021C6  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14254                           
 14255                           ; BSR set to: 0
 14256                           ;demo_ouput.c: 91: CONSOLE_PutString((char*)"\r\n              LED 2: RA3");
 14257  0021CA  0E07               	movlw	low STR_22
 14258  0021CC  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14259  0021CE  0EFE               	movlw	high STR_22
 14260  0021D0  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14261  0021D2  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14262                           
 14263                           ; BSR set to: 0
 14264                           ;demo_ouput.c: 98: CONSOLE_PutString((char*)"\r\n     RF Transceiver: MRF89XA");
 14265  0021D6  0ECA               	movlw	low STR_23
 14266  0021D8  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14267  0021DA  0EFC               	movlw	high STR_23
 14268  0021DC  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14269  0021DE  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;demo_ouput.c: 100: CONSOLE_PutString((char*)"\r\n   Demo Instruction:");
 14273  0021E2  0E9C               	movlw	low STR_24
 14274  0021E4  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14275  0021E6  0EFE               	movlw	high STR_24
 14276  0021E8  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14277  0021EA  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14278                           
 14279                           ; BSR set to: 0
 14280                           ;demo_ouput.c: 101: CONSOLE_PutString((char*)"\r\n                     Power on the boar
      +                          d until LED 1 lights up");
 14281  0021EE  0E4F               	movlw	low STR_25
 14282  0021F0  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14283  0021F2  0EFB               	movlw	high STR_25
 14284  0021F4  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14285  0021F6  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14286                           
 14287                           ; BSR set to: 0
 14288                           ;demo_ouput.c: 102: CONSOLE_PutString((char*)"\r\n                     to indicate conne
      +                          cting with peer. Push");
 14289  0021FA  0E8F               	movlw	low STR_26
 14290  0021FC  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14291  0021FE  0EFB               	movlw	high STR_26
 14292  002200  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14293  002202  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14294                           
 14295                           ; BSR set to: 0
 14296                           ;demo_ouput.c: 103: CONSOLE_PutString((char*)"\r\n                     Button 1 to broad
      +                          cast message. Push Button");
 14297  002206  0E0D               	movlw	low STR_27
 14298  002208  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14299  00220A  0EFB               	movlw	high STR_27
 14300  00220C  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14301  00220E  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;demo_ouput.c: 104: CONSOLE_PutString((char*)"\r\n                     2 to unicast encr
      +                          ypted message. LED 2 will");
 14305  002212  0ECB               	movlw	low STR_28
 14306  002214  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14307  002216  0EFA               	movlw	high STR_28
 14308  002218  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14309  00221A  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14310                           
 14311                           ; BSR set to: 0
 14312                           ;demo_ouput.c: 105: CONSOLE_PutString((char*)"\r\n                     be toggled upon r
      +                          eceiving messages. ");
 14313  00221E  0ECD               	movlw	low STR_29
 14314  002220  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14315  002222  0EFB               	movlw	high STR_29
 14316  002224  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14317  002226  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14318                           
 14319                           ; BSR set to: 0
 14320                           ;demo_ouput.c: 106: CONSOLE_PutString((char*)"\r\n\r\n");
 14321  00222A  0EF2               	movlw	low STR_30
 14322  00222C  6F61               	movwf	CONSOLE_PutString@str& (0+255),b
 14323  00222E  0EFF               	movlw	high STR_30
 14324  002230  6F62               	movwf	(CONSOLE_PutString@str+1)& (0+255),b
 14325  002232  EC98  F019         	call	_CONSOLE_PutString	;wreg free
 14326                           
 14327                           ; BSR set to: 0
 14328                           ;demo_ouput.c: 108: DELAY_ms(1500);
 14329  002236  0E05               	movlw	5
 14330  002238  6F61               	movwf	(DELAY_ms@ms+1)& (0+255),b
 14331  00223A  0EDC               	movlw	220
 14332  00223C  6F60               	movwf	DELAY_ms@ms& (0+255),b
 14333  00223E  EFEF  F00F         	goto	_DELAY_ms	;wreg free
 14334  002242                     __end_of_DemoOutput_Greeting:
 14335                           	opt stack 0
 14336                           tblptru	equ	0xFF8
 14337                           tblptrh	equ	0xFF7
 14338                           tblptrl	equ	0xFF6
 14339                           tablat	equ	0xFF5
 14340                           prodh	equ	0xFF4
 14341                           prodl	equ	0xFF3
 14342                           intcon	equ	0xFF2
 14343                           intcon2	equ	0xFF1
 14344                           intcon3	equ	0xFF0
 14345                           postinc0	equ	0xFEE
 14346                           wreg	equ	0xFE8
 14347                           indf1	equ	0xFE7
 14348                           postinc1	equ	0xFE6
 14349                           postdec1	equ	0xFE5
 14350                           fsr1h	equ	0xFE2
 14351                           fsr1l	equ	0xFE1
 14352                           indf2	equ	0xFDF
 14353                           postinc2	equ	0xFDE
 14354                           postdec2	equ	0xFDD
 14355                           fsr2h	equ	0xFDA
 14356                           fsr2l	equ	0xFD9
 14357                           status	equ	0xFD8
 14358                           
 14359 ;; *************** function _LCDDisplay *****************
 14360 ;; Defined at:
 14361 ;;		line 327 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/lcd.c"
 14362 ;; Parameters:    Size  Location     Type
 14363 ;;  text            2   47[BANK0 ] PTR unsigned char 
 14364 ;;		 -> STR_59(12), STR_58(20), STR_53(11), STR_52(11), 
 14365 ;;		 -> STR_51(28), STR_48(32), STR_47(33), STR_46(16), 
 14366 ;;		 -> STR_37(29), STR_34(31), STR_31(32), STR_16(30), 
 14367 ;;  value           1   49[BANK0 ] unsigned char 
 14368 ;;  delay           1   50[BANK0 ] unsigned char 
 14369 ;; Auto vars:     Size  Location     Type
 14370 ;;  i               1   51[BANK0 ] unsigned char 
 14371 ;; Return value:  Size  Location     Type
 14372 ;;		None               void
 14373 ;; Registers used:
 14374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14375 ;; Tracked objects:
 14376 ;;		On entry : F/0
 14377 ;;		On exit  : F/0
 14378 ;;		Unchanged: 0/0
 14379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14380 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14383 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14384 ;;Total ram usage:        5 bytes
 14385 ;; Hardware stack levels used:    1
 14386 ;; Hardware stack levels required when called:    7
 14387 ;; This function calls:
 14388 ;;		_DELAY_ms
 14389 ;;		_LCD_Erase
 14390 ;;		_LCD_Update
 14391 ;;		_sprintf
 14392 ;; This function is called by:
 14393 ;;		_DemoOutput_Greeting
 14394 ;;		_DemoOutput_Channel
 14395 ;;		_DemoOutput_Instruction
 14396 ;;		_DemoOutput_UnicastFail
 14397 ;;		_STAR_DEMO_OPTIONS_MESSAGE
 14398 ;;		_freezer_feature
 14399 ;;		_run_star_demo
 14400 ;; This function uses a non-reentrant model
 14401 ;;
 14402                           
 14403                           	psect	text66
 14404  002F74                     __ptext66:
 14405                           	opt stack 0
 14406  002F74                     _LCDDisplay:
 14407                           	opt stack 22
 14408                           
 14409                           ; BSR set to: 0
 14410                           ;lcd.c: 330: LCD_Erase();
 14411                           
 14412                           ; BSR set to: 0
 14413                           ;incstack = 0
 14414  002F74  EC07  F01A         	call	_LCD_Erase	;wreg free
 14415                           
 14416                           ; BSR set to: 0
 14417                           ;lcd.c: 331: sprintf((char *)LCDText, (char*)text, value);
 14418  002F78  0E88               	movlw	low _LCDText
 14419  002F7A  6F6C               	movwf	sprintf@sp& (0+255),b
 14420  002F7C  0E01               	movlw	high _LCDText
 14421  002F7E  6F6D               	movwf	(sprintf@sp+1)& (0+255),b
 14422  002F80  C08F  F06E         	movff	LCDDisplay@text,sprintf@f
 14423  002F84  C090  F06F         	movff	LCDDisplay@text+1,sprintf@f+1
 14424  002F88  C091  F070         	movff	LCDDisplay@value,?_sprintf+4
 14425  002F8C  6B71               	clrf	(?_sprintf+5)& (0+255),b
 14426  002F8E  ECDC  F001         	call	_sprintf	;wreg free
 14427                           
 14428                           ; BSR set to: 0
 14429                           ;lcd.c: 332: LCD_Update();
 14430  002F92  EC23  F01A         	call	_LCD_Update	;wreg free
 14431                           
 14432                           ;lcd.c: 335: if( delay )
 14433  002F96  0100               	movlb	0	; () banked
 14434  002F98  5192               	movf	LCDDisplay@delay& (0+255),w,b
 14435  002F9A  B4D8               	btfsc	status,2,c
 14436  002F9C  0012               	return	
 14437                           
 14438                           ; BSR set to: 0
 14439                           ;lcd.c: 336: {
 14440                           ;lcd.c: 337: uint8_t i;
 14441                           ;lcd.c: 338: for(i = 0; i < 8; i++)
 14442  002F9E  6B93               	clrf	LCDDisplay@i& (0+255),b
 14443  002FA0                     l10792:
 14444                           
 14445                           ; BSR set to: 0
 14446                           ;lcd.c: 339: {
 14447                           ;lcd.c: 340: DELAY_ms(250);
 14448  002FA0  6B61               	clrf	(DELAY_ms@ms+1)& (0+255),b
 14449  002FA2  0EFA               	movlw	250
 14450  002FA4  6F60               	movwf	DELAY_ms@ms& (0+255),b
 14451  002FA6  ECEF  F00F         	call	_DELAY_ms	;wreg free
 14452                           
 14453                           ; BSR set to: 0
 14454  002FAA  2B93               	incf	LCDDisplay@i& (0+255),f,b
 14455                           
 14456                           ; BSR set to: 0
 14457  002FAC  0E07               	movlw	7
 14458  002FAE  6593               	cpfsgt	LCDDisplay@i& (0+255),b
 14459  002FB0  D7F7               	goto	l10792
 14460  002FB2  0C07               	retlw	7
 14461  002FB4                     __end_of_LCDDisplay:
 14462                           	opt stack 0
 14463                           tblptru	equ	0xFF8
 14464                           tblptrh	equ	0xFF7
 14465                           tblptrl	equ	0xFF6
 14466                           tablat	equ	0xFF5
 14467                           prodh	equ	0xFF4
 14468                           prodl	equ	0xFF3
 14469                           intcon	equ	0xFF2
 14470                           intcon2	equ	0xFF1
 14471                           intcon3	equ	0xFF0
 14472                           postinc0	equ	0xFEE
 14473                           wreg	equ	0xFE8
 14474                           indf1	equ	0xFE7
 14475                           postinc1	equ	0xFE6
 14476                           postdec1	equ	0xFE5
 14477                           fsr1h	equ	0xFE2
 14478                           fsr1l	equ	0xFE1
 14479                           indf2	equ	0xFDF
 14480                           postinc2	equ	0xFDE
 14481                           postdec2	equ	0xFDD
 14482                           fsr2h	equ	0xFDA
 14483                           fsr2l	equ	0xFD9
 14484                           status	equ	0xFD8
 14485                           
 14486 ;; *************** function _sprintf *****************
 14487 ;; Defined at:
 14488 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 14489 ;; Parameters:    Size  Location     Type
 14490 ;;  sp              2   12[BANK0 ] PTR unsigned char 
 14491 ;;		 -> LCDText(33), 
 14492 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 14493 ;;		 -> STR_59(12), STR_58(20), STR_57(17), STR_56(22), 
 14494 ;;		 -> STR_55(22), STR_54(25), STR_53(11), STR_52(11), 
 14495 ;;		 -> STR_51(28), STR_50(22), STR_49(17), STR_48(32), 
 14496 ;;		 -> STR_47(33), STR_46(16), STR_37(29), STR_34(31), 
 14497 ;;		 -> STR_31(32), STR_16(30), STR_15(17), STR_14(17), 
 14498 ;; Auto vars:     Size  Location     Type
 14499 ;;  idx             1   28[BANK0 ] unsigned char 
 14500 ;;  tmpval          4    0        struct .
 14501 ;;  flag            2   45[BANK0 ] unsigned short 
 14502 ;;  width           2   42[BANK0 ] int 
 14503 ;;  val             2   39[BANK0 ] unsigned int 
 14504 ;;  len             2   36[BANK0 ] unsigned int 
 14505 ;;  c               1   44[BANK0 ] char 
 14506 ;;  prec            1   41[BANK0 ] char 
 14507 ;;  ap              1   38[BANK0 ] PTR void [1]
 14508 ;;		 -> ?_sprintf(2), 
 14509 ;;  cp              1   35[BANK0 ] PTR const unsigned char 
 14510 ;;		 -> sprintf@c(1), 
 14511 ;; Return value:  Size  Location     Type
 14512 ;;                  2   12[BANK0 ] int 
 14513 ;; Registers used:
 14514 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14515 ;; Tracked objects:
 14516 ;;		On entry : F/0
 14517 ;;		On exit  : F/0
 14518 ;;		Unchanged: 0/0
 14519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14520 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14521 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14522 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14523 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14524 ;;Total ram usage:       35 bytes
 14525 ;; Hardware stack levels used:    1
 14526 ;; Hardware stack levels required when called:    6
 14527 ;; This function calls:
 14528 ;;		___lwdiv
 14529 ;;		___lwmod
 14530 ;;		___wmul
 14531 ;;		_isdigit
 14532 ;; This function is called by:
 14533 ;;		_LCDTRXCount
 14534 ;;		_LCDDisplay
 14535 ;;		_run_star_demo
 14536 ;; This function uses a non-reentrant model
 14537 ;;
 14538                           
 14539                           	psect	text67
 14540  0003B8                     __ptext67:
 14541                           	opt stack 0
 14542  0003B8                     _sprintf:
 14543                           	opt stack 22
 14544                           
 14545                           ; BSR set to: 0
 14546                           ;doprnt.c: 494: va_list ap;
 14547                           ;doprnt.c: 499: signed char c;
 14548                           ;doprnt.c: 501: int width;
 14549                           ;doprnt.c: 506: signed char prec;
 14550                           ;doprnt.c: 508: unsigned short flag;
 14551                           ;doprnt.c: 523: union {
 14552                           ;doprnt.c: 524: unsigned long vd;
 14553                           ;doprnt.c: 525: double integ;
 14554                           ;doprnt.c: 526: } tmpval;
 14555                           ;doprnt.c: 528: unsigned int val;
 14556                           ;doprnt.c: 529: unsigned len;
 14557                           ;doprnt.c: 530: const char * cp;
 14558                           ;doprnt.c: 533: *ap = __va_start();
 14559                           
 14560                           ; BSR set to: 0
 14561                           ;incstack = 0
 14562  0003B8  0E70               	movlw	low (?_sprintf+4)
 14563  0003BA  6F86               	movwf	sprintf@ap& (0+255),b
 14564                           
 14565                           ;doprnt.c: 536: while(c = *f++) {
 14566  0003BC  D378               	goto	l10760
 14567  0003BE                     l10438:
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;doprnt.c: 538: if(c != '%')
 14571  0003BE  0E25               	movlw	37
 14572  0003C0  198C               	xorwf	sprintf@c& (0+255),w,b
 14573  0003C2  E009               	bz	l1363
 14574                           
 14575                           ; BSR set to: 0
 14576                           ;doprnt.c: 540: {
 14577                           ;doprnt.c: 541: ((*sp++ = (c)));
 14578  0003C4  C06C  FFD9         	movff	sprintf@sp,fsr2l
 14579  0003C8  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 14580  0003CC  C08C  FFDF         	movff	sprintf@c,indf2
 14581                           
 14582                           ; BSR set to: 0
 14583  0003D0  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 14584  0003D2  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 14585                           
 14586                           ;doprnt.c: 542: continue;
 14587  0003D4  D36C               	goto	l10760
 14588  0003D6                     l1363:
 14589                           
 14590                           ; BSR set to: 0
 14591                           ;doprnt.c: 543: }
 14592                           ;doprnt.c: 546: width = 0;
 14593  0003D6  6B8A               	clrf	sprintf@width& (0+255),b
 14594  0003D8  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 14595                           
 14596                           ;doprnt.c: 548: flag = 0;
 14597  0003DA  6B8D               	clrf	sprintf@flag& (0+255),b
 14598  0003DC  6B8E               	clrf	(sprintf@flag+1)& (0+255),b
 14599  0003DE  D009               	goto	l10454
 14600  0003E0                     l10444:
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;doprnt.c: 554: flag |= 0x08;
 14604  0003E0  878D               	bsf	sprintf@flag& (0+255),3,b
 14605  0003E2  D005               	goto	L1
 14606  0003E4                     l10446:
 14607                           
 14608                           ; BSR set to: 0
 14609                           ;doprnt.c: 561: flag |= 0x01;
 14610  0003E4  818D               	bsf	sprintf@flag& (0+255),0,b
 14611  0003E6  D003               	goto	L1
 14612  0003E8                     l10448:
 14613                           
 14614                           ; BSR set to: 0
 14615                           ;doprnt.c: 574: flag |= 0x800;
 14616  0003E8  878E               	bsf	(sprintf@flag+1)& (0+255),3,b
 14617  0003EA  D001               	goto	L1
 14618  0003EC                     l10450:
 14619                           
 14620                           ; BSR set to: 0
 14621                           ;doprnt.c: 580: flag |= 0x04;
 14622  0003EC  858D               	bsf	sprintf@flag& (0+255),2,b
 14623  0003EE                     L1:
 14624                           
 14625                           ;doprnt.c: 581: f++;
 14626  0003EE  4B6E               	infsnz	sprintf@f& (0+255),f,b
 14627  0003F0  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 14628  0003F2                     l10454:
 14629                           
 14630                           ; BSR set to: 0
 14631  0003F2  C06E  FFF6         	movff	sprintf@f,tblptrl
 14632  0003F6  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 14633  0003FA                     	if	0	;tblptru may be non-zero
 14634  0003FA                     	endif
 14635  0003FA                     	if	0	;tblptru may be non-zero
 14636  0003FA                     	endif
 14637  0003FA  0008               	tblrd		*
 14638  0003FC  50F5               	movf	tablat,w,c
 14639                           
 14640                           ; Switch size 1, requested type "speed"
 14641                           ; Number of cases is 4, Range of values is 32 to 48
 14642                           ; switch strategies available:
 14643                           ; Name         Instructions Cycles
 14644                           ; simple_byte           13     7 (average)
 14645                           ;	Chosen strategy is simple_byte
 14646  0003FE  0A20               	xorlw	32	; case 32
 14647  000400  E0F1               	bz	l10446
 14648  000402  0A03               	xorlw	3	; case 35
 14649  000404  E0F1               	bz	l10448
 14650  000406  0A0E               	xorlw	14	; case 45
 14651  000408  E0EB               	bz	l10444
 14652  00040A  0A1D               	xorlw	29	; case 48
 14653  00040C  E0EF               	bz	l10450
 14654                           
 14655                           ; BSR set to: 0
 14656                           ;doprnt.c: 593: if(flag & 0x08)
 14657  00040E  B78D               	btfsc	sprintf@flag& (0+255),3,b
 14658                           
 14659                           ; BSR set to: 0
 14660                           ;doprnt.c: 594: flag &= ~0x04;
 14661  000410  958D               	bcf	sprintf@flag& (0+255),2,b
 14662                           
 14663                           ; BSR set to: 0
 14664                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 14665  000412  C06E  FFF6         	movff	sprintf@f,tblptrl
 14666  000416  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 14667  00041A                     	if	0	;tblptru may be non-zero
 14668  00041A                     	endif
 14669  00041A                     	if	0	;tblptru may be non-zero
 14670  00041A                     	endif
 14671  00041A  0008               	tblrd		*
 14672  00041C  50F5               	movf	tablat,w,c
 14673  00041E  ECF8  F019         	call	_isdigit
 14674  000422  E32E               	bnc	l10470
 14675                           
 14676                           ; BSR set to: 0
 14677                           ;doprnt.c: 598: width = 0;
 14678  000424  6B8A               	clrf	sprintf@width& (0+255),b
 14679  000426  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 14680  000428                     l10462:
 14681                           
 14682                           ; BSR set to: 0
 14683                           ;doprnt.c: 600: width *= 10;
 14684  000428  C08A  F060         	movff	sprintf@width,___wmul@multiplier
 14685  00042C  C08B  F061         	movff	sprintf@width+1,___wmul@multiplier+1
 14686  000430  6B63               	clrf	(___wmul@multiplicand+1)& (0+255),b
 14687  000432  0E0A               	movlw	10
 14688  000434  6F62               	movwf	___wmul@multiplicand& (0+255),b
 14689  000436  EC4E  F019         	call	___wmul	;wreg free
 14690  00043A  C060  F08A         	movff	?___wmul,sprintf@width
 14691  00043E  C061  F08B         	movff	?___wmul+1,sprintf@width+1
 14692                           
 14693                           ; BSR set to: 0
 14694                           ;doprnt.c: 601: width += *f++ - '0';
 14695  000442  0ED0               	movlw	208
 14696  000444  6F78               	movwf	??_sprintf& (0+255),b
 14697  000446  6979               	setf	(??_sprintf+1)& (0+255),b
 14698  000448  C06E  FFF6         	movff	sprintf@f,tblptrl
 14699  00044C  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 14700  000450                     	if	0	;tblptru may be non-zero
 14701  000450                     	endif
 14702  000450                     	if	0	;tblptru may be non-zero
 14703  000450                     	endif
 14704  000450  0008               	tblrd		*
 14705  000452  50F5               	movf	tablat,w,c
 14706  000454  6F7A               	movwf	(??_sprintf+2)& (0+255),b
 14707  000456  6B7B               	clrf	(??_sprintf+3)& (0+255),b
 14708  000458  5178               	movf	??_sprintf& (0+255),w,b
 14709  00045A  277A               	addwf	(??_sprintf+2)& (0+255),f,b
 14710  00045C  5179               	movf	(??_sprintf+1)& (0+255),w,b
 14711  00045E  237B               	addwfc	(??_sprintf+3)& (0+255),f,b
 14712  000460  517A               	movf	(??_sprintf+2)& (0+255),w,b
 14713  000462  278A               	addwf	sprintf@width& (0+255),f,b
 14714  000464  517B               	movf	(??_sprintf+3)& (0+255),w,b
 14715  000466  238B               	addwfc	(sprintf@width+1)& (0+255),f,b
 14716                           
 14717                           ; BSR set to: 0
 14718  000468  4B6E               	infsnz	sprintf@f& (0+255),f,b
 14719  00046A  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 14720                           
 14721                           ; BSR set to: 0
 14722                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 14723  00046C  C06E  FFF6         	movff	sprintf@f,tblptrl
 14724  000470  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 14725  000474                     	if	0	;tblptru may be non-zero
 14726  000474                     	endif
 14727  000474                     	if	0	;tblptru may be non-zero
 14728  000474                     	endif
 14729  000474  0008               	tblrd		*
 14730  000476  50F5               	movf	tablat,w,c
 14731  000478  ECF8  F019         	call	_isdigit
 14732  00047C  E314               	bnc	l10478
 14733  00047E  D7D4               	goto	l10462
 14734  000480                     l10470:
 14735                           
 14736                           ; BSR set to: 0
 14737  000480  C06E  FFF6         	movff	sprintf@f,tblptrl
 14738  000484  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 14739  000488                     	if	0	;tblptru may be non-zero
 14740  000488                     	endif
 14741  000488                     	if	0	;tblptru may be non-zero
 14742  000488                     	endif
 14743  000488  0008               	tblrd		*
 14744  00048A  50F5               	movf	tablat,w,c
 14745  00048C  0A2A               	xorlw	42
 14746  00048E  E10B               	bnz	l10478
 14747                           
 14748                           ; BSR set to: 0
 14749                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 14750  000490  5186               	movf	sprintf@ap& (0+255),w,b
 14751  000492  6ED9               	movwf	fsr2l,c
 14752  000494  6ADA               	clrf	fsr2h,c
 14753  000496  CFDE F08A          	movff	postinc2,sprintf@width
 14754  00049A  CFDD F08B          	movff	postdec2,sprintf@width+1
 14755                           
 14756                           ; BSR set to: 0
 14757  00049E  0E02               	movlw	2
 14758  0004A0  2786               	addwf	sprintf@ap& (0+255),f,b
 14759                           
 14760                           ; BSR set to: 0
 14761                           ;doprnt.c: 606: f++;
 14762  0004A2  4B6E               	infsnz	sprintf@f& (0+255),f,b
 14763  0004A4  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 14764  0004A6                     l10478:
 14765                           
 14766                           ; BSR set to: 0
 14767                           ;doprnt.c: 608: }
 14768                           ;doprnt.c: 611: if(*f == '.') {
 14769  0004A6  C06E  FFF6         	movff	sprintf@f,tblptrl
 14770  0004AA  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 14771  0004AE                     	if	0	;tblptru may be non-zero
 14772  0004AE                     	endif
 14773  0004AE                     	if	0	;tblptru may be non-zero
 14774  0004AE                     	endif
 14775  0004AE  0008               	tblrd		*
 14776  0004B0  50F5               	movf	tablat,w,c
 14777  0004B2  0A2E               	xorlw	46
 14778  0004B4  E130               	bnz	l1379
 14779                           
 14780                           ; BSR set to: 0
 14781                           ;doprnt.c: 612: flag |= 0x4000;
 14782  0004B6  8D8E               	bsf	(sprintf@flag+1)& (0+255),6,b
 14783                           
 14784                           ;doprnt.c: 613: f++;
 14785  0004B8  4B6E               	infsnz	sprintf@f& (0+255),f,b
 14786  0004BA  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 14787                           
 14788                           ; BSR set to: 0
 14789                           ;doprnt.c: 615: if(*f == '*') {
 14790  0004BC  C06E  FFF6         	movff	sprintf@f,tblptrl
 14791  0004C0  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 14792  0004C4                     	if	0	;tblptru may be non-zero
 14793  0004C4                     	endif
 14794  0004C4                     	if	0	;tblptru may be non-zero
 14795  0004C4                     	endif
 14796  0004C4  0008               	tblrd		*
 14797  0004C6  50F5               	movf	tablat,w,c
 14798  0004C8  0A2A               	xorlw	42
 14799  0004CA  E10A               	bnz	l1380
 14800                           
 14801                           ; BSR set to: 0
 14802                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 14803  0004CC  5186               	movf	sprintf@ap& (0+255),w,b
 14804  0004CE  6ED9               	movwf	fsr2l,c
 14805  0004D0  6ADA               	clrf	fsr2h,c
 14806  0004D2  50DF               	movf	indf2,w,c
 14807  0004D4  6F89               	movwf	sprintf@prec& (0+255),b
 14808                           
 14809                           ; BSR set to: 0
 14810  0004D6  0E02               	movlw	2
 14811  0004D8  2786               	addwf	sprintf@ap& (0+255),f,b
 14812                           
 14813                           ; BSR set to: 0
 14814                           ;doprnt.c: 617: f++;
 14815  0004DA  4B6E               	infsnz	sprintf@f& (0+255),f,b
 14816  0004DC  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 14817                           
 14818                           ;doprnt.c: 618: } else
 14819  0004DE  D08A               	goto	l10546
 14820  0004E0                     l1380:
 14821                           
 14822                           ; BSR set to: 0
 14823                           ;doprnt.c: 620: {
 14824                           ;doprnt.c: 621: prec = 0;
 14825  0004E0  6B89               	clrf	sprintf@prec& (0+255),b
 14826                           
 14827                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 14828  0004E2  D00F               	goto	l10494
 14829  0004E4                     l10490:
 14830                           
 14831                           ; BSR set to: 0
 14832                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 14833  0004E4  C06E  FFF6         	movff	sprintf@f,tblptrl
 14834  0004E8  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 14835  0004EC                     	if	0	;tblptru may be non-zero
 14836  0004EC                     	endif
 14837  0004EC                     	if	0	;tblptru may be non-zero
 14838  0004EC                     	endif
 14839  0004EC  0008               	tblrd		*
 14840  0004EE  CFF5 F078          	movff	tablat,??_sprintf
 14841  0004F2  5189               	movf	sprintf@prec& (0+255),w,b
 14842  0004F4  0D0A               	mullw	10
 14843  0004F6  50F3               	movf	prodl,w,c
 14844  0004F8  2578               	addwf	??_sprintf& (0+255),w,b
 14845  0004FA  0FD0               	addlw	208
 14846  0004FC  6F89               	movwf	sprintf@prec& (0+255),b
 14847                           
 14848                           ; BSR set to: 0
 14849  0004FE  4B6E               	infsnz	sprintf@f& (0+255),f,b
 14850  000500  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 14851  000502                     l10494:
 14852                           
 14853                           ; BSR set to: 0
 14854  000502  C06E  FFF6         	movff	sprintf@f,tblptrl
 14855  000506  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 14856  00050A                     	if	0	;tblptru may be non-zero
 14857  00050A                     	endif
 14858  00050A                     	if	0	;tblptru may be non-zero
 14859  00050A                     	endif
 14860  00050A  0008               	tblrd		*
 14861  00050C  50F5               	movf	tablat,w,c
 14862  00050E  ECF8  F019         	call	_isdigit
 14863  000512  E370               	bnc	l10546
 14864  000514  D7E7               	goto	l10490
 14865  000516                     l1379:
 14866                           
 14867                           ; BSR set to: 0
 14868                           ;doprnt.c: 626: prec = 0;
 14869  000516  6B89               	clrf	sprintf@prec& (0+255),b
 14870  000518  D06D               	goto	l10546
 14871  00051A                     l10496:
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;doprnt.c: 691: flag |= 0x40;
 14875  00051A  8D8D               	bsf	sprintf@flag& (0+255),6,b
 14876                           
 14877                           ;doprnt.c: 693: break;
 14878  00051C  D088               	goto	l10548
 14879  00051E                     l10498:
 14880                           
 14881                           ; BSR set to: 0
 14882                           ;doprnt.c: 714: flag |= 0x20;
 14883  00051E  8B8D               	bsf	sprintf@flag& (0+255),5,b
 14884  000520                     l1394:
 14885                           
 14886                           ; BSR set to: 0
 14887                           ;doprnt.c: 721: flag |= 0x80;
 14888  000520  8F8D               	bsf	sprintf@flag& (0+255),7,b
 14889                           
 14890                           ;doprnt.c: 723: break;
 14891  000522  D085               	goto	l10548
 14892  000524                     l10500:
 14893                           
 14894                           ; BSR set to: 0
 14895                           ;doprnt.c: 753: if(prec && prec < len)
 14896  000524  5189               	movf	sprintf@prec& (0+255),w,b
 14897  000526  E00F               	bz	l10506
 14898                           
 14899                           ; BSR set to: 0
 14900  000528  C089  F078         	movff	sprintf@prec,??_sprintf
 14901  00052C  6B79               	clrf	(??_sprintf+1)& (0+255),b
 14902  00052E  BF78               	btfsc	??_sprintf& (0+255),7,b
 14903  000530  0779               	decf	(??_sprintf+1)& (0+255),f,b
 14904  000532  5184               	movf	sprintf@len& (0+255),w,b
 14905  000534  5D78               	subwf	??_sprintf& (0+255),w,b
 14906  000536  5185               	movf	(sprintf@len+1)& (0+255),w,b
 14907  000538  5979               	subwfb	(??_sprintf+1)& (0+255),w,b
 14908  00053A  E205               	bc	l10506
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;doprnt.c: 754: len = prec;
 14912  00053C  5189               	movf	sprintf@prec& (0+255),w,b
 14913  00053E  6F84               	movwf	sprintf@len& (0+255),b
 14914  000540  6B85               	clrf	(sprintf@len+1)& (0+255),b
 14915  000542  BF84               	btfsc	sprintf@len& (0+255),7,b
 14916  000544  0785               	decf	(sprintf@len+1)& (0+255),f,b
 14917  000546                     l10506:
 14918                           
 14919                           ; BSR set to: 0
 14920                           ;doprnt.c: 757: if(width > len)
 14921  000546  518A               	movf	sprintf@width& (0+255),w,b
 14922  000548  5D84               	subwf	sprintf@len& (0+255),w,b
 14923  00054A  518B               	movf	(sprintf@width+1)& (0+255),w,b
 14924  00054C  5985               	subwfb	(sprintf@len+1)& (0+255),w,b
 14925  00054E  E205               	bc	l1397
 14926                           
 14927                           ; BSR set to: 0
 14928                           ;doprnt.c: 758: width -= len;
 14929  000550  5184               	movf	sprintf@len& (0+255),w,b
 14930  000552  5F8A               	subwf	sprintf@width& (0+255),f,b
 14931  000554  5185               	movf	(sprintf@len+1)& (0+255),w,b
 14932  000556  5B8B               	subwfb	(sprintf@width+1)& (0+255),f,b
 14933  000558  D002               	goto	l1398
 14934  00055A                     l1397:
 14935                           
 14936                           ; BSR set to: 0
 14937                           ;doprnt.c: 759: else
 14938                           ;doprnt.c: 760: width = 0;
 14939  00055A  6B8A               	clrf	sprintf@width& (0+255),b
 14940  00055C  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 14941  00055E                     l1398:
 14942                           
 14943                           ; BSR set to: 0
 14944                           ;doprnt.c: 762: if(!(flag & 0x08))
 14945  00055E  B78D               	btfsc	sprintf@flag& (0+255),3,b
 14946  000560  D01D               	goto	l10524
 14947  000562  D008               	goto	l10516
 14948  000564                     l10512:
 14949                           
 14950                           ; BSR set to: 0
 14951                           ;doprnt.c: 765: ((*sp++ = (' ')));
 14952  000564  C06C  FFD9         	movff	sprintf@sp,fsr2l
 14953  000568  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 14954  00056C  0E20               	movlw	32
 14955  00056E  6EDF               	movwf	indf2,c
 14956                           
 14957                           ; BSR set to: 0
 14958  000570  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 14959  000572  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 14960  000574                     l10516:
 14961                           
 14962                           ; BSR set to: 0
 14963  000574  078A               	decf	sprintf@width& (0+255),f,b
 14964  000576  A0D8               	btfss	status,0,c
 14965  000578  078B               	decf	(sprintf@width+1)& (0+255),f,b
 14966  00057A  298A               	incf	sprintf@width& (0+255),w,b
 14967  00057C  E1F3               	bnz	l10512
 14968  00057E  298B               	incf	(sprintf@width+1)& (0+255),w,b
 14969  000580  E00D               	bz	l10524
 14970  000582  D7F0               	goto	l10512
 14971  000584                     l10518:
 14972                           
 14973                           ; BSR set to: 0
 14974                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 14975  000584  5183               	movf	sprintf@cp& (0+255),w,b
 14976  000586  6ED9               	movwf	fsr2l,c
 14977  000588  6ADA               	clrf	fsr2h,c
 14978  00058A  C06C  FFE1         	movff	sprintf@sp,fsr1l
 14979  00058E  C06D  FFE2         	movff	sprintf@sp+1,fsr1h
 14980  000592  CFDF FFE7          	movff	indf2,indf1
 14981                           
 14982                           ; BSR set to: 0
 14983  000596  2B83               	incf	sprintf@cp& (0+255),f,b
 14984                           
 14985                           ; BSR set to: 0
 14986  000598  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 14987  00059A  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 14988  00059C                     l10524:
 14989                           
 14990                           ; BSR set to: 0
 14991  00059C  0784               	decf	sprintf@len& (0+255),f,b
 14992  00059E  A0D8               	btfss	status,0,c
 14993  0005A0  0785               	decf	(sprintf@len+1)& (0+255),f,b
 14994  0005A2  2984               	incf	sprintf@len& (0+255),w,b
 14995  0005A4  E1EF               	bnz	l10518
 14996  0005A6  2985               	incf	(sprintf@len+1)& (0+255),w,b
 14997  0005A8  E1ED               	bnz	l10518
 14998                           
 14999                           ; BSR set to: 0
 15000                           ;doprnt.c: 770: if(flag & 0x08)
 15001  0005AA  A78D               	btfss	sprintf@flag& (0+255),3,b
 15002  0005AC  D280               	goto	l10760
 15003  0005AE  D008               	goto	l10532
 15004  0005B0                     l10528:
 15005                           
 15006                           ; BSR set to: 0
 15007                           ;doprnt.c: 772: ((*sp++ = (' ')));
 15008  0005B0  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15009  0005B4  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15010  0005B8  0E20               	movlw	32
 15011  0005BA  6EDF               	movwf	indf2,c
 15012                           
 15013                           ; BSR set to: 0
 15014  0005BC  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 15015  0005BE  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 15016  0005C0                     l10532:
 15017                           
 15018                           ; BSR set to: 0
 15019  0005C0  078A               	decf	sprintf@width& (0+255),f,b
 15020  0005C2  A0D8               	btfss	status,0,c
 15021  0005C4  078B               	decf	(sprintf@width+1)& (0+255),f,b
 15022  0005C6  298A               	incf	sprintf@width& (0+255),w,b
 15023  0005C8  E1F3               	bnz	l10528
 15024  0005CA  298B               	incf	(sprintf@width+1)& (0+255),w,b
 15025  0005CC  E101 D26F          	bz	l10760
 15026  0005D0  D7EF               	goto	l10528
 15027  0005D2                     l10534:
 15028                           
 15029                           ; BSR set to: 0
 15030                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 15031  0005D2  5186               	movf	sprintf@ap& (0+255),w,b
 15032  0005D4  6ED9               	movwf	fsr2l,c
 15033  0005D6  6ADA               	clrf	fsr2h,c
 15034  0005D8  50DF               	movf	indf2,w,c
 15035  0005DA  6F8C               	movwf	sprintf@c& (0+255),b
 15036                           
 15037                           ; BSR set to: 0
 15038  0005DC  0E02               	movlw	2
 15039  0005DE  2786               	addwf	sprintf@ap& (0+255),f,b
 15040  0005E0                     l10538:
 15041                           
 15042                           ; BSR set to: 0
 15043                           ;doprnt.c: 805: cp = (char *)&c;
 15044  0005E0  0E8C               	movlw	low sprintf@c
 15045  0005E2  6F83               	movwf	sprintf@cp& (0+255),b
 15046                           
 15047                           ; BSR set to: 0
 15048                           ;doprnt.c: 806: len = 1;
 15049  0005E4  0E00               	movlw	0
 15050  0005E6  6F85               	movwf	(sprintf@len+1)& (0+255),b
 15051  0005E8  0E01               	movlw	1
 15052  0005EA  6F84               	movwf	sprintf@len& (0+255),b
 15053                           
 15054                           ;doprnt.c: 807: goto dostring;
 15055  0005EC  D79B               	goto	l10500
 15056  0005EE                     l10542:
 15057                           
 15058                           ; BSR set to: 0
 15059                           ;doprnt.c: 818: flag |= 0xC0;
 15060  0005EE  0EC0               	movlw	192
 15061  0005F0  138D               	iorwf	sprintf@flag& (0+255),f,b
 15062                           
 15063                           ;doprnt.c: 819: break;
 15064  0005F2  D01D               	goto	l10548
 15065  0005F4                     l10546:
 15066                           
 15067                           ; BSR set to: 0
 15068  0005F4  C06E  FFF6         	movff	sprintf@f,tblptrl
 15069  0005F8  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 15070  0005FC  4B6E               	infsnz	sprintf@f& (0+255),f,b
 15071  0005FE  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 15072  000600                     	if	0	;tblptru may be non-zero
 15073  000600                     	endif
 15074  000600                     	if	0	;tblptru may be non-zero
 15075  000600                     	endif
 15076  000600  0008               	tblrd		*
 15077  000602  CFF5 F08C          	movff	tablat,sprintf@c
 15078  000606  518C               	movf	sprintf@c& (0+255),w,b
 15079                           
 15080                           ; Switch size 1, requested type "speed"
 15081                           ; Number of cases is 8, Range of values is 0 to 120
 15082                           ; switch strategies available:
 15083                           ; Name         Instructions Cycles
 15084                           ; simple_byte           25    13 (average)
 15085                           ;	Chosen strategy is simple_byte
 15086  000608  E101 D25D          	bz	l10762
 15087  00060C  0A58               	xorlw	88	; case 88
 15088  00060E  E087               	bz	l10498
 15089  000610  0A3B               	xorlw	59	; case 99
 15090  000612  E0DF               	bz	l10534
 15091  000614  0A07               	xorlw	7	; case 100
 15092  000616  E00B               	bz	l10548
 15093  000618  0A0D               	xorlw	13	; case 105
 15094  00061A  E009               	bz	l10548
 15095  00061C  0A06               	xorlw	6	; case 111
 15096  00061E  E101 D77C          	bz	l10496
 15097  000622  0A1A               	xorlw	26	; case 117
 15098  000624  E0E4               	bz	l10542
 15099  000626  0A0D               	xorlw	13	; case 120
 15100  000628  E101 D77A          	bz	l1394
 15101  00062C  D7D9               	goto	l10538
 15102  00062E                     l10548:
 15103                           
 15104                           ; BSR set to: 0
 15105                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 15106  00062E  C08D  F078         	movff	sprintf@flag,??_sprintf
 15107  000632  0EC0               	movlw	192
 15108  000634  1778               	andwf	??_sprintf& (0+255),f,b
 15109  000636  E112               	bnz	l10560
 15110                           
 15111                           ; BSR set to: 0
 15112                           ;doprnt.c: 1253: {
 15113                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 15114  000638  5186               	movf	sprintf@ap& (0+255),w,b
 15115  00063A  6ED9               	movwf	fsr2l,c
 15116  00063C  6ADA               	clrf	fsr2h,c
 15117  00063E  CFDE F087          	movff	postinc2,sprintf@val
 15118  000642  CFDD F088          	movff	postdec2,sprintf@val+1
 15119                           
 15120                           ; BSR set to: 0
 15121  000646  0E02               	movlw	2
 15122  000648  2786               	addwf	sprintf@ap& (0+255),f,b
 15123                           
 15124                           ; BSR set to: 0
 15125                           ;doprnt.c: 1261: if((int)val < 0) {
 15126  00064A  AF88               	btfss	(sprintf@val+1)& (0+255),7,b
 15127  00064C  D010               	goto	l10564
 15128                           
 15129                           ; BSR set to: 0
 15130                           ;doprnt.c: 1262: flag |= 0x03;
 15131  00064E  0E03               	movlw	3
 15132  000650  138D               	iorwf	sprintf@flag& (0+255),f,b
 15133                           
 15134                           ; BSR set to: 0
 15135                           ;doprnt.c: 1263: val = -val;
 15136  000652  6D87               	negf	sprintf@val& (0+255),b
 15137  000654  1F88               	comf	(sprintf@val+1)& (0+255),f,b
 15138  000656  B0D8               	btfsc	status,0,c
 15139  000658  2B88               	incf	(sprintf@val+1)& (0+255),f,b
 15140  00065A  D009               	goto	l10564
 15141  00065C                     l10560:
 15142                           
 15143                           ; BSR set to: 0
 15144                           ;doprnt.c: 1268: else
 15145                           ;doprnt.c: 1273: {
 15146                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 15147  00065C  5186               	movf	sprintf@ap& (0+255),w,b
 15148  00065E  6ED9               	movwf	fsr2l,c
 15149  000660  6ADA               	clrf	fsr2h,c
 15150  000662  CFDE F087          	movff	postinc2,sprintf@val
 15151  000666  CFDD F088          	movff	postdec2,sprintf@val+1
 15152                           
 15153                           ; BSR set to: 0
 15154  00066A  0E02               	movlw	2
 15155  00066C  2786               	addwf	sprintf@ap& (0+255),f,b
 15156  00066E                     l10564:
 15157                           
 15158                           ; BSR set to: 0
 15159                           ;doprnt.c: 1287: }
 15160                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 15161  00066E  5189               	movf	sprintf@prec& (0+255),w,b
 15162  000670  E147               	bnz	l10614
 15163                           
 15164                           ; BSR set to: 0
 15165  000672  5187               	movf	sprintf@val& (0+255),w,b
 15166  000674  1188               	iorwf	(sprintf@val+1)& (0+255),w,b
 15167  000676  E144               	bnz	l10614
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;doprnt.c: 1291: prec++;
 15171  000678  2B89               	incf	sprintf@prec& (0+255),f,b
 15172  00067A  D042               	goto	l10614
 15173  00067C                     l10570:
 15174                           
 15175                           ; BSR set to: 0
 15176                           ;doprnt.c: 1302: case 0xC0:
 15177                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 15178  00067C  0E01               	movlw	1
 15179  00067E  6F8C               	movwf	sprintf@c& (0+255),b
 15180  000680                     l10572:
 15181                           
 15182                           ; BSR set to: 0
 15183  000680  0E05               	movlw	5
 15184  000682  198C               	xorwf	sprintf@c& (0+255),w,b
 15185  000684  E046               	bz	l10616
 15186                           
 15187                           ; BSR set to: 0
 15188                           ;doprnt.c: 1306: if(val < dpowers[c])
 15189  000686  518C               	movf	sprintf@c& (0+255),w,b
 15190  000688  0D02               	mullw	2
 15191  00068A  0EB9               	movlw	low _dpowers
 15192  00068C  24F3               	addwf	prodl,w,c
 15193  00068E  6EF6               	movwf	tblptrl,c
 15194  000690  0EFA               	movlw	high _dpowers
 15195  000692  20F4               	addwfc	prodh,w,c
 15196  000694  6EF7               	movwf	tblptrh,c
 15197  000696                     	if	0	;There are less than 3 active tblptr bytes
 15198  000696                     	endif
 15199  000696  0009               	tblrd		*+
 15200  000698  50F5               	movf	tablat,w,c
 15201  00069A  5D87               	subwf	sprintf@val& (0+255),w,b
 15202  00069C  0009               	tblrd		*+
 15203  00069E  50F5               	movf	tablat,w,c
 15204  0006A0  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
 15205  0006A2  E337               	bnc	l10616
 15206                           
 15207                           ; BSR set to: 0
 15208  0006A4  2B8C               	incf	sprintf@c& (0+255),f,b
 15209  0006A6  D7EC               	goto	l10572
 15210  0006A8                     l10584:
 15211                           
 15212                           ; BSR set to: 0
 15213                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 15214  0006A8  0E01               	movlw	1
 15215  0006AA  6F8C               	movwf	sprintf@c& (0+255),b
 15216  0006AC                     l10586:
 15217                           
 15218                           ; BSR set to: 0
 15219  0006AC  0E04               	movlw	4
 15220  0006AE  198C               	xorwf	sprintf@c& (0+255),w,b
 15221  0006B0  E030               	bz	l10616
 15222                           
 15223                           ; BSR set to: 0
 15224                           ;doprnt.c: 1317: if(val < hexpowers[c])
 15225  0006B2  518C               	movf	sprintf@c& (0+255),w,b
 15226  0006B4  0D02               	mullw	2
 15227  0006B6  0EC3               	movlw	low _hexpowers
 15228  0006B8  24F3               	addwf	prodl,w,c
 15229  0006BA  6EF6               	movwf	tblptrl,c
 15230  0006BC  0EFA               	movlw	high _hexpowers
 15231  0006BE  20F4               	addwfc	prodh,w,c
 15232  0006C0  6EF7               	movwf	tblptrh,c
 15233  0006C2                     	if	0	;There are less than 3 active tblptr bytes
 15234  0006C2                     	endif
 15235  0006C2  0009               	tblrd		*+
 15236  0006C4  50F5               	movf	tablat,w,c
 15237  0006C6  5D87               	subwf	sprintf@val& (0+255),w,b
 15238  0006C8  0009               	tblrd		*+
 15239  0006CA  50F5               	movf	tablat,w,c
 15240  0006CC  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
 15241  0006CE  E321               	bnc	l10616
 15242                           
 15243                           ; BSR set to: 0
 15244  0006D0  2B8C               	incf	sprintf@c& (0+255),f,b
 15245  0006D2  D7EC               	goto	l10586
 15246  0006D4                     l10598:
 15247                           
 15248                           ; BSR set to: 0
 15249                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 15250  0006D4  0E01               	movlw	1
 15251  0006D6  6F8C               	movwf	sprintf@c& (0+255),b
 15252  0006D8                     l10600:
 15253                           
 15254                           ; BSR set to: 0
 15255  0006D8  0E06               	movlw	6
 15256  0006DA  198C               	xorwf	sprintf@c& (0+255),w,b
 15257  0006DC  E01A               	bz	l10616
 15258                           
 15259                           ; BSR set to: 0
 15260                           ;doprnt.c: 1329: if(val < octpowers[c])
 15261  0006DE  518C               	movf	sprintf@c& (0+255),w,b
 15262  0006E0  0D02               	mullw	2
 15263  0006E2  0EAD               	movlw	low _octpowers
 15264  0006E4  24F3               	addwf	prodl,w,c
 15265  0006E6  6EF6               	movwf	tblptrl,c
 15266  0006E8  0EFA               	movlw	high _octpowers
 15267  0006EA  20F4               	addwfc	prodh,w,c
 15268  0006EC  6EF7               	movwf	tblptrh,c
 15269  0006EE                     	if	0	;There are less than 3 active tblptr bytes
 15270  0006EE                     	endif
 15271  0006EE  0009               	tblrd		*+
 15272  0006F0  50F5               	movf	tablat,w,c
 15273  0006F2  5D87               	subwf	sprintf@val& (0+255),w,b
 15274  0006F4  0009               	tblrd		*+
 15275  0006F6  50F5               	movf	tablat,w,c
 15276  0006F8  5988               	subwfb	(sprintf@val+1)& (0+255),w,b
 15277  0006FA  E30B               	bnc	l10616
 15278                           
 15279                           ; BSR set to: 0
 15280  0006FC  2B8C               	incf	sprintf@c& (0+255),f,b
 15281  0006FE  D7EC               	goto	l10600
 15282  000700                     l10614:
 15283                           
 15284                           ; BSR set to: 0
 15285  000700  518D               	movf	sprintf@flag& (0+255),w,b
 15286  000702  0BC0               	andlw	192
 15287                           
 15288                           ; Switch size 1, requested type "speed"
 15289                           ; Number of cases is 4, Range of values is 0 to 192
 15290                           ; switch strategies available:
 15291                           ; Name         Instructions Cycles
 15292                           ; simple_byte           13     7 (average)
 15293                           ;	Chosen strategy is simple_byte
 15294  000704  E0BB               	bz	l10570
 15295  000706  0A40               	xorlw	64	; case 64
 15296  000708  E0E5               	bz	l10598
 15297  00070A  0AC0               	xorlw	192	; case 128
 15298  00070C  E0CD               	bz	l10584
 15299  00070E  0A40               	xorlw	64	; case 192
 15300  000710  E0B5               	bz	l10570
 15301  000712                     l10616:
 15302                           
 15303                           ; BSR set to: 0
 15304                           ;doprnt.c: 1339: if(c < prec)
 15305  000712  518C               	movf	sprintf@c& (0+255),w,b
 15306  000714  0A80               	xorlw	128
 15307  000716  6F78               	movwf	??_sprintf& (0+255),b
 15308  000718  5189               	movf	sprintf@prec& (0+255),w,b
 15309  00071A  0A80               	xorlw	128
 15310  00071C  5D78               	subwf	??_sprintf& (0+255),w,b
 15311  00071E  E203               	bc	l10620
 15312                           
 15313                           ; BSR set to: 0
 15314                           ;doprnt.c: 1340: c = prec;
 15315  000720  C089  F08C         	movff	sprintf@prec,sprintf@c
 15316  000724  D009               	goto	l10624
 15317  000726                     l10620:
 15318                           
 15319                           ; BSR set to: 0
 15320                           ;doprnt.c: 1341: else if(prec < c)
 15321  000726  5189               	movf	sprintf@prec& (0+255),w,b
 15322  000728  0A80               	xorlw	128
 15323  00072A  6F78               	movwf	??_sprintf& (0+255),b
 15324  00072C  518C               	movf	sprintf@c& (0+255),w,b
 15325  00072E  0A80               	xorlw	128
 15326  000730  5D78               	subwf	??_sprintf& (0+255),w,b
 15327  000732  E202               	bc	l10624
 15328                           
 15329                           ; BSR set to: 0
 15330                           ;doprnt.c: 1342: prec = c;
 15331  000734  C08C  F089         	movff	sprintf@c,sprintf@prec
 15332  000738                     l10624:
 15333                           
 15334                           ; BSR set to: 0
 15335                           ;doprnt.c: 1345: if(width && flag & 0x03)
 15336  000738  518A               	movf	sprintf@width& (0+255),w,b
 15337  00073A  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 15338  00073C  E008               	bz	l10630
 15339                           
 15340                           ; BSR set to: 0
 15341  00073E  C08D  F078         	movff	sprintf@flag,??_sprintf
 15342  000742  0E03               	movlw	3
 15343  000744  1778               	andwf	??_sprintf& (0+255),f,b
 15344  000746  E003               	bz	l10630
 15345                           
 15346                           ; BSR set to: 0
 15347                           ;doprnt.c: 1346: width--;
 15348  000748  078A               	decf	sprintf@width& (0+255),f,b
 15349  00074A  A0D8               	btfss	status,0,c
 15350  00074C  078B               	decf	(sprintf@width+1)& (0+255),f,b
 15351  00074E                     l10630:
 15352                           
 15353                           ; BSR set to: 0
 15354                           ;doprnt.c: 1348: if(flag & 0x4000) {
 15355  00074E  AD8E               	btfss	(sprintf@flag+1)& (0+255),6,b
 15356  000750  D013               	goto	l10636
 15357                           
 15358                           ; BSR set to: 0
 15359                           ;doprnt.c: 1349: if(width > prec)
 15360  000752  0E80               	movlw	128
 15361  000754  BF89               	btfsc	sprintf@prec& (0+255),7,b
 15362  000756  0E7F               	movlw	127
 15363  000758  6F78               	movwf	??_sprintf& (0+255),b
 15364  00075A  518A               	movf	sprintf@width& (0+255),w,b
 15365  00075C  5D89               	subwf	sprintf@prec& (0+255),w,b
 15366  00075E  518B               	movf	(sprintf@width+1)& (0+255),w,b
 15367  000760  0A80               	xorlw	128
 15368  000762  5978               	subwfb	??_sprintf& (0+255),w,b
 15369  000764  E207               	bc	l1437
 15370                           
 15371                           ; BSR set to: 0
 15372                           ;doprnt.c: 1350: width -= prec;
 15373  000766  5189               	movf	sprintf@prec& (0+255),w,b
 15374  000768  5F8A               	subwf	sprintf@width& (0+255),f,b
 15375  00076A  0E00               	movlw	0
 15376  00076C  BF89               	btfsc	sprintf@prec& (0+255),7,b
 15377  00076E  0EFF               	movlw	255
 15378  000770  5B8B               	subwfb	(sprintf@width+1)& (0+255),f,b
 15379  000772  D002               	goto	l10636
 15380  000774                     l1437:
 15381                           
 15382                           ; BSR set to: 0
 15383                           ;doprnt.c: 1351: else
 15384                           ;doprnt.c: 1352: width = 0;
 15385  000774  6B8A               	clrf	sprintf@width& (0+255),b
 15386  000776  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 15387  000778                     l10636:
 15388                           
 15389                           ; BSR set to: 0
 15390                           ;doprnt.c: 1353: }
 15391                           ;doprnt.c: 1357: if((flag & (
 15392                           ;doprnt.c: 1359: 0x04|
 15393                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 15394  000778  0EC4               	movlw	196
 15395  00077A  6F78               	movwf	??_sprintf& (0+255),b
 15396  00077C  0E08               	movlw	8
 15397  00077E  6F79               	movwf	(??_sprintf+1)& (0+255),b
 15398  000780  C08D  F07A         	movff	sprintf@flag,??_sprintf+2
 15399  000784  C08E  F07B         	movff	sprintf@flag+1,??_sprintf+3
 15400  000788  5178               	movf	??_sprintf& (0+255),w,b
 15401  00078A  177A               	andwf	(??_sprintf+2)& (0+255),f,b
 15402  00078C  5179               	movf	(??_sprintf+1)& (0+255),w,b
 15403  00078E  177B               	andwf	(??_sprintf+3)& (0+255),f,b
 15404  000790  0E40               	movlw	64
 15405  000792  197A               	xorwf	(??_sprintf+2)& (0+255),w,b
 15406  000794  E10A               	bnz	l10642
 15407  000796  0E08               	movlw	8
 15408  000798  197B               	xorwf	(??_sprintf+3)& (0+255),w,b
 15409  00079A  E107               	bnz	l10642
 15410                           
 15411                           ; BSR set to: 0
 15412                           ;doprnt.c: 1362: if(width)
 15413  00079C  518A               	movf	sprintf@width& (0+255),w,b
 15414  00079E  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 15415  0007A0  E024               	bz	l10648
 15416                           
 15417                           ; BSR set to: 0
 15418                           ;doprnt.c: 1363: width--;
 15419  0007A2  078A               	decf	sprintf@width& (0+255),f,b
 15420  0007A4  A0D8               	btfss	status,0,c
 15421  0007A6  078B               	decf	(sprintf@width+1)& (0+255),f,b
 15422  0007A8  D020               	goto	l10648
 15423  0007AA                     l10642:
 15424                           
 15425                           ; BSR set to: 0
 15426                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 15427  0007AA  0EC0               	movlw	192
 15428  0007AC  6F78               	movwf	??_sprintf& (0+255),b
 15429  0007AE  0E08               	movlw	8
 15430  0007B0  6F79               	movwf	(??_sprintf+1)& (0+255),b
 15431  0007B2  C08D  F07A         	movff	sprintf@flag,??_sprintf+2
 15432  0007B6  C08E  F07B         	movff	sprintf@flag+1,??_sprintf+3
 15433  0007BA  5178               	movf	??_sprintf& (0+255),w,b
 15434  0007BC  177A               	andwf	(??_sprintf+2)& (0+255),f,b
 15435  0007BE  5179               	movf	(??_sprintf+1)& (0+255),w,b
 15436  0007C0  177B               	andwf	(??_sprintf+3)& (0+255),f,b
 15437  0007C2  0E80               	movlw	128
 15438  0007C4  197A               	xorwf	(??_sprintf+2)& (0+255),w,b
 15439  0007C6  E111               	bnz	l10648
 15440  0007C8  0E08               	movlw	8
 15441  0007CA  197B               	xorwf	(??_sprintf+3)& (0+255),w,b
 15442  0007CC  E10E               	bnz	l10648
 15443                           
 15444                           ; BSR set to: 0
 15445                           ;doprnt.c: 1372: if(width > 2)
 15446  0007CE  BF8B               	btfsc	(sprintf@width+1)& (0+255),7,b
 15447  0007D0  D00A               	goto	l1443
 15448  0007D2  518B               	movf	(sprintf@width+1)& (0+255),w,b
 15449  0007D4  E103               	bnz	u10430
 15450  0007D6  0E03               	movlw	3
 15451  0007D8  5D8A               	subwf	sprintf@width& (0+255),w,b
 15452  0007DA  E305               	bnc	l1443
 15453  0007DC                     u10430:
 15454                           
 15455                           ; BSR set to: 0
 15456                           ;doprnt.c: 1373: width -= 2;
 15457  0007DC  0EFE               	movlw	254
 15458  0007DE  278A               	addwf	sprintf@width& (0+255),f,b
 15459  0007E0  0EFF               	movlw	255
 15460  0007E2  238B               	addwfc	(sprintf@width+1)& (0+255),f,b
 15461  0007E4  D002               	goto	l10648
 15462  0007E6                     l1443:
 15463                           
 15464                           ; BSR set to: 0
 15465                           ;doprnt.c: 1374: else
 15466                           ;doprnt.c: 1375: width = 0;
 15467  0007E6  6B8A               	clrf	sprintf@width& (0+255),b
 15468  0007E8  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 15469  0007EA                     l10648:
 15470                           
 15471                           ; BSR set to: 0
 15472                           ;doprnt.c: 1376: }
 15473                           ;doprnt.c: 1381: if(width > c)
 15474  0007EA  0E80               	movlw	128
 15475  0007EC  BF8C               	btfsc	sprintf@c& (0+255),7,b
 15476  0007EE  0E7F               	movlw	127
 15477  0007F0  6F78               	movwf	??_sprintf& (0+255),b
 15478  0007F2  518A               	movf	sprintf@width& (0+255),w,b
 15479  0007F4  5D8C               	subwf	sprintf@c& (0+255),w,b
 15480  0007F6  518B               	movf	(sprintf@width+1)& (0+255),w,b
 15481  0007F8  0A80               	xorlw	128
 15482  0007FA  5978               	subwfb	??_sprintf& (0+255),w,b
 15483  0007FC  E207               	bc	l1445
 15484                           
 15485                           ; BSR set to: 0
 15486                           ;doprnt.c: 1382: width -= c;
 15487  0007FE  518C               	movf	sprintf@c& (0+255),w,b
 15488  000800  5F8A               	subwf	sprintf@width& (0+255),f,b
 15489  000802  0E00               	movlw	0
 15490  000804  BF8C               	btfsc	sprintf@c& (0+255),7,b
 15491  000806  0EFF               	movlw	255
 15492  000808  5B8B               	subwfb	(sprintf@width+1)& (0+255),f,b
 15493  00080A  D002               	goto	l1446
 15494  00080C                     l1445:
 15495                           
 15496                           ; BSR set to: 0
 15497                           ;doprnt.c: 1383: else
 15498                           ;doprnt.c: 1384: width = 0;
 15499  00080C  6B8A               	clrf	sprintf@width& (0+255),b
 15500  00080E  6B8B               	clrf	(sprintf@width+1)& (0+255),b
 15501  000810                     l1446:
 15502                           
 15503                           ; BSR set to: 0
 15504                           ;doprnt.c: 1387: if(flag & 0x04) {
 15505  000810  A58D               	btfss	sprintf@flag& (0+255),2,b
 15506  000812  D04F               	goto	l10686
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;doprnt.c: 1392: if(flag & 0x03)
 15510  000814  C08D  F078         	movff	sprintf@flag,??_sprintf
 15511  000818  0E03               	movlw	3
 15512  00081A  1778               	andwf	??_sprintf& (0+255),f,b
 15513  00081C  E009               	bz	l1448
 15514                           
 15515                           ; BSR set to: 0
 15516                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 15517  00081E  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15518  000822  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15519  000826  0E2D               	movlw	45
 15520  000828  6EDF               	movwf	indf2,c
 15521  00082A                     l10656:
 15522                           
 15523                           ; BSR set to: 0
 15524  00082A  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 15525  00082C  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 15526  00082E  D031               	goto	l10678
 15527  000830                     l1448:
 15528                           
 15529                           ; BSR set to: 0
 15530                           ;doprnt.c: 1396: else
 15531                           ;doprnt.c: 1399: if(flag & 0x01)
 15532  000830  A18D               	btfss	sprintf@flag& (0+255),0,b
 15533  000832  D006               	goto	l10662
 15534                           
 15535                           ; BSR set to: 0
 15536                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 15537  000834  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15538  000838  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15539  00083C  0E20               	movlw	32
 15540  00083E  D7F4               	goto	L2
 15541  000840                     l10662:
 15542                           
 15543                           ; BSR set to: 0
 15544                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 15545  000840  0EC0               	movlw	192
 15546  000842  6F78               	movwf	??_sprintf& (0+255),b
 15547  000844  0E08               	movlw	8
 15548  000846  6F79               	movwf	(??_sprintf+1)& (0+255),b
 15549  000848  C08D  F07A         	movff	sprintf@flag,??_sprintf+2
 15550  00084C  C08E  F07B         	movff	sprintf@flag+1,??_sprintf+3
 15551  000850  5178               	movf	??_sprintf& (0+255),w,b
 15552  000852  177A               	andwf	(??_sprintf+2)& (0+255),f,b
 15553  000854  5179               	movf	(??_sprintf+1)& (0+255),w,b
 15554  000856  177B               	andwf	(??_sprintf+3)& (0+255),f,b
 15555  000858  0E80               	movlw	128
 15556  00085A  197A               	xorwf	(??_sprintf+2)& (0+255),w,b
 15557  00085C  E11A               	bnz	l10678
 15558  00085E  0E08               	movlw	8
 15559  000860  197B               	xorwf	(??_sprintf+3)& (0+255),w,b
 15560  000862  E117               	bnz	l10678
 15561                           
 15562                           ; BSR set to: 0
 15563                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 15564  000864  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15565  000868  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15566  00086C  0E30               	movlw	48
 15567  00086E  6EDF               	movwf	indf2,c
 15568                           
 15569                           ; BSR set to: 0
 15570  000870  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 15571  000872  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 15572                           
 15573                           ; BSR set to: 0
 15574                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 15575  000874  BB8D               	btfsc	sprintf@flag& (0+255),5,b
 15576  000876  D003               	goto	l10672
 15577                           
 15578                           ; BSR set to: 0
 15579  000878  6B7E               	clrf	(_sprintf$3821+1)& (0+255),b
 15580  00087A  0E78               	movlw	120
 15581  00087C  D002               	goto	L3
 15582  00087E                     l10672:
 15583                           
 15584                           ; BSR set to: 0
 15585  00087E  6B7E               	clrf	(_sprintf$3821+1)& (0+255),b
 15586  000880  0E58               	movlw	88
 15587  000882                     L3:
 15588  000882  6F7D               	movwf	_sprintf$3821& (0+255),b
 15589                           
 15590                           ; BSR set to: 0
 15591  000884  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15592  000888  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15593  00088C  C07D  FFDF         	movff	_sprintf$3821,indf2
 15594  000890  D7CC               	goto	l10656
 15595  000892                     l10678:
 15596                           
 15597                           ; BSR set to: 0
 15598                           ;doprnt.c: 1412: }
 15599                           ;doprnt.c: 1415: if(width)
 15600  000892  518A               	movf	sprintf@width& (0+255),w,b
 15601  000894  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 15602  000896  E101 D0F2          	bz	l10750
 15603                           
 15604                           ; BSR set to: 0
 15605                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 15606  00089A  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15607  00089E  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15608  0008A2  0E30               	movlw	48
 15609  0008A4  6EDF               	movwf	indf2,c
 15610                           
 15611                           ; BSR set to: 0
 15612  0008A6  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 15613  0008A8  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;doprnt.c: 1418: while(--width);
 15617  0008AA  078A               	decf	sprintf@width& (0+255),f,b
 15618  0008AC  A0D8               	btfss	status,0,c
 15619  0008AE  078B               	decf	(sprintf@width+1)& (0+255),f,b
 15620  0008B0  D7F0               	goto	l10678
 15621  0008B2                     l10686:
 15622                           
 15623                           ; BSR set to: 0
 15624                           ;doprnt.c: 1422: {
 15625                           ;doprnt.c: 1424: if(width
 15626                           ;doprnt.c: 1426: && !(flag & 0x08)
 15627                           ;doprnt.c: 1428: )
 15628  0008B2  518A               	movf	sprintf@width& (0+255),w,b
 15629  0008B4  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 15630  0008B6  E010               	bz	l10696
 15631                           
 15632                           ; BSR set to: 0
 15633  0008B8  B78D               	btfsc	sprintf@flag& (0+255),3,b
 15634  0008BA  D00E               	goto	l10696
 15635  0008BC                     l10690:
 15636                           
 15637                           ; BSR set to: 0
 15638                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 15639  0008BC  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15640  0008C0  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15641  0008C4  0E20               	movlw	32
 15642  0008C6  6EDF               	movwf	indf2,c
 15643                           
 15644                           ; BSR set to: 0
 15645  0008C8  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 15646  0008CA  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 15647                           
 15648                           ; BSR set to: 0
 15649                           ;doprnt.c: 1431: while(--width);
 15650  0008CC  078A               	decf	sprintf@width& (0+255),f,b
 15651  0008CE  A0D8               	btfss	status,0,c
 15652  0008D0  078B               	decf	(sprintf@width+1)& (0+255),f,b
 15653  0008D2  518A               	movf	sprintf@width& (0+255),w,b
 15654  0008D4  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 15655  0008D6  E1F2               	bnz	l10690
 15656  0008D8                     l10696:
 15657                           
 15658                           ; BSR set to: 0
 15659                           ;doprnt.c: 1438: if(flag & 0x03)
 15660  0008D8  C08D  F078         	movff	sprintf@flag,??_sprintf
 15661  0008DC  0E03               	movlw	3
 15662  0008DE  1778               	andwf	??_sprintf& (0+255),f,b
 15663  0008E0  E009               	bz	l1464
 15664                           
 15665                           ; BSR set to: 0
 15666                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 15667  0008E2  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15668  0008E6  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15669  0008EA  0E2D               	movlw	45
 15670  0008EC  6EDF               	movwf	indf2,c
 15671                           
 15672                           ; BSR set to: 0
 15673  0008EE  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 15674  0008F0  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 15675  0008F2  D008               	goto	l10706
 15676  0008F4                     l1464:
 15677                           
 15678                           ; BSR set to: 0
 15679                           ;doprnt.c: 1443: else if(flag & 0x01)
 15680  0008F4  A18D               	btfss	sprintf@flag& (0+255),0,b
 15681  0008F6  D006               	goto	l10706
 15682                           
 15683                           ; BSR set to: 0
 15684                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 15685  0008F8  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15686  0008FC  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15687  000900  0E20               	movlw	32
 15688  000902  D7F4               	goto	L4
 15689  000904                     l10706:
 15690                           
 15691                           ; BSR set to: 0
 15692                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 15693  000904  0EC0               	movlw	192
 15694  000906  6F78               	movwf	??_sprintf& (0+255),b
 15695  000908  0E08               	movlw	8
 15696  00090A  6F79               	movwf	(??_sprintf+1)& (0+255),b
 15697  00090C  C08D  F07A         	movff	sprintf@flag,??_sprintf+2
 15698  000910  C08E  F07B         	movff	sprintf@flag+1,??_sprintf+3
 15699  000914  5178               	movf	??_sprintf& (0+255),w,b
 15700  000916  177A               	andwf	(??_sprintf+2)& (0+255),f,b
 15701  000918  5179               	movf	(??_sprintf+1)& (0+255),w,b
 15702  00091A  177B               	andwf	(??_sprintf+3)& (0+255),f,b
 15703  00091C  0E40               	movlw	64
 15704  00091E  197A               	xorwf	(??_sprintf+2)& (0+255),w,b
 15705  000920  E10C               	bnz	l10712
 15706  000922  0E08               	movlw	8
 15707  000924  197B               	xorwf	(??_sprintf+3)& (0+255),w,b
 15708  000926  E109               	bnz	l10712
 15709                           
 15710                           ; BSR set to: 0
 15711                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 15712  000928  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15713  00092C  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15714  000930  0E30               	movlw	48
 15715  000932  6EDF               	movwf	indf2,c
 15716  000934                     l10710:
 15717                           
 15718                           ; BSR set to: 0
 15719  000934  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 15720  000936  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 15721  000938  D0A2               	goto	l10750
 15722  00093A                     l10712:
 15723                           
 15724                           ; BSR set to: 0
 15725                           ;doprnt.c: 1450: else
 15726                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 15727  00093A  0EC0               	movlw	192
 15728  00093C  6F78               	movwf	??_sprintf& (0+255),b
 15729  00093E  0E08               	movlw	8
 15730  000940  6F79               	movwf	(??_sprintf+1)& (0+255),b
 15731  000942  C08D  F07A         	movff	sprintf@flag,??_sprintf+2
 15732  000946  C08E  F07B         	movff	sprintf@flag+1,??_sprintf+3
 15733  00094A  5178               	movf	??_sprintf& (0+255),w,b
 15734  00094C  177A               	andwf	(??_sprintf+2)& (0+255),f,b
 15735  00094E  5179               	movf	(??_sprintf+1)& (0+255),w,b
 15736  000950  177B               	andwf	(??_sprintf+3)& (0+255),f,b
 15737  000952  0E80               	movlw	128
 15738  000954  197A               	xorwf	(??_sprintf+2)& (0+255),w,b
 15739  000956  E11B               	bnz	l1460
 15740  000958  0E08               	movlw	8
 15741  00095A  197B               	xorwf	(??_sprintf+3)& (0+255),w,b
 15742  00095C  E001 D08F          	bnz	l10750
 15743                           
 15744                           ; BSR set to: 0
 15745                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 15746  000960  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15747  000964  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15748  000968  0E30               	movlw	48
 15749  00096A  6EDF               	movwf	indf2,c
 15750                           
 15751                           ; BSR set to: 0
 15752  00096C  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 15753  00096E  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 15754                           
 15755                           ; BSR set to: 0
 15756                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 15757  000970  BB8D               	btfsc	sprintf@flag& (0+255),5,b
 15758  000972  D003               	goto	l10722
 15759                           
 15760                           ; BSR set to: 0
 15761  000974  6B80               	clrf	(_sprintf$3822+1)& (0+255),b
 15762  000976  0E78               	movlw	120
 15763  000978  D002               	goto	L5
 15764  00097A                     l10722:
 15765                           
 15766                           ; BSR set to: 0
 15767  00097A  6B80               	clrf	(_sprintf$3822+1)& (0+255),b
 15768  00097C  0E58               	movlw	88
 15769  00097E                     L5:
 15770  00097E  6F7F               	movwf	_sprintf$3822& (0+255),b
 15771                           
 15772                           ; BSR set to: 0
 15773  000980  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15774  000984  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15775  000988  C07F  FFDF         	movff	_sprintf$3822,indf2
 15776  00098C  D7D3               	goto	l10710
 15777  00098E                     l1460:
 15778                           
 15779                           ; BSR set to: 0
 15780                           ;doprnt.c: 1466: }
 15781                           ;doprnt.c: 1469: }
 15782                           ;doprnt.c: 1474: while(prec--) {
 15783  00098E  D077               	goto	l10750
 15784  000990                     l10728:
 15785                           
 15786                           ; BSR set to: 0
 15787                           ;doprnt.c: 1486: case 0xC0:
 15788                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 15789  000990  5189               	movf	sprintf@prec& (0+255),w,b
 15790  000992  0D02               	mullw	2
 15791  000994  0EB9               	movlw	low _dpowers
 15792  000996  24F3               	addwf	prodl,w,c
 15793  000998  6EF6               	movwf	tblptrl,c
 15794  00099A  0EFA               	movlw	high _dpowers
 15795  00099C  20F4               	addwfc	prodh,w,c
 15796  00099E  6EF7               	movwf	tblptrh,c
 15797  0009A0                     	if	0	;There are less than 3 active tblptr bytes
 15798  0009A0                     	endif
 15799  0009A0  0009               	tblrd		*+
 15800  0009A2  CFF5 F062          	movff	tablat,___lwdiv@divisor
 15801  0009A6  000A               	tblrd		*-
 15802  0009A8  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 15803  0009AC  C087  F060         	movff	sprintf@val,___lwdiv@dividend
 15804  0009B0  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
 15805  0009B4  EC4F  F017         	call	___lwdiv	;wreg free
 15806  0009B8  C060  F067         	movff	?___lwdiv,___lwmod@dividend
 15807  0009BC  C061  F068         	movff	?___lwdiv+1,___lwmod@dividend+1
 15808  0009C0  6B6A               	clrf	(___lwmod@divisor+1)& (0+255),b
 15809  0009C2  0E0A               	movlw	10
 15810  0009C4  6F69               	movwf	___lwmod@divisor& (0+255),b
 15811  0009C6  ECF9  F017         	call	___lwmod	;wreg free
 15812  0009CA  5167               	movf	?___lwmod& (0+255),w,b
 15813  0009CC  D045               	goto	L6
 15814  0009CE                     l10730:
 15815                           
 15816                           ; BSR set to: 0
 15817                           ;doprnt.c: 1499: {
 15818                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 15819  0009CE  C087  F060         	movff	sprintf@val,___lwdiv@dividend
 15820  0009D2  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
 15821  0009D6  5189               	movf	sprintf@prec& (0+255),w,b
 15822  0009D8  0D02               	mullw	2
 15823  0009DA  0EC3               	movlw	low _hexpowers
 15824  0009DC  24F3               	addwf	prodl,w,c
 15825  0009DE  6EF6               	movwf	tblptrl,c
 15826  0009E0  0EFA               	movlw	high _hexpowers
 15827  0009E2  20F4               	addwfc	prodh,w,c
 15828  0009E4  6EF7               	movwf	tblptrh,c
 15829  0009E6                     	if	0	;There are less than 3 active tblptr bytes
 15830  0009E6                     	endif
 15831  0009E6  0009               	tblrd		*+
 15832  0009E8  CFF5 F062          	movff	tablat,___lwdiv@divisor
 15833  0009EC  000A               	tblrd		*-
 15834  0009EE  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 15835  0009F2  EC4F  F017         	call	___lwdiv	;wreg free
 15836  0009F6  5160               	movf	?___lwdiv& (0+255),w,b
 15837  0009F8  0B0F               	andlw	15
 15838  0009FA  6F7C               	movwf	sprintf@idx& (0+255),b
 15839                           
 15840                           ; BSR set to: 0
 15841                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 15842  0009FC  BB8D               	btfsc	sprintf@flag& (0+255),5,b
 15843  0009FE  D004               	goto	l10736
 15844                           
 15845                           ; BSR set to: 0
 15846  000A00  0E41               	movlw	low STR_61
 15847  000A02  6F81               	movwf	_sprintf$3828& (0+255),b
 15848  000A04  0EFF               	movlw	high STR_61
 15849  000A06  D003               	goto	L7
 15850  000A08                     l10736:
 15851                           
 15852                           ; BSR set to: 0
 15853  000A08  0E30               	movlw	low STR_60
 15854  000A0A  6F81               	movwf	_sprintf$3828& (0+255),b
 15855  000A0C  0EFF               	movlw	high STR_60
 15856  000A0E                     L7:
 15857  000A0E  6F82               	movwf	(_sprintf$3828+1)& (0+255),b
 15858                           
 15859                           ; BSR set to: 0
 15860  000A10  517C               	movf	sprintf@idx& (0+255),w,b
 15861  000A12  2581               	addwf	_sprintf$3828& (0+255),w,b
 15862  000A14  6F78               	movwf	??_sprintf& (0+255),b
 15863  000A16  0E00               	movlw	0
 15864  000A18  2182               	addwfc	(_sprintf$3828+1)& (0+255),w,b
 15865  000A1A  6F79               	movwf	(??_sprintf+1)& (0+255),b
 15866  000A1C  C078  FFF6         	movff	??_sprintf,tblptrl
 15867  000A20  C079  FFF7         	movff	??_sprintf+1,tblptrh
 15868  000A24                     	if	0	;tblptru may be non-zero
 15869  000A24                     	endif
 15870  000A24                     	if	0	;tblptru may be non-zero
 15871  000A24                     	endif
 15872  000A24  0008               	tblrd		*
 15873  000A26  CFF5 F08C          	movff	tablat,sprintf@c
 15874                           
 15875                           ;doprnt.c: 1508: }
 15876                           ;doprnt.c: 1510: break;
 15877  000A2A  D022               	goto	l10746
 15878  000A2C                     l10740:
 15879                           
 15880                           ; BSR set to: 0
 15881                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 15882  000A2C  C087  F060         	movff	sprintf@val,___lwdiv@dividend
 15883  000A30  C088  F061         	movff	sprintf@val+1,___lwdiv@dividend+1
 15884  000A34  5189               	movf	sprintf@prec& (0+255),w,b
 15885  000A36  0D02               	mullw	2
 15886  000A38  0EAD               	movlw	low _octpowers
 15887  000A3A  24F3               	addwf	prodl,w,c
 15888  000A3C  6EF6               	movwf	tblptrl,c
 15889  000A3E  0EFA               	movlw	high _octpowers
 15890  000A40  20F4               	addwfc	prodh,w,c
 15891  000A42  6EF7               	movwf	tblptrh,c
 15892  000A44                     	if	0	;There are less than 3 active tblptr bytes
 15893  000A44                     	endif
 15894  000A44  0009               	tblrd		*+
 15895  000A46  CFF5 F062          	movff	tablat,___lwdiv@divisor
 15896  000A4A  000A               	tblrd		*-
 15897  000A4C  CFF5 F063          	movff	tablat,___lwdiv@divisor+1
 15898  000A50  EC4F  F017         	call	___lwdiv	;wreg free
 15899  000A54  5160               	movf	?___lwdiv& (0+255),w,b
 15900  000A56  0B07               	andlw	7
 15901  000A58                     L6:
 15902  000A58  0F30               	addlw	48
 15903  000A5A  6F8C               	movwf	sprintf@c& (0+255),b
 15904                           
 15905                           ;doprnt.c: 1520: break;
 15906  000A5C  D009               	goto	l10746
 15907  000A5E                     l10744:
 15908                           
 15909                           ; BSR set to: 0
 15910  000A5E  518D               	movf	sprintf@flag& (0+255),w,b
 15911  000A60  0BC0               	andlw	192
 15912                           
 15913                           ; Switch size 1, requested type "speed"
 15914                           ; Number of cases is 4, Range of values is 0 to 192
 15915                           ; switch strategies available:
 15916                           ; Name         Instructions Cycles
 15917                           ; simple_byte           13     7 (average)
 15918                           ;	Chosen strategy is simple_byte
 15919  000A62  E096               	bz	l10728
 15920  000A64  0A40               	xorlw	64	; case 64
 15921  000A66  E0E2               	bz	l10740
 15922  000A68  0AC0               	xorlw	192	; case 128
 15923  000A6A  E0B1               	bz	l10730
 15924  000A6C  0A40               	xorlw	64	; case 192
 15925  000A6E  E090               	bz	l10728
 15926  000A70                     l10746:
 15927                           
 15928                           ; BSR set to: 0
 15929                           ;doprnt.c: 1524: ((*sp++ = (c)));
 15930  000A70  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15931  000A74  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15932  000A78  C08C  FFDF         	movff	sprintf@c,indf2
 15933  000A7C  D75B               	goto	l10710
 15934  000A7E                     l10750:
 15935                           
 15936                           ; BSR set to: 0
 15937  000A7E  0789               	decf	sprintf@prec& (0+255),f,b
 15938  000A80  2989               	incf	sprintf@prec& (0+255),w,b
 15939  000A82  E1ED               	bnz	l10744
 15940                           
 15941                           ; BSR set to: 0
 15942                           ;doprnt.c: 1525: }
 15943                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 15944  000A84  B78D               	btfsc	sprintf@flag& (0+255),3,b
 15945                           
 15946                           ; BSR set to: 0
 15947  000A86  BF8B               	btfsc	(sprintf@width+1)& (0+255),7,b
 15948  000A88  D012               	goto	l10760
 15949  000A8A  518B               	movf	(sprintf@width+1)& (0+255),w,b
 15950  000A8C  E102               	bnz	u10630
 15951  000A8E  058A               	decf	sprintf@width& (0+255),w,b
 15952  000A90  E30E               	bnc	l10760
 15953  000A92                     u10630:
 15954  000A92                     l10754:
 15955                           
 15956                           ; BSR set to: 0
 15957                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 15958  000A92  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15959  000A96  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15960  000A9A  0E20               	movlw	32
 15961  000A9C  6EDF               	movwf	indf2,c
 15962                           
 15963                           ; BSR set to: 0
 15964  000A9E  4B6C               	infsnz	sprintf@sp& (0+255),f,b
 15965  000AA0  2B6D               	incf	(sprintf@sp+1)& (0+255),f,b
 15966                           
 15967                           ; BSR set to: 0
 15968                           ;doprnt.c: 1531: while(--width);
 15969  000AA2  078A               	decf	sprintf@width& (0+255),f,b
 15970  000AA4  A0D8               	btfss	status,0,c
 15971  000AA6  078B               	decf	(sprintf@width+1)& (0+255),f,b
 15972  000AA8  518A               	movf	sprintf@width& (0+255),w,b
 15973  000AAA  118B               	iorwf	(sprintf@width+1)& (0+255),w,b
 15974  000AAC  E1F2               	bnz	l10754
 15975  000AAE                     l10760:
 15976                           
 15977                           ; BSR set to: 0
 15978  000AAE  C06E  FFF6         	movff	sprintf@f,tblptrl
 15979  000AB2  C06F  FFF7         	movff	sprintf@f+1,tblptrh
 15980  000AB6  4B6E               	infsnz	sprintf@f& (0+255),f,b
 15981  000AB8  2B6F               	incf	(sprintf@f+1)& (0+255),f,b
 15982  000ABA                     	if	0	;tblptru may be non-zero
 15983  000ABA                     	endif
 15984  000ABA                     	if	0	;tblptru may be non-zero
 15985  000ABA                     	endif
 15986  000ABA  0008               	tblrd		*
 15987  000ABC  CFF5 F08C          	movff	tablat,sprintf@c
 15988  000AC0  518C               	movf	sprintf@c& (0+255),w,b
 15989  000AC2  E001 D47C          	bnz	l10438
 15990  000AC6                     l10762:
 15991                           
 15992                           ; BSR set to: 0
 15993                           ;doprnt.c: 1538: *sp = 0;
 15994  000AC6  C06C  FFD9         	movff	sprintf@sp,fsr2l
 15995  000ACA  C06D  FFDA         	movff	sprintf@sp+1,fsr2h
 15996  000ACE  6ADF               	clrf	indf2,c
 15997                           
 15998                           ; BSR set to: 0
 15999  000AD0  0C00               	retlw	0	;funcret
 16000  000AD2                     __end_of_sprintf:
 16001                           	opt stack 0
 16002                           tblptru	equ	0xFF8
 16003                           tblptrh	equ	0xFF7
 16004                           tblptrl	equ	0xFF6
 16005                           tablat	equ	0xFF5
 16006                           prodh	equ	0xFF4
 16007                           prodl	equ	0xFF3
 16008                           intcon	equ	0xFF2
 16009                           intcon2	equ	0xFF1
 16010                           intcon3	equ	0xFF0
 16011                           postinc0	equ	0xFEE
 16012                           wreg	equ	0xFE8
 16013                           indf1	equ	0xFE7
 16014                           postinc1	equ	0xFE6
 16015                           postdec1	equ	0xFE5
 16016                           fsr1h	equ	0xFE2
 16017                           fsr1l	equ	0xFE1
 16018                           indf2	equ	0xFDF
 16019                           postinc2	equ	0xFDE
 16020                           postdec2	equ	0xFDD
 16021                           fsr2h	equ	0xFDA
 16022                           fsr2l	equ	0xFD9
 16023                           status	equ	0xFD8
 16024                           
 16025 ;; *************** function _isdigit *****************
 16026 ;; Defined at:
 16027 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 16028 ;; Parameters:    Size  Location     Type
 16029 ;;  c               1    wreg     unsigned char 
 16030 ;; Auto vars:     Size  Location     Type
 16031 ;;  c               1    2[BANK0 ] unsigned char 
 16032 ;; Return value:  Size  Location     Type
 16033 ;;		None               void
 16034 ;; Registers used:
 16035 ;;		wreg, status,2, status,0
 16036 ;; Tracked objects:
 16037 ;;		On entry : F/0
 16038 ;;		On exit  : F/0
 16039 ;;		Unchanged: 0/0
 16040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16042 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16043 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16044 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16045 ;;Total ram usage:        3 bytes
 16046 ;; Hardware stack levels used:    1
 16047 ;; Hardware stack levels required when called:    5
 16048 ;; This function calls:
 16049 ;;		Nothing
 16050 ;; This function is called by:
 16051 ;;		_sprintf
 16052 ;; This function uses a non-reentrant model
 16053 ;;
 16054                           
 16055                           	psect	text68
 16056  0033F0                     __ptext68:
 16057                           	opt stack 0
 16058  0033F0                     _isdigit:
 16059                           	opt stack 22
 16060                           
 16061                           ; BSR set to: 0
 16062                           ;incstack = 0
 16063                           ;isdigit@c stored from wreg
 16064  0033F0  6F62               	movwf	isdigit@c& (0+255),b
 16065  0033F2  0100               	movlb	0	; () banked
 16066  0033F4  6B61               	clrf	_isdigit$4052& (0+255),b
 16067                           
 16068                           ; BSR set to: 0
 16069  0033F6  0E3A               	movlw	58
 16070  0033F8  6162               	cpfslt	isdigit@c& (0+255),b
 16071  0033FA  D005               	goto	l10334
 16072                           
 16073                           ; BSR set to: 0
 16074  0033FC  0E2F               	movlw	47
 16075  0033FE  6562               	cpfsgt	isdigit@c& (0+255),b
 16076  003400  D002               	goto	l10334
 16077                           
 16078                           ; BSR set to: 0
 16079  003402  0E01               	movlw	1
 16080  003404  6F61               	movwf	_isdigit$4052& (0+255),b
 16081  003406                     l10334:
 16082                           
 16083                           ; BSR set to: 0
 16084  003406  C061  F060         	movff	_isdigit$4052,??_isdigit
 16085  00340A  3160               	rrcf	??_isdigit& (0+255),w,b
 16086                           
 16087                           ; BSR set to: 0
 16088  00340C  0012               	return		;funcret
 16089  00340E                     __end_of_isdigit:
 16090                           	opt stack 0
 16091                           tblptru	equ	0xFF8
 16092                           tblptrh	equ	0xFF7
 16093                           tblptrl	equ	0xFF6
 16094                           tablat	equ	0xFF5
 16095                           prodh	equ	0xFF4
 16096                           prodl	equ	0xFF3
 16097                           intcon	equ	0xFF2
 16098                           intcon2	equ	0xFF1
 16099                           intcon3	equ	0xFF0
 16100                           postinc0	equ	0xFEE
 16101                           wreg	equ	0xFE8
 16102                           indf1	equ	0xFE7
 16103                           postinc1	equ	0xFE6
 16104                           postdec1	equ	0xFE5
 16105                           fsr1h	equ	0xFE2
 16106                           fsr1l	equ	0xFE1
 16107                           indf2	equ	0xFDF
 16108                           postinc2	equ	0xFDE
 16109                           postdec2	equ	0xFDD
 16110                           fsr2h	equ	0xFDA
 16111                           fsr2l	equ	0xFD9
 16112                           status	equ	0xFD8
 16113                           
 16114 ;; *************** function ___wmul *****************
 16115 ;; Defined at:
 16116 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 16117 ;; Parameters:    Size  Location     Type
 16118 ;;  multiplier      2    0[BANK0 ] unsigned int 
 16119 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 16120 ;; Auto vars:     Size  Location     Type
 16121 ;;  product         2    4[BANK0 ] unsigned int 
 16122 ;; Return value:  Size  Location     Type
 16123 ;;                  2    0[BANK0 ] unsigned int 
 16124 ;; Registers used:
 16125 ;;		wreg, status,2, status,0, prodl, prodh
 16126 ;; Tracked objects:
 16127 ;;		On entry : F/0
 16128 ;;		On exit  : F/0
 16129 ;;		Unchanged: 0/0
 16130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16131 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16132 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16134 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16135 ;;Total ram usage:        6 bytes
 16136 ;; Hardware stack levels used:    1
 16137 ;; Hardware stack levels required when called:    5
 16138 ;; This function calls:
 16139 ;;		Nothing
 16140 ;; This function is called by:
 16141 ;;		_sprintf
 16142 ;; This function uses a non-reentrant model
 16143 ;;
 16144                           
 16145                           	psect	text69
 16146  00329C                     __ptext69:
 16147                           	opt stack 0
 16148  00329C                     ___wmul:
 16149                           	opt stack 22
 16150                           
 16151                           ; BSR set to: 0
 16152                           
 16153                           ; BSR set to: 0
 16154                           ;incstack = 0
 16155  00329C  5160               	movf	___wmul@multiplier& (0+255),w,b
 16156  00329E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 16157  0032A0  CFF3 F064          	movff	prodl,___wmul@product
 16158  0032A4  CFF4 F065          	movff	prodh,___wmul@product+1
 16159  0032A8  5160               	movf	___wmul@multiplier& (0+255),w,b
 16160  0032AA  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16161  0032AC  50F3               	movf	prodl,w,c
 16162  0032AE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 16163  0032B0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16164  0032B2  0362               	mulwf	___wmul@multiplicand& (0+255),b
 16165  0032B4  50F3               	movf	prodl,w,c
 16166  0032B6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 16167                           
 16168                           ; BSR set to: 0
 16169  0032B8  C064  F060         	movff	___wmul@product,?___wmul
 16170  0032BC  C065  F061         	movff	___wmul@product+1,?___wmul+1
 16171                           
 16172                           ; BSR set to: 0
 16173  0032C0  0012               	return		;funcret
 16174  0032C2                     __end_of___wmul:
 16175                           	opt stack 0
 16176                           tblptru	equ	0xFF8
 16177                           tblptrh	equ	0xFF7
 16178                           tblptrl	equ	0xFF6
 16179                           tablat	equ	0xFF5
 16180                           prodh	equ	0xFF4
 16181                           prodl	equ	0xFF3
 16182                           intcon	equ	0xFF2
 16183                           intcon2	equ	0xFF1
 16184                           intcon3	equ	0xFF0
 16185                           postinc0	equ	0xFEE
 16186                           wreg	equ	0xFE8
 16187                           indf1	equ	0xFE7
 16188                           postinc1	equ	0xFE6
 16189                           postdec1	equ	0xFE5
 16190                           fsr1h	equ	0xFE2
 16191                           fsr1l	equ	0xFE1
 16192                           indf2	equ	0xFDF
 16193                           postinc2	equ	0xFDE
 16194                           postdec2	equ	0xFDD
 16195                           fsr2h	equ	0xFDA
 16196                           fsr2l	equ	0xFD9
 16197                           status	equ	0xFD8
 16198                           
 16199 ;; *************** function ___lwmod *****************
 16200 ;; Defined at:
 16201 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 16202 ;; Parameters:    Size  Location     Type
 16203 ;;  dividend        2    7[BANK0 ] unsigned int 
 16204 ;;  divisor         2    9[BANK0 ] unsigned int 
 16205 ;; Auto vars:     Size  Location     Type
 16206 ;;  counter         1   11[BANK0 ] unsigned char 
 16207 ;; Return value:  Size  Location     Type
 16208 ;;                  2    7[BANK0 ] unsigned int 
 16209 ;; Registers used:
 16210 ;;		wreg, status,2, status,0
 16211 ;; Tracked objects:
 16212 ;;		On entry : F/0
 16213 ;;		On exit  : F/0
 16214 ;;		Unchanged: 0/0
 16215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16216 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16219 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16220 ;;Total ram usage:        5 bytes
 16221 ;; Hardware stack levels used:    1
 16222 ;; Hardware stack levels required when called:    5
 16223 ;; This function calls:
 16224 ;;		Nothing
 16225 ;; This function is called by:
 16226 ;;		_sprintf
 16227 ;; This function uses a non-reentrant model
 16228 ;;
 16229                           
 16230                           	psect	text70
 16231  002FF2                     __ptext70:
 16232                           	opt stack 0
 16233  002FF2                     ___lwmod:
 16234                           	opt stack 22
 16235                           
 16236                           ; BSR set to: 0
 16237                           
 16238                           ; BSR set to: 0
 16239                           ;incstack = 0
 16240  002FF2  5169               	movf	___lwmod@divisor& (0+255),w,b
 16241  002FF4  116A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 16242  002FF6  E017               	bz	l1903
 16243                           
 16244                           ; BSR set to: 0
 16245  002FF8  0E01               	movlw	1
 16246  002FFA  6F6B               	movwf	___lwmod@counter& (0+255),b
 16247  002FFC  D004               	goto	l10372
 16248  002FFE                     l10370:
 16249                           
 16250                           ; BSR set to: 0
 16251  002FFE  90D8               	bcf	status,0,c
 16252  003000  3769               	rlcf	___lwmod@divisor& (0+255),f,b
 16253  003002  376A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 16254  003004  2B6B               	incf	___lwmod@counter& (0+255),f,b
 16255  003006                     l10372:
 16256                           
 16257                           ; BSR set to: 0
 16258  003006  AF6A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 16259  003008  D7FA               	goto	l10370
 16260  00300A                     l10374:
 16261                           
 16262                           ; BSR set to: 0
 16263  00300A  5169               	movf	___lwmod@divisor& (0+255),w,b
 16264  00300C  5D67               	subwf	___lwmod@dividend& (0+255),w,b
 16265  00300E  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16266  003010  5968               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 16267  003012  E304               	bnc	l10378
 16268                           
 16269                           ; BSR set to: 0
 16270  003014  5169               	movf	___lwmod@divisor& (0+255),w,b
 16271  003016  5F67               	subwf	___lwmod@dividend& (0+255),f,b
 16272  003018  516A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16273  00301A  5B68               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 16274  00301C                     l10378:
 16275                           
 16276                           ; BSR set to: 0
 16277  00301C  90D8               	bcf	status,0,c
 16278  00301E  336A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 16279  003020  3369               	rrcf	___lwmod@divisor& (0+255),f,b
 16280                           
 16281                           ; BSR set to: 0
 16282  003022  2F6B               	decfsz	___lwmod@counter& (0+255),f,b
 16283  003024  D7F2               	goto	l10374
 16284  003026                     l1903:
 16285                           
 16286                           ; BSR set to: 0
 16287  003026  C067  F067         	movff	___lwmod@dividend,?___lwmod
 16288  00302A  C068  F068         	movff	___lwmod@dividend+1,?___lwmod+1
 16289                           
 16290                           ; BSR set to: 0
 16291  00302E  0012               	return		;funcret
 16292  003030                     __end_of___lwmod:
 16293                           	opt stack 0
 16294                           tblptru	equ	0xFF8
 16295                           tblptrh	equ	0xFF7
 16296                           tblptrl	equ	0xFF6
 16297                           tablat	equ	0xFF5
 16298                           prodh	equ	0xFF4
 16299                           prodl	equ	0xFF3
 16300                           intcon	equ	0xFF2
 16301                           intcon2	equ	0xFF1
 16302                           intcon3	equ	0xFF0
 16303                           postinc0	equ	0xFEE
 16304                           wreg	equ	0xFE8
 16305                           indf1	equ	0xFE7
 16306                           postinc1	equ	0xFE6
 16307                           postdec1	equ	0xFE5
 16308                           fsr1h	equ	0xFE2
 16309                           fsr1l	equ	0xFE1
 16310                           indf2	equ	0xFDF
 16311                           postinc2	equ	0xFDE
 16312                           postdec2	equ	0xFDD
 16313                           fsr2h	equ	0xFDA
 16314                           fsr2l	equ	0xFD9
 16315                           status	equ	0xFD8
 16316                           
 16317 ;; *************** function ___lwdiv *****************
 16318 ;; Defined at:
 16319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 16320 ;; Parameters:    Size  Location     Type
 16321 ;;  dividend        2    0[BANK0 ] unsigned int 
 16322 ;;  divisor         2    2[BANK0 ] unsigned int 
 16323 ;; Auto vars:     Size  Location     Type
 16324 ;;  quotient        2    5[BANK0 ] unsigned int 
 16325 ;;  counter         1    4[BANK0 ] unsigned char 
 16326 ;; Return value:  Size  Location     Type
 16327 ;;                  2    0[BANK0 ] unsigned int 
 16328 ;; Registers used:
 16329 ;;		wreg, status,2, status,0
 16330 ;; Tracked objects:
 16331 ;;		On entry : F/0
 16332 ;;		On exit  : F/0
 16333 ;;		Unchanged: 0/0
 16334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16335 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16336 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16338 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16339 ;;Total ram usage:        7 bytes
 16340 ;; Hardware stack levels used:    1
 16341 ;; Hardware stack levels required when called:    5
 16342 ;; This function calls:
 16343 ;;		Nothing
 16344 ;; This function is called by:
 16345 ;;		_sprintf
 16346 ;; This function uses a non-reentrant model
 16347 ;;
 16348                           
 16349                           	psect	text71
 16350  002E9E                     __ptext71:
 16351                           	opt stack 0
 16352  002E9E                     ___lwdiv:
 16353                           	opt stack 22
 16354                           
 16355                           ; BSR set to: 0
 16356                           
 16357                           ; BSR set to: 0
 16358                           ;incstack = 0
 16359  002E9E  6B65               	clrf	___lwdiv@quotient& (0+255),b
 16360  002EA0  6B66               	clrf	(___lwdiv@quotient+1)& (0+255),b
 16361                           
 16362                           ; BSR set to: 0
 16363  002EA2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16364  002EA4  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 16365  002EA6  E01B               	bz	l1893
 16366                           
 16367                           ; BSR set to: 0
 16368  002EA8  0E01               	movlw	1
 16369  002EAA  6F64               	movwf	___lwdiv@counter& (0+255),b
 16370  002EAC  D004               	goto	l10352
 16371  002EAE                     l10350:
 16372                           
 16373                           ; BSR set to: 0
 16374  002EAE  90D8               	bcf	status,0,c
 16375  002EB0  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 16376  002EB2  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 16377  002EB4  2B64               	incf	___lwdiv@counter& (0+255),f,b
 16378  002EB6                     l10352:
 16379                           
 16380                           ; BSR set to: 0
 16381  002EB6  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 16382  002EB8  D7FA               	goto	l10350
 16383  002EBA                     l10354:
 16384                           
 16385                           ; BSR set to: 0
 16386  002EBA  90D8               	bcf	status,0,c
 16387  002EBC  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 16388  002EBE  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 16389                           
 16390                           ; BSR set to: 0
 16391  002EC0  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16392  002EC2  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 16393  002EC4  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16394  002EC6  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 16395  002EC8  E305               	bnc	l10362
 16396                           
 16397                           ; BSR set to: 0
 16398  002ECA  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16399  002ECC  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 16400  002ECE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16401  002ED0  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 16402                           
 16403                           ; BSR set to: 0
 16404  002ED2  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 16405  002ED4                     l10362:
 16406                           
 16407                           ; BSR set to: 0
 16408  002ED4  90D8               	bcf	status,0,c
 16409  002ED6  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 16410  002ED8  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 16411                           
 16412                           ; BSR set to: 0
 16413  002EDA  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 16414  002EDC  D7EE               	goto	l10354
 16415  002EDE                     l1893:
 16416                           
 16417                           ; BSR set to: 0
 16418  002EDE  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 16419  002EE2  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16420                           
 16421                           ; BSR set to: 0
 16422  002EE6  0012               	return		;funcret
 16423  002EE8                     __end_of___lwdiv:
 16424                           	opt stack 0
 16425                           tblptru	equ	0xFF8
 16426                           tblptrh	equ	0xFF7
 16427                           tblptrl	equ	0xFF6
 16428                           tablat	equ	0xFF5
 16429                           prodh	equ	0xFF4
 16430                           prodl	equ	0xFF3
 16431                           intcon	equ	0xFF2
 16432                           intcon2	equ	0xFF1
 16433                           intcon3	equ	0xFF0
 16434                           postinc0	equ	0xFEE
 16435                           wreg	equ	0xFE8
 16436                           indf1	equ	0xFE7
 16437                           postinc1	equ	0xFE6
 16438                           postdec1	equ	0xFE5
 16439                           fsr1h	equ	0xFE2
 16440                           fsr1l	equ	0xFE1
 16441                           indf2	equ	0xFDF
 16442                           postinc2	equ	0xFDE
 16443                           postdec2	equ	0xFDD
 16444                           fsr2h	equ	0xFDA
 16445                           fsr2l	equ	0xFD9
 16446                           status	equ	0xFD8
 16447                           
 16448 ;; *************** function _LCD_Update *****************
 16449 ;; Defined at:
 16450 ;;		line 239 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/lcd.c"
 16451 ;; Parameters:    Size  Location     Type
 16452 ;;		None
 16453 ;; Auto vars:     Size  Location     Type
 16454 ;;		None
 16455 ;; Return value:  Size  Location     Type
 16456 ;;		None               void
 16457 ;; Registers used:
 16458 ;;		wreg, status,2, cstack
 16459 ;; Tracked objects:
 16460 ;;		On entry : F/0
 16461 ;;		On exit  : 0/0
 16462 ;;		Unchanged: 0/0
 16463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16468 ;;Total ram usage:        0 bytes
 16469 ;; Hardware stack levels used:    1
 16470 ;; Hardware stack levels required when called:    6
 16471 ;; This function calls:
 16472 ;;		_I2CWrite
 16473 ;; This function is called by:
 16474 ;;		_LCDTRXCount
 16475 ;;		_LCDDisplay
 16476 ;;		_run_star_demo
 16477 ;; This function uses a non-reentrant model
 16478 ;;
 16479                           
 16480                           	psect	text72
 16481  003446                     __ptext72:
 16482                           	opt stack 0
 16483  003446                     _LCD_Update:
 16484                           	opt stack 22
 16485                           
 16486                           ; BSR set to: 0
 16487                           ;lcd.c: 242: LCDCommand[0] = 0x3E<<1;
 16488                           
 16489                           ; BSR set to: 0
 16490                           ;incstack = 0
 16491  003446  0E7C               	movlw	124
 16492  003448  6E42               	movwf	_LCDCommand,c
 16493                           
 16494                           ;lcd.c: 243: LCDCommand[1] = 0x32;
 16495  00344A  0E32               	movlw	50
 16496  00344C  6E43               	movwf	_LCDCommand+1,c
 16497                           
 16498                           ; BSR set to: 0
 16499                           ;lcd.c: 244: LCDCommand[2] = 0x00;
 16500  00344E  6A44               	clrf	_LCDCommand+2,c
 16501                           
 16502                           ;lcd.c: 245: LCDCommand[3] = 32;
 16503  003450  0E20               	movlw	32
 16504  003452  6E45               	movwf	_LCDCommand+3,c
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;lcd.c: 247: I2CWrite(4, 32);
 16508  003454  6F60               	movwf	I2CWrite@BufferLen& (0+255),b
 16509  003456  0E04               	movlw	4
 16510  003458  EF2E  F01A         	goto	_I2CWrite
 16511  00345C                     __end_of_LCD_Update:
 16512                           	opt stack 0
 16513                           tblptru	equ	0xFF8
 16514                           tblptrh	equ	0xFF7
 16515                           tblptrl	equ	0xFF6
 16516                           tablat	equ	0xFF5
 16517                           prodh	equ	0xFF4
 16518                           prodl	equ	0xFF3
 16519                           intcon	equ	0xFF2
 16520                           intcon2	equ	0xFF1
 16521                           intcon3	equ	0xFF0
 16522                           postinc0	equ	0xFEE
 16523                           wreg	equ	0xFE8
 16524                           indf1	equ	0xFE7
 16525                           postinc1	equ	0xFE6
 16526                           postdec1	equ	0xFE5
 16527                           fsr1h	equ	0xFE2
 16528                           fsr1l	equ	0xFE1
 16529                           indf2	equ	0xFDF
 16530                           postinc2	equ	0xFDE
 16531                           postdec2	equ	0xFDD
 16532                           fsr2h	equ	0xFDA
 16533                           fsr2l	equ	0xFD9
 16534                           status	equ	0xFD8
 16535                           
 16536 ;; *************** function _I2CWrite *****************
 16537 ;; Defined at:
 16538 ;;		line 124 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/lcd.c"
 16539 ;; Parameters:    Size  Location     Type
 16540 ;;  Commandlen      1    wreg     unsigned char 
 16541 ;;  BufferLen       1    0[BANK0 ] unsigned char 
 16542 ;; Auto vars:     Size  Location     Type
 16543 ;;  Commandlen      1    1[BANK0 ] unsigned char 
 16544 ;; Return value:  Size  Location     Type
 16545 ;;		None               void
 16546 ;; Registers used:
 16547 ;;		wreg
 16548 ;; Tracked objects:
 16549 ;;		On entry : F/0
 16550 ;;		On exit  : 0/0
 16551 ;;		Unchanged: 0/0
 16552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16553 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16556 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16557 ;;Total ram usage:        2 bytes
 16558 ;; Hardware stack levels used:    1
 16559 ;; Hardware stack levels required when called:    5
 16560 ;; This function calls:
 16561 ;;		Nothing
 16562 ;; This function is called by:
 16563 ;;		_LCD_Initialize
 16564 ;;		_LCD_Update
 16565 ;; This function uses a non-reentrant model
 16566 ;;
 16567                           
 16568                           	psect	text73
 16569  00345C                     __ptext73:
 16570                           	opt stack 0
 16571  00345C                     _I2CWrite:
 16572                           	opt stack 22
 16573                           
 16574                           ;incstack = 0
 16575                           ;I2CWrite@Commandlen stored from wreg
 16576  00345C  6F61               	movwf	I2CWrite@Commandlen& (0+255),b
 16577  00345E                     l839:
 16578  00345E  B471               	btfsc	3953,2,c	;volatile
 16579  003460  D7FE               	goto	l839
 16580                           
 16581                           ;lcd.c: 127: CommandPtr = 0;
 16582  003462  6A55               	clrf	_CommandPtr,c
 16583                           
 16584                           ;lcd.c: 128: TextPtr = 0;
 16585  003464  6A59               	clrf	_TextPtr,c
 16586                           
 16587                           ;lcd.c: 129: CommandLen = Commandlen;
 16588  003466  C061  F054         	movff	I2CWrite@Commandlen,_CommandLen
 16589                           
 16590                           ;lcd.c: 130: TextLen = BufferLen;
 16591  00346A  C060  F058         	movff	I2CWrite@BufferLen,_TextLen
 16592                           
 16593                           ;lcd.c: 131: SSP2CON2bits.SEN = 1;
 16594  00346E  8071               	bsf	3953,0,c	;volatile
 16595  003470  0012               	return		;funcret
 16596  003472                     __end_of_I2CWrite:
 16597                           	opt stack 0
 16598                           tblptru	equ	0xFF8
 16599                           tblptrh	equ	0xFF7
 16600                           tblptrl	equ	0xFF6
 16601                           tablat	equ	0xFF5
 16602                           prodh	equ	0xFF4
 16603                           prodl	equ	0xFF3
 16604                           intcon	equ	0xFF2
 16605                           intcon2	equ	0xFF1
 16606                           intcon3	equ	0xFF0
 16607                           postinc0	equ	0xFEE
 16608                           wreg	equ	0xFE8
 16609                           indf1	equ	0xFE7
 16610                           postinc1	equ	0xFE6
 16611                           postdec1	equ	0xFE5
 16612                           fsr1h	equ	0xFE2
 16613                           fsr1l	equ	0xFE1
 16614                           indf2	equ	0xFDF
 16615                           postinc2	equ	0xFDE
 16616                           postdec2	equ	0xFDD
 16617                           fsr2h	equ	0xFDA
 16618                           fsr2l	equ	0xFD9
 16619                           status	equ	0xFD8
 16620                           
 16621 ;; *************** function _LCD_Erase *****************
 16622 ;; Defined at:
 16623 ;;		line 215 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/lcd.c"
 16624 ;; Parameters:    Size  Location     Type
 16625 ;;		None
 16626 ;; Auto vars:     Size  Location     Type
 16627 ;;  i               1    0[BANK0 ] unsigned char 
 16628 ;; Return value:  Size  Location     Type
 16629 ;;		None               void
 16630 ;; Registers used:
 16631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16632 ;; Tracked objects:
 16633 ;;		On entry : 0/0
 16634 ;;		On exit  : F/0
 16635 ;;		Unchanged: 0/0
 16636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16638 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16640 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16641 ;;Total ram usage:        1 bytes
 16642 ;; Hardware stack levels used:    1
 16643 ;; Hardware stack levels required when called:    5
 16644 ;; This function calls:
 16645 ;;		Nothing
 16646 ;; This function is called by:
 16647 ;;		_LCDTRXCount
 16648 ;;		_LCDDisplay
 16649 ;;		_run_star_demo
 16650 ;; This function uses a non-reentrant model
 16651 ;;
 16652                           
 16653                           	psect	text74
 16654  00340E                     __ptext74:
 16655                           	opt stack 0
 16656  00340E                     _LCD_Erase:
 16657                           	opt stack 23
 16658                           
 16659                           ;lcd.c: 217: uint8_t i;
 16660                           ;lcd.c: 219: for(i = 0; i < 32; i++)
 16661                           
 16662                           ;incstack = 0
 16663  00340E  0100               	movlb	0	; () banked
 16664  003410  6B60               	clrf	LCD_Erase@i& (0+255),b
 16665  003412                     l10424:
 16666                           
 16667                           ; BSR set to: 0
 16668                           ;lcd.c: 220: {
 16669                           ;lcd.c: 221: LCDText[i] = ' ';
 16670  003412  0E88               	movlw	low _LCDText
 16671  003414  2560               	addwf	LCD_Erase@i& (0+255),w,b
 16672  003416  6ED9               	movwf	fsr2l,c
 16673  003418  6ADA               	clrf	fsr2h,c
 16674  00341A  0E01               	movlw	high _LCDText
 16675  00341C  22DA               	addwfc	fsr2h,f,c
 16676  00341E  0E20               	movlw	32
 16677  003420  6EDF               	movwf	indf2,c
 16678                           
 16679                           ; BSR set to: 0
 16680  003422  2B60               	incf	LCD_Erase@i& (0+255),f,b
 16681                           
 16682                           ; BSR set to: 0
 16683  003424  0E1F               	movlw	31
 16684  003426  6560               	cpfsgt	LCD_Erase@i& (0+255),b
 16685  003428  D7F4               	goto	l10424
 16686  00342A  0C1F               	retlw	31
 16687  00342C                     __end_of_LCD_Erase:
 16688                           	opt stack 0
 16689                           tblptru	equ	0xFF8
 16690                           tblptrh	equ	0xFF7
 16691                           tblptrl	equ	0xFF6
 16692                           tablat	equ	0xFF5
 16693                           prodh	equ	0xFF4
 16694                           prodl	equ	0xFF3
 16695                           intcon	equ	0xFF2
 16696                           intcon2	equ	0xFF1
 16697                           intcon3	equ	0xFF0
 16698                           postinc0	equ	0xFEE
 16699                           wreg	equ	0xFE8
 16700                           indf1	equ	0xFE7
 16701                           postinc1	equ	0xFE6
 16702                           postdec1	equ	0xFE5
 16703                           fsr1h	equ	0xFE2
 16704                           fsr1l	equ	0xFE1
 16705                           indf2	equ	0xFDF
 16706                           postinc2	equ	0xFDE
 16707                           postdec2	equ	0xFDD
 16708                           fsr2h	equ	0xFDA
 16709                           fsr2l	equ	0xFD9
 16710                           status	equ	0xFD8
 16711                           
 16712 ;; *************** function _DELAY_ms *****************
 16713 ;; Defined at:
 16714 ;;		line 108 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/delay.c"
 16715 ;; Parameters:    Size  Location     Type
 16716 ;;  ms              2    0[BANK0 ] unsigned int 
 16717 ;; Auto vars:     Size  Location     Type
 16718 ;;  cyclesRequir    4   10[BANK0 ] long 
 16719 ;; Return value:  Size  Location     Type
 16720 ;;		None               void
 16721 ;; Registers used:
 16722 ;;		wreg, status,2, status,0, prodl, prodh
 16723 ;; Tracked objects:
 16724 ;;		On entry : F/0
 16725 ;;		On exit  : F/0
 16726 ;;		Unchanged: 0/0
 16727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16728 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16729 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16730 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16731 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16732 ;;Total ram usage:       14 bytes
 16733 ;; Hardware stack levels used:    1
 16734 ;; Hardware stack levels required when called:    5
 16735 ;; This function calls:
 16736 ;;		Nothing
 16737 ;; This function is called by:
 16738 ;;		_MiMAC_Init
 16739 ;;		_MiMAC_PowerState
 16740 ;;		_LCD_Initialize
 16741 ;;		_LCDDisplay
 16742 ;;		_DemoOutput_Greeting
 16743 ;;		_DemoOutput_Channel
 16744 ;;		_run_star_demo
 16745 ;; This function uses a non-reentrant model
 16746 ;;
 16747                           
 16748                           	psect	text75
 16749  001FDE                     __ptext75:
 16750                           	opt stack 0
 16751  001FDE                     _DELAY_ms:
 16752                           	opt stack 23
 16753                           
 16754                           ; BSR set to: 0
 16755                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000)/4)/1000) * ms;
 16756                           
 16757                           ; BSR set to: 0
 16758                           
 16759                           ; BSR set to: 0
 16760                           ;incstack = 0
 16761  001FDE  5160               	movf	DELAY_ms@ms& (0+255),w,b
 16762  001FE0  6F62               	movwf	??_DELAY_ms& (0+255),b
 16763  001FE2  5161               	movf	(DELAY_ms@ms+1)& (0+255),w,b
 16764  001FE4  6F63               	movwf	(??_DELAY_ms+1)& (0+255),b
 16765  001FE6  6B64               	clrf	(??_DELAY_ms+2)& (0+255),b
 16766  001FE8  6B65               	clrf	(??_DELAY_ms+3)& (0+255),b
 16767  001FEA  0ED0               	movlw	208
 16768  001FEC  0362               	mulwf	??_DELAY_ms& (0+255),b
 16769  001FEE  CFF3 F066          	movff	prodl,??_DELAY_ms+4
 16770  001FF2  CFF4 F067          	movff	prodh,??_DELAY_ms+5
 16771  001FF6  6B68               	clrf	(??_DELAY_ms+6)& (0+255),b
 16772  001FF8  6B69               	clrf	(??_DELAY_ms+7)& (0+255),b
 16773  001FFA  0363               	mulwf	(??_DELAY_ms+1)& (0+255),b
 16774  001FFC  50F3               	movf	prodl,w,c
 16775  001FFE  2767               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 16776  002000  50F4               	movf	prodh,w,c
 16777  002002  2368               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 16778  002004  0E00               	movlw	0
 16779  002006  2369               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 16780  002008  0E07               	movlw	7
 16781  00200A  0362               	mulwf	??_DELAY_ms& (0+255),b
 16782  00200C  50F3               	movf	prodl,w,c
 16783  00200E  2767               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 16784  002010  50F4               	movf	prodh,w,c
 16785  002012  2368               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 16786  002014  0E00               	movlw	0
 16787  002016  2369               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 16788  002018  0ED0               	movlw	208
 16789  00201A  0364               	mulwf	(??_DELAY_ms+2)& (0+255),b
 16790  00201C  50F3               	movf	prodl,w,c
 16791  00201E  2768               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 16792  002020  50F4               	movf	prodh,w,c
 16793  002022  2369               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 16794  002024  0E07               	movlw	7
 16795  002026  0363               	mulwf	(??_DELAY_ms+1)& (0+255),b
 16796  002028  50F3               	movf	prodl,w,c
 16797  00202A  2768               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 16798  00202C  50F4               	movf	prodh,w,c
 16799  00202E  2369               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 16800  002030  0E00               	movlw	0
 16801  002032  0362               	mulwf	??_DELAY_ms& (0+255),b
 16802  002034  50F3               	movf	prodl,w,c
 16803  002036  2768               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 16804  002038  50F4               	movf	prodh,w,c
 16805  00203A  2369               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 16806  00203C  0ED0               	movlw	208
 16807  00203E  0365               	mulwf	(??_DELAY_ms+3)& (0+255),b
 16808  002040  50F3               	movf	prodl,w,c
 16809  002042  2769               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 16810  002044  0E07               	movlw	7
 16811  002046  0364               	mulwf	(??_DELAY_ms+2)& (0+255),b
 16812  002048  50F3               	movf	prodl,w,c
 16813  00204A  2769               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 16814  00204C  0E00               	movlw	0
 16815  00204E  0363               	mulwf	(??_DELAY_ms+1)& (0+255),b
 16816  002050  50F3               	movf	prodl,w,c
 16817  002052  2769               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 16818  002054  0E00               	movlw	0
 16819  002056  0362               	mulwf	??_DELAY_ms& (0+255),b
 16820  002058  50F3               	movf	prodl,w,c
 16821  00205A  2769               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 16822  00205C  C066  F06A         	movff	??_DELAY_ms+4,DELAY_ms@cyclesRequiredForEntireDelay
 16823  002060  C067  F06B         	movff	??_DELAY_ms+5,DELAY_ms@cyclesRequiredForEntireDelay+1
 16824  002064  C068  F06C         	movff	??_DELAY_ms+6,DELAY_ms@cyclesRequiredForEntireDelay+2
 16825  002068  C069  F06D         	movff	??_DELAY_ms+7,DELAY_ms@cyclesRequiredForEntireDelay+3
 16826                           
 16827                           ; BSR set to: 0
 16828                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 16829  00206C  0E56               	movlw	86
 16830  00206E  276A               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 16831  002070  0EFF               	movlw	255
 16832  002072  236B               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 16833  002074  236C               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 16834  002076  236D               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 16838  002078  BF6D               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 16839  00207A  0CFF               	retlw	255
 16840  00207C  516D               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 16841  00207E  116C               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 16842  002080  116B               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 16843  002082  E10C               	bnz	l759
 16844  002084  0EC4               	movlw	196
 16845  002086  5D6A               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 16846  002088  E209               	bc	l759
 16847  00208A  0012               	return	
 16848  00208C                     l760:
 16849                           
 16850                           ; BSR set to: 0
 16851                           ;delay.c: 128: {
 16852                           ;delay.c: 129: __nop();
 16853  00208C  F000               	nop	
 16854                           
 16855                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 16856  00208E  0ED9               	movlw	217
 16857  002090  0100               	movlb	0	; () banked
 16858  002092  276A               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 16859  002094  0EFF               	movlw	255
 16860  002096  236B               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 16861  002098  236C               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 16862  00209A  236D               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 16863  00209C                     l759:
 16864                           
 16865                           ; BSR set to: 0
 16866  00209C  BF6D               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 16867  00209E  0012               	return	
 16868  0020A0  516D               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 16869  0020A2  116C               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 16870  0020A4  116B               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 16871  0020A6  E1F2               	bnz	l760
 16872  0020A8  056A               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 16873  0020AA  E2F0               	bc	l760
 16874                           
 16875                           ; BSR set to: 0
 16876  0020AC  0012               	return		;funcret
 16877  0020AE                     __end_of_DELAY_ms:
 16878                           	opt stack 0
 16879                           tblptru	equ	0xFF8
 16880                           tblptrh	equ	0xFF7
 16881                           tblptrl	equ	0xFF6
 16882                           tablat	equ	0xFF5
 16883                           prodh	equ	0xFF4
 16884                           prodl	equ	0xFF3
 16885                           intcon	equ	0xFF2
 16886                           intcon2	equ	0xFF1
 16887                           intcon3	equ	0xFF0
 16888                           postinc0	equ	0xFEE
 16889                           wreg	equ	0xFE8
 16890                           indf1	equ	0xFE7
 16891                           postinc1	equ	0xFE6
 16892                           postdec1	equ	0xFE5
 16893                           fsr1h	equ	0xFE2
 16894                           fsr1l	equ	0xFE1
 16895                           indf2	equ	0xFDF
 16896                           postinc2	equ	0xFDE
 16897                           postdec2	equ	0xFDD
 16898                           fsr2h	equ	0xFDA
 16899                           fsr2l	equ	0xFD9
 16900                           status	equ	0xFD8
 16901                           
 16902 ;; *************** function _CONSOLE_PutString *****************
 16903 ;; Defined at:
 16904 ;;		line 139 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/console.c"
 16905 ;; Parameters:    Size  Location     Type
 16906 ;;  str             2    1[BANK0 ] PTR unsigned char 
 16907 ;;		 -> STR_45(19), STR_44(46), STR_43(24), STR_42(3), 
 16908 ;;		 -> STR_41(7), STR_40(26), STR_39(28), STR_38(9), 
 16909 ;;		 -> STR_36(3), STR_35(29), STR_33(3), STR_32(30), 
 16910 ;;		 -> STR_30(5), STR_29(60), STR_28(66), STR_27(66), 
 16911 ;;		 -> STR_26(62), STR_25(64), STR_24(23), STR_23(31), 
 16912 ;;		 -> STR_22(27), STR_21(27), STR_20(24), STR_19(27), 
 16913 ;;		 -> STR_18(27), STR_17(23), STR_13(3), STR_12(5), 
 16914 ;;		 -> STR_11(3), STR_10(14), STR_9(50), STR_8(3), 
 16915 ;;		 -> STR_7(5), STR_6(3), STR_5(14), STR_4(48), 
 16916 ;;		 -> STR_3(12), STR_2(19), STR_1(23), 
 16917 ;; Auto vars:     Size  Location     Type
 16918 ;;  c               1    3[BANK0 ] unsigned char 
 16919 ;; Return value:  Size  Location     Type
 16920 ;;		None               void
 16921 ;; Registers used:
 16922 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16923 ;; Tracked objects:
 16924 ;;		On entry : F/0
 16925 ;;		On exit  : F/0
 16926 ;;		Unchanged: 0/0
 16927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16928 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16929 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16931 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16932 ;;Total ram usage:        3 bytes
 16933 ;; Hardware stack levels used:    1
 16934 ;; Hardware stack levels required when called:    6
 16935 ;; This function calls:
 16936 ;;		_EUSART2_Write
 16937 ;; This function is called by:
 16938 ;;		_P2PTasks
 16939 ;;		_DumpConnection
 16940 ;;		_DemoOutput_Greeting
 16941 ;;		_DemoOutput_Channel
 16942 ;;		_DemoOutput_ChannelError
 16943 ;;		_DemoOutput_UnicastFail
 16944 ;; This function uses a non-reentrant model
 16945 ;;
 16946                           
 16947                           	psect	text76
 16948  003330                     __ptext76:
 16949                           	opt stack 0
 16950  003330                     _CONSOLE_PutString:
 16951                           	opt stack 17
 16952                           
 16953                           ; BSR set to: 0
 16954                           ;console.c: 141: uint8_t c;
 16955                           ;console.c: 143: while( c = *str++ )
 16956                           
 16957                           ; BSR set to: 0
 16958                           ;incstack = 0
 16959  003330  D003               	goto	l10772
 16960  003332                     l10770:
 16961                           
 16962                           ; BSR set to: 0
 16963                           ;console.c: 144: EUSART2_Write(c);
 16964  003332  5163               	movf	CONSOLE_PutString@c& (0+255),w,b
 16965  003334  EC7B  F01A         	call	_EUSART2_Write
 16966  003338                     l10772:
 16967  003338  C061  FFF6         	movff	CONSOLE_PutString@str,tblptrl
 16968  00333C  C062  FFF7         	movff	CONSOLE_PutString@str+1,tblptrh
 16969  003340  0100               	movlb	0	; () banked
 16970  003342  4B61               	infsnz	CONSOLE_PutString@str& (0+255),f,b
 16971  003344  2B62               	incf	(CONSOLE_PutString@str+1)& (0+255),f,b
 16972  003346                     	if	0	;tblptru may be non-zero
 16973  003346                     	endif
 16974  003346                     	if	0	;tblptru may be non-zero
 16975  003346                     	endif
 16976  003346  0008               	tblrd		*
 16977  003348  CFF5 F063          	movff	tablat,CONSOLE_PutString@c
 16978  00334C  5163               	movf	CONSOLE_PutString@c& (0+255),w,b
 16979  00334E  E1F1               	bnz	l10770
 16980                           
 16981                           ; BSR set to: 0
 16982  003350  0012               	return		;funcret
 16983  003352                     __end_of_CONSOLE_PutString:
 16984                           	opt stack 0
 16985                           tblptru	equ	0xFF8
 16986                           tblptrh	equ	0xFF7
 16987                           tblptrl	equ	0xFF6
 16988                           tablat	equ	0xFF5
 16989                           prodh	equ	0xFF4
 16990                           prodl	equ	0xFF3
 16991                           intcon	equ	0xFF2
 16992                           intcon2	equ	0xFF1
 16993                           intcon3	equ	0xFF0
 16994                           postinc0	equ	0xFEE
 16995                           wreg	equ	0xFE8
 16996                           indf1	equ	0xFE7
 16997                           postinc1	equ	0xFE6
 16998                           postdec1	equ	0xFE5
 16999                           fsr1h	equ	0xFE2
 17000                           fsr1l	equ	0xFE1
 17001                           indf2	equ	0xFDF
 17002                           postinc2	equ	0xFDE
 17003                           postdec2	equ	0xFDD
 17004                           fsr2h	equ	0xFDA
 17005                           fsr2l	equ	0xFD9
 17006                           status	equ	0xFD8
 17007                           
 17008 ;; *************** function _EUSART2_Write *****************
 17009 ;; Defined at:
 17010 ;;		line 188 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/console.c"
 17011 ;; Parameters:    Size  Location     Type
 17012 ;;  txData          1    wreg     unsigned char 
 17013 ;; Auto vars:     Size  Location     Type
 17014 ;;  txData          1    0[BANK0 ] unsigned char 
 17015 ;; Return value:  Size  Location     Type
 17016 ;;		None               void
 17017 ;; Registers used:
 17018 ;;		wreg
 17019 ;; Tracked objects:
 17020 ;;		On entry : F/0
 17021 ;;		On exit  : 0/0
 17022 ;;		Unchanged: 0/0
 17023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17027 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17028 ;;Total ram usage:        1 bytes
 17029 ;; Hardware stack levels used:    1
 17030 ;; Hardware stack levels required when called:    5
 17031 ;; This function calls:
 17032 ;;		Nothing
 17033 ;; This function is called by:
 17034 ;;		_CONSOLE_PutString
 17035 ;; This function uses a non-reentrant model
 17036 ;;
 17037                           
 17038                           	psect	text77
 17039  0034F6                     __ptext77:
 17040                           	opt stack 0
 17041  0034F6                     _EUSART2_Write:
 17042                           	opt stack 17
 17043                           
 17044                           ; BSR set to: 0
 17045                           ;incstack = 0
 17046                           ;EUSART2_Write@txData stored from wreg
 17047  0034F6  6F60               	movwf	EUSART2_Write@txData& (0+255),b
 17048  0034F8                     l720:
 17049  0034F8  A8A4               	btfss	4004,4,c	;volatile
 17050  0034FA  D7FE               	goto	l720
 17051                           
 17052                           ;console.c: 190: }
 17053                           ;console.c: 192: TXREG2 = txData;
 17054  0034FC  C060  FFA9         	movff	EUSART2_Write@txData,4009	;volatile
 17055  003500  0012               	return		;funcret
 17056  003502                     __end_of_EUSART2_Write:
 17057                           	opt stack 0
 17058                           tblptru	equ	0xFF8
 17059                           tblptrh	equ	0xFF7
 17060                           tblptrl	equ	0xFF6
 17061                           tablat	equ	0xFF5
 17062                           prodh	equ	0xFF4
 17063                           prodl	equ	0xFF3
 17064                           intcon	equ	0xFF2
 17065                           intcon2	equ	0xFF1
 17066                           intcon3	equ	0xFF0
 17067                           postinc0	equ	0xFEE
 17068                           wreg	equ	0xFE8
 17069                           indf1	equ	0xFE7
 17070                           postinc1	equ	0xFE6
 17071                           postdec1	equ	0xFE5
 17072                           fsr1h	equ	0xFE2
 17073                           fsr1l	equ	0xFE1
 17074                           indf2	equ	0xFDF
 17075                           postinc2	equ	0xFDE
 17076                           postdec2	equ	0xFDD
 17077                           fsr2h	equ	0xFDA
 17078                           fsr2l	equ	0xFD9
 17079                           status	equ	0xFD8
 17080                           
 17081 ;; *************** function _high_isr *****************
 17082 ;; Defined at:
 17083 ;;		line 1240 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17084 ;; Parameters:    Size  Location     Type
 17085 ;;		None
 17086 ;; Auto vars:     Size  Location     Type
 17087 ;;  ackInfoIndex    1   49[COMRAM] unsigned char 
 17088 ;;  i               1   52[COMRAM] unsigned char 
 17089 ;;  fifo_stat       1   42[COMRAM] unsigned char 
 17090 ;;  ackPacket       4   43[COMRAM] unsigned char [4]
 17091 ;;  counter         2   40[COMRAM] unsigned int 
 17092 ;;  BankIndex       1   51[COMRAM] unsigned char 
 17093 ;;  PacketLen       1   50[COMRAM] unsigned char 
 17094 ;;  RxPacketPtr     1   48[COMRAM] unsigned char 
 17095 ;;  bAck            1   47[COMRAM] unsigned char 
 17096 ;; Return value:  Size  Location     Type
 17097 ;;		None               void
 17098 ;; Registers used:
 17099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17100 ;; Tracked objects:
 17101 ;;		On entry : 0/0
 17102 ;;		On exit  : 0/0
 17103 ;;		Unchanged: 0/0
 17104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17106 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17107 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17108 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17109 ;;Total ram usage:       23 bytes
 17110 ;; Hardware stack levels used:    1
 17111 ;; Hardware stack levels required when called:    4
 17112 ;; This function calls:
 17113 ;;		_UserInterruptHandler
 17114 ;;		i2_MiWi_TickGet
 17115 ;;		i2_RegisterRead
 17116 ;;		i2_SPI1_Exchange8bit
 17117 ;;		i2_TxPacket
 17118 ;; This function is called by:
 17119 ;;		Interrupt level 2
 17120 ;; This function uses a non-reentrant model
 17121 ;;
 17122                           
 17123                           	psect	intcode
 17124  000008                     __pintcode:
 17125                           	opt stack 0
 17126  000008                     _high_isr:
 17127                           	opt stack 12
 17128                           
 17129                           ;incstack = 0
 17130  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17131  00000A  CFE1 F023          	movff	fsr1l,??_high_isr+4
 17132  00000E  CFE2 F024          	movff	fsr1h,??_high_isr+5
 17133  000012  CFD9 F025          	movff	fsr2l,??_high_isr+6
 17134  000016  CFDA F026          	movff	fsr2h,??_high_isr+7
 17135  00001A  CFF3 F027          	movff	prodl,??_high_isr+8
 17136  00001E  CFF4 F028          	movff	prodh,??_high_isr+9
 17137                           
 17138                           ;drv_mrf_miwi_89xa.c: 1255: if( INTCON3bits.INT3IF && INTCON3bits.INT3IE )
 17139  000022  B4F0               	btfsc	intcon3,2,c	;volatile
 17140  000024  AAF0               	btfss	intcon3,5,c	;volatile
 17141  000026  D1AD               	goto	i2l7676
 17142                           
 17143                           ;drv_mrf_miwi_89xa.c: 1256: {
 17144                           ;drv_mrf_miwi_89xa.c: 1257: if(RF_Mode == 0x60)
 17145  000028  0E60               	movlw	96
 17146  00002A  1856               	xorwf	_RF_Mode,w,c
 17147  00002C  E001 D1A4          	bnz	i2l7670
 17148                           
 17149                           ;drv_mrf_miwi_89xa.c: 1258: {
 17150                           ;drv_mrf_miwi_89xa.c: 1259: uint8_t RxPacketPtr;
 17151                           ;drv_mrf_miwi_89xa.c: 1260: uint8_t PacketLen;
 17152                           ;drv_mrf_miwi_89xa.c: 1261: uint8_t BankIndex;
 17153                           ;drv_mrf_miwi_89xa.c: 1262: uint16_t counter;
 17154                           ;drv_mrf_miwi_89xa.c: 1263: bool bAck;
 17155                           ;drv_mrf_miwi_89xa.c: 1264: uint8_t ackPacket[4];
 17156                           ;drv_mrf_miwi_89xa.c: 1267: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 17157  000030  0E28               	movlw	40
 17158  000032  ECD1  F018         	call	i2_RegisterRead
 17159  000036  6E1F               	movwf	??_high_isr& (0+255),c
 17160  000038  90D8               	bcf	status,0,c
 17161  00003A  301F               	rrcf	??_high_isr,w,c
 17162  00003C  6E57               	movwf	_RSSIVal,c
 17163                           
 17164                           ;drv_mrf_miwi_89xa.c: 1270: RSSILock = RSSIVal;
 17165  00003E  C057  F0DC         	movff	_RSSIVal,_RSSILock
 17166                           
 17167                           ;drv_mrf_miwi_89xa.c: 1272: LATCbits.LATC2 = 0;
 17168  000042  948B               	bcf	3979,2,c	;volatile
 17169                           
 17170                           ;drv_mrf_miwi_89xa.c: 1274: PacketLen = SPI1_Exchange8bit(0x00);
 17171  000044  0E00               	movlw	0
 17172  000046  EC66  F01A         	call	i2_SPI1_Exchange8bit
 17173  00004A  6E33               	movwf	high_isr@PacketLen,c
 17174                           
 17175                           ;drv_mrf_miwi_89xa.c: 1275: LATCbits.LATC2 = 1;
 17176  00004C  848B               	bsf	3979,2,c	;volatile
 17177                           
 17178                           ;drv_mrf_miwi_89xa.c: 1278: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 17179  00004E  6A34               	clrf	high_isr@BankIndex,c
 17180  000050                     i2l7520:
 17181                           
 17182                           ;drv_mrf_miwi_89xa.c: 1279: {
 17183                           ;drv_mrf_miwi_89xa.c: 1280: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 17184  000050  5034               	movf	high_isr@BankIndex,w,c
 17185  000052  0D39               	mullw	57
 17186  000054  0E50               	movlw	low _RxPacket
 17187  000056  24F3               	addwf	prodl,w,c
 17188  000058  6ED9               	movwf	fsr2l,c
 17189  00005A  0E02               	movlw	high _RxPacket
 17190  00005C  20F4               	addwfc	prodh,w,c
 17191  00005E  6EDA               	movwf	fsr2h,c
 17192  000060  0102               	movlb	2	; () banked
 17193  000062  A0DF               	btfss	indf2,0,c
 17194  000064  D004               	goto	i2l7528
 17195                           
 17196                           ; BSR set to: 2
 17197  000066  2A34               	incf	high_isr@BankIndex,f,c
 17198                           
 17199                           ; BSR set to: 2
 17200  000068  0E01               	movlw	1
 17201  00006A  6434               	cpfsgt	high_isr@BankIndex,c
 17202  00006C  D7F1               	goto	i2l7520
 17203  00006E                     i2l7528:
 17204                           
 17205                           ; BSR set to: 2
 17206                           ;drv_mrf_miwi_89xa.c: 1283: }
 17207                           ;drv_mrf_miwi_89xa.c: 1284: }
 17208                           ;drv_mrf_miwi_89xa.c: 1287: if( PacketLen == 2 )
 17209  00006E  0E02               	movlw	2
 17210  000070  1833               	xorwf	high_isr@PacketLen,w,c
 17211  000072  E103               	bnz	i2l184
 17212                           
 17213                           ; BSR set to: 2
 17214                           ;drv_mrf_miwi_89xa.c: 1288: {
 17215                           ;drv_mrf_miwi_89xa.c: 1289: bAck = 1;
 17216  000074  0E01               	movlw	1
 17217  000076  6E30               	movwf	high_isr@bAck,c
 17218                           
 17219                           ;drv_mrf_miwi_89xa.c: 1290: }
 17220  000078  D001               	goto	i2l7532
 17221  00007A                     i2l184:
 17222                           
 17223                           ; BSR set to: 2
 17224                           ;drv_mrf_miwi_89xa.c: 1291: else
 17225                           ;drv_mrf_miwi_89xa.c: 1292: {
 17226                           ;drv_mrf_miwi_89xa.c: 1293: bAck = 0;
 17227  00007A  6A30               	clrf	high_isr@bAck,c
 17228  00007C                     i2l7532:
 17229                           
 17230                           ; BSR set to: 2
 17231                           ;drv_mrf_miwi_89xa.c: 1294: }
 17232                           ;drv_mrf_miwi_89xa.c: 1297: if( PacketLen >= (35+0+8+8+4) || PacketLen == 0 || (BankInde
      +                          x >= 2 && (bAck==0)) )
 17233  00007C  0E37               	movlw	55
 17234  00007E  6033               	cpfslt	high_isr@PacketLen,c
 17235  000080  D007               	goto	i2l7540
 17236                           
 17237                           ; BSR set to: 2
 17238  000082  5033               	movf	high_isr@PacketLen,w,c
 17239  000084  E005               	bz	i2l7540
 17240                           
 17241                           ; BSR set to: 2
 17242  000086  0E01               	movlw	1
 17243  000088  6434               	cpfsgt	high_isr@BankIndex,c
 17244  00008A  D012               	goto	i2l186
 17245                           
 17246                           ; BSR set to: 2
 17247  00008C  5030               	movf	high_isr@bAck,w,c
 17248  00008E  E110               	bnz	i2l186
 17249  000090                     i2l7540:
 17250                           
 17251                           ;drv_mrf_miwi_89xa.c: 1300: {
 17252                           ;drv_mrf_miwi_89xa.c: 1301: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 17253  000090  0E1A               	movlw	26
 17254  000092  ECD1  F018         	call	i2_RegisterRead
 17255  000096  D008               	goto	L8
 17256  000098                     i2l191:
 17257                           
 17258                           ;drv_mrf_miwi_89xa.c: 1303: {
 17259                           ;drv_mrf_miwi_89xa.c: 1304: LATCbits.LATC2 = 0;
 17260  000098  948B               	bcf	3979,2,c	;volatile
 17261                           
 17262                           ;drv_mrf_miwi_89xa.c: 1306: SPI1_Exchange8bit(0x00);
 17263  00009A  0E00               	movlw	0
 17264  00009C  EC66  F01A         	call	i2_SPI1_Exchange8bit
 17265                           
 17266                           ;drv_mrf_miwi_89xa.c: 1307: LATCbits.LATC2 = 1;
 17267  0000A0  848B               	bsf	3979,2,c	;volatile
 17268                           
 17269                           ;drv_mrf_miwi_89xa.c: 1308: fifo_stat = RegisterRead(0x1A00>>8);
 17270  0000A2  0E1A               	movlw	26
 17271  0000A4  ECD1  F018         	call	i2_RegisterRead
 17272  0000A8                     L8:
 17273  0000A8  6E2B               	movwf	high_isr@fifo_stat,c
 17274  0000AA  B22B               	btfsc	high_isr@fifo_stat,1,c
 17275  0000AC  D7F5               	goto	i2l191
 17276  0000AE  D167               	goto	i2l7672
 17277  0000B0                     i2l186:
 17278                           
 17279                           ; BSR set to: 2
 17280                           ;drv_mrf_miwi_89xa.c: 1312: }
 17281                           ;drv_mrf_miwi_89xa.c: 1314: RxPacketPtr = 0;
 17282  0000B0  6A31               	clrf	high_isr@RxPacketPtr,c
 17283                           
 17284                           ;drv_mrf_miwi_89xa.c: 1315: counter = PacketLen;
 17285  0000B2  C033  F029         	movff	high_isr@PacketLen,high_isr@counter
 17286  0000B6  6A2A               	clrf	high_isr@counter+1,c
 17287                           
 17288                           ;drv_mrf_miwi_89xa.c: 1317: while(counter >= 1)
 17289  0000B8  D15B               	goto	i2l7668
 17290  0000BA                     i2l7550:
 17291                           
 17292                           ;drv_mrf_miwi_89xa.c: 1320: if(1)
 17293  0000BA  0629               	decf	high_isr@counter,f,c
 17294  0000BC  A0D8               	btfss	status,0,c
 17295  0000BE  062A               	decf	high_isr@counter+1,f,c
 17296                           
 17297                           ;drv_mrf_miwi_89xa.c: 1321: {
 17298                           ;drv_mrf_miwi_89xa.c: 1323: if( bAck )
 17299  0000C0  5030               	movf	high_isr@bAck,w,c
 17300  0000C2  E009               	bz	i2l197
 17301                           
 17302                           ;drv_mrf_miwi_89xa.c: 1324: {
 17303                           ;drv_mrf_miwi_89xa.c: 1325: LATCbits.LATC2 = 0;
 17304  0000C4  948B               	bcf	3979,2,c	;volatile
 17305                           
 17306                           ;drv_mrf_miwi_89xa.c: 1327: ackPacket[RxPacketPtr++] = SPI1_Exchange8bit(0x00);
 17307  0000C6  5031               	movf	high_isr@RxPacketPtr,w,c
 17308  0000C8  0F2C               	addlw	low high_isr@ackPacket
 17309  0000CA  6ED9               	movwf	fsr2l,c
 17310  0000CC  6ADA               	clrf	fsr2h,c
 17311  0000CE  0E00               	movlw	0
 17312  0000D0  EC66  F01A         	call	i2_SPI1_Exchange8bit
 17313  0000D4  D017               	goto	L10
 17314  0000D6                     i2l197:
 17315                           
 17316                           ;drv_mrf_miwi_89xa.c: 1331: else
 17317                           ;drv_mrf_miwi_89xa.c: 1332: {
 17318                           ;drv_mrf_miwi_89xa.c: 1333: LATCbits.LATC2 = 0;
 17319  0000D6  948B               	bcf	3979,2,c	;volatile
 17320                           
 17321                           ;drv_mrf_miwi_89xa.c: 1335: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPI1_Exchange8b
      +                          it(0x00);
 17322  0000D8  5034               	movf	high_isr@BankIndex,w,c
 17323  0000DA  0D39               	mullw	57
 17324  0000DC  0E50               	movlw	low _RxPacket
 17325  0000DE  6E1F               	movwf	??_high_isr& (0+255),c
 17326  0000E0  0E02               	movlw	high _RxPacket
 17327  0000E2  6E20               	movwf	(??_high_isr+1)& (0+255),c
 17328  0000E4  2A1F               	incf	??_high_isr,f,c
 17329  0000E6  0E00               	movlw	0
 17330  0000E8  2220               	addwfc	??_high_isr+1,f,c
 17331  0000EA  50F3               	movf	prodl,w,c
 17332  0000EC  261F               	addwf	??_high_isr,f,c
 17333  0000EE  50F4               	movf	prodh,w,c
 17334  0000F0  2220               	addwfc	??_high_isr+1,f,c
 17335  0000F2  5031               	movf	high_isr@RxPacketPtr,w,c
 17336  0000F4  241F               	addwf	??_high_isr,w,c
 17337  0000F6  6ED9               	movwf	fsr2l,c
 17338  0000F8  0E00               	movlw	0
 17339  0000FA  2020               	addwfc	??_high_isr+1,w,c
 17340  0000FC  6EDA               	movwf	fsr2h,c
 17341  0000FE  0E00               	movlw	0
 17342  000100  EC66  F01A         	call	i2_SPI1_Exchange8bit
 17343  000104                     L10:
 17344  000104  6EDF               	movwf	indf2,c
 17345  000106  2A31               	incf	high_isr@RxPacketPtr,f,c
 17346                           
 17347                           ;drv_mrf_miwi_89xa.c: 1336: LATCbits.LATC2 = 1;
 17348  000108  848B               	bsf	3979,2,c	;volatile
 17349                           
 17350                           ;drv_mrf_miwi_89xa.c: 1337: }
 17351                           ;drv_mrf_miwi_89xa.c: 1340: if( RxPacketPtr >= PacketLen )
 17352  00010A  5033               	movf	high_isr@PacketLen,w,c
 17353  00010C  5C31               	subwf	high_isr@RxPacketPtr,w,c
 17354  00010E  E201 D12F          	bnc	i2l7668
 17355                           
 17356                           ;drv_mrf_miwi_89xa.c: 1341: {
 17357                           ;drv_mrf_miwi_89xa.c: 1342: uint8_t i;
 17358                           ;drv_mrf_miwi_89xa.c: 1344: if( bAck )
 17359  000112  5030               	movf	high_isr@bAck,w,c
 17360  000114  E024               	bz	i2l200
 17361                           
 17362                           ;drv_mrf_miwi_89xa.c: 1345: {
 17363                           ;drv_mrf_miwi_89xa.c: 1347: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 17364  000116  502C               	movf	high_isr@ackPacket,w,c
 17365  000118  0B03               	andlw	3
 17366  00011A  0A02               	xorlw	2
 17367  00011C  E108               	bnz	i2l7582
 17368                           
 17369                           ;drv_mrf_miwi_89xa.c: 1348: {
 17370                           ;drv_mrf_miwi_89xa.c: 1349: if( ackPacket[1] == TxMACSeq )
 17371  00011E  505A               	movf	_TxMACSeq,w,c
 17372  000120  182D               	xorwf	high_isr@ackPacket+1,w,c
 17373  000122  E001 D12C          	bnz	i2l7672
 17374                           
 17375                           ;drv_mrf_miwi_89xa.c: 1350: {
 17376                           ;drv_mrf_miwi_89xa.c: 1351: hasAck = 1;
 17377  000126  0E01               	movlw	1
 17378  000128  0100               	movlb	0	; () banked
 17379  00012A  6FE4               	movwf	_hasAck& (0+255),b	;volatile
 17380                           
 17381                           ;drv_mrf_miwi_89xa.c: 1354: goto RETURN_HERE;
 17382  00012C  D128               	goto	i2l7672
 17383  00012E                     i2l7582:
 17384                           
 17385                           ;drv_mrf_miwi_89xa.c: 1356: else
 17386                           ;drv_mrf_miwi_89xa.c: 1358: if( BankIndex >= 2 )
 17387  00012E  0E01               	movlw	1
 17388  000130  6434               	cpfsgt	high_isr@BankIndex,c
 17389  000132  D001               	goto	i2l7586
 17390  000134  D7AD               	goto	i2l7540
 17391  000136                     i2l7586:
 17392                           
 17393                           ;drv_mrf_miwi_89xa.c: 1362: }
 17394                           ;drv_mrf_miwi_89xa.c: 1363: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 17395  000136  5034               	movf	high_isr@BankIndex,w,c
 17396  000138  0D39               	mullw	57
 17397  00013A  0E51               	movlw	low (_RxPacket+1)
 17398  00013C  24F3               	addwf	prodl,w,c
 17399  00013E  6ED9               	movwf	fsr2l,c
 17400  000140  0E02               	movlw	high (_RxPacket+1)
 17401  000142  20F4               	addwfc	prodh,w,c
 17402  000144  6EDA               	movwf	fsr2h,c
 17403  000146  C02C  FFDF         	movff	high_isr@ackPacket,indf2
 17404                           
 17405                           ;drv_mrf_miwi_89xa.c: 1364: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 17406  00014A  5034               	movf	high_isr@BankIndex,w,c
 17407  00014C  0D39               	mullw	57
 17408  00014E  0E52               	movlw	low (_RxPacket+2)
 17409  000150  24F3               	addwf	prodl,w,c
 17410  000152  6ED9               	movwf	fsr2l,c
 17411  000154  0E02               	movlw	high (_RxPacket+2)
 17412  000156  20F4               	addwfc	prodh,w,c
 17413  000158  6EDA               	movwf	fsr2h,c
 17414  00015A  C02D  FFDF         	movff	high_isr@ackPacket+1,indf2
 17415  00015E                     i2l200:
 17416                           
 17417                           ;drv_mrf_miwi_89xa.c: 1366: }
 17418                           ;drv_mrf_miwi_89xa.c: 1368: RxPacket[BankIndex].PayloadLen = PacketLen;
 17419  00015E  5034               	movf	high_isr@BankIndex,w,c
 17420  000160  0D39               	mullw	57
 17421  000162  0E88               	movlw	low (_RxPacket+56)
 17422  000164  24F3               	addwf	prodl,w,c
 17423  000166  6ED9               	movwf	fsr2l,c
 17424  000168  0E02               	movlw	high (_RxPacket+56)
 17425  00016A  20F4               	addwfc	prodh,w,c
 17426  00016C  6EDA               	movwf	fsr2h,c
 17427  00016E  C033  FFDF         	movff	high_isr@PacketLen,indf2
 17428                           
 17429                           ;drv_mrf_miwi_89xa.c: 1385: {
 17430                           ;drv_mrf_miwi_89xa.c: 1386: uint8_t ackInfoIndex = 0xFF;
 17431  000172  6832               	setf	high_isr@ackInfoIndex,c
 17432                           
 17433                           ;drv_mrf_miwi_89xa.c: 1388: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 17434  000174  5034               	movf	high_isr@BankIndex,w,c
 17435  000176  0D39               	mullw	57
 17436  000178  0E51               	movlw	low (_RxPacket+1)
 17437  00017A  24F3               	addwf	prodl,w,c
 17438  00017C  6ED9               	movwf	fsr2l,c
 17439  00017E  0E02               	movlw	high (_RxPacket+1)
 17440  000180  20F4               	addwfc	prodh,w,c
 17441  000182  6EDA               	movwf	fsr2h,c
 17442  000184  ACDF               	btfss	indf2,6,c
 17443  000186  D033               	goto	i2l7602
 17444                           
 17445                           ; BSR set to: 2
 17446                           ;drv_mrf_miwi_89xa.c: 1389: {
 17447                           ;drv_mrf_miwi_89xa.c: 1390: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 17448  000188  6A35               	clrf	high_isr@i,c
 17449  00018A  D028               	goto	i2l7600
 17450  00018C                     i2l7592:
 17451                           
 17452                           ; BSR set to: 0
 17453                           ;drv_mrf_miwi_89xa.c: 1391: {
 17454                           ;drv_mrf_miwi_89xa.c: 1392: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 17455  00018C  5035               	movf	high_isr@i,w,c
 17456  00018E  25D2               	addwf	(_MACInitParams+1)& (0+255),w,b
 17457  000190  6ED9               	movwf	fsr2l,c
 17458  000192  0E00               	movlw	0
 17459  000194  21D3               	addwfc	(_MACInitParams+2)& (0+255),w,b
 17460  000196  6EDA               	movwf	fsr2h,c
 17461  000198  5034               	movf	high_isr@BankIndex,w,c
 17462  00019A  0D39               	mullw	57
 17463  00019C  0E50               	movlw	low _RxPacket
 17464  00019E  6E20               	movwf	(??_high_isr+1)& (0+255),c
 17465  0001A0  0E02               	movlw	high _RxPacket
 17466  0001A2  6E21               	movwf	(??_high_isr+2)& (0+255),c
 17467  0001A4  0E03               	movlw	3
 17468  0001A6  2620               	addwf	??_high_isr+1,f,c
 17469  0001A8  0E00               	movlw	0
 17470  0001AA  2221               	addwfc	??_high_isr+2,f,c
 17471  0001AC  50F3               	movf	prodl,w,c
 17472  0001AE  2620               	addwf	??_high_isr+1,f,c
 17473  0001B0  50F4               	movf	prodh,w,c
 17474  0001B2  2221               	addwfc	??_high_isr+2,f,c
 17475  0001B4  5035               	movf	high_isr@i,w,c
 17476  0001B6  2420               	addwf	??_high_isr+1,w,c
 17477  0001B8  6EE1               	movwf	fsr1l,c
 17478  0001BA  0E00               	movlw	0
 17479  0001BC  2021               	addwfc	??_high_isr+2,w,c
 17480  0001BE  6EE2               	movwf	fsr1h,c
 17481  0001C0  50DE               	movf	postinc2,w,c
 17482  0001C2  18E6               	xorwf	postinc1,w,c
 17483  0001C4  E00A               	bz	i2l7598
 17484                           
 17485                           ; BSR set to: 0
 17486                           ;drv_mrf_miwi_89xa.c: 1395: RxPacket[BankIndex].PayloadLen = 0;
 17487                           
 17488                           ; BSR set to: 0
 17489  0001C6  5034               	movf	high_isr@BankIndex,w,c
 17490  0001C8  0D39               	mullw	57
 17491  0001CA  0E88               	movlw	low (_RxPacket+56)
 17492  0001CC  24F3               	addwf	prodl,w,c
 17493  0001CE  6ED9               	movwf	fsr2l,c
 17494  0001D0  0E02               	movlw	high (_RxPacket+56)
 17495  0001D2  20F4               	addwfc	prodh,w,c
 17496  0001D4  6EDA               	movwf	fsr2h,c
 17497  0001D6  6ADF               	clrf	indf2,c
 17498                           
 17499                           ;drv_mrf_miwi_89xa.c: 1396: goto IGNORE_HERE;
 17500  0001D8  D75B               	goto	i2l7540
 17501  0001DA                     i2l7598:
 17502                           
 17503                           ; BSR set to: 0
 17504  0001DA  2A35               	incf	high_isr@i,f,c
 17505  0001DC                     i2l7600:
 17506  0001DC  0100               	movlb	0	; () banked
 17507  0001DE  31D1               	rrcf	_MACInitParams& (0+255),w,b
 17508  0001E0  32E8               	rrcf	wreg,f,c
 17509  0001E2  32E8               	rrcf	wreg,f,c
 17510  0001E4  0B0F               	andlw	15
 17511  0001E6  6E1F               	movwf	??_high_isr& (0+255),c
 17512  0001E8  501F               	movf	??_high_isr,w,c
 17513  0001EA  5C35               	subwf	high_isr@i,w,c
 17514  0001EC  E3CF               	bnc	i2l7592
 17515  0001EE                     i2l7602:
 17516                           
 17517                           ;drv_mrf_miwi_89xa.c: 1397: }
 17518                           ;drv_mrf_miwi_89xa.c: 1398: }
 17519                           ;drv_mrf_miwi_89xa.c: 1399: }
 17520                           ;drv_mrf_miwi_89xa.c: 1402: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 17521  0001EE  5034               	movf	high_isr@BankIndex,w,c
 17522  0001F0  0D39               	mullw	57
 17523  0001F2  0E51               	movlw	low (_RxPacket+1)
 17524  0001F4  24F3               	addwf	prodl,w,c
 17525  0001F6  6ED9               	movwf	fsr2l,c
 17526  0001F8  0E02               	movlw	high (_RxPacket+1)
 17527  0001FA  20F4               	addwfc	prodh,w,c
 17528  0001FC  6EDA               	movwf	fsr2h,c
 17529  0001FE  0102               	movlb	2	; () banked
 17530  000200  AADF               	btfss	indf2,5,c
 17531  000202  D034               	goto	i2l210
 17532                           
 17533                           ; BSR set to: 2
 17534                           ;drv_mrf_miwi_89xa.c: 1403: {
 17535                           ;drv_mrf_miwi_89xa.c: 1405: for(i = 0; i < 2; i++)
 17536  000204  6A35               	clrf	high_isr@i,c
 17537  000206                     i2l7610:
 17538                           
 17539                           ;drv_mrf_miwi_89xa.c: 1406: {
 17540                           ;drv_mrf_miwi_89xa.c: 1407: ackPacket[i] = MACTxBuffer[i];
 17541  000206  0E00               	movlw	low _MACTxBuffer
 17542  000208  2435               	addwf	high_isr@i,w,c
 17543  00020A  6ED9               	movwf	fsr2l,c
 17544  00020C  6ADA               	clrf	fsr2h,c
 17545  00020E  0E01               	movlw	high _MACTxBuffer
 17546  000210  22DA               	addwfc	fsr2h,f,c
 17547  000212  5035               	movf	high_isr@i,w,c
 17548  000214  0F2C               	addlw	low high_isr@ackPacket
 17549  000216  6EE1               	movwf	fsr1l,c
 17550  000218  6AE2               	clrf	fsr1h,c
 17551  00021A  CFDF FFE7          	movff	indf2,indf1
 17552  00021E  2A35               	incf	high_isr@i,f,c
 17553  000220  0E01               	movlw	1
 17554  000222  6435               	cpfsgt	high_isr@i,c
 17555  000224  D7F0               	goto	i2l7610
 17556                           
 17557                           ;drv_mrf_miwi_89xa.c: 1408: }
 17558                           ;drv_mrf_miwi_89xa.c: 1409: MACTxBuffer[0] = 0x02 | 0x04;
 17559  000226  0E06               	movlw	6
 17560  000228  0101               	movlb	1	; () banked
 17561  00022A  6F00               	movwf	_MACTxBuffer& (0+255),b	;volatile
 17562                           
 17563                           ; BSR set to: 1
 17564                           ;drv_mrf_miwi_89xa.c: 1410: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 17565  00022C  5034               	movf	high_isr@BankIndex,w,c
 17566  00022E  0D39               	mullw	57
 17567  000230  0E52               	movlw	low (_RxPacket+2)
 17568  000232  24F3               	addwf	prodl,w,c
 17569  000234  6ED9               	movwf	fsr2l,c
 17570  000236  0E02               	movlw	high (_RxPacket+2)
 17571  000238  20F4               	addwfc	prodh,w,c
 17572  00023A  6EDA               	movwf	fsr2h,c
 17573  00023C  50DF               	movf	indf2,w,c
 17574  00023E  6F01               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 17575                           
 17576                           ; BSR set to: 1
 17577                           ;drv_mrf_miwi_89xa.c: 1411: INTCON3bits.INT3IF = 0;
 17578  000240  94F0               	bcf	intcon3,2,c	;volatile
 17579                           
 17580                           ; BSR set to: 1
 17581                           ;drv_mrf_miwi_89xa.c: 1412: TxPacket(2, 0);
 17582  000242  6A0B               	clrf	i2TxPacket@CCA,c
 17583  000244  0E02               	movlw	2
 17584  000246  EC7F  F00E         	call	i2_TxPacket
 17585                           
 17586                           ;drv_mrf_miwi_89xa.c: 1415: for(i = 0; i < 2; i++)
 17587  00024A  6A35               	clrf	high_isr@i,c
 17588  00024C                     i2l7630:
 17589                           
 17590                           ;drv_mrf_miwi_89xa.c: 1416: {
 17591                           ;drv_mrf_miwi_89xa.c: 1417: MACTxBuffer[i] = ackPacket[i];
 17592  00024C  5035               	movf	high_isr@i,w,c
 17593  00024E  0F2C               	addlw	low high_isr@ackPacket
 17594  000250  6ED9               	movwf	fsr2l,c
 17595  000252  6ADA               	clrf	fsr2h,c
 17596  000254  0E00               	movlw	low _MACTxBuffer
 17597  000256  2435               	addwf	high_isr@i,w,c
 17598  000258  6EE1               	movwf	fsr1l,c
 17599  00025A  6AE2               	clrf	fsr1h,c
 17600  00025C  0E01               	movlw	high _MACTxBuffer
 17601  00025E  22E2               	addwfc	fsr1h,f,c
 17602  000260  CFDF FFE7          	movff	indf2,indf1
 17603  000264  2A35               	incf	high_isr@i,f,c
 17604  000266  0E01               	movlw	1
 17605  000268  6435               	cpfsgt	high_isr@i,c
 17606  00026A  D7F0               	goto	i2l7630
 17607  00026C                     i2l210:
 17608                           
 17609                           ;drv_mrf_miwi_89xa.c: 1418: }
 17610                           ;drv_mrf_miwi_89xa.c: 1419: }
 17611                           ;drv_mrf_miwi_89xa.c: 1423: for(i = 0; i < 5; i++)
 17612  00026C  6A35               	clrf	high_isr@i,c
 17613  00026E                     i2l7640:
 17614                           
 17615                           ;drv_mrf_miwi_89xa.c: 1424: {
 17616                           ;drv_mrf_miwi_89xa.c: 1425: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 17617  00026E  5035               	movf	high_isr@i,w,c
 17618  000270  0D06               	mullw	6
 17619  000272  0E37               	movlw	low _AckInfo
 17620  000274  24F3               	addwf	prodl,w,c
 17621  000276  6ED9               	movwf	fsr2l,c
 17622  000278  0E01               	movlw	high _AckInfo
 17623  00027A  20F4               	addwfc	prodh,w,c
 17624  00027C  6EDA               	movwf	fsr2h,c
 17625  00027E  50DF               	movf	indf2,w,c
 17626  000280  E026               	bz	i2l7646
 17627  000282  5034               	movf	high_isr@BankIndex,w,c
 17628  000284  0D39               	mullw	57
 17629  000286  0E52               	movlw	low (_RxPacket+2)
 17630  000288  24F3               	addwf	prodl,w,c
 17631  00028A  6ED9               	movwf	fsr2l,c
 17632  00028C  0E02               	movlw	high (_RxPacket+2)
 17633  00028E  20F4               	addwfc	prodh,w,c
 17634  000290  6EDA               	movwf	fsr2h,c
 17635  000292  5035               	movf	high_isr@i,w,c
 17636  000294  0D06               	mullw	6
 17637  000296  0E38               	movlw	low (_AckInfo+1)
 17638  000298  24F3               	addwf	prodl,w,c
 17639  00029A  6EE1               	movwf	fsr1l,c
 17640  00029C  0E01               	movlw	high (_AckInfo+1)
 17641  00029E  20F4               	addwfc	prodh,w,c
 17642  0002A0  6EE2               	movwf	fsr1h,c
 17643  0002A2  50DE               	movf	postinc2,w,c
 17644  0002A4  18E6               	xorwf	postinc1,w,c
 17645  0002A6  E113               	bnz	i2l7646
 17646                           
 17647                           ;drv_mrf_miwi_89xa.c: 1426: {
 17648                           ;drv_mrf_miwi_89xa.c: 1427: AckInfo[i].startTick = MiWi_TickGet();
 17649  0002A8  EC28  F017         	call	i2_MiWi_TickGet	;wreg free
 17650  0002AC  5035               	movf	high_isr@i,w,c
 17651  0002AE  0D06               	mullw	6
 17652  0002B0  0E39               	movlw	low (_AckInfo+2)
 17653  0002B2  24F3               	addwf	prodl,w,c
 17654  0002B4  6ED9               	movwf	fsr2l,c
 17655  0002B6  0E01               	movlw	high (_AckInfo+2)
 17656  0002B8  20F4               	addwfc	prodh,w,c
 17657  0002BA  6EDA               	movwf	fsr2h,c
 17658  0002BC  C001  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 17659  0002C0  C002  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 17660  0002C4  C003  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 17661  0002C8  C004  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 17662                           
 17663                           ;drv_mrf_miwi_89xa.c: 1428: break;
 17664  0002CC  D012               	goto	i2l7656
 17665  0002CE                     i2l7646:
 17666                           
 17667                           ;drv_mrf_miwi_89xa.c: 1429: }
 17668                           ;drv_mrf_miwi_89xa.c: 1430: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 17669  0002CE  2832               	incf	high_isr@ackInfoIndex,w,c
 17670  0002D0  E10C               	bnz	i2l7652
 17671  0002D2  5035               	movf	high_isr@i,w,c
 17672  0002D4  0D06               	mullw	6
 17673  0002D6  0E37               	movlw	low _AckInfo
 17674  0002D8  24F3               	addwf	prodl,w,c
 17675  0002DA  6ED9               	movwf	fsr2l,c
 17676  0002DC  0E01               	movlw	high _AckInfo
 17677  0002DE  20F4               	addwfc	prodh,w,c
 17678  0002E0  6EDA               	movwf	fsr2h,c
 17679  0002E2  50DF               	movf	indf2,w,c
 17680  0002E4  E102               	bnz	i2l7652
 17681                           
 17682                           ;drv_mrf_miwi_89xa.c: 1431: {
 17683                           ;drv_mrf_miwi_89xa.c: 1432: ackInfoIndex = i;
 17684  0002E6  C035  F032         	movff	high_isr@i,high_isr@ackInfoIndex
 17685  0002EA                     i2l7652:
 17686  0002EA  2A35               	incf	high_isr@i,f,c
 17687  0002EC  0E04               	movlw	4
 17688  0002EE  6435               	cpfsgt	high_isr@i,c
 17689  0002F0  D7BE               	goto	i2l7640
 17690  0002F2                     i2l7656:
 17691                           
 17692                           ;drv_mrf_miwi_89xa.c: 1433: }
 17693                           ;drv_mrf_miwi_89xa.c: 1434: }
 17694                           ;drv_mrf_miwi_89xa.c: 1436: if( i >= 5 )
 17695  0002F2  0E04               	movlw	4
 17696  0002F4  6435               	cpfsgt	high_isr@i,c
 17697  0002F6  D043               	goto	i2l7672
 17698                           
 17699                           ;drv_mrf_miwi_89xa.c: 1437: {
 17700                           ;drv_mrf_miwi_89xa.c: 1438: if( ackInfoIndex < 5 )
 17701  0002F8  0E05               	movlw	5
 17702  0002FA  6032               	cpfslt	high_isr@ackInfoIndex,c
 17703  0002FC  D02E               	goto	i2l7666
 17704                           
 17705                           ;drv_mrf_miwi_89xa.c: 1439: {
 17706                           ;drv_mrf_miwi_89xa.c: 1440: AckInfo[ackInfoIndex].Valid = 1;
 17707  0002FE  5032               	movf	high_isr@ackInfoIndex,w,c
 17708  000300  0D06               	mullw	6
 17709  000302  0E37               	movlw	low _AckInfo
 17710  000304  24F3               	addwf	prodl,w,c
 17711  000306  6ED9               	movwf	fsr2l,c
 17712  000308  0E01               	movlw	high _AckInfo
 17713  00030A  20F4               	addwfc	prodh,w,c
 17714  00030C  6EDA               	movwf	fsr2h,c
 17715  00030E  0E01               	movlw	1
 17716  000310  6EDF               	movwf	indf2,c
 17717                           
 17718                           ;drv_mrf_miwi_89xa.c: 1441: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 17719  000312  5034               	movf	high_isr@BankIndex,w,c
 17720  000314  0D39               	mullw	57
 17721  000316  0E52               	movlw	low (_RxPacket+2)
 17722  000318  24F3               	addwf	prodl,w,c
 17723  00031A  6ED9               	movwf	fsr2l,c
 17724  00031C  0E02               	movlw	high (_RxPacket+2)
 17725  00031E  20F4               	addwfc	prodh,w,c
 17726  000320  6EDA               	movwf	fsr2h,c
 17727  000322  5032               	movf	high_isr@ackInfoIndex,w,c
 17728  000324  0D06               	mullw	6
 17729  000326  0E38               	movlw	low (_AckInfo+1)
 17730  000328  24F3               	addwf	prodl,w,c
 17731  00032A  6EE1               	movwf	fsr1l,c
 17732  00032C  0E01               	movlw	high (_AckInfo+1)
 17733  00032E  20F4               	addwfc	prodh,w,c
 17734  000330  6EE2               	movwf	fsr1h,c
 17735  000332  CFDF FFE7          	movff	indf2,indf1
 17736                           
 17737                           ;drv_mrf_miwi_89xa.c: 1442: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 17738  000336  EC28  F017         	call	i2_MiWi_TickGet	;wreg free
 17739  00033A  5032               	movf	high_isr@ackInfoIndex,w,c
 17740  00033C  0D06               	mullw	6
 17741  00033E  0E39               	movlw	low (_AckInfo+2)
 17742  000340  24F3               	addwf	prodl,w,c
 17743  000342  6ED9               	movwf	fsr2l,c
 17744  000344  0E01               	movlw	high (_AckInfo+2)
 17745  000346  20F4               	addwfc	prodh,w,c
 17746  000348  6EDA               	movwf	fsr2h,c
 17747  00034A  C001  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 17748  00034E  C002  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 17749  000352  C003  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 17750  000356  C004  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 17751  00035A                     i2l7666:
 17752                           
 17753                           ;drv_mrf_miwi_89xa.c: 1443: }
 17754                           ;drv_mrf_miwi_89xa.c: 1446: RxPacket[BankIndex].flags.bits.Valid = 1;
 17755  00035A  5034               	movf	high_isr@BankIndex,w,c
 17756  00035C  0D39               	mullw	57
 17757  00035E  0E50               	movlw	low _RxPacket
 17758  000360  24F3               	addwf	prodl,w,c
 17759  000362  6ED9               	movwf	fsr2l,c
 17760  000364  0E02               	movlw	high _RxPacket
 17761  000366  20F4               	addwfc	prodh,w,c
 17762  000368  6EDA               	movwf	fsr2h,c
 17763  00036A  0102               	movlb	2	; () banked
 17764  00036C  80DF               	bsf	indf2,0,c
 17765  00036E  D007               	goto	i2l7672
 17766  000370                     i2l7668:
 17767  000370  5029               	movf	high_isr@counter,w,c
 17768  000372  102A               	iorwf	high_isr@counter+1,w,c
 17769  000374  E004               	bz	i2l7672
 17770  000376  D6A1               	goto	i2l7550
 17771  000378                     i2l7670:
 17772                           
 17773                           ;drv_mrf_miwi_89xa.c: 1461: else
 17774                           ;drv_mrf_miwi_89xa.c: 1462: {
 17775                           ;drv_mrf_miwi_89xa.c: 1464: IRQ1_Received = 1;
 17776  000378  0E01               	movlw	1
 17777  00037A  0100               	movlb	0	; () banked
 17778  00037C  6FD6               	movwf	_IRQ1_Received& (0+255),b	;volatile
 17779  00037E                     i2l7672:
 17780                           
 17781                           ;drv_mrf_miwi_89xa.c: 1468: INTCON3bits.INT3IF = 0;
 17782  00037E  94F0               	bcf	intcon3,2,c	;volatile
 17783                           
 17784                           ;drv_mrf_miwi_89xa.c: 1470: __nop();
 17785  000380  F000               	nop	
 17786  000382                     i2l7676:
 17787                           
 17788                           ;drv_mrf_miwi_89xa.c: 1471: }
 17789                           ;drv_mrf_miwi_89xa.c: 1491: if(PIR1bits.TMR1IF)
 17790  000382  B09E               	btfsc	3998,0,c	;volatile
 17791                           
 17792                           ;drv_mrf_miwi_89xa.c: 1492: {
 17793                           ;drv_mrf_miwi_89xa.c: 1493: if(PIE1bits.TMR1IE)
 17794  000384  A09D               	btfss	3997,0,c	;volatile
 17795  000386  D006               	goto	i2l7688
 17796                           
 17797                           ;drv_mrf_miwi_89xa.c: 1494: {
 17798                           ;drv_mrf_miwi_89xa.c: 1496: PIR1bits.TMR1IF = 0;
 17799  000388  909E               	bcf	3998,0,c	;volatile
 17800                           
 17801                           ;drv_mrf_miwi_89xa.c: 1497: timerExtension1++;
 17802  00038A  2A5B               	incf	_timerExtension1,f,c	;volatile
 17803                           
 17804                           ;drv_mrf_miwi_89xa.c: 1498: if(timerExtension1 == 0)
 17805  00038C  505B               	movf	_timerExtension1,w,c	;volatile
 17806  00038E  E102               	bnz	i2l7688
 17807                           
 17808                           ;drv_mrf_miwi_89xa.c: 1499: {
 17809                           ;drv_mrf_miwi_89xa.c: 1500: timerExtension2++;
 17810  000390  0100               	movlb	0	; () banked
 17811  000392  2BE7               	incf	_timerExtension2& (0+255),f,b	;volatile
 17812  000394                     i2l7688:
 17813                           
 17814                           ;drv_mrf_miwi_89xa.c: 1501: }
 17815                           ;drv_mrf_miwi_89xa.c: 1502: }
 17816                           ;drv_mrf_miwi_89xa.c: 1503: }
 17817                           ;drv_mrf_miwi_89xa.c: 1505: UserInterruptHandler();
 17818  000394  EC43  F01A         	call	_UserInterruptHandler	;wreg free
 17819  000398  C028  FFF4         	movff	??_high_isr+9,prodh
 17820  00039C  C027  FFF3         	movff	??_high_isr+8,prodl
 17821  0003A0  C026  FFDA         	movff	??_high_isr+7,fsr2h
 17822  0003A4  C025  FFD9         	movff	??_high_isr+6,fsr2l
 17823  0003A8  C024  FFE2         	movff	??_high_isr+5,fsr1h
 17824  0003AC  C023  FFE1         	movff	??_high_isr+4,fsr1l
 17825  0003B0  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17826  0003B2  0011               	retfie		f
 17827  0003B4                     __end_of_high_isr:
 17828                           	opt stack 0
 17829                           tblptru	equ	0xFF8
 17830                           tblptrh	equ	0xFF7
 17831                           tblptrl	equ	0xFF6
 17832                           tablat	equ	0xFF5
 17833                           prodh	equ	0xFF4
 17834                           prodl	equ	0xFF3
 17835                           intcon	equ	0xFF2
 17836                           intcon2	equ	0xFF1
 17837                           intcon3	equ	0xFF0
 17838                           postinc0	equ	0xFEE
 17839                           wreg	equ	0xFE8
 17840                           indf1	equ	0xFE7
 17841                           postinc1	equ	0xFE6
 17842                           postdec1	equ	0xFE5
 17843                           fsr1h	equ	0xFE2
 17844                           fsr1l	equ	0xFE1
 17845                           indf2	equ	0xFDF
 17846                           postinc2	equ	0xFDE
 17847                           postdec2	equ	0xFDD
 17848                           fsr2h	equ	0xFDA
 17849                           fsr2l	equ	0xFD9
 17850                           status	equ	0xFD8
 17851                           
 17852 ;; *************** function i2_TxPacket *****************
 17853 ;; Defined at:
 17854 ;;		line 288 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17855 ;; Parameters:    Size  Location     Type
 17856 ;;  TxPacketLen     1    wreg     unsigned char 
 17857 ;;  CCA             1   10[COMRAM] unsigned char 
 17858 ;; Auto vars:     Size  Location     Type
 17859 ;;  TxPacketLen     1   15[COMRAM] unsigned char 
 17860 ;;  TxPacket        4   21[COMRAM] struct _MIWI_TICK
 17861 ;;  TxPacket        4   17[COMRAM] struct _MIWI_TICK
 17862 ;;  TxPacket        1   29[COMRAM] unsigned char 
 17863 ;;  TxPacket        1   28[COMRAM] unsigned char 
 17864 ;;  TxPacket        1   27[COMRAM] unsigned char 
 17865 ;;  TxPacket        1   26[COMRAM] unsigned char 
 17866 ;;  TxPacket        1   25[COMRAM] unsigned char 
 17867 ;;  TxPacket        1   16[COMRAM] unsigned char 
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  1    wreg      unsigned char 
 17870 ;; Registers used:
 17871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17872 ;; Tracked objects:
 17873 ;;		On entry : F/1
 17874 ;;		On exit  : 0/0
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17877 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17878 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17879 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17880 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17881 ;;Total ram usage:       20 bytes
 17882 ;; Hardware stack levels used:    1
 17883 ;; Hardware stack levels required when called:    3
 17884 ;; This function calls:
 17885 ;;		i2_DELAY_10us
 17886 ;;		i2_MiWi_TickGet
 17887 ;;		i2_RegisterRead
 17888 ;;		i2_RegisterSet
 17889 ;;		i2_SetRFMode
 17890 ;;		i2_WriteFIFO
 17891 ;; This function is called by:
 17892 ;;		_high_isr
 17893 ;; This function uses a non-reentrant model
 17894 ;;
 17895                           
 17896                           	psect	text79
 17897  001CFE                     __ptext79:
 17898                           	opt stack 0
 17899  001CFE                     i2_TxPacket:
 17900                           	opt stack 12
 17901                           
 17902                           ;incstack = 0
 17903                           ;i2TxPacket@TxPacketLen stored from wreg
 17904  001CFE  6E10               	movwf	i2TxPacket@TxPacketLen,c
 17905                           
 17906                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 17907                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 17908                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 17909                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 17910                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 17911                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 17912  001D00  0E03               	movlw	3
 17913  001D02  6E1B               	movwf	i2TxPacket@reTry,c
 17914                           
 17915                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 17916  001D04  D084               	goto	i2l7496
 17917  001D06                     i2l80:
 17918                           
 17919                           ;drv_mrf_miwi_89xa.c: 305: {
 17920                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 17921                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 17922  001D06  6A1C               	clrf	i2TxPacket@allowedTxFailure,c
 17923  001D08                     i2l81:
 17924                           
 17925                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 17926  001D08  0100               	movlb	0	; () banked
 17927  001D0A  6BE4               	clrf	_hasAck& (0+255),b	;volatile
 17928                           
 17929                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 17930  001D0C  6A1A               	clrf	i2TxPacket@CCARetries,c
 17931                           
 17932                           ; BSR set to: 0
 17933                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 17934  001D0E  500B               	movf	i2TxPacket@CCA,w,c
 17935  001D10  E019               	bz	i2l82
 17936  001D12                     i2l7438:
 17937                           
 17938                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 17939  001D12  0E28               	movlw	40
 17940  001D14  ECD1  F018         	call	i2_RegisterRead
 17941  001D18  6E1D               	movwf	i2TxPacket@rssival,c
 17942                           
 17943                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 17944  001D1A  90D8               	bcf	status,0,c
 17945  001D1C  321D               	rrcf	i2TxPacket@rssival,f,c
 17946                           
 17947                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 17948  001D1E  0E41               	movlw	65
 17949  001D20  641D               	cpfsgt	i2TxPacket@rssival,c
 17950  001D22  D010               	goto	i2l82
 17951                           
 17952                           ;drv_mrf_miwi_89xa.c: 326: {
 17953                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 17954  001D24  2A1A               	incf	i2TxPacket@CCARetries,f,c
 17955  001D26  041A               	decf	i2TxPacket@CCARetries,w,c
 17956  001D28  6E0C               	movwf	??i2_TxPacket& (0+255),c
 17957  001D2A  0E04               	movlw	4
 17958  001D2C  640C               	cpfsgt	??i2_TxPacket,c
 17959  001D2E  D001               	goto	i2l7448
 17960  001D30  0C04               	retlw	4
 17961  001D32                     i2l7448:
 17962                           
 17963                           ;drv_mrf_miwi_89xa.c: 331: }
 17964                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
 17965  001D32  0E01               	movlw	1
 17966  001D34  6E01               	movwf	i2DELAY_10us@tenMicroSecondCounter,c
 17967  001D36  0E00               	movlw	0
 17968  001D38  6A02               	clrf	i2DELAY_10us@tenMicroSecondCounter+1,c
 17969  001D3A  6A03               	clrf	i2DELAY_10us@tenMicroSecondCounter+2,c
 17970  001D3C  6A04               	clrf	i2DELAY_10us@tenMicroSecondCounter+3,c
 17971  001D3E  EC92  F01A         	call	i2_DELAY_10us	;wreg free
 17972                           
 17973                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
 17974  001D42  D7E7               	goto	i2l7438
 17975  001D44                     i2l82:
 17976                           
 17977                           ;drv_mrf_miwi_89xa.c: 334: }
 17978                           ;drv_mrf_miwi_89xa.c: 335: }
 17979                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT3IE = 0;
 17980  001D44  9AF0               	bcf	intcon3,5,c	;volatile
 17981                           
 17982                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
 17983  001D46  0E20               	movlw	32
 17984  001D48  ECF1  F015         	call	i2_SetRFMode
 17985                           
 17986                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
 17987  001D4C  0E1A               	movlw	26
 17988  001D4E  6E03               	movwf	i2RegisterSet@setting+1,c
 17989  001D50  0EC9               	movlw	201
 17990  001D52  6E02               	movwf	i2RegisterSet@setting,c
 17991  001D54  EC61  F019         	call	i2_RegisterSet	;wreg free
 17992                           
 17993                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
 17994  001D58  5010               	movf	i2TxPacket@TxPacketLen,w,c
 17995  001D5A  ECA9  F019         	call	i2_WriteFIFO
 17996                           
 17997                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
 17998  001D5E  6A1E               	clrf	i2TxPacket@i,c
 17999  001D60  D00A               	goto	i2l7462
 18000  001D62                     i2l7458:
 18001                           
 18002                           ;drv_mrf_miwi_89xa.c: 347: {
 18003                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
 18004  001D62  0E00               	movlw	low _MACTxBuffer
 18005  001D64  241E               	addwf	i2TxPacket@i,w,c
 18006  001D66  6ED9               	movwf	fsr2l,c
 18007  001D68  6ADA               	clrf	fsr2h,c
 18008  001D6A  0E01               	movlw	high _MACTxBuffer
 18009  001D6C  22DA               	addwfc	fsr2h,f,c
 18010  001D6E  50DF               	movf	indf2,w,c
 18011  001D70  ECA9  F019         	call	i2_WriteFIFO
 18012  001D74  2A1E               	incf	i2TxPacket@i,f,c
 18013  001D76                     i2l7462:
 18014  001D76  5010               	movf	i2TxPacket@TxPacketLen,w,c
 18015  001D78  5C1E               	subwf	i2TxPacket@i,w,c
 18016  001D7A  E3F3               	bnc	i2l7458
 18017                           
 18018                           ;drv_mrf_miwi_89xa.c: 349: }
 18019                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
 18020  001D7C  0E80               	movlw	128
 18021  001D7E  ECF1  F015         	call	i2_SetRFMode
 18022                           
 18023                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT3IE = 1;
 18024  001D82  8AF0               	bsf	intcon3,5,c	;volatile
 18025  001D84                     i2l7468:
 18026  001D84  0100               	movlb	0	; () banked
 18027  001D86  51D6               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 18028  001D88  E102               	bnz	i2l94
 18029                           
 18030                           ; BSR set to: 0
 18031  001D8A  A4F0               	btfss	intcon3,2,c	;volatile
 18032  001D8C  D7FB               	goto	i2l7468
 18033  001D8E                     i2l94:
 18034                           
 18035                           ; BSR set to: 0
 18036                           ;drv_mrf_miwi_89xa.c: 358: };
 18037                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
 18038  001D8E  6BD6               	clrf	_IRQ1_Received& (0+255),b	;volatile
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
 18042  001D90  0E20               	movlw	32
 18043  001D92  ECF1  F015         	call	i2_SetRFMode
 18044                           
 18045                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
 18046  001D96  0E60               	movlw	96
 18047  001D98  ECF1  F015         	call	i2_SetRFMode
 18048                           
 18049                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
 18050  001D9C  0101               	movlb	1	; () banked
 18051  001D9E  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 18052  001DA0  D00E               	goto	i2l7482
 18053                           
 18054                           ; BSR set to: 1
 18055                           ;drv_mrf_miwi_89xa.c: 368: {
 18056                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
 18057  001DA2  C101  F05A         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 18058                           
 18059                           ; BSR set to: 1
 18060                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
 18061  001DA6  EC28  F017         	call	i2_MiWi_TickGet	;wreg free
 18062  001DAA  C001  F012         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 18063  001DAE  C002  F013         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 18064  001DB2  C003  F014         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 18065  001DB6  C004  F015         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 18066  001DBA                     i2l7480:
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;drv_mrf_miwi_89xa.c: 372: {
 18070                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
 18071  001DBA  51E4               	movf	_hasAck& (0+255),w,b	;volatile
 18072  001DBC  E003               	bz	i2l7484
 18073  001DBE                     i2l7482:
 18074                           
 18075                           ;drv_mrf_miwi_89xa.c: 374: {
 18076                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
 18077  001DBE  0E01               	movlw	1
 18078  001DC0  6E11               	movwf	i2TxPacket@status,c
 18079                           
 18080                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
 18081  001DC2  0C01               	retlw	1
 18082  001DC4                     i2l7484:
 18083                           
 18084                           ; BSR set to: 0
 18085                           ;drv_mrf_miwi_89xa.c: 377: }
 18086                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
 18087  001DC4  EC28  F017         	call	i2_MiWi_TickGet	;wreg free
 18088  001DC8  C001  F016         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 18089  001DCC  C002  F017         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 18090  001DD0  C003  F018         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 18091  001DD4  C004  F019         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 18092                           
 18093                           ; BSR set to: 0
 18094                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(8000000)/32)/20 )
 18095  001DD8  5012               	movf	i2TxPacket@t1,w,c
 18096  001DDA  5C16               	subwf	i2TxPacket@t2,w,c
 18097  001DDC  6E0C               	movwf	??i2_TxPacket& (0+255),c
 18098  001DDE  5013               	movf	i2TxPacket@t1+1,w,c
 18099  001DE0  5817               	subwfb	i2TxPacket@t2+1,w,c
 18100  001DE2  6E0D               	movwf	(??i2_TxPacket+1)& (0+255),c
 18101  001DE4  5014               	movf	i2TxPacket@t1+2,w,c
 18102  001DE6  5818               	subwfb	i2TxPacket@t2+2,w,c
 18103  001DE8  6E0E               	movwf	(??i2_TxPacket+2)& (0+255),c
 18104  001DEA  5015               	movf	i2TxPacket@t1+3,w,c
 18105  001DEC  5819               	subwfb	i2TxPacket@t2+3,w,c
 18106  001DEE  6E0F               	movwf	(??i2_TxPacket+3)& (0+255),c
 18107  001DF0  500F               	movf	??i2_TxPacket+3,w,c
 18108  001DF2  100E               	iorwf	??i2_TxPacket+2,w,c
 18109  001DF4  E105               	bnz	i2u646_40
 18110  001DF6  0ED5               	movlw	213
 18111  001DF8  5C0C               	subwf	??i2_TxPacket,w,c
 18112  001DFA  0E30               	movlw	48
 18113  001DFC  580D               	subwfb	??i2_TxPacket+1,w,c
 18114  001DFE  E3DD               	bnc	i2l7480
 18115  001E00                     i2u646_40:
 18116                           
 18117                           ; BSR set to: 0
 18118                           ;drv_mrf_miwi_89xa.c: 382: }
 18119                           ;drv_mrf_miwi_89xa.c: 383: }
 18120                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
 18121  001E00  2A1C               	incf	i2TxPacket@allowedTxFailure,f,c
 18122  001E02  041C               	decf	i2TxPacket@allowedTxFailure,w,c
 18123  001E04  6E0C               	movwf	??i2_TxPacket& (0+255),c
 18124  001E06  0E04               	movlw	4
 18125  001E08  600C               	cpfslt	??i2_TxPacket,c
 18126  001E0A  D001               	goto	i2l7496
 18127  001E0C  D77D               	goto	i2l81
 18128  001E0E                     i2l7496:
 18129  001E0E  061B               	decf	i2TxPacket@reTry,f,c
 18130  001E10  281B               	incf	i2TxPacket@reTry,w,c
 18131  001E12  E001 D778          	bnz	i2l80
 18132                           
 18133                           ;drv_mrf_miwi_89xa.c: 394: }
 18134                           ;drv_mrf_miwi_89xa.c: 395: }
 18135                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
 18136  001E16  6A11               	clrf	i2TxPacket@status,c
 18137  001E18  0012               	return		;funcret
 18138  001E1A                     __end_ofi2_TxPacket:
 18139                           	opt stack 0
 18140                           tblptru	equ	0xFF8
 18141                           tblptrh	equ	0xFF7
 18142                           tblptrl	equ	0xFF6
 18143                           tablat	equ	0xFF5
 18144                           prodh	equ	0xFF4
 18145                           prodl	equ	0xFF3
 18146                           intcon	equ	0xFF2
 18147                           intcon2	equ	0xFF1
 18148                           intcon3	equ	0xFF0
 18149                           postinc0	equ	0xFEE
 18150                           wreg	equ	0xFE8
 18151                           indf1	equ	0xFE7
 18152                           postinc1	equ	0xFE6
 18153                           postdec1	equ	0xFE5
 18154                           fsr1h	equ	0xFE2
 18155                           fsr1l	equ	0xFE1
 18156                           indf2	equ	0xFDF
 18157                           postinc2	equ	0xFDE
 18158                           postdec2	equ	0xFDD
 18159                           fsr2h	equ	0xFDA
 18160                           fsr2l	equ	0xFD9
 18161                           status	equ	0xFD8
 18162                           
 18163 ;; *************** function i2_WriteFIFO *****************
 18164 ;; Defined at:
 18165 ;;		line 244 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 18166 ;; Parameters:    Size  Location     Type
 18167 ;;  Data            1    wreg     unsigned char 
 18168 ;; Auto vars:     Size  Location     Type
 18169 ;;  Data            1    1[COMRAM] unsigned char 
 18170 ;;  WriteFIFO       1    2[COMRAM] unsigned char 
 18171 ;; Return value:  Size  Location     Type
 18172 ;;		None               void
 18173 ;; Registers used:
 18174 ;;		wreg, status,2, cstack
 18175 ;; Tracked objects:
 18176 ;;		On entry : 0/0
 18177 ;;		On exit  : 0/0
 18178 ;;		Unchanged: 0/0
 18179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18184 ;;Total ram usage:        2 bytes
 18185 ;; Hardware stack levels used:    1
 18186 ;; Hardware stack levels required when called:    1
 18187 ;; This function calls:
 18188 ;;		i2_SPI1_Exchange8bit
 18189 ;; This function is called by:
 18190 ;;		i2_TxPacket
 18191 ;; This function uses a non-reentrant model
 18192 ;;
 18193                           
 18194                           	psect	text80
 18195  003352                     __ptext80:
 18196                           	opt stack 0
 18197  003352                     i2_WriteFIFO:
 18198                           	opt stack 13
 18199                           
 18200                           ;incstack = 0
 18201                           ;i2WriteFIFO@Data stored from wreg
 18202  003352  6E02               	movwf	i2WriteFIFO@Data,c
 18203                           
 18204                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT3IE;
 18205  003354  0E00               	movlw	0
 18206  003356  BAF0               	btfsc	intcon3,5,c	;volatile
 18207  003358  0E01               	movlw	1
 18208  00335A  6E03               	movwf	i2WriteFIFO@IRQ1select,c
 18209                           
 18210                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT3IE = 0;
 18211  00335C  9AF0               	bcf	intcon3,5,c	;volatile
 18212                           
 18213                           ;drv_mrf_miwi_89xa.c: 254: LATCbits.LATC2 = 0;
 18214  00335E  948B               	bcf	3979,2,c	;volatile
 18215                           
 18216                           ;drv_mrf_miwi_89xa.c: 255: SPI1_Exchange8bit(Data);
 18217  003360  5002               	movf	i2WriteFIFO@Data,w,c
 18218  003362  EC66  F01A         	call	i2_SPI1_Exchange8bit
 18219                           
 18220                           ;drv_mrf_miwi_89xa.c: 256: LATCbits.LATC2 = 1;
 18221  003366  848B               	bsf	3979,2,c	;volatile
 18222                           
 18223                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT3IE = IRQ1select;
 18224  003368  B003               	btfsc	i2WriteFIFO@IRQ1select,0,c
 18225  00336A  D002               	bra	i2u627_45
 18226  00336C  9AF0               	bcf	intcon3,5,c	;volatile
 18227  00336E  D001               	bra	i2u627_46
 18228  003370                     i2u627_45:
 18229  003370  8AF0               	bsf	intcon3,5,c	;volatile
 18230  003372                     i2u627_46:
 18231  003372  0012               	return		;funcret
 18232  003374                     __end_ofi2_WriteFIFO:
 18233                           	opt stack 0
 18234                           tblptru	equ	0xFF8
 18235                           tblptrh	equ	0xFF7
 18236                           tblptrl	equ	0xFF6
 18237                           tablat	equ	0xFF5
 18238                           prodh	equ	0xFF4
 18239                           prodl	equ	0xFF3
 18240                           intcon	equ	0xFF2
 18241                           intcon2	equ	0xFF1
 18242                           intcon3	equ	0xFF0
 18243                           postinc0	equ	0xFEE
 18244                           wreg	equ	0xFE8
 18245                           indf1	equ	0xFE7
 18246                           postinc1	equ	0xFE6
 18247                           postdec1	equ	0xFE5
 18248                           fsr1h	equ	0xFE2
 18249                           fsr1l	equ	0xFE1
 18250                           indf2	equ	0xFDF
 18251                           postinc2	equ	0xFDE
 18252                           postdec2	equ	0xFDD
 18253                           fsr2h	equ	0xFDA
 18254                           fsr2l	equ	0xFD9
 18255                           status	equ	0xFD8
 18256                           
 18257 ;; *************** function i2_SetRFMode *****************
 18258 ;; Defined at:
 18259 ;;		line 667 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 18260 ;; Parameters:    Size  Location     Type
 18261 ;;  mode            1    wreg     unsigned char 
 18262 ;; Auto vars:     Size  Location     Type
 18263 ;;  mode            1    4[COMRAM] unsigned char 
 18264 ;; Return value:  Size  Location     Type
 18265 ;;		None               void
 18266 ;; Registers used:
 18267 ;;		wreg, status,2, status,0, cstack
 18268 ;; Tracked objects:
 18269 ;;		On entry : 0/0
 18270 ;;		On exit  : 0/0
 18271 ;;		Unchanged: 0/0
 18272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18277 ;;Total ram usage:        1 bytes
 18278 ;; Hardware stack levels used:    1
 18279 ;; Hardware stack levels required when called:    2
 18280 ;; This function calls:
 18281 ;;		i2_RegisterSet
 18282 ;; This function is called by:
 18283 ;;		i2_TxPacket
 18284 ;; This function uses a non-reentrant model
 18285 ;;
 18286                           
 18287                           	psect	text81
 18288  002BE2                     __ptext81:
 18289                           	opt stack 0
 18290  002BE2                     i2_SetRFMode:
 18291                           	opt stack 12
 18292                           
 18293                           ;incstack = 0
 18294                           ;i2SetRFMode@mode stored from wreg
 18295  002BE2  6E05               	movwf	i2SetRFMode@mode,c
 18296                           
 18297                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
 18298  002BE4  D027               	goto	i2l7202
 18299  002BE6                     i2l7180:
 18300                           
 18301                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x80);
 18302  002BE6  6A03               	clrf	i2RegisterSet@setting+1,c
 18303  002BE8  0E86               	movlw	134
 18304  002BEA  6E02               	movwf	i2RegisterSet@setting,c
 18305  002BEC  EC61  F019         	call	i2_RegisterSet	;wreg free
 18306                           
 18307                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
 18308  002BF0  0E80               	movlw	128
 18309  002BF2  6E56               	movwf	_RF_Mode,c
 18310                           
 18311                           ;drv_mrf_miwi_89xa.c: 673: break;
 18312  002BF4  0C80               	retlw	128
 18313  002BF6                     i2l7184:
 18314                           
 18315                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x00 | 0x06) & 0x1F) | 0x60);
 18316  002BF6  6A03               	clrf	i2RegisterSet@setting+1,c
 18317  002BF8  0E66               	movlw	102
 18318  002BFA  6E02               	movwf	i2RegisterSet@setting,c
 18319  002BFC  EC61  F019         	call	i2_RegisterSet	;wreg free
 18320                           
 18321                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
 18322  002C00  0E60               	movlw	96
 18323  002C02  6E56               	movwf	_RF_Mode,c
 18324                           
 18325                           ;drv_mrf_miwi_89xa.c: 677: break;
 18326  002C04  0C60               	retlw	96
 18327  002C06                     i2l7188:
 18328                           
 18329                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
 18330  002C06  6A03               	clrf	i2RegisterSet@setting+1,c
 18331  002C08  0E46               	movlw	70
 18332  002C0A  6E02               	movwf	i2RegisterSet@setting,c
 18333  002C0C  EC61  F019         	call	i2_RegisterSet	;wreg free
 18334                           
 18335                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
 18336  002C10  0E40               	movlw	64
 18337  002C12  6E56               	movwf	_RF_Mode,c
 18338                           
 18339                           ;drv_mrf_miwi_89xa.c: 681: break;
 18340  002C14  0C40               	retlw	64
 18341  002C16                     i2l7192:
 18342                           
 18343                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x20);
 18344  002C16  6A03               	clrf	i2RegisterSet@setting+1,c
 18345  002C18  0E26               	movlw	38
 18346  002C1A  6E02               	movwf	i2RegisterSet@setting,c
 18347  002C1C  EC61  F019         	call	i2_RegisterSet	;wreg free
 18348                           
 18349                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
 18350  002C20  0E20               	movlw	32
 18351  002C22  6E56               	movwf	_RF_Mode,c
 18352                           
 18353                           ;drv_mrf_miwi_89xa.c: 685: break;
 18354  002C24  0C20               	retlw	32
 18355  002C26                     i2l7196:
 18356                           
 18357                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x00);
 18358  002C26  6A03               	clrf	i2RegisterSet@setting+1,c
 18359  002C28  0E06               	movlw	6
 18360  002C2A  6E02               	movwf	i2RegisterSet@setting,c
 18361  002C2C  EC61  F019         	call	i2_RegisterSet	;wreg free
 18362                           
 18363                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
 18364  002C30  6A56               	clrf	_RF_Mode,c
 18365                           
 18366                           ;drv_mrf_miwi_89xa.c: 689: break;
 18367  002C32  0012               	return	
 18368  002C34                     i2l7202:
 18369  002C34  5005               	movf	i2SetRFMode@mode,w,c
 18370                           
 18371                           ; Switch size 1, requested type "speed"
 18372                           ; Number of cases is 5, Range of values is 0 to 128
 18373                           ; switch strategies available:
 18374                           ; Name         Instructions Cycles
 18375                           ; simple_byte           16     9 (average)
 18376                           ;	Chosen strategy is simple_byte
 18377  002C36  E0F7               	bz	i2l7196
 18378  002C38  0A20               	xorlw	32	; case 32
 18379  002C3A  E0ED               	bz	i2l7192
 18380  002C3C  0A60               	xorlw	96	; case 64
 18381  002C3E  E0E3               	bz	i2l7188
 18382  002C40  0A20               	xorlw	32	; case 96
 18383  002C42  E0D9               	bz	i2l7184
 18384  002C44  0AE0               	xorlw	224	; case 128
 18385  002C46  E0CF               	bz	i2l7180
 18386  002C48  0012               	return		;funcret
 18387  002C4A                     __end_ofi2_SetRFMode:
 18388                           	opt stack 0
 18389                           tblptru	equ	0xFF8
 18390                           tblptrh	equ	0xFF7
 18391                           tblptrl	equ	0xFF6
 18392                           tablat	equ	0xFF5
 18393                           prodh	equ	0xFF4
 18394                           prodl	equ	0xFF3
 18395                           intcon	equ	0xFF2
 18396                           intcon2	equ	0xFF1
 18397                           intcon3	equ	0xFF0
 18398                           postinc0	equ	0xFEE
 18399                           wreg	equ	0xFE8
 18400                           indf1	equ	0xFE7
 18401                           postinc1	equ	0xFE6
 18402                           postdec1	equ	0xFE5
 18403                           fsr1h	equ	0xFE2
 18404                           fsr1l	equ	0xFE1
 18405                           indf2	equ	0xFDF
 18406                           postinc2	equ	0xFDE
 18407                           postdec2	equ	0xFDD
 18408                           fsr2h	equ	0xFDA
 18409                           fsr2l	equ	0xFD9
 18410                           status	equ	0xFD8
 18411                           
 18412 ;; *************** function i2_RegisterSet *****************
 18413 ;; Defined at:
 18414 ;;		line 164 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 18415 ;; Parameters:    Size  Location     Type
 18416 ;;  setting         2    1[COMRAM] unsigned int 
 18417 ;; Auto vars:     Size  Location     Type
 18418 ;;  RegisterSet     1    3[COMRAM] unsigned char 
 18419 ;; Return value:  Size  Location     Type
 18420 ;;		None               void
 18421 ;; Registers used:
 18422 ;;		wreg, status,2, cstack
 18423 ;; Tracked objects:
 18424 ;;		On entry : 0/0
 18425 ;;		On exit  : 0/0
 18426 ;;		Unchanged: 0/0
 18427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18431 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18432 ;;Total ram usage:        3 bytes
 18433 ;; Hardware stack levels used:    1
 18434 ;; Hardware stack levels required when called:    1
 18435 ;; This function calls:
 18436 ;;		i2_SPI1_Exchange8bit
 18437 ;; This function is called by:
 18438 ;;		i2_TxPacket
 18439 ;;		i2_SetRFMode
 18440 ;; This function uses a non-reentrant model
 18441 ;;
 18442                           
 18443                           	psect	text82
 18444  0032C2                     __ptext82:
 18445                           	opt stack 0
 18446  0032C2                     i2_RegisterSet:
 18447                           	opt stack 12
 18448                           
 18449                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT3IE;
 18450                           
 18451                           ;incstack = 0
 18452  0032C2  0E00               	movlw	0
 18453  0032C4  BAF0               	btfsc	intcon3,5,c	;volatile
 18454  0032C6  0E01               	movlw	1
 18455  0032C8  6E04               	movwf	i2RegisterSet@IRQ1select,c
 18456                           
 18457                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT3IE = 0;
 18458  0032CA  9AF0               	bcf	intcon3,5,c	;volatile
 18459                           
 18460                           ;drv_mrf_miwi_89xa.c: 173: LATEbits.LATE1 = 0;
 18461  0032CC  928D               	bcf	3981,1,c	;volatile
 18462                           
 18463                           ;drv_mrf_miwi_89xa.c: 174: SPI1_Exchange8bit((uint8_t)(setting >> 8));
 18464  0032CE  5003               	movf	i2RegisterSet@setting+1,w,c
 18465  0032D0  EC66  F01A         	call	i2_SPI1_Exchange8bit
 18466                           
 18467                           ;drv_mrf_miwi_89xa.c: 175: SPI1_Exchange8bit((uint8_t)setting);
 18468  0032D4  5002               	movf	i2RegisterSet@setting,w,c
 18469  0032D6  EC66  F01A         	call	i2_SPI1_Exchange8bit
 18470                           
 18471                           ;drv_mrf_miwi_89xa.c: 176: LATEbits.LATE1 = 1;
 18472  0032DA  828D               	bsf	3981,1,c	;volatile
 18473                           
 18474                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT3IE = IRQ1select;
 18475  0032DC  B004               	btfsc	i2RegisterSet@IRQ1select,0,c
 18476  0032DE  D002               	bra	i2u574_45
 18477  0032E0  9AF0               	bcf	intcon3,5,c	;volatile
 18478  0032E2  D001               	bra	i2u574_46
 18479  0032E4                     i2u574_45:
 18480  0032E4  8AF0               	bsf	intcon3,5,c	;volatile
 18481  0032E6                     i2u574_46:
 18482  0032E6  0012               	return		;funcret
 18483  0032E8                     __end_ofi2_RegisterSet:
 18484                           	opt stack 0
 18485                           tblptru	equ	0xFF8
 18486                           tblptrh	equ	0xFF7
 18487                           tblptrl	equ	0xFF6
 18488                           tablat	equ	0xFF5
 18489                           prodh	equ	0xFF4
 18490                           prodl	equ	0xFF3
 18491                           intcon	equ	0xFF2
 18492                           intcon2	equ	0xFF1
 18493                           intcon3	equ	0xFF0
 18494                           postinc0	equ	0xFEE
 18495                           wreg	equ	0xFE8
 18496                           indf1	equ	0xFE7
 18497                           postinc1	equ	0xFE6
 18498                           postdec1	equ	0xFE5
 18499                           fsr1h	equ	0xFE2
 18500                           fsr1l	equ	0xFE1
 18501                           indf2	equ	0xFDF
 18502                           postinc2	equ	0xFDE
 18503                           postdec2	equ	0xFDD
 18504                           fsr2h	equ	0xFDA
 18505                           fsr2l	equ	0xFD9
 18506                           status	equ	0xFD8
 18507                           
 18508 ;; *************** function i2_RegisterRead *****************
 18509 ;; Defined at:
 18510 ;;		line 200 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 18511 ;; Parameters:    Size  Location     Type
 18512 ;;  address         1    wreg     unsigned char 
 18513 ;; Auto vars:     Size  Location     Type
 18514 ;;  address         1    1[COMRAM] unsigned char 
 18515 ;;  RegisterRead    1    3[COMRAM] unsigned char 
 18516 ;;  RegisterRead    1    2[COMRAM] unsigned char 
 18517 ;; Return value:  Size  Location     Type
 18518 ;;                  1    wreg      unsigned char 
 18519 ;; Registers used:
 18520 ;;		wreg, status,2, status,0, cstack
 18521 ;; Tracked objects:
 18522 ;;		On entry : 0/0
 18523 ;;		On exit  : 0/0
 18524 ;;		Unchanged: 0/0
 18525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18527 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18529 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18530 ;;Total ram usage:        3 bytes
 18531 ;; Hardware stack levels used:    1
 18532 ;; Hardware stack levels required when called:    1
 18533 ;; This function calls:
 18534 ;;		i2_SPI1_Exchange8bit
 18535 ;; This function is called by:
 18536 ;;		_high_isr
 18537 ;;		i2_TxPacket
 18538 ;; This function uses a non-reentrant model
 18539 ;;
 18540                           
 18541                           	psect	text83
 18542  0031A2                     __ptext83:
 18543                           	opt stack 0
 18544  0031A2                     i2_RegisterRead:
 18545                           	opt stack 13
 18546                           
 18547                           ;incstack = 0
 18548                           ;i2RegisterRead@address stored from wreg
 18549  0031A2  6E02               	movwf	i2RegisterRead@address,c
 18550                           
 18551                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 18552                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT3IE;
 18553  0031A4  0E00               	movlw	0
 18554  0031A6  BAF0               	btfsc	intcon3,5,c	;volatile
 18555  0031A8  0E01               	movlw	1
 18556  0031AA  6E04               	movwf	i2RegisterRead@IRQ1select,c
 18557                           
 18558                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT3IE = 0;
 18559  0031AC  9AF0               	bcf	intcon3,5,c	;volatile
 18560                           
 18561                           ;drv_mrf_miwi_89xa.c: 211: LATEbits.LATE1 = 0;
 18562  0031AE  928D               	bcf	3981,1,c	;volatile
 18563                           
 18564                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 18565  0031B0  8C02               	bsf	i2RegisterRead@address,6,c
 18566                           
 18567                           ;drv_mrf_miwi_89xa.c: 213: SPI1_Exchange8bit(address);
 18568  0031B2  5002               	movf	i2RegisterRead@address,w,c
 18569  0031B4  EC66  F01A         	call	i2_SPI1_Exchange8bit
 18570                           
 18571                           ;drv_mrf_miwi_89xa.c: 214: value = SPI1_Exchange8bit(0x00);
 18572  0031B8  0E00               	movlw	0
 18573  0031BA  EC66  F01A         	call	i2_SPI1_Exchange8bit
 18574  0031BE  6E03               	movwf	i2RegisterRead@value,c
 18575                           
 18576                           ;drv_mrf_miwi_89xa.c: 215: LATEbits.LATE1 = 1;
 18577  0031C0  828D               	bsf	3981,1,c	;volatile
 18578                           
 18579                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT3IE = IRQ1select;
 18580  0031C2  B004               	btfsc	i2RegisterRead@IRQ1select,0,c
 18581  0031C4  D002               	bra	i2u626_45
 18582  0031C6  9AF0               	bcf	intcon3,5,c	;volatile
 18583  0031C8  D001               	bra	i2u626_46
 18584  0031CA                     i2u626_45:
 18585  0031CA  8AF0               	bsf	intcon3,5,c	;volatile
 18586  0031CC                     i2u626_46:
 18587                           
 18588                           ;drv_mrf_miwi_89xa.c: 222: return value;
 18589  0031CC  5003               	movf	i2RegisterRead@value,w,c
 18590  0031CE  0012               	return		;funcret
 18591  0031D0                     __end_ofi2_RegisterRead:
 18592                           	opt stack 0
 18593                           tblptru	equ	0xFF8
 18594                           tblptrh	equ	0xFF7
 18595                           tblptrl	equ	0xFF6
 18596                           tablat	equ	0xFF5
 18597                           prodh	equ	0xFF4
 18598                           prodl	equ	0xFF3
 18599                           intcon	equ	0xFF2
 18600                           intcon2	equ	0xFF1
 18601                           intcon3	equ	0xFF0
 18602                           postinc0	equ	0xFEE
 18603                           wreg	equ	0xFE8
 18604                           indf1	equ	0xFE7
 18605                           postinc1	equ	0xFE6
 18606                           postdec1	equ	0xFE5
 18607                           fsr1h	equ	0xFE2
 18608                           fsr1l	equ	0xFE1
 18609                           indf2	equ	0xFDF
 18610                           postinc2	equ	0xFDE
 18611                           postdec2	equ	0xFDD
 18612                           fsr2h	equ	0xFDA
 18613                           fsr2l	equ	0xFD9
 18614                           status	equ	0xFD8
 18615                           
 18616 ;; *************** function i2_SPI1_Exchange8bit *****************
 18617 ;; Defined at:
 18618 ;;		line 51 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/spi.c"
 18619 ;; Parameters:    Size  Location     Type
 18620 ;;  data            1    wreg     unsigned char 
 18621 ;; Auto vars:     Size  Location     Type
 18622 ;;  data            1    0[COMRAM] unsigned char 
 18623 ;; Return value:  Size  Location     Type
 18624 ;;                  1    wreg      unsigned char 
 18625 ;; Registers used:
 18626 ;;		wreg, status,2
 18627 ;; Tracked objects:
 18628 ;;		On entry : 0/0
 18629 ;;		On exit  : 0/0
 18630 ;;		Unchanged: 0/0
 18631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18636 ;;Total ram usage:        1 bytes
 18637 ;; Hardware stack levels used:    1
 18638 ;; This function calls:
 18639 ;;		Nothing
 18640 ;; This function is called by:
 18641 ;;		_high_isr
 18642 ;;		i2_RegisterSet
 18643 ;;		i2_RegisterRead
 18644 ;;		i2_WriteFIFO
 18645 ;; This function uses a non-reentrant model
 18646 ;;
 18647                           
 18648                           	psect	text84
 18649  0034CC                     __ptext84:
 18650                           	opt stack 0
 18651  0034CC                     i2_SPI1_Exchange8bit:
 18652                           	opt stack 13
 18653                           
 18654                           ;incstack = 0
 18655                           ;i2SPI1_Exchange8bit@data stored from wreg
 18656  0034CC  6E01               	movwf	i2SPI1_Exchange8bit@data,c
 18657                           
 18658                           ;spi.c: 53: SSP1CON1bits.WCOL = 0;
 18659  0034CE  9EC6               	bcf	4038,7,c	;volatile
 18660                           
 18661                           ;spi.c: 55: SSP1BUF = data;
 18662  0034D0  C001  FFC9         	movff	i2SPI1_Exchange8bit@data,4041	;volatile
 18663  0034D4                     i2l890:
 18664  0034D4  A0C7               	btfss	4039,0,c	;volatile
 18665  0034D6  D7FE               	goto	i2l890
 18666                           
 18667                           ;spi.c: 58: }
 18668                           ;spi.c: 60: return (SSP1BUF);
 18669  0034D8  50C9               	movf	4041,w,c	;volatile
 18670  0034DA  0012               	return		;funcret
 18671  0034DC                     __end_ofi2_SPI1_Exchange8bit:
 18672                           	opt stack 0
 18673                           tblptru	equ	0xFF8
 18674                           tblptrh	equ	0xFF7
 18675                           tblptrl	equ	0xFF6
 18676                           tablat	equ	0xFF5
 18677                           prodh	equ	0xFF4
 18678                           prodl	equ	0xFF3
 18679                           intcon	equ	0xFF2
 18680                           intcon2	equ	0xFF1
 18681                           intcon3	equ	0xFF0
 18682                           postinc0	equ	0xFEE
 18683                           wreg	equ	0xFE8
 18684                           indf1	equ	0xFE7
 18685                           postinc1	equ	0xFE6
 18686                           postdec1	equ	0xFE5
 18687                           fsr1h	equ	0xFE2
 18688                           fsr1l	equ	0xFE1
 18689                           indf2	equ	0xFDF
 18690                           postinc2	equ	0xFDE
 18691                           postdec2	equ	0xFDD
 18692                           fsr2h	equ	0xFDA
 18693                           fsr2l	equ	0xFD9
 18694                           status	equ	0xFD8
 18695                           
 18696 ;; *************** function i2_MiWi_TickGet *****************
 18697 ;; Defined at:
 18698 ;;		line 114 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/symbol.c"
 18699 ;; Parameters:    Size  Location     Type
 18700 ;;		None
 18701 ;; Auto vars:     Size  Location     Type
 18702 ;;  MiWi_TickGet    4    6[COMRAM] struct _MIWI_TICK
 18703 ;;  MiWi_TickGet    1    5[COMRAM] unsigned char 
 18704 ;; Return value:  Size  Location     Type
 18705 ;;                  4    0[COMRAM] struct _MIWI_TICK
 18706 ;; Registers used:
 18707 ;;		wreg, status,2, status,0
 18708 ;; Tracked objects:
 18709 ;;		On entry : 0/2
 18710 ;;		On exit  : F/0
 18711 ;;		Unchanged: 0/0
 18712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18714 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18716 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18717 ;;Total ram usage:       10 bytes
 18718 ;; Hardware stack levels used:    1
 18719 ;; This function calls:
 18720 ;;		Nothing
 18721 ;; This function is called by:
 18722 ;;		_high_isr
 18723 ;;		i2_TxPacket
 18724 ;; This function uses a non-reentrant model
 18725 ;;
 18726                           
 18727                           	psect	text85
 18728  002E50                     __ptext85:
 18729                           	opt stack 0
 18730  002E50                     i2_MiWi_TickGet:
 18731                           	opt stack 14
 18732                           
 18733                           ;symbol.c: 116: MIWI_TICK currentTime;
 18734                           ;symbol.c: 119: uint8_t failureCounter;
 18735                           ;symbol.c: 122: PIE1bits.TMR1IE = 0;
 18736                           
 18737                           ;incstack = 0
 18738  002E50  909D               	bcf	3997,0,c	;volatile
 18739                           
 18740                           ;symbol.c: 125: currentTime.byte.b2 = 0;
 18741  002E52  6A09               	clrf	i2MiWi_TickGet@currentTime+2,c
 18742                           
 18743                           ;symbol.c: 126: currentTime.byte.b3 = 0;
 18744  002E54  6A0A               	clrf	i2MiWi_TickGet@currentTime+3,c
 18745                           
 18746                           ;symbol.c: 128: failureCounter = 0;
 18747  002E56  6A06               	clrf	i2MiWi_TickGet@failureCounter,c
 18748  002E58                     i2l934:
 18749                           
 18750                           ;symbol.c: 131: {
 18751                           ;symbol.c: 132: currentTime.byte.b0 = TMR1L;
 18752  002E58  CFCE F007          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 18753                           
 18754                           ;symbol.c: 133: currentTime.byte.b1 = TMR1H;
 18755  002E5C  CFCF F008          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 18756                           
 18757                           ;symbol.c: 134: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 18758  002E60  2807               	incf	i2MiWi_TickGet@currentTime,w,c
 18759  002E62  E108               	bnz	i2l937
 18760  002E64  2808               	incf	i2MiWi_TickGet@currentTime+1,w,c
 18761  002E66  E106               	bnz	i2l937
 18762  002E68  2A06               	incf	i2MiWi_TickGet@failureCounter,f,c
 18763  002E6A  0406               	decf	i2MiWi_TickGet@failureCounter,w,c
 18764  002E6C  6E05               	movwf	??i2_MiWi_TickGet& (0+255),c
 18765  002E6E  0E02               	movlw	2
 18766  002E70  6405               	cpfsgt	??i2_MiWi_TickGet,c
 18767  002E72  D7F2               	goto	i2l934
 18768  002E74                     i2l937:
 18769                           
 18770                           ;symbol.c: 138: if(PIR1bits.TMR1IF)
 18771  002E74  A09E               	btfss	3998,0,c	;volatile
 18772  002E76  D004               	goto	i2l7228
 18773                           
 18774                           ;symbol.c: 139: {
 18775                           ;symbol.c: 141: {
 18776                           ;symbol.c: 144: currentTime.byte.b2++;
 18777  002E78  2A09               	incf	i2MiWi_TickGet@currentTime+2,f,c
 18778                           
 18779                           ;symbol.c: 145: if(timerExtension1 == 0xFF)
 18780  002E7A  285B               	incf	_timerExtension1,w,c	;volatile
 18781  002E7C  E101               	bnz	i2l7228
 18782                           
 18783                           ;symbol.c: 146: {
 18784                           ;symbol.c: 147: currentTime.byte.b3++;
 18785  002E7E  2A0A               	incf	i2MiWi_TickGet@currentTime+3,f,c
 18786  002E80                     i2l7228:
 18787                           
 18788                           ;symbol.c: 148: }
 18789                           ;symbol.c: 149: }
 18790                           ;symbol.c: 150: }
 18791                           ;symbol.c: 153: currentTime.byte.b2 += timerExtension1;
 18792  002E80  505B               	movf	_timerExtension1,w,c	;volatile
 18793  002E82  2609               	addwf	i2MiWi_TickGet@currentTime+2,f,c
 18794                           
 18795                           ;symbol.c: 154: currentTime.byte.b3 += timerExtension2;
 18796  002E84  0100               	movlb	0	; () banked
 18797  002E86  51E7               	movf	_timerExtension2& (0+255),w,b	;volatile
 18798  002E88  260A               	addwf	i2MiWi_TickGet@currentTime+3,f,c
 18799                           
 18800                           ; BSR set to: 0
 18801                           ;symbol.c: 157: PIE1bits.TMR1IE = 1;
 18802  002E8A  809D               	bsf	3997,0,c	;volatile
 18803                           
 18804                           ; BSR set to: 0
 18805                           ;symbol.c: 159: return currentTime;
 18806  002E8C  C007  F001         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 18807  002E90  C008  F002         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 18808  002E94  C009  F003         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 18809  002E98  C00A  F004         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 18810                           
 18811                           ; BSR set to: 0
 18812  002E9C  0012               	return		;funcret
 18813  002E9E                     __end_ofi2_MiWi_TickGet:
 18814                           	opt stack 0
 18815                           tblptru	equ	0xFF8
 18816                           tblptrh	equ	0xFF7
 18817                           tblptrl	equ	0xFF6
 18818                           tablat	equ	0xFF5
 18819                           prodh	equ	0xFF4
 18820                           prodl	equ	0xFF3
 18821                           intcon	equ	0xFF2
 18822                           intcon2	equ	0xFF1
 18823                           intcon3	equ	0xFF0
 18824                           postinc0	equ	0xFEE
 18825                           wreg	equ	0xFE8
 18826                           indf1	equ	0xFE7
 18827                           postinc1	equ	0xFE6
 18828                           postdec1	equ	0xFE5
 18829                           fsr1h	equ	0xFE2
 18830                           fsr1l	equ	0xFE1
 18831                           indf2	equ	0xFDF
 18832                           postinc2	equ	0xFDE
 18833                           postdec2	equ	0xFDD
 18834                           fsr2h	equ	0xFDA
 18835                           fsr2l	equ	0xFD9
 18836                           status	equ	0xFD8
 18837                           
 18838 ;; *************** function i2_DELAY_10us *****************
 18839 ;; Defined at:
 18840 ;;		line 47 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/delay.c"
 18841 ;; Parameters:    Size  Location     Type
 18842 ;;  tenMicroSeco    4    0[COMRAM] unsigned long 
 18843 ;; Auto vars:     Size  Location     Type
 18844 ;;  DELAY_10us      4    0        volatile long 
 18845 ;; Return value:  Size  Location     Type
 18846 ;;		None               void
 18847 ;; Registers used:
 18848 ;;		None
 18849 ;; Tracked objects:
 18850 ;;		On entry : 0/0
 18851 ;;		On exit  : 0/0
 18852 ;;		Unchanged: 0/0
 18853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18855 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18857 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18858 ;;Total ram usage:        8 bytes
 18859 ;; Hardware stack levels used:    1
 18860 ;; This function calls:
 18861 ;;		Nothing
 18862 ;; This function is called by:
 18863 ;;		i2_TxPacket
 18864 ;; This function uses a non-reentrant model
 18865 ;;
 18866                           
 18867                           	psect	text86
 18868  003524                     __ptext86:
 18869                           	opt stack 0
 18870  003524                     i2_DELAY_10us:
 18871                           	opt stack 14
 18872                           
 18873                           ;delay.c: 53: {
 18874                           ;delay.c: 59: }
 18875                           
 18876                           ; BSR set to: 0
 18877                           ;incstack = 0
 18878  003524  0012               	return		;funcret
 18879  003526                     __end_ofi2_DELAY_10us:
 18880                           	opt stack 0
 18881                           tblptru	equ	0xFF8
 18882                           tblptrh	equ	0xFF7
 18883                           tblptrl	equ	0xFF6
 18884                           tablat	equ	0xFF5
 18885                           prodh	equ	0xFF4
 18886                           prodl	equ	0xFF3
 18887                           intcon	equ	0xFF2
 18888                           intcon2	equ	0xFF1
 18889                           intcon3	equ	0xFF0
 18890                           postinc0	equ	0xFEE
 18891                           wreg	equ	0xFE8
 18892                           indf1	equ	0xFE7
 18893                           postinc1	equ	0xFE6
 18894                           postdec1	equ	0xFE5
 18895                           fsr1h	equ	0xFE2
 18896                           fsr1l	equ	0xFE1
 18897                           indf2	equ	0xFDF
 18898                           postinc2	equ	0xFDE
 18899                           postdec2	equ	0xFDD
 18900                           fsr2h	equ	0xFDA
 18901                           fsr2l	equ	0xFD9
 18902                           status	equ	0xFD8
 18903                           
 18904 ;; *************** function _UserInterruptHandler *****************
 18905 ;; Defined at:
 18906 ;;		line 347 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/lcd.c"
 18907 ;; Parameters:    Size  Location     Type
 18908 ;;		None
 18909 ;; Auto vars:     Size  Location     Type
 18910 ;;		None
 18911 ;; Return value:  Size  Location     Type
 18912 ;;		None               void
 18913 ;; Registers used:
 18914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18915 ;; Tracked objects:
 18916 ;;		On entry : 0/0
 18917 ;;		On exit  : 0/0
 18918 ;;		Unchanged: 0/0
 18919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18924 ;;Total ram usage:        0 bytes
 18925 ;; Hardware stack levels used:    1
 18926 ;; Hardware stack levels required when called:    2
 18927 ;; This function calls:
 18928 ;;		_I2CTask
 18929 ;;		i2_DELAY_ms
 18930 ;; This function is called by:
 18931 ;;		_high_isr
 18932 ;; This function uses a non-reentrant model
 18933 ;;
 18934                           
 18935                           	psect	text87
 18936  003486                     __ptext87:
 18937                           	opt stack 0
 18938  003486                     _UserInterruptHandler:
 18939                           	opt stack 13
 18940                           
 18941                           ;lcd.c: 350: if( PIR3bits.SSP2IF )
 18942                           
 18943                           ;incstack = 0
 18944  003486  AEA4               	btfss	4004,7,c	;volatile
 18945  003488  0012               	return	
 18946                           
 18947                           ;lcd.c: 351: {
 18948                           ;lcd.c: 352: PIR3bits.SSP2IF = 0;
 18949  00348A  9EA4               	bcf	4004,7,c	;volatile
 18950                           
 18951                           ;lcd.c: 353: I2CTask();
 18952  00348C  ECBB  F013         	call	_I2CTask	;wreg free
 18953                           
 18954                           ;lcd.c: 354: DELAY_ms(5);
 18955  003490  6A02               	clrf	i2DELAY_ms@ms+1,c
 18956  003492  0E05               	movlw	5
 18957  003494  6E01               	movwf	i2DELAY_ms@ms,c
 18958  003496  EF57  F010         	goto	i2_DELAY_ms	;wreg free
 18959  00349A                     __end_of_UserInterruptHandler:
 18960                           	opt stack 0
 18961                           tblptru	equ	0xFF8
 18962                           tblptrh	equ	0xFF7
 18963                           tblptrl	equ	0xFF6
 18964                           tablat	equ	0xFF5
 18965                           prodh	equ	0xFF4
 18966                           prodl	equ	0xFF3
 18967                           intcon	equ	0xFF2
 18968                           intcon2	equ	0xFF1
 18969                           intcon3	equ	0xFF0
 18970                           postinc0	equ	0xFEE
 18971                           wreg	equ	0xFE8
 18972                           indf1	equ	0xFE7
 18973                           postinc1	equ	0xFE6
 18974                           postdec1	equ	0xFE5
 18975                           fsr1h	equ	0xFE2
 18976                           fsr1l	equ	0xFE1
 18977                           indf2	equ	0xFDF
 18978                           postinc2	equ	0xFDE
 18979                           postdec2	equ	0xFDD
 18980                           fsr2h	equ	0xFDA
 18981                           fsr2l	equ	0xFD9
 18982                           status	equ	0xFD8
 18983                           
 18984 ;; *************** function _I2CTask *****************
 18985 ;; Defined at:
 18986 ;;		line 66 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/lcd.c"
 18987 ;; Parameters:    Size  Location     Type
 18988 ;;		None
 18989 ;; Auto vars:     Size  Location     Type
 18990 ;;		None
 18991 ;; Return value:  Size  Location     Type
 18992 ;;		None               void
 18993 ;; Registers used:
 18994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18995 ;; Tracked objects:
 18996 ;;		On entry : 0/0
 18997 ;;		On exit  : 0/0
 18998 ;;		Unchanged: 0/0
 18999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19004 ;;Total ram usage:        0 bytes
 19005 ;; Hardware stack levels used:    1
 19006 ;; Hardware stack levels required when called:    1
 19007 ;; This function calls:
 19008 ;;		i2_DELAY_ms
 19009 ;; This function is called by:
 19010 ;;		_UserInterruptHandler
 19011 ;; This function uses a non-reentrant model
 19012 ;;
 19013                           
 19014                           	psect	text88
 19015  002776                     __ptext88:
 19016                           	opt stack 0
 19017  002776                     _I2CTask:
 19018                           	opt stack 13
 19019                           
 19020                           ;lcd.c: 69: if( CommandPtr < CommandLen || TextPtr < TextLen )
 19021                           
 19022                           ;incstack = 0
 19023  002776  5054               	movf	_CommandLen,w,c
 19024  002778  5C55               	subwf	_CommandPtr,w,c
 19025  00277A  E304               	bnc	i2l827
 19026  00277C  5058               	movf	_TextLen,w,c
 19027  00277E  5C59               	subwf	_TextPtr,w,c
 19028  002780  B0D8               	btfsc	status,0,c
 19029  002782  0012               	return	
 19030  002784                     i2l827:
 19031  002784  B071               	btfsc	3953,0,c	;volatile
 19032  002786  D7FE               	goto	i2l827
 19033                           
 19034                           ;lcd.c: 72: if( CommandPtr < CommandLen )
 19035  002788  5054               	movf	_CommandLen,w,c
 19036  00278A  5C55               	subwf	_CommandPtr,w,c
 19037  00278C  E215               	bc	i2l6920
 19038                           
 19039                           ;lcd.c: 73: {
 19040                           ;lcd.c: 74: SSP2BUF = LCDCommand[CommandPtr];
 19041  00278E  5055               	movf	_CommandPtr,w,c
 19042  002790  0F42               	addlw	low _LCDCommand
 19043  002792  6ED9               	movwf	fsr2l,c
 19044  002794  6ADA               	clrf	fsr2h,c
 19045  002796  50DF               	movf	indf2,w,c
 19046  002798  6E75               	movwf	3957,c	;volatile
 19047                           
 19048                           ;lcd.c: 76: {
 19049                           ;lcd.c: 77: CommandPtr++;
 19050  00279A  2A55               	incf	_CommandPtr,f,c
 19051                           
 19052                           ;lcd.c: 78: }
 19053                           ;lcd.c: 79: if( CommandPtr == CommandLen && TextLen == 0 )
 19054  00279C  5054               	movf	_CommandLen,w,c
 19055  00279E  1855               	xorwf	_CommandPtr,w,c
 19056  0027A0  A4D8               	btfss	status,2,c
 19057  0027A2  0012               	return	
 19058  0027A4  5058               	movf	_TextLen,w,c
 19059  0027A6  A4D8               	btfss	status,2,c
 19060  0027A8  0012               	return	
 19061  0027AA                     i2l6916:
 19062                           
 19063                           ;lcd.c: 80: {
 19064                           ;lcd.c: 82: SSP2CON2bits.PEN = 1;
 19065  0027AA  8471               	bsf	3953,2,c	;volatile
 19066                           
 19067                           ;lcd.c: 83: DELAY_ms(300);
 19068  0027AC  0E01               	movlw	1
 19069  0027AE  6E02               	movwf	i2DELAY_ms@ms+1,c
 19070  0027B0  0E2C               	movlw	44
 19071  0027B2  6E01               	movwf	i2DELAY_ms@ms,c
 19072  0027B4  EF57  F010         	goto	i2_DELAY_ms	;wreg free
 19073  0027B8                     i2l6920:
 19074                           
 19075                           ;lcd.c: 86: else if( TextPtr < TextLen )
 19076  0027B8  5058               	movf	_TextLen,w,c
 19077  0027BA  5C59               	subwf	_TextPtr,w,c
 19078  0027BC  B0D8               	btfsc	status,0,c
 19079  0027BE  0012               	return	
 19080                           
 19081                           ;lcd.c: 87: {
 19082                           ;lcd.c: 88: if( LCDText[TextPtr] == 0 )
 19083  0027C0  0E88               	movlw	low _LCDText
 19084  0027C2  2459               	addwf	_TextPtr,w,c
 19085  0027C4  6ED9               	movwf	fsr2l,c
 19086  0027C6  6ADA               	clrf	fsr2h,c
 19087  0027C8  0E01               	movlw	high _LCDText
 19088  0027CA  22DA               	addwfc	fsr2h,f,c
 19089  0027CC  50DF               	movf	indf2,w,c
 19090  0027CE  E108               	bnz	i2l834
 19091                           
 19092                           ;lcd.c: 89: {
 19093                           ;lcd.c: 90: LCDText[TextPtr] = ' ';
 19094  0027D0  0E88               	movlw	low _LCDText
 19095  0027D2  2459               	addwf	_TextPtr,w,c
 19096  0027D4  6ED9               	movwf	fsr2l,c
 19097  0027D6  6ADA               	clrf	fsr2h,c
 19098  0027D8  0E01               	movlw	high _LCDText
 19099  0027DA  22DA               	addwfc	fsr2h,f,c
 19100  0027DC  0E20               	movlw	32
 19101  0027DE  6EDF               	movwf	indf2,c
 19102  0027E0                     i2l834:
 19103                           
 19104                           ;lcd.c: 91: }
 19105                           ;lcd.c: 92: SSP2BUF = LCDText[TextPtr];
 19106  0027E0  0E88               	movlw	low _LCDText
 19107  0027E2  2459               	addwf	_TextPtr,w,c
 19108  0027E4  6ED9               	movwf	fsr2l,c
 19109  0027E6  6ADA               	clrf	fsr2h,c
 19110  0027E8  0E01               	movlw	high _LCDText
 19111  0027EA  22DA               	addwfc	fsr2h,f,c
 19112  0027EC  50DF               	movf	indf2,w,c
 19113  0027EE  6E75               	movwf	3957,c	;volatile
 19114                           
 19115                           ;lcd.c: 95: {
 19116                           ;lcd.c: 96: TextPtr++;
 19117  0027F0  2A59               	incf	_TextPtr,f,c
 19118                           
 19119                           ;lcd.c: 97: }
 19120                           ;lcd.c: 98: if( TextPtr == TextLen )
 19121  0027F2  5058               	movf	_TextLen,w,c
 19122  0027F4  1859               	xorwf	_TextPtr,w,c
 19123  0027F6  E0D9               	bz	i2l6916
 19124                           
 19125                           ;lcd.c: 99: {
 19126                           ;lcd.c: 101: SSP2CON2bits.PEN = 1;
 19127  0027F8  0012               	return		;funcret
 19128  0027FA                     __end_of_I2CTask:
 19129                           	opt stack 0
 19130                           tblptru	equ	0xFF8
 19131                           tblptrh	equ	0xFF7
 19132                           tblptrl	equ	0xFF6
 19133                           tablat	equ	0xFF5
 19134                           prodh	equ	0xFF4
 19135                           prodl	equ	0xFF3
 19136                           intcon	equ	0xFF2
 19137                           intcon2	equ	0xFF1
 19138                           intcon3	equ	0xFF0
 19139                           postinc0	equ	0xFEE
 19140                           wreg	equ	0xFE8
 19141                           indf1	equ	0xFE7
 19142                           postinc1	equ	0xFE6
 19143                           postdec1	equ	0xFE5
 19144                           fsr1h	equ	0xFE2
 19145                           fsr1l	equ	0xFE1
 19146                           indf2	equ	0xFDF
 19147                           postinc2	equ	0xFDE
 19148                           postdec2	equ	0xFDD
 19149                           fsr2h	equ	0xFDA
 19150                           fsr2l	equ	0xFD9
 19151                           status	equ	0xFD8
 19152                           
 19153 ;; *************** function i2_DELAY_ms *****************
 19154 ;; Defined at:
 19155 ;;		line 108 in file "../src/system_config/8bitwdk_pic18f46j50_89xa/delay.c"
 19156 ;; Parameters:    Size  Location     Type
 19157 ;;  ms              2    0[COMRAM] unsigned int 
 19158 ;; Auto vars:     Size  Location     Type
 19159 ;;  DELAY_ms        4   10[COMRAM] long 
 19160 ;; Return value:  Size  Location     Type
 19161 ;;		None               void
 19162 ;; Registers used:
 19163 ;;		wreg, status,2, status,0, prodl, prodh
 19164 ;; Tracked objects:
 19165 ;;		On entry : 0/0
 19166 ;;		On exit  : 0/0
 19167 ;;		Unchanged: 0/0
 19168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19170 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19171 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19172 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19173 ;;Total ram usage:       14 bytes
 19174 ;; Hardware stack levels used:    1
 19175 ;; This function calls:
 19176 ;;		Nothing
 19177 ;; This function is called by:
 19178 ;;		_I2CTask
 19179 ;;		_UserInterruptHandler
 19180 ;; This function uses a non-reentrant model
 19181 ;;
 19182                           
 19183                           	psect	text89
 19184  0020AE                     __ptext89:
 19185                           	opt stack 0
 19186  0020AE                     i2_DELAY_ms:
 19187                           	opt stack 14
 19188                           
 19189                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000)/4)/1000) * ms;
 19190                           
 19191                           ;incstack = 0
 19192  0020AE  5001               	movf	i2DELAY_ms@ms,w,c
 19193  0020B0  6E03               	movwf	??i2_DELAY_ms& (0+255),c
 19194  0020B2  5002               	movf	i2DELAY_ms@ms+1,w,c
 19195  0020B4  6E04               	movwf	(??i2_DELAY_ms+1)& (0+255),c
 19196  0020B6  6A05               	clrf	(??i2_DELAY_ms+2)& (0+255),c
 19197  0020B8  6A06               	clrf	(??i2_DELAY_ms+3)& (0+255),c
 19198  0020BA  0ED0               	movlw	208
 19199  0020BC  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 19200  0020BE  CFF3 F007          	movff	prodl,??i2_DELAY_ms+4
 19201  0020C2  CFF4 F008          	movff	prodh,??i2_DELAY_ms+5
 19202  0020C6  6A09               	clrf	(??i2_DELAY_ms+6)& (0+255),c
 19203  0020C8  6A0A               	clrf	(??i2_DELAY_ms+7)& (0+255),c
 19204  0020CA  0204               	mulwf	(??i2_DELAY_ms+1)& (0+255),c
 19205  0020CC  50F3               	movf	prodl,w,c
 19206  0020CE  2608               	addwf	(??i2_DELAY_ms+5)& (0+255),f,c
 19207  0020D0  50F4               	movf	prodh,w,c
 19208  0020D2  2209               	addwfc	(??i2_DELAY_ms+6)& (0+255),f,c
 19209  0020D4  0E00               	movlw	0
 19210  0020D6  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 19211  0020D8  0E07               	movlw	7
 19212  0020DA  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 19213  0020DC  50F3               	movf	prodl,w,c
 19214  0020DE  2608               	addwf	(??i2_DELAY_ms+5)& (0+255),f,c
 19215  0020E0  50F4               	movf	prodh,w,c
 19216  0020E2  2209               	addwfc	(??i2_DELAY_ms+6)& (0+255),f,c
 19217  0020E4  0E00               	movlw	0
 19218  0020E6  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 19219  0020E8  0ED0               	movlw	208
 19220  0020EA  0205               	mulwf	(??i2_DELAY_ms+2)& (0+255),c
 19221  0020EC  50F3               	movf	prodl,w,c
 19222  0020EE  2609               	addwf	(??i2_DELAY_ms+6)& (0+255),f,c
 19223  0020F0  50F4               	movf	prodh,w,c
 19224  0020F2  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 19225  0020F4  0E07               	movlw	7
 19226  0020F6  0204               	mulwf	(??i2_DELAY_ms+1)& (0+255),c
 19227  0020F8  50F3               	movf	prodl,w,c
 19228  0020FA  2609               	addwf	(??i2_DELAY_ms+6)& (0+255),f,c
 19229  0020FC  50F4               	movf	prodh,w,c
 19230  0020FE  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 19231  002100  0E00               	movlw	0
 19232  002102  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 19233  002104  50F3               	movf	prodl,w,c
 19234  002106  2609               	addwf	(??i2_DELAY_ms+6)& (0+255),f,c
 19235  002108  50F4               	movf	prodh,w,c
 19236  00210A  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 19237  00210C  0ED0               	movlw	208
 19238  00210E  0206               	mulwf	(??i2_DELAY_ms+3)& (0+255),c
 19239  002110  50F3               	movf	prodl,w,c
 19240  002112  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 19241  002114  0E07               	movlw	7
 19242  002116  0205               	mulwf	(??i2_DELAY_ms+2)& (0+255),c
 19243  002118  50F3               	movf	prodl,w,c
 19244  00211A  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 19245  00211C  0E00               	movlw	0
 19246  00211E  0204               	mulwf	(??i2_DELAY_ms+1)& (0+255),c
 19247  002120  50F3               	movf	prodl,w,c
 19248  002122  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 19249  002124  0E00               	movlw	0
 19250  002126  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 19251  002128  50F3               	movf	prodl,w,c
 19252  00212A  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 19253  00212C  C007  F00B         	movff	??i2_DELAY_ms+4,i2DELAY_ms@cyclesRequiredForEntireDelay
 19254  002130  C008  F00C         	movff	??i2_DELAY_ms+5,i2DELAY_ms@cyclesRequiredForEntireDelay+1
 19255  002134  C009  F00D         	movff	??i2_DELAY_ms+6,i2DELAY_ms@cyclesRequiredForEntireDelay+2
 19256  002138  C00A  F00E         	movff	??i2_DELAY_ms+7,i2DELAY_ms@cyclesRequiredForEntireDelay+3
 19257                           
 19258                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 19259  00213C  0E56               	movlw	86
 19260  00213E  260B               	addwf	i2DELAY_ms@cyclesRequiredForEntireDelay,f,c
 19261  002140  0EFF               	movlw	255
 19262  002142  220C               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 19263  002144  220D               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 19264  002146  220E               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 19265                           
 19266                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 19267  002148  BE0E               	btfsc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 19268  00214A  0CFF               	retlw	255
 19269  00214C  500E               	movf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 19270  00214E  100D               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 19271  002150  100C               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 19272  002152  E10B               	bnz	i2l759
 19273  002154  0EC4               	movlw	196
 19274  002156  5C0B               	subwf	i2DELAY_ms@cyclesRequiredForEntireDelay,w,c
 19275  002158  E208               	bc	i2l759
 19276  00215A  0012               	return	
 19277  00215C                     i2l760:
 19278                           
 19279                           ;delay.c: 128: {
 19280                           ;delay.c: 129: __nop();
 19281  00215C  F000               	nop	
 19282                           
 19283                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 19284  00215E  0ED9               	movlw	217
 19285  002160  260B               	addwf	i2DELAY_ms@cyclesRequiredForEntireDelay,f,c
 19286  002162  0EFF               	movlw	255
 19287  002164  220C               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 19288  002166  220D               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 19289  002168  220E               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 19290  00216A                     i2l759:
 19291  00216A  BE0E               	btfsc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 19292  00216C  0012               	return	
 19293  00216E  500E               	movf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 19294  002170  100D               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 19295  002172  100C               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 19296  002174  E1F3               	bnz	i2l760
 19297  002176  040B               	decf	i2DELAY_ms@cyclesRequiredForEntireDelay,w,c
 19298  002178  E2F1               	bc	i2l760
 19299  00217A  0012               	return		;funcret
 19300  00217C                     __end_ofi2_DELAY_ms:
 19301                           	opt stack 0
 19302                           tblptru	equ	0xFF8
 19303                           tblptrh	equ	0xFF7
 19304                           tblptrl	equ	0xFF6
 19305                           tablat	equ	0xFF5
 19306                           prodh	equ	0xFF4
 19307                           prodl	equ	0xFF3
 19308                           intcon	equ	0xFF2
 19309                           intcon2	equ	0xFF1
 19310                           intcon3	equ	0xFF0
 19311                           postinc0	equ	0xFEE
 19312                           wreg	equ	0xFE8
 19313                           indf1	equ	0xFE7
 19314                           postinc1	equ	0xFE6
 19315                           postdec1	equ	0xFE5
 19316                           fsr1h	equ	0xFE2
 19317                           fsr1l	equ	0xFE1
 19318                           indf2	equ	0xFDF
 19319                           postinc2	equ	0xFDE
 19320                           postdec2	equ	0xFDD
 19321                           fsr2h	equ	0xFDA
 19322                           fsr2l	equ	0xFD9
 19323                           status	equ	0xFD8
 19324                           tblptru	equ	0xFF8
 19325                           tblptrh	equ	0xFF7
 19326                           tblptrl	equ	0xFF6
 19327                           tablat	equ	0xFF5
 19328                           prodh	equ	0xFF4
 19329                           prodl	equ	0xFF3
 19330                           intcon	equ	0xFF2
 19331                           intcon2	equ	0xFF1
 19332                           intcon3	equ	0xFF0
 19333                           postinc0	equ	0xFEE
 19334                           wreg	equ	0xFE8
 19335                           indf1	equ	0xFE7
 19336                           postinc1	equ	0xFE6
 19337                           postdec1	equ	0xFE5
 19338                           fsr1h	equ	0xFE2
 19339                           fsr1l	equ	0xFE1
 19340                           indf2	equ	0xFDF
 19341                           postinc2	equ	0xFDE
 19342                           postdec2	equ	0xFDD
 19343                           fsr2h	equ	0xFDA
 19344                           fsr2l	equ	0xFD9
 19345                           status	equ	0xFD8
 19346                           
 19347                           	psect	rparam
 19348  0000                     tblptru	equ	0xFF8
 19349                           tblptrh	equ	0xFF7
 19350                           tblptrl	equ	0xFF6
 19351                           tablat	equ	0xFF5
 19352                           prodh	equ	0xFF4
 19353                           prodl	equ	0xFF3
 19354                           intcon	equ	0xFF2
 19355                           intcon2	equ	0xFF1
 19356                           intcon3	equ	0xFF0
 19357                           postinc0	equ	0xFEE
 19358                           wreg	equ	0xFE8
 19359                           indf1	equ	0xFE7
 19360                           postinc1	equ	0xFE6
 19361                           postdec1	equ	0xFE5
 19362                           fsr1h	equ	0xFE2
 19363                           fsr1l	equ	0xFE1
 19364                           indf2	equ	0xFDF
 19365                           postinc2	equ	0xFDE
 19366                           postdec2	equ	0xFDD
 19367                           fsr2h	equ	0xFDA
 19368                           fsr2l	equ	0xFD9
 19369                           status	equ	0xFD8
 19370                           
 19371                           	psect	temp
 19372  00005C                     btemp:
 19373                           	opt stack 0
 19374  00005C                     	ds	1
 19375  0000                     int$flags	set	btemp
 19376                           tblptru	equ	0xFF8
 19377                           tblptrh	equ	0xFF7
 19378                           tblptrl	equ	0xFF6
 19379                           tablat	equ	0xFF5
 19380                           prodh	equ	0xFF4
 19381                           prodl	equ	0xFF3
 19382                           intcon	equ	0xFF2
 19383                           intcon2	equ	0xFF1
 19384                           intcon3	equ	0xFF0
 19385                           postinc0	equ	0xFEE
 19386                           wreg	equ	0xFE8
 19387                           indf1	equ	0xFE7
 19388                           postinc1	equ	0xFE6
 19389                           postdec1	equ	0xFE5
 19390                           fsr1h	equ	0xFE2
 19391                           fsr1l	equ	0xFE1
 19392                           indf2	equ	0xFDF
 19393                           postinc2	equ	0xFDE
 19394                           postdec2	equ	0xFDD
 19395                           fsr2h	equ	0xFDA
 19396                           fsr2l	equ	0xFD9
 19397                           status	equ	0xFD8


Data Sizes:
    Strings     1324
    Constant    284
    Data        20
    BSS         741
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     53      91
    BANK0           160    103     159
    BANK1           256      0     193
    BANK2           256      0     194
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    sprintf$3828	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_61(CODE[17]), STR_60(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_59(CODE[12]), STR_58(CODE[20]), STR_57(CODE[17]), STR_56(CODE[22]), 
		 -> STR_55(CODE[22]), STR_54(CODE[25]), STR_53(CODE[11]), STR_52(CODE[11]), 
		 -> STR_51(CODE[28]), STR_50(CODE[22]), STR_49(CODE[17]), STR_48(CODE[32]), 
		 -> STR_47(CODE[33]), STR_46(CODE[16]), STR_37(CODE[29]), STR_34(CODE[31]), 
		 -> STR_31(CODE[32]), STR_16(CODE[30]), STR_15(CODE[17]), STR_14(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 33
		 -> STR_59(CODE[12]), STR_58(CODE[20]), STR_53(CODE[11]), STR_52(CODE[11]), 
		 -> STR_51(CODE[28]), STR_48(CODE[32]), STR_47(CODE[33]), STR_46(CODE[16]), 
		 -> STR_37(CODE[29]), STR_34(CODE[31]), STR_31(CODE[32]), STR_16(CODE[30]), 

    Read_MAC_Address@myAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    EEPROM_Read@dest	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    CONSOLE_PutString@str	PTR unsigned char  size(2) Largest target is 66
		 -> STR_45(CODE[19]), STR_44(CODE[46]), STR_43(CODE[24]), STR_42(CODE[3]), 
		 -> STR_41(CODE[7]), STR_40(CODE[26]), STR_39(CODE[28]), STR_38(CODE[9]), 
		 -> STR_36(CODE[3]), STR_35(CODE[29]), STR_33(CODE[3]), STR_32(CODE[30]), 
		 -> STR_30(CODE[5]), STR_29(CODE[60]), STR_28(CODE[66]), STR_27(CODE[66]), 
		 -> STR_26(CODE[62]), STR_25(CODE[64]), STR_24(CODE[23]), STR_23(CODE[31]), 
		 -> STR_22(CODE[27]), STR_21(CODE[27]), STR_20(CODE[24]), STR_19(CODE[27]), 
		 -> STR_18(CODE[27]), STR_17(CODE[23]), STR_13(CODE[3]), STR_12(CODE[5]), 
		 -> STR_11(CODE[3]), STR_10(CODE[14]), STR_9(CODE[50]), STR_8(CODE[3]), 
		 -> STR_7(CODE[5]), STR_6(CODE[3]), STR_5(CODE[14]), STR_4(CODE[48]), 
		 -> STR_3(CODE[12]), STR_2(CODE[19]), STR_1(CODE[23]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 280
		 -> ConnectionTable(BIGRAM[280]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    SW_Ack_SrED@Dest_Addr	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 280
		 -> ConnectionTable(BIGRAM[280]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 280
		 -> ConnectionTable(BIGRAM[280]), NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 280
		 -> ConnectionTable(BIGRAM[280]), NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S834$Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket(BANK2[114]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    S834$SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket(BANK2[114]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    Forward_Packet_PANCr_to_EDy@fw_payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    Forward_Packet_PANCr_to_EDy@EDxAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    store_connection_tb@payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    Find_Index@DestAddr	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    NVMalloc@location	PTR unsigned int  size(1) Largest target is 2
		 -> nvmmyIndex(BANK0[2]), nvmRole(BANK0[2]), nvmEdc(BANK0[2]), nvmOutFrameCounter(BANK0[2]), 
		 -> nvmConnectionTable(BANK0[2]), nvmConnMode(BANK0[2]), nvmCurrentChannel(BANK0[2]), nvmMyPANID(BANK0[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 280
		 -> myConnectionIndex_in_PanCo(BANK0[1]), currentChannel(BANK0[1]), ConnMode(BANK0[1]), role(BANK0[1]), 
		 -> conn_size(BANK0[1]), ConnectionTable(BIGRAM[280]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 280
		 -> myConnectionIndex_in_PanCo(BANK0[1]), currentChannel(BANK0[1]), ConnMode(BANK0[1]), role(BANK0[1]), 
		 -> conn_size(BANK0[1]), ConnectionTable(BIGRAM[280]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 35
		 -> TxBuffer(BANK1[35]), 

    S279$DestAddress	PTR unsigned char  size(2) Largest target is 280
		 -> ConnectionTable(BIGRAM[280]), NULL(NULL[0]), RxPacket(BANK2[114]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 280
		 -> ConnectionTable(BIGRAM[280]), NULL(NULL[0]), RxPacket(BANK2[114]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S38$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S293$Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket(BANK2[114]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    S293$SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket(BANK2[114]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_TxPacket
    i2_TxPacket->i2_MiWi_TickGet
    i2_WriteFIFO->i2_SPI1_Exchange8bit
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPI1_Exchange8bit
    i2_RegisterRead->i2_SPI1_Exchange8bit
    _UserInterruptHandler->i2_DELAY_ms
    _I2CTask->i2_DELAY_ms

Critical Paths under _main in BANK0

    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _Run_Demo->_run_star_demo
    _run_star_demo->_MiApp_EstablishConnection
    _STAR_DEMO_OPTIONS_MESSAGE->_LCDDisplay
    _MiApp_TransceiverPowerState->_P2PTasks
    _MiMAC_PowerState->_DELAY_ms
    _CheckForData->_SendPacket
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_MiApp_EstablishConnection
    _Read_MAC_Address->_EEPROM_Read
    _EEPROM_Read->_SPI1_Exchange8bit
    _MiApp_ProtocolInit->_MiMAC_Init
    _NVMRead->_SPI1_Exchange8bit
    _NVMInit->_NVMalloc
    _MiMAC_Init->_DELAY_ms
    _MiApp_SetChannel->_NVMWrite
    _MiMAC_SetChannel->_SetRFMode
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_Forward_Packet_PANCr_to_EDy
    _store_connection_tb->_handle_lost_connection
    _SW_Ack_SrED->_SendPacket
    _MiMAC_ReceivedPacket->_MiWi_TickGet
    _Forward_Packet_PANCr_to_EDy->_MiApp_UnicastConnection
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_TxPacket
    _TxPacket->_MiWi_TickGet
    _WriteFIFO->_SPI1_Exchange8bit
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPI1_Exchange8bit
    _RegisterRead->_SPI1_Exchange8bit
    _DemoOutput_UnicastFail->_LCDDisplay
    _AddConnection->_NVMWrite
    _MiApp_ConnectionMode->_NVMWrite
    _NVMWrite->_SPI1_Exchange8bit
    _DumpConnection->_CONSOLE_PutString
    _CONSOLE_PrintHex->_CONSOLE_Put
    _DemoOutput_Instruction->_LCDDisplay
    _DemoOutput_ChannelError->_CONSOLE_PrintDec
    _DemoOutput_Channel->_LCDDisplay
    _CONSOLE_PrintDec->___lbdiv
    ___lbdiv->___lbmod
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Update->_I2CWrite
    _CONSOLE_PutString->_EUSART2_Write

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  685326
                                            102 BANK0      1     1      0
                _DemoOutput_Greeting
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                      1     1      0   16983
                                             52 BANK0      1     1      0
                      _ButtonPressed
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2003
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2003
                           _DELAY_ms
                           _I2CWrite
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0  455002
                      _run_star_demo
 ---------------------------------------------------------------------------------
 (2) _run_star_demo                                       13    13      0  455002
                                             90 BANK0     12    12      0
                      _ButtonPressed
                       _CheckForData
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
                         _LCDDisplay
                          _LCD_Erase
                         _LCD_Update
               _MiApp_ConnectionMode
               _MiApp_DiscardMessage
          _MiApp_EstablishConnection
             _MiApp_MessageAvailable
                   _MiApp_SetChannel
        _MiApp_TransceiverPowerState
            _MiApp_UnicastConnection
                  _MiApp_UnicastStar
                       _MiWi_TickGet
          _STAR_DEMO_OPTIONS_MESSAGE
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _STAR_DEMO_OPTIONS_MESSAGE                            1     1      0   16253
                                             52 BANK0      1     1      0
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastStar                                   14    14      0   90897
                                             73 BANK0     13    13      0
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_TransceiverPowerState                          1     1      0   99293
                                             73 BANK0      1     1      0
                       _CheckForData
                   _MiMAC_PowerState
                           _NVMWrite
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (4) _MiMAC_PowerState                                     2     2      0    3870
                                             14 BANK0      2     2      0
                           _DELAY_ms
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (4) _CheckForData                                         2     2      0   12337
                                             49 BANK0      2     2      0
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _DemoOutput_UpdateTxRx                                2     1      1   10366
                                             49 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (4) _LCDTRXCount                                          2     1      1   10161
                                             47 BANK0      2     1      1
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     682
                                             10 BANK0      8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      1     1      0  188690
                                             90 BANK0      1     1      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
             _DemoOutput_Instruction
                     _DumpConnection
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
                           _NVMWrite
                   _Read_MAC_Address
 ---------------------------------------------------------------------------------
 (2) _Read_MAC_Address                                     5     3      2    1908
                                              6 BANK0      5     3      2
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          5     1      4    1107
                                              1 BANK0      5     1      4
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   5     5      0   24063
                                             18 BANK0      5     5      0
                   _MiApp_SetChannel
                         _MiMAC_Init
                            _NVMInit
                            _NVMRead
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              7     1      6    2034
                                              1 BANK0      7     1      6
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    2124
                                              5 BANK0      1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             5     2      3    2062
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           4     1      3    6100
                                             14 BANK0      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _MiApp_SetChannel                                     1     1      0    8757
                                             10 BANK0      1     1      0
                   _MiMAC_SetChannel
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (4) _MiMAC_SetChannel                                     3     2      1    4231
                                              5 BANK0      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _MiApp_EstablishConnection                           18    17      1   91481
                                             73 BANK0     17    16      1
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0   78602
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            20    20      0   78602
                                             62 BANK0     11    11      0
                      _AddConnection
                  _CONSOLE_PutString
                         _Find_Index
        _Forward_Packet_PANCr_to_EDy
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                       _MiWi_TickGet
                           _NVMWrite
                        _SW_Ack_SrED
                         _SendPacket
                      _isSameAddress
                _store_connection_tb
 ---------------------------------------------------------------------------------
 (6) _store_connection_tb                                  8     6      2     975
                                              7 BANK0      6     4      2
             _handle_lost_connection
 ---------------------------------------------------------------------------------
 (7) _handle_lost_connection                               7     7      0     192
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (6) _SW_Ack_SrED                                          2     0      2   11734
                                             49 BANK0      2     0      2
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                15    15      0    1432
                                             10 BANK0     14    14      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (6) _Forward_Packet_PANCr_to_EDy                          7     2      5   33964
                                             55 BANK0      7     2      5
             _DemoOutput_UnicastFail
            _MiApp_UnicastConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_UnicastConnection                              2     1      1   12316
                                             53 BANK0      2     1      1
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (8) _MiApp_UnicastAddress                                 4     0      4   11948
                                             49 BANK0      4     0      4
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _SendPacket                                          10     6      4   11571
                                             39 BANK0     10     6      4
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (5) _MiMAC_SendPacket                                     9     3      6    7212
                                             30 BANK0      9     3      6
                           _TxPacket
 ---------------------------------------------------------------------------------
 (6) _TxPacket                                            20    19      1    5925
                                             10 BANK0     20    19      1
                         _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (7) _WriteFIFO                                            2     2      0     132
                                              1 BANK0      2     2      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SetRFMode                                            1     1      0    2013
                                              4 BANK0      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (8) _RegisterSet                                          3     1      2    1971
                                              1 BANK0      3     1      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _RegisterRead                                         3     3      0     186
                                              1 BANK0      3     3      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _MiWi_TickGet                                        10     6      4     586
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (7) _DELAY_10us                                           8     4      4     265
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (7) _DemoOutput_UnicastFail                               0     0      0   20917
                  _CONSOLE_PutString
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (6) _Find_Index                                           5     3      2     483
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        7     7      0    6687
                                             10 BANK0      7     7      0
                           _NVMWrite
                  _Total_Connections
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     3      4     990
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0     276
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MiApp_ConnectionMode                                 2     2      0    4526
                                             10 BANK0      2     2      0
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (6) _NVMWrite                                             9     3      6    4442
                                              1 BANK0      9     3      6
                           _MacroNop
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (8) _SPI1_Exchange8bit                                    1     1      0      42
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DumpConnection                                       5     5      0    6266
                                              4 BANK0      5     5      0
                   _CONSOLE_PrintHex
                  _CONSOLE_PutString
 ---------------------------------------------------------------------------------
 (3) _CONSOLE_PrintHex                                     2     2      0     270
                                              1 BANK0      2     2      0
                        _CONSOLE_Put
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Instruction                               0     0      0   16211
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0    6348
                                             11 BANK0      1     1      0
                   _CONSOLE_PrintDec
                  _CONSOLE_PutString
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   24646
                                             52 BANK0      2     1      1
                   _CONSOLE_PrintDec
                  _CONSOLE_PutString
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (3) _CONSOLE_PrintDec                                     3     3      0    1600
                                              8 BANK0      3     3      0
                        _CONSOLE_Put
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (4) ___lbmod                                              4     3      1     764
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     584
                                              4 BANK0      4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _CONSOLE_Put                                          1     1      0      42
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   22594
                  _CONSOLE_PutString
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   16211
                                             47 BANK0      5     1      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    27     12    9492
                                             12 BANK0     35    23     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     138
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     566
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     566
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1068
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           0     0      0     326
                           _I2CWrite
 ---------------------------------------------------------------------------------
 (4) _I2CWrite                                             2     1      1     326
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            1     1      0     138
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                            14    12      2    1677
                                              0 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 (8) _CONSOLE_PutString                                    3     1      2    4706
                                              1 BANK0      3     1      2
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART2_Write                                        1     1      0      42
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _high_isr                                           23    23      0    3300
                                             30 COMRAM    23    23      0
               _UserInterruptHandler
                     i2_MiWi_TickGet
                     i2_RegisterRead
                i2_SPI1_Exchange8bit
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (16) i2_TxPacket                                         20    19      1    1273
                                             10 COMRAM    20    19      1
                       i2_DELAY_10us
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (17) i2_WriteFIFO                                         2     2      0      67
                                              1 COMRAM     2     2      0
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (17) i2_SetRFMode                                         1     1      0     267
                                              4 COMRAM     1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (18) i2_RegisterSet                                       3     1      2     245
                                              1 COMRAM     3     1      2
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (17) i2_RegisterRead                                      3     3      0      91
                                              1 COMRAM     3     3      0
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (18) i2_SPI1_Exchange8bit                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) i2_MiWi_TickGet                                     10     6      4     222
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (17) i2_DELAY_10us                                        8     4      4      95
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (16) _UserInterruptHandler                                0     0      0     296
                            _I2CTask
                         i2_DELAY_ms
 ---------------------------------------------------------------------------------
 (17) _I2CTask                                             0     0      0     148
                         i2_DELAY_ms
 ---------------------------------------------------------------------------------
 (17) i2_DELAY_ms                                         14    12      2     148
                                              0 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DemoOutput_Greeting
     _CONSOLE_PutString
       _EUSART2_Write
     _DELAY_ms
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
       _LCD_Update
         _I2CWrite
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _Initialize_Demo
     _DemoOutput_Channel
       _CONSOLE_PrintDec
         _CONSOLE_Put
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _CONSOLE_PutString
         _EUSART2_Write
       _DELAY_ms
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
         _LCD_Update
           _I2CWrite
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DemoOutput_ChannelError
       _CONSOLE_PrintDec
         _CONSOLE_Put
         ___lbdiv
           ___lbmod (ARG)
         ___lbmod
       _CONSOLE_PutString
         _EUSART2_Write
     _DemoOutput_Instruction
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
         _LCD_Update
           _I2CWrite
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DumpConnection
       _CONSOLE_PrintHex
         _CONSOLE_Put
       _CONSOLE_PutString
         _EUSART2_Write
     _MiApp_ConnectionMode
       _NVMWrite
         _MacroNop
         _SPI1_Exchange8bit
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _Total_Connections
             _isSameAddress
           _CONSOLE_PutString
             _EUSART2_Write
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _CONSOLE_PutString
                 _EUSART2_Write
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                 _LCD_Update
                   _I2CWrite
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPI1_Exchange8bit
                       _RegisterSet
                         _SPI1_Exchange8bit
                       _SetRFMode
                         _RegisterSet
                           _SPI1_Exchange8bit
                       _WriteFIFO
                         _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
           _MiWi_TickGet
           _NVMWrite
             _MacroNop
             _SPI1_Exchange8bit
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _TxPacket
             _DELAY_10us
             _MiWi_TickGet
             _RegisterRead
               _SPI1_Exchange8bit
             _RegisterSet
               _SPI1_Exchange8bit
             _SetRFMode
               _RegisterSet
                 _SPI1_Exchange8bit
             _WriteFIFO
               _SPI1_Exchange8bit
     _MiApp_ProtocolInit
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPI1_Exchange8bit
           _SetRFMode
             _RegisterSet
               _SPI1_Exchange8bit
         _NVMWrite
           _MacroNop
           _SPI1_Exchange8bit
       _MiMAC_Init
         _DELAY_ms
         _RegisterSet
           _SPI1_Exchange8bit
         _SetRFMode
           _RegisterSet
             _SPI1_Exchange8bit
       _NVMInit
         _NVMalloc
       _NVMRead
         _SPI1_Exchange8bit
       _NVMWrite
         _MacroNop
         _SPI1_Exchange8bit
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _RegisterSet
           _SPI1_Exchange8bit
         _SetRFMode
           _RegisterSet
             _SPI1_Exchange8bit
       _NVMWrite
         _MacroNop
         _SPI1_Exchange8bit
     _NVMWrite
       _MacroNop
       _SPI1_Exchange8bit
     _Read_MAC_Address
       _EEPROM_Read
         _SPI1_Exchange8bit
   _Run_Demo
     _run_star_demo
       _ButtonPressed
         _MiWi_TickGet
       _CheckForData
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPI1_Exchange8bit
               _RegisterSet
                 _SPI1_Exchange8bit
               _SetRFMode
                 _RegisterSet
                   _SPI1_Exchange8bit
               _WriteFIFO
                 _SPI1_Exchange8bit
       _DELAY_ms
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _LCD_Erase
           _LCD_Update
             _I2CWrite
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
         _LCD_Update
           _I2CWrite
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _LCD_Erase
       _LCD_Update
         _I2CWrite
       _MiApp_ConnectionMode
         _NVMWrite
           _MacroNop
           _SPI1_Exchange8bit
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_EstablishConnection
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPI1_Exchange8bit
               _Total_Connections
               _isSameAddress
             _CONSOLE_PutString
               _EUSART2_Write
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _CONSOLE_PutString
                   _EUSART2_Write
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                   _LCD_Update
                     _I2CWrite
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                         _MiWi_TickGet
                         _RegisterRead
                           _SPI1_Exchange8bit
                         _RegisterSet
                           _SPI1_Exchange8bit
                         _SetRFMode
                           _RegisterSet
                             _SPI1_Exchange8bit
                         _WriteFIFO
                           _SPI1_Exchange8bit
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
             _isSameAddress
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPI1_Exchange8bit
               _RegisterSet
                 _SPI1_Exchange8bit
               _SetRFMode
                 _RegisterSet
                   _SPI1_Exchange8bit
               _WriteFIFO
                 _SPI1_Exchange8bit
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _Total_Connections
             _isSameAddress
           _CONSOLE_PutString
             _EUSART2_Write
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _CONSOLE_PutString
                 _EUSART2_Write
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                 _LCD_Update
                   _I2CWrite
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPI1_Exchange8bit
                       _RegisterSet
                         _SPI1_Exchange8bit
                       _SetRFMode
                         _RegisterSet
                           _SPI1_Exchange8bit
                       _WriteFIFO
                         _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
           _MiWi_TickGet
           _NVMWrite
             _MacroNop
             _SPI1_Exchange8bit
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _RegisterSet
             _SPI1_Exchange8bit
           _SetRFMode
             _RegisterSet
               _SPI1_Exchange8bit
         _NVMWrite
           _MacroNop
           _SPI1_Exchange8bit
       _MiApp_TransceiverPowerState
         _CheckForData
           _MiWi_TickGet
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
         _MiMAC_PowerState
           _DELAY_ms
           _SetRFMode
             _RegisterSet
               _SPI1_Exchange8bit
         _NVMWrite
           _MacroNop
           _SPI1_Exchange8bit
         _P2PTasks
           _AddConnection
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _Total_Connections
             _isSameAddress
           _CONSOLE_PutString
             _EUSART2_Write
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _CONSOLE_PutString
                 _EUSART2_Write
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                 _LCD_Update
                   _I2CWrite
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPI1_Exchange8bit
                       _RegisterSet
                         _SPI1_Exchange8bit
                       _SetRFMode
                         _RegisterSet
                           _SPI1_Exchange8bit
                       _WriteFIFO
                         _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
           _MiWi_TickGet
           _NVMWrite
             _MacroNop
             _SPI1_Exchange8bit
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
       _MiApp_UnicastStar
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPI1_Exchange8bit
               _Total_Connections
               _isSameAddress
             _CONSOLE_PutString
               _EUSART2_Write
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _CONSOLE_PutString
                   _EUSART2_Write
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                   _LCD_Update
                     _I2CWrite
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                         _MiWi_TickGet
                         _RegisterRead
                           _SPI1_Exchange8bit
                         _RegisterSet
                           _SPI1_Exchange8bit
                         _SetRFMode
                           _RegisterSet
                             _SPI1_Exchange8bit
                         _WriteFIFO
                           _SPI1_Exchange8bit
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
             _isSameAddress
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPI1_Exchange8bit
               _RegisterSet
                 _SPI1_Exchange8bit
               _SetRFMode
                 _RegisterSet
                   _SPI1_Exchange8bit
               _WriteFIFO
                 _SPI1_Exchange8bit
       _MiWi_TickGet
       _STAR_DEMO_OPTIONS_MESSAGE
         _LCDDisplay
           _DELAY_ms
           _LCD_Erase
           _LCD_Update
             _I2CWrite
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
       _I2CWrite
   _TMR1_Initialize
     _TMR1_StartTimer
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
       _LCD_Update
         _I2CWrite
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit

 _high_isr (ROOT)
   _UserInterruptHandler
     _I2CTask
       i2_DELAY_ms
     i2_DELAY_ms
   i2_MiWi_TickGet
   i2_RegisterRead
     i2_SPI1_Exchange8bit
   i2_SPI1_Exchange8bit
   i2_TxPacket
     i2_DELAY_10us
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPI1_Exchange8bit
     i2_RegisterSet
       i2_SPI1_Exchange8bit
     i2_SetRFMode
       i2_RegisterSet
         i2_SPI1_Exchange8bit
     i2_WriteFIFO
       i2_SPI1_Exchange8bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0     118      35        7.4%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      C2      10       75.8%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C1       8       75.4%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     35      5B       1       96.8%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     27D       6        0.0%
DATA                 0      0     395       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 13 19:28:32 2016

                          _SPI1_Exchange8bit 349A                                   i2_TxPacket 1CFE  
                     _PUSH_BUTTON_press_time 0046                                            _i 00E5  
                             _LCD_Initialize 2F30                          P2PTasks@final_index 00A3  
                  __end_of_MiApp_UnicastStar 2A7C                         ?_MiMAC_DiscardPacket 0001  
                             ?_isSameAddress 0060                           ?_SPI1_Exchange8bit 0001  
                                         l80 1BE0                                           l81 1BE2  
                                         l82 1C1C                                           l94 1C6E  
                                         _t1 0155                                           _t2 0159  
                                         _t3 004E                                  ?_LCD_Update 0001  
                        ___wmul@multiplicand 0062                          MiApp_ProtocolInit@i 0076  
                               NVMRead@count 0065                                   _MiMAC_Init 237C  
                            _P2PCapacityInfo 00D9                                          l142 1E92  
                                        l143 1ECA                                          l137 1E4C  
                                        l161 1914                                          l155 188C  
                                        l513 2956                                          l522 2CFE  
                                        l506 2902                                          l443 140E  
                                        l364 2E44                                          l454 118C  
                                        l720 34F8                                          l641 19B2  
                                        l490 1424                                          l466 12C4  
                                        l707 34EC                                          l740 2B54  
                                        l661 303C                               ?i2_RegisterSet 0002  
                                        l486 1410                                          l494 1686  
                                        l591 1B44                                          l760 208C  
                                        l934 2DBE                                          l759 209C  
                                        l839 345E                                          l937 2DDA  
                                        l890 34A4                              _timer1ReloadVal 0052  
                        ??_SPI1_Exchange8bit 0060                                          _tt1 015D  
                                        _tt2 0161                              __end_of_I2CTask 27FA  
                            ??_AddConnection 006A                                  LCDDisplay@i 0093  
                                        prod 000FF3                                          wreg 000FE8  
                                 _TXSTA2bits 000FA8                          __size_of_DELAY_10us 0002  
                                i2_WriteFIFO 3352                                NVMInit@result 0065  
                                ?i2_DELAY_ms 0001            __end_of_MiApp_EstablishConnection 1BD6  
                          _Total_Connections 2E02                                         l1100 29A0  
                                       l1320 0D18                                         l1324 0DF8  
                                       l1316 0C2C                                         l1443 07E6  
                                       l1363 03D6                                         l1460 098E  
                                       l1380 04E0                                         l1445 080C  
                                       l1437 0774                                         l1446 0810  
                                       l1199 2896                                         l1464 08F4  
                                       l1448 0830                                         l1394 0520  
                                       l1379 0516                                         l1397 055A  
                                       l1398 055E                                         l1903 3026  
                                       l1893 2EDE                              ?i2_RegisterRead 0001  
       __size_of_Forward_Packet_PANCr_to_EDy 0098                                         STR_1 FEB3  
                                       STR_2 FF1D                                         STR_3 FFC0  
                                       STR_4 FC0B                                         STR_5 FFA6  
                                       STR_6 FFB1                                         STR_7 FFAF  
                                       STR_8 FFF4                                         STR_9 FC09  
                                       _LATA 000F89                                         _LATB 000F8A  
                                       _LATD 000F8C                                         _LATE 000F8D  
                     __size_of_ButtonPressed 0080                    DemoOutput_Channel@channel 0095  
                                       i2l80 1D06                                         i2l81 1D08  
                                       i2l82 1D44                                         i2l94 1D8E  
                                       u9605 3222                                         u9606 3224  
                                       u9615 313A                                         u9616 313C  
                                       u9625 3298                                         u9626 329A  
                                       u9750 1CE2                                         u9808 1E30  
                                       u9790 1E2C                                         _TMR1 000FCE  
                                       u9980 2252                                         u9998 2256  
                  CONSOLE_PrintHex@PRINT_VAR 0061                                         _MiWi F9AF  
                         ?_Total_Connections 0001                                _EUSART2_Write 34F6  
                     MiApp_UnicastStar@SecEn 00AD                   MiMAC_SetChannel@offsetFreq 0065  
                                       _main 33B4                              __end_of_NVMInit 26F2  
                            __end_of_NVMRead 2DB4                                         _role 00FE  
                                       fsr1h 000FE2                                         fsr2h 000FDA  
                                       indf1 000FE7                                         fsr1l 000FE1  
                                       indf2 000FDF                                         fsr2l 000FD9  
                                       btemp 005C                           __size_of_LCD_Erase 001E  
                           __end_of_I2CWrite 3472                                         prodh 000FF4  
                                       prodl 000FF3                                         start 03B4  
                     __size_of_run_star_demo 04F6                    __end_of_SPI1_Exchange8bit 34AC  
                           __end_of_DELAY_ms 20AE                                 _sprintf$3821 007D  
                               _sprintf$3822 007F                                 _sprintf$3828 0081  
                        ??_Total_Connections 0060                       __end_of_LCD_Initialize 2F74  
                             _InitConfigRegs FA2D                                 high_isr@bAck 0030  
                            ?_DumpConnection 0001                                 ___param_bank 000010  
                      ??_MiMAC_DiscardPacket 0060                               NVMRead@oldRFIE 0067  
                           __end_of_P2PTasks 142A                 __end_of_MiApp_DiscardMessage 3512  
                              __CFG_PLLDIV$2 000000                                   _Find_Index 24AE  
                 MiMAC_PowerState@PowerState 006E                                        l11010 2532  
                                      l10202 1BEA                                        l11102 19A6  
                                      l10214 1C0A                                        l11008 2530  
                                      l10160 2B9C                                        l10152 2B7C  
                                      l10224 1C40                                        l10312 1EEE  
                                      l10304 1EBA                                        l11024 1F06  
                                      l12002 15B8                                        l11130 1A36  
                                      l10250 1CA6                                        l10234 1C64  
                                      l10306 1ECE                                        l11202 1104  
                                      l10500 0524                                        l12004 15C4  
                                      l11116 19B4                                        l11108 19AC  
                                      l10164 2BAC                                        l10156 2B8C  
                                      l10228 1C56                                        l11028 1F2C  
                                      l11212 1112                                        l10350 2EAE  
                                      l10334 3406                                        l10174 2BCA  
                                      l10246 1C9A                                        l10262 1CF0  
                                      l11062 2472                                        l11038 1FD2  
                                      l10424 3412                                        l10352 2EB6  
                                      l10600 06D8                                        l10512 0564  
                                      l12016 15DC                                        l12024 161E  
                                      l10168 2BBC                                        l10264 1CFA  
                                      l10248 1C9E                                        l11312 1350  
                                      l11304 12DE                                        l11208 110A  
                                      l11400 2D18                                        l10362 2ED4  
                                      l10354 2EBA                                        l10370 2FFE  
                                      l10506 0546                                        l10450 03EC  
                                      l12114 2AEE                                        l12106 2ABA  
                                      l10274 1E22                                        l11250 11A2  
                                      l12034 26F4                                        l10372 3006  
                                      l10620 0726                                        l10532 05C0  
                                      l10516 0574                                        l10524 059C  
                                      l10444 03E0                                        l11500 30BA  
                                      l10188 2DE6                                        l11076 24AA  
                                      l11228 114C                                        l11164 101A  
                                      l11412 2D34                                        l12204 0DEC  
                                      l10374 300A                                        l10710 0934  
                                      l10630 074E                                        l10614 0700  
                                      l10542 05EE                                        l10534 05D2  
                                      l10518 0584                                        l10462 0428  
                                      l10470 0480                                        l10446 03E4  
                                      l10454 03F2                                        l10438 03BE  
                                      l11502 30BE                                        l11094 1996  
                                      l11086 195C                                        l10294 1E82  
                                      l11326 1366                                        l11318 135A  
                                      l11262 1226                                        l11190 10EA  
                                      l11174 107A                                        l12230 0E7E  
                                      l12206 0DF4                                        l10712 093A  
                                      l10624 0738                                        l10616 0712  
                                      l10560 065C                                        l10528 05B0  
                                      l10448 03E8                                        l11512 30D6  
                                      l11520 3258                                        l10288 1E62  
                                      l11360 1418                                        l11344 13C0  
                                      l11336 138E                                        l11600 2D9E  
                                      l12048 2744                                        l11424 2D50  
                                      l12152 0BF0                                        l12144 0B8A  
                                      l12128 0AF6                                        l10378 301C  
                                      l10730 09CE                                        l10722 097A  
                                      l10706 0904                                        l10642 07AA  
                                      l10570 067C                                        l10538 05E0  
                                      l10490 04E4                                        l10546 05F4  
                                      l11098 199E                                        l10298 1E9A  
                                      l11274 124A                                        l11266 122E  
                                      l11354 13D4                                        l12226 0E76  
                                      l12170 0C34                                        l12162 0C1A  
                                      l10740 0A2C                                        l10636 0778  
                                      l10572 0680                                        l10564 066E  
                                      l10548 062E                                        l11508 30CE  
                                      l10804 22EA                                        l11276 1266  
                                      l11436 318A                                        l12252 0F08  
                                      l10750 0A7E                                        l10662 0840  
                                      l10494 0502                                        l10478 04A6  
                                      l11374 25E0                                        l12270 0F3C  
                                      l12254 0F0A                                        l12238 0EB6  
                                      l12246 0ED4                                        l12182 0DA4  
                                      l12262 0F1E                                        l10744 0A5E  
                                      l10736 0A08                                        l10728 0990  
                                      l10672 087E                                        l10656 082A  
                                      l10648 07EA                                        l10584 06A8  
                                      l10496 051A                                        l10760 0AAE  
                                      l11528 326E                                        l10832 2334  
                                      l10912 31F2                                        l11296 12CA  
                                      l11288 12AE                                        l11712 1AE2  
                                      l11704 1AB8                                        l11552 239E  
                                      l12192 0DC0                                        l12256 0F0C  
                                      l12176 0CAC                                        l12416 32F8  
                                      l10770 3332                                        l10754 0A92  
                                      l10746 0A70                                        l10690 08BC  
                                      l10586 06AC                                        l10762 0AC6  
                                      l10498 051E                                        l10906 31D2  
                                      l11634 3172                                        l11562 23BA  
                                      l12450 28B0                                        l12258 0F12  
                                      l12282 0FC0                                        l10772 3338  
                                      l10860 2E42                                        l11396 2D0E  
                                      l11660 2964                                        l11652 294A  
                                      l11644 2926                                        l12268 0F2E  
                                      l12196 0DC8                                        l12428 3304  
                                      l10678 0892                                        l10686 08B2  
                                      l10598 06D4                                        l10846 2368  
                                      l10854 2E06                                        l10950 188E  
                                      l10926 17D8                                        l11750 1B90  
                                      l11814 2F1C                                        l12462 28DA  
                                      l11662 2968                                        l11822 3384  
                                      l10696 08D8                                        l10792 2FA0  
                                      l11496 30B4                                        l10960 18DE  
                                      l10936 187E                                        l10880 2C80  
                                      l11760 1BBE                                        l11808 2F04  
                                      l11648 2938                                        l10874 2C54  
                                      l10882 2C84                                        l11594 2D82  
                                      l11666 296E                                        l11674 2A30  
                                      l11764 1BCA                                        l11684 2A74  
                                      l12484 33CC                                        l10966 1918  
                                      l11870 1636                                        l11846 29C2  
                                      l11854 29FC                                        l11686 2A78  
                                      l11952 14AA                                        l11928 1442  
                                      l11936 146E                                        l11880 168A  
                                      l11794 2B24                                        l11970 1506  
                                      l10994 24B2                                        l10978 194C  
                                      l11956 14E2                                        l11892 16B8  
                                      l11958 14EE                                        l11894 173E  
                                      l11896 178E                                        l11986 1556  
                                      l11978 1548                                        l11998 1580  
                                      ?_main 0001                              __end_of___lbdiv 30DA  
                                      STR_10 FFA6                                        STR_11 FFB1  
                                      STR_12 FFAF                                        STR_20 FE6D  
              MiApp_EstablishConnection@Mode 00A9                                        STR_13 FFF4  
                                      STR_21 FDD1                                        STR_30 FFF2  
                                      STR_14 FF85                                        STR_22 FE07  
                                      STR_15 FF74                                        STR_23 FCCA  
                                      STR_31 FC8A                                        STR_24 FE9C  
                                      STR_40 FE22                                        STR_16 FD26  
                                      STR_32 FD08                                        STR_33 FFF4  
                                      STR_41 FFEB                                        STR_17 FE85  
                                      STR_25 FB4F                                        STR_50 FEE0  
                                      STR_18 FDB6                                        STR_34 FCE9  
                                      STR_26 FB8F                                        STR_43 FE55  
                                      STR_19 FDEC                                        STR_51 FD7E  
                                      STR_35 FD44                                        STR_27 FB0D  
                                      STR_36 FFF4                                        STR_52 FFD7  
                                      STR_60 FF30                                        STR_44 FC3B  
                                      STR_28 FACB                                        STR_53 FFCC  
                                      STR_61 FF41                                        STR_45 FF0A  
                                      STR_37 FD61                                        STR_29 FBCD  
                                      STR_38 FFE2                                        STR_46 FF96  
                                      STR_54 FE3C                                        STR_55 FECA  
                                      STR_39 FD9A                                        STR_47 FC69  
                                      STR_56 FECA                                        STR_48 FCAA  
                                      STR_49 FF63                                        STR_57 FF52  
                                      STR_58 FEF6                                        STR_59 FFB4  
                            __end_of___lbmod 3276                              _TMR1_StartTimer 3516  
                                      u10000 226A                                        u10040 229E  
                                      u10025 2284                                        u10026 2288  
                                      u10018 226E                                        u10035 2290  
                                      u10036 2294                                        u10058 22A2  
                                      u11210 10C0                                        u11140 100C  
                                      u11205 10AE                                        u10430 07DC  
                                      u12110 0B46                                        u11207 10B2  
                                      u11160 105C                                        u12120 0BD8  
                                      u11235 10DA                                        u11228 10C4  
                                      u11237 10DE                                        u10630 0A92  
                                      u11190 1098                                        _T1CON 000FCD  
                                      u10725 2378                                        u10726 237A  
                                      u11198 109C                                        u11615 2DB0  
                                      u11616 2DB2                                        u12280 0F8A  
                                      u11730 1B20                                        u10860 186C  
                                      u11690 2A70                                        u11835 2F2C  
                                      u11836 2F2E                                        u11890 29FA  
                                      u11955 17AA                                        u11956 17AE  
                    ?_DemoOutput_Instruction 0001                              __end_of___lwdiv 2EE8  
                                      i2l200 015E                              __end_of___lwmod 3030  
                                      i2l210 026C                                        i2l191 0098  
                                      i2l184 007A                                        i2l186 00B0  
                                      i2l197 00D6                                        i2l760 215C  
                                      i2l834 27E0                                        i2l827 2784  
                                      i2l934 2E58                                        i2l759 216A  
                                      i2l937 2E74                                        i2l890 34D4  
                                      _TMR1H 000FCF                                        _TMR0L 000FD6  
                                      _TMR1L 000FCE                                        _TRISA 000F92  
                                      _TRISB 000F93                                        _TRISC 000F94  
                                      _TRISD 000F95                                        _TRISE 000F96  
                           SendPacket@tParam 008E                                   _CommandLen 0054  
                                 _CommandPtr 0055                        __size_of_CheckForData 005E  
                     ?_DemoOutput_UpdateTxRx 0091                            high_isr@BankIndex 0034  
                  __end_of_Total_Connections 2E50                                        _RxNum 00DE  
                     run_star_demo@select_ed 00C5                                        _TxNum 00E0  
                        __size_of_LCDDisplay 0040                __size_of_MiApp_ConnectionMode 003A  
                                      _awake 00E1                              __end_of_dpowers FAC3  
                           SendPacket@status 008C                   store_connection_tb@payload 0067  
              __size_of_MiApp_UnicastAddress 0014                                  _SW_Ack_SrED 3226  
                            __end_of_isdigit 340E                             __end_of_NVMWrite 237C  
                    __end_of_TMR1_Initialize 3446                               ?_EUSART2_Write 0001  
                           __end_of_NVMalloc 31A2                                        tablat 000FF5  
                             ButtonPressed@t 006E                  __end_ofi2_SPI1_Exchange8bit 34DC  
                        __size_of_LCD_Update 0016                                        status 000FD8  
                            __end_of_sprintf 0AD2          __end_of_MiApp_TransceiverPowerState 297E  
                _MiApp_TransceiverPowerState 28FE                              ___lbdiv@divisor 0064  
                     run_star_demo@update_ed 00C2                              ___lbdiv@counter 0066  
                     __end_of_InitConfigRegs FA6D                                ?i2_DELAY_10us 0001  
                  __size_of_MiMAC_SetChannel 0090                         __size_of_EEPROM_Read 0048  
                  __size_of_Read_MAC_Address 0084                  __end_of_DemoOutput_Greeting 2242  
                            ?_LCD_Initialize 0001                                 __end_of_MiWi FA2D  
                            __initialization 2542                              ??_isSameAddress 0064  
                                ?i2_TxPacket 000B                    __size_of_MiMAC_SendPacket 00E8  
       STAR_DEMO_OPTIONS_MESSAGE@NetworkRole 0094                             __end_of_MacroNop 3522  
                               __end_of_main 33D2                             _CONSOLE_PrintDec 2AFA  
                        __size_ofi2_DELAY_ms 00CE                             _CONSOLE_PrintHex 306A  
                    handle_lost_connection@i 0066                   __size_of_MiApp_UnicastStar 007E  
                             TxPacket@status 007C                                _ButtonPressed 297E  
                               _CheckForData 2CAA                                    ??_I2CTask 000F  
                            ??i2_RegisterSet 0004       MiApp_UnicastConnection@ConnectionIndex 0096  
             __end_of_DemoOutput_Instruction 34CC                                ??_RegisterSet 0063  
                          high_isr@PacketLen 0033                                       ??_main 00C6  
                                ?_MiMAC_Init 006E                      _DemoOutput_ChannelError 330C  
                              __activetblptr 000002                                 NVMWrite@addr 0063  
                          __end_of_LCD_Erase 342C                                _run_star_demo 0AD2  
                       __end_of_MiWi_TickGet 2E02                                _IRQ1_Received 00D6  
                    MiApp_SetChannel@channel 006A                         store_connection_tb@i 006C  
                       store_connection_tb@j 006B                             __end_of_TxPacket 1CFE  
               __size_of_store_connection_tb 00DC                             __end_of_Run_Demo 351E  
          MiApp_ProtocolInit@bNetworkFreezer 0072                         __size_of_CONSOLE_Put 000C  
                       _MiMAC_ReceivedPacket 17D6                              i2SetRFMode@mode 0005  
                                 _SendPacket 2242                                    ??_NVMInit 0065  
                                  ??_NVMRead 0067                                       _EECON2 000FA7  
                                     _ANCON0 000F48                                       _ANCON1 000F49  
                   ?_MiApp_UnicastConnection 0095                                       _T1GCON 000F9A  
                                     _MACSeq 00D8                               __CFG_WDTEN$OFF 000000  
                                     i2l7202 2C34                                       _INTCON 000FF2  
                                     i2l7228 2E80                                       i2l7180 2BE6  
                                     i2l7192 2C16                                       i2l7184 2BF6  
                                     i2l7600 01DC                                       i2l7520 0050  
                                     i2l7610 0206                                       i2l7602 01EE  
                                     i2l7196 2C26                                       i2l7188 2C06  
                                     i2l7540 0090                                       i2l7532 007C  
                                     i2l7462 1D76                                       i2l7438 1D12  
                                     i2l7630 024C                                       i2l7550 00BA  
                                     i2l6920 27B8                                       i2l7480 1DBA  
                                     i2l7448 1D32                                       i2l7640 026E  
                                     i2l7528 006E                                       i2l7482 1DBE  
                                     i2l7458 1D62                                       i2l6916 27AA  
                                     i2l7484 1DC4                                       i2l7468 1D84  
                                     i2l7652 02EA                                       i2l7646 02CE  
                                     i2l7582 012E                                       i2l7670 0378  
                                     i2l7496 1E0E                                       i2l7656 02F2  
                                     i2l7592 018C                                       i2l7672 037E  
                                     i2l7666 035A                                       i2l7586 0136  
                                     i2l7668 0370                                       i2l7676 0382  
                                     i2l7598 01DA                                       i2l7688 0394  
                                     _OSCCON 000FD3                                       _PVALUE FA6D  
                                     _RPINR3 000EE9                                       _RPOR17 000ED7  
                                     _SVALUE FA8D                                       _TXREG2 000FA9  
                  __size_of_MiMAC_PowerState 0056                      i2RegisterSet@IRQ1select 0004  
                      SPI1_Exchange8bit@data 0060                         __size_of_LCDTRXCount 003E  
                             ??i2_DELAY_10us 0005                __size_of_UserInterruptHandler 0014  
                               ??_DELAY_10us 0064                      ?_DemoOutput_UnicastFail 0001  
                 __size_of_SPI1_Exchange8bit 0012                                   TxPacket@t1 006F  
                                 TxPacket@t2 0073                                 i2DELAY_ms@ms 0001  
                         __size_of_SetRFMode 006C                               __CFG_XINST$OFF 000000  
                                     _TxData 00DF                             __end_of_high_isr 03B4  
                    __end_of_TMR1_StartTimer 351A                         CONSOLE_PutString@str 0061  
                                     ___wmul 329C                                    ??___lbdiv 0065  
                             ?_ButtonPressed 0001                                    ??___lbmod 0061  
                                     _hasAck 00E4                     __size_of_freezer_feature 0024  
                  __size_of_MiApp_SetChannel 0032                                    ??___lwdiv 0064  
                                  ??___lwmod 006B                                       _fix_me 00E3  
                                ?_Find_Index 0060                                       clear_0 254A  
                                     clear_1 255C                                       clear_2 2568  
                                     clear_3 2574                                       clear_4 2580  
                                     _nvmEdc 00EE                                 NVMalloc@size 0060  
                             ?_run_star_demo 0001                            high_isr@ackPacket 002C  
                                  ??_isdigit 0060                               LCDDisplay@text 008F  
                                  ?_I2CWrite 0060                                 __mediumconst F9AE  
                      ?_MiMAC_ReceivedPacket 0001                  __size_of_DemoOutput_Channel 007E  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                 __size_of_Total_Connections 004E                                       tblptru 000FF8  
                ??_MiApp_EstablishConnection 00AA                                    ?_DELAY_ms 0060  
                         __end_of_DELAY_10us 3524                          __end_of_RegisterSet 3226  
                            ??_EUSART2_Write 0060                                ?_RegisterRead 0001  
                        __size_ofi2_TxPacket 011C                                    ??_sprintf 0078  
                          _ReceivedBankIndex 00DD                             ___lbdiv@dividend 0065  
                               ?i2_SetRFMode 0001                             ?_TMR1_Initialize 0001  
                          _SYSTEM_Initialize 27FA                                    ?_P2PTasks 0001  
                            ___lbmod@divisor 0060                         _MiApp_DiscardMessage 350C  
                        _PUSH_BUTTON_pressed 00DB                                   __accesstop 0060  
                         __size_of_WriteFIFO 0026                      __end_of__initialization 25C6  
                            ___lbmod@counter 0062               __end_of_DemoOutput_UnicastFail 33F0  
                                  P2PTasks@i 00A8              MiMAC_ReceivedPacket@currentTick 0072  
                         ?_SYSTEM_Initialize 0001                          __size_of_MiMAC_Init 009A  
                              ___rparam_used 000001                               _chk_sel_status 00FC  
                           _LatestConnection 00D7                                 ??_LCDDisplay 0093  
                            NVMWrite@oldRFIE 0068                   _myConnectionIndex_in_PanCo 00FA  
                          high_isr@fifo_stat 002B                               __pcstackCOMRAM 0001  
      Forward_Packet_PANCr_to_EDy@fw_payload 0097                      CONSOLE_PrintDec@toPrint 006A  
                               __pidataBANK0 3512                                 __pidataBANK1 34AC  
                        ??_SYSTEM_Initialize 006E                        i2RegisterRead@address 0002  
                   __size_of_Initialize_Demo 0082                    ??_DemoOutput_ChannelError 006B  
                               ??_LCD_Update 0062                             ___lbdiv@quotient 0067  
                                  ?_NVMWrite 0061                      run_star_demo@switch_val 00C4  
               ?_Forward_Packet_PANCr_to_EDy 0097                                    ?_NVMalloc 0060  
                            TxPacket@rssival 007A                            _CONSOLE_PutString 3330  
                   CheckForData@firstuint8_t 0092                              _ConnectionTable 02C2  
                            __CFG_OSC$INTOSC 000000                             ??i2_RegisterRead 0002  
            __end_of_MiApp_UnicastConnection 310E                                   ??_I2CWrite 0061  
                         ?_CONSOLE_PutString 0061                            __end_of_SetRFMode 2BE2  
                               ?i2_WriteFIFO 0001                                 ??i2_DELAY_ms 0003  
                                 ??_DELAY_ms 0062                    _END_DEVICES_Short_Address 0200  
                             ??_RegisterRead 0061                                  ?_SendPacket 0087  
                         __end_of_LCDDisplay 2FB4                    __end_of_SYSTEM_Initialize 287C  
            MiApp_TransceiverPowerState@Mode 00A9                                 sprintf@width 008A  
                      isSameAddress@Address1 0060                        isSameAddress@Address2 0062  
                                  ?_MacroNop 0001                                   __pbssBANK0 00C7  
                                 __pbssBANK1 0100                                   __pbssBANK2 0200  
                      ?_MiApp_DiscardMessage 0001                          ??_CONSOLE_PutString 0063  
                                 ??_P2PTasks 009E                  __size_of_MiApp_ProtocolInit 01AE  
                              NVMWrite@count 0065                          __size_of_Find_Index 0094  
                           ??_DumpConnection 0064                           RegisterSet@setting 0061  
                         __end_of_LCD_Update 345C                    SendPacket@SecurityEnabled 008A  
                             isSameAddress@i 0066                          i2RegisterRead@value 0003  
                            P2PTasks@FW_Stat 00A2                             _MiMAC_SetChannel 25D4  
                      CheckForData@tmpTxData 0091                    _MiApp_EstablishConnection 1AA4  
                           _Read_MAC_Address 26F2                              ??_ButtonPressed 006A  
                         I2CWrite@Commandlen 0061                                    ?_TxPacket 006A  
                           _MiMAC_SendPacket 1E1A                                    ?_Run_Demo 0001  
                                    ?___wmul 0060                             ?_TMR1_StartTimer 0001  
                         __end_ofi2_DELAY_ms 217C                        __size_of_MiWi_TickGet 004E  
                                    _I2CTask 2776                              ??_run_star_demo 00BA  
                  __end_of_CONSOLE_PutString 3352                                   ??_NVMWrite 0067  
           run_star_demo@sw_layer_ack_status 00C1                                   ??_NVMalloc 0063  
                          __end_of_WriteFIFO 329C                      ??_DemoOutput_UpdateTxRx 0092  
                                _RegisterSet 31FC                            ??_freezer_feature 0094  
              ??_Forward_Packet_PANCr_to_EDy 009C                       ??_MiMAC_ReceivedPacket 006A  
                                    _LCDText 0188                         __end_ofi2_DELAY_10us 3526  
                      i2WriteFIFO@IRQ1select 0003                        __end_of_AddConnection 1AA4  
                                    _RPINR16 000EF6                                      _SSP2ADD 000F74  
                                    _SSP1BUF 000FC9                                      _SSP2BUF 000F75  
                               ?_SW_Ack_SrED 0091                                      _NVMInit 2664  
                                    _NVMRead 2D5E                     __end_of_CONSOLE_PrintDec 2B76  
                                    _RF_Mode 0056                                      _AckInfo 0137  
                   __end_of_CONSOLE_PrintHex 30A4                                    ?_high_isr 0001  
                                    _RSSIVal 0057                                   ??_MacroNop 0060  
         __size_of_STAR_DEMO_OPTIONS_MESSAGE 0020                      i2SPI1_Exchange8bit@data 0001  
                           ??_LCD_Initialize 006E                   ?_STAR_DEMO_OPTIONS_MESSAGE 0001  
                AddConnection@connectionSlot 006F                              _timerExtension1 005B  
                            _timerExtension2 00E7                                  TxPacket@CCA 006A  
                   MiApp_ConnectionMode@Mode 006B                             _MiMAC_PowerState 2D08  
                           _AdditionalNodeID 00FB                  __end_of_MiMAC_DiscardPacket 33B4  
                            P2PTasks@tmpTick 00A4                                   DELAY_ms@ms 0060  
                               _MiWi_TickGet 2DB4                                      __Hparam 0000  
                        _store_connection_tb 1F02                                      __Lparam 0000  
               __end_of_MiApp_ConnectionMode 306A                                 ??i2_TxPacket 000C  
                                 ??_TxPacket 006B                                      _TextLen 0058  
               __end_of_MiApp_UnicastAddress 3486                                      _TextPtr 0059  
                                 ??_Run_Demo 00C6                      __size_ofi2_MiWi_TickGet 004E  
                                    ___lbdiv 30A4                                      ___lbmod 324E  
                            __size_of___wmul 0026                             _MiApp_SetChannel 3142  
                        __size_of_SendPacket 009E                                      ___lwdiv 2E9E  
                                    ___lwmod 2FF2                     ??_handle_lost_connection 0060  
                                    __pcinit 2542               DemoOutput_ChannelError@channel 006B  
                                    __ramtop 0F00         __size_of_MiApp_TransceiverPowerState 0080  
                                    __ptext0 33B4                                      __ptext1 32E8  
                               ??_MiMAC_Init 0071                                      __ptext2 342C  
                                    __ptext3 3516                                      __ptext4 27FA  
                                    __ptext5 2F30                                      __ptext6 351A  
                                    __ptext7 0AD2                                      __ptext8 3374  
                                    __ptext9 29FE                            __end_of_hexpowers FACB  
                                  _T1CONbits 000FCD                                      _dpowers FAB9  
              Initialize_Demo@freezer_enable 00BA                     ??_MiApp_MessageAvailable 00A9  
                                    _rec_ack 00E6                                      _isdigit 33F0  
                    CONSOLE_PrintHex@toPrint 0062                            ??_Initialize_Demo 00BA  
                              _myLongAddress 01A9                         ?_store_connection_tb 0067  
                     DemoOutput_Channel@Step 0094                                      _nvmRole 00F4  
                     RegisterRead@IRQ1select 0063                                    _P2PStatus 00DA  
                                  _LCD_Erase 340E                   __size_of_SYSTEM_Initialize 0082  
                                    _sprintf 03B8                       ??_MiApp_DiscardMessage 0060  
                                 ??_high_isr 001F                           __end_ofi2_TxPacket 1E1A  
                       end_of_initialization 25C6                            __end_of_octpowers FAB9  
                              ??_EEPROM_Read 0065                MiMAC_SendPacket@MACPayloadLen 0083  
                              __Lmediumconst F9AE                         __size_ofi2_SetRFMode 0068  
                            LCDDisplay@delay 0092            i2DELAY_10us@tenMicroSecondCounter 0001  
            DELAY_10us@tenMicroSecondCounter 0060                                   _nvmMyPANID 00F0  
          __end_of_STAR_DEMO_OPTIONS_MESSAGE 3394                              LCDDisplay@value 0091  
                         __end_of_MiMAC_Init 2416                 __size_ofi2_SPI1_Exchange8bit 0010  
               MiApp_UnicastConnection@SecEn 0095             __size_of_MiApp_UnicastConnection 0034  
                    MiMAC_SetChannel@channel 0067                                      postdec1 000FE5  
                                    postdec2 000FDD                         __end_of_RegisterRead 3142  
                                    postinc0 000FEE                                      postinc1 000FE6  
                                    postinc2 000FDE                        __end_of_isSameAddress 31FC  
     i2DELAY_ms@cyclesRequiredForEntireDelay 000B         DELAY_ms@cyclesRequiredForEntireDelay 006A  
                        RegisterRead@address 0061                                WriteFIFO@Data 0061  
                               ??_Find_Index 0062                   run_star_demo@PressedButton 00C3  
                 __size_of_CONSOLE_PutString 0022                 __size_of_DemoOutput_Greeting 00C6  
                                  _PORTBbits 000F81                             NVMalloc@location 0062  
                      __end_ofi2_RegisterSet 32E8                 __end_of_UserInterruptHandler 349A  
                              ??_CONSOLE_Put 0060                        ??_store_connection_tb 0069  
                                 _nvmmyIndex 00F6                             ___lbmod@dividend 0061  
                                  _TRISAbits 000F92                                    _TRISBbits 000F93  
                                  _TRISCbits 000F94                                    _TRISDbits 000F95  
                                  _TRISEbits 000F96                                   ?_LCD_Erase 0001  
                    MiMAC_SendPacket@TxIndex 0085                            __size_of_I2CWrite 0016  
                                NVMRead@addr 0063                         __size_ofi2_WriteFIFO 0022  
                                NVMRead@dest 0061                            __size_of_DELAY_ms 00D0  
                              ??_LCDTRXCount 0090                                  ___lbmod@rem 0063  
                 MiMAC_SendPacket@transParam 007E                    MiApp_UnicastAddress@SecEn 0094  
                         __end_of_Find_Index 2542                               __end_of_PVALUE FA8D  
                          __size_of_P2PTasks 0462                               __end_of_SVALUE FAAD  
                                 LCD_Erase@i 0060                          __end_of_EEPROM_Read 2F30  
              freezer_feature@PressedButton1 0094                          DumpConnection@index 0066  
                             __end_of___wmul 32C2              __size_of_handle_lost_connection 0060  
                      __size_ofi2_DELAY_10us 0002           __size_of_MiApp_EstablishConnection 0132  
                 __end_of_DemoOutput_Channel 2AFA                    Read_MAC_Address@myAddress 0066  
                          __size_of_NVMWrite 009C              __size_of_MiApp_MessageAvailable 000A  
           MiMAC_ReceivedPacket@PayloadIndex 0076                     __end_of_MiMAC_SetChannel 2664  
                          __size_of_NVMalloc 002E                          start_initialization 2542  
                   __end_of_Read_MAC_Address 2776                                TxPacket@reTry 0078  
                        WriteFIFO@IRQ1select 0062                     __end_of_MiMAC_SendPacket 1F02  
                               ??_SendPacket 008B                         _MiApp_ConnectionMode 3030  
                         TxPacket@CCARetries 0077                   i2TxPacket@allowedTxFailure 001C  
                            high_isr@counter 0029                         _MiApp_UnicastAddress 3472  
                        __end_of_CONSOLE_Put 34F6                                    _SetRFMode 2B76  
                      __end_of_EUSART2_Write 3502                         __size_of_SW_Ack_SrED 0028  
          Forward_Packet_PANCr_to_EDy@status 009C                            __size_of_MacroNop 0004  
                             _currentChannel 00F9                                 i2_DELAY_10us 3524  
                                  TxPacket@i 007D                          __end_of_LCDTRXCount 2FF2  
MiApp_EstablishConnection@connectionInterval 00B0                     __size_of_TMR1_Initialize 001A  
                   ??_DemoOutput_Instruction 0094                              _freezer_feature 32E8  
                             i2_MiWi_TickGet 2E50                                     ??___wmul 0064  
          MiApp_UnicastAddress@PermanentAddr 0093                                  __pdataBANK0 00FB  
                                __pdataBANK1 01B1                            __size_of_TxPacket 0128  
                         __end_of_SendPacket 22E0                                     ?_I2CTask 0001  
                          __size_of_Run_Demo 0004                                 ?_RegisterSet 0061  
                   __end_of_MiMAC_PowerState 2D5E                            RegisterRead@value 0062  
             __size_of_DemoOutput_UpdateTxRx 000E                                  __pbssBIGRAM 02C2  
                    MiWi_TickGet@currentTime 0066                __end_of_DemoOutput_UpdateTxRx 34EA  
                                __pbssCOMRAM 0036                                    _WriteFIFO 3276  
                              __pcstackBANK0 0060                        ?_MiApp_ConnectionMode 0001  
                        SendPacket@Broadcast 008D                                  ??_LCD_Erase 0060  
     MiApp_UnicastAddress@DestinationAddress 0091                        ?_MiApp_UnicastAddress 0091  
                               _isdigit$4052 0061                                     ?_NVMInit 0001  
                 __end_of_MiApp_ProtocolInit 17D6                                     ?_NVMRead 0061  
                             NVMWrite@source 0061                   MiApp_EstablishConnection@i 00B9  
                        EUSART2_Write@txData 0060                     __end_of_MiApp_SetChannel 3174  
                          ?_CONSOLE_PrintDec 0001                                   ?_SetRFMode 0001  
                          ?_CONSOLE_PrintHex 0001                            Read_MAC_Address@i 006A  
                     _handle_lost_connection 2C4A                                  MiMAC_Init@i 0071  
                          __size_of_high_isr 03AC                           ??_CONSOLE_PrintDec 0068  
                                sprintf@flag 008D                           ??_CONSOLE_PrintHex 0061  
                ??_STAR_DEMO_OPTIONS_MESSAGE 0094                                  _EEPROM_Read 2EE8  
                                sprintf@prec 0089                        __size_of_RegisterRead 0034  
                     _MiApp_MessageAvailable 3502                 ?_MiApp_TransceiverPowerState 0001  
                       _UserInterruptHandler 3486                       __end_ofi2_MiWi_TickGet 2E9E  
                          I2CWrite@BufferLen 0060                            MiMAC_SendPacket@i 0086  
                           ___lwdiv@dividend 0060                      _MiApp_UnicastConnection 30DA  
                   ?_DemoOutput_ChannelError 0001                                    __pintcode 0008  
                              __pmediumconst F9AE                              _Initialize_Demo 287C  
                      __end_of_ButtonPressed 29FE                                     ?___lbdiv 0064  
                                   ?___lbmod 0060                                     ?___lwdiv 0060  
                                   ?___lwmod 0067                                    _end_nodes 00E2  
                              ?_CheckForData 0001                             _DataRequestTimer 003E  
                                  _conn_size 00F8                        __end_of_run_star_demo 0FC8  
               Forward_Packet_PANCr_to_EDy@i 009D                                  _CONSOLE_Put 34EA  
                   __size_of_TMR1_StartTimer 0004                                     ?_isdigit 0001  
                                   _I2CWrite 345C                                   ?_WriteFIFO 0001  
              __size_of_MiMAC_ReceivedPacket 0182                          i2_SPI1_Exchange8bit 34CC  
                                   _DELAY_ms 1FDE                                    _hexpowers FAC3  
                   ??_DemoOutput_UnicastFail 0094                             ___lwdiv@quotient 0065  
                                   ?_sprintf 006C                          NVMWrite@PageCounter 0069  
                               _RegisterRead 310E                                  _LCDTRXCount 2FB4  
                                   _P2PTasks 0FC8                          _DemoOutput_Greeting 217C  
                    __end_of_freezer_feature 330C                               ___wmul@product 0064  
                    __size_ofi2_RegisterRead 002E                                     _LATAbits 000F89  
                       i2RegisterSet@setting 0002                                     _LATCbits 000F8B  
                                   _LATDbits 000F8C                                     _LATEbits 000F8D  
                      ?_UserInterruptHandler 0001                                    _octpowers FAAD  
                                   _PIE1bits 000F9D                                     _PIE3bits 000FA3  
                 DemoOutput_UpdateTxRx@RxNum 0091                   DemoOutput_UpdateTxRx@TxNum 0092  
                            ?i2_MiWi_TickGet 0001                                     _PIR1bits 000F9E  
                                   _PIR3bits 000FA4                ??_MiApp_TransceiverPowerState 00A9  
                                   i2u626_45 31CA                                     i2u626_46 31CC  
                       ?i2_SPI1_Exchange8bit 0001                                     i2u627_45 3370  
                                   i2u627_46 3372                                     i2u646_40 1E00  
                                   i2u574_45 32E4                                     i2u574_46 32E6  
                                  _rxMessage 00C7                           _nvmConnectionTable 00EA  
                        high_isr@RxPacketPtr 0031              __size_of_DemoOutput_Instruction 0010  
                                   _SSP1CON1 000FC6                                     _SSP2CON1 000F72  
                                   _SSP2CON2 000F71                       __size_of_AddConnection 014C  
                             ??_CheckForData 0091                                     _SSP1STAT 000FC7  
                                   _SSP2STAT 000F73                 __size_of_MiMAC_DiscardPacket 0020  
                    __size_of_DumpConnection 01FE     MiApp_EstablishConnection@ActiveScanIndex 0001  
        __end_of_Forward_Packet_PANCr_to_EDy 24AE                  _Forward_Packet_PANCr_to_EDy 2416  
                                _MACRxPacket 0036                         ?_DemoOutput_Greeting 0001  
                                   _RSSILock 00DC                    _STAR_DEMO_OPTIONS_MESSAGE 3374  
                                   _NVMWrite 22E0                                  _MACTxBuffer 0100  
                          ??_TMR1_Initialize 0060                                SetRFMode@mode 0064  
                           __size_of_I2CTask 0084                                     _NVMalloc 3174  
                          ___wmul@multiplier 0060                               _CharacterArray 01B1  
                                  high_isr@i 0035                        i2TxPacket@TxPacketLen 0010  
                     ??_MiApp_ConnectionMode 006A                           main@freezer_enable 00C6  
                     ??_MiApp_UnicastAddress 0095                          SendPacket@isCommand 0089  
                       high_isr@ackInfoIndex 0032                               _nextEEPosition 00D4  
     DELAY_10us@cyclesRequiredForEntireDelay 0064                                     _ConnMode 00FD  
                                _INTCON2bits 000FF1                                  _INTCON3bits 000FF0  
             MiApp_EstablishConnection@retry 00AF        Forward_Packet_PANCr_to_EDy@EDxAddress 009A  
                                  copy_data0 259A                                    copy_data1 25BA  
                              ??i2_SetRFMode 0005                                  ??_SetRFMode 0064  
                                   _MacroNop 351E                             __size_of_NVMInit 008E  
                           __size_of_NVMRead 0056                __size_of_MiApp_DiscardMessage 0006  
                                   _TxMACSeq 005A              __end_of_DemoOutput_ChannelError 3330  
                  ??_MiApp_UnicastConnection 0096                      __end_of_Initialize_Demo 28FE  
                                 _DELAY_10us 3522                                     __Hrparam 0000  
                      ??i2_SPI1_Exchange8bit 0001                                     _RxPacket 0250  
                                   _TxBuffer 0165                                 _nvmDelayTick 004A  
                                   __Lrparam 0000                           CONSOLE_PutString@c 0063  
                                   _TxPacket 1BD6                                     _Run_Demo 351A  
                         Total_Connections@i 0061                      __size_of_LCD_Initialize 0044  
                      MiMAC_ReceivedPacket@i 0077                             __size_of___lbdiv 0036  
                           __size_of___lbmod 0028                  __end_of_store_connection_tb 1FDE  
                      ??_DemoOutput_Greeting 0094                             __size_of___lwdiv 004A  
                           __size_of___lwmod 003E                     i2RegisterRead@IRQ1select 0004  
                                 sprintf@idx 007C                                   sprintf@len 0084  
                                 sprintf@val 0087                         __size_of_RegisterSet 002A  
                              ??i2_WriteFIFO 0002                                  ??_WriteFIFO 0061  
                           __size_of_isdigit 001E                            ?_MiMAC_SetChannel 0065  
                            ___lwdiv@divisor 0062                       _DemoOutput_Instruction 34BC  
                          ?_Read_MAC_Address 0066                              ___lwdiv@counter 0064  
                                   __ptext10 28FE                                     __ptext11 2D08  
                                   __ptext20 2D5E                                     __ptext12 2CAA  
                                   __ptext21 2664                                     __ptext13 34DC  
                                   __ptext30 2C4A                                     __ptext22 3174  
                                   __ptext14 2FB4                                     __ptext31 3226  
                                   __ptext23 237C                                     __ptext15 297E  
                                   __ptext40 2B76                                     __ptext32 17D6  
                                   __ptext24 3142                                     __ptext16 287C  
                                   __ptext41 31FC                                     __ptext33 2416  
                                   __ptext25 25D4                                     __ptext17 26F2  
                                   __ptext50 350C                                     __ptext42 310E  
                                   __ptext34 30DA                                     __ptext26 1AA4  
                                   __ptext18 2EE8                                     __ptext51 3394  
                                   __ptext43 2DB4                                     __ptext35 3472  
                                   __ptext27 3502                                     __ptext19 1628  
                                   __ptext60 2A7C                                     __ptext52 3030  
                                   __ptext44 3522                                     __ptext36 2242  
                                   __ptext28 0FC8                                     __ptext61 2AFA  
                                   __ptext53 22E0                                     __ptext45 33D2  
                                   __ptext37 1E1A                                     __ptext29 1F02  
                                   __ptext70 2FF2                                     __ptext62 324E  
                                   __ptext54 349A                                     __ptext46 24AE  
                                   __ptext38 1BD6                                     __ptext71 2E9E  
                                   __ptext63 30A4                                     __ptext55 351E  
                                   __ptext47 1958                                     __ptext39 3276  
                                   __ptext80 3352                                     __ptext72 3446  
                                   __ptext64 34EA                                     __ptext56 142A  
                                   __ptext48 31D0                                     __ptext81 2BE2  
                                   __ptext73 345C                                     __ptext65 217C  
                                   __ptext57 306A                                     __ptext49 2E02  
                                   __ptext82 32C2                                     __ptext74 340E  
                                   __ptext66 2F74                                     __ptext58 34BC  
                                   __ptext83 31A2                                     __ptext75 1FDE  
                                   __ptext67 03B8                                     __ptext59 330C  
                                   __ptext84 34CC                                     __ptext76 3330  
                                   __ptext68 33F0                                     __ptext85 2E50  
                                   __ptext77 34F6                                     __ptext69 329C  
                                   __ptext86 3524                                     __ptext87 3486  
                                   __ptext79 1CFE                                     __ptext88 2776  
                                   __ptext89 20AE                                 _SSP1CON1bits 000FC6  
                              _AddConnection 1958                     TxPacket@allowedTxFailure 0079  
                         ??_MiMAC_SetChannel 0066                            ?_MiMAC_SendPacket 007E  
            __size_of_DemoOutput_UnicastFail 001E                                     _high_isr 0008  
                         ??_Read_MAC_Address 0068                                 _SSP2CON2bits 000F71  
                          ??_TMR1_StartTimer 0060                             __size_of_sprintf 071A  
                            DumpConnection@i 0068                              DumpConnection@j 0067  
                     __size_of_isSameAddress 002C                           ??_MiMAC_SendPacket 0084  
                         _DemoOutput_Channel 2A7C                       ??_UserInterruptHandler 000F  
                              __size_of_main 001E                             ?_freezer_feature 0001  
                     __size_ofi2_RegisterSet 0026                          __end_ofi2_SetRFMode 2C4A  
                        ?_DemoOutput_Channel 0094                                   _LCDCommand 0042  
                                 _LCDDisplay 2F74                                     int$flags 005C  
                         LCDTRXCount@rxCount 008F                  MiApp_EstablishConnection@t1 00B1  
                MiApp_EstablishConnection@t2 00B5                 i2MiWi_TickGet@failureCounter 0006  
                         LCDTRXCount@txCount 0090                            MiMAC_PowerState@i 006F  
                               _SSP1STATbits 000FC7                                   _LCD_Update 3446  
                        MiApp_UnicastStar@t1 00AE                          MiApp_UnicastStar@t2 00B2  
                 MiMAC_SendPacket@MACPayload 0081                        __CFG_CPUDIV$OSC2_PLL2 000000  
                                Find_Index@i 0064                            ?_MiMAC_PowerState 0001  
                                 _INTCONbits 000FF2                               AddConnection@i 0070  
                       ??_DemoOutput_Channel 0095                              i2WriteFIFO@Data 0002  
                    ?_handle_lost_connection 0001                           ??_MiMAC_PowerState 006E  
                               CONSOLE_Put@c 0060                                   i2_DELAY_ms 20AE  
                             ?_AddConnection 0001                  ButtonPressed@tickDifference 006A  
                                   isdigit@c 0062                                ??_SW_Ack_SrED 0093  
                                _nvmConnMode 00E8                         SW_Ack_SrED@Dest_Addr 0091  
                     Total_Connections@count 0060                  MiApp_ProtocolInit@initValue 0073  
                       __end_of_CheckForData 2D08                                     intlevel2 0000  
                          ?_MiApp_SetChannel 0001                                    sprintf@ap 0086  
                                  sprintf@cp 0083                                    sprintf@sp 006C  
                    ?_MiApp_MessageAvailable 0001                          __end_ofi2_WriteFIFO 3374  
                             i2_RegisterRead 31A2                             ___lwmod@dividend 0067  
                               ?_EEPROM_Read 0061                           ??_MiApp_SetChannel 006A  
                           ?_Initialize_Demo 0001                                ?_MiWi_TickGet 0060  
                                ?_DELAY_10us 0060                           _MiApp_ProtocolInit 1628  
               SendPacket@DestinationAddress 0087                       _DemoOutput_UnicastFail 33D2  
                              _MACInitParams 00D1                          MiMAC_Init@initValue 006E  
                  __size_of_CONSOLE_PrintDec 007C                    __size_of_CONSOLE_PrintHex 003A  
                             _DumpConnection 142A                           EEPROM_Read@oldGIEH 0065  
                              _isSameAddress 31D0                          ?_MiApp_ProtocolInit 0001  
                 MiWi_TickGet@failureCounter 0065                            _MiApp_UnicastStar 29FE  
                     __size_of_EUSART2_Write 000C                                     sprintf@c 008C  
                                   sprintf@f 006E                                 ?_CONSOLE_Put 0001  
                         ?_MiApp_UnicastStar 0001                                i2_RegisterSet 32C2  
                                 _PPSCONbits 000EFF             __size_of_DemoOutput_ChannelError 0024  
             __end_of_handle_lost_connection 2CAA                              ___lwmod@divisor 0069  
 MiApp_EstablishConnection@tmpConnectionMode 00AE                              ___lwmod@counter 006B  
                          i2TxPacket@rssival 001D                          TxPacket@TxPacketLen 007B  
                 ?_MiApp_EstablishConnection 00A9                        _DemoOutput_UpdateTxRx 34DC  
                       i2TxPacket@CCARetries 001A                                   _WDTCONbits 000FC0  
                        ??_MiApp_UnicastStar 00A9               __end_of_MiApp_MessageAvailable 350C  
                     __end_ofi2_RegisterRead 31D0                          _MiMAC_DiscardPacket 3394  
                                i2_SetRFMode 2BE2                           _nvmOutFrameCounter 00F2  
                          _nvmCurrentChannel 00EC                         ??_MiApp_ProtocolInit 0072  
                           i2TxPacket@status 0011                                 ?_LCDTRXCount 008F  
                           ??i2_MiWi_TickGet 0005                             EEPROM_Read@count 0064  
                            i2TxPacket@reTry 001B                               ??_MiWi_TickGet 0064  
                        __end_of_SW_Ack_SrED 324E                              EEPROM_Read@addr 0063  
                              i2TxPacket@CCA 000B                    i2MiWi_TickGet@currentTime 0007  
                            EEPROM_Read@dest 0061             Forward_Packet_PANCr_to_EDy@index 0099  
                            _TMR1_Initialize 342C                        RegisterSet@IRQ1select 0063  
               __end_of_MiMAC_ReceivedPacket 1958                           Find_Index@DestAddr 0060  
                               i2TxPacket@t1 0012                                 i2TxPacket@t2 0016  
                                ?_LCDDisplay 008F                                  i2TxPacket@i 001E  
                     __end_of_DumpConnection 1628  
