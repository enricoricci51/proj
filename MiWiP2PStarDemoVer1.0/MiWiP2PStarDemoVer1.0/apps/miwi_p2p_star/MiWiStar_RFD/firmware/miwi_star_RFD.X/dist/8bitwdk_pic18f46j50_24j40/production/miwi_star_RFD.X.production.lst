

Microchip Technology PIC18 PRO Macro Assembler V1.34 build -361300703 
                                                                                               Sat Feb 13 19:24:33 2016

Microchip Technology Omniscient Code Generator (PRO mode) build 201502162209
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    99                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   100  0000                     
   101                           	psect	idataCOMRAM
   102  0035F7                     __pidataCOMRAM:
   103                           	opt stack 0
   104                           
   105                           ;initializer for _BankIndex
   106  0035F7  FF                 	db	255
   107                           
   108                           ;initializer for _role
   109  0035F8  01                 	db	1
   110                           
   111                           	psect	idataBANK0
   112  0035F4                     __pidataBANK0:
   113                           	opt stack 0
   114                           
   115                           ;initializer for _AdditionalNodeID
   116  0035F4  01                 	db	1
   117                           
   118                           ;initializer for _chk_sel_status
   119  0035F5  01                 	db	1
   120                           
   121                           ;initializer for _ConnMode
   122  0035F6  03                 	db	3
   123                           
   124                           	psect	mediumconst
   125  00FD90                     __pmediumconst:
   126                           	opt stack 0
   127  00FD90  00                 	db	0
   128  00FD91                     _MiWi:
   129                           	opt stack 0
   130  00FD91  20                 	db	32
   131  00FD92  B2                 	db	178
   132  00FD93  20                 	db	32
   133  00FD94  20                 	db	32
   134  00FD95  20                 	db	32
   135  00FD96  B2                 	db	178
   136  00FD97  20                 	db	32
   137  00FD98  20                 	db	32
   138  00FD99  B2                 	db	178
   139  00FD9A  20                 	db	32
   140  00FD9B  B2                 	db	178
   141  00FD9C  20                 	db	32
   142  00FD9D  20                 	db	32
   143  00FD9E  20                 	db	32
   144  00FD9F  20                 	db	32
   145  00FDA0  20                 	db	32
   146  00FDA1  B2                 	db	178
   147  00FDA2  20                 	db	32
   148  00FDA3  B2                 	db	178
   149  00FDA4  0D                 	db	13
   150  00FDA5  0A                 	db	10
   151  00FDA6  B2                 	db	178
   152  00FDA7  20                 	db	32
   153  00FDA8  B2                 	db	178
   154  00FDA9  20                 	db	32
   155  00FDAA  B2                 	db	178
   156  00FDAB  20                 	db	32
   157  00FDAC  B2                 	db	178
   158  00FDAD  20                 	db	32
   159  00FDAE  20                 	db	32
   160  00FDAF  20                 	db	32
   161  00FDB0  B2                 	db	178
   162  00FDB1  20                 	db	32
   163  00FDB2  20                 	db	32
   164  00FDB3  B2                 	db	178
   165  00FDB4  20                 	db	32
   166  00FDB5  20                 	db	32
   167  00FDB6  B2                 	db	178
   168  00FDB7  20                 	db	32
   169  00FDB8  20                 	db	32
   170  00FDB9  0D                 	db	13
   171  00FDBA  0A                 	db	10
   172  00FDBB  B2                 	db	178
   173  00FDBC  20                 	db	32
   174  00FDBD  20                 	db	32
   175  00FDBE  B2                 	db	178
   176  00FDBF  20                 	db	32
   177  00FDC0  20                 	db	32
   178  00FDC1  B2                 	db	178
   179  00FDC2  20                 	db	32
   180  00FDC3  B2                 	db	178
   181  00FDC4  20                 	db	32
   182  00FDC5  B2                 	db	178
   183  00FDC6  20                 	db	32
   184  00FDC7  20                 	db	32
   185  00FDC8  B2                 	db	178
   186  00FDC9  20                 	db	32
   187  00FDCA  20                 	db	32
   188  00FDCB  B2                 	db	178
   189  00FDCC  20                 	db	32
   190  00FDCD  B2                 	db	178
   191  00FDCE  0D                 	db	13
   192  00FDCF  0A                 	db	10
   193  00FDD0  B2                 	db	178
   194  00FDD1  20                 	db	32
   195  00FDD2  20                 	db	32
   196  00FDD3  B2                 	db	178
   197  00FDD4  20                 	db	32
   198  00FDD5  20                 	db	32
   199  00FDD6  B2                 	db	178
   200  00FDD7  20                 	db	32
   201  00FDD8  B2                 	db	178
   202  00FDD9  20                 	db	32
   203  00FDDA  20                 	db	32
   204  00FDDB  B2                 	db	178
   205  00FDDC  20                 	db	32
   206  00FDDD  B2                 	db	178
   207  00FDDE  20                 	db	32
   208  00FDDF  B2                 	db	178
   209  00FDE0  20                 	db	32
   210  00FDE1  20                 	db	32
   211  00FDE2  B2                 	db	178
   212  00FDE3  0D                 	db	13
   213  00FDE4  0A                 	db	10
   214  00FDE5  B2                 	db	178
   215  00FDE6  20                 	db	32
   216  00FDE7  20                 	db	32
   217  00FDE8  B2                 	db	178
   218  00FDE9  20                 	db	32
   219  00FDEA  20                 	db	32
   220  00FDEB  B2                 	db	178
   221  00FDEC  20                 	db	32
   222  00FDED  B2                 	db	178
   223  00FDEE  20                 	db	32
   224  00FDEF  20                 	db	32
   225  00FDF0  20                 	db	32
   226  00FDF1  B2                 	db	178
   227  00FDF2  20                 	db	32
   228  00FDF3  B2                 	db	178
   229  00FDF4  20                 	db	32
   230  00FDF5  20                 	db	32
   231  00FDF6  20                 	db	32
   232  00FDF7  B2                 	db	178
   233  00FDF8  0D                 	db	13
   234  00FDF9  0A                 	db	10
   235  00FDFA  20                 	db	32
   236  00FDFB  20                 	db	32
   237  00FDFC  20                 	db	32
   238  00FDFD  20                 	db	32
   239  00FDFE  20                 	db	32
   240  00FDFF  20                 	db	32
   241  00FE00  20                 	db	32
   242  00FE01  20                 	db	32
   243  00FE02  20                 	db	32
   244  00FE03  20                 	db	32
   245  00FE04  20                 	db	32
   246  00FE05  20                 	db	32
   247  00FE06  20                 	db	32
   248  00FE07  20                 	db	32
   249  00FE08  20                 	db	32
   250  00FE09  20                 	db	32
   251  00FE0A  20                 	db	32
   252  00FE0B  20                 	db	32
   253  00FE0C  20                 	db	32
   254  00FE0D  0D                 	db	13
   255  00FE0E  0A                 	db	10
   256  00FE0F                     __end_of_MiWi:
   257                           	opt stack 0
   258  00FE0F                     _octpowers:
   259                           	opt stack 0
   260  00FE0F  0001               	dw	1
   261  00FE11  0008               	dw	8
   262  00FE13  0040               	dw	64
   263  00FE15  0200               	dw	512
   264  00FE17  1000               	dw	4096
   265  00FE19  8000               	dw	32768
   266  00FE1B                     __end_of_octpowers:
   267                           	opt stack 0
   268  00FE1B                     _dpowers:
   269                           	opt stack 0
   270  00FE1B  0001               	dw	1
   271  00FE1D  000A               	dw	10
   272  00FE1F  0064               	dw	100
   273  00FE21  03E8               	dw	1000
   274  00FE23  2710               	dw	10000
   275  00FE25                     __end_of_dpowers:
   276                           	opt stack 0
   277  00FE25                     _hexpowers:
   278                           	opt stack 0
   279  00FE25  0001               	dw	1
   280  00FE27  0010               	dw	16
   281  00FE29  0100               	dw	256
   282  00FE2B  1000               	dw	4096
   283  00FE2D                     __end_of_hexpowers:
   284                           	opt stack 0
   285  0000                     _PPSCONbits	set	3839
   286  0000                     _RPINR1	set	3815
   287  0000                     _RPINR16	set	3830
   288  0000                     _RPOR17	set	3799
   289  0000                     _ANCON0	set	3912
   290  0000                     _ANCON1	set	3913
   291  0000                     _TMR1	set	4046
   292  0000                     _EECON2	set	4007
   293  0000                     _INTCON	set	4082
   294  0000                     _INTCON2bits	set	4081
   295  0000                     _INTCON3bits	set	4080
   296  0000                     _INTCONbits	set	4082
   297  0000                     _LATA	set	3977
   298  0000                     _LATAbits	set	3977
   299  0000                     _LATB	set	3978
   300  0000                     _LATBbits	set	3978
   301  0000                     _LATCbits	set	3979
   302  0000                     _LATD	set	3980
   303  0000                     _LATDbits	set	3980
   304  0000                     _LATE	set	3981
   305  0000                     _OSCCON	set	4051
   306  0000                     _PIE1bits	set	3997
   307  0000                     _PIE3bits	set	4003
   308  0000                     _PIR1bits	set	3998
   309  0000                     _PIR3bits	set	4004
   310  0000                     _PORTBbits	set	3969
   311  0000                     _SSP1BUF	set	4041
   312  0000                     _SSP1CON1	set	4038
   313  0000                     _SSP1CON1bits	set	4038
   314  0000                     _SSP1STAT	set	4039
   315  0000                     _SSP1STATbits	set	4039
   316  0000                     _SSP2ADD	set	3956
   317  0000                     _SSP2BUF	set	3957
   318  0000                     _SSP2CON1	set	3954
   319  0000                     _SSP2CON2	set	3953
   320  0000                     _SSP2CON2bits	set	3953
   321  0000                     _SSP2STAT	set	3955
   322  0000                     _T1CON	set	4045
   323  0000                     _T1CONbits	set	4045
   324  0000                     _T1GCON	set	3994
   325  0000                     _TMR0L	set	4054
   326  0000                     _TMR1H	set	4047
   327  0000                     _TMR1L	set	4046
   328  0000                     _TRISA	set	3986
   329  0000                     _TRISAbits	set	3986
   330  0000                     _TRISB	set	3987
   331  0000                     _TRISBbits	set	3987
   332  0000                     _TRISC	set	3988
   333  0000                     _TRISCbits	set	3988
   334  0000                     _TRISD	set	3989
   335  0000                     _TRISDbits	set	3989
   336  0000                     _TRISE	set	3990
   337  0000                     _WDTCONbits	set	4032
   338  00FE2D                     STR_8:
   339  00FE2D  50                 	db	80	;'P'
   340  00FE2E  43                 	db	67	;'C'
   341  00FE2F  20                 	db	32
   342  00FE30  3A                 	db	58	;':'
   343  00FE31  52                 	db	82	;'R'
   344  00FE32  42                 	db	66	;'B'
   345  00FE33  30                 	db	48	;'0'
   346  00FE34  20                 	db	32
   347  00FE35  6F                 	db	111	;'o'
   348  00FE36  72                 	db	114	;'r'
   349  00FE37  20                 	db	32
   350  00FE38  52                 	db	82	;'R'
   351  00FE39  42                 	db	66	;'B'
   352  00FE3A  32                 	db	50	;'2'
   353  00FE3B  20                 	db	32
   354  00FE3C  20                 	db	32
   355  00FE3D  74                 	db	116	;'t'
   356  00FE3E  6F                 	db	111	;'o'
   357  00FE3F  20                 	db	32
   358  00FE40  42                 	db	66	;'B'
   359  00FE41  72                 	db	114	;'r'
   360  00FE42  6F                 	db	111	;'o'
   361  00FE43  61                 	db	97	;'a'
   362  00FE44  64                 	db	100	;'d'
   363  00FE45  63                 	db	99	;'c'
   364  00FE46  61                 	db	97	;'a'
   365  00FE47  73                 	db	115	;'s'
   366  00FE48  74                 	db	116	;'t'
   367  00FE49  20                 	db	32
   368  00FE4A  6D                 	db	109	;'m'
   369  00FE4B  73                 	db	115	;'s'
   370  00FE4C  67                 	db	103	;'g'
   371  00FE4D  00                 	db	0
   372  00FE4E                     STR_4:
   373  00FE4E  43                 	db	67	;'C'
   374  00FE4F  6F                 	db	111	;'o'
   375  00FE50  6E                 	db	110	;'n'
   376  00FE51  6E                 	db	110	;'n'
   377  00FE52  65                 	db	101	;'e'
   378  00FE53  63                 	db	99	;'c'
   379  00FE54  74                 	db	116	;'t'
   380  00FE55  69                 	db	105	;'i'
   381  00FE56  6E                 	db	110	;'n'
   382  00FE57  67                 	db	103	;'g'
   383  00FE58  20                 	db	32
   384  00FE59  50                 	db	80	;'P'
   385  00FE5A  65                 	db	101	;'e'
   386  00FE5B  65                 	db	101	;'e'
   387  00FE5C  72                 	db	114	;'r'
   388  00FE5D  20                 	db	32
   389  00FE5E  20                 	db	32
   390  00FE5F  6F                 	db	111	;'o'
   391  00FE60  6E                 	db	110	;'n'
   392  00FE61  20                 	db	32
   393  00FE62  43                 	db	67	;'C'
   394  00FE63  68                 	db	104	;'h'
   395  00FE64  61                 	db	97	;'a'
   396  00FE65  6E                 	db	110	;'n'
   397  00FE66  6E                 	db	110	;'n'
   398  00FE67  65                 	db	101	;'e'
   399  00FE68  6C                 	db	108	;'l'
   400  00FE69  20                 	db	32
   401  00FE6A  25                 	db	37
   402  00FE6B  64                 	db	100	;'d'
   403  00FE6C  20                 	db	32
   404  00FE6D  00                 	db	0
   405  00FE6E                     STR_9:
   406  00FE6E  52                 	db	82	;'R'
   407  00FE6F  42                 	db	66	;'B'
   408  00FE70  30                 	db	48	;'0'
   409  00FE71  20                 	db	32
   410  00FE72  3A                 	db	58	;':'
   411  00FE73  20                 	db	32
   412  00FE74  55                 	db	85	;'U'
   413  00FE75  6E                 	db	110	;'n'
   414  00FE76  69                 	db	105	;'i'
   415  00FE77  63                 	db	99	;'c'
   416  00FE78  61                 	db	97	;'a'
   417  00FE79  73                 	db	115	;'s'
   418  00FE7A  74                 	db	116	;'t'
   419  00FE7B  20                 	db	32
   420  00FE7C  20                 	db	32
   421  00FE7D  20                 	db	32
   422  00FE7E  52                 	db	82	;'R'
   423  00FE7F  42                 	db	66	;'B'
   424  00FE80  32                 	db	50	;'2'
   425  00FE81  20                 	db	32
   426  00FE82  3A                 	db	58	;':'
   427  00FE83  20                 	db	32
   428  00FE84  4E                 	db	78	;'N'
   429  00FE85  65                 	db	101	;'e'
   430  00FE86  78                 	db	120	;'x'
   431  00FE87  74                 	db	116	;'t'
   432  00FE88  20                 	db	32
   433  00FE89  4E                 	db	78	;'N'
   434  00FE8A  6F                 	db	111	;'o'
   435  00FE8B  64                 	db	100	;'d'
   436  00FE8C  65                 	db	101	;'e'
   437  00FE8D  00                 	db	0
   438  00FE8E                     STR_3:
   439  00FE8E  53                 	db	83	;'S'
   440  00FE8F  69                 	db	105	;'i'
   441  00FE90  6D                 	db	109	;'m'
   442  00FE91  70                 	db	112	;'p'
   443  00FE92  6C                 	db	108	;'l'
   444  00FE93  65                 	db	101	;'e'
   445  00FE94  20                 	db	32
   446  00FE95  53                 	db	83	;'S'
   447  00FE96  54                 	db	84	;'T'
   448  00FE97  41                 	db	65	;'A'
   449  00FE98  52                 	db	82	;'R'
   450  00FE99  20                 	db	32
   451  00FE9A  20                 	db	32
   452  00FE9B  20                 	db	32
   453  00FE9C  20                 	db	32
   454  00FE9D  20                 	db	32
   455  00FE9E  4D                 	db	77	;'M'
   456  00FE9F  52                 	db	82	;'R'
   457  00FEA0  46                 	db	70	;'F'
   458  00FEA1  32                 	db	50	;'2'
   459  00FEA2  34                 	db	52	;'4'
   460  00FEA3  4A                 	db	74	;'J'
   461  00FEA4  34                 	db	52	;'4'
   462  00FEA5  30                 	db	48	;'0'
   463  00FEA6  20                 	db	32
   464  00FEA7  4E                 	db	78	;'N'
   465  00FEA8  6F                 	db	111	;'o'
   466  00FEA9  64                 	db	100	;'d'
   467  00FEAA  65                 	db	101	;'e'
   468  00FEAB  31                 	db	49	;'1'
   469  00FEAC  00                 	db	0
   470  00FEAD                     STR_5:
   471  00FEAD  20                 	db	32
   472  00FEAE  43                 	db	67	;'C'
   473  00FEAF  6F                 	db	111	;'o'
   474  00FEB0  6E                 	db	110	;'n'
   475  00FEB1  6E                 	db	110	;'n'
   476  00FEB2  65                 	db	101	;'e'
   477  00FEB3  63                 	db	99	;'c'
   478  00FEB4  74                 	db	116	;'t'
   479  00FEB5  65                 	db	101	;'e'
   480  00FEB6  64                 	db	100	;'d'
   481  00FEB7  20                 	db	32
   482  00FEB8  50                 	db	80	;'P'
   483  00FEB9  65                 	db	101	;'e'
   484  00FEBA  65                 	db	101	;'e'
   485  00FEBB  72                 	db	114	;'r'
   486  00FEBC  20                 	db	32
   487  00FEBD  20                 	db	32
   488  00FEBE  6F                 	db	111	;'o'
   489  00FEBF  6E                 	db	110	;'n'
   490  00FEC0  20                 	db	32
   491  00FEC1  43                 	db	67	;'C'
   492  00FEC2  68                 	db	104	;'h'
   493  00FEC3  61                 	db	97	;'a'
   494  00FEC4  6E                 	db	110	;'n'
   495  00FEC5  6E                 	db	110	;'n'
   496  00FEC6  65                 	db	101	;'e'
   497  00FEC7  6C                 	db	108	;'l'
   498  00FEC8  20                 	db	32
   499  00FEC9  25                 	db	37
   500  00FECA  64                 	db	100	;'d'
   501  00FECB  00                 	db	0
   502  00FECC                     STR_6:
   503  00FECC  52                 	db	82	;'R'
   504  00FECD  42                 	db	66	;'B'
   505  00FECE  30                 	db	48	;'0'
   506  00FECF  3A                 	db	58	;':'
   507  00FED0  20                 	db	32
   508  00FED1  42                 	db	66	;'B'
   509  00FED2  72                 	db	114	;'r'
   510  00FED3  6F                 	db	111	;'o'
   511  00FED4  61                 	db	97	;'a'
   512  00FED5  64                 	db	100	;'d'
   513  00FED6  63                 	db	99	;'c'
   514  00FED7  61                 	db	97	;'a'
   515  00FED8  73                 	db	115	;'s'
   516  00FED9  74                 	db	116	;'t'
   517  00FEDA  20                 	db	32
   518  00FEDB  20                 	db	32
   519  00FEDC  52                 	db	82	;'R'
   520  00FEDD  42                 	db	66	;'B'
   521  00FEDE  32                 	db	50	;'2'
   522  00FEDF  3A                 	db	58	;':'
   523  00FEE0  20                 	db	32
   524  00FEE1  55                 	db	85	;'U'
   525  00FEE2  6E                 	db	110	;'n'
   526  00FEE3  69                 	db	105	;'i'
   527  00FEE4  63                 	db	99	;'c'
   528  00FEE5  61                 	db	97	;'a'
   529  00FEE6  73                 	db	115	;'s'
   530  00FEE7  74                 	db	116	;'t'
   531  00FEE8  00                 	db	0
   532  00FEE9                     STR_12:
   533  00FEE9  52                 	db	82	;'R'
   534  00FEEA  42                 	db	66	;'B'
   535  00FEEB  30                 	db	48	;'0'
   536  00FEEC  3A                 	db	58	;':'
   537  00FEED  4E                 	db	78	;'N'
   538  00FEEE  65                 	db	101	;'e'
   539  00FEEF  77                 	db	119	;'w'
   540  00FEF0  20                 	db	32
   541  00FEF1  4E                 	db	78	;'N'
   542  00FEF2  65                 	db	101	;'e'
   543  00FEF3  74                 	db	116	;'t'
   544  00FEF4  77                 	db	119	;'w'
   545  00FEF5  6F                 	db	111	;'o'
   546  00FEF6  72                 	db	114	;'r'
   547  00FEF7  6B                 	db	107	;'k'
   548  00FEF8  20                 	db	32
   549  00FEF9  52                 	db	82	;'R'
   550  00FEFA  42                 	db	66	;'B'
   551  00FEFB  32                 	db	50	;'2'
   552  00FEFC  3A                 	db	58	;':'
   553  00FEFD  46                 	db	70	;'F'
   554  00FEFE  72                 	db	114	;'r'
   555  00FEFF  65                 	db	101	;'e'
   556  00FF00  65                 	db	101	;'e'
   557  00FF01  7A                 	db	122	;'z'
   558  00FF02  65                 	db	101	;'e'
   559  00FF03  72                 	db	114	;'r'
   560  00FF04  00                 	db	0
   561  00FF05                     STR_15:
   562  00FF05  52                 	db	82	;'R'
   563  00FF06  42                 	db	66	;'B'
   564  00FF07  30                 	db	48	;'0'
   565  00FF08  3A                 	db	58	;':'
   566  00FF09  25                 	db	37
   567  00FF0A  30                 	db	48	;'0'
   568  00FF0B  32                 	db	50	;'2'
   569  00FF0C  64                 	db	100	;'d'
   570  00FF0D  2D                 	db	45
   571  00FF0E  25                 	db	37
   572  00FF0F  30                 	db	48	;'0'
   573  00FF10  32                 	db	50	;'2'
   574  00FF11  78                 	db	120	;'x'
   575  00FF12  25                 	db	37
   576  00FF13  30                 	db	48	;'0'
   577  00FF14  32                 	db	50	;'2'
   578  00FF15  78                 	db	120	;'x'
   579  00FF16  25                 	db	37
   580  00FF17  30                 	db	48	;'0'
   581  00FF18  32                 	db	50	;'2'
   582  00FF19  78                 	db	120	;'x'
   583  00FF1A  2D                 	db	45
   584  00FF1B  6D                 	db	109	;'m'
   585  00FF1C  65                 	db	101	;'e'
   586  00FF1D  00                 	db	0
   587  00FF1E                     STR_16:
   588  00FF1E  52                 	db	82	;'R'
   589  00FF1F  42                 	db	66	;'B'
   590  00FF20  30                 	db	48	;'0'
   591  00FF21  3A                 	db	58	;':'
   592  00FF22  25                 	db	37
   593  00FF23  30                 	db	48	;'0'
   594  00FF24  32                 	db	50	;'2'
   595  00FF25  64                 	db	100	;'d'
   596  00FF26  2D                 	db	45
   597  00FF27  25                 	db	37
   598  00FF28  30                 	db	48	;'0'
   599  00FF29  32                 	db	50	;'2'
   600  00FF2A  78                 	db	120	;'x'
   601  00FF2B  25                 	db	37
   602  00FF2C  30                 	db	48	;'0'
   603  00FF2D  32                 	db	50	;'2'
   604  00FF2E  78                 	db	120	;'x'
   605  00FF2F  25                 	db	37
   606  00FF30  30                 	db	48	;'0'
   607  00FF31  32                 	db	50	;'2'
   608  00FF32  78                 	db	120	;'x'
   609  00FF33  00                 	db	0
   610  00FF34  20                 	db	32
   611  00FF35  41                 	db	65	;'A'
   612  00FF36  64                 	db	100	;'d'
   613  00FF37  64                 	db	100	;'d'
   614  00FF38  72                 	db	114	;'r'
   615  00FF39  65                 	db	101	;'e'
   616  00FF3A  73                 	db	115	;'s'
   617  00FF3B  73                 	db	115	;'s'
   618  00FF3C  3A                 	db	58	;':'
   619  00FF3D  25                 	db	37
   620  00FF3E  30                 	db	48	;'0'
   621  00FF3F  32                 	db	50	;'2'
   622  00FF40  78                 	db	120	;'x'
   623  00FF41  25                 	db	37
   624  00FF42  30                 	db	48	;'0'
   625  00FF43  32                 	db	50	;'2'
   626  00FF44  78                 	db	120	;'x'
   627  00FF45  25                 	db	37
   628  00FF46  30                 	db	48	;'0'
   629  00FF47  32                 	db	50	;'2'
   630  00FF48  78                 	db	120	;'x'
   631  00FF49  00                 	db	0
   632  00FF4A                     STR_19:
   633  00FF4A  44                 	db	68	;'D'
   634  00FF4B  61                 	db	97	;'a'
   635  00FF4C  74                 	db	116	;'t'
   636  00FF4D  61                 	db	97	;'a'
   637  00FF4E  5F                 	db	95	;'_'
   638  00FF4F  53                 	db	83	;'S'
   639  00FF50  65                 	db	101	;'e'
   640  00FF51  6E                 	db	110	;'n'
   641  00FF52  64                 	db	100	;'d'
   642  00FF53  69                 	db	105	;'i'
   643  00FF54  6E                 	db	110	;'n'
   644  00FF55  67                 	db	103	;'g'
   645  00FF56  5F                 	db	95	;'_'
   646  00FF57  46                 	db	70	;'F'
   647  00FF58  61                 	db	97	;'a'
   648  00FF59  69                 	db	105	;'i'
   649  00FF5A  6C                 	db	108	;'l'
   650  00FF5B  21                 	db	33
   651  00FF5C  21                 	db	33
   652  00FF5D  00                 	db	0
   653  00FF5E                     STR_21:
   654  00FF5E  30                 	db	48	;'0'
   655  00FF5F  31                 	db	49	;'1'
   656  00FF60  32                 	db	50	;'2'
   657  00FF61  33                 	db	51	;'3'
   658  00FF62  34                 	db	52	;'4'
   659  00FF63  35                 	db	53	;'5'
   660  00FF64  36                 	db	54	;'6'
   661  00FF65  37                 	db	55	;'7'
   662  00FF66  38                 	db	56	;'8'
   663  00FF67  39                 	db	57	;'9'
   664  00FF68  41                 	db	65	;'A'
   665  00FF69  42                 	db	66	;'B'
   666  00FF6A  43                 	db	67	;'C'
   667  00FF6B  44                 	db	68	;'D'
   668  00FF6C  45                 	db	69	;'E'
   669  00FF6D  46                 	db	70	;'F'
   670  00FF6E  00                 	db	0
   671  00FF6F                     STR_22:
   672  00FF6F  30                 	db	48	;'0'
   673  00FF70  31                 	db	49	;'1'
   674  00FF71  32                 	db	50	;'2'
   675  00FF72  33                 	db	51	;'3'
   676  00FF73  34                 	db	52	;'4'
   677  00FF74  35                 	db	53	;'5'
   678  00FF75  36                 	db	54	;'6'
   679  00FF76  37                 	db	55	;'7'
   680  00FF77  38                 	db	56	;'8'
   681  00FF78  39                 	db	57	;'9'
   682  00FF79  61                 	db	97	;'a'
   683  00FF7A  62                 	db	98	;'b'
   684  00FF7B  63                 	db	99	;'c'
   685  00FF7C  64                 	db	100	;'d'
   686  00FF7D  65                 	db	101	;'e'
   687  00FF7E  66                 	db	102	;'f'
   688  00FF7F  00                 	db	0
   689  00FF80                     STR_18:
   690  00FF80  52                 	db	82	;'R'
   691  00FF81  42                 	db	66	;'B'
   692  00FF82  32                 	db	50	;'2'
   693  00FF83  3A                 	db	58	;':'
   694  00FF84  20                 	db	32
   695  00FF85  43                 	db	67	;'C'
   696  00FF86  68                 	db	104	;'h'
   697  00FF87  61                 	db	97	;'a'
   698  00FF88  6E                 	db	110	;'n'
   699  00FF89  67                 	db	103	;'g'
   700  00FF8A  65                 	db	101	;'e'
   701  00FF8B  20                 	db	32
   702  00FF8C  6E                 	db	110	;'n'
   703  00FF8D  6F                 	db	111	;'o'
   704  00FF8E  64                 	db	100	;'d'
   705  00FF8F  65                 	db	101	;'e'
   706  00FF90  00                 	db	0
   707  00FF91  44                 	db	68	;'D'
   708  00FF92  61                 	db	97	;'a'
   709  00FF93  74                 	db	116	;'t'
   710  00FF94  61                 	db	97	;'a'
   711  00FF95  20                 	db	32
   712  00FF96  50                 	db	80	;'P'
   713  00FF97  61                 	db	97	;'a'
   714  00FF98  63                 	db	99	;'c'
   715  00FF99  6B                 	db	107	;'k'
   716  00FF9A  65                 	db	101	;'e'
   717  00FF9B  74                 	db	116	;'t'
   718  00FF9C  20                 	db	32
   719  00FF9D  66                 	db	102	;'f'
   720  00FF9E  72                 	db	114	;'r'
   721  00FF9F  6F                 	db	111	;'o'
   722  00FFA0  6D                 	db	109	;'m'
   723  00FFA1  00                 	db	0
   724  00FFA2                     STR_2:
   725  00FFA2  52                 	db	82	;'R'
   726  00FFA3  58                 	db	88	;'X'
   727  00FFA4  20                 	db	32
   728  00FFA5  4D                 	db	77	;'M'
   729  00FFA6  65                 	db	101	;'e'
   730  00FFA7  73                 	db	115	;'s'
   731  00FFA8  73                 	db	115	;'s'
   732  00FFA9  61                 	db	97	;'a'
   733  00FFAA  67                 	db	103	;'g'
   734  00FFAB  65                 	db	101	;'e'
   735  00FFAC  73                 	db	115	;'s'
   736  00FFAD  3A                 	db	58	;':'
   737  00FFAE  20                 	db	32
   738  00FFAF  25                 	db	37
   739  00FFB0  33                 	db	51	;'3'
   740  00FFB1  64                 	db	100	;'d'
   741  00FFB2  00                 	db	0
   742  00FFB3                     STR_1:
   743  00FFB3  54                 	db	84	;'T'
   744  00FFB4  58                 	db	88	;'X'
   745  00FFB5  20                 	db	32
   746  00FFB6  4D                 	db	77	;'M'
   747  00FFB7  65                 	db	101	;'e'
   748  00FFB8  73                 	db	115	;'s'
   749  00FFB9  73                 	db	115	;'s'
   750  00FFBA  61                 	db	97	;'a'
   751  00FFBB  67                 	db	103	;'g'
   752  00FFBC  65                 	db	101	;'e'
   753  00FFBD  73                 	db	115	;'s'
   754  00FFBE  3A                 	db	58	;':'
   755  00FFBF  20                 	db	32
   756  00FFC0  25                 	db	37
   757  00FFC1  33                 	db	51	;'3'
   758  00FFC2  64                 	db	100	;'d'
   759  00FFC3  00                 	db	0
   760  00FFC4                     STR_7:
   761  00FFC4  20                 	db	32
   762  00FFC5  55                 	db	85	;'U'
   763  00FFC6  6E                 	db	110	;'n'
   764  00FFC7  69                 	db	105	;'i'
   765  00FFC8  63                 	db	99	;'c'
   766  00FFC9  61                 	db	97	;'a'
   767  00FFCA  73                 	db	115	;'s'
   768  00FFCB  74                 	db	116	;'t'
   769  00FFCC  20                 	db	32
   770  00FFCD  46                 	db	70	;'F'
   771  00FFCE  61                 	db	97	;'a'
   772  00FFCF  69                 	db	105	;'i'
   773  00FFD0  6C                 	db	108	;'l'
   774  00FFD1  65                 	db	101	;'e'
   775  00FFD2  64                 	db	100	;'d'
   776  00FFD3  00                 	db	0
   777  00FFD4                     STR_20:
   778  00FFD4  53                 	db	83	;'S'
   779  00FFD5  6C                 	db	108	;'l'
   780  00FFD6  65                 	db	101	;'e'
   781  00FFD7  65                 	db	101	;'e'
   782  00FFD8  70                 	db	112	;'p'
   783  00FFD9  69                 	db	105	;'i'
   784  00FFDA  6E                 	db	110	;'n'
   785  00FFDB  67                 	db	103	;'g'
   786  00FFDC  21                 	db	33
   787  00FFDD  21                 	db	33
   788  00FFDE  21                 	db	33
   789  00FFDF  00                 	db	0
   790  00FFE0                     STR_14:
   791  00FFE0  57                 	db	87	;'W'
   792  00FFE1  6F                 	db	111	;'o'
   793  00FFE2  6B                 	db	107	;'k'
   794  00FFE3  65                 	db	101	;'e'
   795  00FFE4  20                 	db	32
   796  00FFE5  55                 	db	85	;'U'
   797  00FFE6  70                 	db	112	;'p'
   798  00FFE7  21                 	db	33
   799  00FFE8  21                 	db	33
   800  00FFE9  21                 	db	33
   801  00FFEA  00                 	db	0
   802  00FFEB                     STR_13:
   803  00FFEB  53                 	db	83	;'S'
   804  00FFEC  6C                 	db	108	;'l'
   805  00FFED  65                 	db	101	;'e'
   806  00FFEE  65                 	db	101	;'e'
   807  00FFEF  70                 	db	112	;'p'
   808  00FFF0  69                 	db	105	;'i'
   809  00FFF1  6E                 	db	110	;'n'
   810  00FFF2  67                 	db	103	;'g'
   811  00FFF3  21                 	db	33
   812  00FFF4  21                 	db	33
   813  00FFF5  00                 	db	0
   814  0000                     
   815                           ; #config settings
   816  00FFF6  00                 	db	0	; dummy byte at the end
   817  0000                     
   818                           	psect	cinit
   819  002BF0                     __pcinit:
   820                           	opt stack 0
   821  002BF0                     start_initialization:
   822                           	opt stack 0
   823  002BF0                     __initialization:
   824                           	opt stack 0
   825                           
   826                           ; Clear objects allocated to BANK3 (140 bytes)
   827  002BF0  EE03  F000         	lfsr	0,__pbssBANK3
   828  002BF4  0E8C               	movlw	140
   829  002BF6                     clear_0:
   830  002BF6  6AEE               	clrf	postinc0,c
   831  002BF8  06E8               	decf	wreg,f,c
   832  002BFA  E1FD               	bnz	clear_0
   833                           
   834                           ; Clear objects allocated to BANK2 (171 bytes)
   835  002BFC  EE02  F000         	lfsr	0,__pbssBANK2
   836  002C00  0EAB               	movlw	171
   837  002C02                     clear_1:
   838  002C02  6AEE               	clrf	postinc0,c
   839  002C04  06E8               	decf	wreg,f,c
   840  002C06  E1FD               	bnz	clear_1
   841                           
   842                           ; Clear objects allocated to BANK1 (104 bytes)
   843  002C08  EE01  F000         	lfsr	0,__pbssBANK1
   844  002C0C  0E68               	movlw	104
   845  002C0E                     clear_2:
   846  002C0E  6AEE               	clrf	postinc0,c
   847  002C10  06E8               	decf	wreg,f,c
   848  002C12  E1FD               	bnz	clear_2
   849                           
   850                           ; Clear objects allocated to BANK0 (68 bytes)
   851  002C14  EE00  F0B9         	lfsr	0,__pbssBANK0
   852  002C18  0E44               	movlw	68
   853  002C1A                     clear_3:
   854  002C1A  6AEE               	clrf	postinc0,c
   855  002C1C  06E8               	decf	wreg,f,c
   856  002C1E  E1FD               	bnz	clear_3
   857                           
   858                           ; Clear objects allocated to COMRAM (28 bytes)
   859  002C20  EE00  F026         	lfsr	0,__pbssCOMRAM
   860  002C24  0E1C               	movlw	28
   861  002C26                     clear_4:
   862  002C26  6AEE               	clrf	postinc0,c
   863  002C28  06E8               	decf	wreg,f,c
   864  002C2A  E1FD               	bnz	clear_4
   865                           
   866                           ; Initialize objects allocated to BANK0 (3 bytes)
   867                           ; load TBLPTR registers with __pidataBANK0
   868  002C2C  0EF4               	movlw	low __pidataBANK0
   869  002C2E  6EF6               	movwf	tblptrl,c
   870  002C30  0E35               	movlw	high __pidataBANK0
   871  002C32  6EF7               	movwf	tblptrh,c
   872  002C34  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   873  002C36  6EF8               	movwf	tblptru,c
   874  002C38  0009               	tblrd		*+	;fetch initializer
   875  002C3A  CFF5 F0FD          	movff	tablat,__pdataBANK0
   876  002C3E  0009               	tblrd		*+	;fetch initializer
   877  002C40  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   878  002C44  0009               	tblrd		*+	;fetch initializer
   879  002C46  CFF5 F0FF          	movff	tablat,__pdataBANK0+2
   880                           
   881                           ; Initialize objects allocated to COMRAM (2 bytes)
   882                           ; load TBLPTR registers with __pidataCOMRAM
   883  002C4A  0EF7               	movlw	low __pidataCOMRAM
   884  002C4C  6EF6               	movwf	tblptrl,c
   885  002C4E  0E35               	movlw	high __pidataCOMRAM
   886  002C50  6EF7               	movwf	tblptrh,c
   887  002C52  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   888  002C54  6EF8               	movwf	tblptru,c
   889  002C56  0009               	tblrd		*+	;fetch initializer
   890  002C58  CFF5 F042          	movff	tablat,__pdataCOMRAM
   891  002C5C  0009               	tblrd		*+	;fetch initializer
   892  002C5E  CFF5 F043          	movff	tablat,__pdataCOMRAM+1
   893  002C62                     end_of_initialization:
   894                           	opt stack 0
   895  002C62                     __end_of__initialization:
   896                           	opt stack 0
   897  002C62  0E00               	movlw	low (__Lmediumconst shr (0+16))
   898  002C64  6EF8               	movwf	tblptru,c
   899  002C66  0100               	movlb	0
   900  002C68  EF35  F01A         	goto	_main	;jump to C main() function
   901                           tblptru	equ	0xFF8
   902                           tblptrh	equ	0xFF7
   903                           tblptrl	equ	0xFF6
   904                           tablat	equ	0xFF5
   905                           postinc0	equ	0xFEE
   906                           wreg	equ	0xFE8
   907                           
   908                           	psect	bssCOMRAM
   909  000026                     __pbssCOMRAM:
   910                           	opt stack 0
   911  000026                     _CommandLen:
   912                           	opt stack 0
   913  000026                     	ds	1
   914  000027                     _CommandPtr:
   915                           	opt stack 0
   916  000027                     	ds	1
   917  000028                     _IEEESeqNum:
   918                           	opt stack 0
   919  000028                     	ds	1
   920  000029                     _MRF24J40Status:
   921                           	opt stack 0
   922  000029                     	ds	1
   923  00002A                     _TextLen:
   924                           	opt stack 0
   925  00002A                     	ds	1
   926  00002B                     _TextPtr:
   927                           	opt stack 0
   928  00002B                     	ds	1
   929  00002C                     _end_nodes:
   930                           	opt stack 0
   931  00002C                     	ds	1
   932  00002D                     _i:
   933                           	opt stack 0
   934  00002D                     	ds	1
   935  00002E                     _timerExtension1:
   936                           	opt stack 0
   937  00002E                     	ds	1
   938  00002F                     _timerExtension2:
   939                           	opt stack 0
   940  00002F                     	ds	1
   941  000030                     _MACRxPacket:
   942                           	opt stack 0
   943  000030                     	ds	11
   944  00003B                     _MAC_PANID:
   945                           	opt stack 0
   946  00003B                     	ds	2
   947  00003D                     _myNetworkAddress:
   948                           	opt stack 0
   949  00003D                     	ds	2
   950  00003F                     _nvmConnectionTable:
   951                           	opt stack 0
   952  00003F                     	ds	2
   953  000041                     _conn_size:
   954                           	opt stack 0
   955  000041                     	ds	1
   956                           tblptru	equ	0xFF8
   957                           tblptrh	equ	0xFF7
   958                           tblptrl	equ	0xFF6
   959                           tablat	equ	0xFF5
   960                           postinc0	equ	0xFEE
   961                           wreg	equ	0xFE8
   962                           
   963                           	psect	dataCOMRAM
   964  000042                     __pdataCOMRAM:
   965                           	opt stack 0
   966  000042                     _BankIndex:
   967                           	opt stack 0
   968  000042                     	ds	1
   969  000043                     _role:
   970                           	opt stack 0
   971  000043                     	ds	1
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           postinc0	equ	0xFEE
   977                           wreg	equ	0xFE8
   978                           
   979                           	psect	bssBANK0
   980  0000B9                     __pbssBANK0:
   981                           	opt stack 0
   982  0000B9                     _rxMessage:
   983                           	opt stack 0
   984  0000B9                     	ds	10
   985  0000C3                     _DataRequestTimer:
   986                           	opt stack 0
   987  0000C3                     	ds	4
   988  0000C7                     _LCDCommand:
   989                           	opt stack 0
   990  0000C7                     	ds	4
   991  0000CB                     _nvmDelayTick:
   992                           	opt stack 0
   993  0000CB                     	ds	4
   994  0000CF                     _t2:
   995                           	opt stack 0
   996  0000CF                     	ds	4
   997  0000D3                     _t3:
   998                           	opt stack 0
   999  0000D3                     	ds	4
  1000  0000D7                     _MACInitParams:
  1001                           	opt stack 0
  1002  0000D7                     	ds	3
  1003  0000DA                     _failureCounter:
  1004                           	opt stack 0
  1005  0000DA                     	ds	2
  1006  0000DC                     _nextEEPosition:
  1007                           	opt stack 0
  1008  0000DC                     	ds	2
  1009  0000DE                     _timer1ReloadVal:
  1010                           	opt stack 0
  1011  0000DE                     	ds	2
  1012  0000E0                     _LatestConnection:
  1013                           	opt stack 0
  1014  0000E0                     	ds	1
  1015  0000E1                     _MACCurrentChannel:
  1016                           	opt stack 0
  1017  0000E1                     	ds	1
  1018  0000E2                     _P2PCapacityInfo:
  1019                           	opt stack 0
  1020  0000E2                     	ds	1
  1021  0000E3                     _P2PStatus:
  1022                           	opt stack 0
  1023  0000E3                     	ds	1
  1024  0000E4                     _PUSH_BUTTON_pressed:
  1025                           	opt stack 0
  1026  0000E4                     	ds	1
  1027  0000E5                     _RxNum:
  1028                           	opt stack 0
  1029  0000E5                     	ds	1
  1030  0000E6                     _TxData:
  1031                           	opt stack 0
  1032  0000E6                     	ds	1
  1033  0000E7                     _TxNum:
  1034                           	opt stack 0
  1035  0000E7                     	ds	1
  1036  0000E8                     _awake:
  1037                           	opt stack 0
  1038  0000E8                     	ds	1
  1039  0000E9                     _fix_me:
  1040                           	opt stack 0
  1041  0000E9                     	ds	1
  1042  0000EA                     _rec_ack:
  1043                           	opt stack 0
  1044  0000EA                     	ds	1
  1045  0000EB                     _myPANID:
  1046                           	opt stack 0
  1047  0000EB                     	ds	2
  1048  0000ED                     _nvmConnMode:
  1049                           	opt stack 0
  1050  0000ED                     	ds	2
  1051  0000EF                     _nvmCurrentChannel:
  1052                           	opt stack 0
  1053  0000EF                     	ds	2
  1054  0000F1                     _nvmEdc:
  1055                           	opt stack 0
  1056  0000F1                     	ds	2
  1057  0000F3                     _nvmMyPANID:
  1058                           	opt stack 0
  1059  0000F3                     	ds	2
  1060  0000F5                     _nvmOutFrameCounter:
  1061                           	opt stack 0
  1062  0000F5                     	ds	2
  1063  0000F7                     _nvmRole:
  1064                           	opt stack 0
  1065  0000F7                     	ds	2
  1066  0000F9                     _nvmmyIndex:
  1067                           	opt stack 0
  1068  0000F9                     	ds	2
  1069  0000FB                     _currentChannel:
  1070                           	opt stack 0
  1071  0000FB                     	ds	1
  1072  0000FC                     _myConnectionIndex_in_PanCo:
  1073                           	opt stack 0
  1074  0000FC                     	ds	1
  1075                           tblptru	equ	0xFF8
  1076                           tblptrh	equ	0xFF7
  1077                           tblptrl	equ	0xFF6
  1078                           tablat	equ	0xFF5
  1079                           postinc0	equ	0xFEE
  1080                           wreg	equ	0xFE8
  1081                           
  1082                           	psect	dataBANK0
  1083  0000FD                     __pdataBANK0:
  1084                           	opt stack 0
  1085  0000FD                     _AdditionalNodeID:
  1086                           	opt stack 0
  1087  0000FD                     	ds	1
  1088  0000FE                     _chk_sel_status:
  1089                           	opt stack 0
  1090  0000FE                     	ds	1
  1091  0000FF                     _ConnMode:
  1092                           	opt stack 0
  1093  0000FF                     	ds	1
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           postinc0	equ	0xFEE
  1099                           wreg	equ	0xFE8
  1100                           
  1101                           	psect	bssBANK1
  1102  000100                     __pbssBANK1:
  1103                           	opt stack 0
  1104  000100                     _PUSH_BUTTON_press_time:
  1105                           	opt stack 0
  1106  000100                     	ds	4
  1107  000104                     _t1:
  1108                           	opt stack 0
  1109  000104                     	ds	4
  1110  000108                     _tt1:
  1111                           	opt stack 0
  1112  000108                     	ds	4
  1113  00010C                     _tt2:
  1114                           	opt stack 0
  1115  00010C                     	ds	4
  1116  000110                     _END_DEVICES_Short_Address:
  1117                           	opt stack 0
  1118  000110                     	ds	40
  1119  000138                     _TxBuffer:
  1120                           	opt stack 0
  1121  000138                     	ds	40
  1122  000160                     _myLongAddress:
  1123                           	opt stack 0
  1124  000160                     	ds	8
  1125                           tblptru	equ	0xFF8
  1126                           tblptrh	equ	0xFF7
  1127                           tblptrl	equ	0xFF6
  1128                           tablat	equ	0xFF5
  1129                           postinc0	equ	0xFEE
  1130                           wreg	equ	0xFE8
  1131                           
  1132                           	psect	bssBANK2
  1133  000200                     __pbssBANK2:
  1134                           	opt stack 0
  1135  000200                     _RxBuffer:
  1136                           	opt stack 0
  1137  000200                     	ds	138
  1138  00028A                     _LCDText:
  1139                           	opt stack 0
  1140  00028A                     	ds	33
  1141                           tblptru	equ	0xFF8
  1142                           tblptrh	equ	0xFF7
  1143                           tblptrl	equ	0xFF6
  1144                           tablat	equ	0xFF5
  1145                           postinc0	equ	0xFEE
  1146                           wreg	equ	0xFE8
  1147                           
  1148                           	psect	bssBANK3
  1149  000300                     __pbssBANK3:
  1150                           	opt stack 0
  1151  000300                     _ConnectionTable:
  1152                           	opt stack 0
  1153  000300                     	ds	140
  1154                           tblptru	equ	0xFF8
  1155                           tblptrh	equ	0xFF7
  1156                           tblptrl	equ	0xFF6
  1157                           tablat	equ	0xFF5
  1158                           postinc0	equ	0xFEE
  1159                           wreg	equ	0xFE8
  1160                           
  1161                           	psect	cstackBANK1
  1162  000168                     __pcstackBANK1:
  1163                           	opt stack 0
  1164  000168                     ??_MiApp_UnicastStar:
  1165  000168                     MiApp_TransceiverPowerState@Mode:
  1166                           	opt stack 0
  1167  000168                     MiApp_EstablishConnection@Mode:
  1168                           	opt stack 0
  1169                           
  1170                           ; 1 bytes @ 0x0
  1171  000168                     	ds	1
  1172  000169                     ??_MiApp_EstablishConnection:
  1173                           
  1174                           ; 0 bytes @ 0x1
  1175  000169                     	ds	3
  1176  00016C                     MiApp_UnicastStar@SecEn:
  1177                           	opt stack 0
  1178                           
  1179                           ; 1 bytes @ 0x4
  1180  00016C                     	ds	1
  1181  00016D                     MiApp_EstablishConnection@tmpConnectionMode:
  1182                           	opt stack 0
  1183  00016D                     MiApp_UnicastStar@t1:
  1184                           	opt stack 0
  1185                           
  1186                           ; 4 bytes @ 0x5
  1187  00016D                     	ds	1
  1188  00016E                     MiApp_EstablishConnection@retry:
  1189                           	opt stack 0
  1190                           
  1191                           ; 1 bytes @ 0x6
  1192  00016E                     	ds	1
  1193  00016F                     MiApp_EstablishConnection@connectionInterval:
  1194                           	opt stack 0
  1195                           
  1196                           ; 1 bytes @ 0x7
  1197  00016F                     	ds	1
  1198  000170                     MiApp_EstablishConnection@t1:
  1199                           	opt stack 0
  1200                           
  1201                           ; 4 bytes @ 0x8
  1202  000170                     	ds	1
  1203  000171                     MiApp_UnicastStar@t2:
  1204                           	opt stack 0
  1205                           
  1206                           ; 4 bytes @ 0x9
  1207  000171                     	ds	3
  1208  000174                     MiApp_EstablishConnection@t2:
  1209                           	opt stack 0
  1210                           
  1211                           ; 4 bytes @ 0xC
  1212  000174                     	ds	4
  1213  000178                     MiApp_EstablishConnection@i:
  1214                           	opt stack 0
  1215                           
  1216                           ; 1 bytes @ 0x10
  1217  000178                     	ds	1
  1218  000179                     ??_run_star_demo:
  1219  000179                     Initialize_Demo@freezer_enable:
  1220                           	opt stack 0
  1221                           
  1222                           ; 1 bytes @ 0x11
  1223  000179                     	ds	7
  1224  000180                     run_star_demo@sw_layer_ack_status:
  1225                           	opt stack 0
  1226                           
  1227                           ; 1 bytes @ 0x18
  1228  000180                     	ds	1
  1229  000181                     run_star_demo@update_ed:
  1230                           	opt stack 0
  1231                           
  1232                           ; 1 bytes @ 0x19
  1233  000181                     	ds	1
  1234  000182                     run_star_demo@PressedButton:
  1235                           	opt stack 0
  1236                           
  1237                           ; 1 bytes @ 0x1A
  1238  000182                     	ds	1
  1239  000183                     run_star_demo@switch_val:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0x1B
  1243  000183                     	ds	1
  1244  000184                     run_star_demo@select_ed:
  1245                           	opt stack 0
  1246                           
  1247                           ; 1 bytes @ 0x1C
  1248  000184                     	ds	1
  1249  000185                     main@freezer_enable:
  1250                           	opt stack 0
  1251                           
  1252                           ; 1 bytes @ 0x1D
  1253  000185                     	ds	1
  1254                           tblptru	equ	0xFF8
  1255                           tblptrh	equ	0xFF7
  1256                           tblptrl	equ	0xFF6
  1257                           tablat	equ	0xFF5
  1258                           postinc0	equ	0xFEE
  1259                           wreg	equ	0xFE8
  1260                           
  1261                           	psect	cstackBANK0
  1262  000060                     __pcstackBANK0:
  1263                           	opt stack 0
  1264  000060                     ??_InitMRF24J40:
  1265  000060                     ??_store_connection_tb:
  1266  000060                     ??_DELAY_ms:
  1267  000060                     ??_Read_MAC_Address:
  1268  000060                     ?___lwmod:
  1269                           	opt stack 0
  1270  000060                     NVMWrite@oldRFIE:
  1271                           	opt stack 0
  1272  000060                     MiWi_TickGet@failureCounter:
  1273                           	opt stack 0
  1274  000060                     ___lwmod@dividend:
  1275                           	opt stack 0
  1276                           
  1277                           ; 2 bytes @ 0x0
  1278  000060                     	ds	1
  1279  000061                     NVMWrite@PageCounter:
  1280                           	opt stack 0
  1281  000061                     InitMRF24J40@_dcnt:
  1282                           	opt stack 0
  1283  000061                     MiWi_TickGet@currentTime:
  1284                           	opt stack 0
  1285                           
  1286                           ; 4 bytes @ 0x1
  1287  000061                     	ds	1
  1288  000062                     ??_AddConnection:
  1289  000062                     store_connection_tb@j:
  1290                           	opt stack 0
  1291  000062                     MiApp_SetChannel@channel:
  1292                           	opt stack 0
  1293  000062                     MiApp_ConnectionMode@Mode:
  1294                           	opt stack 0
  1295  000062                     ___lwmod@divisor:
  1296                           	opt stack 0
  1297                           
  1298                           ; 2 bytes @ 0x2
  1299  000062                     	ds	1
  1300  000063                     store_connection_tb@i:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x3
  1304  000063                     	ds	1
  1305  000064                     ?_sprintf:
  1306                           	opt stack 0
  1307  000064                     sprintf@sp:
  1308                           	opt stack 0
  1309                           
  1310                           ; 2 bytes @ 0x4
  1311  000064                     	ds	1
  1312  000065                     InitMRF24J40@_dcnt_635:
  1313                           	opt stack 0
  1314  000065                     ButtonPressed@tickDifference:
  1315                           	opt stack 0
  1316                           
  1317                           ; 4 bytes @ 0x5
  1318  000065                     	ds	1
  1319  000066                     sprintf@f:
  1320                           	opt stack 0
  1321                           
  1322                           ; 2 bytes @ 0x6
  1323  000066                     	ds	1
  1324  000067                     AddConnection@connectionSlot:
  1325                           	opt stack 0
  1326                           
  1327                           ; 1 bytes @ 0x7
  1328  000067                     	ds	1
  1329  000068                     AddConnection@i:
  1330                           	opt stack 0
  1331                           
  1332                           ; 1 bytes @ 0x8
  1333  000068                     	ds	1
  1334  000069                     InitMRF24J40@_ms:
  1335                           	opt stack 0
  1336  000069                     ButtonPressed@t:
  1337                           	opt stack 0
  1338                           
  1339                           ; 4 bytes @ 0x9
  1340  000069                     	ds	4
  1341  00006D                     InitMRF24J40@_ms_636:
  1342                           	opt stack 0
  1343                           
  1344                           ; 4 bytes @ 0xD
  1345  00006D                     	ds	3
  1346  000070                     ??_sprintf:
  1347                           
  1348                           ; 0 bytes @ 0x10
  1349  000070                     	ds	1
  1350  000071                     InitMRF24J40@j:
  1351                           	opt stack 0
  1352                           
  1353                           ; 2 bytes @ 0x11
  1354  000071                     	ds	2
  1355  000073                     InitMRF24J40@i:
  1356                           	opt stack 0
  1357                           
  1358                           ; 1 bytes @ 0x13
  1359  000073                     	ds	1
  1360  000074                     MiMAC_PowerState@PowerState:
  1361                           	opt stack 0
  1362  000074                     sprintf@idx:
  1363                           	opt stack 0
  1364  000074                     MiMAC_Init@initValue:
  1365                           	opt stack 0
  1366  000074                     MiMAC_SendPacket@transParam:
  1367                           	opt stack 0
  1368                           
  1369                           ; 7 bytes @ 0x14
  1370  000074                     	ds	1
  1371  000075                     _sprintf$3719:
  1372                           	opt stack 0
  1373  000075                     MiMAC_PowerState@t1:
  1374                           	opt stack 0
  1375                           
  1376                           ; 4 bytes @ 0x15
  1377  000075                     	ds	2
  1378  000077                     MiMAC_Init@i:
  1379                           	opt stack 0
  1380  000077                     _sprintf$3720:
  1381                           	opt stack 0
  1382                           
  1383                           ; 2 bytes @ 0x17
  1384  000077                     	ds	1
  1385  000078                     MiApp_ProtocolInit@tmp:
  1386                           	opt stack 0
  1387                           
  1388                           ; 2 bytes @ 0x18
  1389  000078                     	ds	1
  1390  000079                     MiMAC_PowerState@results:
  1391                           	opt stack 0
  1392  000079                     _sprintf$3726:
  1393                           	opt stack 0
  1394                           
  1395                           ; 2 bytes @ 0x19
  1396  000079                     	ds	1
  1397  00007A                     MiApp_ProtocolInit@bNetworkFreezer:
  1398                           	opt stack 0
  1399  00007A                     MiMAC_PowerState@t2:
  1400                           	opt stack 0
  1401                           
  1402                           ; 4 bytes @ 0x1A
  1403  00007A                     	ds	1
  1404  00007B                     sprintf@cp:
  1405                           	opt stack 0
  1406  00007B                     MiMAC_SendPacket@MACPayload:
  1407                           	opt stack 0
  1408  00007B                     MiApp_ProtocolInit@initValue:
  1409                           	opt stack 0
  1410                           
  1411                           ; 3 bytes @ 0x1B
  1412  00007B                     	ds	1
  1413  00007C                     sprintf@len:
  1414                           	opt stack 0
  1415                           
  1416                           ; 2 bytes @ 0x1C
  1417  00007C                     	ds	1
  1418  00007D                     MiMAC_SendPacket@MACPayloadLen:
  1419                           	opt stack 0
  1420                           
  1421                           ; 1 bytes @ 0x1D
  1422  00007D                     	ds	1
  1423  00007E                     ??_MiMAC_SendPacket:
  1424  00007E                     MiApp_ProtocolInit@i:
  1425                           	opt stack 0
  1426  00007E                     sprintf@ap:
  1427                           	opt stack 0
  1428                           
  1429                           ; 1 bytes @ 0x1E
  1430  00007E                     	ds	1
  1431  00007F                     sprintf@val:
  1432                           	opt stack 0
  1433                           
  1434                           ; 2 bytes @ 0x1F
  1435  00007F                     	ds	2
  1436  000081                     sprintf@prec:
  1437                           	opt stack 0
  1438                           
  1439                           ; 1 bytes @ 0x21
  1440  000081                     	ds	1
  1441  000082                     sprintf@width:
  1442                           	opt stack 0
  1443  000082                     MiMAC_SendPacket@t1:
  1444                           	opt stack 0
  1445                           
  1446                           ; 4 bytes @ 0x22
  1447  000082                     	ds	2
  1448  000084                     sprintf@c:
  1449                           	opt stack 0
  1450                           
  1451                           ; 1 bytes @ 0x24
  1452  000084                     	ds	1
  1453  000085                     sprintf@flag:
  1454                           	opt stack 0
  1455                           
  1456                           ; 2 bytes @ 0x25
  1457  000085                     	ds	1
  1458  000086                     MiMAC_SendPacket@t2:
  1459                           	opt stack 0
  1460                           
  1461                           ; 4 bytes @ 0x26
  1462  000086                     	ds	1
  1463  000087                     LCDTRXCount@rxCount:
  1464                           	opt stack 0
  1465  000087                     LCDDisplay@text:
  1466                           	opt stack 0
  1467                           
  1468                           ; 2 bytes @ 0x27
  1469  000087                     	ds	1
  1470  000088                     DemoOutput_UpdateTxRx@RxNum:
  1471                           	opt stack 0
  1472                           
  1473                           ; 1 bytes @ 0x28
  1474  000088                     	ds	1
  1475  000089                     LCDDisplay@value:
  1476                           	opt stack 0
  1477  000089                     DemoOutput_UpdateTxRx@TxNum:
  1478                           	opt stack 0
  1479                           
  1480                           ; 1 bytes @ 0x29
  1481  000089                     	ds	1
  1482  00008A                     MiMAC_SendPacket@IntraPAN:
  1483                           	opt stack 0
  1484  00008A                     LCDDisplay@delay:
  1485                           	opt stack 0
  1486                           
  1487                           ; 1 bytes @ 0x2A
  1488  00008A                     	ds	1
  1489  00008B                     MiMAC_SendPacket@frameControl:
  1490                           	opt stack 0
  1491  00008B                     DemoOutput_Channel@Step:
  1492                           	opt stack 0
  1493  00008B                     STAR_DEMO_OPTIONS_MESSAGE@NetworkRole:
  1494                           	opt stack 0
  1495  00008B                     freezer_feature@PressedButton1:
  1496                           	opt stack 0
  1497                           
  1498                           ; 1 bytes @ 0x2B
  1499  00008B                     	ds	1
  1500  00008C                     MiMAC_SendPacket@headerLength:
  1501                           	opt stack 0
  1502  00008C                     DemoOutput_Channel@channel:
  1503                           	opt stack 0
  1504                           
  1505                           ; 1 bytes @ 0x2C
  1506  00008C                     	ds	1
  1507  00008D                     MiMAC_SendPacket@i:
  1508                           	opt stack 0
  1509                           
  1510                           ; 1 bytes @ 0x2D
  1511  00008D                     	ds	1
  1512  00008E                     MiMAC_SendPacket@loc:
  1513                           	opt stack 0
  1514                           
  1515                           ; 1 bytes @ 0x2E
  1516  00008E                     	ds	1
  1517  00008F                     SendPacket@DestinationPANID:
  1518                           	opt stack 0
  1519                           
  1520                           ; 2 bytes @ 0x2F
  1521  00008F                     	ds	2
  1522  000091                     SendPacket@DestinationAddress:
  1523                           	opt stack 0
  1524                           
  1525                           ; 2 bytes @ 0x31
  1526  000091                     	ds	2
  1527  000093                     SendPacket@isCommand:
  1528                           	opt stack 0
  1529                           
  1530                           ; 1 bytes @ 0x33
  1531  000093                     	ds	1
  1532  000094                     SendPacket@SecurityEnabled:
  1533                           	opt stack 0
  1534                           
  1535                           ; 1 bytes @ 0x34
  1536  000094                     	ds	1
  1537  000095                     ??_SendPacket:
  1538                           
  1539                           ; 0 bytes @ 0x35
  1540  000095                     	ds	1
  1541  000096                     SendPacket@status:
  1542                           	opt stack 0
  1543                           
  1544                           ; 1 bytes @ 0x36
  1545  000096                     	ds	1
  1546  000097                     SendPacket@Broadcast:
  1547                           	opt stack 0
  1548                           
  1549                           ; 1 bytes @ 0x37
  1550  000097                     	ds	1
  1551  000098                     SendPacket@tParam:
  1552                           	opt stack 0
  1553                           
  1554                           ; 7 bytes @ 0x38
  1555  000098                     	ds	7
  1556  00009F                     CheckForData@tmpTxData:
  1557                           	opt stack 0
  1558  00009F                     MiApp_UnicastAddress@DestinationAddress:
  1559                           	opt stack 0
  1560  00009F                     SW_Ack_SrED@Dest_Addr:
  1561                           	opt stack 0
  1562                           
  1563                           ; 2 bytes @ 0x3F
  1564  00009F                     	ds	1
  1565  0000A0                     CheckForData@firstuint8_t:
  1566                           	opt stack 0
  1567                           
  1568                           ; 1 bytes @ 0x40
  1569  0000A0                     	ds	1
  1570  0000A1                     MiApp_UnicastAddress@PermanentAddr:
  1571                           	opt stack 0
  1572                           
  1573                           ; 1 bytes @ 0x41
  1574  0000A1                     	ds	1
  1575  0000A2                     MiApp_UnicastAddress@SecEn:
  1576                           	opt stack 0
  1577                           
  1578                           ; 1 bytes @ 0x42
  1579  0000A2                     	ds	1
  1580  0000A3                     MiApp_UnicastConnection@SecEn:
  1581                           	opt stack 0
  1582                           
  1583                           ; 1 bytes @ 0x43
  1584  0000A3                     	ds	1
  1585  0000A4                     MiApp_UnicastConnection@ConnectionIndex:
  1586                           	opt stack 0
  1587                           
  1588                           ; 1 bytes @ 0x44
  1589  0000A4                     	ds	1
  1590  0000A5                     Forward_Packet_PANCr_to_EDy@fw_payload:
  1591                           	opt stack 0
  1592                           
  1593                           ; 2 bytes @ 0x45
  1594  0000A5                     	ds	2
  1595  0000A7                     Forward_Packet_PANCr_to_EDy@index:
  1596                           	opt stack 0
  1597                           
  1598                           ; 1 bytes @ 0x47
  1599  0000A7                     	ds	1
  1600  0000A8                     Forward_Packet_PANCr_to_EDy@EDxAddress:
  1601                           	opt stack 0
  1602                           
  1603                           ; 2 bytes @ 0x48
  1604  0000A8                     	ds	2
  1605  0000AA                     Forward_Packet_PANCr_to_EDy@status:
  1606                           	opt stack 0
  1607                           
  1608                           ; 1 bytes @ 0x4A
  1609  0000AA                     	ds	1
  1610  0000AB                     Forward_Packet_PANCr_to_EDy@i:
  1611                           	opt stack 0
  1612                           
  1613                           ; 1 bytes @ 0x4B
  1614  0000AB                     	ds	1
  1615  0000AC                     ??_P2PTasks:
  1616                           
  1617                           ; 0 bytes @ 0x4C
  1618  0000AC                     	ds	4
  1619  0000B0                     P2PTasks@FW_Stat:
  1620                           	opt stack 0
  1621                           
  1622                           ; 1 bytes @ 0x50
  1623  0000B0                     	ds	1
  1624  0000B1                     P2PTasks@tmp:
  1625                           	opt stack 0
  1626                           
  1627                           ; 2 bytes @ 0x51
  1628  0000B1                     	ds	2
  1629  0000B3                     P2PTasks@final_index:
  1630                           	opt stack 0
  1631                           
  1632                           ; 1 bytes @ 0x53
  1633  0000B3                     	ds	1
  1634  0000B4                     P2PTasks@tmpTick:
  1635                           	opt stack 0
  1636                           
  1637                           ; 4 bytes @ 0x54
  1638  0000B4                     	ds	4
  1639  0000B8                     P2PTasks@i:
  1640                           	opt stack 0
  1641                           
  1642                           ; 1 bytes @ 0x58
  1643  0000B8                     	ds	1
  1644                           tblptru	equ	0xFF8
  1645                           tblptrh	equ	0xFF7
  1646                           tblptrl	equ	0xFF6
  1647                           tablat	equ	0xFF5
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           
  1651                           	psect	cstackCOMRAM
  1652  000001                     __pcstackCOMRAM:
  1653                           	opt stack 0
  1654  000001                     i2SPI1_Exchange8bit@data:
  1655                           	opt stack 0
  1656  000001                     i2DELAY_ms@ms:
  1657                           	opt stack 0
  1658                           
  1659                           ; 2 bytes @ 0x0
  1660  000001                     	ds	1
  1661  000002                     i2PHYSetShortRAMAddr@value:
  1662                           	opt stack 0
  1663  000002                     i2PHYGetShortRAMAddr@address:
  1664                           	opt stack 0
  1665  000002                     i2PHYGetLongRAMAddr@address:
  1666                           	opt stack 0
  1667                           
  1668                           ; 2 bytes @ 0x1
  1669  000002                     	ds	1
  1670  000003                     ??i2_DELAY_ms:
  1671  000003                     i2PHYSetShortRAMAddr@address:
  1672                           	opt stack 0
  1673  000003                     i2PHYGetShortRAMAddr@toReturn:
  1674                           	opt stack 0
  1675                           
  1676                           ; 1 bytes @ 0x2
  1677  000003                     	ds	1
  1678  000004                     ??i2_PHYGetLongRAMAddr:
  1679  000004                     i2PHYSetShortRAMAddr@tmpRFIE:
  1680                           	opt stack 0
  1681  000004                     i2PHYGetShortRAMAddr@tmpRFIE:
  1682                           	opt stack 0
  1683                           
  1684                           ; 1 bytes @ 0x3
  1685  000004                     	ds	2
  1686  000006                     i2PHYGetLongRAMAddr@toReturn:
  1687                           	opt stack 0
  1688                           
  1689                           ; 1 bytes @ 0x5
  1690  000006                     	ds	1
  1691  000007                     i2PHYGetLongRAMAddr@tmpRFIE:
  1692                           	opt stack 0
  1693                           
  1694                           ; 1 bytes @ 0x6
  1695  000007                     	ds	4
  1696  00000B                     i2DELAY_ms@cyclesRequiredForEntireDelay:
  1697                           	opt stack 0
  1698                           
  1699                           ; 4 bytes @ 0xA
  1700  00000B                     	ds	4
  1701  00000F                     ??_high_isr:
  1702  00000F                     
  1703                           ; 0 bytes @ 0xE
  1704  00000F                     	ds	9
  1705  000018                     high_isr@results:
  1706                           	opt stack 0
  1707                           
  1708                           ; 1 bytes @ 0x17
  1709  000018                     	ds	1
  1710  000019                     high_isr@flags:
  1711                           	opt stack 0
  1712                           
  1713                           ; 2 bytes @ 0x18
  1714  000019                     	ds	2
  1715  00001B                     high_isr@RxBank:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0x1A
  1719  00001B                     	ds	1
  1720  00001C                     high_isr@i:
  1721                           	opt stack 0
  1722                           
  1723                           ; 1 bytes @ 0x1B
  1724  00001C                     	ds	1
  1725  00001D                     ??_isdigit:
  1726  00001D                     ??_MiMAC_ReceivedPacket:
  1727  00001D                     ??_handle_lost_connection:
  1728  00001D                     ?___wmul:
  1729                           	opt stack 0
  1730  00001D                     ?___lwdiv:
  1731                           	opt stack 0
  1732  00001D                     ?_MiWi_TickGet:
  1733                           	opt stack 0
  1734  00001D                     Total_Connections@count:
  1735                           	opt stack 0
  1736  00001D                     DumpConnection@index:
  1737                           	opt stack 0
  1738  00001D                     I2CWrite@BufferLen:
  1739                           	opt stack 0
  1740  00001D                     LCD_Erase@i:
  1741                           	opt stack 0
  1742  00001D                     SPI1_Exchange8bit@data:
  1743                           	opt stack 0
  1744  00001D                     NVMalloc@size:
  1745                           	opt stack 0
  1746  00001D                     Find_Index@DestAddr:
  1747                           	opt stack 0
  1748  00001D                     isSameAddress@Address1:
  1749                           	opt stack 0
  1750  00001D                     DELAY_ms@ms:
  1751                           	opt stack 0
  1752  00001D                     ___wmul@multiplier:
  1753                           	opt stack 0
  1754  00001D                     ___lwdiv@dividend:
  1755                           	opt stack 0
  1756                           
  1757                           ; 2 bytes @ 0x1C
  1758  00001D                     	ds	1
  1759  00001E                     PHYSetShortRAMAddr@value:
  1760                           	opt stack 0
  1761  00001E                     PHYGetShortRAMAddr@address:
  1762                           	opt stack 0
  1763  00001E                     Total_Connections@i:
  1764                           	opt stack 0
  1765  00001E                     DumpConnection@j:
  1766                           	opt stack 0
  1767  00001E                     I2CWrite@Commandlen:
  1768                           	opt stack 0
  1769  00001E                     _isdigit$4005:
  1770                           	opt stack 0
  1771  00001E                     PHYSetLongRAMAddr@address:
  1772                           	opt stack 0
  1773  00001E                     PHYGetLongRAMAddr@address:
  1774                           	opt stack 0
  1775  00001E                     NVMRead@dest:
  1776                           	opt stack 0
  1777  00001E                     NVMWrite@source:
  1778                           	opt stack 0
  1779  00001E                     EEPROM_Read@dest:
  1780                           	opt stack 0
  1781                           
  1782                           ; 2 bytes @ 0x1D
  1783  00001E                     	ds	1
  1784  00001F                     PHYSetShortRAMAddr@address:
  1785                           	opt stack 0
  1786  00001F                     PHYGetShortRAMAddr@toReturn:
  1787                           	opt stack 0
  1788  00001F                     NVMalloc@location:
  1789                           	opt stack 0
  1790  00001F                     DumpConnection@i:
  1791                           	opt stack 0
  1792  00001F                     isdigit@c:
  1793                           	opt stack 0
  1794  00001F                     isSameAddress@Address2:
  1795                           	opt stack 0
  1796  00001F                     ___wmul@multiplicand:
  1797                           	opt stack 0
  1798  00001F                     ___lwdiv@divisor:
  1799                           	opt stack 0
  1800  00001F                     DELAY_ms@cyclesRequiredForEntireDelay:
  1801                           	opt stack 0
  1802                           
  1803                           ; 4 bytes @ 0x1E
  1804  00001F                     	ds	1
  1805  000020                     ??_PHYGetLongRAMAddr:
  1806  000020                     ??_NVMalloc:
  1807  000020                     PHYSetLongRAMAddr@value:
  1808                           	opt stack 0
  1809  000020                     PHYSetShortRAMAddr@tmpRFIE:
  1810                           	opt stack 0
  1811  000020                     PHYGetShortRAMAddr@tmpRFIE:
  1812                           	opt stack 0
  1813  000020                     EEPROM_Read@addr:
  1814                           	opt stack 0
  1815  000020                     NVMRead@addr:
  1816                           	opt stack 0
  1817  000020                     NVMWrite@addr:
  1818                           	opt stack 0
  1819                           
  1820                           ; 2 bytes @ 0x1F
  1821  000020                     	ds	1
  1822  000021                     ??_MiWi_TickGet:
  1823  000021                     ??_PHYSetLongRAMAddr:
  1824  000021                     MiMAC_SetAltAddress@PANID:
  1825                           	opt stack 0
  1826  000021                     Find_Index@i:
  1827                           	opt stack 0
  1828  000021                     EEPROM_Read@count:
  1829                           	opt stack 0
  1830  000021                     ___lwdiv@counter:
  1831                           	opt stack 0
  1832  000021                     ___wmul@product:
  1833                           	opt stack 0
  1834                           
  1835                           ; 2 bytes @ 0x20
  1836  000021                     	ds	1
  1837  000022                     PHYGetLongRAMAddr@toReturn:
  1838                           	opt stack 0
  1839  000022                     MiMAC_ReceivedPacket@addrMode:
  1840                           	opt stack 0
  1841  000022                     MiMAC_SetAltAddress@Address:
  1842                           	opt stack 0
  1843  000022                     NVMInit@result:
  1844                           	opt stack 0
  1845  000022                     EEPROM_Read@oldGIEH:
  1846                           	opt stack 0
  1847  000022                     NVMRead@count:
  1848                           	opt stack 0
  1849  000022                     NVMWrite@count:
  1850                           	opt stack 0
  1851  000022                     ___lwdiv@quotient:
  1852                           	opt stack 0
  1853                           
  1854                           ; 2 bytes @ 0x21
  1855  000022                     	ds	1
  1856  000023                     PHYSetLongRAMAddr@tmpRFIE:
  1857                           	opt stack 0
  1858  000023                     PHYGetLongRAMAddr@tmpRFIE:
  1859                           	opt stack 0
  1860  000023                     MiMAC_ReceivedPacket@i:
  1861                           	opt stack 0
  1862  000023                     handle_lost_connection@i:
  1863                           	opt stack 0
  1864  000023                     isSameAddress@i:
  1865                           	opt stack 0
  1866  000023                     Read_MAC_Address@myAddress:
  1867                           	opt stack 0
  1868                           
  1869                           ; 2 bytes @ 0x22
  1870  000023                     	ds	1
  1871  000024                     ??_NVMWrite:
  1872  000024                     MiMAC_ReceivedPacket@bIntraPAN:
  1873                           	opt stack 0
  1874  000024                     MiMAC_SetChannel@offsetFreq:
  1875                           	opt stack 0
  1876  000024                     NVMRead@oldRFIE:
  1877                           	opt stack 0
  1878  000024                     ___lwmod@counter:
  1879                           	opt stack 0
  1880  000024                     store_connection_tb@payload:
  1881                           	opt stack 0
  1882                           
  1883                           ; 2 bytes @ 0x23
  1884  000024                     	ds	1
  1885  000025                     ??_MiApp_ConnectionMode:
  1886  000025                     MiMAC_SetChannel@channel:
  1887                           	opt stack 0
  1888  000025                     Read_MAC_Address@i:
  1889                           	opt stack 0
  1890  000025                     LCDTRXCount@txCount:
  1891                           	opt stack 0
  1892  000025                     LCDDisplay@i:
  1893                           	opt stack 0
  1894                           
  1895                           ; 1 bytes @ 0x24
  1896  000025                     	ds	1
  1897  000026                     tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           tblptrl	equ	0xFF6
  1900                           tablat	equ	0xFF5
  1901                           postinc0	equ	0xFEE
  1902                           wreg	equ	0xFE8
  1903                           
  1904                           ; 0 bytes @ 0x25
  1905 ;;
  1906 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1907 ;;
  1908 ;; *************** function _main *****************
  1909 ;; Defined at:
  1910 ;;		line 56 in file "../src/main.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  freezer_enab    1   29[BANK1 ] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;		None               void
  1917 ;; Registers used:
  1918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : F/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1925 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1927 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1928 ;;Total ram usage:        1 bytes
  1929 ;; Hardware stack levels required when called:   18
  1930 ;; This function calls:
  1931 ;;		_DemoOutput_Greeting
  1932 ;;		_Initialize_Demo
  1933 ;;		_Run_Demo
  1934 ;;		_SYSTEM_Initialize
  1935 ;;		_TMR1_Initialize
  1936 ;;		_freezer_feature
  1937 ;; This function is called by:
  1938 ;;		Startup code after reset
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text0
  1943  00346A                     __ptext0:
  1944                           	opt stack 0
  1945  00346A                     _main:
  1946                           	opt stack 13
  1947                           
  1948                           ;main.c: 60: SYSTEM_Initialize();
  1949                           
  1950                           ;incstack = 0
  1951  00346A  ECAD  F014         	call	_SYSTEM_Initialize	;wreg free
  1952                           
  1953                           ;main.c: 62: TMR1_Initialize();
  1954  00346E  EC64  F01A         	call	_TMR1_Initialize	;wreg free
  1955                           
  1956                           ;main.c: 64: DemoOutput_Greeting();
  1957  003472  EC24  F01A         	call	_DemoOutput_Greeting	;wreg free
  1958                           
  1959                           ;main.c: 68: freezer_enable = freezer_feature();
  1960  003476  ECFE  F019         	call	_freezer_feature	;wreg free
  1961  00347A  0101               	movlb	1	; () banked
  1962  00347C  6F85               	movwf	main@freezer_enable& (0+255),b
  1963                           
  1964                           ; BSR set to: 1
  1965                           ;main.c: 72: Initialize_Demo(freezer_enable);
  1966  00347E  5185               	movf	main@freezer_enable& (0+255),w,b
  1967  003480  EC76  F015         	call	_Initialize_Demo
  1968  003484                     l12619:
  1969                           
  1970                           ;main.c: 74: {
  1971                           ;main.c: 76: Run_Demo();
  1972  003484  ECF3  F01A         	call	_Run_Demo	;wreg free
  1973  003488  D7FD               	goto	l12619
  1974  00348A                     __end_of_main:
  1975                           	opt stack 0
  1976                           tblptru	equ	0xFF8
  1977                           tblptrh	equ	0xFF7
  1978                           tblptrl	equ	0xFF6
  1979                           tablat	equ	0xFF5
  1980                           postinc0	equ	0xFEE
  1981                           wreg	equ	0xFE8
  1982                           
  1983 ;; *************** function _freezer_feature *****************
  1984 ;; Defined at:
  1985 ;;		line 74 in file "../src/task.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;		None
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  PressedButto    1   43[BANK0 ] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;                  1    wreg      unsigned char 
  1992 ;; Registers used:
  1993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : F/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2000 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2002 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2003 ;;Total ram usage:        1 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    7
  2006 ;; This function calls:
  2007 ;;		_ButtonPressed
  2008 ;;		_LCDDisplay
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text1
  2015  0033FC                     __ptext1:
  2016                           	opt stack 0
  2017  0033FC                     _freezer_feature:
  2018                           	opt stack 23
  2019                           
  2020                           ;task.c: 77: LCDDisplay((char *)"RB0:New Network RB2:Freezer", 0, 0);
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;incstack = 0
  2024  0033FC  0EE9               	movlw	low STR_12
  2025  0033FE  0100               	movlb	0	; () banked
  2026  003400  6F87               	movwf	LCDDisplay@text& (0+255),b
  2027  003402  0EFE               	movlw	high STR_12
  2028  003404  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
  2029  003406  6B89               	clrf	LCDDisplay@value& (0+255),b
  2030  003408  6B8A               	clrf	LCDDisplay@delay& (0+255),b
  2031  00340A  EC7B  F018         	call	_LCDDisplay	;wreg free
  2032  00340E                     l12553:
  2033                           
  2034                           ;task.c: 82: {
  2035                           ;task.c: 83: uint8_t PressedButton1 = ButtonPressed();
  2036  00340E  ECD7  F013         	call	_ButtonPressed	;wreg free
  2037  003412  6F8B               	movwf	freezer_feature@PressedButton1& (0+255),b
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;task.c: 84: if (PressedButton1 == 1)
  2041  003414  058B               	decf	freezer_feature@PressedButton1& (0+255),w,b
  2042  003416  E101               	bnz	l12565
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;task.c: 85: {
  2046                           ;task.c: 86: return 0;
  2047  003418  0C00               	retlw	0
  2048  00341A                     l12565:
  2049                           
  2050                           ; BSR set to: 0
  2051                           ;task.c: 89: else if (PressedButton1 == 2)
  2052  00341A  0E02               	movlw	2
  2053  00341C  198B               	xorwf	freezer_feature@PressedButton1& (0+255),w,b
  2054  00341E  E1F7               	bnz	l12553
  2055                           
  2056                           ; BSR set to: 0
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;task.c: 90: {
  2060                           ;task.c: 91: return 1;
  2061  003420  0C01               	retlw	1	;funcret
  2062  003422                     __end_of_freezer_feature:
  2063                           	opt stack 0
  2064                           tblptru	equ	0xFF8
  2065                           tblptrh	equ	0xFF7
  2066                           tblptrl	equ	0xFF6
  2067                           tablat	equ	0xFF5
  2068                           postinc0	equ	0xFEE
  2069                           wreg	equ	0xFE8
  2070                           
  2071 ;; *************** function _TMR1_Initialize *****************
  2072 ;; Defined at:
  2073 ;;		line 174 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/symbol.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;		None               void
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    5
  2094 ;; This function calls:
  2095 ;;		_TMR1_StartTimer
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text2
  2102  0034C8                     __ptext2:
  2103                           	opt stack 0
  2104  0034C8                     _TMR1_Initialize:
  2105                           	opt stack 25
  2106                           
  2107                           ;symbol.c: 178: T1CON = 0x38;
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;incstack = 0
  2111  0034C8  0E38               	movlw	56
  2112  0034CA  6ECD               	movwf	4045,c	;volatile
  2113                           
  2114                           ;symbol.c: 181: T1GCON = 0x00;
  2115  0034CC  6A9A               	clrf	3994,c	;volatile
  2116                           
  2117                           ;symbol.c: 184: TMR1H = 0x00;
  2118  0034CE  6ACF               	clrf	4047,c	;volatile
  2119                           
  2120                           ;symbol.c: 187: TMR1L = 0x00;
  2121  0034D0  6ACE               	clrf	4046,c	;volatile
  2122                           
  2123                           ;symbol.c: 190: timer1ReloadVal = TMR1;
  2124  0034D2  CFCE F0DE          	movff	4046,_timer1ReloadVal	;volatile
  2125  0034D6  CFCF F0DF          	movff	4047,_timer1ReloadVal+1	;volatile
  2126                           
  2127                           ;symbol.c: 193: PIR1bits.TMR1IF = 0;
  2128  0034DA  909E               	bcf	3998,0,c	;volatile
  2129                           
  2130                           ;symbol.c: 196: PIE1bits.TMR1IE = 1;
  2131  0034DC  809D               	bsf	3997,0,c	;volatile
  2132                           
  2133                           ;symbol.c: 199: TMR1_StartTimer();
  2134  0034DE  ECF6  F01A         	call	_TMR1_StartTimer	;wreg free
  2135  0034E2  0012               	return		;funcret
  2136  0034E4                     __end_of_TMR1_Initialize:
  2137                           	opt stack 0
  2138                           tblptru	equ	0xFF8
  2139                           tblptrh	equ	0xFF7
  2140                           tblptrl	equ	0xFF6
  2141                           tablat	equ	0xFF5
  2142                           postinc0	equ	0xFEE
  2143                           wreg	equ	0xFE8
  2144                           
  2145 ;; *************** function _TMR1_StartTimer *****************
  2146 ;; Defined at:
  2147 ;;		line 202 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/symbol.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;		None
  2150 ;; Auto vars:     Size  Location     Type
  2151 ;;		None
  2152 ;; Return value:  Size  Location     Type
  2153 ;;		None               void
  2154 ;; Registers used:
  2155 ;;		None
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2165 ;;Total ram usage:        0 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; Hardware stack levels required when called:    4
  2168 ;; This function calls:
  2169 ;;		Nothing
  2170 ;; This function is called by:
  2171 ;;		_TMR1_Initialize
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text3
  2176  0035EC                     __ptext3:
  2177                           	opt stack 0
  2178  0035EC                     _TMR1_StartTimer:
  2179                           	opt stack 25
  2180                           
  2181                           ;symbol.c: 204: T1CONbits.TMR1ON = 1;
  2182                           
  2183                           ;incstack = 0
  2184  0035EC  80CD               	bsf	4045,0,c	;volatile
  2185  0035EE  0012               	return		;funcret
  2186  0035F0                     __end_of_TMR1_StartTimer:
  2187                           	opt stack 0
  2188                           tblptru	equ	0xFF8
  2189                           tblptrh	equ	0xFF7
  2190                           tblptrl	equ	0xFF6
  2191                           tablat	equ	0xFF5
  2192                           postinc0	equ	0xFEE
  2193                           wreg	equ	0xFE8
  2194                           
  2195 ;; *************** function _SYSTEM_Initialize *****************
  2196 ;; Defined at:
  2197 ;;		line 50 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/system.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    6
  2218 ;; This function calls:
  2219 ;;		_LCD_Initialize
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text4
  2226  00295A                     __ptext4:
  2227                           	opt stack 0
  2228  00295A                     _SYSTEM_Initialize:
  2229                           	opt stack 24
  2230                           
  2231                           ;system.c: 54: OSCCON = 0x7B;
  2232                           
  2233                           ;incstack = 0
  2234  00295A  0E7B               	movlw	123
  2235  00295C  6ED3               	movwf	4051,c	;volatile
  2236                           
  2237                           ;system.c: 55: WDTCONbits.SWDTEN = 0;
  2238  00295E  90C0               	bcf	4032,0,c	;volatile
  2239                           
  2240                           ;system.c: 57: INTCON = 0;
  2241  002960  6AF2               	clrf	intcon,c	;volatile
  2242                           
  2243                           ;system.c: 59: EECON2 = 0x55;
  2244  002962  0E55               	movlw	85
  2245  002964  6EA7               	movwf	4007,c	;volatile
  2246                           
  2247                           ;system.c: 60: EECON2 = 0xAA;
  2248  002966  0EAA               	movlw	170
  2249  002968  6EA7               	movwf	4007,c	;volatile
  2250                           
  2251                           ;system.c: 61: PPSCONbits.IOLOCK = 0;
  2252  00296A  010E               	movlb	14	; () banked
  2253  00296C  91FF               	bcf	255,0,b	;volatile
  2254                           
  2255                           ;system.c: 68: RPINR1 = 4;
  2256  00296E  0E04               	movlw	4
  2257  002970  6FE7               	movwf	231,b	;volatile
  2258                           
  2259                           ;system.c: 84: RPINR16 = 19;
  2260  002972  0E13               	movlw	19
  2261  002974  6FF6               	movwf	246,b	;volatile
  2262                           
  2263                           ;system.c: 85: RPOR17 = 5;
  2264  002976  0E05               	movlw	5
  2265  002978  6FD7               	movwf	215,b	;volatile
  2266                           
  2267                           ;system.c: 88: EECON2 = 0x55;
  2268  00297A  0E55               	movlw	85
  2269  00297C  6EA7               	movwf	4007,c	;volatile
  2270                           
  2271                           ;system.c: 89: EECON2 = 0xAA;
  2272  00297E  0EAA               	movlw	170
  2273  002980  6EA7               	movwf	4007,c	;volatile
  2274                           
  2275                           ; BSR set to: 14
  2276                           ;system.c: 90: PPSCONbits.IOLOCK = 1;
  2277  002982  81FF               	bsf	255,0,b	;volatile
  2278                           
  2279                           ; BSR set to: 14
  2280                           ;system.c: 93: ANCON0 = 0xFF;
  2281  002984  010F               	movlb	15	; () banked
  2282  002986  6948               	setf	72,b	;volatile
  2283                           
  2284                           ;system.c: 94: ANCON1 = 0x3F;
  2285  002988  0E3F               	movlw	63
  2286  00298A  6F49               	movwf	73,b	;volatile
  2287                           
  2288                           ; BSR set to: 15
  2289                           ;system.c: 95: INTCON2bits.RBPU = 0;
  2290  00298C  9EF1               	bcf	intcon2,7,c	;volatile
  2291                           
  2292                           ; BSR set to: 15
  2293                           ;system.c: 97: TRISA = 0xFF;
  2294  00298E  6892               	setf	3986,c	;volatile
  2295                           
  2296                           ; BSR set to: 15
  2297                           ;system.c: 98: TRISB = 0xFF;
  2298  002990  6893               	setf	3987,c	;volatile
  2299                           
  2300                           ; BSR set to: 15
  2301                           ;system.c: 99: TRISC = 0xFF;
  2302  002992  6894               	setf	3988,c	;volatile
  2303                           
  2304                           ; BSR set to: 15
  2305                           ;system.c: 100: TRISD = 0xFF;
  2306  002994  6895               	setf	3989,c	;volatile
  2307                           
  2308                           ; BSR set to: 15
  2309                           ;system.c: 101: TRISE = 0xFF;
  2310  002996  6896               	setf	3990,c	;volatile
  2311                           
  2312                           ; BSR set to: 15
  2313                           ;system.c: 103: LATA = 0;
  2314  002998  6A89               	clrf	3977,c	;volatile
  2315                           
  2316                           ; BSR set to: 15
  2317                           ;system.c: 104: LATB = 0;
  2318  00299A  6A8A               	clrf	3978,c	;volatile
  2319                           
  2320                           ; BSR set to: 15
  2321                           ;system.c: 106: LATD = 0;
  2322  00299C  6A8C               	clrf	3980,c	;volatile
  2323                           
  2324                           ; BSR set to: 15
  2325                           ;system.c: 107: LATE = 0;
  2326  00299E  6A8D               	clrf	3981,c	;volatile
  2327                           
  2328                           ; BSR set to: 15
  2329                           ;system.c: 109: TRISDbits.TRISD2 = 0;
  2330  0029A0  9495               	bcf	3989,2,c	;volatile
  2331                           
  2332                           ; BSR set to: 15
  2333                           ;system.c: 110: LATDbits.LATD2 = 1;
  2334  0029A2  848C               	bsf	3980,2,c	;volatile
  2335                           
  2336                           ; BSR set to: 15
  2337                           ;system.c: 111: TRISCbits.TRISC6 = 0;
  2338  0029A4  9C94               	bcf	3988,6,c	;volatile
  2339                           
  2340                           ; BSR set to: 15
  2341                           ;system.c: 112: LATCbits.LATC6 = 0;
  2342  0029A6  9C8B               	bcf	3979,6,c	;volatile
  2343                           
  2344                           ; BSR set to: 15
  2345                           ;system.c: 115: TRISBbits.TRISB0 = 1;
  2346  0029A8  8093               	bsf	3987,0,c	;volatile
  2347                           
  2348                           ; BSR set to: 15
  2349                           ;system.c: 116: TRISBbits.TRISB2 = 1;
  2350  0029AA  8493               	bsf	3987,2,c	;volatile
  2351                           
  2352                           ; BSR set to: 15
  2353                           ;system.c: 117: TRISAbits.TRISA2 = 0;
  2354  0029AC  9492               	bcf	3986,2,c	;volatile
  2355                           
  2356                           ; BSR set to: 15
  2357                           ;system.c: 118: TRISAbits.TRISA3 = 0;
  2358  0029AE  9692               	bcf	3986,3,c	;volatile
  2359                           
  2360                           ; BSR set to: 15
  2361                           ;system.c: 121: TRISBbits.TRISB3 = 0;
  2362  0029B0  9693               	bcf	3987,3,c	;volatile
  2363                           
  2364                           ; BSR set to: 15
  2365                           ;system.c: 122: LATBbits.LATB3 = 1;
  2366  0029B2  868A               	bsf	3978,3,c	;volatile
  2367                           
  2368                           ; BSR set to: 15
  2369                           ;system.c: 123: TRISDbits.TRISD7 = 0;
  2370  0029B4  9E95               	bcf	3989,7,c	;volatile
  2371                           
  2372                           ; BSR set to: 15
  2373                           ;system.c: 124: LATDbits.LATD7 = 1;
  2374  0029B6  8E8C               	bsf	3980,7,c	;volatile
  2375                           
  2376                           ; BSR set to: 15
  2377                           ;system.c: 125: TRISBbits.TRISB1 = 1;
  2378  0029B8  8293               	bsf	3987,1,c	;volatile
  2379                           
  2380                           ; BSR set to: 15
  2381                           ;system.c: 139: TRISBbits.TRISB5 = 1;
  2382  0029BA  8A93               	bsf	3987,5,c	;volatile
  2383                           
  2384                           ; BSR set to: 15
  2385                           ;system.c: 140: TRISCbits.TRISC7 = 0;
  2386  0029BC  9E94               	bcf	3988,7,c	;volatile
  2387                           
  2388                           ; BSR set to: 15
  2389                           ;system.c: 141: TRISBbits.TRISB4 = 0;
  2390  0029BE  9893               	bcf	3987,4,c	;volatile
  2391                           
  2392                           ;system.c: 145: SSP1STAT = 0xC0;
  2393  0029C0  0EC0               	movlw	192
  2394  0029C2  6EC7               	movwf	4039,c	;volatile
  2395                           
  2396                           ;system.c: 146: SSP1CON1 = 0x21;
  2397  0029C4  0E21               	movlw	33
  2398  0029C6  6EC6               	movwf	4038,c	;volatile
  2399                           
  2400                           ; BSR set to: 15
  2401                           ;system.c: 167: TRISDbits.TRISD3 = 0;
  2402  0029C8  9695               	bcf	3989,3,c	;volatile
  2403                           
  2404                           ; BSR set to: 15
  2405                           ;system.c: 168: LATDbits.LATD3 = 1;
  2406  0029CA  868C               	bsf	3980,3,c	;volatile
  2407                           
  2408                           ; BSR set to: 15
  2409                           ;system.c: 171: INTCON2bits.INTEDG1 = 0;
  2410  0029CC  9AF1               	bcf	intcon2,5,c	;volatile
  2411                           
  2412                           ; BSR set to: 15
  2413                           ;system.c: 181: TRISCbits.TRISC2 = 0;
  2414  0029CE  9494               	bcf	3988,2,c	;volatile
  2415                           
  2416                           ; BSR set to: 15
  2417                           ;system.c: 182: LATCbits.LATC2 = 1;
  2418  0029D0  848B               	bsf	3979,2,c	;volatile
  2419                           
  2420                           ; BSR set to: 15
  2421                           ;system.c: 185: TRISDbits.TRISD5 = 0;
  2422  0029D2  9A95               	bcf	3989,5,c	;volatile
  2423                           
  2424                           ; BSR set to: 15
  2425                           ;system.c: 186: LATDbits.LATD5 = 1;
  2426  0029D4  8A8C               	bsf	3980,5,c	;volatile
  2427                           
  2428                           ; BSR set to: 15
  2429                           ;system.c: 190: INTCONbits.GIEH = 1;
  2430  0029D6  8EF2               	bsf	intcon,7,c	;volatile
  2431                           
  2432                           ; BSR set to: 15
  2433                           ;system.c: 192: INTCON3bits.INT1IF = 0;
  2434  0029D8  90F0               	bcf	intcon3,0,c	;volatile
  2435                           
  2436                           ; BSR set to: 15
  2437                           ;system.c: 193: INTCON3bits.INT1IE = 1;
  2438  0029DA  86F0               	bsf	intcon3,3,c	;volatile
  2439                           
  2440                           ; BSR set to: 15
  2441                           ;system.c: 197: LCD_Initialize();
  2442  0029DC  EC17  F018         	call	_LCD_Initialize	;wreg free
  2443  0029E0  0012               	return		;funcret
  2444  0029E2                     __end_of_SYSTEM_Initialize:
  2445                           	opt stack 0
  2446                           tblptru	equ	0xFF8
  2447                           tblptrh	equ	0xFF7
  2448                           tblptrl	equ	0xFF6
  2449                           tablat	equ	0xFF5
  2450                           intcon	equ	0xFF2
  2451                           intcon2	equ	0xFF1
  2452                           intcon3	equ	0xFF0
  2453                           postinc0	equ	0xFEE
  2454                           wreg	equ	0xFE8
  2455                           
  2456 ;; *************** function _LCD_Initialize *****************
  2457 ;; Defined at:
  2458 ;;		line 150 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;		None               void
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : F/F
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2476 ;;Total ram usage:        0 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    5
  2479 ;; This function calls:
  2480 ;;		_DELAY_ms
  2481 ;;		_I2CWrite
  2482 ;; This function is called by:
  2483 ;;		_SYSTEM_Initialize
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text5
  2488  00302E                     __ptext5:
  2489                           	opt stack 0
  2490  00302E                     _LCD_Initialize:
  2491                           	opt stack 24
  2492                           
  2493                           ; BSR set to: 15
  2494                           ;lcd.c: 153: TRISD |= 0x53;
  2495                           
  2496                           ;incstack = 0
  2497  00302E  0E53               	movlw	83
  2498  003030  1295               	iorwf	3989,f,c	;volatile
  2499                           
  2500                           ; BSR set to: 15
  2501                           ;lcd.c: 156: PIR3bits.SSP2IF = 0;
  2502  003032  9EA4               	bcf	4004,7,c	;volatile
  2503                           
  2504                           ; BSR set to: 15
  2505                           ;lcd.c: 157: SSP2STAT = 0x00;
  2506  003034  6A73               	clrf	3955,c	;volatile
  2507                           
  2508                           ; BSR set to: 15
  2509                           ;lcd.c: 159: SSP2ADD = 0xF0;
  2510  003036  0EF0               	movlw	240
  2511  003038  6E74               	movwf	3956,c	;volatile
  2512                           
  2513                           ; BSR set to: 15
  2514                           ;lcd.c: 160: SSP2CON1 = 0x28;
  2515  00303A  0E28               	movlw	40
  2516  00303C  6E72               	movwf	3954,c	;volatile
  2517                           
  2518                           ; BSR set to: 15
  2519                           ;lcd.c: 161: SSP2CON2 = 0x00;
  2520  00303E  6A71               	clrf	3953,c	;volatile
  2521                           
  2522                           ; BSR set to: 15
  2523                           ;lcd.c: 162: PIE3bits.SSP2IE = 1;
  2524  003040  8EA3               	bsf	4003,7,c	;volatile
  2525                           
  2526                           ; BSR set to: 15
  2527                           ;lcd.c: 164: INTCONbits.GIEH = 1;
  2528  003042  8EF2               	bsf	intcon,7,c	;volatile
  2529                           
  2530                           ; BSR set to: 15
  2531                           ;lcd.c: 165: INTCONbits.GIEL = 1;
  2532  003044  8CF2               	bsf	intcon,6,c	;volatile
  2533                           
  2534                           ; BSR set to: 15
  2535                           ;lcd.c: 167: DELAY_ms(300);
  2536  003046  0E01               	movlw	1
  2537  003048  6E1E               	movwf	DELAY_ms@ms+1,c
  2538  00304A  0E2C               	movlw	44
  2539  00304C  6E1D               	movwf	DELAY_ms@ms,c
  2540  00304E  ECC2  F011         	call	_DELAY_ms	;wreg free
  2541                           
  2542                           ;lcd.c: 169: LCDCommand[0] = 0x3E << 1;
  2543  003052  0E7C               	movlw	124
  2544  003054  0100               	movlb	0	; () banked
  2545  003056  6FC7               	movwf	_LCDCommand& (0+255),b
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;lcd.c: 170: LCDCommand[1] = 0x81;
  2549  003058  0E81               	movlw	129
  2550  00305A  6FC8               	movwf	(_LCDCommand+1)& (0+255),b
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;lcd.c: 171: LCDCommand[2] = 0x00;
  2554  00305C  6BC9               	clrf	(_LCDCommand+2)& (0+255),b
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;lcd.c: 173: I2CWrite(3, 0);
  2558  00305E  6A1D               	clrf	I2CWrite@BufferLen,c
  2559  003060  0E03               	movlw	3
  2560  003062  ECA8  F01A         	call	_I2CWrite
  2561                           
  2562                           ; BSR set to: 0
  2563                           ;lcd.c: 175: DELAY_ms(200);
  2564  003066  6A1E               	clrf	DELAY_ms@ms+1,c
  2565  003068  0EC8               	movlw	200
  2566  00306A  6E1D               	movwf	DELAY_ms@ms,c
  2567  00306C  ECC2  F011         	call	_DELAY_ms	;wreg free
  2568  003070  0012               	return		;funcret
  2569  003072                     __end_of_LCD_Initialize:
  2570                           	opt stack 0
  2571                           tblptru	equ	0xFF8
  2572                           tblptrh	equ	0xFF7
  2573                           tblptrl	equ	0xFF6
  2574                           tablat	equ	0xFF5
  2575                           intcon	equ	0xFF2
  2576                           intcon2	equ	0xFF1
  2577                           intcon3	equ	0xFF0
  2578                           postinc0	equ	0xFEE
  2579                           wreg	equ	0xFE8
  2580                           
  2581 ;; *************** function _Run_Demo *****************
  2582 ;; Defined at:
  2583 ;;		line 199 in file "../src/task.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;		None
  2588 ;; Return value:  Size  Location     Type
  2589 ;;		None               void
  2590 ;; Registers used:
  2591 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/1
  2594 ;;		On exit  : F/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2601 ;;Total ram usage:        0 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:   17
  2604 ;; This function calls:
  2605 ;;		_run_star_demo
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text6
  2612  0035E6                     __ptext6:
  2613                           	opt stack 0
  2614  0035E6                     _Run_Demo:
  2615                           	opt stack 13
  2616                           
  2617                           ;task.c: 202: run_star_demo();
  2618                           
  2619                           ;incstack = 0
  2620  0035E6  EC59  F004         	call	_run_star_demo	;wreg free
  2621                           
  2622                           ; BSR set to: 0
  2623  0035EA  0012               	return		;funcret
  2624  0035EC                     __end_of_Run_Demo:
  2625                           	opt stack 0
  2626                           tblptru	equ	0xFF8
  2627                           tblptrh	equ	0xFF7
  2628                           tblptrl	equ	0xFF6
  2629                           tablat	equ	0xFF5
  2630                           intcon	equ	0xFF2
  2631                           intcon2	equ	0xFF1
  2632                           intcon3	equ	0xFF0
  2633                           postinc0	equ	0xFEE
  2634                           wreg	equ	0xFE8
  2635                           
  2636 ;; *************** function _run_star_demo *****************
  2637 ;; Defined at:
  2638 ;;		line 85 in file "../src/star_demo.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  switch_val      1   27[BANK1 ] unsigned char 
  2643 ;;  sw_layer_ack    1   24[BANK1 ] unsigned char 
  2644 ;;  mac_ack_stat    1    0        unsigned char 
  2645 ;;  select_ed       1   28[BANK1 ] unsigned char 
  2646 ;;  update_ed       1   25[BANK1 ] unsigned char 
  2647 ;;  PressedButto    1   26[BANK1 ] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;		None               void
  2650 ;; Registers used:
  2651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/1
  2654 ;;		On exit  : F/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2658 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2659 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2660 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2661 ;;Total ram usage:       12 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:   16
  2664 ;; This function calls:
  2665 ;;		_ButtonPressed
  2666 ;;		_CheckForData
  2667 ;;		_DELAY_ms
  2668 ;;		_DemoOutput_UpdateTxRx
  2669 ;;		_LCDDisplay
  2670 ;;		_LCD_Erase
  2671 ;;		_LCD_Update
  2672 ;;		_MiApp_ConnectionMode
  2673 ;;		_MiApp_DiscardMessage
  2674 ;;		_MiApp_EstablishConnection
  2675 ;;		_MiApp_MessageAvailable
  2676 ;;		_MiApp_SetChannel
  2677 ;;		_MiApp_TransceiverPowerState
  2678 ;;		_MiApp_UnicastConnection
  2679 ;;		_MiApp_UnicastStar
  2680 ;;		_MiWi_TickGet
  2681 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  2682 ;;		_sprintf
  2683 ;; This function is called by:
  2684 ;;		_Run_Demo
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text7
  2689  0008B2                     __ptext7:
  2690                           	opt stack 0
  2691  0008B2                     _run_star_demo:
  2692                           	opt stack 13
  2693                           
  2694                           ;star_demo.c: 88: t1 = MiWi_TickGet();
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;incstack = 0
  2698  0008B2  EC54  F017         	call	_MiWi_TickGet	;wreg free
  2699  0008B6  C01D  F104         	movff	?_MiWi_TickGet,_t1
  2700  0008BA  C01E  F105         	movff	?_MiWi_TickGet+1,_t1+1
  2701  0008BE  C01F  F106         	movff	?_MiWi_TickGet+2,_t1+2
  2702  0008C2  C020  F107         	movff	?_MiWi_TickGet+3,_t1+3
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;star_demo.c: 89: LCDDisplay((char *)"Sleeping!!", 0, 0);
  2706  0008C6  0EEB               	movlw	low STR_13
  2707  0008C8  6F87               	movwf	LCDDisplay@text& (0+255),b
  2708  0008CA  0EFF               	movlw	high STR_13
  2709  0008CC  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
  2710  0008CE  6B89               	clrf	LCDDisplay@value& (0+255),b
  2711  0008D0  6B8A               	clrf	LCDDisplay@delay& (0+255),b
  2712  0008D2  EC7B  F018         	call	_LCDDisplay	;wreg free
  2713  0008D6                     l12303:
  2714                           
  2715                           ;star_demo.c: 91: {
  2716                           ;star_demo.c: 93: t2 = MiWi_TickGet();
  2717  0008D6  EC54  F017         	call	_MiWi_TickGet	;wreg free
  2718  0008DA  C01D  F0CF         	movff	?_MiWi_TickGet,_t2
  2719  0008DE  C01E  F0D0         	movff	?_MiWi_TickGet+1,_t2+1
  2720  0008E2  C01F  F0D1         	movff	?_MiWi_TickGet+2,_t2+2
  2721  0008E6  C020  F0D2         	movff	?_MiWi_TickGet+3,_t2+3
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;star_demo.c: 95: if(((t2.Val - t1.Val) > (((uint32_t)(8000000)/32) * 20)))
  2725  0008EA  0101               	movlb	1	; () banked
  2726  0008EC  5104               	movf	_t1& (0+255),w,b
  2727  0008EE  0100               	movlb	0	; () banked
  2728  0008F0  5DCF               	subwf	_t2& (0+255),w,b
  2729  0008F2  0101               	movlb	1	; () banked
  2730  0008F4  6F79               	movwf	??_run_star_demo& (0+255),b
  2731  0008F6  5105               	movf	(_t1+1)& (0+255),w,b
  2732  0008F8  0100               	movlb	0	; () banked
  2733  0008FA  59D0               	subwfb	(_t2+1)& (0+255),w,b
  2734  0008FC  0101               	movlb	1	; () banked
  2735  0008FE  6F7A               	movwf	(??_run_star_demo+1)& (0+255),b
  2736  000900  5106               	movf	(_t1+2)& (0+255),w,b
  2737  000902  0100               	movlb	0	; () banked
  2738  000904  59D1               	subwfb	(_t2+2)& (0+255),w,b
  2739  000906  0101               	movlb	1	; () banked
  2740  000908  6F7B               	movwf	(??_run_star_demo+2)& (0+255),b
  2741  00090A  5107               	movf	(_t1+3)& (0+255),w,b
  2742  00090C  0100               	movlb	0	; () banked
  2743  00090E  59D2               	subwfb	(_t2+3)& (0+255),w,b
  2744  000910  0101               	movlb	1	; () banked
  2745  000912  6F7C               	movwf	(??_run_star_demo+3)& (0+255),b
  2746  000914  517C               	movf	(??_run_star_demo+3)& (0+255),w,b
  2747  000916  E108               	bnz	u12690
  2748  000918  0E41               	movlw	65
  2749  00091A  5D79               	subwf	??_run_star_demo& (0+255),w,b
  2750  00091C  0E4B               	movlw	75
  2751  00091E  597A               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  2752  000920  0E4C               	movlw	76
  2753  000922  597B               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  2754  000924  E201 D264          	bnc	l12459
  2755  000928                     u12690:
  2756                           
  2757                           ; BSR set to: 1
  2758                           ;star_demo.c: 96: {
  2759                           ;star_demo.c: 97: awake = 1;
  2760  000928  0E01               	movlw	1
  2761  00092A  0100               	movlb	0	; () banked
  2762  00092C  6FE8               	movwf	_awake& (0+255),b
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;star_demo.c: 102: MiApp_TransceiverPowerState(0x02);
  2766  00092E  0E02               	movlw	2
  2767  000930  ECF1  F014         	call	_MiApp_TransceiverPowerState
  2768                           
  2769                           ;star_demo.c: 103: LCDDisplay((char *)"Woke Up!!!", 0, 0);
  2770  000934  0EE0               	movlw	low STR_14
  2771  000936  0100               	movlb	0	; () banked
  2772  000938  6F87               	movwf	LCDDisplay@text& (0+255),b
  2773  00093A  0EFF               	movlw	high STR_14
  2774  00093C  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
  2775  00093E  6B89               	clrf	LCDDisplay@value& (0+255),b
  2776  000940  6B8A               	clrf	LCDDisplay@delay& (0+255),b
  2777  000942  EC7B  F018         	call	_LCDDisplay	;wreg free
  2778                           
  2779                           ;star_demo.c: 104: DELAY_ms(1000);
  2780  000946  0E03               	movlw	3
  2781  000948  6E1E               	movwf	DELAY_ms@ms+1,c
  2782  00094A  0EE8               	movlw	232
  2783  00094C  6E1D               	movwf	DELAY_ms@ms,c
  2784  00094E  ECC2  F011         	call	_DELAY_ms	;wreg free
  2785                           
  2786                           ;star_demo.c: 105: STAR_DEMO_OPTIONS_MESSAGE (0);
  2787  000952  0E00               	movlw	0
  2788  000954  EC45  F01A         	call	_STAR_DEMO_OPTIONS_MESSAGE
  2789                           
  2790                           ;star_demo.c: 106: tt1 = MiWi_TickGet();
  2791  000958  EC54  F017         	call	_MiWi_TickGet	;wreg free
  2792  00095C  C01D  F108         	movff	?_MiWi_TickGet,_tt1
  2793  000960  C01E  F109         	movff	?_MiWi_TickGet+1,_tt1+1
  2794  000964  C01F  F10A         	movff	?_MiWi_TickGet+2,_tt1+2
  2795  000968  C020  F10B         	movff	?_MiWi_TickGet+3,_tt1+3
  2796  00096C  D241               	goto	l12459
  2797  00096E                     l12319:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;star_demo.c: 109: {
  2801                           ;star_demo.c: 110: tt2 = MiWi_TickGet();
  2802  00096E  EC54  F017         	call	_MiWi_TickGet	;wreg free
  2803  000972  C01D  F10C         	movff	?_MiWi_TickGet,_tt2
  2804  000976  C01E  F10D         	movff	?_MiWi_TickGet+1,_tt2+1
  2805  00097A  C01F  F10E         	movff	?_MiWi_TickGet+2,_tt2+2
  2806  00097E  C020  F10F         	movff	?_MiWi_TickGet+3,_tt2+3
  2807                           
  2808                           ; BSR set to: 0
  2809                           ;star_demo.c: 111: if(((tt2.Val - tt1.Val) > (((uint32_t)(8000000)/32) * 10)))
  2810  000982  0101               	movlb	1	; () banked
  2811  000984  5108               	movf	_tt1& (0+255),w,b
  2812  000986  5D0C               	subwf	_tt2& (0+255),w,b
  2813  000988  6F79               	movwf	??_run_star_demo& (0+255),b
  2814  00098A  5109               	movf	(_tt1+1)& (0+255),w,b
  2815  00098C  590D               	subwfb	(_tt2+1)& (0+255),w,b
  2816  00098E  6F7A               	movwf	(??_run_star_demo+1)& (0+255),b
  2817  000990  510A               	movf	(_tt1+2)& (0+255),w,b
  2818  000992  590E               	subwfb	(_tt2+2)& (0+255),w,b
  2819  000994  6F7B               	movwf	(??_run_star_demo+2)& (0+255),b
  2820  000996  510B               	movf	(_tt1+3)& (0+255),w,b
  2821  000998  590F               	subwfb	(_tt2+3)& (0+255),w,b
  2822  00099A  6F7C               	movwf	(??_run_star_demo+3)& (0+255),b
  2823  00099C  517C               	movf	(??_run_star_demo+3)& (0+255),w,b
  2824  00099E  E107               	bnz	u12700
  2825  0009A0  0EA1               	movlw	161
  2826  0009A2  5D79               	subwf	??_run_star_demo& (0+255),w,b
  2827  0009A4  0E25               	movlw	37
  2828  0009A6  597A               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  2829  0009A8  0E26               	movlw	38
  2830  0009AA  597B               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  2831  0009AC  E30C               	bnc	l12327
  2832  0009AE                     u12700:
  2833                           
  2834                           ; BSR set to: 1
  2835                           ;star_demo.c: 112: {
  2836                           ;star_demo.c: 116: CheckForData();
  2837  0009AE  EC72  F016         	call	_CheckForData	;wreg free
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;star_demo.c: 117: tt1 = MiWi_TickGet();
  2841  0009B2  EC54  F017         	call	_MiWi_TickGet	;wreg free
  2842  0009B6  C01D  F108         	movff	?_MiWi_TickGet,_tt1
  2843  0009BA  C01E  F109         	movff	?_MiWi_TickGet+1,_tt1+1
  2844  0009BE  C01F  F10A         	movff	?_MiWi_TickGet+2,_tt1+2
  2845  0009C2  C020  F10B         	movff	?_MiWi_TickGet+3,_tt1+3
  2846  0009C6                     l12327:
  2847                           
  2848                           ;star_demo.c: 118: }
  2849                           ;star_demo.c: 126: if( MiApp_MessageAvailable())
  2850  0009C6  ECE8  F01A         	call	_MiApp_MessageAvailable	;wreg free
  2851  0009CA  0900               	iorlw	0
  2852  0009CC  E010               	bz	l12337
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;star_demo.c: 127: {
  2856                           ;star_demo.c: 133: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  2857  0009CE  2BE5               	incf	_RxNum& (0+255),f,b
  2858  0009D0  C0E5  F088         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  2859  0009D4  51E7               	movf	_TxNum& (0+255),w,b
  2860  0009D6  ECE1  F01A         	call	_DemoOutput_UpdateTxRx
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;star_demo.c: 134: DELAY_ms(2000);
  2864  0009DA  0E07               	movlw	7
  2865  0009DC  6E1E               	movwf	DELAY_ms@ms+1,c
  2866  0009DE  0ED0               	movlw	208
  2867  0009E0  6E1D               	movwf	DELAY_ms@ms,c
  2868  0009E2  ECC2  F011         	call	_DELAY_ms	;wreg free
  2869                           
  2870                           ;star_demo.c: 136: LATAbits.LATA3 ^= 1;
  2871  0009E6  7689               	btg	3977,3,c	;volatile
  2872                           
  2873                           ;star_demo.c: 144: MiApp_DiscardMessage();
  2874  0009E8  ECEE  F01A         	call	_MiApp_DiscardMessage	;wreg free
  2875                           
  2876                           ;star_demo.c: 149: }
  2877  0009EC  D1AE               	goto	l12437
  2878  0009EE                     l12337:
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;star_demo.c: 150: else
  2882                           ;star_demo.c: 151: {
  2883                           ;star_demo.c: 158: uint8_t PressedButton = ButtonPressed();
  2884  0009EE  ECD7  F013         	call	_ButtonPressed	;wreg free
  2885  0009F2  0101               	movlb	1	; () banked
  2886  0009F4  6F82               	movwf	run_star_demo@PressedButton& (0+255),b
  2887                           
  2888                           ; BSR set to: 1
  2889                           ;star_demo.c: 159: if ( PressedButton == 1 || PressedButton == 2)
  2890  0009F6  0582               	decf	run_star_demo@PressedButton& (0+255),w,b
  2891  0009F8  E004               	bz	l1250
  2892                           
  2893                           ; BSR set to: 1
  2894  0009FA  0E02               	movlw	2
  2895  0009FC  1982               	xorwf	run_star_demo@PressedButton& (0+255),w,b
  2896  0009FE  E001 D1A4          	bnz	l12437
  2897  000A02                     l1250:
  2898                           
  2899                           ; BSR set to: 1
  2900                           ;star_demo.c: 160: {
  2901                           ;star_demo.c: 162: uint8_t select_ed =0;
  2902  000A02  6B84               	clrf	run_star_demo@select_ed& (0+255),b
  2903                           
  2904                           ; BSR set to: 1
  2905                           ;star_demo.c: 163: bool update_ed = 1;
  2906  000A04  0E01               	movlw	1
  2907  000A06  6F81               	movwf	run_star_demo@update_ed& (0+255),b
  2908                           
  2909                           ;star_demo.c: 164: while(update_ed == 1)
  2910  000A08  D199               	goto	l12433
  2911  000A0A                     l12345:
  2912                           
  2913                           ; BSR set to: 1
  2914                           ;star_demo.c: 165: {
  2915                           ;star_demo.c: 168: LCD_Erase();
  2916  000A0A  EC80  F01A         	call	_LCD_Erase	;wreg free
  2917                           
  2918                           ;star_demo.c: 169: if (myConnectionIndex_in_PanCo == select_ed)
  2919  000A0E  0101               	movlb	1	; () banked
  2920  000A10  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  2921  000A12  0100               	movlb	0	; () banked
  2922  000A14  19FC               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  2923  000A16  E13F               	bnz	l12351
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;star_demo.c: 170: {
  2927                           ;star_demo.c: 171: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x-me",END_DEVICE
      +                          S_Short_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[
      +                          0],
  2928                           ;star_demo.c: 172: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  2929  000A18  0E8A               	movlw	low _LCDText
  2930  000A1A  6F64               	movwf	sprintf@sp& (0+255),b
  2931  000A1C  0E02               	movlw	high _LCDText
  2932  000A1E  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  2933  000A20  0E05               	movlw	low STR_15
  2934  000A22  6F66               	movwf	sprintf@f& (0+255),b
  2935  000A24  0EFF               	movlw	high STR_15
  2936  000A26  6F67               	movwf	(sprintf@f+1)& (0+255),b
  2937  000A28  0101               	movlb	1	; () banked
  2938  000A2A  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  2939  000A2C  0D04               	mullw	4
  2940  000A2E  0E13               	movlw	low (_END_DEVICES_Short_Address+3)
  2941  000A30  24F3               	addwf	prodl,w,c
  2942  000A32  6ED9               	movwf	fsr2l,c
  2943  000A34  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  2944  000A36  20F4               	addwfc	prodh,w,c
  2945  000A38  6EDA               	movwf	fsr2h,c
  2946  000A3A  50DF               	movf	indf2,w,c
  2947  000A3C  0100               	movlb	0	; () banked
  2948  000A3E  6F68               	movwf	(?_sprintf+4)& (0+255),b
  2949  000A40  6B69               	clrf	(?_sprintf+5)& (0+255),b
  2950  000A42  0101               	movlb	1	; () banked
  2951  000A44  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  2952  000A46  0D04               	mullw	4
  2953  000A48  0E10               	movlw	low _END_DEVICES_Short_Address
  2954  000A4A  24F3               	addwf	prodl,w,c
  2955  000A4C  6ED9               	movwf	fsr2l,c
  2956  000A4E  0E01               	movlw	high _END_DEVICES_Short_Address
  2957  000A50  20F4               	addwfc	prodh,w,c
  2958  000A52  6EDA               	movwf	fsr2h,c
  2959  000A54  50DF               	movf	indf2,w,c
  2960  000A56  0100               	movlb	0	; () banked
  2961  000A58  6F6A               	movwf	(?_sprintf+6)& (0+255),b
  2962  000A5A  6B6B               	clrf	(?_sprintf+7)& (0+255),b
  2963  000A5C  0101               	movlb	1	; () banked
  2964  000A5E  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  2965  000A60  0D04               	mullw	4
  2966  000A62  0E11               	movlw	low (_END_DEVICES_Short_Address+1)
  2967  000A64  24F3               	addwf	prodl,w,c
  2968  000A66  6ED9               	movwf	fsr2l,c
  2969  000A68  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  2970  000A6A  20F4               	addwfc	prodh,w,c
  2971  000A6C  6EDA               	movwf	fsr2h,c
  2972  000A6E  50DF               	movf	indf2,w,c
  2973  000A70  0100               	movlb	0	; () banked
  2974  000A72  6F6C               	movwf	(?_sprintf+8)& (0+255),b
  2975  000A74  6B6D               	clrf	(?_sprintf+9)& (0+255),b
  2976  000A76  0101               	movlb	1	; () banked
  2977  000A78  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  2978  000A7A  0D04               	mullw	4
  2979  000A7C  0E12               	movlw	low (_END_DEVICES_Short_Address+2)
  2980  000A7E  24F3               	addwf	prodl,w,c
  2981  000A80  6ED9               	movwf	fsr2l,c
  2982  000A82  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  2983  000A84  20F4               	addwfc	prodh,w,c
  2984  000A86  6EDA               	movwf	fsr2h,c
  2985  000A88  50DF               	movf	indf2,w,c
  2986  000A8A  0100               	movlb	0	; () banked
  2987  000A8C  6F6E               	movwf	(?_sprintf+10)& (0+255),b
  2988  000A8E  6B6F               	clrf	(?_sprintf+11)& (0+255),b
  2989  000A90  ECC6  F000         	call	_sprintf	;wreg free
  2990                           
  2991                           ;star_demo.c: 173: }
  2992  000A94  D03E               	goto	l1254
  2993  000A96                     l12351:
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;star_demo.c: 174: else
  2997                           ;star_demo.c: 175: {
  2998                           ;star_demo.c: 176: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  2999                           ;star_demo.c: 177: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3000  000A96  0E8A               	movlw	low _LCDText
  3001  000A98  6F64               	movwf	sprintf@sp& (0+255),b
  3002  000A9A  0E02               	movlw	high _LCDText
  3003  000A9C  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  3004  000A9E  0E1E               	movlw	low STR_16
  3005  000AA0  6F66               	movwf	sprintf@f& (0+255),b
  3006  000AA2  0EFF               	movlw	high STR_16
  3007  000AA4  6F67               	movwf	(sprintf@f+1)& (0+255),b
  3008  000AA6  0101               	movlb	1	; () banked
  3009  000AA8  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3010  000AAA  0D04               	mullw	4
  3011  000AAC  0E13               	movlw	low (_END_DEVICES_Short_Address+3)
  3012  000AAE  24F3               	addwf	prodl,w,c
  3013  000AB0  6ED9               	movwf	fsr2l,c
  3014  000AB2  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  3015  000AB4  20F4               	addwfc	prodh,w,c
  3016  000AB6  6EDA               	movwf	fsr2h,c
  3017  000AB8  50DF               	movf	indf2,w,c
  3018  000ABA  0100               	movlb	0	; () banked
  3019  000ABC  6F68               	movwf	(?_sprintf+4)& (0+255),b
  3020  000ABE  6B69               	clrf	(?_sprintf+5)& (0+255),b
  3021  000AC0  0101               	movlb	1	; () banked
  3022  000AC2  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3023  000AC4  0D04               	mullw	4
  3024  000AC6  0E10               	movlw	low _END_DEVICES_Short_Address
  3025  000AC8  24F3               	addwf	prodl,w,c
  3026  000ACA  6ED9               	movwf	fsr2l,c
  3027  000ACC  0E01               	movlw	high _END_DEVICES_Short_Address
  3028  000ACE  20F4               	addwfc	prodh,w,c
  3029  000AD0  6EDA               	movwf	fsr2h,c
  3030  000AD2  50DF               	movf	indf2,w,c
  3031  000AD4  0100               	movlb	0	; () banked
  3032  000AD6  6F6A               	movwf	(?_sprintf+6)& (0+255),b
  3033  000AD8  6B6B               	clrf	(?_sprintf+7)& (0+255),b
  3034  000ADA  0101               	movlb	1	; () banked
  3035  000ADC  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3036  000ADE  0D04               	mullw	4
  3037  000AE0  0E11               	movlw	low (_END_DEVICES_Short_Address+1)
  3038  000AE2  24F3               	addwf	prodl,w,c
  3039  000AE4  6ED9               	movwf	fsr2l,c
  3040  000AE6  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3041  000AE8  20F4               	addwfc	prodh,w,c
  3042  000AEA  6EDA               	movwf	fsr2h,c
  3043  000AEC  50DF               	movf	indf2,w,c
  3044  000AEE  0100               	movlb	0	; () banked
  3045  000AF0  6F6C               	movwf	(?_sprintf+8)& (0+255),b
  3046  000AF2  6B6D               	clrf	(?_sprintf+9)& (0+255),b
  3047  000AF4  0101               	movlb	1	; () banked
  3048  000AF6  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3049  000AF8  0D04               	mullw	4
  3050  000AFA  0E12               	movlw	low (_END_DEVICES_Short_Address+2)
  3051  000AFC  24F3               	addwf	prodl,w,c
  3052  000AFE  6ED9               	movwf	fsr2l,c
  3053  000B00  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3054  000B02  20F4               	addwfc	prodh,w,c
  3055  000B04  6EDA               	movwf	fsr2h,c
  3056  000B06  50DF               	movf	indf2,w,c
  3057  000B08  0100               	movlb	0	; () banked
  3058  000B0A  6F6E               	movwf	(?_sprintf+10)& (0+255),b
  3059  000B0C  6B6F               	clrf	(?_sprintf+11)& (0+255),b
  3060  000B0E  ECC6  F000         	call	_sprintf	;wreg free
  3061  000B12                     l1254:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;star_demo.c: 178: }
  3065                           ;star_demo.c: 179: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3066                           ;star_demo.c: 180: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3067  000B12  0E8A               	movlw	low _LCDText
  3068  000B14  6F64               	movwf	sprintf@sp& (0+255),b
  3069  000B16  0E02               	movlw	high _LCDText
  3070  000B18  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  3071  000B1A  0E1E               	movlw	low STR_16
  3072  000B1C  6F66               	movwf	sprintf@f& (0+255),b
  3073  000B1E  0EFF               	movlw	high STR_16
  3074  000B20  6F67               	movwf	(sprintf@f+1)& (0+255),b
  3075  000B22  0101               	movlb	1	; () banked
  3076  000B24  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3077  000B26  0D04               	mullw	4
  3078  000B28  0E13               	movlw	low (_END_DEVICES_Short_Address+3)
  3079  000B2A  24F3               	addwf	prodl,w,c
  3080  000B2C  6ED9               	movwf	fsr2l,c
  3081  000B2E  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  3082  000B30  20F4               	addwfc	prodh,w,c
  3083  000B32  6EDA               	movwf	fsr2h,c
  3084  000B34  50DF               	movf	indf2,w,c
  3085  000B36  0100               	movlb	0	; () banked
  3086  000B38  6F68               	movwf	(?_sprintf+4)& (0+255),b
  3087  000B3A  6B69               	clrf	(?_sprintf+5)& (0+255),b
  3088  000B3C  0101               	movlb	1	; () banked
  3089  000B3E  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3090  000B40  0D04               	mullw	4
  3091  000B42  0E10               	movlw	low _END_DEVICES_Short_Address
  3092  000B44  24F3               	addwf	prodl,w,c
  3093  000B46  6ED9               	movwf	fsr2l,c
  3094  000B48  0E01               	movlw	high _END_DEVICES_Short_Address
  3095  000B4A  20F4               	addwfc	prodh,w,c
  3096  000B4C  6EDA               	movwf	fsr2h,c
  3097  000B4E  50DF               	movf	indf2,w,c
  3098  000B50  0100               	movlb	0	; () banked
  3099  000B52  6F6A               	movwf	(?_sprintf+6)& (0+255),b
  3100  000B54  6B6B               	clrf	(?_sprintf+7)& (0+255),b
  3101  000B56  0101               	movlb	1	; () banked
  3102  000B58  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3103  000B5A  0D04               	mullw	4
  3104  000B5C  0E11               	movlw	low (_END_DEVICES_Short_Address+1)
  3105  000B5E  24F3               	addwf	prodl,w,c
  3106  000B60  6ED9               	movwf	fsr2l,c
  3107  000B62  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3108  000B64  20F4               	addwfc	prodh,w,c
  3109  000B66  6EDA               	movwf	fsr2h,c
  3110  000B68  50DF               	movf	indf2,w,c
  3111  000B6A  0100               	movlb	0	; () banked
  3112  000B6C  6F6C               	movwf	(?_sprintf+8)& (0+255),b
  3113  000B6E  6B6D               	clrf	(?_sprintf+9)& (0+255),b
  3114  000B70  0101               	movlb	1	; () banked
  3115  000B72  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3116  000B74  0D04               	mullw	4
  3117  000B76  0E12               	movlw	low (_END_DEVICES_Short_Address+2)
  3118  000B78  24F3               	addwf	prodl,w,c
  3119  000B7A  6ED9               	movwf	fsr2l,c
  3120  000B7C  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3121  000B7E  20F4               	addwfc	prodh,w,c
  3122  000B80  6EDA               	movwf	fsr2h,c
  3123  000B82  50DF               	movf	indf2,w,c
  3124  000B84  0100               	movlb	0	; () banked
  3125  000B86  6F6E               	movwf	(?_sprintf+10)& (0+255),b
  3126  000B88  6B6F               	clrf	(?_sprintf+11)& (0+255),b
  3127  000B8A  ECC6  F000         	call	_sprintf	;wreg free
  3128                           
  3129                           ;star_demo.c: 181: sprintf((char *)&(LCDText[16]), (char*)"RB2: Change node");
  3130  000B8E  0E9A               	movlw	low (_LCDText+16)
  3131  000B90  6F64               	movwf	sprintf@sp& (0+255),b
  3132  000B92  0E02               	movlw	high (_LCDText+16)
  3133  000B94  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  3134  000B96  0E80               	movlw	low STR_18
  3135  000B98  6F66               	movwf	sprintf@f& (0+255),b
  3136  000B9A  0EFF               	movlw	high STR_18
  3137  000B9C  6F67               	movwf	(sprintf@f+1)& (0+255),b
  3138  000B9E  ECC6  F000         	call	_sprintf	;wreg free
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;star_demo.c: 182: LCD_Update();
  3142  000BA2  EC9B  F01A         	call	_LCD_Update	;wreg free
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;star_demo.c: 183: chk_sel_status = 1;
  3146  000BA6  0E01               	movlw	1
  3147  000BA8  6FFE               	movwf	_chk_sel_status& (0+255),b
  3148                           
  3149                           ;star_demo.c: 184: bool sw_layer_ack_status , mac_ack_status;
  3150                           ;star_demo.c: 185: while(chk_sel_status)
  3151  000BAA  D0C4               	goto	l12431
  3152  000BAC                     l12357:
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;star_demo.c: 186: {
  3156                           ;star_demo.c: 187: uint8_t switch_val = ButtonPressed();
  3157  000BAC  ECD7  F013         	call	_ButtonPressed	;wreg free
  3158  000BB0  0101               	movlb	1	; () banked
  3159  000BB2  6F83               	movwf	run_star_demo@switch_val& (0+255),b
  3160                           
  3161                           ; BSR set to: 1
  3162                           ;star_demo.c: 188: if(switch_val == 1)
  3163  000BB4  0583               	decf	run_star_demo@switch_val& (0+255),w,b
  3164  000BB6  E001 D0A0          	bnz	l12421
  3165                           
  3166                           ; BSR set to: 1
  3167                           ;star_demo.c: 189: {
  3168                           ;star_demo.c: 190: update_ed = 0;
  3169  000BBA  6B81               	clrf	run_star_demo@update_ed& (0+255),b
  3170                           
  3171                           ;star_demo.c: 191: chk_sel_status = 0;
  3172  000BBC  0100               	movlb	0	; () banked
  3173  000BBE  6BFE               	clrf	_chk_sel_status& (0+255),b
  3174                           
  3175                           ;star_demo.c: 192: update_ed = 0;
  3176  000BC0  0101               	movlb	1	; () banked
  3177  000BC2  6B81               	clrf	run_star_demo@update_ed& (0+255),b
  3178                           
  3179                           ; BSR set to: 1
  3180                           ;star_demo.c: 197: if (myConnectionIndex_in_PanCo == select_ed)
  3181  000BC4  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3182  000BC6  0100               	movlb	0	; () banked
  3183  000BC8  19FC               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3184  000BCA  E11F               	bnz	l1258
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;star_demo.c: 198: {
  3188                           ;star_demo.c: 199: {TxData = 0;};
  3189  000BCC  6BE6               	clrf	_TxData& (0+255),b
  3190                           
  3191                           ;star_demo.c: 200: for (i = 0 ; i < 21 ; i++)
  3192  000BCE  6A2D               	clrf	_i,c
  3193  000BD0                     l12367:
  3194                           
  3195                           ; BSR set to: 0
  3196  000BD0  0E14               	movlw	20
  3197  000BD2  642D               	cpfsgt	_i,c
  3198  000BD4  D001               	goto	l12371
  3199  000BD6  D012               	goto	l12379
  3200  000BD8                     l12371:
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;star_demo.c: 201: {
  3204                           ;star_demo.c: 202: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  3205  000BD8  0E91               	movlw	low _MiWi
  3206  000BDA  242D               	addwf	_i,w,c
  3207  000BDC  6EF6               	movwf	tblptrl,c
  3208  000BDE  6AF7               	clrf	tblptrh,c
  3209  000BE0  0EFD               	movlw	high _MiWi
  3210  000BE2  22F7               	addwfc	tblptrh,f,c
  3211  000BE4                     	if	0	;There are less than 3 active tblptr bytes
  3212  000BE4                     	endif
  3213  000BE4  0E38               	movlw	low _TxBuffer
  3214  000BE6  25E6               	addwf	_TxData& (0+255),w,b
  3215  000BE8  6ED9               	movwf	fsr2l,c
  3216  000BEA  6ADA               	clrf	fsr2h,c
  3217  000BEC  0E01               	movlw	high _TxBuffer
  3218  000BEE  22DA               	addwfc	fsr2h,f,c
  3219  000BF0  0008               	tblrd		*
  3220  000BF2  CFF5 FFDF          	movff	tablat,indf2
  3221                           
  3222                           ; BSR set to: 0
  3223  000BF6  2BE6               	incf	_TxData& (0+255),f,b
  3224                           
  3225                           ; BSR set to: 0
  3226  000BF8  2A2D               	incf	_i,f,c
  3227  000BFA  D7EA               	goto	l12367
  3228  000BFC                     l12379:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;star_demo.c: 203: }
  3232                           ;star_demo.c: 210: mac_ack_status = MiApp_UnicastConnection (0, 0);
  3233  000BFC  0E00               	movlw	0
  3234  000BFE  6BA3               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  3235  000C00  EC32  F019         	call	_MiApp_UnicastConnection
  3236  000C04                     l12381:
  3237                           
  3238                           ;star_demo.c: 212: TxNum++;
  3239  000C04  0100               	movlb	0	; () banked
  3240  000C06  2BE7               	incf	_TxNum& (0+255),f,b
  3241                           
  3242                           ;star_demo.c: 213: }
  3243  000C08  D095               	goto	l12431
  3244  000C0A                     l1258:
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;star_demo.c: 214: else
  3248                           ;star_demo.c: 215: {
  3249                           ;star_demo.c: 220: {TxData = 0;};
  3250  000C0A  6BE6               	clrf	_TxData& (0+255),b
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;star_demo.c: 221: TxBuffer[TxData++] = 0xCC;
  3254  000C0C  0E38               	movlw	low _TxBuffer
  3255  000C0E  25E6               	addwf	_TxData& (0+255),w,b
  3256  000C10  6ED9               	movwf	fsr2l,c
  3257  000C12  6ADA               	clrf	fsr2h,c
  3258  000C14  0E01               	movlw	high _TxBuffer
  3259  000C16  22DA               	addwfc	fsr2h,f,c
  3260  000C18  0ECC               	movlw	204
  3261  000C1A  6EDF               	movwf	indf2,c
  3262                           
  3263                           ; BSR set to: 0
  3264  000C1C  2BE6               	incf	_TxData& (0+255),f,b
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;star_demo.c: 222: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[0];
  3268  000C1E  0101               	movlb	1	; () banked
  3269  000C20  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3270  000C22  0D04               	mullw	4
  3271  000C24  0E10               	movlw	low _END_DEVICES_Short_Address
  3272  000C26  24F3               	addwf	prodl,w,c
  3273  000C28  6ED9               	movwf	fsr2l,c
  3274  000C2A  0E01               	movlw	high _END_DEVICES_Short_Address
  3275  000C2C  20F4               	addwfc	prodh,w,c
  3276  000C2E  6EDA               	movwf	fsr2h,c
  3277  000C30  0E38               	movlw	low _TxBuffer
  3278  000C32  0100               	movlb	0	; () banked
  3279  000C34  25E6               	addwf	_TxData& (0+255),w,b
  3280  000C36  6EE1               	movwf	fsr1l,c
  3281  000C38  6AE2               	clrf	fsr1h,c
  3282  000C3A  0E01               	movlw	high _TxBuffer
  3283  000C3C  22E2               	addwfc	fsr1h,f,c
  3284  000C3E  CFDF FFE7          	movff	indf2,indf1
  3285                           
  3286                           ; BSR set to: 0
  3287  000C42  2BE6               	incf	_TxData& (0+255),f,b
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;star_demo.c: 223: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[1];
  3291  000C44  0101               	movlb	1	; () banked
  3292  000C46  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3293  000C48  0D04               	mullw	4
  3294  000C4A  0E11               	movlw	low (_END_DEVICES_Short_Address+1)
  3295  000C4C  24F3               	addwf	prodl,w,c
  3296  000C4E  6ED9               	movwf	fsr2l,c
  3297  000C50  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3298  000C52  20F4               	addwfc	prodh,w,c
  3299  000C54  6EDA               	movwf	fsr2h,c
  3300  000C56  0E38               	movlw	low _TxBuffer
  3301  000C58  0100               	movlb	0	; () banked
  3302  000C5A  25E6               	addwf	_TxData& (0+255),w,b
  3303  000C5C  6EE1               	movwf	fsr1l,c
  3304  000C5E  6AE2               	clrf	fsr1h,c
  3305  000C60  0E01               	movlw	high _TxBuffer
  3306  000C62  22E2               	addwfc	fsr1h,f,c
  3307  000C64  CFDF FFE7          	movff	indf2,indf1
  3308                           
  3309                           ; BSR set to: 0
  3310  000C68  2BE6               	incf	_TxData& (0+255),f,b
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;star_demo.c: 224: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[2];
  3314  000C6A  0101               	movlb	1	; () banked
  3315  000C6C  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3316  000C6E  0D04               	mullw	4
  3317  000C70  0E12               	movlw	low (_END_DEVICES_Short_Address+2)
  3318  000C72  24F3               	addwf	prodl,w,c
  3319  000C74  6ED9               	movwf	fsr2l,c
  3320  000C76  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3321  000C78  20F4               	addwfc	prodh,w,c
  3322  000C7A  6EDA               	movwf	fsr2h,c
  3323  000C7C  0E38               	movlw	low _TxBuffer
  3324  000C7E  0100               	movlb	0	; () banked
  3325  000C80  25E6               	addwf	_TxData& (0+255),w,b
  3326  000C82  6EE1               	movwf	fsr1l,c
  3327  000C84  6AE2               	clrf	fsr1h,c
  3328  000C86  0E01               	movlw	high _TxBuffer
  3329  000C88  22E2               	addwfc	fsr1h,f,c
  3330  000C8A  CFDF FFE7          	movff	indf2,indf1
  3331                           
  3332                           ; BSR set to: 0
  3333  000C8E  2BE6               	incf	_TxData& (0+255),f,b
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;star_demo.c: 225: for (i = 4 ; i < 25 ; i++)
  3337  000C90  0E04               	movlw	4
  3338  000C92  6E2D               	movwf	_i,c
  3339  000C94                     l12401:
  3340                           
  3341                           ; BSR set to: 0
  3342  000C94  0E18               	movlw	24
  3343  000C96  642D               	cpfsgt	_i,c
  3344  000C98  D001               	goto	l12405
  3345  000C9A  D01E               	goto	l12413
  3346  000C9C                     l12405:
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;star_demo.c: 226: {
  3350                           ;star_demo.c: 227: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i-4];
  3351  000C9C  0EFC               	movlw	252
  3352  000C9E  0101               	movlb	1	; () banked
  3353  000CA0  6F79               	movwf	??_run_star_demo& (0+255),b
  3354  000CA2  697A               	setf	(??_run_star_demo+1)& (0+255),b
  3355  000CA4  502D               	movf	_i,w,c
  3356  000CA6  6F7B               	movwf	(??_run_star_demo+2)& (0+255),b
  3357  000CA8  6B7C               	clrf	(??_run_star_demo+3)& (0+255),b
  3358  000CAA  5179               	movf	??_run_star_demo& (0+255),w,b
  3359  000CAC  277B               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3360  000CAE  517A               	movf	(??_run_star_demo+1)& (0+255),w,b
  3361  000CB0  237C               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3362  000CB2  0E91               	movlw	low _MiWi
  3363  000CB4  257B               	addwf	(??_run_star_demo+2)& (0+255),w,b
  3364  000CB6  6EF6               	movwf	tblptrl,c
  3365  000CB8  0EFD               	movlw	high _MiWi
  3366  000CBA  217C               	addwfc	(??_run_star_demo+3)& (0+255),w,b
  3367  000CBC  6EF7               	movwf	tblptrh,c
  3368  000CBE                     	if	0	;There are less than 3 active tblptr bytes
  3369  000CBE                     	endif
  3370  000CBE  0E38               	movlw	low _TxBuffer
  3371  000CC0  0100               	movlb	0	; () banked
  3372  000CC2  25E6               	addwf	_TxData& (0+255),w,b
  3373  000CC4  6ED9               	movwf	fsr2l,c
  3374  000CC6  6ADA               	clrf	fsr2h,c
  3375  000CC8  0E01               	movlw	high _TxBuffer
  3376  000CCA  22DA               	addwfc	fsr2h,f,c
  3377  000CCC  0008               	tblrd		*
  3378  000CCE  CFF5 FFDF          	movff	tablat,indf2
  3379                           
  3380                           ; BSR set to: 0
  3381  000CD2  2BE6               	incf	_TxData& (0+255),f,b
  3382                           
  3383                           ; BSR set to: 0
  3384  000CD4  2A2D               	incf	_i,f,c
  3385  000CD6  D7DE               	goto	l12401
  3386  000CD8                     l12413:
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;star_demo.c: 228: }
  3390                           ;star_demo.c: 232: sw_layer_ack_status = MiApp_UnicastStar (0);
  3391  000CD8  0E00               	movlw	0
  3392  000CDA  EC21  F014         	call	_MiApp_UnicastStar
  3393  000CDE  0101               	movlb	1	; () banked
  3394  000CE0  6F80               	movwf	run_star_demo@sw_layer_ack_status& (0+255),b
  3395                           
  3396                           ; BSR set to: 1
  3397                           ;star_demo.c: 237: if (sw_layer_ack_status)
  3398  000CE2  5180               	movf	run_star_demo@sw_layer_ack_status& (0+255),w,b
  3399  000CE4  E18F               	bnz	l12381
  3400                           
  3401                           ; BSR set to: 1
  3402                           ;star_demo.c: 241: else
  3403                           ;star_demo.c: 242: {
  3404                           ;star_demo.c: 243: LCDDisplay((char *)"Data_Sending_Fail!!", 0, 0);
  3405  000CE6  0E4A               	movlw	low STR_19
  3406  000CE8  0100               	movlb	0	; () banked
  3407  000CEA  6F87               	movwf	LCDDisplay@text& (0+255),b
  3408  000CEC  0EFF               	movlw	high STR_19
  3409  000CEE  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
  3410  000CF0  6B89               	clrf	LCDDisplay@value& (0+255),b
  3411  000CF2  6B8A               	clrf	LCDDisplay@delay& (0+255),b
  3412  000CF4  EC7B  F018         	call	_LCDDisplay	;wreg free
  3413  000CF8  D01D               	goto	l12431
  3414  000CFA                     l12421:
  3415                           
  3416                           ; BSR set to: 1
  3417                           ;star_demo.c: 252: else if(switch_val == 2)
  3418  000CFA  0E02               	movlw	2
  3419  000CFC  1983               	xorwf	run_star_demo@switch_val& (0+255),w,b
  3420  000CFE  E11A               	bnz	l12431
  3421                           
  3422                           ; BSR set to: 1
  3423                           ;star_demo.c: 253: {
  3424                           ;star_demo.c: 254: if (select_ed > end_nodes-1)
  3425  000D00  5184               	movf	run_star_demo@select_ed& (0+255),w,b
  3426  000D02  6F79               	movwf	??_run_star_demo& (0+255),b
  3427  000D04  6B7A               	clrf	(??_run_star_demo+1)& (0+255),b
  3428  000D06  697B               	setf	(??_run_star_demo+2)& (0+255),b
  3429  000D08  697C               	setf	(??_run_star_demo+3)& (0+255),b
  3430  000D0A  502C               	movf	_end_nodes,w,c
  3431  000D0C  6F7D               	movwf	(??_run_star_demo+4)& (0+255),b
  3432  000D0E  6B7E               	clrf	(??_run_star_demo+5)& (0+255),b
  3433  000D10  517B               	movf	(??_run_star_demo+2)& (0+255),w,b
  3434  000D12  277D               	addwf	(??_run_star_demo+4)& (0+255),f,b
  3435  000D14  517C               	movf	(??_run_star_demo+3)& (0+255),w,b
  3436  000D16  237E               	addwfc	(??_run_star_demo+5)& (0+255),f,b
  3437  000D18  5179               	movf	??_run_star_demo& (0+255),w,b
  3438  000D1A  5D7D               	subwf	(??_run_star_demo+4)& (0+255),w,b
  3439  000D1C  517E               	movf	(??_run_star_demo+5)& (0+255),w,b
  3440  000D1E  0A80               	xorlw	128
  3441  000D20  6F7F               	movwf	(??_run_star_demo+6)& (0+255),b
  3442  000D22  517A               	movf	(??_run_star_demo+1)& (0+255),w,b
  3443  000D24  0A80               	xorlw	128
  3444  000D26  597F               	subwfb	(??_run_star_demo+6)& (0+255),w,b
  3445  000D28  E202               	bc	l12427
  3446                           
  3447                           ; BSR set to: 1
  3448                           ;star_demo.c: 255: {
  3449                           ;star_demo.c: 256: select_ed = 0;
  3450  000D2A  6B84               	clrf	run_star_demo@select_ed& (0+255),b
  3451                           
  3452                           ;star_demo.c: 257: }
  3453  000D2C  D001               	goto	l12429
  3454  000D2E                     l12427:
  3455                           
  3456                           ; BSR set to: 1
  3457                           ;star_demo.c: 258: else
  3458                           ;star_demo.c: 259: {
  3459                           ;star_demo.c: 260: select_ed = select_ed+1;
  3460  000D2E  2B84               	incf	run_star_demo@select_ed& (0+255),f,b
  3461  000D30                     l12429:
  3462                           
  3463                           ; BSR set to: 1
  3464                           ;star_demo.c: 261: }
  3465                           ;star_demo.c: 262: chk_sel_status = 0;
  3466  000D30  0100               	movlb	0	; () banked
  3467  000D32  6BFE               	clrf	_chk_sel_status& (0+255),b
  3468  000D34                     l12431:
  3469  000D34  0100               	movlb	0	; () banked
  3470  000D36  51FE               	movf	_chk_sel_status& (0+255),w,b
  3471  000D38  E001 D738          	bnz	l12357
  3472  000D3C                     l12433:
  3473  000D3C  0101               	movlb	1	; () banked
  3474  000D3E  0581               	decf	run_star_demo@update_ed& (0+255),w,b
  3475  000D40  E101 D663          	bz	l12345
  3476                           
  3477                           ; BSR set to: 1
  3478                           ;star_demo.c: 264: }
  3479                           ;star_demo.c: 265: }
  3480                           ;star_demo.c: 267: }
  3481                           ;star_demo.c: 268: STAR_DEMO_OPTIONS_MESSAGE (0);
  3482  000D44  0E00               	movlw	0
  3483  000D46  EC45  F01A         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3484  000D4A                     l12437:
  3485                           
  3486                           ;star_demo.c: 269: }
  3487                           ;star_demo.c: 270: }
  3488                           ;star_demo.c: 271: if (fix_me == 1)
  3489  000D4A  0100               	movlb	0	; () banked
  3490  000D4C  05E9               	decf	_fix_me& (0+255),w,b
  3491  000D4E  E10E               	bnz	l12445
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;star_demo.c: 272: {
  3495                           ;star_demo.c: 273: MiApp_SetChannel(myChannel);
  3496  000D50  0E19               	movlw	25
  3497  000D52  EC7D  F019         	call	_MiApp_SetChannel
  3498                           
  3499                           ;star_demo.c: 274: MiApp_ConnectionMode(0x00);
  3500  000D56  0E00               	movlw	0
  3501  000D58  EC15  F019         	call	_MiApp_ConnectionMode
  3502  000D5C                     l12443:
  3503  000D5C  0101               	movlb	1	; () banked
  3504  000D5E  6B68               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  3505  000D60  EC1F  F010         	call	_MiApp_EstablishConnection
  3506  000D64  0AFF               	xorlw	255
  3507  000D66  E0FA               	bz	l12443
  3508                           
  3509                           ;star_demo.c: 276: fix_me = 0;
  3510  000D68  0100               	movlb	0	; () banked
  3511  000D6A  6BE9               	clrf	_fix_me& (0+255),b
  3512  000D6C                     l12445:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;star_demo.c: 277: }
  3516                           ;star_demo.c: 278: t3 = MiWi_TickGet();
  3517  000D6C  EC54  F017         	call	_MiWi_TickGet	;wreg free
  3518  000D70  C01D  F0D3         	movff	?_MiWi_TickGet,_t3
  3519  000D74  C01E  F0D4         	movff	?_MiWi_TickGet+1,_t3+1
  3520  000D78  C01F  F0D5         	movff	?_MiWi_TickGet+2,_t3+2
  3521  000D7C  C020  F0D6         	movff	?_MiWi_TickGet+3,_t3+3
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;star_demo.c: 279: if(((t3.Val - t2.Val) > (((uint32_t)(8000000)/32) * 40)))
  3525  000D80  51CF               	movf	_t2& (0+255),w,b
  3526  000D82  5DD3               	subwf	_t3& (0+255),w,b
  3527  000D84  0101               	movlb	1	; () banked
  3528  000D86  6F79               	movwf	??_run_star_demo& (0+255),b
  3529  000D88  0100               	movlb	0	; () banked
  3530  000D8A  51D0               	movf	(_t2+1)& (0+255),w,b
  3531  000D8C  59D4               	subwfb	(_t3+1)& (0+255),w,b
  3532  000D8E  0101               	movlb	1	; () banked
  3533  000D90  6F7A               	movwf	(??_run_star_demo+1)& (0+255),b
  3534  000D92  0100               	movlb	0	; () banked
  3535  000D94  51D1               	movf	(_t2+2)& (0+255),w,b
  3536  000D96  59D5               	subwfb	(_t3+2)& (0+255),w,b
  3537  000D98  0101               	movlb	1	; () banked
  3538  000D9A  6F7B               	movwf	(??_run_star_demo+2)& (0+255),b
  3539  000D9C  0100               	movlb	0	; () banked
  3540  000D9E  51D2               	movf	(_t2+3)& (0+255),w,b
  3541  000DA0  59D6               	subwfb	(_t3+3)& (0+255),w,b
  3542  000DA2  0101               	movlb	1	; () banked
  3543  000DA4  6F7C               	movwf	(??_run_star_demo+3)& (0+255),b
  3544  000DA6  517C               	movf	(??_run_star_demo+3)& (0+255),w,b
  3545  000DA8  E107               	bnz	u12860
  3546  000DAA  0E81               	movlw	129
  3547  000DAC  5D79               	subwf	??_run_star_demo& (0+255),w,b
  3548  000DAE  0E96               	movlw	150
  3549  000DB0  597A               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  3550  000DB2  0E98               	movlw	152
  3551  000DB4  597B               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  3552  000DB6  E31C               	bnc	l12459
  3553  000DB8                     u12860:
  3554                           
  3555                           ; BSR set to: 1
  3556                           ;star_demo.c: 280: {
  3557                           ;star_demo.c: 281: awake = 0;
  3558  000DB8  0100               	movlb	0	; () banked
  3559  000DBA  6BE8               	clrf	_awake& (0+255),b
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;star_demo.c: 285: MiApp_TransceiverPowerState(0x00);
  3563  000DBC  0E00               	movlw	0
  3564  000DBE  ECF1  F014         	call	_MiApp_TransceiverPowerState
  3565                           
  3566                           ;star_demo.c: 286: LCDDisplay((char *)"Sleeping!!!", 0, 0);
  3567  000DC2  0ED4               	movlw	low STR_20
  3568  000DC4  0100               	movlb	0	; () banked
  3569  000DC6  6F87               	movwf	LCDDisplay@text& (0+255),b
  3570  000DC8  0EFF               	movlw	high STR_20
  3571  000DCA  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
  3572  000DCC  6B89               	clrf	LCDDisplay@value& (0+255),b
  3573  000DCE  6B8A               	clrf	LCDDisplay@delay& (0+255),b
  3574  000DD0  EC7B  F018         	call	_LCDDisplay	;wreg free
  3575                           
  3576                           ;star_demo.c: 287: DELAY_ms(1000);
  3577  000DD4  0E03               	movlw	3
  3578  000DD6  6E1E               	movwf	DELAY_ms@ms+1,c
  3579  000DD8  0EE8               	movlw	232
  3580  000DDA  6E1D               	movwf	DELAY_ms@ms,c
  3581  000DDC  ECC2  F011         	call	_DELAY_ms	;wreg free
  3582                           
  3583                           ;star_demo.c: 288: t1 = t3;
  3584  000DE0  C0D3  F104         	movff	_t3,_t1
  3585  000DE4  C0D4  F105         	movff	_t3+1,_t1+1
  3586  000DE8  C0D5  F106         	movff	_t3+2,_t1+2
  3587  000DEC  C0D6  F107         	movff	_t3+3,_t1+3
  3588  000DF0                     l12459:
  3589  000DF0  0100               	movlb	0	; () banked
  3590  000DF2  51E8               	movf	_awake& (0+255),w,b
  3591  000DF4  E101 D56F          	bz	l12303
  3592  000DF8  D5BA               	goto	l12319
  3593  000DFA                     __end_of_run_star_demo:
  3594                           	opt stack 0
  3595                           tblptru	equ	0xFF8
  3596                           tblptrh	equ	0xFF7
  3597                           tblptrl	equ	0xFF6
  3598                           tablat	equ	0xFF5
  3599                           prodh	equ	0xFF4
  3600                           prodl	equ	0xFF3
  3601                           intcon	equ	0xFF2
  3602                           intcon2	equ	0xFF1
  3603                           intcon3	equ	0xFF0
  3604                           postinc0	equ	0xFEE
  3605                           wreg	equ	0xFE8
  3606                           indf1	equ	0xFE7
  3607                           fsr1h	equ	0xFE2
  3608                           fsr1l	equ	0xFE1
  3609                           indf2	equ	0xFDF
  3610                           fsr2h	equ	0xFDA
  3611                           fsr2l	equ	0xFD9
  3612                           
  3613 ;; *************** function _STAR_DEMO_OPTIONS_MESSAGE *****************
  3614 ;; Defined at:
  3615 ;;		line 212 in file "../src/demo_ouput.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  NetworkRole     1    wreg     unsigned char 
  3618 ;; Auto vars:     Size  Location     Type
  3619 ;;  NetworkRole     1   43[BANK0 ] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;		None               void
  3622 ;; Registers used:
  3623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3632 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3633 ;;Total ram usage:        1 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    7
  3636 ;; This function calls:
  3637 ;;		_LCDDisplay
  3638 ;; This function is called by:
  3639 ;;		_run_star_demo
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text8
  3644  00348A                     __ptext8:
  3645                           	opt stack 0
  3646  00348A                     _STAR_DEMO_OPTIONS_MESSAGE:
  3647                           	opt stack 21
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;incstack = 0
  3651                           ;STAR_DEMO_OPTIONS_MESSAGE@NetworkRole stored from wreg
  3652  00348A  0100               	movlb	0	; () banked
  3653  00348C  6F8B               	movwf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),b
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;demo_ouput.c: 214: if (NetworkRole)
  3657  00348E  518B               	movf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),w,b
  3658  003490  E004               	bz	l12115
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;demo_ouput.c: 215: {
  3662                           ;demo_ouput.c: 217: LCDDisplay((char *)"PC :RB0 or RB2  to Broadcast msg", 0, 0);
  3663  003492  0E2D               	movlw	low STR_8
  3664  003494  6F87               	movwf	LCDDisplay@text& (0+255),b
  3665  003496  0EFE               	movlw	high STR_8
  3666  003498  D003               	goto	L1
  3667  00349A                     l12115:
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;demo_ouput.c: 222: else
  3671                           ;demo_ouput.c: 223: {
  3672                           ;demo_ouput.c: 225: LCDDisplay((char *)"RB0 : Unicast   RB2 : Next Node", 0, 0);
  3673  00349A  0E6E               	movlw	low STR_9
  3674  00349C  6F87               	movwf	LCDDisplay@text& (0+255),b
  3675  00349E  0EFE               	movlw	high STR_9
  3676  0034A0                     L1:
  3677  0034A0  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
  3678  0034A2  6B89               	clrf	LCDDisplay@value& (0+255),b
  3679  0034A4  6B8A               	clrf	LCDDisplay@delay& (0+255),b
  3680  0034A6  EF7B  F018         	goto	_LCDDisplay	;wreg free
  3681  0034AA                     __end_of_STAR_DEMO_OPTIONS_MESSAGE:
  3682                           	opt stack 0
  3683                           tblptru	equ	0xFF8
  3684                           tblptrh	equ	0xFF7
  3685                           tblptrl	equ	0xFF6
  3686                           tablat	equ	0xFF5
  3687                           prodh	equ	0xFF4
  3688                           prodl	equ	0xFF3
  3689                           intcon	equ	0xFF2
  3690                           intcon2	equ	0xFF1
  3691                           intcon3	equ	0xFF0
  3692                           postinc0	equ	0xFEE
  3693                           wreg	equ	0xFE8
  3694                           indf1	equ	0xFE7
  3695                           fsr1h	equ	0xFE2
  3696                           fsr1l	equ	0xFE1
  3697                           indf2	equ	0xFDF
  3698                           fsr2h	equ	0xFDA
  3699                           fsr2l	equ	0xFD9
  3700                           
  3701 ;; *************** function _MiApp_UnicastStar *****************
  3702 ;; Defined at:
  3703 ;;		line 1974 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  SecEn           1    wreg     unsigned char 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  SecEn           1    4[BANK1 ] unsigned char 
  3708 ;;  t2              4    9[BANK1 ] struct _MIWI_TICK
  3709 ;;  t1              4    5[BANK1 ] struct _MIWI_TICK
  3710 ;;  status          1    0        unsigned char 
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      unsigned char 
  3713 ;; Registers used:
  3714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : F/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3721 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3722 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3723 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3724 ;;Total ram usage:       13 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:   15
  3727 ;; This function calls:
  3728 ;;		_MiApp_MessageAvailable
  3729 ;;		_MiWi_TickGet
  3730 ;;		_SendPacket
  3731 ;; This function is called by:
  3732 ;;		_run_star_demo
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           	psect	text9
  3737  002842                     __ptext9:
  3738                           	opt stack 0
  3739  002842                     _MiApp_UnicastStar:
  3740                           	opt stack 13
  3741                           
  3742                           ;incstack = 0
  3743                           ;MiApp_UnicastStar@SecEn stored from wreg
  3744  002842  0101               	movlb	1	; () banked
  3745  002844  6F6C               	movwf	MiApp_UnicastStar@SecEn& (0+255),b
  3746                           
  3747                           ; BSR set to: 1
  3748                           ;miwi_p2p.c: 1976: rec_ack = 0;
  3749  002846  0100               	movlb	0	; () banked
  3750  002848  6BEA               	clrf	_rec_ack& (0+255),b
  3751                           
  3752                           ; BSR set to: 0
  3753                           ;miwi_p2p.c: 1977: bool status;
  3754                           ;miwi_p2p.c: 1982: status = SendPacket(0, myPANID, ConnectionTable[0].Address, 1, SecEn)
      +                          ;
  3755  00284A  C0EB  F08F         	movff	_myPANID,SendPacket@DestinationPANID
  3756  00284E  C0EC  F090         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  3757  002852  0E04               	movlw	low (_ConnectionTable+4)
  3758  002854  6F91               	movwf	SendPacket@DestinationAddress& (0+255),b
  3759  002856  0E03               	movlw	high (_ConnectionTable+4)
  3760  002858  6F92               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  3761  00285A  0E01               	movlw	1
  3762  00285C  6F93               	movwf	SendPacket@isCommand& (0+255),b
  3763  00285E  C16C  F094         	movff	MiApp_UnicastStar@SecEn,SendPacket@SecurityEnabled
  3764  002862  0E00               	movlw	0
  3765  002864  EC95  F012         	call	_SendPacket
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;miwi_p2p.c: 1987: MIWI_TICK t1, t2;
  3769                           ;miwi_p2p.c: 1989: t1 = MiWi_TickGet();
  3770  002868  EC54  F017         	call	_MiWi_TickGet	;wreg free
  3771  00286C  C01D  F16D         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t1
  3772  002870  C01E  F16E         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t1+1
  3773  002874  C01F  F16F         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t1+2
  3774  002878  C020  F170         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t1+3
  3775                           
  3776                           ;miwi_p2p.c: 1990: while (!rec_ack)
  3777  00287C  D024               	goto	l11997
  3778  00287E                     l11987:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;miwi_p2p.c: 1991: {
  3782                           ;miwi_p2p.c: 1992: t2 = MiWi_TickGet();
  3783  00287E  EC54  F017         	call	_MiWi_TickGet	;wreg free
  3784  002882  C01D  F171         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t2
  3785  002886  C01E  F172         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t2+1
  3786  00288A  C01F  F173         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t2+2
  3787  00288E  C020  F174         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t2+3
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;miwi_p2p.c: 1993: MiApp_MessageAvailable();
  3791  002892  ECE8  F01A         	call	_MiApp_MessageAvailable	;wreg free
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;miwi_p2p.c: 1996: if((t2.Val - t1.Val) > ((((uint32_t)(8000000)/32)/10)))
  3795  002896  0101               	movlb	1	; () banked
  3796  002898  516D               	movf	MiApp_UnicastStar@t1& (0+255),w,b
  3797  00289A  5D71               	subwf	MiApp_UnicastStar@t2& (0+255),w,b
  3798  00289C  6F68               	movwf	??_MiApp_UnicastStar& (0+255),b
  3799  00289E  516E               	movf	(MiApp_UnicastStar@t1+1)& (0+255),w,b
  3800  0028A0  5972               	subwfb	(MiApp_UnicastStar@t2+1)& (0+255),w,b
  3801  0028A2  6F69               	movwf	(??_MiApp_UnicastStar+1)& (0+255),b
  3802  0028A4  516F               	movf	(MiApp_UnicastStar@t1+2)& (0+255),w,b
  3803  0028A6  5973               	subwfb	(MiApp_UnicastStar@t2+2)& (0+255),w,b
  3804  0028A8  6F6A               	movwf	(??_MiApp_UnicastStar+2)& (0+255),b
  3805  0028AA  5170               	movf	(MiApp_UnicastStar@t1+3)& (0+255),w,b
  3806  0028AC  5974               	subwfb	(MiApp_UnicastStar@t2+3)& (0+255),w,b
  3807  0028AE  6F6B               	movwf	(??_MiApp_UnicastStar+3)& (0+255),b
  3808  0028B0  516B               	movf	(??_MiApp_UnicastStar+3)& (0+255),w,b
  3809  0028B2  116A               	iorwf	(??_MiApp_UnicastStar+2)& (0+255),w,b
  3810  0028B4  E105               	bnz	u12410
  3811  0028B6  0EA9               	movlw	169
  3812  0028B8  5D68               	subwf	??_MiApp_UnicastStar& (0+255),w,b
  3813  0028BA  0E61               	movlw	97
  3814  0028BC  5969               	subwfb	(??_MiApp_UnicastStar+1)& (0+255),w,b
  3815  0028BE  E303               	bnc	l11997
  3816  0028C0                     u12410:
  3817                           
  3818                           ; BSR set to: 1
  3819                           ;miwi_p2p.c: 1997: {
  3820                           ;miwi_p2p.c: 1998: if (rec_ack != 1)
  3821  0028C0  0100               	movlb	0	; () banked
  3822  0028C2  05EA               	decf	_rec_ack& (0+255),w,b
  3823  0028C4  E103               	bnz	l11999
  3824  0028C6                     l11997:
  3825  0028C6  0100               	movlb	0	; () banked
  3826  0028C8  51EA               	movf	_rec_ack& (0+255),w,b
  3827  0028CA  E0D9               	bz	l11987
  3828  0028CC                     l11999:
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;miwi_p2p.c: 2001: }
  3832                           ;miwi_p2p.c: 2002: }
  3833                           ;miwi_p2p.c: 2003: }
  3834                           ;miwi_p2p.c: 2006: return rec_ack;
  3835  0028CC  51EA               	movf	_rec_ack& (0+255),w,b
  3836                           
  3837                           ; BSR set to: 0
  3838  0028CE  0012               	return		;funcret
  3839  0028D0                     __end_of_MiApp_UnicastStar:
  3840                           	opt stack 0
  3841                           tblptru	equ	0xFF8
  3842                           tblptrh	equ	0xFF7
  3843                           tblptrl	equ	0xFF6
  3844                           tablat	equ	0xFF5
  3845                           prodh	equ	0xFF4
  3846                           prodl	equ	0xFF3
  3847                           intcon	equ	0xFF2
  3848                           intcon2	equ	0xFF1
  3849                           intcon3	equ	0xFF0
  3850                           postinc0	equ	0xFEE
  3851                           wreg	equ	0xFE8
  3852                           indf1	equ	0xFE7
  3853                           fsr1h	equ	0xFE2
  3854                           fsr1l	equ	0xFE1
  3855                           indf2	equ	0xFDF
  3856                           fsr2h	equ	0xFDA
  3857                           fsr2l	equ	0xFD9
  3858                           
  3859 ;; *************** function _MiApp_TransceiverPowerState *****************
  3860 ;; Defined at:
  3861 ;;		line 1321 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  Mode            1    wreg     unsigned char 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  Mode            1    0[BANK1 ] unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      unsigned char 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : F/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3876 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3878 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3879 ;;Total ram usage:        1 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:   14
  3882 ;; This function calls:
  3883 ;;		_CheckForData
  3884 ;;		_MiMAC_PowerState
  3885 ;;		_NVMWrite
  3886 ;;		_P2PTasks
  3887 ;; This function is called by:
  3888 ;;		_run_star_demo
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text10
  3893  0029E2                     __ptext10:
  3894                           	opt stack 0
  3895  0029E2                     _MiApp_TransceiverPowerState:
  3896                           	opt stack 14
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;incstack = 0
  3900                           ;MiApp_TransceiverPowerState@Mode stored from wreg
  3901  0029E2  0101               	movlb	1	; () banked
  3902  0029E4  6F68               	movwf	MiApp_TransceiverPowerState@Mode& (0+255),b
  3903                           
  3904                           ; BSR set to: 1
  3905                           ;miwi_p2p.c: 1325: switch(Mode)
  3906  0029E6  D038               	goto	l11979
  3907  0029E8                     l527:
  3908                           
  3909                           ; BSR set to: 1
  3910                           ;miwi_p2p.c: 1328: {
  3911                           ;miwi_p2p.c: 1330: if( P2PStatus.bits.SaveConnection )
  3912  0029E8  0100               	movlb	0	; () banked
  3913  0029EA  A3E3               	btfss	_P2PStatus& (0+255),1,b	;volatile
  3914  0029EC  D00F               	goto	l11957
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;miwi_p2p.c: 1331: {
  3918                           ;miwi_p2p.c: 1332: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)10
      +                           * sizeof(CONNECTION_ENTRY));
  3919  0029EE  0E00               	movlw	low _ConnectionTable
  3920  0029F0  6E1E               	movwf	NVMWrite@source,c
  3921  0029F2  0E03               	movlw	high _ConnectionTable
  3922  0029F4  6E1F               	movwf	NVMWrite@source+1,c
  3923  0029F6  C03F  F020         	movff	_nvmConnectionTable,NVMWrite@addr
  3924  0029FA  C040  F021         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  3925  0029FE  6A23               	clrf	NVMWrite@count+1,c
  3926  002A00  0E8C               	movlw	140
  3927  002A02  6E22               	movwf	NVMWrite@count,c
  3928  002A04  EC3F  F013         	call	_NVMWrite	;wreg free
  3929                           
  3930                           ;miwi_p2p.c: 1333: P2PStatus.bits.SaveConnection = 0;
  3931  002A08  0100               	movlb	0	; () banked
  3932  002A0A  93E3               	bcf	_P2PStatus& (0+255),1,b	;volatile
  3933  002A0C                     l11957:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;miwi_p2p.c: 1334: }
  3937                           ;miwi_p2p.c: 1336: if( MiMAC_PowerState(0x00) )
  3938  002A0C  0E00               	movlw	0
  3939  002A0E  ECC7  F010         	call	_MiMAC_PowerState
  3940  002A12  0900               	iorlw	0
  3941  002A14  B4D8               	btfsc	status,2,c
  3942  002A16  0012               	return	
  3943                           
  3944                           ;miwi_p2p.c: 1337: {
  3945                           ;miwi_p2p.c: 1338: P2PStatus.bits.Sleeping = 1;
  3946  002A18  0100               	movlb	0	; () banked
  3947  002A1A  81E3               	bsf	_P2PStatus& (0+255),0,b	;volatile
  3948                           
  3949                           ;miwi_p2p.c: 1339: return 0x00;
  3950                           ;	Return value of _MiApp_TransceiverPowerState is never used
  3951  002A1C  0012               	return	
  3952  002A1E                     l11961:
  3953                           
  3954                           ; BSR set to: 1
  3955                           ;miwi_p2p.c: 1345: {
  3956                           ;miwi_p2p.c: 1346: if( MiMAC_PowerState(0xFF) )
  3957  002A1E  0EFF               	movlw	255
  3958  002A20  ECC7  F010         	call	_MiMAC_PowerState
  3959  002A24  0900               	iorlw	0
  3960  002A26  B4D8               	btfsc	status,2,c
  3961  002A28  0012               	return	
  3962                           
  3963                           ;miwi_p2p.c: 1347: {
  3964                           ;miwi_p2p.c: 1348: P2PStatus.bits.Sleeping = 0;
  3965  002A2A  0100               	movlb	0	; () banked
  3966  002A2C  91E3               	bcf	_P2PStatus& (0+255),0,b	;volatile
  3967                           
  3968                           ;miwi_p2p.c: 1349: return 0x00;
  3969                           ;	Return value of _MiApp_TransceiverPowerState is never used
  3970  002A2E  0012               	return	
  3971  002A30                     l11965:
  3972                           
  3973                           ; BSR set to: 1
  3974                           ;miwi_p2p.c: 1355: {
  3975                           ;miwi_p2p.c: 1356: if( 0 == MiMAC_PowerState(0xFF) )
  3976  002A30  0EFF               	movlw	255
  3977  002A32  ECC7  F010         	call	_MiMAC_PowerState
  3978  002A36  0900               	iorlw	0
  3979  002A38  B4D8               	btfsc	status,2,c
  3980  002A3A  0012               	return	
  3981                           
  3982                           ;miwi_p2p.c: 1359: }
  3983                           ;miwi_p2p.c: 1360: P2PStatus.bits.Sleeping = 0;
  3984  002A3C  0100               	movlb	0	; () banked
  3985  002A3E  91E3               	bcf	_P2PStatus& (0+255),0,b	;volatile
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;miwi_p2p.c: 1361: if( CheckForData() == 0 )
  3989  002A40  EC72  F016         	call	_CheckForData	;wreg free
  3990  002A44  0900               	iorlw	0
  3991  002A46  B4D8               	btfsc	status,2,c
  3992  002A48  0012               	return	
  3993  002A4A  D002               	goto	l11975
  3994  002A4C                     l11973:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;miwi_p2p.c: 1366: {
  3998                           ;miwi_p2p.c: 1367: P2PTasks();
  3999  002A4C  EC94  F009         	call	_P2PTasks	;wreg free
  4000  002A50                     l11975:
  4001  002A50  0100               	movlb	0	; () banked
  4002  002A52  A5E3               	btfss	_P2PStatus& (0+255),2,b	;volatile
  4003  002A54  0012               	return	
  4004  002A56  D7FA               	goto	l11973
  4005  002A58                     l11979:
  4006                           
  4007                           ; BSR set to: 1
  4008  002A58  5168               	movf	MiApp_TransceiverPowerState@Mode& (0+255),w,b
  4009                           
  4010                           ; Switch size 1, requested type "speed"
  4011                           ; Number of cases is 3, Range of values is 0 to 2
  4012                           ; switch strategies available:
  4013                           ; Name         Instructions Cycles
  4014                           ; simple_byte           10     6 (average)
  4015                           ;	Chosen strategy is simple_byte
  4016  002A5A  E0C6               	bz	l527
  4017  002A5C  0A01               	xorlw	1	; case 1
  4018  002A5E  E0DF               	bz	l11961
  4019  002A60  0A03               	xorlw	3	; case 2
  4020  002A62  A4D8               	btfss	status,2,c
  4021  002A64  0012               	return	
  4022  002A66  D7E4               	goto	l11965
  4023  002A68                     __end_of_MiApp_TransceiverPowerState:
  4024                           	opt stack 0
  4025                           tblptru	equ	0xFF8
  4026                           tblptrh	equ	0xFF7
  4027                           tblptrl	equ	0xFF6
  4028                           tablat	equ	0xFF5
  4029                           prodh	equ	0xFF4
  4030                           prodl	equ	0xFF3
  4031                           intcon	equ	0xFF2
  4032                           intcon2	equ	0xFF1
  4033                           intcon3	equ	0xFF0
  4034                           postinc0	equ	0xFEE
  4035                           wreg	equ	0xFE8
  4036                           indf1	equ	0xFE7
  4037                           fsr1h	equ	0xFE2
  4038                           fsr1l	equ	0xFE1
  4039                           indf2	equ	0xFDF
  4040                           fsr2h	equ	0xFDA
  4041                           fsr2l	equ	0xFD9
  4042                           status	equ	0xFD8
  4043                           
  4044 ;; *************** function _MiMAC_PowerState *****************
  4045 ;; Defined at:
  4046 ;;		line 1148 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  PowerState      1    wreg     unsigned char 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  PowerState      1   20[BANK0 ] unsigned char 
  4051 ;;  t2              4   26[BANK0 ] struct _MIWI_TICK
  4052 ;;  t1              4   21[BANK0 ] struct _MIWI_TICK
  4053 ;;  results         1   25[BANK0 ] unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      unsigned char 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : E/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4064 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4066 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4067 ;;Total ram usage:       10 bytes
  4068 ;; Hardware stack levels used:    1
  4069 ;; Hardware stack levels required when called:    8
  4070 ;; This function calls:
  4071 ;;		_InitMRF24J40
  4072 ;;		_MiMAC_SetAltAddress
  4073 ;;		_MiWi_TickGet
  4074 ;;		_PHYGetLongRAMAddr
  4075 ;;		_PHYGetShortRAMAddr
  4076 ;;		_PHYSetShortRAMAddr
  4077 ;; This function is called by:
  4078 ;;		_MiApp_TransceiverPowerState
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text11
  4083  00218E                     __ptext11:
  4084                           	opt stack 0
  4085  00218E                     _MiMAC_PowerState:
  4086                           	opt stack 19
  4087                           
  4088                           ;incstack = 0
  4089                           ;MiMAC_PowerState@PowerState stored from wreg
  4090  00218E  0100               	movlb	0	; () banked
  4091  002190  6F74               	movwf	MiMAC_PowerState@PowerState& (0+255),b
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;drv_mrf_miwi_24j40.c: 1150: switch (PowerState)
  4095  002192  D082               	goto	l11849
  4096  002194                     l179:
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;drv_mrf_miwi_24j40.c: 1153: {
  4100                           ;drv_mrf_miwi_24j40.c: 1155: LATDbits.LATD3 = 0;
  4101  002194  968C               	bcf	3980,3,c	;volatile
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;drv_mrf_miwi_24j40.c: 1164: PHYSetShortRAMAddr((0x55), 0x04);
  4105  002196  0E04               	movlw	4
  4106  002198  6E1E               	movwf	PHYSetShortRAMAddr@value,c
  4107  00219A  0E55               	movlw	85
  4108  00219C  ECD6  F019         	call	_PHYSetShortRAMAddr
  4109                           
  4110                           ;drv_mrf_miwi_24j40.c: 1167: PHYSetShortRAMAddr((0x45), 0x80);
  4111  0021A0  0E80               	movlw	128
  4112  0021A2  6E1E               	movwf	PHYSetShortRAMAddr@value,c
  4113  0021A4  0E45               	movlw	69
  4114  0021A6  ECD6  F019         	call	_PHYSetShortRAMAddr
  4115                           
  4116                           ;drv_mrf_miwi_24j40.c: 1168: PHYSetShortRAMAddr((0x1B), 0x60);
  4117  0021AA  0E60               	movlw	96
  4118  0021AC  6E1E               	movwf	PHYSetShortRAMAddr@value,c
  4119  0021AE  0E1B               	movlw	27
  4120  0021B0  ECD6  F019         	call	_PHYSetShortRAMAddr
  4121                           
  4122                           ;drv_mrf_miwi_24j40.c: 1169: PHYSetShortRAMAddr((0x6B), 0x80);
  4123  0021B4  0E80               	movlw	128
  4124  0021B6  6E1E               	movwf	PHYSetShortRAMAddr@value,c
  4125  0021B8  0E6B               	movlw	107
  4126  0021BA  ECD6  F019         	call	_PHYSetShortRAMAddr
  4127                           
  4128                           ;drv_mrf_miwi_24j40.c: 1170: }
  4129                           ;drv_mrf_miwi_24j40.c: 1171: break;
  4130  0021BE  0C01               	retlw	1
  4131  0021C0                     l181:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;drv_mrf_miwi_24j40.c: 1174: {
  4135                           ;drv_mrf_miwi_24j40.c: 1179: uint8_t results;
  4136                           ;drv_mrf_miwi_24j40.c: 1180: MIWI_TICK t1, t2;
  4137                           ;drv_mrf_miwi_24j40.c: 1183: LATDbits.LATD3 = 1;
  4138  0021C0  868C               	bsf	3980,3,c	;volatile
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;drv_mrf_miwi_24j40.c: 1185: t1 = MiWi_TickGet();
  4142  0021C2  EC54  F017         	call	_MiWi_TickGet	;wreg free
  4143  0021C6  C01D  F075         	movff	?_MiWi_TickGet,MiMAC_PowerState@t1
  4144  0021CA  C01E  F076         	movff	?_MiWi_TickGet+1,MiMAC_PowerState@t1+1
  4145  0021CE  C01F  F077         	movff	?_MiWi_TickGet+2,MiMAC_PowerState@t1+2
  4146  0021D2  C020  F078         	movff	?_MiWi_TickGet+3,MiMAC_PowerState@t1+3
  4147  0021D6                     l182:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;drv_mrf_miwi_24j40.c: 1188: {
  4151                           ;drv_mrf_miwi_24j40.c: 1189: t2 = MiWi_TickGet();
  4152  0021D6  EC54  F017         	call	_MiWi_TickGet	;wreg free
  4153  0021DA  C01D  F07A         	movff	?_MiWi_TickGet,MiMAC_PowerState@t2
  4154  0021DE  C01E  F07B         	movff	?_MiWi_TickGet+1,MiMAC_PowerState@t2+1
  4155  0021E2  C01F  F07C         	movff	?_MiWi_TickGet+2,MiMAC_PowerState@t2+2
  4156  0021E6  C020  F07D         	movff	?_MiWi_TickGet+3,MiMAC_PowerState@t2+3
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;drv_mrf_miwi_24j40.c: 1190: t2.Val = (t2.Val - t1.Val);
  4160  0021EA  5175               	movf	MiMAC_PowerState@t1& (0+255),w,b
  4161  0021EC  5F7A               	subwf	MiMAC_PowerState@t2& (0+255),f,b
  4162  0021EE  5176               	movf	(MiMAC_PowerState@t1+1)& (0+255),w,b
  4163  0021F0  5B7B               	subwfb	(MiMAC_PowerState@t2+1)& (0+255),f,b
  4164  0021F2  5177               	movf	(MiMAC_PowerState@t1+2)& (0+255),w,b
  4165  0021F4  5B7C               	subwfb	(MiMAC_PowerState@t2+2)& (0+255),f,b
  4166  0021F6  5178               	movf	(MiMAC_PowerState@t1+3)& (0+255),w,b
  4167  0021F8  5B7D               	subwfb	(MiMAC_PowerState@t2+3)& (0+255),f,b
  4168                           
  4169                           ; BSR set to: 0
  4170                           ;drv_mrf_miwi_24j40.c: 1193: if (t2.Val > (((uint32_t)(8000000)/32)/10))
  4171  0021FA  517D               	movf	(MiMAC_PowerState@t2+3)& (0+255),w,b
  4172  0021FC  117C               	iorwf	(MiMAC_PowerState@t2+2)& (0+255),w,b
  4173  0021FE  E105               	bnz	u12250
  4174  002200  0EA9               	movlw	169
  4175  002202  5D7A               	subwf	MiMAC_PowerState@t2& (0+255),w,b
  4176  002204  0E61               	movlw	97
  4177  002206  597B               	subwfb	(MiMAC_PowerState@t2+1)& (0+255),w,b
  4178  002208  E308               	bnc	l11819
  4179  00220A                     u12250:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;drv_mrf_miwi_24j40.c: 1194: {
  4183                           ;drv_mrf_miwi_24j40.c: 1195: InitMRF24J40();
  4184  00220A  EC88  F00D         	call	_InitMRF24J40	;wreg free
  4185                           
  4186                           ;drv_mrf_miwi_24j40.c: 1197: MiMAC_SetAltAddress(myNetworkAddress.v, MAC_PANID.v);
  4187  00220E  0E3B               	movlw	low _MAC_PANID
  4188  002210  6E21               	movwf	MiMAC_SetAltAddress@PANID,c
  4189  002212  0E3D               	movlw	_myNetworkAddress& (0+255)
  4190  002214  ECD6  F016         	call	_MiMAC_SetAltAddress
  4191                           
  4192                           ;drv_mrf_miwi_24j40.c: 1198: break;
  4193  002218  D007               	goto	l11825
  4194  00221A                     l11819:
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;drv_mrf_miwi_24j40.c: 1199: }
  4198                           ;drv_mrf_miwi_24j40.c: 1201: results = PHYGetShortRAMAddr((0x62));
  4199  00221A  0E62               	movlw	98
  4200  00221C  EC94  F019         	call	_PHYGetShortRAMAddr
  4201  002220  0100               	movlb	0	; () banked
  4202  002222  6F79               	movwf	MiMAC_PowerState@results& (0+255),b
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;drv_mrf_miwi_24j40.c: 1202: if ((results & 0x40) != 0x00)
  4206  002224  AD79               	btfss	MiMAC_PowerState@results& (0+255),6,b
  4207  002226  D7D7               	goto	l182
  4208  002228                     l11825:
  4209                           
  4210                           ;drv_mrf_miwi_24j40.c: 1209: {
  4211                           ;drv_mrf_miwi_24j40.c: 1210: t2 = MiWi_TickGet();
  4212  002228  EC54  F017         	call	_MiWi_TickGet	;wreg free
  4213  00222C  C01D  F07A         	movff	?_MiWi_TickGet,MiMAC_PowerState@t2
  4214  002230  C01E  F07B         	movff	?_MiWi_TickGet+1,MiMAC_PowerState@t2+1
  4215  002234  C01F  F07C         	movff	?_MiWi_TickGet+2,MiMAC_PowerState@t2+2
  4216  002238  C020  F07D         	movff	?_MiWi_TickGet+3,MiMAC_PowerState@t2+3
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;drv_mrf_miwi_24j40.c: 1211: t2.Val = (t2.Val - t1.Val);
  4220  00223C  5175               	movf	MiMAC_PowerState@t1& (0+255),w,b
  4221  00223E  5F7A               	subwf	MiMAC_PowerState@t2& (0+255),f,b
  4222  002240  5176               	movf	(MiMAC_PowerState@t1+1)& (0+255),w,b
  4223  002242  5B7B               	subwfb	(MiMAC_PowerState@t2+1)& (0+255),f,b
  4224  002244  5177               	movf	(MiMAC_PowerState@t1+2)& (0+255),w,b
  4225  002246  5B7C               	subwfb	(MiMAC_PowerState@t2+2)& (0+255),f,b
  4226  002248  5178               	movf	(MiMAC_PowerState@t1+3)& (0+255),w,b
  4227  00224A  5B7D               	subwfb	(MiMAC_PowerState@t2+3)& (0+255),f,b
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;drv_mrf_miwi_24j40.c: 1214: if (t2.Val > (((uint32_t)(8000000)/32)/10))
  4231  00224C  517D               	movf	(MiMAC_PowerState@t2+3)& (0+255),w,b
  4232  00224E  117C               	iorwf	(MiMAC_PowerState@t2+2)& (0+255),w,b
  4233  002250  E105               	bnz	u12270
  4234  002252  0EA9               	movlw	169
  4235  002254  5D7A               	subwf	MiMAC_PowerState@t2& (0+255),w,b
  4236  002256  0E61               	movlw	97
  4237  002258  597B               	subwfb	(MiMAC_PowerState@t2+1)& (0+255),w,b
  4238  00225A  E308               	bnc	l11835
  4239  00225C                     u12270:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;drv_mrf_miwi_24j40.c: 1215: {
  4243                           ;drv_mrf_miwi_24j40.c: 1216: InitMRF24J40();
  4244  00225C  EC88  F00D         	call	_InitMRF24J40	;wreg free
  4245                           
  4246                           ;drv_mrf_miwi_24j40.c: 1218: MiMAC_SetAltAddress(myNetworkAddress.v, MAC_PANID.v);
  4247  002260  0E3B               	movlw	low _MAC_PANID
  4248  002262  6E21               	movwf	MiMAC_SetAltAddress@PANID,c
  4249  002264  0E3D               	movlw	_myNetworkAddress& (0+255)
  4250  002266  ECD6  F016         	call	_MiMAC_SetAltAddress
  4251                           
  4252                           ;drv_mrf_miwi_24j40.c: 1219: break;
  4253  00226A  D00C               	goto	l11841
  4254  00226C                     l11835:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;drv_mrf_miwi_24j40.c: 1220: }
  4258                           ;drv_mrf_miwi_24j40.c: 1222: results = PHYGetLongRAMAddr((0x20f));
  4259  00226C  0E02               	movlw	2
  4260  00226E  6E1F               	movwf	PHYGetLongRAMAddr@address+1,c
  4261  002270  0E0F               	movlw	15
  4262  002272  6E1E               	movwf	PHYGetLongRAMAddr@address,c
  4263  002274  EC02  F017         	call	_PHYGetLongRAMAddr	;wreg free
  4264  002278  0100               	movlb	0	; () banked
  4265  00227A  6F79               	movwf	MiMAC_PowerState@results& (0+255),b
  4266                           
  4267                           ; BSR set to: 0
  4268                           ;drv_mrf_miwi_24j40.c: 1223: if ((results & 0xE0) == 0xA0)
  4269  00227C  5179               	movf	MiMAC_PowerState@results& (0+255),w,b
  4270  00227E  0BE0               	andlw	224
  4271  002280  0AA0               	xorlw	160
  4272  002282  E1D2               	bnz	l11825
  4273  002284                     l11841:
  4274                           
  4275                           ;drv_mrf_miwi_24j40.c: 1226: }
  4276                           ;drv_mrf_miwi_24j40.c: 1228: }
  4277                           ;drv_mrf_miwi_24j40.c: 1230: PHYSetShortRAMAddr((0x6D), 0x04);
  4278  002284  0E04               	movlw	4
  4279  002286  6E1E               	movwf	PHYSetShortRAMAddr@value,c
  4280  002288  0E6D               	movlw	109
  4281  00228A  ECD6  F019         	call	_PHYSetShortRAMAddr
  4282                           
  4283                           ;drv_mrf_miwi_24j40.c: 1231: PHYSetShortRAMAddr((0x6D), 0x00);
  4284  00228E  6A1E               	clrf	PHYSetShortRAMAddr@value,c
  4285  002290  0E6D               	movlw	109
  4286  002292  ECD6  F019         	call	_PHYSetShortRAMAddr
  4287                           
  4288                           ;drv_mrf_miwi_24j40.c: 1252: }
  4289                           ;drv_mrf_miwi_24j40.c: 1253: break;
  4290  002296  0C01               	retlw	1
  4291  002298                     l11849:
  4292                           
  4293                           ; BSR set to: 0
  4294  002298  5174               	movf	MiMAC_PowerState@PowerState& (0+255),w,b
  4295                           
  4296                           ; Switch size 1, requested type "speed"
  4297                           ; Number of cases is 2, Range of values is 0 to 255
  4298                           ; switch strategies available:
  4299                           ; Name         Instructions Cycles
  4300                           ; simple_byte            7     4 (average)
  4301                           ;	Chosen strategy is simple_byte
  4302  00229A  E101 D77B          	bz	l179
  4303  00229E  0AFF               	xorlw	255	; case 255
  4304  0022A0  E08F               	bz	l181
  4305  0022A2  0C00               	retlw	0
  4306  0022A4                     __end_of_MiMAC_PowerState:
  4307                           	opt stack 0
  4308                           tblptru	equ	0xFF8
  4309                           tblptrh	equ	0xFF7
  4310                           tblptrl	equ	0xFF6
  4311                           tablat	equ	0xFF5
  4312                           prodh	equ	0xFF4
  4313                           prodl	equ	0xFF3
  4314                           intcon	equ	0xFF2
  4315                           intcon2	equ	0xFF1
  4316                           intcon3	equ	0xFF0
  4317                           postinc0	equ	0xFEE
  4318                           wreg	equ	0xFE8
  4319                           indf1	equ	0xFE7
  4320                           fsr1h	equ	0xFE2
  4321                           fsr1l	equ	0xFE1
  4322                           indf2	equ	0xFDF
  4323                           fsr2h	equ	0xFDA
  4324                           fsr2l	equ	0xFD9
  4325                           status	equ	0xFD8
  4326                           
  4327 ;; *************** function _CheckForData *****************
  4328 ;; Defined at:
  4329 ;;		line 1399 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  firstuint8_t    1   64[BANK0 ] unsigned char 
  4334 ;;  tmpTxData       1   63[BANK0 ] unsigned char 
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      unsigned char 
  4337 ;; Registers used:
  4338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4339 ;; Tracked objects:
  4340 ;;		On entry : E/1
  4341 ;;		On exit  : F/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4345 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4348 ;;Total ram usage:        2 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:   10
  4351 ;; This function calls:
  4352 ;;		_MiWi_TickGet
  4353 ;;		_SendPacket
  4354 ;; This function is called by:
  4355 ;;		_MiApp_TransceiverPowerState
  4356 ;;		_run_star_demo
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359                           
  4360                           	psect	text12
  4361  002CE4                     __ptext12:
  4362                           	opt stack 0
  4363  002CE4                     _CheckForData:
  4364                           	opt stack 17
  4365                           
  4366                           ;miwi_p2p.c: 1401: uint8_t tmpTxData = TxData;
  4367                           
  4368                           ;incstack = 0
  4369  002CE4  C0E6  F09F         	movff	_TxData,CheckForData@tmpTxData
  4370                           
  4371                           ;miwi_p2p.c: 1402: uint8_t firstuint8_t = TxBuffer[0];
  4372  002CE8  C138  F0A0         	movff	_TxBuffer,CheckForData@firstuint8_t
  4373                           
  4374                           ;miwi_p2p.c: 1404: {TxData = 0;};
  4375  002CEC  0100               	movlb	0	; () banked
  4376  002CEE  6BE6               	clrf	_TxData& (0+255),b
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;miwi_p2p.c: 1405: TxBuffer[TxData++] = 0x04;
  4380  002CF0  0E38               	movlw	low _TxBuffer
  4381  002CF2  25E6               	addwf	_TxData& (0+255),w,b
  4382  002CF4  6ED9               	movwf	fsr2l,c
  4383  002CF6  6ADA               	clrf	fsr2h,c
  4384  002CF8  0E01               	movlw	high _TxBuffer
  4385  002CFA  22DA               	addwfc	fsr2h,f,c
  4386  002CFC  0E04               	movlw	4
  4387  002CFE  6EDF               	movwf	indf2,c
  4388                           
  4389                           ; BSR set to: 0
  4390  002D00  2BE6               	incf	_TxData& (0+255),f,b
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;miwi_p2p.c: 1425: if( SendPacket(0, myPANID, ConnectionTable[0].Address, 1, 0) )
  4394  002D02  C0EB  F08F         	movff	_myPANID,SendPacket@DestinationPANID
  4395  002D06  C0EC  F090         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  4396  002D0A  0E04               	movlw	low (_ConnectionTable+4)
  4397  002D0C  6F91               	movwf	SendPacket@DestinationAddress& (0+255),b
  4398  002D0E  0E03               	movlw	high (_ConnectionTable+4)
  4399  002D10  6F92               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  4400  002D12  0E01               	movlw	1
  4401  002D14  6F93               	movwf	SendPacket@isCommand& (0+255),b
  4402  002D16  0E00               	movlw	0
  4403  002D18  6B94               	clrf	SendPacket@SecurityEnabled& (0+255),b
  4404  002D1A  EC95  F012         	call	_SendPacket
  4405  002D1E  0900               	iorlw	0
  4406  002D20  E010               	bz	l543
  4407                           
  4408                           ; BSR set to: 0
  4409                           ;miwi_p2p.c: 1434: {
  4410                           ;miwi_p2p.c: 1435: P2PStatus.bits.DataRequesting = 1;
  4411  002D22  85E3               	bsf	_P2PStatus& (0+255),2,b	;volatile
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;miwi_p2p.c: 1439: DataRequestTimer = MiWi_TickGet();
  4415  002D24  EC54  F017         	call	_MiWi_TickGet	;wreg free
  4416  002D28  C01D  F0C3         	movff	?_MiWi_TickGet,_DataRequestTimer
  4417  002D2C  C01E  F0C4         	movff	?_MiWi_TickGet+1,_DataRequestTimer+1
  4418  002D30  C01F  F0C5         	movff	?_MiWi_TickGet+2,_DataRequestTimer+2
  4419  002D34  C020  F0C6         	movff	?_MiWi_TickGet+3,_DataRequestTimer+3
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;miwi_p2p.c: 1440: TxBuffer[0] = firstuint8_t;
  4423  002D38  C0A0  F138         	movff	CheckForData@firstuint8_t,_TxBuffer
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;miwi_p2p.c: 1441: TxData = tmpTxData;
  4427  002D3C  C09F  F0E6         	movff	CheckForData@tmpTxData,_TxData
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;miwi_p2p.c: 1455: return 1;
  4431  002D40  0C01               	retlw	1
  4432  002D42                     l543:
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;miwi_p2p.c: 1456: }
  4436                           ;miwi_p2p.c: 1457: TxBuffer[0] = firstuint8_t;
  4437  002D42  C0A0  F138         	movff	CheckForData@firstuint8_t,_TxBuffer
  4438                           
  4439                           ;miwi_p2p.c: 1458: TxData = tmpTxData;
  4440  002D46  C09F  F0E6         	movff	CheckForData@tmpTxData,_TxData
  4441                           
  4442                           ; BSR set to: 0
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;miwi_p2p.c: 1462: return 0;
  4446  002D4A  0C00               	retlw	0	;funcret
  4447  002D4C                     __end_of_CheckForData:
  4448                           	opt stack 0
  4449                           tblptru	equ	0xFF8
  4450                           tblptrh	equ	0xFF7
  4451                           tblptrl	equ	0xFF6
  4452                           tablat	equ	0xFF5
  4453                           prodh	equ	0xFF4
  4454                           prodl	equ	0xFF3
  4455                           intcon	equ	0xFF2
  4456                           intcon2	equ	0xFF1
  4457                           intcon3	equ	0xFF0
  4458                           postinc0	equ	0xFEE
  4459                           wreg	equ	0xFE8
  4460                           indf1	equ	0xFE7
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           indf2	equ	0xFDF
  4464                           fsr2h	equ	0xFDA
  4465                           fsr2l	equ	0xFD9
  4466                           status	equ	0xFD8
  4467                           
  4468 ;; *************** function _DemoOutput_UpdateTxRx *****************
  4469 ;; Defined at:
  4470 ;;		line 188 in file "../src/demo_ouput.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  TxNum           1    wreg     unsigned char 
  4473 ;;  RxNum           1   40[BANK0 ] unsigned char 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  TxNum           1   41[BANK0 ] unsigned char 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;		None               void
  4478 ;; Registers used:
  4479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : F/0
  4482 ;;		On exit  : F/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4485 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4488 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;Total ram usage:        2 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    7
  4492 ;; This function calls:
  4493 ;;		_LCDTRXCount
  4494 ;; This function is called by:
  4495 ;;		_run_star_demo
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text13
  4500  0035C2                     __ptext13:
  4501                           	opt stack 0
  4502  0035C2                     _DemoOutput_UpdateTxRx:
  4503                           	opt stack 21
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;incstack = 0
  4507                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  4508  0035C2  6F89               	movwf	DemoOutput_UpdateTxRx@TxNum& (0+255),b
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;demo_ouput.c: 190: LCDTRXCount(TxNum, RxNum);
  4512  0035C4  C088  F087         	movff	DemoOutput_UpdateTxRx@RxNum,LCDTRXCount@rxCount
  4513  0035C8  5189               	movf	DemoOutput_UpdateTxRx@TxNum& (0+255),w,b
  4514  0035CA  EC39  F018         	call	_LCDTRXCount
  4515                           
  4516                           ; BSR set to: 0
  4517  0035CE  0012               	return		;funcret
  4518  0035D0                     __end_of_DemoOutput_UpdateTxRx:
  4519                           	opt stack 0
  4520                           tblptru	equ	0xFF8
  4521                           tblptrh	equ	0xFF7
  4522                           tblptrl	equ	0xFF6
  4523                           tablat	equ	0xFF5
  4524                           prodh	equ	0xFF4
  4525                           prodl	equ	0xFF3
  4526                           intcon	equ	0xFF2
  4527                           intcon2	equ	0xFF1
  4528                           intcon3	equ	0xFF0
  4529                           postinc0	equ	0xFEE
  4530                           wreg	equ	0xFE8
  4531                           indf1	equ	0xFE7
  4532                           fsr1h	equ	0xFE2
  4533                           fsr1l	equ	0xFE1
  4534                           indf2	equ	0xFDF
  4535                           fsr2h	equ	0xFDA
  4536                           fsr2l	equ	0xFD9
  4537                           status	equ	0xFD8
  4538                           
  4539 ;; *************** function _LCDTRXCount *****************
  4540 ;; Defined at:
  4541 ;;		line 293 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  txCount         1    wreg     unsigned char 
  4544 ;;  rxCount         1   39[BANK0 ] unsigned char 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  txCount         1   36[COMRAM] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;		None               void
  4549 ;; Registers used:
  4550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : F/0
  4553 ;;		On exit  : F/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4556 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4559 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4560 ;;Total ram usage:        2 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    6
  4563 ;; This function calls:
  4564 ;;		_LCD_Erase
  4565 ;;		_LCD_Update
  4566 ;;		_sprintf
  4567 ;; This function is called by:
  4568 ;;		_DemoOutput_UpdateTxRx
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text14
  4573  003072                     __ptext14:
  4574                           	opt stack 0
  4575  003072                     _LCDTRXCount:
  4576                           	opt stack 21
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;incstack = 0
  4580                           ;LCDTRXCount@txCount stored from wreg
  4581  003072  6E25               	movwf	LCDTRXCount@txCount,c
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;lcd.c: 296: LCD_Erase();
  4585  003074  EC80  F01A         	call	_LCD_Erase	;wreg free
  4586                           
  4587                           ;lcd.c: 297: sprintf((char *)LCDText, (char*)"TX Messages: %3d", txCount);
  4588  003078  0E8A               	movlw	low _LCDText
  4589  00307A  0100               	movlb	0	; () banked
  4590  00307C  6F64               	movwf	sprintf@sp& (0+255),b
  4591  00307E  0E02               	movlw	high _LCDText
  4592  003080  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  4593  003082  0EB3               	movlw	low STR_1
  4594  003084  6F66               	movwf	sprintf@f& (0+255),b
  4595  003086  0EFF               	movlw	high STR_1
  4596  003088  6F67               	movwf	(sprintf@f+1)& (0+255),b
  4597  00308A  C025  F068         	movff	LCDTRXCount@txCount,?_sprintf+4
  4598  00308E  6B69               	clrf	(?_sprintf+5)& (0+255),b
  4599  003090  ECC6  F000         	call	_sprintf	;wreg free
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;lcd.c: 298: sprintf((char *)&(LCDText[16]), (char*)"RX Messages: %3d", rxCount);
  4603  003094  0E9A               	movlw	low (_LCDText+16)
  4604  003096  6F64               	movwf	sprintf@sp& (0+255),b
  4605  003098  0E02               	movlw	high (_LCDText+16)
  4606  00309A  6F65               	movwf	(sprintf@sp+1)& (0+255),b
  4607  00309C  0EA2               	movlw	low STR_2
  4608  00309E  6F66               	movwf	sprintf@f& (0+255),b
  4609  0030A0  0EFF               	movlw	high STR_2
  4610  0030A2  6F67               	movwf	(sprintf@f+1)& (0+255),b
  4611  0030A4  C087  F068         	movff	LCDTRXCount@rxCount,?_sprintf+4
  4612  0030A8  6B69               	clrf	(?_sprintf+5)& (0+255),b
  4613  0030AA  ECC6  F000         	call	_sprintf	;wreg free
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;lcd.c: 299: LCD_Update();
  4617  0030AE  EC9B  F01A         	call	_LCD_Update	;wreg free
  4618                           
  4619                           ; BSR set to: 0
  4620  0030B2  0012               	return		;funcret
  4621  0030B4                     __end_of_LCDTRXCount:
  4622                           	opt stack 0
  4623                           tblptru	equ	0xFF8
  4624                           tblptrh	equ	0xFF7
  4625                           tblptrl	equ	0xFF6
  4626                           tablat	equ	0xFF5
  4627                           prodh	equ	0xFF4
  4628                           prodl	equ	0xFF3
  4629                           intcon	equ	0xFF2
  4630                           intcon2	equ	0xFF1
  4631                           intcon3	equ	0xFF0
  4632                           postinc0	equ	0xFEE
  4633                           wreg	equ	0xFE8
  4634                           indf1	equ	0xFE7
  4635                           fsr1h	equ	0xFE2
  4636                           fsr1l	equ	0xFE1
  4637                           indf2	equ	0xFDF
  4638                           fsr2h	equ	0xFDA
  4639                           fsr2l	equ	0xFD9
  4640                           status	equ	0xFD8
  4641                           
  4642 ;; *************** function _ButtonPressed *****************
  4643 ;; Defined at:
  4644 ;;		line 260 in file "../src/demo_ouput.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;  t               4    9[BANK0 ] struct _MIWI_TICK
  4649 ;;  tickDifferen    4    5[BANK0 ] struct _MIWI_TICK
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      unsigned char 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : F/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4660 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4662 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4663 ;;Total ram usage:        8 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    5
  4666 ;; This function calls:
  4667 ;;		_MiWi_TickGet
  4668 ;; This function is called by:
  4669 ;;		_freezer_feature
  4670 ;;		_run_star_demo
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text15
  4675  0027AE                     __ptext15:
  4676                           	opt stack 0
  4677  0027AE                     _ButtonPressed:
  4678                           	opt stack 24
  4679                           
  4680                           ;demo_ouput.c: 262: MIWI_TICK tickDifference;
  4681                           ;demo_ouput.c: 264: if(PORTBbits.RB0 == 0)
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;incstack = 0
  4685  0027AE  B081               	btfsc	3969,0,c	;volatile
  4686  0027B0  D010               	goto	l1034
  4687                           
  4688                           ;demo_ouput.c: 265: {
  4689                           ;demo_ouput.c: 267: if(PUSH_BUTTON_pressed == 0)
  4690  0027B2  0100               	movlb	0	; () banked
  4691  0027B4  51E4               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  4692  0027B6  E144               	bnz	l12147
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;demo_ouput.c: 268: {
  4696                           ;demo_ouput.c: 269: PUSH_BUTTON_pressed = 1;
  4697  0027B8  0E01               	movlw	1
  4698  0027BA  6FE4               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;demo_ouput.c: 270: PUSH_BUTTON_press_time = MiWi_TickGet();
  4702  0027BC  EC54  F017         	call	_MiWi_TickGet	;wreg free
  4703  0027C0  C01D  F100         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4704  0027C4  C01E  F101         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4705  0027C8  C01F  F102         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4706  0027CC  C020  F103         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;demo_ouput.c: 271: return 1;
  4710  0027D0  0C01               	retlw	1
  4711  0027D2                     l1034:
  4712                           
  4713                           ;demo_ouput.c: 274: else if(PORTBbits.RB2 == 0)
  4714  0027D2  B481               	btfsc	3969,2,c	;volatile
  4715  0027D4  D010               	goto	l12139
  4716                           
  4717                           ;demo_ouput.c: 275: {
  4718                           ;demo_ouput.c: 277: if(PUSH_BUTTON_pressed == 0)
  4719  0027D6  0100               	movlb	0	; () banked
  4720  0027D8  51E4               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  4721  0027DA  E132               	bnz	l12147
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;demo_ouput.c: 278: {
  4725                           ;demo_ouput.c: 279: PUSH_BUTTON_pressed = 1;
  4726  0027DC  0E01               	movlw	1
  4727  0027DE  6FE4               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;demo_ouput.c: 280: PUSH_BUTTON_press_time = MiWi_TickGet();
  4731  0027E0  EC54  F017         	call	_MiWi_TickGet	;wreg free
  4732  0027E4  C01D  F100         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  4733  0027E8  C01E  F101         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  4734  0027EC  C01F  F102         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  4735  0027F0  C020  F103         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  4736                           
  4737                           ; BSR set to: 0
  4738                           ;demo_ouput.c: 281: return 2;
  4739  0027F4  0C02               	retlw	2
  4740  0027F6                     l12139:
  4741                           
  4742                           ;demo_ouput.c: 284: else
  4743                           ;demo_ouput.c: 285: {
  4744                           ;demo_ouput.c: 287: MIWI_TICK t = MiWi_TickGet();
  4745  0027F6  EC54  F017         	call	_MiWi_TickGet	;wreg free
  4746  0027FA  C01D  F069         	movff	?_MiWi_TickGet,ButtonPressed@t
  4747  0027FE  C01E  F06A         	movff	?_MiWi_TickGet+1,ButtonPressed@t+1
  4748  002802  C01F  F06B         	movff	?_MiWi_TickGet+2,ButtonPressed@t+2
  4749  002806  C020  F06C         	movff	?_MiWi_TickGet+3,ButtonPressed@t+3
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;demo_ouput.c: 290: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  4753  00280A  0101               	movlb	1	; () banked
  4754  00280C  5100               	movf	_PUSH_BUTTON_press_time& (0+255),w,b
  4755  00280E  0100               	movlb	0	; () banked
  4756  002810  5D69               	subwf	ButtonPressed@t& (0+255),w,b
  4757  002812  6F65               	movwf	ButtonPressed@tickDifference& (0+255),b
  4758  002814  0101               	movlb	1	; () banked
  4759  002816  5101               	movf	(_PUSH_BUTTON_press_time+1)& (0+255),w,b
  4760  002818  0100               	movlb	0	; () banked
  4761  00281A  596A               	subwfb	(ButtonPressed@t+1)& (0+255),w,b
  4762  00281C  6F66               	movwf	(ButtonPressed@tickDifference+1)& (0+255),b
  4763  00281E  0101               	movlb	1	; () banked
  4764  002820  5102               	movf	(_PUSH_BUTTON_press_time+2)& (0+255),w,b
  4765  002822  0100               	movlb	0	; () banked
  4766  002824  596B               	subwfb	(ButtonPressed@t+2)& (0+255),w,b
  4767  002826  6F67               	movwf	(ButtonPressed@tickDifference+2)& (0+255),b
  4768  002828  0101               	movlb	1	; () banked
  4769  00282A  5103               	movf	(_PUSH_BUTTON_press_time+3)& (0+255),w,b
  4770  00282C  0100               	movlb	0	; () banked
  4771  00282E  596C               	subwfb	(ButtonPressed@t+3)& (0+255),w,b
  4772  002830  6F68               	movwf	(ButtonPressed@tickDifference+3)& (0+255),b
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;demo_ouput.c: 293: if(tickDifference.Val > 0x00003FFF)
  4776  002832  5168               	movf	(ButtonPressed@tickDifference+3)& (0+255),w,b
  4777  002834  1167               	iorwf	(ButtonPressed@tickDifference+2)& (0+255),w,b
  4778  002836  E103               	bnz	u12590
  4779  002838  0E40               	movlw	64
  4780  00283A  5D66               	subwf	(ButtonPressed@tickDifference+1)& (0+255),w,b
  4781  00283C  B0D8               	btfsc	status,0,c
  4782  00283E                     u12590:
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;demo_ouput.c: 294: {
  4786                           ;demo_ouput.c: 295: PUSH_BUTTON_pressed = 0;
  4787  00283E  6BE4               	clrf	_PUSH_BUTTON_pressed& (0+255),b
  4788  002840                     l12147:
  4789                           
  4790                           ; BSR set to: 0
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;demo_ouput.c: 296: }
  4794                           ;demo_ouput.c: 297: }
  4795                           ;demo_ouput.c: 299: return 0;
  4796  002840  0C00               	retlw	0	;funcret
  4797  002842                     __end_of_ButtonPressed:
  4798                           	opt stack 0
  4799                           tblptru	equ	0xFF8
  4800                           tblptrh	equ	0xFF7
  4801                           tblptrl	equ	0xFF6
  4802                           tablat	equ	0xFF5
  4803                           prodh	equ	0xFF4
  4804                           prodl	equ	0xFF3
  4805                           intcon	equ	0xFF2
  4806                           intcon2	equ	0xFF1
  4807                           intcon3	equ	0xFF0
  4808                           postinc0	equ	0xFEE
  4809                           wreg	equ	0xFE8
  4810                           indf1	equ	0xFE7
  4811                           fsr1h	equ	0xFE2
  4812                           fsr1l	equ	0xFE1
  4813                           indf2	equ	0xFDF
  4814                           fsr2h	equ	0xFDA
  4815                           fsr2l	equ	0xFD9
  4816                           status	equ	0xFD8
  4817                           
  4818 ;; *************** function _Initialize_Demo *****************
  4819 ;; Defined at:
  4820 ;;		line 97 in file "../src/task.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  freezer_enab    1    wreg     unsigned char 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  freezer_enab    1   17[BANK1 ] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      unsigned char 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : F/1
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4835 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4837 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;Total ram usage:        1 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:   16
  4841 ;; This function calls:
  4842 ;;		_DemoOutput_Channel
  4843 ;;		_DemoOutput_ChannelError
  4844 ;;		_DemoOutput_Instruction
  4845 ;;		_DumpConnection
  4846 ;;		_MiApp_ConnectionMode
  4847 ;;		_MiApp_EstablishConnection
  4848 ;;		_MiApp_ProtocolInit
  4849 ;;		_MiApp_SetChannel
  4850 ;;		_NVMWrite
  4851 ;;		_Read_MAC_Address
  4852 ;; This function is called by:
  4853 ;;		_main
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text16
  4858  002AEC                     __ptext16:
  4859                           	opt stack 0
  4860  002AEC                     _Initialize_Demo:
  4861                           	opt stack 14
  4862                           
  4863                           ; BSR set to: 0
  4864                           ;incstack = 0
  4865                           ;Initialize_Demo@freezer_enable stored from wreg
  4866  002AEC  6F79               	movwf	Initialize_Demo@freezer_enable& (0+255),b
  4867                           
  4868                           ; BSR set to: 1
  4869                           ;task.c: 100: Read_MAC_Address(myLongAddress);
  4870  002AEE  0E60               	movlw	low _myLongAddress
  4871  002AF0  6E23               	movwf	Read_MAC_Address@myAddress,c
  4872  002AF2  0E01               	movlw	high _myLongAddress
  4873  002AF4  6E24               	movwf	Read_MAC_Address@myAddress+1,c
  4874  002AF6  EC34  F015         	call	_Read_MAC_Address	;wreg free
  4875                           
  4876                           ;task.c: 103: if (freezer_enable)
  4877  002AFA  0101               	movlb	1	; () banked
  4878  002AFC  5179               	movf	Initialize_Demo@freezer_enable& (0+255),w,b
  4879  002AFE  E003               	bz	l1133
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;task.c: 104: {
  4883                           ;task.c: 105: MiApp_ProtocolInit(1);
  4884  002B00  0E01               	movlw	1
  4885  002B02  EF81  F00E         	goto	_MiApp_ProtocolInit
  4886  002B06                     l1133:
  4887                           
  4888                           ; BSR set to: 1
  4889                           ;task.c: 107: else
  4890                           ;task.c: 108: {
  4891                           ;task.c: 109: LATAbits.LATA2 = 0;
  4892  002B06  9489               	bcf	3977,2,c	;volatile
  4893                           
  4894                           ;task.c: 110: LATAbits.LATA3 = 0;
  4895  002B08  9689               	bcf	3977,3,c	;volatile
  4896                           
  4897                           ; BSR set to: 1
  4898                           ;task.c: 122: MiApp_ProtocolInit(0);
  4899  002B0A  0E00               	movlw	0
  4900  002B0C  EC81  F00E         	call	_MiApp_ProtocolInit
  4901  002B10  0E19               	movlw	25
  4902  002B12  EC7D  F019         	call	_MiApp_SetChannel
  4903  002B16  0900               	iorlw	0
  4904  002B18  E101               	bnz	l12585
  4905  002B1A  0C19               	retlw	25
  4906  002B1C                     l12585:
  4907                           
  4908                           ;task.c: 133: }
  4909                           ;task.c: 144: MiApp_ConnectionMode(0x00);
  4910  002B1C  0E00               	movlw	0
  4911  002B1E  EC15  F019         	call	_MiApp_ConnectionMode
  4912  002B22  0E00               	movlw	0
  4913  002B24  0100               	movlb	0	; () banked
  4914  002B26  6F8B               	movwf	DemoOutput_Channel@Step& (0+255),b
  4915  002B28  0E19               	movlw	25
  4916  002B2A  ECBA  F018         	call	_DemoOutput_Channel
  4917                           
  4918                           ;task.c: 159: i = MiApp_EstablishConnection(0xFF , 0x00);
  4919  002B2E  0101               	movlb	1	; () banked
  4920  002B30  6B68               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  4921  002B32  EC1F  F010         	call	_MiApp_EstablishConnection
  4922  002B36  6E2D               	movwf	_i,c
  4923                           
  4924                           ;task.c: 164: if( i != 0xFF )
  4925  002B38  282D               	incf	_i,w,c
  4926  002B3A  E007               	bz	l12597
  4927  002B3C  0E01               	movlw	1
  4928  002B3E  0100               	movlb	0	; () banked
  4929  002B40  6F8B               	movwf	DemoOutput_Channel@Step& (0+255),b
  4930  002B42  0E19               	movlw	25
  4931  002B44  ECBA  F018         	call	_DemoOutput_Channel
  4932                           
  4933                           ;task.c: 167: role = 0;
  4934  002B48  6A43               	clrf	_role,c
  4935  002B4A                     l12597:
  4936                           
  4937                           ;task.c: 168: }
  4938                           ;task.c: 170: NVMWrite((uint8_t *)&role, nvmRole, 1);
  4939  002B4A  0E43               	movlw	low _role
  4940  002B4C  6E1E               	movwf	NVMWrite@source,c
  4941  002B4E  6A1F               	clrf	NVMWrite@source+1,c
  4942  002B50  C0F7  F020         	movff	_nvmRole,NVMWrite@addr
  4943  002B54  C0F8  F021         	movff	_nvmRole+1,NVMWrite@addr+1
  4944  002B58  6A23               	clrf	NVMWrite@count+1,c
  4945  002B5A  0E01               	movlw	1
  4946  002B5C  6E22               	movwf	NVMWrite@count,c
  4947  002B5E  EC3F  F013         	call	_NVMWrite	;wreg free
  4948                           
  4949                           ;task.c: 182: DumpConnection(0xFF);
  4950  002B62  0EFF               	movlw	255
  4951  002B64  EC36  F016         	call	_DumpConnection
  4952                           
  4953                           ;task.c: 187: LATAbits.LATA2 = 1;
  4954  002B68  8489               	bsf	3977,2,c	;volatile
  4955                           
  4956                           ;task.c: 188: DemoOutput_Instruction();
  4957  002B6A  EFBD  F01A         	goto	_DemoOutput_Instruction	;wreg free
  4958  002B6E                     __end_of_Initialize_Demo:
  4959                           	opt stack 0
  4960                           tblptru	equ	0xFF8
  4961                           tblptrh	equ	0xFF7
  4962                           tblptrl	equ	0xFF6
  4963                           tablat	equ	0xFF5
  4964                           prodh	equ	0xFF4
  4965                           prodl	equ	0xFF3
  4966                           intcon	equ	0xFF2
  4967                           intcon2	equ	0xFF1
  4968                           intcon3	equ	0xFF0
  4969                           postinc0	equ	0xFEE
  4970                           wreg	equ	0xFE8
  4971                           indf1	equ	0xFE7
  4972                           fsr1h	equ	0xFE2
  4973                           fsr1l	equ	0xFE1
  4974                           indf2	equ	0xFDF
  4975                           fsr2h	equ	0xFDA
  4976                           fsr2l	equ	0xFD9
  4977                           status	equ	0xFD8
  4978                           
  4979 ;; *************** function _Read_MAC_Address *****************
  4980 ;; Defined at:
  4981 ;;		line 78 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/eeprom.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  myAddress       2   34[COMRAM] PTR unsigned char 
  4984 ;;		 -> myLongAddress(8), 
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;  i               1   36[COMRAM] unsigned char 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;		None               void
  4989 ;; Registers used:
  4990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4991 ;; Tracked objects:
  4992 ;;		On entry : F/1
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4998 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4999 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5000 ;;Total ram usage:        5 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    6
  5003 ;; This function calls:
  5004 ;;		_EEPROM_Read
  5005 ;; This function is called by:
  5006 ;;		_Initialize_Demo
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text17
  5011  002A68                     __ptext17:
  5012                           	opt stack 0
  5013  002A68                     _Read_MAC_Address:
  5014                           	opt stack 23
  5015                           
  5016                           ; BSR set to: 1
  5017                           ;eeprom.c: 83: {
  5018                           ;eeprom.c: 84: for(i = 0; i < 3; i++)
  5019                           
  5020                           ;incstack = 0
  5021  002A68  6A25               	clrf	Read_MAC_Address@i,c
  5022  002A6A                     l12229:
  5023                           
  5024                           ;eeprom.c: 85: {
  5025                           ;eeprom.c: 86: EEPROM_Read(&(myAddress[8-1-i]), 0xFA+i, 1);
  5026  002A6A  5025               	movf	Read_MAC_Address@i,w,c
  5027  002A6C  5C23               	subwf	Read_MAC_Address@myAddress,w,c
  5028  002A6E  0100               	movlb	0	; () banked
  5029  002A70  6F60               	movwf	??_Read_MAC_Address& (0+255),b
  5030  002A72  0E00               	movlw	0
  5031  002A74  5824               	subwfb	Read_MAC_Address@myAddress+1,w,c
  5032  002A76  6F61               	movwf	(??_Read_MAC_Address+1)& (0+255),b
  5033  002A78  0E07               	movlw	7
  5034  002A7A  2560               	addwf	??_Read_MAC_Address& (0+255),w,b
  5035  002A7C  6E1E               	movwf	EEPROM_Read@dest,c
  5036  002A7E  0E00               	movlw	0
  5037  002A80  2161               	addwfc	(??_Read_MAC_Address+1)& (0+255),w,b
  5038  002A82  6E1F               	movwf	EEPROM_Read@dest+1,c
  5039  002A84  5025               	movf	Read_MAC_Address@i,w,c
  5040  002A86  0FFA               	addlw	250
  5041  002A88  6E20               	movwf	EEPROM_Read@addr,c
  5042  002A8A  0E01               	movlw	1
  5043  002A8C  6E21               	movwf	EEPROM_Read@count,c
  5044  002A8E  EC5A  F018         	call	_EEPROM_Read	;wreg free
  5045  002A92  2A25               	incf	Read_MAC_Address@i,f,c
  5046  002A94  0E02               	movlw	2
  5047  002A96  6425               	cpfsgt	Read_MAC_Address@i,c
  5048  002A98  D7E8               	goto	l12229
  5049                           
  5050                           ;eeprom.c: 90: {
  5051                           ;eeprom.c: 91: myAddress[4] = 0xFF;
  5052  002A9A  EE20 F004          	lfsr	2,4
  5053  002A9E  5023               	movf	Read_MAC_Address@myAddress,w,c
  5054  002AA0  26D9               	addwf	fsr2l,f,c
  5055  002AA2  5024               	movf	Read_MAC_Address@myAddress+1,w,c
  5056  002AA4  22DA               	addwfc	fsr2h,f,c
  5057  002AA6  68DF               	setf	indf2,c
  5058                           
  5059                           ;eeprom.c: 93: }
  5060                           ;eeprom.c: 94: myAddress[3] = 0xFE;
  5061  002AA8  EE20 F003          	lfsr	2,3
  5062  002AAC  5023               	movf	Read_MAC_Address@myAddress,w,c
  5063  002AAE  26D9               	addwf	fsr2l,f,c
  5064  002AB0  5024               	movf	Read_MAC_Address@myAddress+1,w,c
  5065  002AB2  22DA               	addwfc	fsr2h,f,c
  5066  002AB4  0EFE               	movlw	254
  5067  002AB6  6EDF               	movwf	indf2,c
  5068                           
  5069                           ;eeprom.c: 96: for(i = 0; i < 3; i++)
  5070  002AB8  6A25               	clrf	Read_MAC_Address@i,c
  5071  002ABA                     l12243:
  5072                           
  5073                           ;eeprom.c: 97: {
  5074                           ;eeprom.c: 98: EEPROM_Read(&(myAddress[2-i]), 0xFA+3+i, 1);
  5075  002ABA  5025               	movf	Read_MAC_Address@i,w,c
  5076  002ABC  5C23               	subwf	Read_MAC_Address@myAddress,w,c
  5077  002ABE  0100               	movlb	0	; () banked
  5078  002AC0  6F60               	movwf	??_Read_MAC_Address& (0+255),b
  5079  002AC2  0E00               	movlw	0
  5080  002AC4  5824               	subwfb	Read_MAC_Address@myAddress+1,w,c
  5081  002AC6  6F61               	movwf	(??_Read_MAC_Address+1)& (0+255),b
  5082  002AC8  0E02               	movlw	2
  5083  002ACA  2560               	addwf	??_Read_MAC_Address& (0+255),w,b
  5084  002ACC  6E1E               	movwf	EEPROM_Read@dest,c
  5085  002ACE  0E00               	movlw	0
  5086  002AD0  2161               	addwfc	(??_Read_MAC_Address+1)& (0+255),w,b
  5087  002AD2  6E1F               	movwf	EEPROM_Read@dest+1,c
  5088  002AD4  5025               	movf	Read_MAC_Address@i,w,c
  5089  002AD6  0FFD               	addlw	253
  5090  002AD8  6E20               	movwf	EEPROM_Read@addr,c
  5091  002ADA  0E01               	movlw	1
  5092  002ADC  6E21               	movwf	EEPROM_Read@count,c
  5093  002ADE  EC5A  F018         	call	_EEPROM_Read	;wreg free
  5094  002AE2  2A25               	incf	Read_MAC_Address@i,f,c
  5095  002AE4  0E02               	movlw	2
  5096  002AE6  6425               	cpfsgt	Read_MAC_Address@i,c
  5097  002AE8  D7E8               	goto	l12243
  5098  002AEA  0C02               	retlw	2
  5099  002AEC                     __end_of_Read_MAC_Address:
  5100                           	opt stack 0
  5101                           tblptru	equ	0xFF8
  5102                           tblptrh	equ	0xFF7
  5103                           tblptrl	equ	0xFF6
  5104                           tablat	equ	0xFF5
  5105                           prodh	equ	0xFF4
  5106                           prodl	equ	0xFF3
  5107                           intcon	equ	0xFF2
  5108                           intcon2	equ	0xFF1
  5109                           intcon3	equ	0xFF0
  5110                           postinc0	equ	0xFEE
  5111                           wreg	equ	0xFE8
  5112                           indf1	equ	0xFE7
  5113                           fsr1h	equ	0xFE2
  5114                           fsr1l	equ	0xFE1
  5115                           indf2	equ	0xFDF
  5116                           fsr2h	equ	0xFDA
  5117                           fsr2l	equ	0xFD9
  5118                           status	equ	0xFD8
  5119                           
  5120 ;; *************** function _EEPROM_Read *****************
  5121 ;; Defined at:
  5122 ;;		line 43 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/eeprom.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;  dest            2   29[COMRAM] PTR unsigned char 
  5125 ;;		 -> myLongAddress(8), 
  5126 ;;  addr            1   31[COMRAM] unsigned char 
  5127 ;;  count           1   32[COMRAM] unsigned char 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  oldGIEH         1   33[COMRAM] unsigned char 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;		None               void
  5132 ;; Registers used:
  5133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : F/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5139 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5142 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5143 ;;Total ram usage:        5 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    5
  5146 ;; This function calls:
  5147 ;;		_SPI1_Exchange8bit
  5148 ;; This function is called by:
  5149 ;;		_Read_MAC_Address
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text18
  5154  0030B4                     __ptext18:
  5155                           	opt stack 0
  5156  0030B4                     _EEPROM_Read:
  5157                           	opt stack 23
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;eeprom.c: 46: uint8_t oldGIEH = INTCONbits.GIEH;
  5161                           
  5162                           ;incstack = 0
  5163  0030B4  0E00               	movlw	0
  5164  0030B6  BEF2               	btfsc	intcon,7,c	;volatile
  5165  0030B8  0E01               	movlw	1
  5166  0030BA  6E22               	movwf	EEPROM_Read@oldGIEH,c
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;eeprom.c: 48: INTCONbits.GIEH = 0;
  5170  0030BC  9EF2               	bcf	intcon,7,c	;volatile
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;eeprom.c: 51: LATCbits.LATC2 = 0;
  5174  0030BE  948B               	bcf	3979,2,c	;volatile
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;eeprom.c: 52: SPI1_Exchange8bit(0x03);
  5178  0030C0  0E03               	movlw	3
  5179  0030C2  ECD1  F01A         	call	_SPI1_Exchange8bit
  5180                           
  5181                           ;eeprom.c: 53: SPI1_Exchange8bit(addr);
  5182  0030C6  5020               	movf	EEPROM_Read@addr,w,c
  5183  0030C8  ECD1  F01A         	call	_SPI1_Exchange8bit
  5184                           
  5185                           ;eeprom.c: 54: while( count )
  5186  0030CC  D00B               	goto	l12107
  5187  0030CE                     l12101:
  5188                           
  5189                           ;eeprom.c: 55: {
  5190                           ;eeprom.c: 56: *dest++ = SPI1_Exchange8bit(0x00);
  5191  0030CE  0E00               	movlw	0
  5192  0030D0  ECD1  F01A         	call	_SPI1_Exchange8bit
  5193  0030D4  C01E  FFD9         	movff	EEPROM_Read@dest,fsr2l
  5194  0030D8  C01F  FFDA         	movff	EEPROM_Read@dest+1,fsr2h
  5195  0030DC  6EDF               	movwf	indf2,c
  5196  0030DE  4A1E               	infsnz	EEPROM_Read@dest,f,c
  5197  0030E0  2A1F               	incf	EEPROM_Read@dest+1,f,c
  5198                           
  5199                           ;eeprom.c: 57: count--;
  5200  0030E2  0621               	decf	EEPROM_Read@count,f,c
  5201  0030E4                     l12107:
  5202  0030E4  5021               	movf	EEPROM_Read@count,w,c
  5203  0030E6  E1F3               	bnz	l12101
  5204                           
  5205                           ;eeprom.c: 58: }
  5206                           ;eeprom.c: 59: LATCbits.LATC2 = 1;
  5207  0030E8  848B               	bsf	3979,2,c	;volatile
  5208                           
  5209                           ;eeprom.c: 62: INTCONbits.GIEH = oldGIEH;
  5210  0030EA  B022               	btfsc	EEPROM_Read@oldGIEH,0,c
  5211  0030EC  D002               	bra	u12535
  5212  0030EE  9EF2               	bcf	intcon,7,c	;volatile
  5213  0030F0  D001               	bra	u12536
  5214  0030F2                     u12535:
  5215  0030F2  8EF2               	bsf	intcon,7,c	;volatile
  5216  0030F4                     u12536:
  5217  0030F4  0012               	return		;funcret
  5218  0030F6                     __end_of_EEPROM_Read:
  5219                           	opt stack 0
  5220                           tblptru	equ	0xFF8
  5221                           tblptrh	equ	0xFF7
  5222                           tblptrl	equ	0xFF6
  5223                           tablat	equ	0xFF5
  5224                           prodh	equ	0xFF4
  5225                           prodl	equ	0xFF3
  5226                           intcon	equ	0xFF2
  5227                           intcon2	equ	0xFF1
  5228                           intcon3	equ	0xFF0
  5229                           postinc0	equ	0xFEE
  5230                           wreg	equ	0xFE8
  5231                           indf1	equ	0xFE7
  5232                           fsr1h	equ	0xFE2
  5233                           fsr1l	equ	0xFE1
  5234                           indf2	equ	0xFDF
  5235                           fsr2h	equ	0xFDA
  5236                           fsr2l	equ	0xFD9
  5237                           status	equ	0xFD8
  5238                           
  5239 ;; *************** function _MiApp_ProtocolInit *****************
  5240 ;; Defined at:
  5241 ;;		line 1130 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  bNetworkFree    1    wreg     unsigned char 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  bNetworkFree    1   26[BANK0 ] unsigned char 
  5246 ;;  tmp             2   24[BANK0 ] unsigned int 
  5247 ;;  initValue       3   27[BANK0 ] struct .
  5248 ;;  i               1   30[BANK0 ] unsigned char 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      unsigned char 
  5251 ;; Registers used:
  5252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5253 ;; Tracked objects:
  5254 ;;		On entry : F/1
  5255 ;;		On exit  : F/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5259 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;Total ram usage:        7 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; Hardware stack levels required when called:    9
  5265 ;; This function calls:
  5266 ;;		_MiApp_SetChannel
  5267 ;;		_MiMAC_Init
  5268 ;;		_MiMAC_SetAltAddress
  5269 ;;		_NVMInit
  5270 ;;		_NVMRead
  5271 ;;		_NVMWrite
  5272 ;; This function is called by:
  5273 ;;		_Initialize_Demo
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text19
  5278  001D02                     __ptext19:
  5279                           	opt stack 0
  5280  001D02                     _MiApp_ProtocolInit:
  5281                           	opt stack 20
  5282                           
  5283                           ;incstack = 0
  5284                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  5285  001D02  0100               	movlb	0	; () banked
  5286  001D04  6F7A               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;miwi_p2p.c: 1132: uint8_t i;
  5290                           ;miwi_p2p.c: 1134: MACINIT_PARAM initValue;
  5291                           ;miwi_p2p.c: 1137: NVMInit();
  5292  001D06  EC68  F014         	call	_NVMInit	;wreg free
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;miwi_p2p.c: 1141: P2PStatus.Val = 0;
  5296  001D0A  6BE3               	clrf	_P2PStatus& (0+255),b	;volatile
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;miwi_p2p.c: 1142: if (!bNetworkFreezer)
  5300  001D0C  517A               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5301  001D0E  E129               	bnz	l515
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;miwi_p2p.c: 1143: {
  5305                           ;miwi_p2p.c: 1144: for(i = 0; i < 10; i++)
  5306  001D10  6B7E               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5307  001D12                     l12163:
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;miwi_p2p.c: 1145: {
  5311                           ;miwi_p2p.c: 1146: ConnectionTable[i].status.Val = 0;
  5312  001D12  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5313  001D14  0D0E               	mullw	14
  5314  001D16  0E0C               	movlw	low (_ConnectionTable+12)
  5315  001D18  24F3               	addwf	prodl,w,c
  5316  001D1A  6ED9               	movwf	fsr2l,c
  5317  001D1C  0E03               	movlw	high (_ConnectionTable+12)
  5318  001D1E  20F4               	addwfc	prodh,w,c
  5319  001D20  6EDA               	movwf	fsr2h,c
  5320  001D22  6ADF               	clrf	indf2,c
  5321                           
  5322                           ;miwi_p2p.c: 1147: ConnectionTable[i].Address[0] = 0x00;
  5323  001D24  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5324  001D26  0D0E               	mullw	14
  5325  001D28  0E04               	movlw	low (_ConnectionTable+4)
  5326  001D2A  24F3               	addwf	prodl,w,c
  5327  001D2C  6ED9               	movwf	fsr2l,c
  5328  001D2E  0E03               	movlw	high (_ConnectionTable+4)
  5329  001D30  20F4               	addwfc	prodh,w,c
  5330  001D32  6EDA               	movwf	fsr2h,c
  5331  001D34  6ADF               	clrf	indf2,c
  5332                           
  5333                           ;miwi_p2p.c: 1148: ConnectionTable[i].Address[1] = 0x00;
  5334  001D36  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5335  001D38  0D0E               	mullw	14
  5336  001D3A  0E05               	movlw	low (_ConnectionTable+5)
  5337  001D3C  24F3               	addwf	prodl,w,c
  5338  001D3E  6ED9               	movwf	fsr2l,c
  5339  001D40  0E03               	movlw	high (_ConnectionTable+5)
  5340  001D42  20F4               	addwfc	prodh,w,c
  5341  001D44  6EDA               	movwf	fsr2h,c
  5342  001D46  6ADF               	clrf	indf2,c
  5343                           
  5344                           ;miwi_p2p.c: 1149: ConnectionTable[i].Address[2] = 0x00;
  5345  001D48  517E               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5346  001D4A  0D0E               	mullw	14
  5347  001D4C  0E06               	movlw	low (_ConnectionTable+6)
  5348  001D4E  24F3               	addwf	prodl,w,c
  5349  001D50  6ED9               	movwf	fsr2l,c
  5350  001D52  0E03               	movlw	high (_ConnectionTable+6)
  5351  001D54  20F4               	addwfc	prodh,w,c
  5352  001D56  6EDA               	movwf	fsr2h,c
  5353  001D58  6ADF               	clrf	indf2,c
  5354                           
  5355                           ; BSR set to: 0
  5356  001D5A  2B7E               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5357                           
  5358                           ; BSR set to: 0
  5359  001D5C  0E09               	movlw	9
  5360  001D5E  657E               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5361  001D60  D7D8               	goto	l12163
  5362  001D62                     l515:
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;miwi_p2p.c: 1154: }
  5366                           ;miwi_p2p.c: 1155: }
  5367                           ;miwi_p2p.c: 1157: TxData = 0;
  5368  001D62  6BE6               	clrf	_TxData& (0+255),b
  5369                           
  5370                           ;miwi_p2p.c: 1166: for (i=0;i<10;i++)
  5371  001D64  6B7E               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5372  001D66                     l12173:
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;miwi_p2p.c: 1167: {
  5376  001D66  2B7E               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5377                           
  5378                           ; BSR set to: 0
  5379  001D68  0E09               	movlw	9
  5380  001D6A  657E               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5381  001D6C  D7FC               	goto	l12173
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;miwi_p2p.c: 1170: }
  5385                           ;miwi_p2p.c: 1180: if( bNetworkFreezer )
  5386  001D6E  517A               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5387  001D70  E05B               	bz	l12187
  5388                           
  5389                           ; BSR set to: 0
  5390                           ;miwi_p2p.c: 1181: {
  5391                           ;miwi_p2p.c: 1182: NVMRead( (uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  5392  001D72  0EFB               	movlw	low _currentChannel
  5393  001D74  6E1E               	movwf	NVMRead@dest,c
  5394  001D76  6A1F               	clrf	NVMRead@dest+1,c
  5395  001D78  C0EF  F020         	movff	_nvmCurrentChannel,NVMRead@addr
  5396  001D7C  C0F0  F021         	movff	_nvmCurrentChannel+1,NVMRead@addr+1
  5397  001D80  6A23               	clrf	NVMRead@count+1,c
  5398  001D82  0E01               	movlw	1
  5399  001D84  6E22               	movwf	NVMRead@count,c
  5400  001D86  ECA4  F017         	call	_NVMRead	;wreg free
  5401                           
  5402                           ;miwi_p2p.c: 1183: if( currentChannel >= 32 )
  5403  001D8A  0E1F               	movlw	31
  5404  001D8C  0100               	movlb	0	; () banked
  5405  001D8E  65FB               	cpfsgt	_currentChannel& (0+255),b
  5406  001D90  D001               	goto	l12185
  5407  001D92  0C1F               	retlw	31
  5408  001D94                     l12185:
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;miwi_p2p.c: 1186: }
  5412                           ;miwi_p2p.c: 1189: NVMRead( (uint8_t *)myPANID.v, nvmMyPANID, 2);
  5413  001D94  0EEB               	movlw	low _myPANID
  5414  001D96  6E1E               	movwf	NVMRead@dest,c
  5415  001D98  6A1F               	clrf	NVMRead@dest+1,c
  5416  001D9A  C0F3  F020         	movff	_nvmMyPANID,NVMRead@addr
  5417  001D9E  C0F4  F021         	movff	_nvmMyPANID+1,NVMRead@addr+1
  5418  001DA2  6A23               	clrf	NVMRead@count+1,c
  5419  001DA4  0E02               	movlw	2
  5420  001DA6  6E22               	movwf	NVMRead@count,c
  5421  001DA8  ECA4  F017         	call	_NVMRead	;wreg free
  5422                           
  5423                           ;miwi_p2p.c: 1191: NVMRead( (uint8_t *)&ConnMode, nvmConnMode, 1);
  5424  001DAC  0EFF               	movlw	low _ConnMode
  5425  001DAE  6E1E               	movwf	NVMRead@dest,c
  5426  001DB0  6A1F               	clrf	NVMRead@dest+1,c
  5427  001DB2  C0ED  F020         	movff	_nvmConnMode,NVMRead@addr
  5428  001DB6  C0EE  F021         	movff	_nvmConnMode+1,NVMRead@addr+1
  5429  001DBA  6A23               	clrf	NVMRead@count+1,c
  5430  001DBC  0E01               	movlw	1
  5431  001DBE  6E22               	movwf	NVMRead@count,c
  5432  001DC0  ECA4  F017         	call	_NVMRead	;wreg free
  5433                           
  5434                           ;miwi_p2p.c: 1192: NVMRead( (uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)10
      +                           * sizeof(CONNECTION_ENTRY));
  5435  001DC4  0E00               	movlw	low _ConnectionTable
  5436  001DC6  6E1E               	movwf	NVMRead@dest,c
  5437  001DC8  0E03               	movlw	high _ConnectionTable
  5438  001DCA  6E1F               	movwf	NVMRead@dest+1,c
  5439  001DCC  C03F  F020         	movff	_nvmConnectionTable,NVMRead@addr
  5440  001DD0  C040  F021         	movff	_nvmConnectionTable+1,NVMRead@addr+1
  5441  001DD4  6A23               	clrf	NVMRead@count+1,c
  5442  001DD6  0E8C               	movlw	140
  5443  001DD8  6E22               	movwf	NVMRead@count,c
  5444  001DDA  ECA4  F017         	call	_NVMRead	;wreg free
  5445                           
  5446                           ;miwi_p2p.c: 1195: NVMRead( (uint8_t *)&role, nvmRole, 1);
  5447  001DDE  0E43               	movlw	low _role
  5448  001DE0  6E1E               	movwf	NVMRead@dest,c
  5449  001DE2  6A1F               	clrf	NVMRead@dest+1,c
  5450  001DE4  C0F7  F020         	movff	_nvmRole,NVMRead@addr
  5451  001DE8  C0F8  F021         	movff	_nvmRole+1,NVMRead@addr+1
  5452  001DEC  6A23               	clrf	NVMRead@count+1,c
  5453  001DEE  0E01               	movlw	1
  5454  001DF0  6E22               	movwf	NVMRead@count,c
  5455  001DF2  ECA4  F017         	call	_NVMRead	;wreg free
  5456                           
  5457                           ;miwi_p2p.c: 1196: NVMRead( (uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
  5458  001DF6  0EFC               	movlw	low _myConnectionIndex_in_PanCo
  5459  001DF8  6E1E               	movwf	NVMRead@dest,c
  5460  001DFA  6A1F               	clrf	NVMRead@dest+1,c
  5461  001DFC  C0F9  F020         	movff	_nvmmyIndex,NVMRead@addr
  5462  001E00  C0FA  F021         	movff	_nvmmyIndex+1,NVMRead@addr+1
  5463  001E04  6A23               	clrf	NVMRead@count+1,c
  5464  001E06  0E01               	movlw	1
  5465  001E08  6E22               	movwf	NVMRead@count,c
  5466  001E0A  ECA4  F017         	call	_NVMRead	;wreg free
  5467                           
  5468                           ;miwi_p2p.c: 1198: NVMRead( (uint8_t *)&conn_size, nvmEdc, 1);
  5469  001E0E  0E41               	movlw	low _conn_size
  5470  001E10  6E1E               	movwf	NVMRead@dest,c
  5471  001E12  6A1F               	clrf	NVMRead@dest+1,c
  5472  001E14  C0F1  F020         	movff	_nvmEdc,NVMRead@addr
  5473  001E18  C0F2  F021         	movff	_nvmEdc+1,NVMRead@addr+1
  5474  001E1C  6A23               	clrf	NVMRead@count+1,c
  5475  001E1E  0E01               	movlw	1
  5476  001E20  6E22               	movwf	NVMRead@count,c
  5477  001E22  ECA4  F017         	call	_NVMRead	;wreg free
  5478                           
  5479                           ;miwi_p2p.c: 1202: ;
  5480                           ;miwi_p2p.c: 1203: ;
  5481                           ;miwi_p2p.c: 1204: ;
  5482                           ;miwi_p2p.c: 1205: ;
  5483                           ;miwi_p2p.c: 1206: ;
  5484                           ;miwi_p2p.c: 1210: }
  5485  001E26  D035               	goto	l12197
  5486  001E28                     l12187:
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;miwi_p2p.c: 1211: else
  5490                           ;miwi_p2p.c: 1212: {
  5491                           ;miwi_p2p.c: 1214: myPANID.Val = 0x1234;
  5492  001E28  0E12               	movlw	18
  5493  001E2A  6FEC               	movwf	(_myPANID+1)& (0+255),b
  5494  001E2C  0E34               	movlw	52
  5495  001E2E  6FEB               	movwf	_myPANID& (0+255),b
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;miwi_p2p.c: 1215: NVMWrite((uint8_t *)myPANID.v, nvmMyPANID, 2);
  5499  001E30  0EEB               	movlw	low _myPANID
  5500  001E32  6E1E               	movwf	NVMWrite@source,c
  5501  001E34  6A1F               	clrf	NVMWrite@source+1,c
  5502  001E36  C0F3  F020         	movff	_nvmMyPANID,NVMWrite@addr
  5503  001E3A  C0F4  F021         	movff	_nvmMyPANID+1,NVMWrite@addr+1
  5504  001E3E  6A23               	clrf	NVMWrite@count+1,c
  5505  001E40  0E02               	movlw	2
  5506  001E42  6E22               	movwf	NVMWrite@count,c
  5507  001E44  EC3F  F013         	call	_NVMWrite	;wreg free
  5508                           
  5509                           ;miwi_p2p.c: 1217: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  5510  001E48  0EFB               	movlw	low _currentChannel
  5511  001E4A  6E1E               	movwf	NVMWrite@source,c
  5512  001E4C  6A1F               	clrf	NVMWrite@source+1,c
  5513  001E4E  C0EF  F020         	movff	_nvmCurrentChannel,NVMWrite@addr
  5514  001E52  C0F0  F021         	movff	_nvmCurrentChannel+1,NVMWrite@addr+1
  5515  001E56  6A23               	clrf	NVMWrite@count+1,c
  5516  001E58  0E01               	movlw	1
  5517  001E5A  6E22               	movwf	NVMWrite@count,c
  5518  001E5C  EC3F  F013         	call	_NVMWrite	;wreg free
  5519                           
  5520                           ;miwi_p2p.c: 1218: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
  5521  001E60  0EFF               	movlw	low _ConnMode
  5522  001E62  6E1E               	movwf	NVMWrite@source,c
  5523  001E64  6A1F               	clrf	NVMWrite@source+1,c
  5524  001E66  C0ED  F020         	movff	_nvmConnMode,NVMWrite@addr
  5525  001E6A  C0EE  F021         	movff	_nvmConnMode+1,NVMWrite@addr+1
  5526  001E6E  6A23               	clrf	NVMWrite@count+1,c
  5527  001E70  0E01               	movlw	1
  5528  001E72  6E22               	movwf	NVMWrite@count,c
  5529  001E74  EC3F  F013         	call	_NVMWrite	;wreg free
  5530                           
  5531                           ;miwi_p2p.c: 1219: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)10
      +                           * sizeof(CONNECTION_ENTRY));
  5532  001E78  0E00               	movlw	low _ConnectionTable
  5533  001E7A  6E1E               	movwf	NVMWrite@source,c
  5534  001E7C  0E03               	movlw	high _ConnectionTable
  5535  001E7E  6E1F               	movwf	NVMWrite@source+1,c
  5536  001E80  C03F  F020         	movff	_nvmConnectionTable,NVMWrite@addr
  5537  001E84  C040  F021         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  5538  001E88  6A23               	clrf	NVMWrite@count+1,c
  5539  001E8A  0E8C               	movlw	140
  5540  001E8C  6E22               	movwf	NVMWrite@count,c
  5541  001E8E  EC3F  F013         	call	_NVMWrite	;wreg free
  5542  001E92                     l12197:
  5543                           
  5544                           ;miwi_p2p.c: 1221: }
  5545                           ;miwi_p2p.c: 1228: initValue.PAddress = myLongAddress;
  5546  001E92  0E60               	movlw	low _myLongAddress
  5547  001E94  0100               	movlb	0	; () banked
  5548  001E96  6F7C               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
  5549  001E98  0E01               	movlw	high _myLongAddress
  5550  001E9A  6F7D               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;miwi_p2p.c: 1229: initValue.actionFlags.bits.CCAEnable = 1;
  5554  001E9C  837B               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;miwi_p2p.c: 1230: initValue.actionFlags.bits.PAddrLength = 8;
  5558  001E9E  517B               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
  5559  001EA0  0B87               	andlw	-121
  5560  001EA2  0940               	iorlw	64
  5561  001EA4  6F7B               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;miwi_p2p.c: 1231: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
  5565  001EA6  B17A               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
  5566  001EA8  D002               	bra	u12655
  5567  001EAA  957B               	bcf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5568  001EAC  D002               	bra	u12656
  5569  001EAE                     u12655:
  5570  001EAE  0100               	movlb	0	; () banked
  5571  001EB0  857B               	bsf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5572  001EB2                     u12656:
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;miwi_p2p.c: 1232: initValue.actionFlags.bits.RepeaterMode = 0;
  5576  001EB2  917B               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;miwi_p2p.c: 1234: MiMAC_Init(initValue);
  5580  001EB4  C07B  F074         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
  5581  001EB8  C07C  F075         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
  5582  001EBC  C07D  F076         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
  5583  001EC0  ECF8  F018         	call	_MiMAC_Init	;wreg free
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;miwi_p2p.c: 1237: {
  5587                           ;miwi_p2p.c: 1238: uint16_t tmp = 0xFFFF;
  5588  001EC4  6978               	setf	MiApp_ProtocolInit@tmp& (0+255),b
  5589  001EC6  6979               	setf	(MiApp_ProtocolInit@tmp+1)& (0+255),b
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;miwi_p2p.c: 1239: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
  5593  001EC8  0EEB               	movlw	low _myPANID
  5594  001ECA  6E21               	movwf	MiMAC_SetAltAddress@PANID,c
  5595  001ECC  0E78               	movlw	MiApp_ProtocolInit@tmp& (0+255)
  5596  001ECE  ECD6  F016         	call	_MiMAC_SetAltAddress
  5597                           
  5598                           ;miwi_p2p.c: 1240: }
  5599                           ;miwi_p2p.c: 1243: MiApp_SetChannel(currentChannel);
  5600  001ED2  0100               	movlb	0	; () banked
  5601  001ED4  51FB               	movf	_currentChannel& (0+255),w,b
  5602  001ED6  EC7D  F019         	call	_MiApp_SetChannel
  5603                           
  5604                           ;miwi_p2p.c: 1254: P2PCapacityInfo = 0;
  5605  001EDA  0100               	movlb	0	; () banked
  5606  001EDC  6BE2               	clrf	_P2PCapacityInfo& (0+255),b
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;miwi_p2p.c: 1261: P2PCapacityInfo |= (ConnMode << 4);
  5610  001EDE  39FF               	swapf	_ConnMode& (0+255),w,b
  5611  001EE0  0BF0               	andlw	240
  5612  001EE2  13E2               	iorwf	_P2PCapacityInfo& (0+255),f,b
  5613                           
  5614                           ; BSR set to: 0
  5615                           ;miwi_p2p.c: 1263: INTCON3bits.INT1IE = 1;
  5616  001EE4  86F0               	bsf	intcon3,3,c	;volatile
  5617                           
  5618                           ; BSR set to: 0
  5619  001EE6  0012               	return		;funcret
  5620  001EE8                     __end_of_MiApp_ProtocolInit:
  5621                           	opt stack 0
  5622                           tblptru	equ	0xFF8
  5623                           tblptrh	equ	0xFF7
  5624                           tblptrl	equ	0xFF6
  5625                           tablat	equ	0xFF5
  5626                           prodh	equ	0xFF4
  5627                           prodl	equ	0xFF3
  5628                           intcon	equ	0xFF2
  5629                           intcon2	equ	0xFF1
  5630                           intcon3	equ	0xFF0
  5631                           postinc0	equ	0xFEE
  5632                           wreg	equ	0xFE8
  5633                           indf1	equ	0xFE7
  5634                           fsr1h	equ	0xFE2
  5635                           fsr1l	equ	0xFE1
  5636                           indf2	equ	0xFDF
  5637                           fsr2h	equ	0xFDA
  5638                           fsr2l	equ	0xFD9
  5639                           status	equ	0xFD8
  5640                           
  5641 ;; *************** function _NVMRead *****************
  5642 ;; Defined at:
  5643 ;;		line 129 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  dest            2   29[COMRAM] PTR unsigned char 
  5646 ;;		 -> myConnectionIndex_in_PanCo(1), myPANID(2), currentChannel(1), ConnMode(1), 
  5647 ;;		 -> role(1), conn_size(1), ConnectionTable(140), 
  5648 ;;  addr            2   31[COMRAM] unsigned int 
  5649 ;;  count           2   33[COMRAM] unsigned int 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  oldRFIE         1   35[COMRAM] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;		None               void
  5654 ;; Registers used:
  5655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5661 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5664 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5665 ;;Total ram usage:        7 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    5
  5668 ;; This function calls:
  5669 ;;		_SPI1_Exchange8bit
  5670 ;; This function is called by:
  5671 ;;		_MiApp_ProtocolInit
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text20
  5676  002F48                     __ptext20:
  5677                           	opt stack 0
  5678  002F48                     _NVMRead:
  5679                           	opt stack 23
  5680                           
  5681                           ;miwi_nvm.c: 136: uint8_t oldRFIE = INTCON3bits.INT1IE;
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;incstack = 0
  5685  002F48  0E00               	movlw	0
  5686  002F4A  B6F0               	btfsc	intcon3,3,c	;volatile
  5687  002F4C  0E01               	movlw	1
  5688  002F4E  6E24               	movwf	NVMRead@oldRFIE,c
  5689                           
  5690                           ;miwi_nvm.c: 138: INTCON3bits.INT1IE = 0;
  5691  002F50  96F0               	bcf	intcon3,3,c	;volatile
  5692                           
  5693                           ;miwi_nvm.c: 141: LATDbits.LATD5 = 0;
  5694  002F52  9A8C               	bcf	3980,5,c	;volatile
  5695                           
  5696                           ;miwi_nvm.c: 160: SPI1_Exchange8bit(0x03);
  5697  002F54  0E03               	movlw	3
  5698  002F56  ECD1  F01A         	call	_SPI1_Exchange8bit
  5699                           
  5700                           ;miwi_nvm.c: 161: SPI1_Exchange8bit(addr>>8);
  5701  002F5A  5021               	movf	NVMRead@addr+1,w,c
  5702  002F5C  ECD1  F01A         	call	_SPI1_Exchange8bit
  5703                           
  5704                           ;miwi_nvm.c: 162: SPI1_Exchange8bit(addr);
  5705  002F60  5020               	movf	NVMRead@addr,w,c
  5706  002F62  ECD1  F01A         	call	_SPI1_Exchange8bit
  5707                           
  5708                           ;miwi_nvm.c: 165: while( count > 0 )
  5709  002F66  D00D               	goto	l11935
  5710  002F68                     l11929:
  5711                           
  5712                           ;miwi_nvm.c: 166: {
  5713                           ;miwi_nvm.c: 167: *dest++ = SPI1_Exchange8bit(0x00);
  5714  002F68  0E00               	movlw	0
  5715  002F6A  ECD1  F01A         	call	_SPI1_Exchange8bit
  5716  002F6E  C01E  FFD9         	movff	NVMRead@dest,fsr2l
  5717  002F72  C01F  FFDA         	movff	NVMRead@dest+1,fsr2h
  5718  002F76  6EDF               	movwf	indf2,c
  5719  002F78  4A1E               	infsnz	NVMRead@dest,f,c
  5720  002F7A  2A1F               	incf	NVMRead@dest+1,f,c
  5721                           
  5722                           ;miwi_nvm.c: 168: count--;
  5723  002F7C  0622               	decf	NVMRead@count,f,c
  5724  002F7E  A0D8               	btfss	status,0,c
  5725  002F80  0623               	decf	NVMRead@count+1,f,c
  5726  002F82                     l11935:
  5727  002F82  5022               	movf	NVMRead@count,w,c
  5728  002F84  1023               	iorwf	NVMRead@count+1,w,c
  5729  002F86  E1F0               	bnz	l11929
  5730                           
  5731                           ;miwi_nvm.c: 169: }
  5732                           ;miwi_nvm.c: 170: LATDbits.LATD5 = 1;
  5733  002F88  8A8C               	bsf	3980,5,c	;volatile
  5734                           
  5735                           ;miwi_nvm.c: 175: INTCON3bits.INT1IE = oldRFIE;
  5736  002F8A  B024               	btfsc	NVMRead@oldRFIE,0,c
  5737  002F8C  D002               	bra	u12335
  5738  002F8E  96F0               	bcf	intcon3,3,c	;volatile
  5739  002F90  D001               	bra	u12336
  5740  002F92                     u12335:
  5741  002F92  86F0               	bsf	intcon3,3,c	;volatile
  5742  002F94                     u12336:
  5743  002F94  0012               	return		;funcret
  5744  002F96                     __end_of_NVMRead:
  5745                           	opt stack 0
  5746                           tblptru	equ	0xFF8
  5747                           tblptrh	equ	0xFF7
  5748                           tblptrl	equ	0xFF6
  5749                           tablat	equ	0xFF5
  5750                           prodh	equ	0xFF4
  5751                           prodl	equ	0xFF3
  5752                           intcon	equ	0xFF2
  5753                           intcon2	equ	0xFF1
  5754                           intcon3	equ	0xFF0
  5755                           postinc0	equ	0xFEE
  5756                           wreg	equ	0xFE8
  5757                           indf1	equ	0xFE7
  5758                           fsr1h	equ	0xFE2
  5759                           fsr1l	equ	0xFE1
  5760                           indf2	equ	0xFDF
  5761                           fsr2h	equ	0xFDA
  5762                           fsr2l	equ	0xFD9
  5763                           status	equ	0xFD8
  5764                           
  5765 ;; *************** function _NVMInit *****************
  5766 ;; Defined at:
  5767 ;;		line 631 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;		None
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  result          1   33[COMRAM] unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1    wreg      unsigned char 
  5774 ;; Registers used:
  5775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5776 ;; Tracked objects:
  5777 ;;		On entry : F/0
  5778 ;;		On exit  : F/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5785 ;;Total ram usage:        1 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; Hardware stack levels required when called:    5
  5788 ;; This function calls:
  5789 ;;		_NVMalloc
  5790 ;; This function is called by:
  5791 ;;		_MiApp_ProtocolInit
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text21
  5796  0028D0                     __ptext21:
  5797                           	opt stack 0
  5798  0028D0                     _NVMInit:
  5799                           	opt stack 23
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;miwi_nvm.c: 633: bool result = 1;
  5803                           
  5804                           ;incstack = 0
  5805  0028D0  0E01               	movlw	1
  5806  0028D2  6E22               	movwf	NVMInit@result,c
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;miwi_nvm.c: 635: nextEEPosition = 0;
  5810  0028D4  6BDC               	clrf	_nextEEPosition& (0+255),b
  5811  0028D6  6BDD               	clrf	(_nextEEPosition+1)& (0+255),b
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;miwi_nvm.c: 637: result &= NVMalloc(2, &nvmMyPANID);
  5815  0028D8  6A1E               	clrf	NVMalloc@size+1,c
  5816  0028DA  0E02               	movlw	2
  5817  0028DC  6E1D               	movwf	NVMalloc@size,c
  5818  0028DE  0EF3               	movlw	low _nvmMyPANID
  5819  0028E0  6E1F               	movwf	NVMalloc@location,c
  5820  0028E2  EC66  F019         	call	_NVMalloc	;wreg free
  5821  0028E6  1622               	andwf	NVMInit@result,f,c
  5822                           
  5823                           ; BSR set to: 0
  5824                           ;miwi_nvm.c: 638: result &= NVMalloc(1, &nvmCurrentChannel);
  5825  0028E8  6A1E               	clrf	NVMalloc@size+1,c
  5826  0028EA  0E01               	movlw	1
  5827  0028EC  6E1D               	movwf	NVMalloc@size,c
  5828  0028EE  0EEF               	movlw	low _nvmCurrentChannel
  5829  0028F0  6E1F               	movwf	NVMalloc@location,c
  5830  0028F2  EC66  F019         	call	_NVMalloc	;wreg free
  5831  0028F6  1622               	andwf	NVMInit@result,f,c
  5832                           
  5833                           ; BSR set to: 0
  5834                           ;miwi_nvm.c: 639: result &= NVMalloc(1, &nvmConnMode);
  5835  0028F8  6A1E               	clrf	NVMalloc@size+1,c
  5836  0028FA  0E01               	movlw	1
  5837  0028FC  6E1D               	movwf	NVMalloc@size,c
  5838  0028FE  0EED               	movlw	low _nvmConnMode
  5839  002900  6E1F               	movwf	NVMalloc@location,c
  5840  002902  EC66  F019         	call	_NVMalloc	;wreg free
  5841  002906  1622               	andwf	NVMInit@result,f,c
  5842                           
  5843                           ; BSR set to: 0
  5844                           ;miwi_nvm.c: 640: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 10, &nvmConnectionTable)
      +                          ;
  5845  002908  6A1E               	clrf	NVMalloc@size+1,c
  5846  00290A  0E8C               	movlw	140
  5847  00290C  6E1D               	movwf	NVMalloc@size,c
  5848  00290E  0E3F               	movlw	low _nvmConnectionTable
  5849  002910  6E1F               	movwf	NVMalloc@location,c
  5850  002912  EC66  F019         	call	_NVMalloc	;wreg free
  5851  002916  1622               	andwf	NVMInit@result,f,c
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;miwi_nvm.c: 641: result &= NVMalloc(4, &nvmOutFrameCounter);
  5855  002918  6A1E               	clrf	NVMalloc@size+1,c
  5856  00291A  0E04               	movlw	4
  5857  00291C  6E1D               	movwf	NVMalloc@size,c
  5858  00291E  0EF5               	movlw	low _nvmOutFrameCounter
  5859  002920  6E1F               	movwf	NVMalloc@location,c
  5860  002922  EC66  F019         	call	_NVMalloc	;wreg free
  5861  002926  1622               	andwf	NVMInit@result,f,c
  5862                           
  5863                           ; BSR set to: 0
  5864                           ;miwi_nvm.c: 642: result &= NVMalloc(1,&nvmEdc);
  5865  002928  6A1E               	clrf	NVMalloc@size+1,c
  5866  00292A  0E01               	movlw	1
  5867  00292C  6E1D               	movwf	NVMalloc@size,c
  5868  00292E  0EF1               	movlw	low _nvmEdc
  5869  002930  6E1F               	movwf	NVMalloc@location,c
  5870  002932  EC66  F019         	call	_NVMalloc	;wreg free
  5871  002936  1622               	andwf	NVMInit@result,f,c
  5872                           
  5873                           ; BSR set to: 0
  5874                           ;miwi_nvm.c: 645: result &= NVMalloc(1,&nvmRole);
  5875  002938  6A1E               	clrf	NVMalloc@size+1,c
  5876  00293A  0E01               	movlw	1
  5877  00293C  6E1D               	movwf	NVMalloc@size,c
  5878  00293E  0EF7               	movlw	low _nvmRole
  5879  002940  6E1F               	movwf	NVMalloc@location,c
  5880  002942  EC66  F019         	call	_NVMalloc	;wreg free
  5881  002946  1622               	andwf	NVMInit@result,f,c
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;miwi_nvm.c: 646: result &= NVMalloc(1,&nvmmyIndex);
  5885  002948  6A1E               	clrf	NVMalloc@size+1,c
  5886  00294A  0E01               	movlw	1
  5887  00294C  6E1D               	movwf	NVMalloc@size,c
  5888  00294E  0EF9               	movlw	low _nvmmyIndex
  5889  002950  6E1F               	movwf	NVMalloc@location,c
  5890  002952  EC66  F019         	call	_NVMalloc	;wreg free
  5891  002956  1622               	andwf	NVMInit@result,f,c
  5892                           
  5893                           ; BSR set to: 0
  5894  002958  0012               	return		;funcret
  5895  00295A                     __end_of_NVMInit:
  5896                           	opt stack 0
  5897                           tblptru	equ	0xFF8
  5898                           tblptrh	equ	0xFF7
  5899                           tblptrl	equ	0xFF6
  5900                           tablat	equ	0xFF5
  5901                           prodh	equ	0xFF4
  5902                           prodl	equ	0xFF3
  5903                           intcon	equ	0xFF2
  5904                           intcon2	equ	0xFF1
  5905                           intcon3	equ	0xFF0
  5906                           postinc0	equ	0xFEE
  5907                           wreg	equ	0xFE8
  5908                           indf1	equ	0xFE7
  5909                           fsr1h	equ	0xFE2
  5910                           fsr1l	equ	0xFE1
  5911                           indf2	equ	0xFDF
  5912                           fsr2h	equ	0xFDA
  5913                           fsr2l	equ	0xFD9
  5914                           status	equ	0xFD8
  5915                           
  5916 ;; *************** function _NVMalloc *****************
  5917 ;; Defined at:
  5918 ;;		line 616 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  size            2   28[COMRAM] unsigned int 
  5921 ;;  location        1   30[COMRAM] PTR unsigned int 
  5922 ;;		 -> nvmmyIndex(2), nvmRole(2), nvmEdc(2), nvmOutFrameCounter(2), 
  5923 ;;		 -> nvmConnectionTable(2), nvmConnMode(2), nvmCurrentChannel(2), nvmMyPANID(2), 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      unsigned char 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5930 ;; Tracked objects:
  5931 ;;		On entry : F/0
  5932 ;;		On exit  : F/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5935 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5938 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5939 ;;Total ram usage:        5 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    4
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_NVMInit
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text22
  5950  0032CC                     __ptext22:
  5951                           	opt stack 0
  5952  0032CC                     _NVMalloc:
  5953                           	opt stack 23
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;miwi_nvm.c: 620: if ((nextEEPosition + size) > 32768)
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;incstack = 0
  5960  0032CC  501D               	movf	NVMalloc@size,w,c
  5961  0032CE  25DC               	addwf	_nextEEPosition& (0+255),w,b
  5962  0032D0  6E20               	movwf	??_NVMalloc& (0+255),c
  5963  0032D2  501E               	movf	NVMalloc@size+1,w,c
  5964  0032D4  21DD               	addwfc	(_nextEEPosition+1)& (0+255),w,b
  5965  0032D6  6E21               	movwf	(??_NVMalloc+1)& (0+255),c
  5966  0032D8  0420               	decf	??_NVMalloc,w,c
  5967  0032DA  0E80               	movlw	128
  5968  0032DC  5821               	subwfb	??_NVMalloc+1,w,c
  5969  0032DE  E301               	bnc	l9119
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;miwi_nvm.c: 621: {
  5973                           ;miwi_nvm.c: 622: return 0;
  5974  0032E0  0C00               	retlw	0
  5975  0032E2                     l9119:
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;miwi_nvm.c: 623: }
  5979                           ;miwi_nvm.c: 625: *location = nextEEPosition;
  5980  0032E2  501F               	movf	NVMalloc@location,w,c
  5981  0032E4  6ED9               	movwf	fsr2l,c
  5982  0032E6  6ADA               	clrf	fsr2h,c
  5983  0032E8  C0DC  FFDE         	movff	_nextEEPosition,postinc2
  5984  0032EC  C0DD  FFDD         	movff	_nextEEPosition+1,postdec2
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;miwi_nvm.c: 626: nextEEPosition += size;
  5988  0032F0  501D               	movf	NVMalloc@size,w,c
  5989  0032F2  27DC               	addwf	_nextEEPosition& (0+255),f,b
  5990  0032F4  501E               	movf	NVMalloc@size+1,w,c
  5991  0032F6  23DD               	addwfc	(_nextEEPosition+1)& (0+255),f,b
  5992                           
  5993                           ; BSR set to: 0
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;miwi_nvm.c: 627: return 1;
  5997  0032F8  0C01               	retlw	1	;funcret
  5998  0032FA                     __end_of_NVMalloc:
  5999                           	opt stack 0
  6000                           tblptru	equ	0xFF8
  6001                           tblptrh	equ	0xFF7
  6002                           tblptrl	equ	0xFF6
  6003                           tablat	equ	0xFF5
  6004                           prodh	equ	0xFF4
  6005                           prodl	equ	0xFF3
  6006                           intcon	equ	0xFF2
  6007                           intcon2	equ	0xFF1
  6008                           intcon3	equ	0xFF0
  6009                           postinc0	equ	0xFEE
  6010                           wreg	equ	0xFE8
  6011                           indf1	equ	0xFE7
  6012                           fsr1h	equ	0xFE2
  6013                           fsr1l	equ	0xFE1
  6014                           indf2	equ	0xFDF
  6015                           postinc2	equ	0xFDE
  6016                           postdec2	equ	0xFDD
  6017                           fsr2h	equ	0xFDA
  6018                           fsr2l	equ	0xFD9
  6019                           status	equ	0xFD8
  6020                           
  6021 ;; *************** function _MiMAC_Init *****************
  6022 ;; Defined at:
  6023 ;;		line 1465 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  initValue       3   20[BANK0 ] struct .
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;  i               1   23[BANK0 ] unsigned char 
  6028 ;; Return value:  Size  Location     Type
  6029 ;;                  1    wreg      unsigned char 
  6030 ;; Registers used:
  6031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6032 ;; Tracked objects:
  6033 ;;		On entry : F/0
  6034 ;;		On exit  : F/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6037 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6038 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6040 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6041 ;;Total ram usage:        4 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; Hardware stack levels required when called:    8
  6044 ;; This function calls:
  6045 ;;		_InitMRF24J40
  6046 ;; This function is called by:
  6047 ;;		_MiApp_ProtocolInit
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           	psect	text23
  6052  0031F0                     __ptext23:
  6053                           	opt stack 0
  6054  0031F0                     _MiMAC_Init:
  6055                           	opt stack 20
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;drv_mrf_miwi_24j40.c: 1467: uint8_t i;
  6059                           ;drv_mrf_miwi_24j40.c: 1469: MACInitParams = initValue;
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;incstack = 0
  6063  0031F0  C074  F0D7         	movff	MiMAC_Init@initValue,_MACInitParams
  6064  0031F4  C075  F0D8         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
  6065  0031F8  C076  F0D9         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
  6066                           
  6067                           ;drv_mrf_miwi_24j40.c: 1471: IEEESeqNum = TMR0L;
  6068  0031FC  CFD6 F028          	movff	4054,_IEEESeqNum	;volatile
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;drv_mrf_miwi_24j40.c: 1473: MACCurrentChannel = 11;
  6072  003200  0E0B               	movlw	11
  6073  003202  6FE1               	movwf	_MACCurrentChannel& (0+255),b
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;drv_mrf_miwi_24j40.c: 1475: InitMRF24J40();
  6077  003204  EC88  F00D         	call	_InitMRF24J40	;wreg free
  6078                           
  6079                           ;drv_mrf_miwi_24j40.c: 1477: MRF24J40Status.Val = 0;
  6080  003208  6A29               	clrf	_MRF24J40Status,c	;volatile
  6081                           
  6082                           ;drv_mrf_miwi_24j40.c: 1479: for (i = 0; i < 2; i++)
  6083  00320A  0100               	movlb	0	; () banked
  6084  00320C  6B77               	clrf	MiMAC_Init@i& (0+255),b
  6085  00320E                     l11911:
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;drv_mrf_miwi_24j40.c: 1480: {
  6089                           ;drv_mrf_miwi_24j40.c: 1481: RxBuffer[i].PayloadLen = 0;
  6090  00320E  5177               	movf	MiMAC_Init@i& (0+255),w,b
  6091  003210  0D45               	mullw	69
  6092  003212  0E00               	movlw	low _RxBuffer
  6093  003214  24F3               	addwf	prodl,w,c
  6094  003216  6ED9               	movwf	fsr2l,c
  6095  003218  0E02               	movlw	high _RxBuffer
  6096  00321A  20F4               	addwfc	prodh,w,c
  6097  00321C  6EDA               	movwf	fsr2h,c
  6098  00321E  6ADF               	clrf	indf2,c
  6099                           
  6100                           ; BSR set to: 0
  6101  003220  2B77               	incf	MiMAC_Init@i& (0+255),f,b
  6102                           
  6103                           ; BSR set to: 0
  6104  003222  0E01               	movlw	1
  6105  003224  6577               	cpfsgt	MiMAC_Init@i& (0+255),b
  6106  003226  D7F3               	goto	l11911
  6107  003228  0C01               	retlw	1
  6108  00322A                     __end_of_MiMAC_Init:
  6109                           	opt stack 0
  6110                           tblptru	equ	0xFF8
  6111                           tblptrh	equ	0xFF7
  6112                           tblptrl	equ	0xFF6
  6113                           tablat	equ	0xFF5
  6114                           prodh	equ	0xFF4
  6115                           prodl	equ	0xFF3
  6116                           intcon	equ	0xFF2
  6117                           intcon2	equ	0xFF1
  6118                           intcon3	equ	0xFF0
  6119                           postinc0	equ	0xFEE
  6120                           wreg	equ	0xFE8
  6121                           indf1	equ	0xFE7
  6122                           fsr1h	equ	0xFE2
  6123                           fsr1l	equ	0xFE1
  6124                           indf2	equ	0xFDF
  6125                           postinc2	equ	0xFDE
  6126                           postdec2	equ	0xFDD
  6127                           fsr2h	equ	0xFDA
  6128                           fsr2l	equ	0xFD9
  6129                           status	equ	0xFD8
  6130                           
  6131 ;; *************** function _MiApp_SetChannel *****************
  6132 ;; Defined at:
  6133 ;;		line 2378 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  channel         1    wreg     unsigned char 
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  channel         1    2[BANK0 ] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      unsigned char 
  6140 ;; Registers used:
  6141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6142 ;; Tracked objects:
  6143 ;;		On entry : F/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6150 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6151 ;;Total ram usage:        1 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    7
  6154 ;; This function calls:
  6155 ;;		_MiMAC_SetChannel
  6156 ;;		_NVMWrite
  6157 ;; This function is called by:
  6158 ;;		_MiApp_ProtocolInit
  6159 ;;		_Initialize_Demo
  6160 ;;		_run_star_demo
  6161 ;; This function uses a non-reentrant model
  6162 ;;
  6163                           
  6164                           	psect	text24
  6165  0032FA                     __ptext24:
  6166                           	opt stack 0
  6167  0032FA                     _MiApp_SetChannel:
  6168                           	opt stack 21
  6169                           
  6170                           ; BSR set to: 0
  6171                           ;incstack = 0
  6172                           ;MiApp_SetChannel@channel stored from wreg
  6173  0032FA  6F62               	movwf	MiApp_SetChannel@channel& (0+255),b
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;miwi_p2p.c: 2380: if( MiMAC_SetChannel(channel, 0) )
  6177  0032FC  6A24               	clrf	MiMAC_SetChannel@offsetFreq,c
  6178  0032FE  5162               	movf	MiApp_SetChannel@channel& (0+255),w,b
  6179  003300  EC9B  F018         	call	_MiMAC_SetChannel
  6180  003304  0900               	iorlw	0
  6181  003306  E00F               	bz	l11947
  6182                           
  6183                           ;miwi_p2p.c: 2381: {
  6184                           ;miwi_p2p.c: 2382: currentChannel = channel;
  6185  003308  C062  F0FB         	movff	MiApp_SetChannel@channel,_currentChannel
  6186                           
  6187                           ;miwi_p2p.c: 2384: NVMWrite((uint8_t *)&currentChannel, nvmCurrentChannel, 1);
  6188  00330C  0EFB               	movlw	low _currentChannel
  6189  00330E  6E1E               	movwf	NVMWrite@source,c
  6190  003310  6A1F               	clrf	NVMWrite@source+1,c
  6191  003312  C0EF  F020         	movff	_nvmCurrentChannel,NVMWrite@addr
  6192  003316  C0F0  F021         	movff	_nvmCurrentChannel+1,NVMWrite@addr+1
  6193  00331A  6A23               	clrf	NVMWrite@count+1,c
  6194  00331C  0E01               	movlw	1
  6195  00331E  6E22               	movwf	NVMWrite@count,c
  6196  003320  EC3F  F013         	call	_NVMWrite	;wreg free
  6197                           
  6198                           ;miwi_p2p.c: 2386: return 1;
  6199  003324  0C01               	retlw	1
  6200  003326                     l11947:
  6201                           
  6202                           ;miwi_p2p.c: 2387: }
  6203                           ;miwi_p2p.c: 2388: return 0;
  6204  003326  0C00               	retlw	0	;funcret
  6205  003328                     __end_of_MiApp_SetChannel:
  6206                           	opt stack 0
  6207                           tblptru	equ	0xFF8
  6208                           tblptrh	equ	0xFF7
  6209                           tblptrl	equ	0xFF6
  6210                           tablat	equ	0xFF5
  6211                           prodh	equ	0xFF4
  6212                           prodl	equ	0xFF3
  6213                           intcon	equ	0xFF2
  6214                           intcon2	equ	0xFF1
  6215                           intcon3	equ	0xFF0
  6216                           postinc0	equ	0xFEE
  6217                           wreg	equ	0xFE8
  6218                           indf1	equ	0xFE7
  6219                           fsr1h	equ	0xFE2
  6220                           fsr1l	equ	0xFE1
  6221                           indf2	equ	0xFDF
  6222                           postinc2	equ	0xFDE
  6223                           postdec2	equ	0xFDD
  6224                           fsr2h	equ	0xFDA
  6225                           fsr2l	equ	0xFD9
  6226                           status	equ	0xFD8
  6227                           
  6228 ;; *************** function _MiApp_EstablishConnection *****************
  6229 ;; Defined at:
  6230 ;;		line 2260 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  ActiveScanIn    1    wreg     unsigned char 
  6233 ;;  Mode            1    0[BANK1 ] unsigned char 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  ActiveScanIn    1    0[COMRAM] unsigned char 
  6236 ;;  i               1   16[BANK1 ] unsigned char 
  6237 ;;  t2              4   12[BANK1 ] struct _MIWI_TICK
  6238 ;;  t1              4    8[BANK1 ] struct _MIWI_TICK
  6239 ;;  connectionIn    1    7[BANK1 ] unsigned char 
  6240 ;;  retry           1    6[BANK1 ] unsigned char 
  6241 ;;  tmpConnectio    1    5[BANK1 ] unsigned char 
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  1    wreg      unsigned char 
  6244 ;; Registers used:
  6245 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6246 ;; Tracked objects:
  6247 ;;		On entry : F/1
  6248 ;;		On exit  : E/0
  6249 ;;		Unchanged: 0/0
  6250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6251 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6252 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6253 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6254 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6255 ;;Total ram usage:       17 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:   15
  6258 ;; This function calls:
  6259 ;;		_MiApp_DiscardMessage
  6260 ;;		_MiApp_MessageAvailable
  6261 ;;		_MiWi_TickGet
  6262 ;;		_SendPacket
  6263 ;; This function is called by:
  6264 ;;		_Initialize_Demo
  6265 ;;		_run_star_demo
  6266 ;; This function uses a non-reentrant model
  6267 ;;
  6268                           
  6269                           	psect	text25
  6270  00203E                     __ptext25:
  6271                           	opt stack 0
  6272  00203E                     _MiApp_EstablishConnection:
  6273                           	opt stack 13
  6274                           
  6275                           ; BSR set to: 1
  6276                           ;miwi_p2p.c: 2262: uint8_t tmpConnectionMode = ConnMode;
  6277                           
  6278                           ;incstack = 0
  6279  00203E  C0FF  F16D         	movff	_ConnMode,MiApp_EstablishConnection@tmpConnectionMode
  6280                           
  6281                           ; BSR set to: 1
  6282                           ;miwi_p2p.c: 2263: uint8_t retry = 3;
  6283  002042  0E03               	movlw	3
  6284  002044  6F6E               	movwf	MiApp_EstablishConnection@retry& (0+255),b
  6285                           
  6286                           ; BSR set to: 1
  6287                           ;miwi_p2p.c: 2264: uint8_t connectionInterval = 0;
  6288  002046  6B6F               	clrf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6289                           
  6290                           ; BSR set to: 1
  6291                           ;miwi_p2p.c: 2265: MIWI_TICK t1, t2;
  6292                           ;miwi_p2p.c: 2266: tick1 = MiWi_TickGet();
  6293  002048  EC54  F017         	call	_MiWi_TickGet	;wreg free
  6294                           
  6295                           ; BSR set to: 0
  6296                           ;miwi_p2p.c: 2267: if( Mode == 0x01 )
  6297  00204C  0101               	movlb	1	; () banked
  6298  00204E  0568               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
  6299  002050  E101               	bnz	l12017
  6300                           
  6301                           ;miwi_p2p.c: 2268: {
  6302                           ;miwi_p2p.c: 2269: return 0xFF;
  6303  002052  0CFF               	retlw	255
  6304  002054                     l12017:
  6305                           
  6306                           ; BSR set to: 1
  6307                           ;miwi_p2p.c: 2270: }
  6308                           ;miwi_p2p.c: 2272: t1 = MiWi_TickGet();
  6309  002054  EC54  F017         	call	_MiWi_TickGet	;wreg free
  6310  002058  C01D  F170         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
  6311  00205C  C01E  F171         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
  6312  002060  C01F  F172         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
  6313  002064  C020  F173         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
  6314                           
  6315                           ; BSR set to: 0
  6316                           ;miwi_p2p.c: 2274: t1.Val -= (((uint32_t)(8000000)/32));
  6317  002068  0E90               	movlw	144
  6318  00206A  0101               	movlb	1	; () banked
  6319  00206C  5F70               	subwf	MiApp_EstablishConnection@t1& (0+255),f,b
  6320  00206E  0ED0               	movlw	208
  6321  002070  5B71               	subwfb	(MiApp_EstablishConnection@t1+1)& (0+255),f,b
  6322  002072  0E03               	movlw	3
  6323  002074  5B72               	subwfb	(MiApp_EstablishConnection@t1+2)& (0+255),f,b
  6324  002076  0E00               	movlw	0
  6325  002078  5B73               	subwfb	(MiApp_EstablishConnection@t1+3)& (0+255),f,b
  6326                           
  6327                           ; BSR set to: 1
  6328                           ;miwi_p2p.c: 2275: ConnMode = 0x00;
  6329  00207A  0100               	movlb	0	; () banked
  6330  00207C  6BFF               	clrf	_ConnMode& (0+255),b
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;miwi_p2p.c: 2276: P2PStatus.bits.SearchConnection = 1;
  6334  00207E  89E3               	bsf	_P2PStatus& (0+255),4,b	;volatile
  6335                           
  6336                           ;miwi_p2p.c: 2277: while( P2PStatus.bits.SearchConnection )
  6337  002080  D07F               	goto	l12077
  6338  002082                     l12025:
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;miwi_p2p.c: 2278: {
  6342                           ;miwi_p2p.c: 2279: t2 = MiWi_TickGet();
  6343  002082  EC54  F017         	call	_MiWi_TickGet	;wreg free
  6344  002086  C01D  F174         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
  6345  00208A  C01E  F175         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
  6346  00208E  C01F  F176         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
  6347  002092  C020  F177         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;miwi_p2p.c: 2280: if( (t2.Val - t1.Val) > (((uint32_t)(8000000)/32)) )
  6351  002096  0101               	movlb	1	; () banked
  6352  002098  5170               	movf	MiApp_EstablishConnection@t1& (0+255),w,b
  6353  00209A  5D74               	subwf	MiApp_EstablishConnection@t2& (0+255),w,b
  6354  00209C  6F69               	movwf	??_MiApp_EstablishConnection& (0+255),b
  6355  00209E  5171               	movf	(MiApp_EstablishConnection@t1+1)& (0+255),w,b
  6356  0020A0  5975               	subwfb	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
  6357  0020A2  6F6A               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
  6358  0020A4  5172               	movf	(MiApp_EstablishConnection@t1+2)& (0+255),w,b
  6359  0020A6  5976               	subwfb	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
  6360  0020A8  6F6B               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
  6361  0020AA  5173               	movf	(MiApp_EstablishConnection@t1+3)& (0+255),w,b
  6362  0020AC  5977               	subwfb	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
  6363  0020AE  6F6C               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
  6364  0020B0  516C               	movf	(??_MiApp_EstablishConnection+3)& (0+255),w,b
  6365  0020B2  E107               	bnz	u12450
  6366  0020B4  0E91               	movlw	145
  6367  0020B6  5D69               	subwf	??_MiApp_EstablishConnection& (0+255),w,b
  6368  0020B8  0ED0               	movlw	208
  6369  0020BA  596A               	subwfb	(??_MiApp_EstablishConnection+1)& (0+255),w,b
  6370  0020BC  0E03               	movlw	3
  6371  0020BE  596B               	subwfb	(??_MiApp_EstablishConnection+2)& (0+255),w,b
  6372  0020C0  E359               	bnc	l12073
  6373  0020C2                     u12450:
  6374                           
  6375                           ; BSR set to: 1
  6376                           ;miwi_p2p.c: 2281: {
  6377                           ;miwi_p2p.c: 2282: t1.Val = t2.Val;
  6378  0020C2  C174  F170         	movff	MiApp_EstablishConnection@t2,MiApp_EstablishConnection@t1
  6379  0020C6  C175  F171         	movff	MiApp_EstablishConnection@t2+1,MiApp_EstablishConnection@t1+1
  6380  0020CA  C176  F172         	movff	MiApp_EstablishConnection@t2+2,MiApp_EstablishConnection@t1+2
  6381  0020CE  C177  F173         	movff	MiApp_EstablishConnection@t2+3,MiApp_EstablishConnection@t1+3
  6382                           
  6383                           ; BSR set to: 1
  6384                           ;miwi_p2p.c: 2284: if( connectionInterval-- > 0 )
  6385  0020D2  076F               	decf	MiApp_EstablishConnection@connectionInterval& (0+255),f,b
  6386  0020D4  296F               	incf	MiApp_EstablishConnection@connectionInterval& (0+255),w,b
  6387  0020D6  E154               	bnz	l12077
  6388                           
  6389                           ; BSR set to: 1
  6390                           ;miwi_p2p.c: 2287: }
  6391                           ;miwi_p2p.c: 2288: connectionInterval = 2-1;
  6392  0020D8  0E01               	movlw	1
  6393  0020DA  6F6F               	movwf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6394                           
  6395                           ; BSR set to: 1
  6396                           ;miwi_p2p.c: 2289: if( retry-- == 0 )
  6397  0020DC  076E               	decf	MiApp_EstablishConnection@retry& (0+255),f,b
  6398  0020DE  296E               	incf	MiApp_EstablishConnection@retry& (0+255),w,b
  6399  0020E0  E103               	bnz	l612
  6400                           
  6401                           ; BSR set to: 1
  6402                           ;miwi_p2p.c: 2290: {
  6403                           ;miwi_p2p.c: 2292: P2PStatus.bits.SearchConnection = 0;
  6404  0020E2  0100               	movlb	0	; () banked
  6405  0020E4  99E3               	bcf	_P2PStatus& (0+255),4,b	;volatile
  6406  0020E6  0CFF               	retlw	255
  6407  0020E8                     l612:
  6408                           
  6409                           ; BSR set to: 1
  6410                           ;miwi_p2p.c: 2294: }
  6411                           ;miwi_p2p.c: 2295: {TxData = 0;};
  6412  0020E8  0100               	movlb	0	; () banked
  6413  0020EA  6BE6               	clrf	_TxData& (0+255),b
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;miwi_p2p.c: 2296: TxBuffer[TxData++] = 0x81;
  6417  0020EC  0E38               	movlw	low _TxBuffer
  6418  0020EE  25E6               	addwf	_TxData& (0+255),w,b
  6419  0020F0  6ED9               	movwf	fsr2l,c
  6420  0020F2  6ADA               	clrf	fsr2h,c
  6421  0020F4  0E01               	movlw	high _TxBuffer
  6422  0020F6  22DA               	addwfc	fsr2h,f,c
  6423  0020F8  0E81               	movlw	129
  6424  0020FA  6EDF               	movwf	indf2,c
  6425                           
  6426                           ; BSR set to: 0
  6427  0020FC  2BE6               	incf	_TxData& (0+255),f,b
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;miwi_p2p.c: 2297: TxBuffer[TxData++] = currentChannel;
  6431  0020FE  0E38               	movlw	low _TxBuffer
  6432  002100  25E6               	addwf	_TxData& (0+255),w,b
  6433  002102  6ED9               	movwf	fsr2l,c
  6434  002104  6ADA               	clrf	fsr2h,c
  6435  002106  0E01               	movlw	high _TxBuffer
  6436  002108  22DA               	addwfc	fsr2h,f,c
  6437  00210A  C0FB  FFDF         	movff	_currentChannel,indf2
  6438  00210E  2BE6               	incf	_TxData& (0+255),f,b
  6439                           
  6440                           ; BSR set to: 0
  6441                           ;miwi_p2p.c: 2298: TxBuffer[TxData++] = P2PCapacityInfo;
  6442  002110  0E38               	movlw	low _TxBuffer
  6443  002112  25E6               	addwf	_TxData& (0+255),w,b
  6444  002114  6ED9               	movwf	fsr2l,c
  6445  002116  6ADA               	clrf	fsr2h,c
  6446  002118  0E01               	movlw	high _TxBuffer
  6447  00211A  22DA               	addwfc	fsr2h,f,c
  6448  00211C  C0E2  FFDF         	movff	_P2PCapacityInfo,indf2
  6449                           
  6450                           ; BSR set to: 0
  6451  002120  2BE6               	incf	_TxData& (0+255),f,b
  6452                           
  6453                           ;miwi_p2p.c: 2300: {
  6454                           ;miwi_p2p.c: 2301: TxBuffer[TxData++] = 0xAA;
  6455  002122  0E38               	movlw	low _TxBuffer
  6456  002124  25E6               	addwf	_TxData& (0+255),w,b
  6457  002126  6ED9               	movwf	fsr2l,c
  6458  002128  6ADA               	clrf	fsr2h,c
  6459  00212A  0E01               	movlw	high _TxBuffer
  6460  00212C  22DA               	addwfc	fsr2h,f,c
  6461  00212E  0EAA               	movlw	170
  6462  002130  6EDF               	movwf	indf2,c
  6463                           
  6464                           ; BSR set to: 0
  6465  002132  2BE6               	incf	_TxData& (0+255),f,b
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;miwi_p2p.c: 2302: }
  6469                           ;miwi_p2p.c: 2305: {
  6470                           ;miwi_p2p.c: 2306: uint8_t i;
  6471                           ;miwi_p2p.c: 2308: for(i = 0; i < 1; i++)
  6472  002134  0101               	movlb	1	; () banked
  6473  002136  6B78               	clrf	MiApp_EstablishConnection@i& (0+255),b
  6474  002138                     l12063:
  6475                           
  6476                           ; BSR set to: 1
  6477                           ;miwi_p2p.c: 2309: {
  6478                           ;miwi_p2p.c: 2310: TxBuffer[TxData++] = AdditionalNodeID[i];
  6479  002138  5178               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6480  00213A  0FFD               	addlw	low _AdditionalNodeID
  6481  00213C  6ED9               	movwf	fsr2l,c
  6482  00213E  6ADA               	clrf	fsr2h,c
  6483  002140  0E38               	movlw	low _TxBuffer
  6484  002142  0100               	movlb	0	; () banked
  6485  002144  25E6               	addwf	_TxData& (0+255),w,b
  6486  002146  6EE1               	movwf	fsr1l,c
  6487  002148  6AE2               	clrf	fsr1h,c
  6488  00214A  0E01               	movlw	high _TxBuffer
  6489  00214C  22E2               	addwfc	fsr1h,f,c
  6490  00214E  CFDF FFE7          	movff	indf2,indf1
  6491                           
  6492                           ; BSR set to: 0
  6493  002152  2BE6               	incf	_TxData& (0+255),f,b
  6494                           
  6495                           ; BSR set to: 0
  6496  002154  0101               	movlb	1	; () banked
  6497  002156  2B78               	incf	MiApp_EstablishConnection@i& (0+255),f,b
  6498                           
  6499                           ; BSR set to: 1
  6500  002158  5178               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6501  00215A  E0EE               	bz	l12063
  6502                           
  6503                           ; BSR set to: 1
  6504                           ;miwi_p2p.c: 2311: }
  6505                           ;miwi_p2p.c: 2312: }
  6506                           ;miwi_p2p.c: 2327: SendPacket(1, myPANID, (0), 1, 0);
  6507  00215C  C0EB  F08F         	movff	_myPANID,SendPacket@DestinationPANID
  6508  002160  C0EC  F090         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  6509  002164  0100               	movlb	0	; () banked
  6510  002166  6B91               	clrf	SendPacket@DestinationAddress& (0+255),b
  6511  002168  6B92               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  6512  00216A  0E01               	movlw	1
  6513  00216C  6F93               	movwf	SendPacket@isCommand& (0+255),b
  6514  00216E  6B94               	clrf	SendPacket@SecurityEnabled& (0+255),b
  6515  002170  EC95  F012         	call	_SendPacket
  6516  002174                     l12073:
  6517                           
  6518                           ;miwi_p2p.c: 2344: }
  6519                           ;miwi_p2p.c: 2346: if( MiApp_MessageAvailable())
  6520  002174  ECE8  F01A         	call	_MiApp_MessageAvailable	;wreg free
  6521  002178  0900               	iorlw	0
  6522  00217A  A4D8               	btfss	status,2,c
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;miwi_p2p.c: 2347: {
  6526                           ;miwi_p2p.c: 2348: MiApp_DiscardMessage();
  6527  00217C  ECEE  F01A         	call	_MiApp_DiscardMessage	;wreg free
  6528  002180                     l12077:
  6529  002180  0100               	movlb	0	; () banked
  6530  002182  B9E3               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  6531  002184  D77E               	goto	l12025
  6532                           
  6533                           ; BSR set to: 0
  6534                           ;miwi_p2p.c: 2349: }
  6535                           ;miwi_p2p.c: 2351: }
  6536                           ;miwi_p2p.c: 2353: ConnMode = tmpConnectionMode;
  6537  002186  C16D  F0FF         	movff	MiApp_EstablishConnection@tmpConnectionMode,_ConnMode
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;miwi_p2p.c: 2360: return LatestConnection;
  6541  00218A  51E0               	movf	_LatestConnection& (0+255),w,b
  6542  00218C  0012               	return		;funcret
  6543  00218E                     __end_of_MiApp_EstablishConnection:
  6544                           	opt stack 0
  6545                           tblptru	equ	0xFF8
  6546                           tblptrh	equ	0xFF7
  6547                           tblptrl	equ	0xFF6
  6548                           tablat	equ	0xFF5
  6549                           prodh	equ	0xFF4
  6550                           prodl	equ	0xFF3
  6551                           intcon	equ	0xFF2
  6552                           intcon2	equ	0xFF1
  6553                           intcon3	equ	0xFF0
  6554                           postinc0	equ	0xFEE
  6555                           wreg	equ	0xFE8
  6556                           indf1	equ	0xFE7
  6557                           fsr1h	equ	0xFE2
  6558                           fsr1l	equ	0xFE1
  6559                           indf2	equ	0xFDF
  6560                           postinc2	equ	0xFDE
  6561                           postdec2	equ	0xFDD
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function _MiApp_MessageAvailable *****************
  6567 ;; Defined at:
  6568 ;;		line 2392 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      unsigned char 
  6575 ;; Registers used:
  6576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6577 ;; Tracked objects:
  6578 ;;		On entry : E/1
  6579 ;;		On exit  : F/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6586 ;;Total ram usage:        0 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:   14
  6589 ;; This function calls:
  6590 ;;		_P2PTasks
  6591 ;; This function is called by:
  6592 ;;		_MiApp_UnicastStar
  6593 ;;		_MiApp_EstablishConnection
  6594 ;;		_run_star_demo
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text26
  6599  0035D0                     __ptext26:
  6600                           	opt stack 0
  6601  0035D0                     _MiApp_MessageAvailable:
  6602                           	opt stack 13
  6603                           
  6604                           ;miwi_p2p.c: 2394: P2PTasks();
  6605                           
  6606                           ;incstack = 0
  6607  0035D0  EC94  F009         	call	_P2PTasks	;wreg free
  6608                           
  6609                           ;miwi_p2p.c: 2396: return P2PStatus.bits.RxHasUserData;
  6610  0035D4  0100               	movlb	0	; () banked
  6611  0035D6  B7E3               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  6612  0035D8  0C01               	retlw	1
  6613                           
  6614                           ; BSR set to: 0
  6615  0035DA  0C00               	retlw	0	;funcret
  6616  0035DC                     __end_of_MiApp_MessageAvailable:
  6617                           	opt stack 0
  6618                           tblptru	equ	0xFF8
  6619                           tblptrh	equ	0xFF7
  6620                           tblptrl	equ	0xFF6
  6621                           tablat	equ	0xFF5
  6622                           prodh	equ	0xFF4
  6623                           prodl	equ	0xFF3
  6624                           intcon	equ	0xFF2
  6625                           intcon2	equ	0xFF1
  6626                           intcon3	equ	0xFF0
  6627                           postinc0	equ	0xFEE
  6628                           wreg	equ	0xFE8
  6629                           indf1	equ	0xFE7
  6630                           fsr1h	equ	0xFE2
  6631                           fsr1l	equ	0xFE1
  6632                           indf2	equ	0xFDF
  6633                           postinc2	equ	0xFDE
  6634                           postdec2	equ	0xFDD
  6635                           fsr2h	equ	0xFDA
  6636                           fsr2l	equ	0xFD9
  6637                           status	equ	0xFD8
  6638                           
  6639 ;; *************** function _P2PTasks *****************
  6640 ;; Defined at:
  6641 ;;		line 344 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;		None
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  tmp             2   81[BANK0 ] unsigned int 
  6646 ;;  final_index     1   83[BANK0 ] unsigned char 
  6647 ;;  FW_Stat         1   80[BANK0 ] unsigned char 
  6648 ;;  tmpTick         4   84[BANK0 ] struct _MIWI_TICK
  6649 ;;  tick3           4    0        struct _MIWI_TICK
  6650 ;;  tick2           4    0        struct _MIWI_TICK
  6651 ;;  i               1   88[BANK0 ] unsigned char 
  6652 ;;  broadcast_st    1    0        unsigned char 
  6653 ;; Return value:  Size  Location     Type
  6654 ;;		None               void
  6655 ;; Registers used:
  6656 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6657 ;; Tracked objects:
  6658 ;;		On entry : E/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6663 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6665 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6666 ;;Total ram usage:       13 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; Hardware stack levels required when called:   13
  6669 ;; This function calls:
  6670 ;;		_AddConnection
  6671 ;;		_Find_Index
  6672 ;;		_Forward_Packet_PANCr_to_EDy
  6673 ;;		_MiMAC_DiscardPacket
  6674 ;;		_MiMAC_ReceivedPacket
  6675 ;;		_MiMAC_SetAltAddress
  6676 ;;		_MiWi_TickGet
  6677 ;;		_NVMWrite
  6678 ;;		_SW_Ack_SrED
  6679 ;;		_SendPacket
  6680 ;;		_isSameAddress
  6681 ;;		_store_connection_tb
  6682 ;; This function is called by:
  6683 ;;		_MiApp_TransceiverPowerState
  6684 ;;		_MiApp_MessageAvailable
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text27
  6689  001328                     __ptext27:
  6690                           	opt stack 0
  6691  001328                     _P2PTasks:
  6692                           	opt stack 13
  6693                           
  6694                           ;miwi_p2p.c: 346: uint8_t i;
  6695                           ;miwi_p2p.c: 347: MIWI_TICK tmpTick ,tick2 , tick3 ;
  6696                           ;miwi_p2p.c: 348: bool broadcast_status;
  6697                           ;miwi_p2p.c: 351: tick2 = MiWi_TickGet();
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;incstack = 0
  6701  001328  EC54  F017         	call	_MiWi_TickGet	;wreg free
  6702                           
  6703                           ;miwi_p2p.c: 352: tick3 = MiWi_TickGet();
  6704  00132C  EC54  F017         	call	_MiWi_TickGet	;wreg free
  6705                           
  6706                           ; BSR set to: 0
  6707                           ;miwi_p2p.c: 411: if( P2PStatus.bits.DataRequesting )
  6708  001330  A5E3               	btfss	_P2PStatus& (0+255),2,b	;volatile
  6709  001332  D01D               	goto	l457
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;miwi_p2p.c: 412: {
  6713                           ;miwi_p2p.c: 413: tmpTick = MiWi_TickGet();
  6714  001334  EC54  F017         	call	_MiWi_TickGet	;wreg free
  6715  001338  C01D  F0B4         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  6716  00133C  C01E  F0B5         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  6717  001340  C01F  F0B6         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  6718  001344  C020  F0B7         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;miwi_p2p.c: 414: if( (tmpTick.Val - DataRequestTimer.Val) > 0x00003FFF )
  6722  001348  51C3               	movf	_DataRequestTimer& (0+255),w,b
  6723  00134A  5DB4               	subwf	P2PTasks@tmpTick& (0+255),w,b
  6724  00134C  6FAC               	movwf	??_P2PTasks& (0+255),b
  6725  00134E  51C4               	movf	(_DataRequestTimer+1)& (0+255),w,b
  6726  001350  59B5               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  6727  001352  6FAD               	movwf	(??_P2PTasks+1)& (0+255),b
  6728  001354  51C5               	movf	(_DataRequestTimer+2)& (0+255),w,b
  6729  001356  59B6               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  6730  001358  6FAE               	movwf	(??_P2PTasks+2)& (0+255),b
  6731  00135A  51C6               	movf	(_DataRequestTimer+3)& (0+255),w,b
  6732  00135C  59B7               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  6733  00135E  6FAF               	movwf	(??_P2PTasks+3)& (0+255),b
  6734  001360  51AF               	movf	(??_P2PTasks+3)& (0+255),w,b
  6735  001362  11AE               	iorwf	(??_P2PTasks+2)& (0+255),w,b
  6736  001364  E103               	bnz	u11900
  6737  001366  0E40               	movlw	64
  6738  001368  5DAD               	subwf	(??_P2PTasks+1)& (0+255),w,b
  6739  00136A  B0D8               	btfsc	status,0,c
  6740  00136C                     u11900:
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;miwi_p2p.c: 415: {
  6744                           ;miwi_p2p.c: 417: ;
  6745                           ;miwi_p2p.c: 419: P2PStatus.bits.DataRequesting = 0;
  6746  00136C  95E3               	bcf	_P2PStatus& (0+255),2,b	;volatile
  6747  00136E                     l457:
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;miwi_p2p.c: 424: }
  6751                           ;miwi_p2p.c: 425: }
  6752                           ;miwi_p2p.c: 429: if( P2PStatus.bits.SaveConnection )
  6753  00136E  A3E3               	btfss	_P2PStatus& (0+255),1,b	;volatile
  6754  001370  D02D               	goto	l11603
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;miwi_p2p.c: 430: {
  6758                           ;miwi_p2p.c: 431: tmpTick = MiWi_TickGet();
  6759  001372  EC54  F017         	call	_MiWi_TickGet	;wreg free
  6760  001376  C01D  F0B4         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  6761  00137A  C01E  F0B5         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  6762  00137E  C01F  F0B6         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  6763  001382  C020  F0B7         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;miwi_p2p.c: 433: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(8000000)/32)) )
  6767  001386  51CB               	movf	_nvmDelayTick& (0+255),w,b
  6768  001388  5DB4               	subwf	P2PTasks@tmpTick& (0+255),w,b
  6769  00138A  6FAC               	movwf	??_P2PTasks& (0+255),b
  6770  00138C  51CC               	movf	(_nvmDelayTick+1)& (0+255),w,b
  6771  00138E  59B5               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  6772  001390  6FAD               	movwf	(??_P2PTasks+1)& (0+255),b
  6773  001392  51CD               	movf	(_nvmDelayTick+2)& (0+255),w,b
  6774  001394  59B6               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  6775  001396  6FAE               	movwf	(??_P2PTasks+2)& (0+255),b
  6776  001398  51CE               	movf	(_nvmDelayTick+3)& (0+255),w,b
  6777  00139A  59B7               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  6778  00139C  6FAF               	movwf	(??_P2PTasks+3)& (0+255),b
  6779  00139E  51AF               	movf	(??_P2PTasks+3)& (0+255),w,b
  6780  0013A0  E107               	bnz	u11920
  6781  0013A2  0E91               	movlw	145
  6782  0013A4  5DAC               	subwf	??_P2PTasks& (0+255),w,b
  6783  0013A6  0ED0               	movlw	208
  6784  0013A8  59AD               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  6785  0013AA  0E03               	movlw	3
  6786  0013AC  59AE               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  6787  0013AE  E30E               	bnc	l11603
  6788  0013B0                     u11920:
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;miwi_p2p.c: 434: {
  6792                           ;miwi_p2p.c: 435: P2PStatus.bits.SaveConnection = 0;
  6793  0013B0  93E3               	bcf	_P2PStatus& (0+255),1,b	;volatile
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;miwi_p2p.c: 436: NVMWrite((uint8_t *)ConnectionTable, nvmConnectionTable, (uint16_t)10 
      +                          * sizeof(CONNECTION_ENTRY));
  6797  0013B2  0E00               	movlw	low _ConnectionTable
  6798  0013B4  6E1E               	movwf	NVMWrite@source,c
  6799  0013B6  0E03               	movlw	high _ConnectionTable
  6800  0013B8  6E1F               	movwf	NVMWrite@source+1,c
  6801  0013BA  C03F  F020         	movff	_nvmConnectionTable,NVMWrite@addr
  6802  0013BE  C040  F021         	movff	_nvmConnectionTable+1,NVMWrite@addr+1
  6803  0013C2  6A23               	clrf	NVMWrite@count+1,c
  6804  0013C4  0E8C               	movlw	140
  6805  0013C6  6E22               	movwf	NVMWrite@count,c
  6806  0013C8  EC3F  F013         	call	_NVMWrite	;wreg free
  6807  0013CC                     l11603:
  6808                           
  6809                           ;miwi_p2p.c: 438: }
  6810                           ;miwi_p2p.c: 439: }
  6811                           ;miwi_p2p.c: 457: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
  6812  0013CC  0100               	movlb	0	; () banked
  6813  0013CE  B7E3               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  6814  0013D0  0012               	return	
  6815                           
  6816                           ; BSR set to: 0
  6817  0013D2  ECFD  F006         	call	_MiMAC_ReceivedPacket	;wreg free
  6818  0013D6  0900               	iorlw	0
  6819  0013D8  B4D8               	btfsc	status,2,c
  6820  0013DA  0012               	return	
  6821                           
  6822                           ;miwi_p2p.c: 458: {
  6823                           ;miwi_p2p.c: 459: bool FW_Stat = 0;
  6824  0013DC  0100               	movlb	0	; () banked
  6825  0013DE  6BB0               	clrf	P2PTasks@FW_Stat& (0+255),b
  6826                           
  6827                           ;miwi_p2p.c: 460: rxMessage.flags.Val = 0;
  6828  0013E0  6BB9               	clrf	_rxMessage& (0+255),b
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;miwi_p2p.c: 461: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
  6832  0013E2  A430               	btfss	_MACRxPacket,2,c
  6833  0013E4  D003               	goto	u11950
  6834  0013E6  6BAC               	clrf	??_P2PTasks& (0+255),b
  6835  0013E8  2BAC               	incf	??_P2PTasks& (0+255),f,b
  6836  0013EA  D002               	goto	u11958
  6837  0013EC                     u11950:
  6838  0013EC  0100               	movlb	0	; () banked
  6839  0013EE  6BAC               	clrf	??_P2PTasks& (0+255),b
  6840  0013F0                     u11958:
  6841  0013F0  51B9               	movf	_rxMessage& (0+255),w,b
  6842  0013F2  19AC               	xorwf	??_P2PTasks& (0+255),w,b
  6843  0013F4  0BFC               	andlw	-4
  6844  0013F6  19AC               	xorwf	??_P2PTasks& (0+255),w,b
  6845  0013F8  6FB9               	movwf	_rxMessage& (0+255),b
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;miwi_p2p.c: 462: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
  6849  0013FA  A630               	btfss	_MACRxPacket,3,c
  6850  0013FC  D002               	bra	u11965
  6851  0013FE  87B9               	bsf	_rxMessage& (0+255),3,b
  6852  001400  D002               	bra	u11967
  6853  001402                     u11965:
  6854  001402  0100               	movlb	0	; () banked
  6855  001404  97B9               	bcf	_rxMessage& (0+255),3,b
  6856  001406                     u11967:
  6857                           
  6858                           ;miwi_p2p.c: 463: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
  6859  001406  5030               	movf	_MACRxPacket,w,c
  6860  001408  0B03               	andlw	3
  6861  00140A  06E8               	decf	wreg,f,c
  6862  00140C  E103               	bnz	u11970
  6863  00140E  6BAC               	clrf	??_P2PTasks& (0+255),b
  6864  001410  2BAC               	incf	??_P2PTasks& (0+255),f,b
  6865  001412  D002               	goto	u11988
  6866  001414                     u11970:
  6867  001414  0100               	movlb	0	; () banked
  6868  001416  6BAC               	clrf	??_P2PTasks& (0+255),b
  6869  001418                     u11988:
  6870  001418  3BAC               	swapf	??_P2PTasks& (0+255),f,b
  6871  00141A  47AC               	rlncf	??_P2PTasks& (0+255),f,b
  6872  00141C  51B9               	movf	_rxMessage& (0+255),w,b
  6873  00141E  19AC               	xorwf	??_P2PTasks& (0+255),w,b
  6874  001420  0BDF               	andlw	-33
  6875  001422  19AC               	xorwf	??_P2PTasks& (0+255),w,b
  6876  001424  6FB9               	movwf	_rxMessage& (0+255),b
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;miwi_p2p.c: 464: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
  6880  001426  AE30               	btfss	_MACRxPacket,7,c
  6881  001428  D002               	bra	u11995
  6882  00142A  8DB9               	bsf	_rxMessage& (0+255),6,b
  6883  00142C  D002               	bra	u11997
  6884  00142E                     u11995:
  6885  00142E  0100               	movlb	0	; () banked
  6886  001430  9DB9               	bcf	_rxMessage& (0+255),6,b
  6887  001432                     u11997:
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;miwi_p2p.c: 465: if( MACRxPacket.flags.bits.sourcePrsnt )
  6891  001432  AE30               	btfss	_MACRxPacket,7,c
  6892  001434  D004               	goto	l11619
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;miwi_p2p.c: 466: {
  6896                           ;miwi_p2p.c: 467: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
  6897  001436  C031  F0BC         	movff	_MACRxPacket+1,_rxMessage+3
  6898  00143A  C032  F0BD         	movff	_MACRxPacket+2,_rxMessage+4
  6899  00143E                     l11619:
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;miwi_p2p.c: 468: }
  6903                           ;miwi_p2p.c: 470: rxMessage.SourcePANID.Val = MACRxPacket.SourcePANID.Val;
  6904  00143E  C039  F0BA         	movff	_MACRxPacket+9,_rxMessage+1
  6905  001442  C03A  F0BB         	movff	_MACRxPacket+10,_rxMessage+2
  6906                           
  6907                           ; BSR set to: 0
  6908                           ;miwi_p2p.c: 473: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
  6909  001446  C035  F0C0         	movff	_MACRxPacket+5,_rxMessage+7
  6910                           
  6911                           ;miwi_p2p.c: 474: rxMessage.Payload = MACRxPacket.Payload;
  6912  00144A  C033  F0BE         	movff	_MACRxPacket+3,_rxMessage+5
  6913  00144E  C034  F0BF         	movff	_MACRxPacket+4,_rxMessage+6
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;miwi_p2p.c: 483: rxMessage.PacketLQI = MACRxPacket.LQIValue;
  6917  001452  C037  F0C2         	movff	_MACRxPacket+7,_rxMessage+9
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;miwi_p2p.c: 484: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
  6921  001456  C036  F0C1         	movff	_MACRxPacket+6,_rxMessage+8
  6922                           
  6923                           ; BSR set to: 0
  6924                           ;miwi_p2p.c: 487: if( rxMessage.flags.bits.command )
  6925  00145A  BBB9               	btfsc	_rxMessage& (0+255),5,b
  6926  00145C  D194               	goto	l11791
  6927  00145E  D1B0               	goto	l463
  6928  001460                     l11633:
  6929                           
  6930                           ;miwi_p2p.c: 498: {
  6931                           ;miwi_p2p.c: 505: MiMAC_DiscardPacket();
  6932  001460  EC8E  F01A         	call	_MiMAC_DiscardPacket	;wreg free
  6933                           
  6934                           ;miwi_p2p.c: 506: break;
  6935  001464  D1AE               	goto	l507
  6936  001466                     l11639:
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;miwi_p2p.c: 631: {
  6940                           ;miwi_p2p.c: 632: if(ConnMode > 0x02)
  6941  001466  0E02               	movlw	2
  6942  001468  65FF               	cpfsgt	_ConnMode& (0+255),b
  6943  00146A  D001               	goto	l11643
  6944  00146C  D7F9               	goto	l11633
  6945  00146E                     l11643:
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;miwi_p2p.c: 636: }
  6949                           ;miwi_p2p.c: 637: if( currentChannel != rxMessage.Payload[1] )
  6950  00146E  EE20 F001          	lfsr	2,1
  6951  001472  51BE               	movf	(_rxMessage+5)& (0+255),w,b
  6952  001474  26D9               	addwf	fsr2l,f,c
  6953  001476  51BF               	movf	(_rxMessage+6)& (0+255),w,b
  6954  001478  22DA               	addwfc	fsr2h,f,c
  6955  00147A  51FB               	movf	_currentChannel& (0+255),w,b
  6956  00147C  18DE               	xorwf	postinc2,w,c
  6957  00147E  E1F0               	bnz	l11633
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;miwi_p2p.c: 641: }
  6961                           ;miwi_p2p.c: 643: {TxData = 0;};
  6962  001480  6BE6               	clrf	_TxData& (0+255),b
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;miwi_p2p.c: 644: TxBuffer[TxData++] = 0x97;
  6966  001482  0E38               	movlw	low _TxBuffer
  6967  001484  25E6               	addwf	_TxData& (0+255),w,b
  6968  001486  6ED9               	movwf	fsr2l,c
  6969  001488  6ADA               	clrf	fsr2h,c
  6970  00148A  0E01               	movlw	high _TxBuffer
  6971  00148C  22DA               	addwfc	fsr2h,f,c
  6972  00148E  0E97               	movlw	151
  6973  001490  6EDF               	movwf	indf2,c
  6974                           
  6975                           ; BSR set to: 0
  6976  001492  2BE6               	incf	_TxData& (0+255),f,b
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = P2PCapacityInfo;
  6980  001494  0E38               	movlw	low _TxBuffer
  6981  001496  25E6               	addwf	_TxData& (0+255),w,b
  6982  001498  6ED9               	movwf	fsr2l,c
  6983  00149A  6ADA               	clrf	fsr2h,c
  6984  00149C  0E01               	movlw	high _TxBuffer
  6985  00149E  22DA               	addwfc	fsr2h,f,c
  6986  0014A0  C0E2  FFDF         	movff	_P2PCapacityInfo,indf2
  6987  0014A4  2BE6               	incf	_TxData& (0+255),f,b
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;miwi_p2p.c: 647: for(i = 0; i < 1; i++)
  6991  0014A6  6BB8               	clrf	P2PTasks@i& (0+255),b
  6992  0014A8                     l11659:
  6993                           
  6994                           ; BSR set to: 0
  6995                           ;miwi_p2p.c: 648: {
  6996                           ;miwi_p2p.c: 649: TxBuffer[TxData++] = AdditionalNodeID[i];
  6997  0014A8  51B8               	movf	P2PTasks@i& (0+255),w,b
  6998  0014AA  0FFD               	addlw	low _AdditionalNodeID
  6999  0014AC  6ED9               	movwf	fsr2l,c
  7000  0014AE  6ADA               	clrf	fsr2h,c
  7001  0014B0  0E38               	movlw	low _TxBuffer
  7002  0014B2  25E6               	addwf	_TxData& (0+255),w,b
  7003  0014B4  6EE1               	movwf	fsr1l,c
  7004  0014B6  6AE2               	clrf	fsr1h,c
  7005  0014B8  0E01               	movlw	high _TxBuffer
  7006  0014BA  22E2               	addwfc	fsr1h,f,c
  7007  0014BC  CFDF FFE7          	movff	indf2,indf1
  7008                           
  7009                           ; BSR set to: 0
  7010  0014C0  2BE6               	incf	_TxData& (0+255),f,b
  7011                           
  7012                           ; BSR set to: 0
  7013  0014C2  2BB8               	incf	P2PTasks@i& (0+255),f,b
  7014                           
  7015                           ; BSR set to: 0
  7016  0014C4  51B8               	movf	P2PTasks@i& (0+255),w,b
  7017  0014C6  E0F0               	bz	l11659
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;miwi_p2p.c: 650: }
  7021                           ;miwi_p2p.c: 652: MiMAC_DiscardPacket();
  7022  0014C8  EC8E  F01A         	call	_MiMAC_DiscardPacket	;wreg free
  7023                           
  7024                           ;miwi_p2p.c: 663: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
  7025  0014CC  C0BA  F08F         	movff	_rxMessage+1,SendPacket@DestinationPANID
  7026  0014D0  C0BB  F090         	movff	_rxMessage+2,SendPacket@DestinationPANID+1
  7027  0014D4  C0BC  F091         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7028  0014D8  C0BD  F092         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7029  0014DC  0E01               	movlw	1
  7030  0014DE  0100               	movlb	0	; () banked
  7031  0014E0  6F93               	movwf	SendPacket@isCommand& (0+255),b
  7032  0014E2  0E00               	movlw	0
  7033  0014E4  B7B9               	btfsc	_rxMessage& (0+255),3,b
  7034  0014E6  0E01               	movlw	1
  7035  0014E8  6F94               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7036  0014EA  0E00               	movlw	0
  7037  0014EC  EC95  F012         	call	_SendPacket
  7038                           
  7039                           ;miwi_p2p.c: 668: }
  7040                           ;miwi_p2p.c: 669: break;
  7041  0014F0  D168               	goto	l507
  7042  0014F2                     l474:
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;miwi_p2p.c: 677: {
  7046                           ;miwi_p2p.c: 678: {TxData = 0;};
  7047  0014F2  6BE6               	clrf	_TxData& (0+255),b
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;miwi_p2p.c: 679: TxBuffer[TxData++] = 0x92;
  7051  0014F4  0E38               	movlw	low _TxBuffer
  7052  0014F6  25E6               	addwf	_TxData& (0+255),w,b
  7053  0014F8  6ED9               	movwf	fsr2l,c
  7054  0014FA  6ADA               	clrf	fsr2h,c
  7055  0014FC  0E01               	movlw	high _TxBuffer
  7056  0014FE  22DA               	addwfc	fsr2h,f,c
  7057  001500  0E92               	movlw	146
  7058  001502  6EDF               	movwf	indf2,c
  7059                           
  7060                           ; BSR set to: 0
  7061  001504  2BE6               	incf	_TxData& (0+255),f,b
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;miwi_p2p.c: 681: for(i = 0; i < 10; i++)
  7065  001506  6BB8               	clrf	P2PTasks@i& (0+255),b
  7066  001508                     l11681:
  7067                           
  7068                           ; BSR set to: 0
  7069                           ;miwi_p2p.c: 682: {
  7070                           ;miwi_p2p.c: 684: if( ConnectionTable[i].status.bits.isValid )
  7071  001508  51B8               	movf	P2PTasks@i& (0+255),w,b
  7072  00150A  0D0E               	mullw	14
  7073  00150C  0E0C               	movlw	low (_ConnectionTable+12)
  7074  00150E  24F3               	addwf	prodl,w,c
  7075  001510  6ED9               	movwf	fsr2l,c
  7076  001512  0E03               	movlw	high (_ConnectionTable+12)
  7077  001514  20F4               	addwfc	prodh,w,c
  7078  001516  6EDA               	movwf	fsr2h,c
  7079  001518  AEDF               	btfss	indf2,7,c
  7080  00151A  D039               	goto	l11693
  7081                           
  7082                           ; BSR set to: 3
  7083                           ;miwi_p2p.c: 685: {
  7084                           ;miwi_p2p.c: 687: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7085  00151C  C0BC  F01D         	movff	_rxMessage+3,isSameAddress@Address1
  7086  001520  C0BD  F01E         	movff	_rxMessage+4,isSameAddress@Address1+1
  7087  001524  0100               	movlb	0	; () banked
  7088  001526  51B8               	movf	P2PTasks@i& (0+255),w,b
  7089  001528  0D0E               	mullw	14
  7090  00152A  0E04               	movlw	low (_ConnectionTable+4)
  7091  00152C  24F3               	addwf	prodl,w,c
  7092  00152E  6E1F               	movwf	isSameAddress@Address2,c
  7093  001530  0E03               	movlw	high (_ConnectionTable+4)
  7094  001532  20F4               	addwfc	prodh,w,c
  7095  001534  6E20               	movwf	isSameAddress@Address2+1,c
  7096  001536  ECAA  F019         	call	_isSameAddress	;wreg free
  7097  00153A  0900               	iorlw	0
  7098  00153C  E028               	bz	l11693
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;miwi_p2p.c: 688: {
  7102                           ;miwi_p2p.c: 691: ConnectionTable[i].status.Val = 0;
  7103  00153E  51B8               	movf	P2PTasks@i& (0+255),w,b
  7104  001540  0D0E               	mullw	14
  7105  001542  0E0C               	movlw	low (_ConnectionTable+12)
  7106  001544  24F3               	addwf	prodl,w,c
  7107  001546  6ED9               	movwf	fsr2l,c
  7108  001548  0E03               	movlw	high (_ConnectionTable+12)
  7109  00154A  20F4               	addwfc	prodh,w,c
  7110  00154C  6EDA               	movwf	fsr2h,c
  7111  00154E  6ADF               	clrf	indf2,c
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;miwi_p2p.c: 693: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7115  001550  51B8               	movf	P2PTasks@i& (0+255),w,b
  7116  001552  0D0E               	mullw	14
  7117  001554  0E00               	movlw	low _ConnectionTable
  7118  001556  24F3               	addwf	prodl,w,c
  7119  001558  6E1E               	movwf	NVMWrite@source,c
  7120  00155A  0E03               	movlw	high _ConnectionTable
  7121  00155C  20F4               	addwfc	prodh,w,c
  7122  00155E  6E1F               	movwf	NVMWrite@source+1,c
  7123  001560  51B8               	movf	P2PTasks@i& (0+255),w,b
  7124  001562  0D0E               	mullw	14
  7125  001564  503F               	movf	_nvmConnectionTable,w,c
  7126  001566  24F3               	addwf	prodl,w,c
  7127  001568  6E20               	movwf	NVMWrite@addr,c
  7128  00156A  5040               	movf	_nvmConnectionTable+1,w,c
  7129  00156C  20F4               	addwfc	prodh,w,c
  7130  00156E  6E21               	movwf	NVMWrite@addr+1,c
  7131  001570  6A23               	clrf	NVMWrite@count+1,c
  7132  001572  0E0E               	movlw	14
  7133  001574  6E22               	movwf	NVMWrite@count,c
  7134  001576  EC3F  F013         	call	_NVMWrite	;wreg free
  7135                           
  7136                           ;miwi_p2p.c: 695: TxBuffer[TxData++] = 0x00;
  7137  00157A  0E38               	movlw	low _TxBuffer
  7138  00157C  0100               	movlb	0	; () banked
  7139  00157E  25E6               	addwf	_TxData& (0+255),w,b
  7140  001580  6ED9               	movwf	fsr2l,c
  7141  001582  6ADA               	clrf	fsr2h,c
  7142  001584  0E01               	movlw	high _TxBuffer
  7143  001586  22DA               	addwfc	fsr2h,f,c
  7144  001588  6ADF               	clrf	indf2,c
  7145                           
  7146                           ; BSR set to: 0
  7147  00158A  2BE6               	incf	_TxData& (0+255),f,b
  7148                           
  7149                           ;miwi_p2p.c: 697: break;
  7150  00158C  D005               	goto	l11697
  7151  00158E                     l11693:
  7152  00158E  0100               	movlb	0	; () banked
  7153  001590  2BB8               	incf	P2PTasks@i& (0+255),f,b
  7154                           
  7155                           ; BSR set to: 0
  7156  001592  0E09               	movlw	9
  7157  001594  65B8               	cpfsgt	P2PTasks@i& (0+255),b
  7158  001596  D7B8               	goto	l11681
  7159  001598                     l11697:
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;miwi_p2p.c: 698: }
  7163                           ;miwi_p2p.c: 699: }
  7164                           ;miwi_p2p.c: 700: }
  7165                           ;miwi_p2p.c: 702: MiMAC_DiscardPacket();
  7166  001598  EC8E  F01A         	call	_MiMAC_DiscardPacket	;wreg free
  7167                           
  7168                           ;miwi_p2p.c: 704: if( i == 10 )
  7169  00159C  0E0A               	movlw	10
  7170  00159E  0100               	movlb	0	; () banked
  7171  0015A0  19B8               	xorwf	P2PTasks@i& (0+255),w,b
  7172  0015A2  E109               	bnz	l11705
  7173                           
  7174                           ; BSR set to: 0
  7175                           ;miwi_p2p.c: 705: {
  7176                           ;miwi_p2p.c: 707: TxBuffer[TxData++] = 0xF0;
  7177  0015A4  0E38               	movlw	low _TxBuffer
  7178  0015A6  25E6               	addwf	_TxData& (0+255),w,b
  7179  0015A8  6ED9               	movwf	fsr2l,c
  7180  0015AA  6ADA               	clrf	fsr2h,c
  7181  0015AC  0E01               	movlw	high _TxBuffer
  7182  0015AE  22DA               	addwfc	fsr2h,f,c
  7183  0015B0  0EF0               	movlw	240
  7184  0015B2  6EDF               	movwf	indf2,c
  7185                           
  7186                           ; BSR set to: 0
  7187  0015B4  2BE6               	incf	_TxData& (0+255),f,b
  7188  0015B6                     l11705:
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;miwi_p2p.c: 708: }
  7192                           ;miwi_p2p.c: 717: SendPacket(0, rxMessage.SourcePANID, rxMessage.SourceAddress, 1, rxMes
      +                          sage.flags.bits.secEn);
  7193  0015B6  C0BA  F08F         	movff	_rxMessage+1,SendPacket@DestinationPANID
  7194  0015BA  C0BB  F090         	movff	_rxMessage+2,SendPacket@DestinationPANID+1
  7195  0015BE  C0BC  F091         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7196  0015C2  C0BD  F092         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7197  0015C6  0E01               	movlw	1
  7198  0015C8  6F93               	movwf	SendPacket@isCommand& (0+255),b
  7199  0015CA  0E00               	movlw	0
  7200  0015CC  B7B9               	btfsc	_rxMessage& (0+255),3,b
  7201  0015CE  0E01               	movlw	1
  7202  0015D0  6F94               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7203  0015D2  0E00               	movlw	0
  7204  0015D4  EC95  F012         	call	_SendPacket
  7205                           
  7206                           ;miwi_p2p.c: 723: }
  7207                           ;miwi_p2p.c: 724: break;
  7208  0015D8  D0F4               	goto	l507
  7209  0015DA                     l11707:
  7210                           
  7211                           ; BSR set to: 0
  7212                           ;miwi_p2p.c: 732: case 0x01:
  7213                           ;miwi_p2p.c: 734: if( myPANID.Val == 0xFFFF )
  7214  0015DA  29EB               	incf	_myPANID& (0+255),w,b
  7215  0015DC  E11A               	bnz	l11713
  7216  0015DE  29EC               	incf	(_myPANID+1)& (0+255),w,b
  7217  0015E0  A4D8               	btfss	status,2,c
  7218  0015E2  D017               	goto	l11713
  7219                           
  7220                           ; BSR set to: 0
  7221                           ;miwi_p2p.c: 735: {
  7222                           ;miwi_p2p.c: 736: myPANID.Val = rxMessage.SourcePANID.Val;
  7223  0015E4  C0BA  F0EB         	movff	_rxMessage+1,_myPANID
  7224  0015E8  C0BB  F0EC         	movff	_rxMessage+2,_myPANID+1
  7225                           
  7226                           ;miwi_p2p.c: 737: {
  7227                           ;miwi_p2p.c: 738: uint16_t tmp = 0xFFFF;
  7228  0015EC  69B1               	setf	P2PTasks@tmp& (0+255),b
  7229  0015EE  69B2               	setf	(P2PTasks@tmp+1)& (0+255),b
  7230                           
  7231                           ; BSR set to: 0
  7232                           ;miwi_p2p.c: 739: MiMAC_SetAltAddress((uint8_t *)&tmp, (uint8_t *)&myPANID.Val);
  7233  0015F0  0EEB               	movlw	low _myPANID
  7234  0015F2  6E21               	movwf	MiMAC_SetAltAddress@PANID,c
  7235  0015F4  0EB1               	movlw	P2PTasks@tmp& (0+255)
  7236  0015F6  ECD6  F016         	call	_MiMAC_SetAltAddress
  7237                           
  7238                           ;miwi_p2p.c: 740: }
  7239                           ;miwi_p2p.c: 742: NVMWrite((uint8_t *)myPANID.v, nvmMyPANID, 2);
  7240  0015FA  0EEB               	movlw	low _myPANID
  7241  0015FC  6E1E               	movwf	NVMWrite@source,c
  7242  0015FE  6A1F               	clrf	NVMWrite@source+1,c
  7243  001600  C0F3  F020         	movff	_nvmMyPANID,NVMWrite@addr
  7244  001604  C0F4  F021         	movff	_nvmMyPANID+1,NVMWrite@addr+1
  7245  001608  6A23               	clrf	NVMWrite@count+1,c
  7246  00160A  0E02               	movlw	2
  7247  00160C  6E22               	movwf	NVMWrite@count,c
  7248  00160E  EC3F  F013         	call	_NVMWrite	;wreg free
  7249  001612                     l11713:
  7250                           
  7251                           ;miwi_p2p.c: 744: }
  7252                           ;miwi_p2p.c: 746: AddConnection();
  7253  001612  EC74  F00F         	call	_AddConnection	;wreg free
  7254                           
  7255                           ;miwi_p2p.c: 748: myConnectionIndex_in_PanCo = rxMessage.Payload[2];
  7256  001616  0100               	movlb	0	; () banked
  7257  001618  EE20 F002          	lfsr	2,2
  7258  00161C  51BE               	movf	(_rxMessage+5)& (0+255),w,b
  7259  00161E  26D9               	addwf	fsr2l,f,c
  7260  001620  51BF               	movf	(_rxMessage+6)& (0+255),w,b
  7261  001622  22DA               	addwfc	fsr2h,f,c
  7262  001624  50DF               	movf	indf2,w,c
  7263  001626  6FFC               	movwf	_myConnectionIndex_in_PanCo& (0+255),b
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;miwi_p2p.c: 749: NVMWrite((uint8_t *)&myConnectionIndex_in_PanCo, nvmmyIndex, 1);
  7267  001628  0EFC               	movlw	low _myConnectionIndex_in_PanCo
  7268  00162A  6E1E               	movwf	NVMWrite@source,c
  7269  00162C  6A1F               	clrf	NVMWrite@source+1,c
  7270  00162E  C0F9  F020         	movff	_nvmmyIndex,NVMWrite@addr
  7271  001632  C0FA  F021         	movff	_nvmmyIndex+1,NVMWrite@addr+1
  7272  001636  6A23               	clrf	NVMWrite@count+1,c
  7273  001638  0E01               	movlw	1
  7274  00163A  6E22               	movwf	NVMWrite@count,c
  7275  00163C  EC3F  F013         	call	_NVMWrite	;wreg free
  7276                           
  7277                           ;miwi_p2p.c: 753: P2PStatus.bits.SaveConnection = 1;
  7278  001640  0100               	movlb	0	; () banked
  7279  001642  83E3               	bsf	_P2PStatus& (0+255),1,b	;volatile
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;miwi_p2p.c: 754: nvmDelayTick = MiWi_TickGet();
  7283  001644  EC54  F017         	call	_MiWi_TickGet	;wreg free
  7284  001648  C01D  F0CB         	movff	?_MiWi_TickGet,_nvmDelayTick
  7285  00164C  C01E  F0CC         	movff	?_MiWi_TickGet+1,_nvmDelayTick+1
  7286  001650  C01F  F0CD         	movff	?_MiWi_TickGet+2,_nvmDelayTick+2
  7287  001654  C020  F0CE         	movff	?_MiWi_TickGet+3,_nvmDelayTick+3
  7288                           
  7289                           ;miwi_p2p.c: 756: break;
  7290  001658  D703               	goto	l11633
  7291  00165A                     l11725:
  7292                           
  7293                           ; BSR set to: 0
  7294  00165A  EE20 F001          	lfsr	2,1
  7295  00165E  51BE               	movf	(_rxMessage+5)& (0+255),w,b
  7296  001660  26D9               	addwf	fsr2l,f,c
  7297  001662  51BF               	movf	(_rxMessage+6)& (0+255),w,b
  7298  001664  22DA               	addwfc	fsr2h,f,c
  7299  001666  50DF               	movf	indf2,w,c
  7300                           
  7301                           ; Switch size 1, requested type "speed"
  7302                           ; Number of cases is 2, Range of values is 0 to 1
  7303                           ; switch strategies available:
  7304                           ; Name         Instructions Cycles
  7305                           ; simple_byte            7     4 (average)
  7306                           ;	Chosen strategy is simple_byte
  7307  001668  E0B8               	bz	l11707
  7308  00166A  0A01               	xorlw	1	; case 1
  7309  00166C  E0B6               	bz	l11707
  7310  00166E  D6F8               	goto	l11633
  7311  001670                     l487:
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;miwi_p2p.c: 766: {
  7315                           ;miwi_p2p.c: 767: if( P2PStatus.bits.Resync )
  7316  001670  BBE3               	btfsc	_P2PStatus& (0+255),5,b	;volatile
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;miwi_p2p.c: 768: {
  7320                           ;miwi_p2p.c: 769: P2PStatus.bits.Resync = 0;
  7321  001672  9BE3               	bcf	_P2PStatus& (0+255),5,b	;volatile
  7322  001674  D6F5               	goto	l11633
  7323  001676                     l11733:
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;miwi_p2p.c: 817: {
  7327                           ;miwi_p2p.c: 818: if( rxMessage.Payload[1] == 0x00 )
  7328  001676  EE20 F001          	lfsr	2,1
  7329  00167A  51BE               	movf	(_rxMessage+5)& (0+255),w,b
  7330  00167C  26D9               	addwf	fsr2l,f,c
  7331  00167E  51BF               	movf	(_rxMessage+6)& (0+255),w,b
  7332  001680  22DA               	addwfc	fsr2h,f,c
  7333  001682  50DF               	movf	indf2,w,c
  7334  001684  E001 D6EC          	bnz	l11633
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;miwi_p2p.c: 819: {
  7338                           ;miwi_p2p.c: 820: for(i = 0; i < 10; i++)
  7339  001688  6BB8               	clrf	P2PTasks@i& (0+255),b
  7340  00168A                     l11741:
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;miwi_p2p.c: 821: {
  7344                           ;miwi_p2p.c: 823: if( ConnectionTable[i].status.bits.isValid )
  7345  00168A  51B8               	movf	P2PTasks@i& (0+255),w,b
  7346  00168C  0D0E               	mullw	14
  7347  00168E  0E0C               	movlw	low (_ConnectionTable+12)
  7348  001690  24F3               	addwf	prodl,w,c
  7349  001692  6ED9               	movwf	fsr2l,c
  7350  001694  0E03               	movlw	high (_ConnectionTable+12)
  7351  001696  20F4               	addwfc	prodh,w,c
  7352  001698  6EDA               	movwf	fsr2h,c
  7353  00169A  AEDF               	btfss	indf2,7,c
  7354  00169C  D030               	goto	l11749
  7355                           
  7356                           ; BSR set to: 3
  7357                           ;miwi_p2p.c: 824: {
  7358                           ;miwi_p2p.c: 826: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7359  00169E  C0BC  F01D         	movff	_rxMessage+3,isSameAddress@Address1
  7360  0016A2  C0BD  F01E         	movff	_rxMessage+4,isSameAddress@Address1+1
  7361  0016A6  0100               	movlb	0	; () banked
  7362  0016A8  51B8               	movf	P2PTasks@i& (0+255),w,b
  7363  0016AA  0D0E               	mullw	14
  7364  0016AC  0E04               	movlw	low (_ConnectionTable+4)
  7365  0016AE  24F3               	addwf	prodl,w,c
  7366  0016B0  6E1F               	movwf	isSameAddress@Address2,c
  7367  0016B2  0E03               	movlw	high (_ConnectionTable+4)
  7368  0016B4  20F4               	addwfc	prodh,w,c
  7369  0016B6  6E20               	movwf	isSameAddress@Address2+1,c
  7370  0016B8  ECAA  F019         	call	_isSameAddress	;wreg free
  7371  0016BC  0900               	iorlw	0
  7372  0016BE  E01F               	bz	l11749
  7373                           
  7374                           ; BSR set to: 0
  7375                           ;miwi_p2p.c: 827: {
  7376                           ;miwi_p2p.c: 829: ConnectionTable[i].status.Val = 0;
  7377  0016C0  51B8               	movf	P2PTasks@i& (0+255),w,b
  7378  0016C2  0D0E               	mullw	14
  7379  0016C4  0E0C               	movlw	low (_ConnectionTable+12)
  7380  0016C6  24F3               	addwf	prodl,w,c
  7381  0016C8  6ED9               	movwf	fsr2l,c
  7382  0016CA  0E03               	movlw	high (_ConnectionTable+12)
  7383  0016CC  20F4               	addwfc	prodh,w,c
  7384  0016CE  6EDA               	movwf	fsr2h,c
  7385  0016D0  6ADF               	clrf	indf2,c
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;miwi_p2p.c: 831: NVMWrite((uint8_t *)&(ConnectionTable[i]), nvmConnectionTable+((uint16
      +                          _t)i * sizeof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7389  0016D2  51B8               	movf	P2PTasks@i& (0+255),w,b
  7390  0016D4  0D0E               	mullw	14
  7391  0016D6  0E00               	movlw	low _ConnectionTable
  7392  0016D8  24F3               	addwf	prodl,w,c
  7393  0016DA  6E1E               	movwf	NVMWrite@source,c
  7394  0016DC  0E03               	movlw	high _ConnectionTable
  7395  0016DE  20F4               	addwfc	prodh,w,c
  7396  0016E0  6E1F               	movwf	NVMWrite@source+1,c
  7397  0016E2  51B8               	movf	P2PTasks@i& (0+255),w,b
  7398  0016E4  0D0E               	mullw	14
  7399  0016E6  503F               	movf	_nvmConnectionTable,w,c
  7400  0016E8  24F3               	addwf	prodl,w,c
  7401  0016EA  6E20               	movwf	NVMWrite@addr,c
  7402  0016EC  5040               	movf	_nvmConnectionTable+1,w,c
  7403  0016EE  20F4               	addwfc	prodh,w,c
  7404  0016F0  6E21               	movwf	NVMWrite@addr+1,c
  7405  0016F2  6A23               	clrf	NVMWrite@count+1,c
  7406  0016F4  0E0E               	movlw	14
  7407  0016F6  6E22               	movwf	NVMWrite@count,c
  7408  0016F8  EC3F  F013         	call	_NVMWrite	;wreg free
  7409                           
  7410                           ;miwi_p2p.c: 833: break;
  7411  0016FC  D6B1               	goto	l11633
  7412  0016FE                     l11749:
  7413  0016FE  0100               	movlb	0	; () banked
  7414  001700  2BB8               	incf	P2PTasks@i& (0+255),f,b
  7415                           
  7416                           ; BSR set to: 0
  7417  001702  0E09               	movlw	9
  7418  001704  65B8               	cpfsgt	P2PTasks@i& (0+255),b
  7419  001706  D7C1               	goto	l11741
  7420  001708  D6AB               	goto	l11633
  7421  00170A                     l11755:
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;miwi_p2p.c: 1016: {
  7425                           ;miwi_p2p.c: 1017: if (!role)
  7426  00170A  5043               	movf	_role,w,c
  7427  00170C  E001 D6A8          	bnz	l11633
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;miwi_p2p.c: 1018: {
  7431                           ;miwi_p2p.c: 1019: rec_ack = 1;
  7432  001710  0E01               	movlw	1
  7433  001712  6FEA               	movwf	_rec_ack& (0+255),b
  7434  001714  D6A5               	goto	l11633
  7435  001716                     l11763:
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;miwi_p2p.c: 1029: {
  7439                           ;miwi_p2p.c: 1030: if (!role)
  7440  001716  5043               	movf	_role,w,c
  7441  001718  E001 D6A2          	bnz	l11633
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;miwi_p2p.c: 1031: {
  7445                           ;miwi_p2p.c: 1033: end_nodes = rxMessage.Payload[1]-1;
  7446  00171C  EE20 F001          	lfsr	2,1
  7447  001720  51BE               	movf	(_rxMessage+5)& (0+255),w,b
  7448  001722  26D9               	addwf	fsr2l,f,c
  7449  001724  51BF               	movf	(_rxMessage+6)& (0+255),w,b
  7450  001726  22DA               	addwfc	fsr2h,f,c
  7451  001728  50DF               	movf	indf2,w,c
  7452  00172A  6FAC               	movwf	??_P2PTasks& (0+255),b
  7453  00172C  05AC               	decf	??_P2PTasks& (0+255),w,b
  7454  00172E  6E2C               	movwf	_end_nodes,c
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;miwi_p2p.c: 1034: store_connection_tb(rxMessage.Payload);
  7458  001730  C0BE  F024         	movff	_rxMessage+5,store_connection_tb@payload
  7459  001734  C0BF  F025         	movff	_rxMessage+6,store_connection_tb@payload+1
  7460  001738  EC52  F011         	call	_store_connection_tb	;wreg free
  7461  00173C  D691               	goto	l11633
  7462  00173E                     l11773:
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;miwi_p2p.c: 1043: {
  7466                           ;miwi_p2p.c: 1044: if (role)
  7467  00173E  5043               	movf	_role,w,c
  7468  001740  E101 D68E          	bz	l11633
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;miwi_p2p.c: 1045: {
  7472                           ;miwi_p2p.c: 1047: uint8_t final_index;
  7473                           ;miwi_p2p.c: 1048: final_index = Find_Index(rxMessage.Payload);
  7474  001744  C0BE  F01D         	movff	_rxMessage+5,Find_Index@DestAddr
  7475  001748  C0BF  F01E         	movff	_rxMessage+6,Find_Index@DestAddr+1
  7476  00174C  EC8C  F013         	call	_Find_Index	;wreg free
  7477  001750  0100               	movlb	0	; () banked
  7478  001752  6FB3               	movwf	P2PTasks@final_index& (0+255),b
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;miwi_p2p.c: 1049: if (final_index != 0xFF)
  7482  001754  29B3               	incf	P2PTasks@final_index& (0+255),w,b
  7483  001756  E00D               	bz	l11781
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;miwi_p2p.c: 1050: {
  7487                           ;miwi_p2p.c: 1051: FW_Stat = Forward_Packet_PANCr_to_EDy (rxMessage.Payload , final_inde
      +                          x , rxMessage.SourceAddress);
  7488  001758  C0BE  F0A5         	movff	_rxMessage+5,Forward_Packet_PANCr_to_EDy@fw_payload
  7489  00175C  C0BF  F0A6         	movff	_rxMessage+6,Forward_Packet_PANCr_to_EDy@fw_payload+1
  7490  001760  C0B3  F0A7         	movff	P2PTasks@final_index,Forward_Packet_PANCr_to_EDy@index
  7491  001764  C0BC  F0A8         	movff	_rxMessage+3,Forward_Packet_PANCr_to_EDy@EDxAddress
  7492  001768  C0BD  F0A9         	movff	_rxMessage+4,Forward_Packet_PANCr_to_EDy@EDxAddress+1
  7493  00176C  ECF1  F012         	call	_Forward_Packet_PANCr_to_EDy	;wreg free
  7494  001770  6FB0               	movwf	P2PTasks@FW_Stat& (0+255),b
  7495  001772                     l11781:
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;miwi_p2p.c: 1052: }
  7499                           ;miwi_p2p.c: 1054: if (FW_Stat)
  7500  001772  51B0               	movf	P2PTasks@FW_Stat& (0+255),w,b
  7501  001774  E101 D674          	bz	l11633
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;miwi_p2p.c: 1055: {
  7505                           ;miwi_p2p.c: 1056: SW_Ack_SrED (rxMessage.SourceAddress);
  7506  001778  C0BC  F09F         	movff	_rxMessage+3,SW_Ack_SrED@Dest_Addr
  7507  00177C  C0BD  F0A0         	movff	_rxMessage+4,SW_Ack_SrED@Dest_Addr+1
  7508  001780  EC4D  F019         	call	_SW_Ack_SrED	;wreg free
  7509  001784  D66D               	goto	l11633
  7510  001786                     l11791:
  7511                           
  7512                           ; BSR set to: 0
  7513  001786  C0BE  FFD9         	movff	_rxMessage+5,fsr2l
  7514  00178A  C0BF  FFDA         	movff	_rxMessage+6,fsr2h
  7515  00178E  50DF               	movf	indf2,w,c
  7516                           
  7517                           ; Switch size 1, requested type "speed"
  7518                           ; Number of cases is 9, Range of values is 119 to 218
  7519                           ; switch strategies available:
  7520                           ; Name         Instructions Cycles
  7521                           ; simple_byte           28    15 (average)
  7522                           ;	Chosen strategy is simple_byte
  7523  001790  0A77               	xorlw	119	; case 119
  7524  001792  E0C1               	bz	l11763
  7525  001794  0AF6               	xorlw	246	; case 129
  7526  001796  E101 D663          	bz	l11633
  7527  00179A  0A03               	xorlw	3	; case 130
  7528  00179C  E101 D6A9          	bz	l474
  7529  0017A0  0A05               	xorlw	5	; case 135
  7530  0017A2  E101 D660          	bz	l11639
  7531  0017A6  0A16               	xorlw	22	; case 145
  7532  0017A8  E101 D757          	bz	l11725
  7533  0017AC  0A03               	xorlw	3	; case 146
  7534  0017AE  E101 D762          	bz	l11733
  7535  0017B2  0A05               	xorlw	5	; case 151
  7536  0017B4  E101 D75C          	bz	l487
  7537  0017B8  0A5B               	xorlw	91	; case 204
  7538  0017BA  E0C1               	bz	l11773
  7539  0017BC  0A16               	xorlw	22	; case 218
  7540  0017BE  E0A5               	bz	l11755
  7541  0017C0                     l463:
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;miwi_p2p.c: 1101: else
  7545                           ;miwi_p2p.c: 1102: {
  7546                           ;miwi_p2p.c: 1103: P2PStatus.bits.RxHasUserData = 1;
  7547  0017C0  87E3               	bsf	_P2PStatus& (0+255),3,b	;volatile
  7548  0017C2                     l507:
  7549                           
  7550                           ;miwi_p2p.c: 1104: }
  7551                           ;miwi_p2p.c: 1107: if( P2PStatus.bits.DataRequesting && P2PStatus.bits.RxHasUserData )
  7552  0017C2  0100               	movlb	0	; () banked
  7553  0017C4  B5E3               	btfsc	_P2PStatus& (0+255),2,b	;volatile
  7554                           
  7555                           ; BSR set to: 0
  7556  0017C6  A7E3               	btfss	_P2PStatus& (0+255),3,b	;volatile
  7557  0017C8  D001               	goto	l11797
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;miwi_p2p.c: 1108: {
  7561                           ;miwi_p2p.c: 1109: P2PStatus.bits.DataRequesting = 0;
  7562  0017CA  95E3               	bcf	_P2PStatus& (0+255),2,b	;volatile
  7563  0017CC                     l11797:
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;miwi_p2p.c: 1110: }
  7567                           ;miwi_p2p.c: 1113: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
  7568  0017CC  51C0               	movf	(_rxMessage+7)& (0+255),w,b
  7569  0017CE  A4D8               	btfss	status,2,c
  7570                           
  7571                           ; BSR set to: 0
  7572  0017D0  B9E3               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  7573  0017D2  D002               	goto	l511
  7574                           
  7575                           ; BSR set to: 0
  7576  0017D4  ABE3               	btfss	_P2PStatus& (0+255),5,b	;volatile
  7577  0017D6  0012               	return	
  7578  0017D8                     l511:
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;miwi_p2p.c: 1114: {
  7582                           ;miwi_p2p.c: 1115: P2PStatus.bits.RxHasUserData = 0;
  7583  0017D8  97E3               	bcf	_P2PStatus& (0+255),3,b	;volatile
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;miwi_p2p.c: 1116: MiMAC_DiscardPacket();
  7587  0017DA  EF8E  F01A         	goto	_MiMAC_DiscardPacket	;wreg free
  7588  0017DE                     __end_of_P2PTasks:
  7589                           	opt stack 0
  7590                           tblptru	equ	0xFF8
  7591                           tblptrh	equ	0xFF7
  7592                           tblptrl	equ	0xFF6
  7593                           tablat	equ	0xFF5
  7594                           prodh	equ	0xFF4
  7595                           prodl	equ	0xFF3
  7596                           intcon	equ	0xFF2
  7597                           intcon2	equ	0xFF1
  7598                           intcon3	equ	0xFF0
  7599                           postinc0	equ	0xFEE
  7600                           wreg	equ	0xFE8
  7601                           indf1	equ	0xFE7
  7602                           fsr1h	equ	0xFE2
  7603                           fsr1l	equ	0xFE1
  7604                           indf2	equ	0xFDF
  7605                           postinc2	equ	0xFDE
  7606                           postdec2	equ	0xFDD
  7607                           fsr2h	equ	0xFDA
  7608                           fsr2l	equ	0xFD9
  7609                           status	equ	0xFD8
  7610                           
  7611 ;; *************** function _store_connection_tb *****************
  7612 ;; Defined at:
  7613 ;;		line 150 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7614 ;; Parameters:    Size  Location     Type
  7615 ;;  payload         2   35[COMRAM] PTR unsigned char 
  7616 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  i               1    3[BANK0 ] unsigned char 
  7619 ;;  j               1    2[BANK0 ] unsigned char 
  7620 ;;  connections_    1    0        unsigned char 
  7621 ;;  k               1    0        unsigned char 
  7622 ;; Return value:  Size  Location     Type
  7623 ;;		None               void
  7624 ;; Registers used:
  7625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7626 ;; Tracked objects:
  7627 ;;		On entry : F/0
  7628 ;;		On exit  : E/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7632 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7633 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7634 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7635 ;;Total ram usage:        6 bytes
  7636 ;; Hardware stack levels used:    1
  7637 ;; Hardware stack levels required when called:    5
  7638 ;; This function calls:
  7639 ;;		_handle_lost_connection
  7640 ;; This function is called by:
  7641 ;;		_P2PTasks
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text28
  7646  0022A4                     __ptext28:
  7647                           	opt stack 0
  7648  0022A4                     _store_connection_tb:
  7649                           	opt stack 20
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;miwi_p2p.c: 154: for (i=4; i < 40; i++)
  7653                           
  7654                           ;incstack = 0
  7655  0022A4  0E04               	movlw	4
  7656  0022A6  6F63               	movwf	store_connection_tb@i& (0+255),b
  7657  0022A8                     l11457:
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;miwi_p2p.c: 155: {
  7661                           ;miwi_p2p.c: 156: if (i % 4 == 0 && (i+3) < 40)
  7662  0022A8  C063  F060         	movff	store_connection_tb@i,??_store_connection_tb
  7663  0022AC  0E03               	movlw	3
  7664  0022AE  1760               	andwf	??_store_connection_tb& (0+255),f,b
  7665  0022B0  E162               	bnz	l11471
  7666                           
  7667                           ; BSR set to: 0
  7668  0022B2  5163               	movf	store_connection_tb@i& (0+255),w,b
  7669  0022B4  6F60               	movwf	??_store_connection_tb& (0+255),b
  7670  0022B6  6B61               	clrf	(??_store_connection_tb+1)& (0+255),b
  7671  0022B8  0E03               	movlw	3
  7672  0022BA  2760               	addwf	??_store_connection_tb& (0+255),f,b
  7673  0022BC  0E00               	movlw	0
  7674  0022BE  2361               	addwfc	(??_store_connection_tb+1)& (0+255),f,b
  7675  0022C0  BF61               	btfsc	(??_store_connection_tb+1)& (0+255),7,b
  7676  0022C2  D006               	goto	l11461
  7677  0022C4  5161               	movf	(??_store_connection_tb+1)& (0+255),w,b
  7678  0022C6  E157               	bnz	l11471
  7679  0022C8  0E28               	movlw	40
  7680  0022CA  5D60               	subwf	??_store_connection_tb& (0+255),w,b
  7681  0022CC  B0D8               	btfsc	status,0,c
  7682  0022CE  D053               	goto	l11471
  7683  0022D0                     l11461:
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;miwi_p2p.c: 157: {
  7687                           ;miwi_p2p.c: 158: j = payload[i+3];
  7688  0022D0  5163               	movf	store_connection_tb@i& (0+255),w,b
  7689  0022D2  2424               	addwf	store_connection_tb@payload,w,c
  7690  0022D4  6F60               	movwf	??_store_connection_tb& (0+255),b
  7691  0022D6  0E00               	movlw	0
  7692  0022D8  2025               	addwfc	store_connection_tb@payload+1,w,c
  7693  0022DA  6F61               	movwf	(??_store_connection_tb+1)& (0+255),b
  7694  0022DC  0E03               	movlw	3
  7695  0022DE  2560               	addwf	??_store_connection_tb& (0+255),w,b
  7696  0022E0  6ED9               	movwf	fsr2l,c
  7697  0022E2  0E00               	movlw	0
  7698  0022E4  2161               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  7699  0022E6  6EDA               	movwf	fsr2h,c
  7700  0022E8  50DF               	movf	indf2,w,c
  7701  0022EA  6F62               	movwf	store_connection_tb@j& (0+255),b
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;miwi_p2p.c: 159: END_DEVICES_Short_Address[j].connection_slot = j;
  7705  0022EC  5162               	movf	store_connection_tb@j& (0+255),w,b
  7706  0022EE  0D04               	mullw	4
  7707  0022F0  0E13               	movlw	low (_END_DEVICES_Short_Address+3)
  7708  0022F2  24F3               	addwf	prodl,w,c
  7709  0022F4  6ED9               	movwf	fsr2l,c
  7710  0022F6  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  7711  0022F8  20F4               	addwfc	prodh,w,c
  7712  0022FA  6EDA               	movwf	fsr2h,c
  7713  0022FC  C062  FFDF         	movff	store_connection_tb@j,indf2
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;miwi_p2p.c: 160: END_DEVICES_Short_Address[j].Address[0] = payload[i];
  7717  002300  5163               	movf	store_connection_tb@i& (0+255),w,b
  7718  002302  2424               	addwf	store_connection_tb@payload,w,c
  7719  002304  6ED9               	movwf	fsr2l,c
  7720  002306  0E00               	movlw	0
  7721  002308  2025               	addwfc	store_connection_tb@payload+1,w,c
  7722  00230A  6EDA               	movwf	fsr2h,c
  7723  00230C  5162               	movf	store_connection_tb@j& (0+255),w,b
  7724  00230E  0D04               	mullw	4
  7725  002310  0E10               	movlw	low _END_DEVICES_Short_Address
  7726  002312  24F3               	addwf	prodl,w,c
  7727  002314  6EE1               	movwf	fsr1l,c
  7728  002316  0E01               	movlw	high _END_DEVICES_Short_Address
  7729  002318  20F4               	addwfc	prodh,w,c
  7730  00231A  6EE2               	movwf	fsr1h,c
  7731  00231C  CFDF FFE7          	movff	indf2,indf1
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;miwi_p2p.c: 161: END_DEVICES_Short_Address[j].Address[1] = payload[i+1];
  7735  002320  5163               	movf	store_connection_tb@i& (0+255),w,b
  7736  002322  2424               	addwf	store_connection_tb@payload,w,c
  7737  002324  6F60               	movwf	??_store_connection_tb& (0+255),b
  7738  002326  0E00               	movlw	0
  7739  002328  2025               	addwfc	store_connection_tb@payload+1,w,c
  7740  00232A  6F61               	movwf	(??_store_connection_tb+1)& (0+255),b
  7741  00232C  2960               	incf	??_store_connection_tb& (0+255),w,b
  7742  00232E  6ED9               	movwf	fsr2l,c
  7743  002330  0E00               	movlw	0
  7744  002332  2161               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  7745  002334  6EDA               	movwf	fsr2h,c
  7746  002336  5162               	movf	store_connection_tb@j& (0+255),w,b
  7747  002338  0D04               	mullw	4
  7748  00233A  0E11               	movlw	low (_END_DEVICES_Short_Address+1)
  7749  00233C  24F3               	addwf	prodl,w,c
  7750  00233E  6EE1               	movwf	fsr1l,c
  7751  002340  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  7752  002342  20F4               	addwfc	prodh,w,c
  7753  002344  6EE2               	movwf	fsr1h,c
  7754  002346  CFDF FFE7          	movff	indf2,indf1
  7755                           
  7756                           ; BSR set to: 0
  7757                           ;miwi_p2p.c: 162: END_DEVICES_Short_Address[j].Address[2] = payload[i+2];
  7758  00234A  5163               	movf	store_connection_tb@i& (0+255),w,b
  7759  00234C  2424               	addwf	store_connection_tb@payload,w,c
  7760  00234E  6F60               	movwf	??_store_connection_tb& (0+255),b
  7761  002350  0E00               	movlw	0
  7762  002352  2025               	addwfc	store_connection_tb@payload+1,w,c
  7763  002354  6F61               	movwf	(??_store_connection_tb+1)& (0+255),b
  7764  002356  0E02               	movlw	2
  7765  002358  2560               	addwf	??_store_connection_tb& (0+255),w,b
  7766  00235A  6ED9               	movwf	fsr2l,c
  7767  00235C  0E00               	movlw	0
  7768  00235E  2161               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  7769  002360  6EDA               	movwf	fsr2h,c
  7770  002362  5162               	movf	store_connection_tb@j& (0+255),w,b
  7771  002364  0D04               	mullw	4
  7772  002366  0E12               	movlw	low (_END_DEVICES_Short_Address+2)
  7773  002368  24F3               	addwf	prodl,w,c
  7774  00236A  6EE1               	movwf	fsr1l,c
  7775  00236C  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  7776  00236E  20F4               	addwfc	prodh,w,c
  7777  002370  6EE2               	movwf	fsr1h,c
  7778  002372  CFDF FFE7          	movff	indf2,indf1
  7779  002376                     l11471:
  7780                           
  7781                           ; BSR set to: 0
  7782  002376  2B63               	incf	store_connection_tb@i& (0+255),f,b
  7783                           
  7784                           ; BSR set to: 0
  7785  002378  0E27               	movlw	39
  7786  00237A  6563               	cpfsgt	store_connection_tb@i& (0+255),b
  7787  00237C  D795               	goto	l11457
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;miwi_p2p.c: 165: }
  7791                           ;miwi_p2p.c: 168: }
  7792                           ;miwi_p2p.c: 169: handle_lost_connection();
  7793  00237E  ECA6  F016         	call	_handle_lost_connection	;wreg free
  7794  002382  0012               	return		;funcret
  7795  002384                     __end_of_store_connection_tb:
  7796                           	opt stack 0
  7797                           tblptru	equ	0xFF8
  7798                           tblptrh	equ	0xFF7
  7799                           tblptrl	equ	0xFF6
  7800                           tablat	equ	0xFF5
  7801                           prodh	equ	0xFF4
  7802                           prodl	equ	0xFF3
  7803                           intcon	equ	0xFF2
  7804                           intcon2	equ	0xFF1
  7805                           intcon3	equ	0xFF0
  7806                           postinc0	equ	0xFEE
  7807                           wreg	equ	0xFE8
  7808                           indf1	equ	0xFE7
  7809                           fsr1h	equ	0xFE2
  7810                           fsr1l	equ	0xFE1
  7811                           indf2	equ	0xFDF
  7812                           postinc2	equ	0xFDE
  7813                           postdec2	equ	0xFDD
  7814                           fsr2h	equ	0xFDA
  7815                           fsr2l	equ	0xFD9
  7816                           status	equ	0xFD8
  7817                           
  7818 ;; *************** function _handle_lost_connection *****************
  7819 ;; Defined at:
  7820 ;;		line 127 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  i               1   34[COMRAM] unsigned char 
  7825 ;;  stat            1    0        unsigned char 
  7826 ;; Return value:  Size  Location     Type
  7827 ;;		None               void
  7828 ;; Registers used:
  7829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7830 ;; Tracked objects:
  7831 ;;		On entry : F/0
  7832 ;;		On exit  : E/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7837 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7838 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7839 ;;Total ram usage:        7 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; Hardware stack levels required when called:    4
  7842 ;; This function calls:
  7843 ;;		Nothing
  7844 ;; This function is called by:
  7845 ;;		_store_connection_tb
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text29
  7850  002D4C                     __ptext29:
  7851                           	opt stack 0
  7852  002D4C                     _handle_lost_connection:
  7853                           	opt stack 20
  7854                           
  7855                           ; BSR set to: 0
  7856                           ;miwi_p2p.c: 131: if (!role)
  7857                           
  7858                           ; BSR set to: 0
  7859                           
  7860                           ;incstack = 0
  7861  002D4C  5043               	movf	_role,w,c
  7862  002D4E  A4D8               	btfss	status,2,c
  7863  002D50  0012               	return	
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;miwi_p2p.c: 132: {
  7867                           ;miwi_p2p.c: 133: for (i=0;i<end_nodes+1;i++)
  7868  002D52  6A23               	clrf	handle_lost_connection@i,c
  7869  002D54  D017               	goto	l11211
  7870  002D56                     l11203:
  7871                           
  7872                           ;miwi_p2p.c: 134: {
  7873                           ;miwi_p2p.c: 135: if (myLongAddress[0] == END_DEVICES_Short_Address[i].Address[0] && myL
      +                          ongAddress[1] == END_DEVICES_Short_Address[i].Address[1])
  7874  002D56  5023               	movf	handle_lost_connection@i,w,c
  7875  002D58  0D04               	mullw	4
  7876  002D5A  0E10               	movlw	low _END_DEVICES_Short_Address
  7877  002D5C  24F3               	addwf	prodl,w,c
  7878  002D5E  6ED9               	movwf	fsr2l,c
  7879  002D60  0E01               	movlw	high _END_DEVICES_Short_Address
  7880  002D62  20F4               	addwfc	prodh,w,c
  7881  002D64  6EDA               	movwf	fsr2h,c
  7882  002D66  0101               	movlb	1	; () banked
  7883  002D68  5160               	movf	_myLongAddress& (0+255),w,b
  7884  002D6A  18DE               	xorwf	postinc2,w,c
  7885  002D6C  E10A               	bnz	l11209
  7886                           
  7887                           ; BSR set to: 1
  7888  002D6E  5023               	movf	handle_lost_connection@i,w,c
  7889  002D70  0D04               	mullw	4
  7890  002D72  0E11               	movlw	low (_END_DEVICES_Short_Address+1)
  7891  002D74  24F3               	addwf	prodl,w,c
  7892  002D76  6ED9               	movwf	fsr2l,c
  7893  002D78  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  7894  002D7A  20F4               	addwfc	prodh,w,c
  7895  002D7C  6EDA               	movwf	fsr2h,c
  7896  002D7E  50DE               	movf	postinc2,w,c
  7897  002D80  D000               	goto	l11209
  7898  002D82                     l11209:
  7899                           
  7900                           ; BSR set to: 1
  7901  002D82  2A23               	incf	handle_lost_connection@i,f,c
  7902  002D84                     l11211:
  7903  002D84  502C               	movf	_end_nodes,w,c
  7904  002D86  6E1D               	movwf	??_handle_lost_connection& (0+255),c
  7905  002D88  6A1E               	clrf	(??_handle_lost_connection+1)& (0+255),c
  7906  002D8A  2A1D               	incf	??_handle_lost_connection,f,c
  7907  002D8C  0E00               	movlw	0
  7908  002D8E  221E               	addwfc	??_handle_lost_connection+1,f,c
  7909  002D90  5023               	movf	handle_lost_connection@i,w,c
  7910  002D92  6E1F               	movwf	(??_handle_lost_connection+2)& (0+255),c
  7911  002D94  6A20               	clrf	(??_handle_lost_connection+3)& (0+255),c
  7912  002D96  501D               	movf	??_handle_lost_connection,w,c
  7913  002D98  5C1F               	subwf	??_handle_lost_connection+2,w,c
  7914  002D9A  5020               	movf	??_handle_lost_connection+3,w,c
  7915  002D9C  0A80               	xorlw	128
  7916  002D9E  6E21               	movwf	(??_handle_lost_connection+4)& (0+255),c
  7917  002DA0  501E               	movf	??_handle_lost_connection+1,w,c
  7918  002DA2  0A80               	xorlw	128
  7919  002DA4  5821               	subwfb	(??_handle_lost_connection+4)& (0+255),w,c
  7920  002DA6  B0D8               	btfsc	status,0,c
  7921  002DA8  0012               	return	
  7922  002DAA  D7D5               	goto	l11203
  7923  002DAC                     __end_of_handle_lost_connection:
  7924                           	opt stack 0
  7925                           tblptru	equ	0xFF8
  7926                           tblptrh	equ	0xFF7
  7927                           tblptrl	equ	0xFF6
  7928                           tablat	equ	0xFF5
  7929                           prodh	equ	0xFF4
  7930                           prodl	equ	0xFF3
  7931                           intcon	equ	0xFF2
  7932                           intcon2	equ	0xFF1
  7933                           intcon3	equ	0xFF0
  7934                           postinc0	equ	0xFEE
  7935                           wreg	equ	0xFE8
  7936                           indf1	equ	0xFE7
  7937                           fsr1h	equ	0xFE2
  7938                           fsr1l	equ	0xFE1
  7939                           indf2	equ	0xFDF
  7940                           postinc2	equ	0xFDE
  7941                           postdec2	equ	0xFDD
  7942                           fsr2h	equ	0xFDA
  7943                           fsr2l	equ	0xFD9
  7944                           status	equ	0xFD8
  7945                           
  7946 ;; *************** function _SW_Ack_SrED *****************
  7947 ;; Defined at:
  7948 ;;		line 2092 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  Dest_Addr       2   63[BANK0 ] PTR unsigned char 
  7951 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;		None
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      unsigned char 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : F/0
  7960 ;;		On exit  : F/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7963 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7966 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7967 ;;Total ram usage:        2 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:   10
  7970 ;; This function calls:
  7971 ;;		_SendPacket
  7972 ;; This function is called by:
  7973 ;;		_P2PTasks
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           	psect	text30
  7978  00329A                     __ptext30:
  7979                           	opt stack 0
  7980  00329A                     _SW_Ack_SrED:
  7981                           	opt stack 15
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;miwi_p2p.c: 2094: {TxData = 0;};
  7985                           
  7986                           ;incstack = 0
  7987  00329A  6BE6               	clrf	_TxData& (0+255),b
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;miwi_p2p.c: 2095: TxBuffer[TxData++] = 0xDA;
  7991  00329C  0E38               	movlw	low _TxBuffer
  7992  00329E  25E6               	addwf	_TxData& (0+255),w,b
  7993  0032A0  6ED9               	movwf	fsr2l,c
  7994  0032A2  6ADA               	clrf	fsr2h,c
  7995  0032A4  0E01               	movlw	high _TxBuffer
  7996  0032A6  22DA               	addwfc	fsr2h,f,c
  7997  0032A8  0EDA               	movlw	218
  7998  0032AA  6EDF               	movwf	indf2,c
  7999                           
  8000                           ; BSR set to: 0
  8001  0032AC  2BE6               	incf	_TxData& (0+255),f,b
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;miwi_p2p.c: 2099: return SendPacket(0, myPANID, Dest_Addr, 1, 0);
  8005                           ;	Return value of _SW_Ack_SrED is never used
  8006  0032AE  C0EB  F08F         	movff	_myPANID,SendPacket@DestinationPANID
  8007  0032B2  C0EC  F090         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  8008  0032B6  C09F  F091         	movff	SW_Ack_SrED@Dest_Addr,SendPacket@DestinationAddress
  8009  0032BA  C0A0  F092         	movff	SW_Ack_SrED@Dest_Addr+1,SendPacket@DestinationAddress+1
  8010  0032BE  0E01               	movlw	1
  8011  0032C0  6F93               	movwf	SendPacket@isCommand& (0+255),b
  8012  0032C2  0E00               	movlw	0
  8013  0032C4  6B94               	clrf	SendPacket@SecurityEnabled& (0+255),b
  8014  0032C6  EC95  F012         	call	_SendPacket
  8015                           
  8016                           ; BSR set to: 0
  8017  0032CA  0012               	return		;funcret
  8018  0032CC                     __end_of_SW_Ack_SrED:
  8019                           	opt stack 0
  8020                           tblptru	equ	0xFF8
  8021                           tblptrh	equ	0xFF7
  8022                           tblptrl	equ	0xFF6
  8023                           tablat	equ	0xFF5
  8024                           prodh	equ	0xFF4
  8025                           prodl	equ	0xFF3
  8026                           intcon	equ	0xFF2
  8027                           intcon2	equ	0xFF1
  8028                           intcon3	equ	0xFF0
  8029                           postinc0	equ	0xFEE
  8030                           wreg	equ	0xFE8
  8031                           indf1	equ	0xFE7
  8032                           fsr1h	equ	0xFE2
  8033                           fsr1l	equ	0xFE1
  8034                           indf2	equ	0xFDF
  8035                           postinc2	equ	0xFDE
  8036                           postdec2	equ	0xFDD
  8037                           fsr2h	equ	0xFDA
  8038                           fsr2l	equ	0xFD9
  8039                           status	equ	0xFD8
  8040                           
  8041 ;; *************** function _MiMAC_ReceivedPacket *****************
  8042 ;; Defined at:
  8043 ;;		line 366 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;		None
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;  bIntraPAN       1   35[COMRAM] unsigned char 
  8048 ;;  addrMode        1   33[COMRAM] unsigned char 
  8049 ;;  i               1   34[COMRAM] unsigned char 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      unsigned char 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : F/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8060 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8061 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8062 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8063 ;;Total ram usage:        8 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    5
  8066 ;; This function calls:
  8067 ;;		_MiMAC_DiscardPacket
  8068 ;; This function is called by:
  8069 ;;		_P2PTasks
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text31
  8074  000DFA                     __ptext31:
  8075                           	opt stack 0
  8076  000DFA                     _MiMAC_ReceivedPacket:
  8077                           	opt stack 20
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;drv_mrf_miwi_24j40.c: 368: uint8_t i;
  8081                           ;drv_mrf_miwi_24j40.c: 371: if (PORTBbits.RB1 == 0)
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;incstack = 0
  8085  000DFA  A281               	btfss	3969,1,c	;volatile
  8086                           
  8087                           ; BSR set to: 0
  8088                           ;drv_mrf_miwi_24j40.c: 372: {
  8089                           ;drv_mrf_miwi_24j40.c: 373: INTCON3bits.INT1IF = 1;
  8090  000DFC  80F0               	bsf	intcon3,0,c	;volatile
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;drv_mrf_miwi_24j40.c: 374: }
  8094                           ;drv_mrf_miwi_24j40.c: 379: if (MRF24J40Status.bits.TX_BUSY)
  8095  000DFE  A029               	btfss	_MRF24J40Status,0,c	;volatile
  8096  000E00  D00B               	goto	l11257
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;drv_mrf_miwi_24j40.c: 380: {
  8100                           ;drv_mrf_miwi_24j40.c: 381: if (failureCounter >= ((uint16_t)0x20 * (((8000000)/4)/10000
      +                          00)))
  8101  000E02  51DB               	movf	(_failureCounter+1)& (0+255),w,b	;volatile
  8102  000E04  E103               	bnz	u11540
  8103  000E06  0E40               	movlw	64
  8104  000E08  5DDA               	subwf	_failureCounter& (0+255),w,b	;volatile
  8105  000E0A  E304               	bnc	l11255
  8106  000E0C                     u11540:
  8107                           
  8108                           ; BSR set to: 0
  8109                           ;drv_mrf_miwi_24j40.c: 382: {
  8110                           ;drv_mrf_miwi_24j40.c: 383: failureCounter = 0;
  8111  000E0C  6BDA               	clrf	_failureCounter& (0+255),b	;volatile
  8112  000E0E  6BDB               	clrf	(_failureCounter+1)& (0+255),b	;volatile
  8113                           
  8114                           ;drv_mrf_miwi_24j40.c: 384: MRF24J40Status.bits.TX_BUSY = 0;
  8115  000E10  9029               	bcf	_MRF24J40Status,0,c	;volatile
  8116                           
  8117                           ;drv_mrf_miwi_24j40.c: 385: } else
  8118  000E12  D002               	goto	l11257
  8119  000E14                     l11255:
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;drv_mrf_miwi_24j40.c: 386: {
  8123                           ;drv_mrf_miwi_24j40.c: 387: failureCounter++;
  8124  000E14  4BDA               	infsnz	_failureCounter& (0+255),f,b	;volatile
  8125  000E16  2BDB               	incf	(_failureCounter+1)& (0+255),f,b	;volatile
  8126  000E18                     l11257:
  8127                           
  8128                           ; BSR set to: 0
  8129                           ;drv_mrf_miwi_24j40.c: 388: }
  8130                           ;drv_mrf_miwi_24j40.c: 389: }
  8131                           ;drv_mrf_miwi_24j40.c: 391: BankIndex = 0xFF;
  8132  000E18  6842               	setf	_BankIndex,c
  8133                           
  8134                           ; BSR set to: 0
  8135                           ;drv_mrf_miwi_24j40.c: 392: for (i = 0; i < 2; i++)
  8136  000E1A  6A23               	clrf	MiMAC_ReceivedPacket@i,c
  8137  000E1C                     l11265:
  8138                           
  8139                           ; BSR set to: 0
  8140                           ;drv_mrf_miwi_24j40.c: 393: {
  8141                           ;drv_mrf_miwi_24j40.c: 394: if (RxBuffer[i].PayloadLen > 0)
  8142  000E1C  5023               	movf	MiMAC_ReceivedPacket@i,w,c
  8143  000E1E  0D45               	mullw	69
  8144  000E20  0E00               	movlw	low _RxBuffer
  8145  000E22  24F3               	addwf	prodl,w,c
  8146  000E24  6ED9               	movwf	fsr2l,c
  8147  000E26  0E02               	movlw	high _RxBuffer
  8148  000E28  20F4               	addwfc	prodh,w,c
  8149  000E2A  6EDA               	movwf	fsr2h,c
  8150  000E2C  50DF               	movf	indf2,w,c
  8151  000E2E  E003               	bz	l11269
  8152                           
  8153                           ; BSR set to: 0
  8154                           ;drv_mrf_miwi_24j40.c: 395: {
  8155                           ;drv_mrf_miwi_24j40.c: 396: BankIndex = i;
  8156  000E30  C023  F042         	movff	MiMAC_ReceivedPacket@i,_BankIndex
  8157                           
  8158                           ;drv_mrf_miwi_24j40.c: 397: break;
  8159  000E34  D004               	goto	l11273
  8160  000E36                     l11269:
  8161                           
  8162                           ; BSR set to: 0
  8163  000E36  2A23               	incf	MiMAC_ReceivedPacket@i,f,c
  8164                           
  8165                           ; BSR set to: 0
  8166  000E38  0E01               	movlw	1
  8167  000E3A  6423               	cpfsgt	MiMAC_ReceivedPacket@i,c
  8168  000E3C  D7EF               	goto	l11265
  8169  000E3E                     l11273:
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;drv_mrf_miwi_24j40.c: 398: }
  8173                           ;drv_mrf_miwi_24j40.c: 399: }
  8174                           ;drv_mrf_miwi_24j40.c: 402: if (BankIndex < 2)
  8175  000E3E  0E02               	movlw	2
  8176  000E40  6042               	cpfslt	_BankIndex,c
  8177  000E42  0C00               	retlw	0
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;drv_mrf_miwi_24j40.c: 403: {
  8181                           ;drv_mrf_miwi_24j40.c: 404: uint8_t addrMode;
  8182                           ;drv_mrf_miwi_24j40.c: 406: bool bIntraPAN = 1;
  8183  000E44  0E01               	movlw	1
  8184  000E46  6E24               	movwf	MiMAC_ReceivedPacket@bIntraPAN,c
  8185                           
  8186                           ; BSR set to: 0
  8187                           ;drv_mrf_miwi_24j40.c: 408: if ((RxBuffer[BankIndex].Payload[0] & 0x40) == 0)
  8188  000E48  5042               	movf	_BankIndex,w,c
  8189  000E4A  0D45               	mullw	69
  8190  000E4C  0E01               	movlw	low (_RxBuffer+1)
  8191  000E4E  24F3               	addwf	prodl,w,c
  8192  000E50  6ED9               	movwf	fsr2l,c
  8193  000E52  0E02               	movlw	high (_RxBuffer+1)
  8194  000E54  20F4               	addwfc	prodh,w,c
  8195  000E56  6EDA               	movwf	fsr2h,c
  8196  000E58  0102               	movlb	2	; () banked
  8197  000E5A  ACDF               	btfss	indf2,6,c
  8198                           
  8199                           ; BSR set to: 2
  8200                           ;drv_mrf_miwi_24j40.c: 409: {
  8201                           ;drv_mrf_miwi_24j40.c: 410: bIntraPAN = 0;
  8202  000E5C  6A24               	clrf	MiMAC_ReceivedPacket@bIntraPAN,c
  8203                           
  8204                           ; BSR set to: 2
  8205                           ;drv_mrf_miwi_24j40.c: 411: }
  8206                           ;drv_mrf_miwi_24j40.c: 413: MACRxPacket.flags.Val = 0;
  8207  000E5E  6A30               	clrf	_MACRxPacket,c
  8208                           
  8209                           ;drv_mrf_miwi_24j40.c: 414: MACRxPacket.altSourceAddress = 0;
  8210  000E60  6A38               	clrf	_MACRxPacket+8,c
  8211                           
  8212                           ; BSR set to: 2
  8213                           ;drv_mrf_miwi_24j40.c: 417: addrMode = RxBuffer[BankIndex].Payload[1] & 0xCC;
  8214  000E62  5042               	movf	_BankIndex,w,c
  8215  000E64  0D45               	mullw	69
  8216  000E66  0E02               	movlw	low (_RxBuffer+2)
  8217  000E68  24F3               	addwf	prodl,w,c
  8218  000E6A  6ED9               	movwf	fsr2l,c
  8219  000E6C  0E02               	movlw	high (_RxBuffer+2)
  8220  000E6E  20F4               	addwfc	prodh,w,c
  8221  000E70  6EDA               	movwf	fsr2h,c
  8222  000E72  50DF               	movf	indf2,w,c
  8223  000E74  0BCC               	andlw	204
  8224  000E76  6E22               	movwf	MiMAC_ReceivedPacket@addrMode,c
  8225                           
  8226                           ;drv_mrf_miwi_24j40.c: 418: switch (addrMode)
  8227  000E78  D1DB               	goto	l11381
  8228  000E7A                     l11283:
  8229                           
  8230                           ; BSR set to: 2
  8231                           ;drv_mrf_miwi_24j40.c: 422: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  8232  000E7A  5042               	movf	_BankIndex,w,c
  8233  000E7C  0D45               	mullw	69
  8234  000E7E  0E06               	movlw	low (_RxBuffer+6)
  8235  000E80  24F3               	addwf	prodl,w,c
  8236  000E82  6ED9               	movwf	fsr2l,c
  8237  000E84  0E02               	movlw	high (_RxBuffer+6)
  8238  000E86  20F4               	addwfc	prodh,w,c
  8239  000E88  6EDA               	movwf	fsr2h,c
  8240  000E8A  28DE               	incf	postinc2,w,c
  8241  000E8C  E10B               	bnz	l99
  8242                           
  8243                           ; BSR set to: 2
  8244  000E8E  5042               	movf	_BankIndex,w,c
  8245  000E90  0D45               	mullw	69
  8246  000E92  0E07               	movlw	low (_RxBuffer+7)
  8247  000E94  24F3               	addwf	prodl,w,c
  8248  000E96  6ED9               	movwf	fsr2l,c
  8249  000E98  0E02               	movlw	high (_RxBuffer+7)
  8250  000E9A  20F4               	addwfc	prodh,w,c
  8251  000E9C  6EDA               	movwf	fsr2h,c
  8252  000E9E  28DE               	incf	postinc2,w,c
  8253  000EA0  B4D8               	btfsc	status,2,c
  8254                           
  8255                           ; BSR set to: 2
  8256                           ;drv_mrf_miwi_24j40.c: 423: {
  8257                           ;drv_mrf_miwi_24j40.c: 424: MACRxPacket.flags.bits.broadcast = 1;
  8258  000EA2  8430               	bsf	_MACRxPacket,2,c
  8259  000EA4                     l99:
  8260                           
  8261                           ; BSR set to: 2
  8262                           ;drv_mrf_miwi_24j40.c: 425: }
  8263                           ;drv_mrf_miwi_24j40.c: 426: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8264  000EA4  8E30               	bsf	_MACRxPacket,7,c
  8265                           
  8266                           ; BSR set to: 2
  8267                           ;drv_mrf_miwi_24j40.c: 429: if (bIntraPAN)
  8268  000EA6  5024               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  8269  000EA8  E02E               	bz	l11297
  8270                           
  8271                           ; BSR set to: 2
  8272                           ;drv_mrf_miwi_24j40.c: 431: {
  8273                           ;drv_mrf_miwi_24j40.c: 433: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8274  000EAA  5042               	movf	_BankIndex,w,c
  8275  000EAC  0D45               	mullw	69
  8276  000EAE  0E04               	movlw	low (_RxBuffer+4)
  8277  000EB0  24F3               	addwf	prodl,w,c
  8278  000EB2  6ED9               	movwf	fsr2l,c
  8279  000EB4  0E02               	movlw	high (_RxBuffer+4)
  8280  000EB6  20F4               	addwfc	prodh,w,c
  8281  000EB8  6EDA               	movwf	fsr2h,c
  8282  000EBA  50DF               	movf	indf2,w,c
  8283  000EBC  6E39               	movwf	_MACRxPacket+9,c
  8284                           
  8285                           ;drv_mrf_miwi_24j40.c: 434: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8286  000EBE  5042               	movf	_BankIndex,w,c
  8287  000EC0  0D45               	mullw	69
  8288  000EC2  0E05               	movlw	low (_RxBuffer+5)
  8289  000EC4  24F3               	addwf	prodl,w,c
  8290  000EC6  6ED9               	movwf	fsr2l,c
  8291  000EC8  0E02               	movlw	high (_RxBuffer+5)
  8292  000ECA  20F4               	addwfc	prodh,w,c
  8293  000ECC  6EDA               	movwf	fsr2h,c
  8294  000ECE  50DF               	movf	indf2,w,c
  8295  000ED0  6E3A               	movwf	_MACRxPacket+10,c
  8296                           
  8297                           ; BSR set to: 2
  8298                           ;drv_mrf_miwi_24j40.c: 436: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
  8299  000ED2  5042               	movf	_BankIndex,w,c
  8300  000ED4  0D45               	mullw	69
  8301  000ED6  0E08               	movlw	low (_RxBuffer+8)
  8302  000ED8  24F3               	addwf	prodl,w,c
  8303  000EDA  6E31               	movwf	_MACRxPacket+1,c
  8304  000EDC  0E02               	movlw	high (_RxBuffer+8)
  8305  000EDE  20F4               	addwfc	prodh,w,c
  8306  000EE0  6E32               	movwf	_MACRxPacket+2,c
  8307                           
  8308                           ; BSR set to: 2
  8309                           ;drv_mrf_miwi_24j40.c: 438: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 19
      +                          ;
  8310  000EE2  5042               	movf	_BankIndex,w,c
  8311  000EE4  0D45               	mullw	69
  8312  000EE6  0E00               	movlw	low _RxBuffer
  8313  000EE8  24F3               	addwf	prodl,w,c
  8314  000EEA  6ED9               	movwf	fsr2l,c
  8315  000EEC  0E02               	movlw	high _RxBuffer
  8316  000EEE  20F4               	addwfc	prodh,w,c
  8317  000EF0  6EDA               	movwf	fsr2h,c
  8318  000EF2  50DF               	movf	indf2,w,c
  8319  000EF4  0FED               	addlw	237
  8320  000EF6  6E35               	movwf	_MACRxPacket+5,c
  8321                           
  8322                           ;drv_mrf_miwi_24j40.c: 439: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[15]);
  8323  000EF8  5042               	movf	_BankIndex,w,c
  8324  000EFA  0D45               	mullw	69
  8325  000EFC  0E10               	movlw	low (_RxBuffer+16)
  8326  000EFE  24F3               	addwf	prodl,w,c
  8327  000F00  6E33               	movwf	_MACRxPacket+3,c
  8328  000F02  0E02               	movlw	high (_RxBuffer+16)
  8329  000F04  D134               	goto	L7
  8330  000F06                     l11297:
  8331                           
  8332                           ; BSR set to: 2
  8333                           ;drv_mrf_miwi_24j40.c: 442: else
  8334                           ;drv_mrf_miwi_24j40.c: 443: {
  8335                           ;drv_mrf_miwi_24j40.c: 444: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
  8336  000F06  5042               	movf	_BankIndex,w,c
  8337  000F08  0D45               	mullw	69
  8338  000F0A  0E08               	movlw	low (_RxBuffer+8)
  8339  000F0C  24F3               	addwf	prodl,w,c
  8340  000F0E  6ED9               	movwf	fsr2l,c
  8341  000F10  0E02               	movlw	high (_RxBuffer+8)
  8342  000F12  20F4               	addwfc	prodh,w,c
  8343  000F14  6EDA               	movwf	fsr2h,c
  8344  000F16  50DF               	movf	indf2,w,c
  8345  000F18  6E39               	movwf	_MACRxPacket+9,c
  8346                           
  8347                           ;drv_mrf_miwi_24j40.c: 445: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
  8348  000F1A  5042               	movf	_BankIndex,w,c
  8349  000F1C  0D45               	mullw	69
  8350  000F1E  0E09               	movlw	low (_RxBuffer+9)
  8351  000F20  24F3               	addwf	prodl,w,c
  8352  000F22  6ED9               	movwf	fsr2l,c
  8353  000F24  0E02               	movlw	high (_RxBuffer+9)
  8354  000F26  20F4               	addwfc	prodh,w,c
  8355  000F28  6EDA               	movwf	fsr2h,c
  8356  000F2A  50DF               	movf	indf2,w,c
  8357  000F2C  6E3A               	movwf	_MACRxPacket+10,c
  8358                           
  8359                           ; BSR set to: 2
  8360                           ;drv_mrf_miwi_24j40.c: 446: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
  8361  000F2E  5042               	movf	_BankIndex,w,c
  8362  000F30  0D45               	mullw	69
  8363  000F32  0E0A               	movlw	low (_RxBuffer+10)
  8364  000F34  24F3               	addwf	prodl,w,c
  8365  000F36  6E31               	movwf	_MACRxPacket+1,c
  8366  000F38  0E02               	movlw	high (_RxBuffer+10)
  8367  000F3A  20F4               	addwfc	prodh,w,c
  8368  000F3C  6E32               	movwf	_MACRxPacket+2,c
  8369                           
  8370                           ; BSR set to: 2
  8371                           ;drv_mrf_miwi_24j40.c: 447: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 21
      +                          ;
  8372  000F3E  5042               	movf	_BankIndex,w,c
  8373  000F40  0D45               	mullw	69
  8374  000F42  0E00               	movlw	low _RxBuffer
  8375  000F44  24F3               	addwf	prodl,w,c
  8376  000F46  6ED9               	movwf	fsr2l,c
  8377  000F48  0E02               	movlw	high _RxBuffer
  8378  000F4A  20F4               	addwfc	prodh,w,c
  8379  000F4C  6EDA               	movwf	fsr2h,c
  8380  000F4E  50DF               	movf	indf2,w,c
  8381  000F50  0FEB               	addlw	235
  8382  000F52  6E35               	movwf	_MACRxPacket+5,c
  8383                           
  8384                           ;drv_mrf_miwi_24j40.c: 448: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[17]);
  8385  000F54  5042               	movf	_BankIndex,w,c
  8386  000F56  0D45               	mullw	69
  8387  000F58  0E12               	movlw	low (_RxBuffer+18)
  8388  000F5A  24F3               	addwf	prodl,w,c
  8389  000F5C  6E33               	movwf	_MACRxPacket+3,c
  8390  000F5E  0E02               	movlw	high (_RxBuffer+18)
  8391  000F60  D106               	goto	L7
  8392  000F62                     l103:
  8393                           
  8394                           ; BSR set to: 2
  8395                           ;drv_mrf_miwi_24j40.c: 455: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8396  000F62  8E30               	bsf	_MACRxPacket,7,c
  8397                           
  8398                           ; BSR set to: 2
  8399                           ;drv_mrf_miwi_24j40.c: 457: if (bIntraPAN)
  8400  000F64  5024               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  8401  000F66  E02E               	bz	l11311
  8402                           
  8403                           ; BSR set to: 2
  8404                           ;drv_mrf_miwi_24j40.c: 459: {
  8405                           ;drv_mrf_miwi_24j40.c: 462: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8406  000F68  5042               	movf	_BankIndex,w,c
  8407  000F6A  0D45               	mullw	69
  8408  000F6C  0E04               	movlw	low (_RxBuffer+4)
  8409  000F6E  24F3               	addwf	prodl,w,c
  8410  000F70  6ED9               	movwf	fsr2l,c
  8411  000F72  0E02               	movlw	high (_RxBuffer+4)
  8412  000F74  20F4               	addwfc	prodh,w,c
  8413  000F76  6EDA               	movwf	fsr2h,c
  8414  000F78  50DF               	movf	indf2,w,c
  8415  000F7A  6E39               	movwf	_MACRxPacket+9,c
  8416                           
  8417                           ;drv_mrf_miwi_24j40.c: 463: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8418  000F7C  5042               	movf	_BankIndex,w,c
  8419  000F7E  0D45               	mullw	69
  8420  000F80  0E05               	movlw	low (_RxBuffer+5)
  8421  000F82  24F3               	addwf	prodl,w,c
  8422  000F84  6ED9               	movwf	fsr2l,c
  8423  000F86  0E02               	movlw	high (_RxBuffer+5)
  8424  000F88  20F4               	addwfc	prodh,w,c
  8425  000F8A  6EDA               	movwf	fsr2h,c
  8426  000F8C  50DF               	movf	indf2,w,c
  8427  000F8E  6E3A               	movwf	_MACRxPacket+10,c
  8428                           
  8429                           ; BSR set to: 2
  8430                           ;drv_mrf_miwi_24j40.c: 465: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[13
      +                          ]);
  8431  000F90  5042               	movf	_BankIndex,w,c
  8432  000F92  0D45               	mullw	69
  8433  000F94  0E0E               	movlw	low (_RxBuffer+14)
  8434  000F96  24F3               	addwf	prodl,w,c
  8435  000F98  6E31               	movwf	_MACRxPacket+1,c
  8436  000F9A  0E02               	movlw	high (_RxBuffer+14)
  8437  000F9C  20F4               	addwfc	prodh,w,c
  8438  000F9E  6E32               	movwf	_MACRxPacket+2,c
  8439                           
  8440                           ; BSR set to: 2
  8441                           ;drv_mrf_miwi_24j40.c: 466: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 25
      +                          ;
  8442  000FA0  5042               	movf	_BankIndex,w,c
  8443  000FA2  0D45               	mullw	69
  8444  000FA4  0E00               	movlw	low _RxBuffer
  8445  000FA6  24F3               	addwf	prodl,w,c
  8446  000FA8  6ED9               	movwf	fsr2l,c
  8447  000FAA  0E02               	movlw	high _RxBuffer
  8448  000FAC  20F4               	addwfc	prodh,w,c
  8449  000FAE  6EDA               	movwf	fsr2h,c
  8450  000FB0  50DF               	movf	indf2,w,c
  8451  000FB2  0FE7               	addlw	231
  8452  000FB4  6E35               	movwf	_MACRxPacket+5,c
  8453                           
  8454                           ;drv_mrf_miwi_24j40.c: 467: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[21]);
  8455  000FB6  5042               	movf	_BankIndex,w,c
  8456  000FB8  0D45               	mullw	69
  8457  000FBA  0E16               	movlw	low (_RxBuffer+22)
  8458  000FBC  24F3               	addwf	prodl,w,c
  8459  000FBE  6E33               	movwf	_MACRxPacket+3,c
  8460  000FC0  0E02               	movlw	high (_RxBuffer+22)
  8461  000FC2  D0D5               	goto	L7
  8462  000FC4                     l11311:
  8463                           
  8464                           ; BSR set to: 2
  8465                           ;drv_mrf_miwi_24j40.c: 470: else
  8466                           ;drv_mrf_miwi_24j40.c: 471: {
  8467                           ;drv_mrf_miwi_24j40.c: 472: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          3];
  8468  000FC4  5042               	movf	_BankIndex,w,c
  8469  000FC6  0D45               	mullw	69
  8470  000FC8  0E0E               	movlw	low (_RxBuffer+14)
  8471  000FCA  24F3               	addwf	prodl,w,c
  8472  000FCC  6ED9               	movwf	fsr2l,c
  8473  000FCE  0E02               	movlw	high (_RxBuffer+14)
  8474  000FD0  20F4               	addwfc	prodh,w,c
  8475  000FD2  6EDA               	movwf	fsr2h,c
  8476  000FD4  50DF               	movf	indf2,w,c
  8477  000FD6  6E39               	movwf	_MACRxPacket+9,c
  8478                           
  8479                           ;drv_mrf_miwi_24j40.c: 473: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          4];
  8480  000FD8  5042               	movf	_BankIndex,w,c
  8481  000FDA  0D45               	mullw	69
  8482  000FDC  0E0F               	movlw	low (_RxBuffer+15)
  8483  000FDE  24F3               	addwf	prodl,w,c
  8484  000FE0  6ED9               	movwf	fsr2l,c
  8485  000FE2  0E02               	movlw	high (_RxBuffer+15)
  8486  000FE4  20F4               	addwfc	prodh,w,c
  8487  000FE6  6EDA               	movwf	fsr2h,c
  8488  000FE8  50DF               	movf	indf2,w,c
  8489  000FEA  6E3A               	movwf	_MACRxPacket+10,c
  8490                           
  8491                           ; BSR set to: 2
  8492                           ;drv_mrf_miwi_24j40.c: 474: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[15
      +                          ]);
  8493  000FEC  5042               	movf	_BankIndex,w,c
  8494  000FEE  0D45               	mullw	69
  8495  000FF0  0E10               	movlw	low (_RxBuffer+16)
  8496  000FF2  24F3               	addwf	prodl,w,c
  8497  000FF4  6E31               	movwf	_MACRxPacket+1,c
  8498  000FF6  0E02               	movlw	high (_RxBuffer+16)
  8499  000FF8  20F4               	addwfc	prodh,w,c
  8500  000FFA  6E32               	movwf	_MACRxPacket+2,c
  8501                           
  8502                           ; BSR set to: 2
  8503                           ;drv_mrf_miwi_24j40.c: 475: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 27
      +                          ;
  8504  000FFC  5042               	movf	_BankIndex,w,c
  8505  000FFE  0D45               	mullw	69
  8506  001000  0E00               	movlw	low _RxBuffer
  8507  001002  24F3               	addwf	prodl,w,c
  8508  001004  6ED9               	movwf	fsr2l,c
  8509  001006  0E02               	movlw	high _RxBuffer
  8510  001008  20F4               	addwfc	prodh,w,c
  8511  00100A  6EDA               	movwf	fsr2h,c
  8512  00100C  50DF               	movf	indf2,w,c
  8513  00100E  0FE5               	addlw	229
  8514  001010  6E35               	movwf	_MACRxPacket+5,c
  8515                           
  8516                           ;drv_mrf_miwi_24j40.c: 476: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[23]);
  8517  001012  5042               	movf	_BankIndex,w,c
  8518  001014  0D45               	mullw	69
  8519  001016  0E18               	movlw	low (_RxBuffer+24)
  8520  001018  24F3               	addwf	prodl,w,c
  8521  00101A  6E33               	movwf	_MACRxPacket+3,c
  8522  00101C  0E02               	movlw	high (_RxBuffer+24)
  8523  00101E  D0A7               	goto	L7
  8524  001020                     l106:
  8525                           
  8526                           ; BSR set to: 2
  8527                           ;drv_mrf_miwi_24j40.c: 482: {
  8528                           ;drv_mrf_miwi_24j40.c: 483: MACRxPacket.flags.bits.broadcast = 1;
  8529  001020  8430               	bsf	_MACRxPacket,2,c
  8530                           
  8531                           ;drv_mrf_miwi_24j40.c: 484: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8532  001022  8E30               	bsf	_MACRxPacket,7,c
  8533                           
  8534                           ; BSR set to: 2
  8535                           ;drv_mrf_miwi_24j40.c: 485: MACRxPacket.altSourceAddress = 1;
  8536  001024  0E01               	movlw	1
  8537  001026  6E38               	movwf	_MACRxPacket+8,c
  8538                           
  8539                           ; BSR set to: 2
  8540                           ;drv_mrf_miwi_24j40.c: 486: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8541  001028  5042               	movf	_BankIndex,w,c
  8542  00102A  0D45               	mullw	69
  8543  00102C  0E04               	movlw	low (_RxBuffer+4)
  8544  00102E  24F3               	addwf	prodl,w,c
  8545  001030  6ED9               	movwf	fsr2l,c
  8546  001032  0E02               	movlw	high (_RxBuffer+4)
  8547  001034  20F4               	addwfc	prodh,w,c
  8548  001036  6EDA               	movwf	fsr2h,c
  8549  001038  50DF               	movf	indf2,w,c
  8550  00103A  6E39               	movwf	_MACRxPacket+9,c
  8551                           
  8552                           ; BSR set to: 2
  8553                           ;drv_mrf_miwi_24j40.c: 487: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8554  00103C  5042               	movf	_BankIndex,w,c
  8555  00103E  0D45               	mullw	69
  8556  001040  0E05               	movlw	low (_RxBuffer+5)
  8557  001042  24F3               	addwf	prodl,w,c
  8558  001044  6ED9               	movwf	fsr2l,c
  8559  001046  0E02               	movlw	high (_RxBuffer+5)
  8560  001048  20F4               	addwfc	prodh,w,c
  8561  00104A  6EDA               	movwf	fsr2h,c
  8562  00104C  50DF               	movf	indf2,w,c
  8563  00104E  6E3A               	movwf	_MACRxPacket+10,c
  8564                           
  8565                           ; BSR set to: 2
  8566                           ;drv_mrf_miwi_24j40.c: 488: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[5]
      +                          );
  8567  001050  5042               	movf	_BankIndex,w,c
  8568  001052  0D45               	mullw	69
  8569  001054  0E06               	movlw	low (_RxBuffer+6)
  8570  001056  24F3               	addwf	prodl,w,c
  8571  001058  6E31               	movwf	_MACRxPacket+1,c
  8572  00105A  0E02               	movlw	high (_RxBuffer+6)
  8573  00105C  20F4               	addwfc	prodh,w,c
  8574  00105E  6E32               	movwf	_MACRxPacket+2,c
  8575                           
  8576                           ; BSR set to: 2
  8577                           ;drv_mrf_miwi_24j40.c: 489: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 11
      +                          ;
  8578  001060  5042               	movf	_BankIndex,w,c
  8579  001062  0D45               	mullw	69
  8580  001064  0E00               	movlw	low _RxBuffer
  8581  001066  24F3               	addwf	prodl,w,c
  8582  001068  6ED9               	movwf	fsr2l,c
  8583  00106A  0E02               	movlw	high _RxBuffer
  8584  00106C  20F4               	addwfc	prodh,w,c
  8585  00106E  6EDA               	movwf	fsr2h,c
  8586  001070  50DF               	movf	indf2,w,c
  8587  001072  0FF5               	addlw	245
  8588  001074  6E35               	movwf	_MACRxPacket+5,c
  8589                           
  8590                           ; BSR set to: 2
  8591                           ;drv_mrf_miwi_24j40.c: 490: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[7]);
  8592  001076  5042               	movf	_BankIndex,w,c
  8593  001078  0D45               	mullw	69
  8594  00107A  0E08               	movlw	low (_RxBuffer+8)
  8595  00107C  24F3               	addwf	prodl,w,c
  8596  00107E  6E33               	movwf	_MACRxPacket+3,c
  8597  001080  0E02               	movlw	high (_RxBuffer+8)
  8598  001082  D075               	goto	L7
  8599  001084                     l11329:
  8600                           
  8601                           ; BSR set to: 2
  8602                           ;drv_mrf_miwi_24j40.c: 495: {
  8603                           ;drv_mrf_miwi_24j40.c: 496: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  8604  001084  5042               	movf	_BankIndex,w,c
  8605  001086  0D45               	mullw	69
  8606  001088  0E06               	movlw	low (_RxBuffer+6)
  8607  00108A  24F3               	addwf	prodl,w,c
  8608  00108C  6ED9               	movwf	fsr2l,c
  8609  00108E  0E02               	movlw	high (_RxBuffer+6)
  8610  001090  20F4               	addwfc	prodh,w,c
  8611  001092  6EDA               	movwf	fsr2h,c
  8612  001094  28DE               	incf	postinc2,w,c
  8613  001096  E10B               	bnz	l108
  8614                           
  8615                           ; BSR set to: 2
  8616  001098  5042               	movf	_BankIndex,w,c
  8617  00109A  0D45               	mullw	69
  8618  00109C  0E07               	movlw	low (_RxBuffer+7)
  8619  00109E  24F3               	addwf	prodl,w,c
  8620  0010A0  6ED9               	movwf	fsr2l,c
  8621  0010A2  0E02               	movlw	high (_RxBuffer+7)
  8622  0010A4  20F4               	addwfc	prodh,w,c
  8623  0010A6  6EDA               	movwf	fsr2h,c
  8624  0010A8  28DE               	incf	postinc2,w,c
  8625  0010AA  B4D8               	btfsc	status,2,c
  8626                           
  8627                           ; BSR set to: 2
  8628                           ;drv_mrf_miwi_24j40.c: 497: {
  8629                           ;drv_mrf_miwi_24j40.c: 498: MACRxPacket.flags.bits.broadcast = 1;
  8630  0010AC  8430               	bsf	_MACRxPacket,2,c
  8631  0010AE                     l108:
  8632                           
  8633                           ; BSR set to: 2
  8634                           ;drv_mrf_miwi_24j40.c: 499: }
  8635                           ;drv_mrf_miwi_24j40.c: 500: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8636  0010AE  8E30               	bsf	_MACRxPacket,7,c
  8637                           
  8638                           ; BSR set to: 2
  8639                           ;drv_mrf_miwi_24j40.c: 501: MACRxPacket.altSourceAddress = 1;
  8640  0010B0  0E01               	movlw	1
  8641  0010B2  6E38               	movwf	_MACRxPacket+8,c
  8642                           
  8643                           ;drv_mrf_miwi_24j40.c: 503: if (bIntraPAN == 0)
  8644  0010B4  5024               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  8645  0010B6  E12E               	bnz	l11343
  8646                           
  8647                           ; BSR set to: 2
  8648                           ;drv_mrf_miwi_24j40.c: 504: {
  8649                           ;drv_mrf_miwi_24j40.c: 505: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[7
      +                          ];
  8650  0010B8  5042               	movf	_BankIndex,w,c
  8651  0010BA  0D45               	mullw	69
  8652  0010BC  0E08               	movlw	low (_RxBuffer+8)
  8653  0010BE  24F3               	addwf	prodl,w,c
  8654  0010C0  6ED9               	movwf	fsr2l,c
  8655  0010C2  0E02               	movlw	high (_RxBuffer+8)
  8656  0010C4  20F4               	addwfc	prodh,w,c
  8657  0010C6  6EDA               	movwf	fsr2h,c
  8658  0010C8  50DF               	movf	indf2,w,c
  8659  0010CA  6E39               	movwf	_MACRxPacket+9,c
  8660                           
  8661                           ;drv_mrf_miwi_24j40.c: 506: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[8
      +                          ];
  8662  0010CC  5042               	movf	_BankIndex,w,c
  8663  0010CE  0D45               	mullw	69
  8664  0010D0  0E09               	movlw	low (_RxBuffer+9)
  8665  0010D2  24F3               	addwf	prodl,w,c
  8666  0010D4  6ED9               	movwf	fsr2l,c
  8667  0010D6  0E02               	movlw	high (_RxBuffer+9)
  8668  0010D8  20F4               	addwfc	prodh,w,c
  8669  0010DA  6EDA               	movwf	fsr2h,c
  8670  0010DC  50DF               	movf	indf2,w,c
  8671  0010DE  6E3A               	movwf	_MACRxPacket+10,c
  8672                           
  8673                           ; BSR set to: 2
  8674                           ;drv_mrf_miwi_24j40.c: 507: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[9]
      +                          );
  8675  0010E0  5042               	movf	_BankIndex,w,c
  8676  0010E2  0D45               	mullw	69
  8677  0010E4  0E0A               	movlw	low (_RxBuffer+10)
  8678  0010E6  24F3               	addwf	prodl,w,c
  8679  0010E8  6E31               	movwf	_MACRxPacket+1,c
  8680  0010EA  0E02               	movlw	high (_RxBuffer+10)
  8681  0010EC  20F4               	addwfc	prodh,w,c
  8682  0010EE  6E32               	movwf	_MACRxPacket+2,c
  8683                           
  8684                           ; BSR set to: 2
  8685                           ;drv_mrf_miwi_24j40.c: 508: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 15
      +                          ;
  8686  0010F0  5042               	movf	_BankIndex,w,c
  8687  0010F2  0D45               	mullw	69
  8688  0010F4  0E00               	movlw	low _RxBuffer
  8689  0010F6  24F3               	addwf	prodl,w,c
  8690  0010F8  6ED9               	movwf	fsr2l,c
  8691  0010FA  0E02               	movlw	high _RxBuffer
  8692  0010FC  20F4               	addwfc	prodh,w,c
  8693  0010FE  6EDA               	movwf	fsr2h,c
  8694  001100  50DF               	movf	indf2,w,c
  8695  001102  0FF1               	addlw	241
  8696  001104  6E35               	movwf	_MACRxPacket+5,c
  8697                           
  8698                           ;drv_mrf_miwi_24j40.c: 509: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[11]);
  8699  001106  5042               	movf	_BankIndex,w,c
  8700  001108  0D45               	mullw	69
  8701  00110A  0E0C               	movlw	low (_RxBuffer+12)
  8702  00110C  24F3               	addwf	prodl,w,c
  8703  00110E  6E33               	movwf	_MACRxPacket+3,c
  8704  001110  0E02               	movlw	high (_RxBuffer+12)
  8705  001112  D02D               	goto	L7
  8706  001114                     l11343:
  8707                           
  8708                           ; BSR set to: 2
  8709                           ;drv_mrf_miwi_24j40.c: 512: {
  8710                           ;drv_mrf_miwi_24j40.c: 513: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8711  001114  5042               	movf	_BankIndex,w,c
  8712  001116  0D45               	mullw	69
  8713  001118  0E04               	movlw	low (_RxBuffer+4)
  8714  00111A  24F3               	addwf	prodl,w,c
  8715  00111C  6ED9               	movwf	fsr2l,c
  8716  00111E  0E02               	movlw	high (_RxBuffer+4)
  8717  001120  20F4               	addwfc	prodh,w,c
  8718  001122  6EDA               	movwf	fsr2h,c
  8719  001124  50DF               	movf	indf2,w,c
  8720  001126  6E39               	movwf	_MACRxPacket+9,c
  8721                           
  8722                           ;drv_mrf_miwi_24j40.c: 514: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8723  001128  5042               	movf	_BankIndex,w,c
  8724  00112A  0D45               	mullw	69
  8725  00112C  0E05               	movlw	low (_RxBuffer+5)
  8726  00112E  24F3               	addwf	prodl,w,c
  8727  001130  6ED9               	movwf	fsr2l,c
  8728  001132  0E02               	movlw	high (_RxBuffer+5)
  8729  001134  20F4               	addwfc	prodh,w,c
  8730  001136  6EDA               	movwf	fsr2h,c
  8731  001138  50DF               	movf	indf2,w,c
  8732  00113A  6E3A               	movwf	_MACRxPacket+10,c
  8733                           
  8734                           ; BSR set to: 2
  8735                           ;drv_mrf_miwi_24j40.c: 515: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[7]
      +                          );
  8736  00113C  5042               	movf	_BankIndex,w,c
  8737  00113E  0D45               	mullw	69
  8738  001140  0E08               	movlw	low (_RxBuffer+8)
  8739  001142  24F3               	addwf	prodl,w,c
  8740  001144  6E31               	movwf	_MACRxPacket+1,c
  8741  001146  0E02               	movlw	high (_RxBuffer+8)
  8742  001148  20F4               	addwfc	prodh,w,c
  8743  00114A  6E32               	movwf	_MACRxPacket+2,c
  8744                           
  8745                           ; BSR set to: 2
  8746                           ;drv_mrf_miwi_24j40.c: 516: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 13
      +                          ;
  8747  00114C  5042               	movf	_BankIndex,w,c
  8748  00114E  0D45               	mullw	69
  8749  001150  0E00               	movlw	low _RxBuffer
  8750  001152  24F3               	addwf	prodl,w,c
  8751  001154  6ED9               	movwf	fsr2l,c
  8752  001156  0E02               	movlw	high _RxBuffer
  8753  001158  20F4               	addwfc	prodh,w,c
  8754  00115A  6EDA               	movwf	fsr2h,c
  8755  00115C  50DF               	movf	indf2,w,c
  8756  00115E  0FF3               	addlw	243
  8757  001160  6E35               	movwf	_MACRxPacket+5,c
  8758                           
  8759                           ;drv_mrf_miwi_24j40.c: 517: MACRxPacket.Payload = &(RxBuffer[BankIndex].Payload[9]);
  8760  001162  5042               	movf	_BankIndex,w,c
  8761  001164  0D45               	mullw	69
  8762  001166  0E0A               	movlw	low (_RxBuffer+10)
  8763  001168  24F3               	addwf	prodl,w,c
  8764  00116A  6E33               	movwf	_MACRxPacket+3,c
  8765  00116C  0E02               	movlw	high (_RxBuffer+10)
  8766  00116E                     L7:
  8767  00116E  20F4               	addwfc	prodh,w,c
  8768  001170  6E34               	movwf	_MACRxPacket+4,c
  8769  001172  D070               	goto	l11383
  8770  001174                     l111:
  8771                           
  8772                           ; BSR set to: 2
  8773                           ;drv_mrf_miwi_24j40.c: 523: {
  8774                           ;drv_mrf_miwi_24j40.c: 524: MACRxPacket.flags.bits.sourcePrsnt = 1;
  8775  001174  8E30               	bsf	_MACRxPacket,7,c
  8776                           
  8777                           ; BSR set to: 2
  8778                           ;drv_mrf_miwi_24j40.c: 525: MACRxPacket.altSourceAddress = 1;
  8779  001176  0E01               	movlw	1
  8780  001178  6E38               	movwf	_MACRxPacket+8,c
  8781                           
  8782                           ;drv_mrf_miwi_24j40.c: 527: if (bIntraPAN)
  8783  00117A  5024               	movf	MiMAC_ReceivedPacket@bIntraPAN,w,c
  8784  00117C  E01B               	bz	l11357
  8785                           
  8786                           ; BSR set to: 2
  8787                           ;drv_mrf_miwi_24j40.c: 529: {
  8788                           ;drv_mrf_miwi_24j40.c: 531: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[3
      +                          ];
  8789  00117E  5042               	movf	_BankIndex,w,c
  8790  001180  0D45               	mullw	69
  8791  001182  0E04               	movlw	low (_RxBuffer+4)
  8792  001184  24F3               	addwf	prodl,w,c
  8793  001186  6ED9               	movwf	fsr2l,c
  8794  001188  0E02               	movlw	high (_RxBuffer+4)
  8795  00118A  20F4               	addwfc	prodh,w,c
  8796  00118C  6EDA               	movwf	fsr2h,c
  8797  00118E  50DF               	movf	indf2,w,c
  8798  001190  6E39               	movwf	_MACRxPacket+9,c
  8799                           
  8800                           ;drv_mrf_miwi_24j40.c: 532: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[4
      +                          ];
  8801  001192  5042               	movf	_BankIndex,w,c
  8802  001194  0D45               	mullw	69
  8803  001196  0E05               	movlw	low (_RxBuffer+5)
  8804  001198  24F3               	addwf	prodl,w,c
  8805  00119A  6ED9               	movwf	fsr2l,c
  8806  00119C  0E02               	movlw	high (_RxBuffer+5)
  8807  00119E  20F4               	addwfc	prodh,w,c
  8808  0011A0  6EDA               	movwf	fsr2h,c
  8809  0011A2  50DF               	movf	indf2,w,c
  8810  0011A4  6E3A               	movwf	_MACRxPacket+10,c
  8811                           
  8812                           ; BSR set to: 2
  8813                           ;drv_mrf_miwi_24j40.c: 534: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[12
      +                          ]);
  8814  0011A6  5042               	movf	_BankIndex,w,c
  8815  0011A8  0D45               	mullw	69
  8816  0011AA  0E0D               	movlw	low (_RxBuffer+13)
  8817  0011AC  24F3               	addwf	prodl,w,c
  8818  0011AE  6E31               	movwf	_MACRxPacket+1,c
  8819  0011B0  0E02               	movlw	high (_RxBuffer+13)
  8820  0011B2  D695               	goto	L8
  8821  0011B4                     l11357:
  8822                           
  8823                           ; BSR set to: 2
  8824                           ;drv_mrf_miwi_24j40.c: 540: else
  8825                           ;drv_mrf_miwi_24j40.c: 541: {
  8826                           ;drv_mrf_miwi_24j40.c: 542: MACRxPacket.SourcePANID.v[0] = RxBuffer[BankIndex].Payload[1
      +                          2];
  8827  0011B4  5042               	movf	_BankIndex,w,c
  8828  0011B6  0D45               	mullw	69
  8829  0011B8  0E0D               	movlw	low (_RxBuffer+13)
  8830  0011BA  24F3               	addwf	prodl,w,c
  8831  0011BC  6ED9               	movwf	fsr2l,c
  8832  0011BE  0E02               	movlw	high (_RxBuffer+13)
  8833  0011C0  20F4               	addwfc	prodh,w,c
  8834  0011C2  6EDA               	movwf	fsr2h,c
  8835  0011C4  50DF               	movf	indf2,w,c
  8836  0011C6  6E39               	movwf	_MACRxPacket+9,c
  8837                           
  8838                           ;drv_mrf_miwi_24j40.c: 543: MACRxPacket.SourcePANID.v[1] = RxBuffer[BankIndex].Payload[1
      +                          3];
  8839  0011C8  5042               	movf	_BankIndex,w,c
  8840  0011CA  0D45               	mullw	69
  8841  0011CC  0E0E               	movlw	low (_RxBuffer+14)
  8842  0011CE  24F3               	addwf	prodl,w,c
  8843  0011D0  6ED9               	movwf	fsr2l,c
  8844  0011D2  0E02               	movlw	high (_RxBuffer+14)
  8845  0011D4  20F4               	addwfc	prodh,w,c
  8846  0011D6  6EDA               	movwf	fsr2h,c
  8847  0011D8  50DF               	movf	indf2,w,c
  8848  0011DA  6E3A               	movwf	_MACRxPacket+10,c
  8849                           
  8850                           ; BSR set to: 2
  8851                           ;drv_mrf_miwi_24j40.c: 544: MACRxPacket.SourceAddress = &(RxBuffer[BankIndex].Payload[14
      +                          ]);
  8852  0011DC  5042               	movf	_BankIndex,w,c
  8853  0011DE  0D45               	mullw	69
  8854  0011E0  0E0F               	movlw	low (_RxBuffer+15)
  8855  0011E2  24F3               	addwf	prodl,w,c
  8856  0011E4  6E31               	movwf	_MACRxPacket+1,c
  8857  0011E6  0E02               	movlw	high (_RxBuffer+15)
  8858  0011E8  D6A8               	goto	L9
  8859  0011EA                     l11363:
  8860                           
  8861                           ; BSR set to: 2
  8862                           ;drv_mrf_miwi_24j40.c: 554: {
  8863                           ;drv_mrf_miwi_24j40.c: 555: if (RxBuffer[BankIndex].Payload[5] == 0xFF && RxBuffer[BankI
      +                          ndex].Payload[6] == 0xFF)
  8864  0011EA  5042               	movf	_BankIndex,w,c
  8865  0011EC  0D45               	mullw	69
  8866  0011EE  0E06               	movlw	low (_RxBuffer+6)
  8867  0011F0  24F3               	addwf	prodl,w,c
  8868  0011F2  6ED9               	movwf	fsr2l,c
  8869  0011F4  0E02               	movlw	high (_RxBuffer+6)
  8870  0011F6  20F4               	addwfc	prodh,w,c
  8871  0011F8  6EDA               	movwf	fsr2h,c
  8872  0011FA  28DE               	incf	postinc2,w,c
  8873  0011FC  E10B               	bnz	l11369
  8874                           
  8875                           ; BSR set to: 2
  8876  0011FE  5042               	movf	_BankIndex,w,c
  8877  001200  0D45               	mullw	69
  8878  001202  0E07               	movlw	low (_RxBuffer+7)
  8879  001204  24F3               	addwf	prodl,w,c
  8880  001206  6ED9               	movwf	fsr2l,c
  8881  001208  0E02               	movlw	high (_RxBuffer+7)
  8882  00120A  20F4               	addwfc	prodh,w,c
  8883  00120C  6EDA               	movwf	fsr2h,c
  8884  00120E  28DE               	incf	postinc2,w,c
  8885  001210  B4D8               	btfsc	status,2,c
  8886                           
  8887                           ; BSR set to: 2
  8888                           ;drv_mrf_miwi_24j40.c: 556: {
  8889                           ;drv_mrf_miwi_24j40.c: 557: MACRxPacket.flags.bits.broadcast = 1;
  8890  001212  8430               	bsf	_MACRxPacket,2,c
  8891  001214                     l11369:
  8892                           
  8893                           ; BSR set to: 2
  8894                           ;drv_mrf_miwi_24j40.c: 558: }
  8895                           ;drv_mrf_miwi_24j40.c: 559: MACRxPacket.PayloadLen = RxBuffer[BankIndex].PayloadLen - 10
      +                          ;
  8896  001214  5042               	movf	_BankIndex,w,c
  8897  001216  0D45               	mullw	69
  8898  001218  0E00               	movlw	low _RxBuffer
  8899  00121A  24F3               	addwf	prodl,w,c
  8900  00121C  6ED9               	movwf	fsr2l,c
  8901  00121E  0E02               	movlw	high _RxBuffer
  8902  001220  20F4               	addwfc	prodh,w,c
  8903  001222  6EDA               	movwf	fsr2h,c
  8904  001224  50DF               	movf	indf2,w,c
  8905  001226  0FF6               	addlw	246
  8906  001228  D725               	goto	L10
  8907  00122A                     l11373:
  8908                           
  8909                           ; BSR set to: 2
  8910                           ;drv_mrf_miwi_24j40.c: 567: MiMAC_DiscardPacket();
  8911  00122A  EC8E  F01A         	call	_MiMAC_DiscardPacket	;wreg free
  8912                           
  8913                           ;drv_mrf_miwi_24j40.c: 568: return 0;
  8914  00122E  0C00               	retlw	0
  8915  001230                     l11381:
  8916                           
  8917                           ; BSR set to: 2
  8918  001230  5022               	movf	MiMAC_ReceivedPacket@addrMode,w,c
  8919                           
  8920                           ; Switch size 1, requested type "speed"
  8921                           ; Number of cases is 6, Range of values is 8 to 204
  8922                           ; switch strategies available:
  8923                           ; Name         Instructions Cycles
  8924                           ; simple_byte           19    10 (average)
  8925                           ;	Chosen strategy is simple_byte
  8926  001232  0A08               	xorlw	8	; case 8
  8927  001234  E0DA               	bz	l11363
  8928  001236  0A88               	xorlw	136	; case 128
  8929  001238  E101 D6F2          	bz	l106
  8930  00123C  0A08               	xorlw	8	; case 136
  8931  00123E  E101 D721          	bz	l11329
  8932  001242  0A04               	xorlw	4	; case 140
  8933  001244  E097               	bz	l111
  8934  001246  0A44               	xorlw	68	; case 200
  8935  001248  E101 D617          	bz	l11283
  8936  00124C  0A04               	xorlw	4	; case 204
  8937  00124E  E101 D688          	bz	l103
  8938  001252  D7EB               	goto	l11373
  8939  001254                     l11383:
  8940                           
  8941                           ; BSR set to: 2
  8942                           ;drv_mrf_miwi_24j40.c: 622: if (RxBuffer[BankIndex].Payload[0] & 0x08)
  8943  001254  5042               	movf	_BankIndex,w,c
  8944  001256  0D45               	mullw	69
  8945  001258  0E01               	movlw	low (_RxBuffer+1)
  8946  00125A  24F3               	addwf	prodl,w,c
  8947  00125C  6ED9               	movwf	fsr2l,c
  8948  00125E  0E02               	movlw	high (_RxBuffer+1)
  8949  001260  20F4               	addwfc	prodh,w,c
  8950  001262  6EDA               	movwf	fsr2h,c
  8951  001264  B6DF               	btfsc	indf2,3,c
  8952  001266  D7E1               	goto	l11373
  8953  001268  D00B               	goto	l11405
  8954  00126A                     l11391:
  8955                           
  8956                           ; BSR set to: 2
  8957                           ;drv_mrf_miwi_24j40.c: 635: MACRxPacket.flags.bits.packetType = 0x00;
  8958  00126A  0EFC               	movlw	-4
  8959  00126C  1630               	andwf	_MACRxPacket,f,c
  8960                           
  8961                           ;drv_mrf_miwi_24j40.c: 636: break;
  8962  00126E  D01D               	goto	l11407
  8963  001270                     l11393:
  8964                           
  8965                           ; BSR set to: 2
  8966                           ;drv_mrf_miwi_24j40.c: 638: MACRxPacket.flags.bits.packetType = 0x01;
  8967  001270  5030               	movf	_MACRxPacket,w,c
  8968  001272  0BFC               	andlw	-4
  8969  001274  0901               	iorlw	1
  8970  001276  6E30               	movwf	_MACRxPacket,c
  8971                           
  8972                           ;drv_mrf_miwi_24j40.c: 639: break;
  8973  001278  D018               	goto	l11407
  8974  00127A                     l11395:
  8975                           
  8976                           ; BSR set to: 2
  8977                           ;drv_mrf_miwi_24j40.c: 642: MACRxPacket.flags.bits.packetType = 0x03;
  8978  00127A  0E03               	movlw	3
  8979  00127C  1230               	iorwf	_MACRxPacket,f,c
  8980                           
  8981                           ;drv_mrf_miwi_24j40.c: 643: break;
  8982  00127E  D015               	goto	l11407
  8983  001280                     l11405:
  8984                           
  8985                           ; BSR set to: 2
  8986  001280  5042               	movf	_BankIndex,w,c
  8987  001282  0D45               	mullw	69
  8988  001284  0E01               	movlw	low (_RxBuffer+1)
  8989  001286  24F3               	addwf	prodl,w,c
  8990  001288  6ED9               	movwf	fsr2l,c
  8991  00128A  0E02               	movlw	high (_RxBuffer+1)
  8992  00128C  20F4               	addwfc	prodh,w,c
  8993  00128E  6EDA               	movwf	fsr2h,c
  8994  001290  50DF               	movf	indf2,w,c
  8995  001292  0B07               	andlw	7
  8996  001294  6E1D               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  8997  001296  6A1E               	clrf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  8998                           
  8999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9000                           ; Switch size 1, requested type "speed"
  9001                           ; Number of cases is 1, Range of values is 0 to 0
  9002                           ; switch strategies available:
  9003                           ; Name         Instructions Cycles
  9004                           ; simple_byte            4     3 (average)
  9005                           ;	Chosen strategy is simple_byte
  9006  001298  501E               	movf	??_MiMAC_ReceivedPacket+1,w,c
  9007  00129A  E1C7               	bnz	l11373
  9008                           
  9009                           ; BSR set to: 2
  9010                           ; Switch size 1, requested type "speed"
  9011                           ; Number of cases is 3, Range of values is 0 to 3
  9012                           ; switch strategies available:
  9013                           ; Name         Instructions Cycles
  9014                           ; simple_byte           10     6 (average)
  9015                           ;	Chosen strategy is simple_byte
  9016  00129C  501D               	movf	??_MiMAC_ReceivedPacket,w,c
  9017  00129E  E0ED               	bz	l11395
  9018  0012A0  0A01               	xorlw	1	; case 1
  9019  0012A2  E0E3               	bz	l11391
  9020  0012A4  0A02               	xorlw	2	; case 3
  9021  0012A6  E0E4               	bz	l11393
  9022  0012A8  D7C0               	goto	l11373
  9023  0012AA                     l11407:
  9024                           
  9025                           ; BSR set to: 2
  9026                           ;drv_mrf_miwi_24j40.c: 649: MACRxPacket.LQIValue = RxBuffer[BankIndex].Payload[RxBuffer[
      +                          BankIndex].PayloadLen - 2];
  9027  0012AA  5042               	movf	_BankIndex,w,c
  9028  0012AC  0D45               	mullw	69
  9029  0012AE  0E00               	movlw	low _RxBuffer
  9030  0012B0  24F3               	addwf	prodl,w,c
  9031  0012B2  6ED9               	movwf	fsr2l,c
  9032  0012B4  0E02               	movlw	high _RxBuffer
  9033  0012B6  20F4               	addwfc	prodh,w,c
  9034  0012B8  6EDA               	movwf	fsr2h,c
  9035  0012BA  50DF               	movf	indf2,w,c
  9036  0012BC  6E1D               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  9037  0012BE  5042               	movf	_BankIndex,w,c
  9038  0012C0  0D45               	mullw	69
  9039  0012C2  681E               	setf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  9040  0012C4  681F               	setf	(??_MiMAC_ReceivedPacket+2)& (0+255),c
  9041  0012C6  0E00               	movlw	low _RxBuffer
  9042  0012C8  6E20               	movwf	(??_MiMAC_ReceivedPacket+3)& (0+255),c
  9043  0012CA  0E02               	movlw	high _RxBuffer
  9044  0012CC  6E21               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),c
  9045  0012CE  501E               	movf	??_MiMAC_ReceivedPacket+1,w,c
  9046  0012D0  2620               	addwf	??_MiMAC_ReceivedPacket+3,f,c
  9047  0012D2  501F               	movf	??_MiMAC_ReceivedPacket+2,w,c
  9048  0012D4  2221               	addwfc	??_MiMAC_ReceivedPacket+4,f,c
  9049  0012D6  50F3               	movf	prodl,w,c
  9050  0012D8  2620               	addwf	??_MiMAC_ReceivedPacket+3,f,c
  9051  0012DA  50F4               	movf	prodh,w,c
  9052  0012DC  2221               	addwfc	??_MiMAC_ReceivedPacket+4,f,c
  9053  0012DE  501D               	movf	??_MiMAC_ReceivedPacket,w,c
  9054  0012E0  2420               	addwf	??_MiMAC_ReceivedPacket+3,w,c
  9055  0012E2  6ED9               	movwf	fsr2l,c
  9056  0012E4  0E00               	movlw	0
  9057  0012E6  2021               	addwfc	??_MiMAC_ReceivedPacket+4,w,c
  9058  0012E8  6EDA               	movwf	fsr2h,c
  9059  0012EA  50DF               	movf	indf2,w,c
  9060  0012EC  6E37               	movwf	_MACRxPacket+7,c
  9061                           
  9062                           ;drv_mrf_miwi_24j40.c: 650: MACRxPacket.RSSIValue = RxBuffer[BankIndex].Payload[RxBuffer
      +                          [BankIndex].PayloadLen - 1];
  9063  0012EE  5042               	movf	_BankIndex,w,c
  9064  0012F0  0D45               	mullw	69
  9065  0012F2  0E00               	movlw	low _RxBuffer
  9066  0012F4  24F3               	addwf	prodl,w,c
  9067  0012F6  6ED9               	movwf	fsr2l,c
  9068  0012F8  0E02               	movlw	high _RxBuffer
  9069  0012FA  20F4               	addwfc	prodh,w,c
  9070  0012FC  6EDA               	movwf	fsr2h,c
  9071  0012FE  50DF               	movf	indf2,w,c
  9072  001300  6E1D               	movwf	??_MiMAC_ReceivedPacket& (0+255),c
  9073  001302  5042               	movf	_BankIndex,w,c
  9074  001304  0D45               	mullw	69
  9075  001306  0E00               	movlw	low _RxBuffer
  9076  001308  6E1E               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),c
  9077  00130A  0E02               	movlw	high _RxBuffer
  9078  00130C  6E1F               	movwf	(??_MiMAC_ReceivedPacket+2)& (0+255),c
  9079  00130E  50F3               	movf	prodl,w,c
  9080  001310  261E               	addwf	??_MiMAC_ReceivedPacket+1,f,c
  9081  001312  50F4               	movf	prodh,w,c
  9082  001314  221F               	addwfc	??_MiMAC_ReceivedPacket+2,f,c
  9083  001316  501D               	movf	??_MiMAC_ReceivedPacket,w,c
  9084  001318  241E               	addwf	??_MiMAC_ReceivedPacket+1,w,c
  9085  00131A  6ED9               	movwf	fsr2l,c
  9086  00131C  0E00               	movlw	0
  9087  00131E  201F               	addwfc	??_MiMAC_ReceivedPacket+2,w,c
  9088  001320  6EDA               	movwf	fsr2h,c
  9089  001322  50DF               	movf	indf2,w,c
  9090  001324  6E36               	movwf	_MACRxPacket+6,c
  9091                           
  9092                           ; BSR set to: 2
  9093                           ;drv_mrf_miwi_24j40.c: 653: return 1;
  9094  001326  0C01               	retlw	1	;funcret
  9095  001328                     __end_of_MiMAC_ReceivedPacket:
  9096                           	opt stack 0
  9097                           tblptru	equ	0xFF8
  9098                           tblptrh	equ	0xFF7
  9099                           tblptrl	equ	0xFF6
  9100                           tablat	equ	0xFF5
  9101                           prodh	equ	0xFF4
  9102                           prodl	equ	0xFF3
  9103                           intcon	equ	0xFF2
  9104                           intcon2	equ	0xFF1
  9105                           intcon3	equ	0xFF0
  9106                           postinc0	equ	0xFEE
  9107                           wreg	equ	0xFE8
  9108                           indf1	equ	0xFE7
  9109                           fsr1h	equ	0xFE2
  9110                           fsr1l	equ	0xFE1
  9111                           indf2	equ	0xFDF
  9112                           postinc2	equ	0xFDE
  9113                           postdec2	equ	0xFDD
  9114                           fsr2h	equ	0xFDA
  9115                           fsr2l	equ	0xFD9
  9116                           status	equ	0xFD8
  9117                           
  9118 ;; *************** function _Forward_Packet_PANCr_to_EDy *****************
  9119 ;; Defined at:
  9120 ;;		line 178 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9121 ;; Parameters:    Size  Location     Type
  9122 ;;  fw_payload      2   69[BANK0 ] PTR unsigned char 
  9123 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  9124 ;;  index           1   71[BANK0 ] unsigned char 
  9125 ;;  EDxAddress      2   72[BANK0 ] PTR unsigned char 
  9126 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  i               1   75[BANK0 ] unsigned char 
  9129 ;;  status          1   74[BANK0 ] unsigned char 
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  1    wreg      unsigned char 
  9132 ;; Registers used:
  9133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : F/0
  9136 ;;		On exit  : F/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9139 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9140 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9142 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9143 ;;Total ram usage:        7 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; Hardware stack levels required when called:   12
  9146 ;; This function calls:
  9147 ;;		_DemoOutput_UnicastFail
  9148 ;;		_MiApp_UnicastConnection
  9149 ;; This function is called by:
  9150 ;;		_P2PTasks
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           	psect	text32
  9155  0025E2                     __ptext32:
  9156                           	opt stack 0
  9157  0025E2                     _Forward_Packet_PANCr_to_EDy:
  9158                           	opt stack 13
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;miwi_p2p.c: 180: uint8_t i;
  9162                           ;miwi_p2p.c: 181: bool status;
  9163                           ;miwi_p2p.c: 182: {TxData = 0;};
  9164                           
  9165                           ;incstack = 0
  9166  0025E2  6BE6               	clrf	_TxData& (0+255),b
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;miwi_p2p.c: 183: TxBuffer[TxData++] = EDxAddress[0];
  9170  0025E4  C0A8  FFD9         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress,fsr2l
  9171  0025E8  C0A9  FFDA         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress+1,fsr2h
  9172  0025EC  0E38               	movlw	low _TxBuffer
  9173  0025EE  25E6               	addwf	_TxData& (0+255),w,b
  9174  0025F0  6EE1               	movwf	fsr1l,c
  9175  0025F2  6AE2               	clrf	fsr1h,c
  9176  0025F4  0E01               	movlw	high _TxBuffer
  9177  0025F6  22E2               	addwfc	fsr1h,f,c
  9178  0025F8  CFDF FFE7          	movff	indf2,indf1
  9179                           
  9180                           ; BSR set to: 0
  9181  0025FC  2BE6               	incf	_TxData& (0+255),f,b
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;miwi_p2p.c: 184: TxBuffer[TxData++] = EDxAddress[1];
  9185  0025FE  EE20 F001          	lfsr	2,1
  9186  002602  51A8               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
  9187  002604  26D9               	addwf	fsr2l,f,c
  9188  002606  51A9               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
  9189  002608  22DA               	addwfc	fsr2h,f,c
  9190  00260A  0E38               	movlw	low _TxBuffer
  9191  00260C  25E6               	addwf	_TxData& (0+255),w,b
  9192  00260E  6EE1               	movwf	fsr1l,c
  9193  002610  6AE2               	clrf	fsr1h,c
  9194  002612  0E01               	movlw	high _TxBuffer
  9195  002614  22E2               	addwfc	fsr1h,f,c
  9196  002616  CFDF FFE7          	movff	indf2,indf1
  9197  00261A  2BE6               	incf	_TxData& (0+255),f,b
  9198                           
  9199                           ; BSR set to: 0
  9200                           ;miwi_p2p.c: 185: TxBuffer[TxData++] = EDxAddress[2];
  9201  00261C  EE20 F002          	lfsr	2,2
  9202  002620  51A8               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
  9203  002622  26D9               	addwf	fsr2l,f,c
  9204  002624  51A9               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
  9205  002626  22DA               	addwfc	fsr2h,f,c
  9206  002628  0E38               	movlw	low _TxBuffer
  9207  00262A  25E6               	addwf	_TxData& (0+255),w,b
  9208  00262C  6EE1               	movwf	fsr1l,c
  9209  00262E  6AE2               	clrf	fsr1h,c
  9210  002630  0E01               	movlw	high _TxBuffer
  9211  002632  22E2               	addwfc	fsr1h,f,c
  9212  002634  CFDF FFE7          	movff	indf2,indf1
  9213                           
  9214                           ; BSR set to: 0
  9215  002638  2BE6               	incf	_TxData& (0+255),f,b
  9216                           
  9217                           ; BSR set to: 0
  9218                           ;miwi_p2p.c: 186: for(i = 3; i < 40; i++)
  9219  00263A  0E03               	movlw	3
  9220  00263C  6FAB               	movwf	Forward_Packet_PANCr_to_EDy@i& (0+255),b
  9221  00263E                     l11495:
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;miwi_p2p.c: 187: {
  9225                           ;miwi_p2p.c: 188: TxBuffer[TxData++] = fw_payload[i];
  9226  00263E  51AB               	movf	Forward_Packet_PANCr_to_EDy@i& (0+255),w,b
  9227  002640  25A5               	addwf	Forward_Packet_PANCr_to_EDy@fw_payload& (0+255),w,b
  9228  002642  6ED9               	movwf	fsr2l,c
  9229  002644  0E00               	movlw	0
  9230  002646  21A6               	addwfc	(Forward_Packet_PANCr_to_EDy@fw_payload+1)& (0+255),w,b
  9231  002648  6EDA               	movwf	fsr2h,c
  9232  00264A  0E38               	movlw	low _TxBuffer
  9233  00264C  25E6               	addwf	_TxData& (0+255),w,b
  9234  00264E  6EE1               	movwf	fsr1l,c
  9235  002650  6AE2               	clrf	fsr1h,c
  9236  002652  0E01               	movlw	high _TxBuffer
  9237  002654  22E2               	addwfc	fsr1h,f,c
  9238  002656  CFDF FFE7          	movff	indf2,indf1
  9239                           
  9240                           ; BSR set to: 0
  9241  00265A  2BE6               	incf	_TxData& (0+255),f,b
  9242                           
  9243                           ; BSR set to: 0
  9244  00265C  2BAB               	incf	Forward_Packet_PANCr_to_EDy@i& (0+255),f,b
  9245                           
  9246                           ; BSR set to: 0
  9247  00265E  0E27               	movlw	39
  9248  002660  65AB               	cpfsgt	Forward_Packet_PANCr_to_EDy@i& (0+255),b
  9249  002662  D7ED               	goto	l11495
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;miwi_p2p.c: 189: }
  9253                           ;miwi_p2p.c: 193: status = MiApp_UnicastConnection (index,0) ;
  9254  002664  6BA3               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  9255  002666  51A7               	movf	Forward_Packet_PANCr_to_EDy@index& (0+255),w,b
  9256  002668  EC32  F019         	call	_MiApp_UnicastConnection
  9257  00266C  0100               	movlb	0	; () banked
  9258  00266E  6FAA               	movwf	Forward_Packet_PANCr_to_EDy@status& (0+255),b
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;miwi_p2p.c: 196: if(!status)
  9262  002670  51AA               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
  9263  002672  B4D8               	btfsc	status,2,c
  9264                           
  9265                           ; BSR set to: 0
  9266                           ;miwi_p2p.c: 197: {
  9267                           ;miwi_p2p.c: 198: DemoOutput_UnicastFail();
  9268  002674  ECB3  F01A         	call	_DemoOutput_UnicastFail	;wreg free
  9269                           
  9270                           ;miwi_p2p.c: 199: }
  9271                           ;miwi_p2p.c: 200: return status;
  9272  002678  0100               	movlb	0	; () banked
  9273  00267A  51AA               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
  9274                           
  9275                           ; BSR set to: 0
  9276  00267C  0012               	return		;funcret
  9277  00267E                     __end_of_Forward_Packet_PANCr_to_EDy:
  9278                           	opt stack 0
  9279                           tblptru	equ	0xFF8
  9280                           tblptrh	equ	0xFF7
  9281                           tblptrl	equ	0xFF6
  9282                           tablat	equ	0xFF5
  9283                           prodh	equ	0xFF4
  9284                           prodl	equ	0xFF3
  9285                           intcon	equ	0xFF2
  9286                           intcon2	equ	0xFF1
  9287                           intcon3	equ	0xFF0
  9288                           postinc0	equ	0xFEE
  9289                           wreg	equ	0xFE8
  9290                           indf1	equ	0xFE7
  9291                           fsr1h	equ	0xFE2
  9292                           fsr1l	equ	0xFE1
  9293                           indf2	equ	0xFDF
  9294                           postinc2	equ	0xFDE
  9295                           postdec2	equ	0xFDD
  9296                           fsr2h	equ	0xFDA
  9297                           fsr2l	equ	0xFD9
  9298                           status	equ	0xFD8
  9299                           
  9300 ;; *************** function _MiApp_UnicastConnection *****************
  9301 ;; Defined at:
  9302 ;;		line 1764 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;  ConnectionIn    1    wreg     unsigned char 
  9305 ;;  SecEn           1   67[BANK0 ] unsigned char 
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;  ConnectionIn    1   68[BANK0 ] unsigned char 
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      unsigned char 
  9310 ;; Registers used:
  9311 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9312 ;; Tracked objects:
  9313 ;;		On entry : F/0
  9314 ;;		On exit  : C/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9317 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9320 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9321 ;;Total ram usage:        2 bytes
  9322 ;; Hardware stack levels used:    1
  9323 ;; Hardware stack levels required when called:   11
  9324 ;; This function calls:
  9325 ;;		_MiApp_UnicastAddress
  9326 ;; This function is called by:
  9327 ;;		_Forward_Packet_PANCr_to_EDy
  9328 ;;		_run_star_demo
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text33
  9333  003264                     __ptext33:
  9334                           	opt stack 0
  9335  003264                     _MiApp_UnicastConnection:
  9336                           	opt stack 13
  9337                           
  9338                           ; BSR set to: 0
  9339                           ;incstack = 0
  9340                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
  9341  003264  6FA4               	movwf	MiApp_UnicastConnection@ConnectionIndex& (0+255),b
  9342                           
  9343                           ; BSR set to: 0
  9344                           ;miwi_p2p.c: 1767: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
  9345  003266  51A4               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  9346  003268  0D0E               	mullw	14
  9347  00326A  0E0C               	movlw	low (_ConnectionTable+12)
  9348  00326C  24F3               	addwf	prodl,w,c
  9349  00326E  6ED9               	movwf	fsr2l,c
  9350  003270  0E03               	movlw	high (_ConnectionTable+12)
  9351  003272  20F4               	addwfc	prodh,w,c
  9352  003274  6EDA               	movwf	fsr2h,c
  9353  003276  0103               	movlb	3	; () banked
  9354  003278  AEDF               	btfss	indf2,7,c
  9355  00327A  0C00               	retlw	0
  9356                           
  9357                           ; BSR set to: 3
  9358                           ;miwi_p2p.c: 1768: {
  9359                           ;miwi_p2p.c: 1801: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
  9360  00327C  0100               	movlb	0	; () banked
  9361  00327E  51A4               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  9362  003280  0D0E               	mullw	14
  9363  003282  0E04               	movlw	low (_ConnectionTable+4)
  9364  003284  24F3               	addwf	prodl,w,c
  9365  003286  6F9F               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
  9366  003288  0E03               	movlw	high (_ConnectionTable+4)
  9367  00328A  20F4               	addwfc	prodh,w,c
  9368  00328C  6FA0               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
  9369  00328E  0E01               	movlw	1
  9370  003290  6FA1               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  9371  003292  C0A3  F0A2         	movff	MiApp_UnicastConnection@SecEn,MiApp_UnicastAddress@SecEn
  9372  003296  EF55  F01A         	goto	_MiApp_UnicastAddress	;wreg free
  9373  00329A                     __end_of_MiApp_UnicastConnection:
  9374                           	opt stack 0
  9375                           tblptru	equ	0xFF8
  9376                           tblptrh	equ	0xFF7
  9377                           tblptrl	equ	0xFF6
  9378                           tablat	equ	0xFF5
  9379                           prodh	equ	0xFF4
  9380                           prodl	equ	0xFF3
  9381                           intcon	equ	0xFF2
  9382                           intcon2	equ	0xFF1
  9383                           intcon3	equ	0xFF0
  9384                           postinc0	equ	0xFEE
  9385                           wreg	equ	0xFE8
  9386                           indf1	equ	0xFE7
  9387                           fsr1h	equ	0xFE2
  9388                           fsr1l	equ	0xFE1
  9389                           indf2	equ	0xFDF
  9390                           postinc2	equ	0xFDE
  9391                           postdec2	equ	0xFDD
  9392                           fsr2h	equ	0xFDA
  9393                           fsr2l	equ	0xFD9
  9394                           status	equ	0xFD8
  9395                           
  9396 ;; *************** function _MiApp_UnicastAddress *****************
  9397 ;; Defined at:
  9398 ;;		line 1843 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  DestinationA    2   63[BANK0 ] PTR unsigned char 
  9401 ;;		 -> ConnectionTable(140), 
  9402 ;;  PermanentAdd    1   65[BANK0 ] unsigned char 
  9403 ;;  SecEn           1   66[BANK0 ] unsigned char 
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;		None
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  1    wreg      unsigned char 
  9408 ;; Registers used:
  9409 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9410 ;; Tracked objects:
  9411 ;;		On entry : F/0
  9412 ;;		On exit  : F/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9415 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9418 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9419 ;;Total ram usage:        4 bytes
  9420 ;; Hardware stack levels used:    1
  9421 ;; Hardware stack levels required when called:   10
  9422 ;; This function calls:
  9423 ;;		_SendPacket
  9424 ;; This function is called by:
  9425 ;;		_MiApp_UnicastConnection
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           	psect	text34
  9430  0034AA                     __ptext34:
  9431                           	opt stack 0
  9432  0034AA                     _MiApp_UnicastAddress:
  9433                           	opt stack 13
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;miwi_p2p.c: 1874: return SendPacket(0, myPANID, DestinationAddress, 0, SecEn);
  9437                           
  9438                           ;incstack = 0
  9439  0034AA  C0EB  F08F         	movff	_myPANID,SendPacket@DestinationPANID
  9440  0034AE  C0EC  F090         	movff	_myPANID+1,SendPacket@DestinationPANID+1
  9441  0034B2  C09F  F091         	movff	MiApp_UnicastAddress@DestinationAddress,SendPacket@DestinationAddress
  9442  0034B6  C0A0  F092         	movff	MiApp_UnicastAddress@DestinationAddress+1,SendPacket@DestinationAddress+1
  9443  0034BA  0E00               	movlw	0
  9444  0034BC  6B93               	clrf	SendPacket@isCommand& (0+255),b
  9445  0034BE  C0A2  F094         	movff	MiApp_UnicastAddress@SecEn,SendPacket@SecurityEnabled
  9446  0034C2  EC95  F012         	call	_SendPacket
  9447                           
  9448                           ; BSR set to: 0
  9449  0034C6  0012               	return		;funcret
  9450  0034C8                     __end_of_MiApp_UnicastAddress:
  9451                           	opt stack 0
  9452                           tblptru	equ	0xFF8
  9453                           tblptrh	equ	0xFF7
  9454                           tblptrl	equ	0xFF6
  9455                           tablat	equ	0xFF5
  9456                           prodh	equ	0xFF4
  9457                           prodl	equ	0xFF3
  9458                           intcon	equ	0xFF2
  9459                           intcon2	equ	0xFF1
  9460                           intcon3	equ	0xFF0
  9461                           postinc0	equ	0xFEE
  9462                           wreg	equ	0xFE8
  9463                           indf1	equ	0xFE7
  9464                           fsr1h	equ	0xFE2
  9465                           fsr1l	equ	0xFE1
  9466                           indf2	equ	0xFDF
  9467                           postinc2	equ	0xFDE
  9468                           postdec2	equ	0xFDD
  9469                           fsr2h	equ	0xFDA
  9470                           fsr2l	equ	0xFD9
  9471                           status	equ	0xFD8
  9472                           
  9473 ;; *************** function _SendPacket *****************
  9474 ;; Defined at:
  9475 ;;		line 1605 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9476 ;; Parameters:    Size  Location     Type
  9477 ;;  Broadcast       1    wreg     unsigned char 
  9478 ;;  DestinationP    2   47[BANK0 ] struct .
  9479 ;;  DestinationA    2   49[BANK0 ] PTR unsigned char 
  9480 ;;		 -> NULL(0), ConnectionTable(140), RxBuffer.Payload(68), RxBuffer(138), 
  9481 ;;  isCommand       1   51[BANK0 ] unsigned char 
  9482 ;;  SecurityEnab    1   52[BANK0 ] unsigned char 
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;  Broadcast       1   55[BANK0 ] unsigned char 
  9485 ;;  tParam          7   56[BANK0 ] struct .
  9486 ;;  status          1   54[BANK0 ] unsigned char 
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  1    wreg      unsigned char 
  9489 ;; Registers used:
  9490 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : F/0
  9493 ;;		On exit  : F/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9496 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9497 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9498 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9499 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9500 ;;Total ram usage:       16 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    9
  9503 ;; This function calls:
  9504 ;;		_MiMAC_SendPacket
  9505 ;; This function is called by:
  9506 ;;		_P2PTasks
  9507 ;;		_CheckForData
  9508 ;;		_MiApp_UnicastAddress
  9509 ;;		_MiApp_UnicastStar
  9510 ;;		_SW_Ack_SrED
  9511 ;;		_MiApp_EstablishConnection
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           	psect	text35
  9516  00252A                     __ptext35:
  9517                           	opt stack 0
  9518  00252A                     _SendPacket:
  9519                           	opt stack 18
  9520                           
  9521                           ; BSR set to: 0
  9522                           ;incstack = 0
  9523                           ;SendPacket@Broadcast stored from wreg
  9524  00252A  6F97               	movwf	SendPacket@Broadcast& (0+255),b
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;miwi_p2p.c: 1617: MAC_TRANS_PARAM tParam;
  9528                           ;miwi_p2p.c: 1618: bool status;
  9529                           ;miwi_p2p.c: 1620: tParam.flags.Val = 0;
  9530  00252C  6B98               	clrf	SendPacket@tParam& (0+255),b
  9531                           
  9532                           ; BSR set to: 0
  9533                           ;miwi_p2p.c: 1621: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
  9534  00252E  5193               	movf	SendPacket@isCommand& (0+255),w,b
  9535  002530  E003               	bz	u10620
  9536  002532  6B95               	clrf	??_SendPacket& (0+255),b
  9537  002534  2B95               	incf	??_SendPacket& (0+255),f,b
  9538  002536  D002               	goto	u10638
  9539  002538                     u10620:
  9540  002538  0100               	movlb	0	; () banked
  9541  00253A  6B95               	clrf	??_SendPacket& (0+255),b
  9542  00253C                     u10638:
  9543  00253C  5198               	movf	SendPacket@tParam& (0+255),w,b
  9544  00253E  1995               	xorwf	??_SendPacket& (0+255),w,b
  9545  002540  0BFC               	andlw	-4
  9546  002542  1995               	xorwf	??_SendPacket& (0+255),w,b
  9547  002544  6F98               	movwf	SendPacket@tParam& (0+255),b
  9548                           
  9549                           ;miwi_p2p.c: 1622: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
  9550  002546  5197               	movf	SendPacket@Broadcast& (0+255),w,b
  9551  002548  E103               	bnz	u10640
  9552  00254A  6B95               	clrf	??_SendPacket& (0+255),b
  9553  00254C  2B95               	incf	??_SendPacket& (0+255),f,b
  9554  00254E  D002               	goto	u10658
  9555  002550                     u10640:
  9556  002550  0100               	movlb	0	; () banked
  9557  002552  6B95               	clrf	??_SendPacket& (0+255),b
  9558  002554                     u10658:
  9559  002554  3B95               	swapf	??_SendPacket& (0+255),f,b
  9560  002556  4795               	rlncf	??_SendPacket& (0+255),f,b
  9561  002558  5198               	movf	SendPacket@tParam& (0+255),w,b
  9562  00255A  1995               	xorwf	??_SendPacket& (0+255),w,b
  9563  00255C  0BDF               	andlw	-33
  9564  00255E  1995               	xorwf	??_SendPacket& (0+255),w,b
  9565  002560  6F98               	movwf	SendPacket@tParam& (0+255),b
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;miwi_p2p.c: 1623: tParam.flags.bits.broadcast = Broadcast;
  9569  002562  B197               	btfsc	SendPacket@Broadcast& (0+255),0,b
  9570  002564  D002               	bra	u10665
  9571  002566  9598               	bcf	SendPacket@tParam& (0+255),2,b
  9572  002568  D002               	bra	u10666
  9573  00256A                     u10665:
  9574  00256A  0100               	movlb	0	; () banked
  9575  00256C  8598               	bsf	SendPacket@tParam& (0+255),2,b
  9576  00256E                     u10666:
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;miwi_p2p.c: 1624: tParam.flags.bits.secEn = SecurityEnabled;
  9580  00256E  B194               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
  9581  002570  D002               	bra	u10675
  9582  002572  9798               	bcf	SendPacket@tParam& (0+255),3,b
  9583  002574  D002               	bra	u10676
  9584  002576                     u10675:
  9585  002576  0100               	movlb	0	; () banked
  9586  002578  8798               	bsf	SendPacket@tParam& (0+255),3,b
  9587  00257A                     u10676:
  9588                           
  9589                           ; BSR set to: 0
  9590                           ;miwi_p2p.c: 1626: tParam.altSrcAddr = 0;
  9591  00257A  6B9C               	clrf	(SendPacket@tParam+4)& (0+255),b
  9592                           
  9593                           ; BSR set to: 0
  9594                           ;miwi_p2p.c: 1627: tParam.altDestAddr = (Broadcast) ? 1 : 0;
  9595  00257C  5197               	movf	SendPacket@Broadcast& (0+255),w,b
  9596  00257E  0E01               	movlw	1
  9597  002580  B4D8               	btfsc	status,2,c
  9598  002582  0E00               	movlw	0
  9599  002584  6F9B               	movwf	(SendPacket@tParam+3)& (0+255),b
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;miwi_p2p.c: 1633: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
  9603  002586  5197               	movf	SendPacket@Broadcast& (0+255),w,b
  9604  002588  E103               	bnz	u10700
  9605  00258A  6B95               	clrf	??_SendPacket& (0+255),b
  9606  00258C  2B95               	incf	??_SendPacket& (0+255),f,b
  9607  00258E  D002               	goto	u10718
  9608  002590                     u10700:
  9609  002590  0100               	movlb	0	; () banked
  9610  002592  6B95               	clrf	??_SendPacket& (0+255),b
  9611  002594                     u10718:
  9612  002594  3B95               	swapf	??_SendPacket& (0+255),f,b
  9613  002596  4795               	rlncf	??_SendPacket& (0+255),f,b
  9614  002598  4795               	rlncf	??_SendPacket& (0+255),f,b
  9615  00259A  5198               	movf	SendPacket@tParam& (0+255),w,b
  9616  00259C  1995               	xorwf	??_SendPacket& (0+255),w,b
  9617  00259E  0BBF               	andlw	-65
  9618  0025A0  1995               	xorwf	??_SendPacket& (0+255),w,b
  9619  0025A2  6F98               	movwf	SendPacket@tParam& (0+255),b
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;miwi_p2p.c: 1646: tParam.flags.bits.sourcePrsnt = 1;
  9623  0025A4  8F98               	bsf	SendPacket@tParam& (0+255),7,b
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;miwi_p2p.c: 1649: tParam.DestAddress = DestinationAddress;
  9627  0025A6  C091  F099         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
  9628  0025AA  C092  F09A         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
  9629                           
  9630                           ; BSR set to: 0
  9631                           ;miwi_p2p.c: 1652: tParam.DestPANID.Val = DestinationPANID.Val;
  9632  0025AE  C08F  F09D         	movff	SendPacket@DestinationPANID,SendPacket@tParam+5
  9633  0025B2  C090  F09E         	movff	SendPacket@DestinationPANID+1,SendPacket@tParam+6
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;miwi_p2p.c: 1655: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
  9637  0025B6  EE20  F098         	lfsr	2,SendPacket@tParam
  9638  0025BA  EE00  F074         	lfsr	0,MiMAC_SendPacket@transParam
  9639  0025BE  0E06               	movlw	6
  9640  0025C0                     u10721:
  9641  0025C0  CFDB FFEB          	movff	plusw2,plusw0
  9642  0025C4  06E8               	decf	wreg,f,c
  9643  0025C6  E2FC               	bc	u10721
  9644  0025C8  0E38               	movlw	low _TxBuffer
  9645  0025CA  6F7B               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
  9646  0025CC  0E01               	movlw	high _TxBuffer
  9647  0025CE  6F7C               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
  9648  0025D0  C0E6  F07D         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
  9649  0025D4  ECEF  F00B         	call	_MiMAC_SendPacket	;wreg free
  9650  0025D8  0100               	movlb	0	; () banked
  9651  0025DA  6F96               	movwf	SendPacket@status& (0+255),b
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;miwi_p2p.c: 1656: TxData = 0;
  9655  0025DC  6BE6               	clrf	_TxData& (0+255),b
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;miwi_p2p.c: 1658: return status;
  9659  0025DE  5196               	movf	SendPacket@status& (0+255),w,b
  9660                           
  9661                           ; BSR set to: 0
  9662  0025E0  0012               	return		;funcret
  9663  0025E2                     __end_of_SendPacket:
  9664                           	opt stack 0
  9665                           tblptru	equ	0xFF8
  9666                           tblptrh	equ	0xFF7
  9667                           tblptrl	equ	0xFF6
  9668                           tablat	equ	0xFF5
  9669                           prodh	equ	0xFF4
  9670                           prodl	equ	0xFF3
  9671                           intcon	equ	0xFF2
  9672                           intcon2	equ	0xFF1
  9673                           intcon3	equ	0xFF0
  9674                           postinc0	equ	0xFEE
  9675                           plusw0	equ	0xFEB
  9676                           wreg	equ	0xFE8
  9677                           indf1	equ	0xFE7
  9678                           fsr1h	equ	0xFE2
  9679                           fsr1l	equ	0xFE1
  9680                           indf2	equ	0xFDF
  9681                           postinc2	equ	0xFDE
  9682                           postdec2	equ	0xFDD
  9683                           plusw2	equ	0xFDB
  9684                           fsr2h	equ	0xFDA
  9685                           fsr2l	equ	0xFD9
  9686                           status	equ	0xFD8
  9687                           
  9688 ;; *************** function _MiMAC_SendPacket *****************
  9689 ;; Defined at:
  9690 ;;		line 736 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  transParam      7   20[BANK0 ] struct .
  9693 ;;  MACPayload      2   27[BANK0 ] PTR unsigned char 
  9694 ;;		 -> TxBuffer(40), 
  9695 ;;  MACPayloadLe    1   29[BANK0 ] unsigned char 
  9696 ;; Auto vars:     Size  Location     Type
  9697 ;;  t2              4   38[BANK0 ] struct _MIWI_TICK
  9698 ;;  t1              4   34[BANK0 ] struct _MIWI_TICK
  9699 ;;  loc             1   46[BANK0 ] unsigned char 
  9700 ;;  i               1   45[BANK0 ] unsigned char 
  9701 ;;  headerLength    1   44[BANK0 ] unsigned char 
  9702 ;;  frameControl    1   43[BANK0 ] unsigned char 
  9703 ;;  IntraPAN        1   42[BANK0 ] unsigned char 
  9704 ;; Return value:  Size  Location     Type
  9705 ;;                  1    wreg      unsigned char 
  9706 ;; Registers used:
  9707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9708 ;; Tracked objects:
  9709 ;;		On entry : F/0
  9710 ;;		On exit  : 0/0
  9711 ;;		Unchanged: 0/0
  9712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9713 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9714 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9715 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9716 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9717 ;;Total ram usage:       27 bytes
  9718 ;; Hardware stack levels used:    1
  9719 ;; Hardware stack levels required when called:    8
  9720 ;; This function calls:
  9721 ;;		_InitMRF24J40
  9722 ;;		_MiMAC_SetAltAddress
  9723 ;;		_MiWi_TickGet
  9724 ;;		_PHYSetLongRAMAddr
  9725 ;;		_PHYSetShortRAMAddr
  9726 ;; This function is called by:
  9727 ;;		_SendPacket
  9728 ;; This function uses a non-reentrant model
  9729 ;;
  9730                           
  9731                           	psect	text36
  9732  0017DE                     __ptext36:
  9733                           	opt stack 0
  9734  0017DE                     _MiMAC_SendPacket:
  9735                           	opt stack 18
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;drv_mrf_miwi_24j40.c: 740: uint8_t headerLength;
  9739                           ;drv_mrf_miwi_24j40.c: 741: uint8_t loc = 0;
  9740                           
  9741                           ; BSR set to: 0
  9742                           ;incstack = 0
  9743  0017DE  6B8E               	clrf	MiMAC_SendPacket@loc& (0+255),b
  9744                           
  9745                           ;drv_mrf_miwi_24j40.c: 744: bool IntraPAN;
  9746                           ;drv_mrf_miwi_24j40.c: 746: MIWI_TICK t1, t2;
  9747                           ;drv_mrf_miwi_24j40.c: 747: uint8_t frameControl;
  9748                           ;drv_mrf_miwi_24j40.c: 749: if (transParam.flags.bits.broadcast)
  9749  0017E0  A574               	btfss	MiMAC_SendPacket@transParam& (0+255),2,b
  9750  0017E2  D002               	goto	l10427
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;drv_mrf_miwi_24j40.c: 750: {
  9754                           ;drv_mrf_miwi_24j40.c: 751: transParam.altDestAddr = 1;
  9755  0017E4  0E01               	movlw	1
  9756  0017E6  6F77               	movwf	(MiMAC_SendPacket@transParam+3)& (0+255),b
  9757  0017E8                     l10427:
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;drv_mrf_miwi_24j40.c: 752: }
  9761                           ;drv_mrf_miwi_24j40.c: 754: if (transParam.flags.bits.secEn)
  9762  0017E8  B774               	btfsc	MiMAC_SendPacket@transParam& (0+255),3,b
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;drv_mrf_miwi_24j40.c: 755: {
  9766                           ;drv_mrf_miwi_24j40.c: 756: transParam.altSrcAddr = 0;
  9767  0017EA  6B78               	clrf	(MiMAC_SendPacket@transParam+4)& (0+255),b
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;drv_mrf_miwi_24j40.c: 757: }
  9771                           ;drv_mrf_miwi_24j40.c: 783: if (transParam.flags.bits.packetType == 0x01)
  9772  0017EC  5174               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  9773  0017EE  0B03               	andlw	3
  9774  0017F0  06E8               	decf	wreg,f,c
  9775  0017F2  E102               	bnz	l10435
  9776                           
  9777                           ; BSR set to: 0
  9778                           ;drv_mrf_miwi_24j40.c: 784: {
  9779                           ;drv_mrf_miwi_24j40.c: 785: frameControl = 0x03;
  9780  0017F4  0E03               	movlw	3
  9781  0017F6  D004               	goto	L11
  9782  0017F8                     l10435:
  9783                           
  9784                           ; BSR set to: 0
  9785  0017F8  5174               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  9786  0017FA  0B03               	andlw	3
  9787  0017FC  E102               	bnz	l10439
  9788                           
  9789                           ; BSR set to: 0
  9790                           ;drv_mrf_miwi_24j40.c: 787: {
  9791                           ;drv_mrf_miwi_24j40.c: 788: frameControl = 0x01;
  9792  0017FE  0E01               	movlw	1
  9793  001800                     L11:
  9794  001800  6F8B               	movwf	MiMAC_SendPacket@frameControl& (0+255),b
  9795  001802                     l10439:
  9796                           
  9797                           ; BSR set to: 0
  9798                           ;drv_mrf_miwi_24j40.c: 789: }
  9799                           ;drv_mrf_miwi_24j40.c: 794: if ((transParam.DestPANID.Val == MAC_PANID.Val) && (MAC_PANI
      +                          D.Val != 0xFFFF))
  9800  001802  503B               	movf	_MAC_PANID,w,c
  9801  001804  1979               	xorwf	(MiMAC_SendPacket@transParam+5)& (0+255),w,b
  9802  001806  E10E               	bnz	l10449
  9803  001808  503C               	movf	_MAC_PANID+1,w,c
  9804  00180A  197A               	xorwf	(MiMAC_SendPacket@transParam+6)& (0+255),w,b
  9805  00180C  A4D8               	btfss	status,2,c
  9806  00180E  D00A               	goto	l10449
  9807                           
  9808                           ; BSR set to: 0
  9809  001810  283B               	incf	_MAC_PANID,w,c
  9810  001812  E102               	bnz	u10270
  9811  001814  283C               	incf	_MAC_PANID+1,w,c
  9812  001816  E006               	bz	l10449
  9813  001818                     u10270:
  9814                           
  9815                           ; BSR set to: 0
  9816                           ;drv_mrf_miwi_24j40.c: 796: {
  9817                           ;drv_mrf_miwi_24j40.c: 797: headerLength = 5;
  9818  001818  0E05               	movlw	5
  9819  00181A  6F8C               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
  9820                           
  9821                           ; BSR set to: 0
  9822                           ;drv_mrf_miwi_24j40.c: 798: frameControl |= 0x40;
  9823  00181C  8D8B               	bsf	MiMAC_SendPacket@frameControl& (0+255),6,b
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;drv_mrf_miwi_24j40.c: 800: IntraPAN = 1;
  9827  00181E  0E01               	movlw	1
  9828  001820  6F8A               	movwf	MiMAC_SendPacket@IntraPAN& (0+255),b
  9829                           
  9830                           ;drv_mrf_miwi_24j40.c: 802: }
  9831  001822  D003               	goto	l137
  9832  001824                     l10449:
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;drv_mrf_miwi_24j40.c: 804: else
  9836                           ;drv_mrf_miwi_24j40.c: 805: {
  9837                           ;drv_mrf_miwi_24j40.c: 806: headerLength = 7;
  9838  001824  0E07               	movlw	7
  9839  001826  6F8C               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;drv_mrf_miwi_24j40.c: 807: IntraPAN = 0;
  9843  001828  6B8A               	clrf	MiMAC_SendPacket@IntraPAN& (0+255),b
  9844  00182A                     l137:
  9845                           
  9846                           ; BSR set to: 0
  9847                           ;drv_mrf_miwi_24j40.c: 808: }
  9848                           ;drv_mrf_miwi_24j40.c: 811: if (transParam.altDestAddr)
  9849  00182A  5177               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
  9850                           
  9851                           ; BSR set to: 0
  9852                           ;drv_mrf_miwi_24j40.c: 812: {
  9853                           ;drv_mrf_miwi_24j40.c: 813: headerLength += 2;
  9854  00182C  0E02               	movlw	2
  9855  00182E  B4D8               	btfsc	status,2,c
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;drv_mrf_miwi_24j40.c: 815: {
  9859                           ;drv_mrf_miwi_24j40.c: 816: headerLength += 8;
  9860                           
  9861                           ;drv_mrf_miwi_24j40.c: 814: } else
  9862  001830  0E08               	movlw	8
  9863  001832  278C               	addwf	MiMAC_SendPacket@headerLength& (0+255),f,b
  9864                           
  9865                           ; BSR set to: 0
  9866                           ;drv_mrf_miwi_24j40.c: 817: }
  9867                           ;drv_mrf_miwi_24j40.c: 819: if (transParam.altSrcAddr)
  9868  001834  5178               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;drv_mrf_miwi_24j40.c: 820: {
  9872                           ;drv_mrf_miwi_24j40.c: 821: headerLength += 2;
  9873  001836  0E02               	movlw	2
  9874  001838  B4D8               	btfsc	status,2,c
  9875                           
  9876                           ; BSR set to: 0
  9877                           ;drv_mrf_miwi_24j40.c: 823: {
  9878                           ;drv_mrf_miwi_24j40.c: 824: headerLength += 8;
  9879                           
  9880                           ;drv_mrf_miwi_24j40.c: 822: } else
  9881  00183A  0E08               	movlw	8
  9882  00183C  278C               	addwf	MiMAC_SendPacket@headerLength& (0+255),f,b
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;drv_mrf_miwi_24j40.c: 825: }
  9886                           ;drv_mrf_miwi_24j40.c: 827: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
  9887  00183E  BB74               	btfsc	MiMAC_SendPacket@transParam& (0+255),5,b
  9888                           
  9889                           ; BSR set to: 0
  9890  001840  B574               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
  9891  001842  D001               	goto	l10469
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;drv_mrf_miwi_24j40.c: 828: {
  9895                           ;drv_mrf_miwi_24j40.c: 829: frameControl |= 0x20;
  9896  001844  8B8B               	bsf	MiMAC_SendPacket@frameControl& (0+255),5,b
  9897  001846                     l10469:
  9898                           
  9899                           ; BSR set to: 0
  9900                           ;drv_mrf_miwi_24j40.c: 830: }
  9901                           ;drv_mrf_miwi_24j40.c: 833: if (transParam.flags.bits.packetType == 0x03)
  9902  001846  5174               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  9903  001848  0B03               	andlw	3
  9904  00184A  0A03               	xorlw	3
  9905  00184C  E107               	bnz	l10479
  9906                           
  9907                           ; BSR set to: 0
  9908                           ;drv_mrf_miwi_24j40.c: 834: {
  9909                           ;drv_mrf_miwi_24j40.c: 835: frameControl = 0x00;
  9910  00184E  6B8B               	clrf	MiMAC_SendPacket@frameControl& (0+255),b
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;drv_mrf_miwi_24j40.c: 836: headerLength = 7;
  9914  001850  0E07               	movlw	7
  9915  001852  6F8C               	movwf	MiMAC_SendPacket@headerLength& (0+255),b
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;drv_mrf_miwi_24j40.c: 838: IntraPAN = 0;
  9919  001854  6B8A               	clrf	MiMAC_SendPacket@IntraPAN& (0+255),b
  9920                           
  9921                           ;drv_mrf_miwi_24j40.c: 840: transParam.altSrcAddr = 1;
  9922  001856  0E01               	movlw	1
  9923  001858  6F78               	movwf	(MiMAC_SendPacket@transParam+4)& (0+255),b
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;drv_mrf_miwi_24j40.c: 841: transParam.flags.bits.ackReq = 0;
  9927  00185A  9B74               	bcf	MiMAC_SendPacket@transParam& (0+255),5,b
  9928  00185C                     l10479:
  9929                           
  9930                           ; BSR set to: 0
  9931                           ;drv_mrf_miwi_24j40.c: 842: }
  9932                           ;drv_mrf_miwi_24j40.c: 853: PHYSetLongRAMAddr(loc++, headerLength);
  9933  00185C  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
  9934  00185E  6A1E               	clrf	PHYSetLongRAMAddr@address,c
  9935  001860  C08C  F020         	movff	MiMAC_SendPacket@headerLength,PHYSetLongRAMAddr@value
  9936  001864  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
  9937  001868  0100               	movlb	0	; () banked
  9938  00186A  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
  9939                           
  9940                           ; BSR set to: 0
  9941                           ;drv_mrf_miwi_24j40.c: 861: {
  9942                           ;drv_mrf_miwi_24j40.c: 862: PHYSetLongRAMAddr(loc++, headerLength + MACPayloadLen);
  9943  00186C  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
  9944  001870  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
  9945  001872  518C               	movf	MiMAC_SendPacket@headerLength& (0+255),w,b
  9946  001874  257D               	addwf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
  9947  001876  6E20               	movwf	PHYSetLongRAMAddr@value,c
  9948  001878  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
  9949  00187C  0100               	movlb	0	; () banked
  9950  00187E  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;drv_mrf_miwi_24j40.c: 863: }
  9954                           ;drv_mrf_miwi_24j40.c: 866: PHYSetLongRAMAddr(loc++, frameControl);
  9955  001880  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
  9956  001884  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
  9957  001886  C08B  F020         	movff	MiMAC_SendPacket@frameControl,PHYSetLongRAMAddr@value
  9958  00188A  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
  9959  00188E  0100               	movlb	0	; () banked
  9960  001890  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;drv_mrf_miwi_24j40.c: 869: if (transParam.flags.bits.packetType == 0x03)
  9964  001892  5174               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  9965  001894  0B03               	andlw	3
  9966  001896  0A03               	xorlw	3
  9967  001898  E112               	bnz	l10499
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;drv_mrf_miwi_24j40.c: 870: {
  9971                           ;drv_mrf_miwi_24j40.c: 871: PHYSetLongRAMAddr(loc++, 0x80);
  9972  00189A  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
  9973  00189E  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
  9974  0018A0  0E80               	movlw	128
  9975  0018A2  6E20               	movwf	PHYSetLongRAMAddr@value,c
  9976  0018A4  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
  9977  0018A8  0100               	movlb	0	; () banked
  9978  0018AA  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
  9979                           
  9980                           ; BSR set to: 0
  9981                           ;drv_mrf_miwi_24j40.c: 873: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
  9982  0018AC  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
  9983  0018B0  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
  9984  0018B2  C028  F020         	movff	_IEEESeqNum,PHYSetLongRAMAddr@value
  9985  0018B6  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
  9986  0018BA  2A28               	incf	_IEEESeqNum,f,c
  9987  0018BC  D077               	goto	L15
  9988  0018BE                     l10499:
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;drv_mrf_miwi_24j40.c: 875: {
  9992                           ;drv_mrf_miwi_24j40.c: 876: if (transParam.altDestAddr && transParam.altSrcAddr)
  9993  0018BE  5177               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
  9994  0018C0  E00C               	bz	l10507
  9995                           
  9996                           ; BSR set to: 0
  9997  0018C2  5178               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
  9998  0018C4  E00A               	bz	l10507
  9999                           
 10000                           ; BSR set to: 0
 10001                           ;drv_mrf_miwi_24j40.c: 877: {
 10002                           ;drv_mrf_miwi_24j40.c: 878: PHYSetLongRAMAddr(loc++, 0x88);
 10003  0018C6  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10004  0018CA  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10005  0018CC  0E88               	movlw	136
 10006  0018CE  6E20               	movwf	PHYSetLongRAMAddr@value,c
 10007  0018D0  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10008  0018D4                     l10505:
 10009  0018D4  0100               	movlb	0	; () banked
 10010  0018D6  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10011                           
 10012                           ;drv_mrf_miwi_24j40.c: 879: } else if (transParam.altDestAddr && transParam.altSrcAddr =
      +                          = 0)
 10013  0018D8  D020               	goto	l10527
 10014  0018DA                     l10507:
 10015                           
 10016                           ; BSR set to: 0
 10017  0018DA  5177               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 10018  0018DC  E00A               	bz	l10515
 10019                           
 10020                           ; BSR set to: 0
 10021  0018DE  5178               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 10022  0018E0  E108               	bnz	l10515
 10023                           
 10024                           ; BSR set to: 0
 10025                           ;drv_mrf_miwi_24j40.c: 880: {
 10026                           ;drv_mrf_miwi_24j40.c: 881: PHYSetLongRAMAddr(loc++, 0xC8);
 10027  0018E2  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10028  0018E6  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10029  0018E8  0EC8               	movlw	200
 10030  0018EA  6E20               	movwf	PHYSetLongRAMAddr@value,c
 10031  0018EC  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10032  0018F0  D7F1               	goto	l10505
 10033  0018F2                     l10515:
 10034                           
 10035                           ; BSR set to: 0
 10036  0018F2  5177               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 10037  0018F4  E10A               	bnz	l10523
 10038                           
 10039                           ; BSR set to: 0
 10040  0018F6  0578               	decf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 10041  0018F8  E108               	bnz	l10523
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;drv_mrf_miwi_24j40.c: 883: {
 10045                           ;drv_mrf_miwi_24j40.c: 884: PHYSetLongRAMAddr(loc++, 0x8C);
 10046  0018FA  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10047  0018FE  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10048  001900  0E8C               	movlw	140
 10049  001902  6E20               	movwf	PHYSetLongRAMAddr@value,c
 10050  001904  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10051  001908  D7E5               	goto	l10505
 10052  00190A                     l10523:
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;drv_mrf_miwi_24j40.c: 886: {
 10056                           ;drv_mrf_miwi_24j40.c: 887: PHYSetLongRAMAddr(loc++, 0xCC);
 10057  00190A  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10058  00190E  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10059  001910  0ECC               	movlw	204
 10060  001912  6E20               	movwf	PHYSetLongRAMAddr@value,c
 10061  001914  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10062  001918  D7DD               	goto	l10505
 10063  00191A                     l10527:
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;drv_mrf_miwi_24j40.c: 888: }
 10067                           ;drv_mrf_miwi_24j40.c: 891: PHYSetLongRAMAddr(loc++, IEEESeqNum++);
 10068  00191A  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10069  00191E  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10070  001920  C028  F020         	movff	_IEEESeqNum,PHYSetLongRAMAddr@value
 10071  001924  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10072  001928  2A28               	incf	_IEEESeqNum,f,c
 10073  00192A  0100               	movlb	0	; () banked
 10074  00192C  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;drv_mrf_miwi_24j40.c: 894: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[0]);
 10078  00192E  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10079  001932  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10080  001934  C079  F020         	movff	MiMAC_SendPacket@transParam+5,PHYSetLongRAMAddr@value
 10081  001938  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10082  00193C  0100               	movlb	0	; () banked
 10083  00193E  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10084                           
 10085                           ;drv_mrf_miwi_24j40.c: 895: PHYSetLongRAMAddr(loc++, transParam.DestPANID.v[1]);
 10086  001940  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10087  001944  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10088  001946  C07A  F020         	movff	MiMAC_SendPacket@transParam+6,PHYSetLongRAMAddr@value
 10089  00194A  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10090  00194E  0100               	movlb	0	; () banked
 10091  001950  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;drv_mrf_miwi_24j40.c: 898: if (transParam.flags.bits.broadcast)
 10095  001952  A574               	btfss	MiMAC_SendPacket@transParam& (0+255),2,b
 10096  001954  D00F               	goto	l10543
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;drv_mrf_miwi_24j40.c: 899: {
 10100                           ;drv_mrf_miwi_24j40.c: 900: PHYSetLongRAMAddr(loc++, 0xFF);
 10101  001956  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10102  00195A  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10103  00195C  6820               	setf	PHYSetLongRAMAddr@value,c
 10104  00195E  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10105  001962  0100               	movlb	0	; () banked
 10106  001964  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10107                           
 10108                           ; BSR set to: 0
 10109                           ;drv_mrf_miwi_24j40.c: 901: PHYSetLongRAMAddr(loc++, 0xFF);
 10110  001966  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10111  00196A  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10112  00196C  6820               	setf	PHYSetLongRAMAddr@value,c
 10113  00196E  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10114  001972  D01C               	goto	L15
 10115  001974                     l10543:
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;drv_mrf_miwi_24j40.c: 903: {
 10119                           ;drv_mrf_miwi_24j40.c: 904: if (transParam.altDestAddr)
 10120  001974  5177               	movf	(MiMAC_SendPacket@transParam+3)& (0+255),w,b
 10121  001976  E01D               	bz	l154
 10122                           
 10123                           ; BSR set to: 0
 10124                           ;drv_mrf_miwi_24j40.c: 905: {
 10125                           ;drv_mrf_miwi_24j40.c: 906: PHYSetLongRAMAddr(loc++, transParam.DestAddress[0]);
 10126  001978  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10127  00197C  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10128  00197E  C075  FFD9         	movff	MiMAC_SendPacket@transParam+1,fsr2l
 10129  001982  C076  FFDA         	movff	MiMAC_SendPacket@transParam+2,fsr2h
 10130  001986  50DF               	movf	indf2,w,c
 10131  001988  6E20               	movwf	PHYSetLongRAMAddr@value,c
 10132  00198A  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10133  00198E  0100               	movlb	0	; () banked
 10134  001990  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;drv_mrf_miwi_24j40.c: 907: PHYSetLongRAMAddr(loc++, transParam.DestAddress[1]);
 10138  001992  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10139  001996  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10140  001998  EE20 F001          	lfsr	2,1
 10141  00199C  5175               	movf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 10142  00199E  26D9               	addwf	fsr2l,f,c
 10143  0019A0  5176               	movf	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 10144  0019A2  22DA               	addwfc	fsr2h,f,c
 10145  0019A4  50DF               	movf	indf2,w,c
 10146  0019A6  6E20               	movwf	PHYSetLongRAMAddr@value,c
 10147  0019A8  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10148  0019AC                     L15:
 10149  0019AC  0100               	movlb	0	; () banked
 10150  0019AE  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10151                           
 10152                           ;drv_mrf_miwi_24j40.c: 908: } else
 10153  0019B0  D014               	goto	l10563
 10154  0019B2                     l154:
 10155                           
 10156                           ; BSR set to: 0
 10157                           ;drv_mrf_miwi_24j40.c: 909: {
 10158                           ;drv_mrf_miwi_24j40.c: 910: for (i = 0; i < 8; i++)
 10159  0019B2  6B8D               	clrf	MiMAC_SendPacket@i& (0+255),b
 10160  0019B4                     l10555:
 10161                           
 10162                           ; BSR set to: 0
 10163                           ;drv_mrf_miwi_24j40.c: 911: {
 10164                           ;drv_mrf_miwi_24j40.c: 912: PHYSetLongRAMAddr(loc++, transParam.DestAddress[i]);
 10165  0019B4  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10166  0019B8  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10167  0019BA  518D               	movf	MiMAC_SendPacket@i& (0+255),w,b
 10168  0019BC  2575               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
 10169  0019BE  6ED9               	movwf	fsr2l,c
 10170  0019C0  0E00               	movlw	0
 10171  0019C2  2176               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
 10172  0019C4  6EDA               	movwf	fsr2h,c
 10173  0019C6  50DF               	movf	indf2,w,c
 10174  0019C8  6E20               	movwf	PHYSetLongRAMAddr@value,c
 10175  0019CA  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10176  0019CE  0100               	movlb	0	; () banked
 10177  0019D0  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10178                           
 10179                           ; BSR set to: 0
 10180  0019D2  2B8D               	incf	MiMAC_SendPacket@i& (0+255),f,b
 10181                           
 10182                           ; BSR set to: 0
 10183  0019D4  0E07               	movlw	7
 10184  0019D6  658D               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 10185  0019D8  D7ED               	goto	l10555
 10186  0019DA                     l10563:
 10187                           
 10188                           ; BSR set to: 0
 10189                           ;drv_mrf_miwi_24j40.c: 913: }
 10190                           ;drv_mrf_miwi_24j40.c: 914: }
 10191                           ;drv_mrf_miwi_24j40.c: 915: }
 10192                           ;drv_mrf_miwi_24j40.c: 916: }
 10193                           ;drv_mrf_miwi_24j40.c: 920: if (IntraPAN == 0)
 10194  0019DA  518A               	movf	MiMAC_SendPacket@IntraPAN& (0+255),w,b
 10195  0019DC  E112               	bnz	l10571
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;drv_mrf_miwi_24j40.c: 921: {
 10199                           ;drv_mrf_miwi_24j40.c: 922: PHYSetLongRAMAddr(loc++, MAC_PANID.v[0]);
 10200  0019DE  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10201  0019E2  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10202  0019E4  C03B  F020         	movff	_MAC_PANID,PHYSetLongRAMAddr@value
 10203  0019E8  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10204  0019EC  0100               	movlb	0	; () banked
 10205  0019EE  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10206                           
 10207                           ; BSR set to: 0
 10208                           ;drv_mrf_miwi_24j40.c: 923: PHYSetLongRAMAddr(loc++, MAC_PANID.v[1]);
 10209  0019F0  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10210  0019F4  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10211  0019F6  C03C  F020         	movff	_MAC_PANID+1,PHYSetLongRAMAddr@value
 10212  0019FA  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10213  0019FE  0100               	movlb	0	; () banked
 10214  001A00  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10215  001A02                     l10571:
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;drv_mrf_miwi_24j40.c: 924: }
 10219                           ;drv_mrf_miwi_24j40.c: 928: if (transParam.altSrcAddr)
 10220  001A02  5178               	movf	(MiMAC_SendPacket@transParam+4)& (0+255),w,b
 10221  001A04  E013               	bz	l159
 10222                           
 10223                           ; BSR set to: 0
 10224                           ;drv_mrf_miwi_24j40.c: 929: {
 10225                           ;drv_mrf_miwi_24j40.c: 930: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[0]);
 10226  001A06  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10227  001A0A  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10228  001A0C  C03D  F020         	movff	_myNetworkAddress,PHYSetLongRAMAddr@value
 10229  001A10  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10230  001A14  0100               	movlb	0	; () banked
 10231  001A16  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10232                           
 10233                           ; BSR set to: 0
 10234                           ;drv_mrf_miwi_24j40.c: 931: PHYSetLongRAMAddr(loc++, myNetworkAddress.v[1]);
 10235  001A18  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10236  001A1C  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10237  001A1E  C03E  F020         	movff	_myNetworkAddress+1,PHYSetLongRAMAddr@value
 10238  001A22  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10239  001A26  0100               	movlb	0	; () banked
 10240  001A28  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10241                           
 10242                           ;drv_mrf_miwi_24j40.c: 932: } else
 10243  001A2A  D014               	goto	l160
 10244  001A2C                     l159:
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;drv_mrf_miwi_24j40.c: 933: {
 10248                           ;drv_mrf_miwi_24j40.c: 934: for (i = 0; i < 8; i++)
 10249  001A2C  6B8D               	clrf	MiMAC_SendPacket@i& (0+255),b
 10250  001A2E                     l10583:
 10251                           
 10252                           ; BSR set to: 0
 10253                           ;drv_mrf_miwi_24j40.c: 935: {
 10254                           ;drv_mrf_miwi_24j40.c: 936: PHYSetLongRAMAddr(loc++, MACInitParams.PAddress[i]);
 10255  001A2E  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10256  001A32  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10257  001A34  518D               	movf	MiMAC_SendPacket@i& (0+255),w,b
 10258  001A36  25D8               	addwf	(_MACInitParams+1)& (0+255),w,b
 10259  001A38  6ED9               	movwf	fsr2l,c
 10260  001A3A  0E00               	movlw	0
 10261  001A3C  21D9               	addwfc	(_MACInitParams+2)& (0+255),w,b
 10262  001A3E  6EDA               	movwf	fsr2h,c
 10263  001A40  50DF               	movf	indf2,w,c
 10264  001A42  6E20               	movwf	PHYSetLongRAMAddr@value,c
 10265  001A44  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10266  001A48  0100               	movlb	0	; () banked
 10267  001A4A  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10268                           
 10269                           ; BSR set to: 0
 10270  001A4C  2B8D               	incf	MiMAC_SendPacket@i& (0+255),f,b
 10271                           
 10272                           ; BSR set to: 0
 10273  001A4E  0E07               	movlw	7
 10274  001A50  658D               	cpfsgt	MiMAC_SendPacket@i& (0+255),b
 10275  001A52  D7ED               	goto	l10583
 10276  001A54                     l160:
 10277                           
 10278                           ; BSR set to: 0
 10279                           ;drv_mrf_miwi_24j40.c: 937: }
 10280                           ;drv_mrf_miwi_24j40.c: 938: }
 10281                           ;drv_mrf_miwi_24j40.c: 964: for (i = 0; i < MACPayloadLen; i++)
 10282  001A54  6B8D               	clrf	MiMAC_SendPacket@i& (0+255),b
 10283  001A56  D010               	goto	l10597
 10284  001A58                     l10591:
 10285                           
 10286                           ; BSR set to: 0
 10287                           ;drv_mrf_miwi_24j40.c: 965: {
 10288                           ;drv_mrf_miwi_24j40.c: 966: PHYSetLongRAMAddr(loc++, MACPayload[i]);
 10289  001A58  C08E  F01E         	movff	MiMAC_SendPacket@loc,PHYSetLongRAMAddr@address
 10290  001A5C  6A1F               	clrf	PHYSetLongRAMAddr@address+1,c
 10291  001A5E  518D               	movf	MiMAC_SendPacket@i& (0+255),w,b
 10292  001A60  257B               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
 10293  001A62  6ED9               	movwf	fsr2l,c
 10294  001A64  0E00               	movlw	0
 10295  001A66  217C               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
 10296  001A68  6EDA               	movwf	fsr2h,c
 10297  001A6A  50DF               	movf	indf2,w,c
 10298  001A6C  6E20               	movwf	PHYSetLongRAMAddr@value,c
 10299  001A6E  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 10300  001A72  0100               	movlb	0	; () banked
 10301  001A74  2B8E               	incf	MiMAC_SendPacket@loc& (0+255),f,b
 10302                           
 10303                           ; BSR set to: 0
 10304  001A76  2B8D               	incf	MiMAC_SendPacket@i& (0+255),f,b
 10305  001A78                     l10597:
 10306                           
 10307                           ; BSR set to: 0
 10308  001A78  517D               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
 10309  001A7A  5D8D               	subwf	MiMAC_SendPacket@i& (0+255),w,b
 10310  001A7C  E3ED               	bnc	l10591
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;drv_mrf_miwi_24j40.c: 967: }
 10314                           ;drv_mrf_miwi_24j40.c: 969: MRF24J40Status.bits.TX_BUSY = 1;
 10315  001A7E  8029               	bsf	_MRF24J40Status,0,c	;volatile
 10316                           
 10317                           ;drv_mrf_miwi_24j40.c: 972: if (transParam.flags.bits.ackReq && transParam.flags.bits.br
      +                          oadcast == 0)
 10318  001A80  BB74               	btfsc	MiMAC_SendPacket@transParam& (0+255),5,b
 10319                           
 10320                           ; BSR set to: 0
 10321  001A82  B574               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
 10322  001A84  D004               	goto	l10605
 10323                           
 10324                           ; BSR set to: 0
 10325                           ;drv_mrf_miwi_24j40.c: 973: {
 10326                           ;drv_mrf_miwi_24j40.c: 974: i = 0x05;
 10327  001A86  0E05               	movlw	5
 10328  001A88  6F8D               	movwf	MiMAC_SendPacket@i& (0+255),b
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;drv_mrf_miwi_24j40.c: 976: MRF24J40Status.bits.TX_PENDING_ACK = 1;
 10332  001A8A  8229               	bsf	_MRF24J40Status,1,c	;volatile
 10333                           
 10334                           ;drv_mrf_miwi_24j40.c: 978: } else
 10335  001A8C  D003               	goto	l10609
 10336  001A8E                     l10605:
 10337                           
 10338                           ; BSR set to: 0
 10339                           ;drv_mrf_miwi_24j40.c: 979: {
 10340                           ;drv_mrf_miwi_24j40.c: 980: i = 0x01;
 10341  001A8E  0E01               	movlw	1
 10342  001A90  6F8D               	movwf	MiMAC_SendPacket@i& (0+255),b
 10343                           
 10344                           ; BSR set to: 0
 10345                           ;drv_mrf_miwi_24j40.c: 982: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 10346  001A92  9229               	bcf	_MRF24J40Status,1,c	;volatile
 10347  001A94                     l10609:
 10348                           
 10349                           ; BSR set to: 0
 10350                           ;drv_mrf_miwi_24j40.c: 984: }
 10351                           ;drv_mrf_miwi_24j40.c: 988: PHYSetShortRAMAddr((0x37), i);
 10352  001A94  C08D  F01E         	movff	MiMAC_SendPacket@i,PHYSetShortRAMAddr@value
 10353  001A98  0E37               	movlw	55
 10354  001A9A  ECD6  F019         	call	_PHYSetShortRAMAddr
 10355                           
 10356                           ;drv_mrf_miwi_24j40.c: 991: t1 = MiWi_TickGet();
 10357  001A9E  EC54  F017         	call	_MiWi_TickGet	;wreg free
 10358  001AA2  C01D  F082         	movff	?_MiWi_TickGet,MiMAC_SendPacket@t1
 10359  001AA6  C01E  F083         	movff	?_MiWi_TickGet+1,MiMAC_SendPacket@t1+1
 10360  001AAA  C01F  F084         	movff	?_MiWi_TickGet+2,MiMAC_SendPacket@t1+2
 10361  001AAE  C020  F085         	movff	?_MiWi_TickGet+3,MiMAC_SendPacket@t1+3
 10362  001AB2                     l10613:
 10363                           
 10364                           ; BSR set to: 0
 10365                           ;drv_mrf_miwi_24j40.c: 993: {
 10366                           ;drv_mrf_miwi_24j40.c: 994: if (PORTBbits.RB1 == 0)
 10367  001AB2  A281               	btfss	3969,1,c	;volatile
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;drv_mrf_miwi_24j40.c: 995: {
 10371                           ;drv_mrf_miwi_24j40.c: 996: INTCON3bits.INT1IF = 1;
 10372  001AB4  80F0               	bsf	intcon3,0,c	;volatile
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;drv_mrf_miwi_24j40.c: 997: }
 10376                           ;drv_mrf_miwi_24j40.c: 998: if (MRF24J40Status.bits.TX_BUSY == 0)
 10377  001AB6  B029               	btfsc	_MRF24J40Status,0,c	;volatile
 10378  001AB8  D004               	goto	l10625
 10379                           
 10380                           ; BSR set to: 0
 10381                           ;drv_mrf_miwi_24j40.c: 999: {
 10382                           ;drv_mrf_miwi_24j40.c: 1000: if (MRF24J40Status.bits.TX_FAIL)
 10383  001ABA  A429               	btfss	_MRF24J40Status,2,c	;volatile
 10384  001ABC  0C01               	retlw	1
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;drv_mrf_miwi_24j40.c: 1001: {
 10388                           ;drv_mrf_miwi_24j40.c: 1002: MRF24J40Status.bits.TX_FAIL = 0;
 10389  001ABE  9429               	bcf	_MRF24J40Status,2,c	;volatile
 10390                           
 10391                           ;drv_mrf_miwi_24j40.c: 1003: return 0;
 10392  001AC0  0C00               	retlw	0
 10393  001AC2                     l10625:
 10394                           
 10395                           ; BSR set to: 0
 10396                           ;drv_mrf_miwi_24j40.c: 1006: }
 10397                           ;drv_mrf_miwi_24j40.c: 1007: t2 = MiWi_TickGet();
 10398  001AC2  EC54  F017         	call	_MiWi_TickGet	;wreg free
 10399  001AC6  C01D  F086         	movff	?_MiWi_TickGet,MiMAC_SendPacket@t2
 10400  001ACA  C01E  F087         	movff	?_MiWi_TickGet+1,MiMAC_SendPacket@t2+1
 10401  001ACE  C01F  F088         	movff	?_MiWi_TickGet+2,MiMAC_SendPacket@t2+2
 10402  001AD2  C020  F089         	movff	?_MiWi_TickGet+3,MiMAC_SendPacket@t2+3
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;drv_mrf_miwi_24j40.c: 1008: if ((t2.Val - t1.Val) > (((uint32_t)(8000000)/32)/25))
 10406  001AD6  5182               	movf	MiMAC_SendPacket@t1& (0+255),w,b
 10407  001AD8  5D86               	subwf	MiMAC_SendPacket@t2& (0+255),w,b
 10408  001ADA  6F7E               	movwf	??_MiMAC_SendPacket& (0+255),b
 10409  001ADC  5183               	movf	(MiMAC_SendPacket@t1+1)& (0+255),w,b
 10410  001ADE  5987               	subwfb	(MiMAC_SendPacket@t2+1)& (0+255),w,b
 10411  001AE0  6F7F               	movwf	(??_MiMAC_SendPacket+1)& (0+255),b
 10412  001AE2  5184               	movf	(MiMAC_SendPacket@t1+2)& (0+255),w,b
 10413  001AE4  5988               	subwfb	(MiMAC_SendPacket@t2+2)& (0+255),w,b
 10414  001AE6  6F80               	movwf	(??_MiMAC_SendPacket+2)& (0+255),b
 10415  001AE8  5185               	movf	(MiMAC_SendPacket@t1+3)& (0+255),w,b
 10416  001AEA  5989               	subwfb	(MiMAC_SendPacket@t2+3)& (0+255),w,b
 10417  001AEC  6F81               	movwf	(??_MiMAC_SendPacket+3)& (0+255),b
 10418  001AEE  5181               	movf	(??_MiMAC_SendPacket+3)& (0+255),w,b
 10419  001AF0  1180               	iorwf	(??_MiMAC_SendPacket+2)& (0+255),w,b
 10420  001AF2  E105               	bnz	u10520
 10421  001AF4  0E11               	movlw	17
 10422  001AF6  5D7E               	subwf	??_MiMAC_SendPacket& (0+255),w,b
 10423  001AF8  0E27               	movlw	39
 10424  001AFA  597F               	subwfb	(??_MiMAC_SendPacket+1)& (0+255),w,b
 10425  001AFC  E3DA               	bnc	l10613
 10426  001AFE                     u10520:
 10427                           
 10428                           ; BSR set to: 0
 10429                           ;drv_mrf_miwi_24j40.c: 1009: {
 10430                           ;drv_mrf_miwi_24j40.c: 1010: InitMRF24J40();
 10431  001AFE  EC88  F00D         	call	_InitMRF24J40	;wreg free
 10432                           
 10433                           ;drv_mrf_miwi_24j40.c: 1011: MiMAC_SetAltAddress(myNetworkAddress.v, MAC_PANID.v);
 10434  001B02  0E3B               	movlw	low _MAC_PANID
 10435  001B04  6E21               	movwf	MiMAC_SetAltAddress@PANID,c
 10436  001B06  0E3D               	movlw	_myNetworkAddress& (0+255)
 10437  001B08  ECD6  F016         	call	_MiMAC_SetAltAddress
 10438                           
 10439                           ;drv_mrf_miwi_24j40.c: 1012: MRF24J40Status.bits.TX_BUSY = 0;
 10440  001B0C  9029               	bcf	_MRF24J40Status,0,c	;volatile
 10441  001B0E  0C00               	retlw	0
 10442  001B10                     __end_of_MiMAC_SendPacket:
 10443                           	opt stack 0
 10444                           tblptru	equ	0xFF8
 10445                           tblptrh	equ	0xFF7
 10446                           tblptrl	equ	0xFF6
 10447                           tablat	equ	0xFF5
 10448                           prodh	equ	0xFF4
 10449                           prodl	equ	0xFF3
 10450                           intcon	equ	0xFF2
 10451                           intcon2	equ	0xFF1
 10452                           intcon3	equ	0xFF0
 10453                           postinc0	equ	0xFEE
 10454                           plusw0	equ	0xFEB
 10455                           wreg	equ	0xFE8
 10456                           indf1	equ	0xFE7
 10457                           fsr1h	equ	0xFE2
 10458                           fsr1l	equ	0xFE1
 10459                           indf2	equ	0xFDF
 10460                           postinc2	equ	0xFDE
 10461                           postdec2	equ	0xFDD
 10462                           plusw2	equ	0xFDB
 10463                           fsr2h	equ	0xFDA
 10464                           fsr2l	equ	0xFD9
 10465                           status	equ	0xFD8
 10466                           
 10467 ;; *************** function _MiWi_TickGet *****************
 10468 ;; Defined at:
 10469 ;;		line 114 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/symbol.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;		None
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;  currentTime     4    1[BANK0 ] struct _MIWI_TICK
 10474 ;;  failureCount    1    0[BANK0 ] unsigned char 
 10475 ;; Return value:  Size  Location     Type
 10476 ;;                  4   28[COMRAM] struct _MIWI_TICK
 10477 ;; Registers used:
 10478 ;;		wreg, status,2, status,0
 10479 ;; Tracked objects:
 10480 ;;		On entry : 0/1
 10481 ;;		On exit  : F/0
 10482 ;;		Unchanged: 0/0
 10483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10485 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10487 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10488 ;;Total ram usage:       10 bytes
 10489 ;; Hardware stack levels used:    1
 10490 ;; Hardware stack levels required when called:    4
 10491 ;; This function calls:
 10492 ;;		Nothing
 10493 ;; This function is called by:
 10494 ;;		_MiMAC_SendPacket
 10495 ;;		_MiMAC_PowerState
 10496 ;;		_P2PTasks
 10497 ;;		_CheckForData
 10498 ;;		_MiApp_UnicastStar
 10499 ;;		_MiApp_EstablishConnection
 10500 ;;		_ButtonPressed
 10501 ;;		_run_star_demo
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           	psect	text37
 10506  002EA8                     __ptext37:
 10507                           	opt stack 0
 10508  002EA8                     _MiWi_TickGet:
 10509                           	opt stack 24
 10510                           
 10511                           ;symbol.c: 116: MIWI_TICK currentTime;
 10512                           ;symbol.c: 119: uint8_t failureCounter;
 10513                           ;symbol.c: 122: PIE1bits.TMR1IE = 0;
 10514                           
 10515                           ;incstack = 0
 10516  002EA8  909D               	bcf	3997,0,c	;volatile
 10517                           
 10518                           ;symbol.c: 125: currentTime.byte.b2 = 0;
 10519  002EAA  0100               	movlb	0	; () banked
 10520  002EAC  6B63               	clrf	(MiWi_TickGet@currentTime+2)& (0+255),b
 10521                           
 10522                           ;symbol.c: 126: currentTime.byte.b3 = 0;
 10523  002EAE  6B64               	clrf	(MiWi_TickGet@currentTime+3)& (0+255),b
 10524                           
 10525                           ;symbol.c: 128: failureCounter = 0;
 10526  002EB0  6B60               	clrf	MiWi_TickGet@failureCounter& (0+255),b
 10527  002EB2                     l876:
 10528                           
 10529                           ; BSR set to: 0
 10530                           ;symbol.c: 131: {
 10531                           ;symbol.c: 132: currentTime.byte.b0 = TMR1L;
 10532  002EB2  CFCE F061          	movff	4046,MiWi_TickGet@currentTime	;volatile
 10533                           
 10534                           ;symbol.c: 133: currentTime.byte.b1 = TMR1H;
 10535  002EB6  CFCF F062          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;symbol.c: 134: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 10539  002EBA  2961               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 10540  002EBC  E109               	bnz	l879
 10541  002EBE  2962               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 10542  002EC0  A4D8               	btfss	status,2,c
 10543  002EC2  D006               	goto	l879
 10544                           
 10545                           ; BSR set to: 0
 10546  002EC4  2B60               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 10547  002EC6  0560               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 10548  002EC8  6E21               	movwf	??_MiWi_TickGet& (0+255),c
 10549  002ECA  0E02               	movlw	2
 10550  002ECC  6421               	cpfsgt	??_MiWi_TickGet,c
 10551  002ECE  D7F1               	goto	l876
 10552  002ED0                     l879:
 10553                           
 10554                           ; BSR set to: 0
 10555                           ;symbol.c: 138: if(PIR1bits.TMR1IF)
 10556  002ED0  A09E               	btfss	3998,0,c	;volatile
 10557  002ED2  D004               	goto	l10395
 10558                           
 10559                           ; BSR set to: 0
 10560                           ;symbol.c: 139: {
 10561                           ;symbol.c: 141: {
 10562                           ;symbol.c: 144: currentTime.byte.b2++;
 10563  002ED4  2B63               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 10564                           
 10565                           ; BSR set to: 0
 10566                           ;symbol.c: 145: if(timerExtension1 == 0xFF)
 10567  002ED6  282E               	incf	_timerExtension1,w,c	;volatile
 10568  002ED8  B4D8               	btfsc	status,2,c
 10569                           
 10570                           ; BSR set to: 0
 10571                           ;symbol.c: 146: {
 10572                           ;symbol.c: 147: currentTime.byte.b3++;
 10573  002EDA  2B64               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 10574  002EDC                     l10395:
 10575                           
 10576                           ; BSR set to: 0
 10577                           ;symbol.c: 148: }
 10578                           ;symbol.c: 149: }
 10579                           ;symbol.c: 150: }
 10580                           ;symbol.c: 153: currentTime.byte.b2 += timerExtension1;
 10581  002EDC  502E               	movf	_timerExtension1,w,c	;volatile
 10582  002EDE  2763               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 10583                           
 10584                           ; BSR set to: 0
 10585                           ;symbol.c: 154: currentTime.byte.b3 += timerExtension2;
 10586  002EE0  502F               	movf	_timerExtension2,w,c	;volatile
 10587  002EE2  2764               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 10588                           
 10589                           ; BSR set to: 0
 10590                           ;symbol.c: 157: PIE1bits.TMR1IE = 1;
 10591  002EE4  809D               	bsf	3997,0,c	;volatile
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;symbol.c: 159: return currentTime;
 10595  002EE6  C061  F01D         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 10596  002EEA  C062  F01E         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 10597  002EEE  C063  F01F         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 10598  002EF2  C064  F020         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 10599                           
 10600                           ; BSR set to: 0
 10601  002EF6  0012               	return		;funcret
 10602  002EF8                     __end_of_MiWi_TickGet:
 10603                           	opt stack 0
 10604                           tblptru	equ	0xFF8
 10605                           tblptrh	equ	0xFF7
 10606                           tblptrl	equ	0xFF6
 10607                           tablat	equ	0xFF5
 10608                           prodh	equ	0xFF4
 10609                           prodl	equ	0xFF3
 10610                           intcon	equ	0xFF2
 10611                           intcon2	equ	0xFF1
 10612                           intcon3	equ	0xFF0
 10613                           postinc0	equ	0xFEE
 10614                           plusw0	equ	0xFEB
 10615                           wreg	equ	0xFE8
 10616                           indf1	equ	0xFE7
 10617                           fsr1h	equ	0xFE2
 10618                           fsr1l	equ	0xFE1
 10619                           indf2	equ	0xFDF
 10620                           postinc2	equ	0xFDE
 10621                           postdec2	equ	0xFDD
 10622                           plusw2	equ	0xFDB
 10623                           fsr2h	equ	0xFDA
 10624                           fsr2l	equ	0xFD9
 10625                           status	equ	0xFD8
 10626                           
 10627 ;; *************** function _MiMAC_SetAltAddress *****************
 10628 ;; Defined at:
 10629 ;;		line 1421 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 10630 ;; Parameters:    Size  Location     Type
 10631 ;;  Address         1    wreg     PTR unsigned char 
 10632 ;;		 -> MiApp_StartConnection@tmp(2), MiApp_ProtocolInit@tmp(2), P2PTasks@tmp(2), myNetworkAddress(2), 
 10633 ;;  PANID           1   32[COMRAM] PTR unsigned char 
 10634 ;;		 -> myPANID(2), MAC_PANID(2), 
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;  Address         1   33[COMRAM] PTR unsigned char 
 10637 ;;		 -> MiApp_StartConnection@tmp(2), MiApp_ProtocolInit@tmp(2), P2PTasks@tmp(2), myNetworkAddress(2), 
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  1    wreg      unsigned char 
 10640 ;; Registers used:
 10641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10647 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10651 ;;Total ram usage:        2 bytes
 10652 ;; Hardware stack levels used:    1
 10653 ;; Hardware stack levels required when called:    6
 10654 ;; This function calls:
 10655 ;;		_PHYSetShortRAMAddr
 10656 ;; This function is called by:
 10657 ;;		_MiMAC_SendPacket
 10658 ;;		_MiMAC_PowerState
 10659 ;;		_P2PTasks
 10660 ;;		_MiApp_ProtocolInit
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           	psect	text38
 10665  002DAC                     __ptext38:
 10666                           	opt stack 0
 10667  002DAC                     _MiMAC_SetAltAddress:
 10668                           	opt stack 19
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;incstack = 0
 10672                           ;MiMAC_SetAltAddress@Address stored from wreg
 10673  002DAC  6E22               	movwf	MiMAC_SetAltAddress@Address,c
 10674                           
 10675                           ;drv_mrf_miwi_24j40.c: 1423: myNetworkAddress.v[0] = Address[0];
 10676  002DAE  5022               	movf	MiMAC_SetAltAddress@Address,w,c
 10677  002DB0  6ED9               	movwf	fsr2l,c
 10678  002DB2  6ADA               	clrf	fsr2h,c
 10679  002DB4  50DF               	movf	indf2,w,c
 10680  002DB6  6E3D               	movwf	_myNetworkAddress,c
 10681                           
 10682                           ;drv_mrf_miwi_24j40.c: 1424: myNetworkAddress.v[1] = Address[1];
 10683  002DB8  5022               	movf	MiMAC_SetAltAddress@Address,w,c
 10684  002DBA  6ED9               	movwf	fsr2l,c
 10685  002DBC  6ADA               	clrf	fsr2h,c
 10686  002DBE  2AD9               	incf	fsr2l,f,c
 10687  002DC0  50DF               	movf	indf2,w,c
 10688  002DC2  6E3E               	movwf	_myNetworkAddress+1,c
 10689                           
 10690                           ;drv_mrf_miwi_24j40.c: 1425: MAC_PANID.v[0] = PANID[0];
 10691  002DC4  5021               	movf	MiMAC_SetAltAddress@PANID,w,c
 10692  002DC6  6ED9               	movwf	fsr2l,c
 10693  002DC8  6ADA               	clrf	fsr2h,c
 10694  002DCA  50DF               	movf	indf2,w,c
 10695  002DCC  6E3B               	movwf	_MAC_PANID,c
 10696                           
 10697                           ;drv_mrf_miwi_24j40.c: 1426: MAC_PANID.v[1] = PANID[1];
 10698  002DCE  5021               	movf	MiMAC_SetAltAddress@PANID,w,c
 10699  002DD0  6ED9               	movwf	fsr2l,c
 10700  002DD2  6ADA               	clrf	fsr2h,c
 10701  002DD4  2AD9               	incf	fsr2l,f,c
 10702  002DD6  50DF               	movf	indf2,w,c
 10703  002DD8  6E3C               	movwf	_MAC_PANID+1,c
 10704                           
 10705                           ;drv_mrf_miwi_24j40.c: 1428: PHYSetShortRAMAddr((0x07), myNetworkAddress.v[0]);
 10706  002DDA  C03D  F01E         	movff	_myNetworkAddress,PHYSetShortRAMAddr@value
 10707  002DDE  0E07               	movlw	7
 10708  002DE0  ECD6  F019         	call	_PHYSetShortRAMAddr
 10709                           
 10710                           ;drv_mrf_miwi_24j40.c: 1429: PHYSetShortRAMAddr((0x09), myNetworkAddress.v[1]);
 10711  002DE4  C03E  F01E         	movff	_myNetworkAddress+1,PHYSetShortRAMAddr@value
 10712  002DE8  0E09               	movlw	9
 10713  002DEA  ECD6  F019         	call	_PHYSetShortRAMAddr
 10714                           
 10715                           ;drv_mrf_miwi_24j40.c: 1430: PHYSetShortRAMAddr((0x03), MAC_PANID.v[0]);
 10716  002DEE  C03B  F01E         	movff	_MAC_PANID,PHYSetShortRAMAddr@value
 10717  002DF2  0E03               	movlw	3
 10718  002DF4  ECD6  F019         	call	_PHYSetShortRAMAddr
 10719                           
 10720                           ;drv_mrf_miwi_24j40.c: 1431: PHYSetShortRAMAddr((0x05), MAC_PANID.v[1]);
 10721  002DF8  C03C  F01E         	movff	_MAC_PANID+1,PHYSetShortRAMAddr@value
 10722  002DFC  0E05               	movlw	5
 10723  002DFE  ECD6  F019         	call	_PHYSetShortRAMAddr
 10724  002E02  0012               	return		;funcret
 10725  002E04                     __end_of_MiMAC_SetAltAddress:
 10726                           	opt stack 0
 10727                           tblptru	equ	0xFF8
 10728                           tblptrh	equ	0xFF7
 10729                           tblptrl	equ	0xFF6
 10730                           tablat	equ	0xFF5
 10731                           prodh	equ	0xFF4
 10732                           prodl	equ	0xFF3
 10733                           intcon	equ	0xFF2
 10734                           intcon2	equ	0xFF1
 10735                           intcon3	equ	0xFF0
 10736                           postinc0	equ	0xFEE
 10737                           plusw0	equ	0xFEB
 10738                           wreg	equ	0xFE8
 10739                           indf1	equ	0xFE7
 10740                           fsr1h	equ	0xFE2
 10741                           fsr1l	equ	0xFE1
 10742                           indf2	equ	0xFDF
 10743                           postinc2	equ	0xFDE
 10744                           postdec2	equ	0xFDD
 10745                           plusw2	equ	0xFDB
 10746                           fsr2h	equ	0xFDA
 10747                           fsr2l	equ	0xFD9
 10748                           status	equ	0xFD8
 10749                           
 10750 ;; *************** function _InitMRF24J40 *****************
 10751 ;; Defined at:
 10752 ;;		line 201 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;		None
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;  _ms             4   13[BANK0 ] unsigned long 
 10757 ;;  _dcnt           4    5[BANK0 ] unsigned long 
 10758 ;;  _ms             4    9[BANK0 ] unsigned long 
 10759 ;;  _dcnt           4    1[BANK0 ] unsigned long 
 10760 ;;  j               2   17[BANK0 ] unsigned int 
 10761 ;;  i               1   19[BANK0 ] unsigned char 
 10762 ;; Return value:  Size  Location     Type
 10763 ;;		None               void
 10764 ;; Registers used:
 10765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10766 ;; Tracked objects:
 10767 ;;		On entry : F/0
 10768 ;;		On exit  : 0/0
 10769 ;;		Unchanged: 0/0
 10770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10772 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10773 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10774 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10775 ;;Total ram usage:       20 bytes
 10776 ;; Hardware stack levels used:    1
 10777 ;; Hardware stack levels required when called:    7
 10778 ;; This function calls:
 10779 ;;		_MiMAC_SetChannel
 10780 ;;		_PHYGetLongRAMAddr
 10781 ;;		_PHYGetShortRAMAddr
 10782 ;;		_PHYSetLongRAMAddr
 10783 ;;		_PHYSetShortRAMAddr
 10784 ;; This function is called by:
 10785 ;;		_MiMAC_SendPacket
 10786 ;;		_MiMAC_PowerState
 10787 ;;		_MiMAC_Init
 10788 ;; This function uses a non-reentrant model
 10789 ;;
 10790                           
 10791                           	psect	text39
 10792  001B10                     __ptext39:
 10793                           	opt stack 0
 10794  001B10                     _InitMRF24J40:
 10795                           	opt stack 18
 10796                           
 10797                           ; BSR set to: 0
 10798                           ;drv_mrf_miwi_24j40.c: 203: uint8_t i;
 10799                           ;drv_mrf_miwi_24j40.c: 204: uint16_t j;
 10800                           ;drv_mrf_miwi_24j40.c: 207: LATDbits.LATD7 = 0;
 10801                           
 10802                           ;incstack = 0
 10803  001B10  9E8C               	bcf	3980,7,c	;volatile
 10804                           
 10805                           ; BSR set to: 0
 10806                           ;drv_mrf_miwi_24j40.c: 208: { unsigned long _dcnt; unsigned long _ms; _ms = 3; while(_ms
      +                          ) { _dcnt=((unsigned long)(0.001/(1.0/((8000000)/4))/6)); while(_dcnt--); _ms--; } };
 10807  001B12  0E03               	movlw	3
 10808  001B14  6F69               	movwf	InitMRF24J40@_ms& (0+255),b
 10809  001B16  6B6A               	clrf	(InitMRF24J40@_ms+1)& (0+255),b
 10810  001B18  6B6B               	clrf	(InitMRF24J40@_ms+2)& (0+255),b
 10811  001B1A  6B6C               	clrf	(InitMRF24J40@_ms+3)& (0+255),b
 10812  001B1C  D019               	goto	l65
 10813  001B1E                     l10319:
 10814                           
 10815                           ; BSR set to: 0
 10816  001B1E  0E4D               	movlw	77
 10817  001B20  6F61               	movwf	InitMRF24J40@_dcnt& (0+255),b
 10818  001B22  0E01               	movlw	1
 10819  001B24  6F62               	movwf	(InitMRF24J40@_dcnt+1)& (0+255),b
 10820  001B26  6B63               	clrf	(InitMRF24J40@_dcnt+2)& (0+255),b
 10821  001B28  6B64               	clrf	(InitMRF24J40@_dcnt+3)& (0+255),b
 10822  001B2A                     l10321:
 10823                           
 10824                           ; BSR set to: 0
 10825  001B2A  0761               	decf	InitMRF24J40@_dcnt& (0+255),f,b
 10826  001B2C  0E00               	movlw	0
 10827  001B2E  5B62               	subwfb	(InitMRF24J40@_dcnt+1)& (0+255),f,b
 10828  001B30  5B63               	subwfb	(InitMRF24J40@_dcnt+2)& (0+255),f,b
 10829  001B32  5B64               	subwfb	(InitMRF24J40@_dcnt+3)& (0+255),f,b
 10830  001B34  2961               	incf	InitMRF24J40@_dcnt& (0+255),w,b
 10831  001B36  E1F9               	bnz	l10321
 10832  001B38  2962               	incf	(InitMRF24J40@_dcnt+1)& (0+255),w,b
 10833  001B3A  E1F7               	bnz	l10321
 10834  001B3C  2963               	incf	(InitMRF24J40@_dcnt+2)& (0+255),w,b
 10835  001B3E  E1F5               	bnz	l10321
 10836  001B40  2964               	incf	(InitMRF24J40@_dcnt+3)& (0+255),w,b
 10837  001B42  A4D8               	btfss	status,2,c
 10838  001B44  D7F2               	goto	l10321
 10839                           
 10840                           ; BSR set to: 0
 10841  001B46  0769               	decf	InitMRF24J40@_ms& (0+255),f,b
 10842  001B48  0E00               	movlw	0
 10843  001B4A  5B6A               	subwfb	(InitMRF24J40@_ms+1)& (0+255),f,b
 10844  001B4C  5B6B               	subwfb	(InitMRF24J40@_ms+2)& (0+255),f,b
 10845  001B4E  5B6C               	subwfb	(InitMRF24J40@_ms+3)& (0+255),f,b
 10846  001B50                     l65:
 10847                           
 10848                           ; BSR set to: 0
 10849  001B50  5169               	movf	InitMRF24J40@_ms& (0+255),w,b
 10850  001B52  116A               	iorwf	(InitMRF24J40@_ms+1)& (0+255),w,b
 10851  001B54  116B               	iorwf	(InitMRF24J40@_ms+2)& (0+255),w,b
 10852  001B56  116C               	iorwf	(InitMRF24J40@_ms+3)& (0+255),w,b
 10853  001B58  E1E2               	bnz	l10319
 10854                           
 10855                           ; BSR set to: 0
 10856                           ;drv_mrf_miwi_24j40.c: 210: LATDbits.LATD7 = 1;
 10857  001B5A  8E8C               	bsf	3980,7,c	;volatile
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;drv_mrf_miwi_24j40.c: 211: { unsigned long _dcnt; unsigned long _ms; _ms = 10; while(_m
      +                          s) { _dcnt=((unsigned long)(0.001/(1.0/((8000000)/4))/6)); while(_dcnt--); _ms--; } };
 10861  001B5C  0E0A               	movlw	10
 10862  001B5E  6F6D               	movwf	InitMRF24J40@_ms_636& (0+255),b
 10863  001B60  6B6E               	clrf	(InitMRF24J40@_ms_636+1)& (0+255),b
 10864  001B62  6B6F               	clrf	(InitMRF24J40@_ms_636+2)& (0+255),b
 10865  001B64  6B70               	clrf	(InitMRF24J40@_ms_636+3)& (0+255),b
 10866  001B66  D019               	goto	l71
 10867  001B68                     l10327:
 10868                           
 10869                           ; BSR set to: 0
 10870  001B68  0E4D               	movlw	77
 10871  001B6A  6F65               	movwf	InitMRF24J40@_dcnt_635& (0+255),b
 10872  001B6C  0E01               	movlw	1
 10873  001B6E  6F66               	movwf	(InitMRF24J40@_dcnt_635+1)& (0+255),b
 10874  001B70  6B67               	clrf	(InitMRF24J40@_dcnt_635+2)& (0+255),b
 10875  001B72  6B68               	clrf	(InitMRF24J40@_dcnt_635+3)& (0+255),b
 10876  001B74                     l10329:
 10877                           
 10878                           ; BSR set to: 0
 10879  001B74  0765               	decf	InitMRF24J40@_dcnt_635& (0+255),f,b
 10880  001B76  0E00               	movlw	0
 10881  001B78  5B66               	subwfb	(InitMRF24J40@_dcnt_635+1)& (0+255),f,b
 10882  001B7A  5B67               	subwfb	(InitMRF24J40@_dcnt_635+2)& (0+255),f,b
 10883  001B7C  5B68               	subwfb	(InitMRF24J40@_dcnt_635+3)& (0+255),f,b
 10884  001B7E  2965               	incf	InitMRF24J40@_dcnt_635& (0+255),w,b
 10885  001B80  E1F9               	bnz	l10329
 10886  001B82  2966               	incf	(InitMRF24J40@_dcnt_635+1)& (0+255),w,b
 10887  001B84  E1F7               	bnz	l10329
 10888  001B86  2967               	incf	(InitMRF24J40@_dcnt_635+2)& (0+255),w,b
 10889  001B88  E1F5               	bnz	l10329
 10890  001B8A  2968               	incf	(InitMRF24J40@_dcnt_635+3)& (0+255),w,b
 10891  001B8C  A4D8               	btfss	status,2,c
 10892  001B8E  D7F2               	goto	l10329
 10893                           
 10894                           ; BSR set to: 0
 10895  001B90  076D               	decf	InitMRF24J40@_ms_636& (0+255),f,b
 10896  001B92  0E00               	movlw	0
 10897  001B94  5B6E               	subwfb	(InitMRF24J40@_ms_636+1)& (0+255),f,b
 10898  001B96  5B6F               	subwfb	(InitMRF24J40@_ms_636+2)& (0+255),f,b
 10899  001B98  5B70               	subwfb	(InitMRF24J40@_ms_636+3)& (0+255),f,b
 10900  001B9A                     l71:
 10901                           
 10902                           ; BSR set to: 0
 10903  001B9A  516D               	movf	InitMRF24J40@_ms_636& (0+255),w,b
 10904  001B9C  116E               	iorwf	(InitMRF24J40@_ms_636+1)& (0+255),w,b
 10905  001B9E  116F               	iorwf	(InitMRF24J40@_ms_636+2)& (0+255),w,b
 10906  001BA0  1170               	iorwf	(InitMRF24J40@_ms_636+3)& (0+255),w,b
 10907  001BA2  E1E2               	bnz	l10327
 10908                           
 10909                           ; BSR set to: 0
 10910                           ;drv_mrf_miwi_24j40.c: 214: PHYSetShortRAMAddr((0x55), 0x07);
 10911  001BA4  0E07               	movlw	7
 10912  001BA6  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 10913  001BA8  0E55               	movlw	85
 10914  001BAA  ECD6  F019         	call	_PHYSetShortRAMAddr
 10915  001BAE                     l77:
 10916                           
 10917                           ;drv_mrf_miwi_24j40.c: 216: {
 10918                           ;drv_mrf_miwi_24j40.c: 217: i = PHYGetShortRAMAddr((0x54));
 10919  001BAE  0E54               	movlw	84
 10920  001BB0  EC94  F019         	call	_PHYGetShortRAMAddr
 10921  001BB4  0100               	movlb	0	; () banked
 10922  001BB6  6F73               	movwf	InitMRF24J40@i& (0+255),b
 10923                           
 10924                           ; BSR set to: 0
 10925                           ;drv_mrf_miwi_24j40.c: 218: } while ((i & 0x07) != (uint8_t) 0x00);
 10926  001BB8  C073  F060         	movff	InitMRF24J40@i,??_InitMRF24J40
 10927  001BBC  0E07               	movlw	7
 10928  001BBE  1760               	andwf	??_InitMRF24J40& (0+255),f,b
 10929  001BC0  E1F6               	bnz	l77
 10930                           
 10931                           ; BSR set to: 0
 10932                           ;drv_mrf_miwi_24j40.c: 220: for (j = 0; j < (uint16_t) 1000; j++)
 10933  001BC2  6B71               	clrf	InitMRF24J40@j& (0+255),b
 10934  001BC4  6B72               	clrf	(InitMRF24J40@j+1)& (0+255),b
 10935  001BC6                     l10341:
 10936                           
 10937                           ; BSR set to: 0
 10938                           ;drv_mrf_miwi_24j40.c: 221: {
 10939  001BC6  4B71               	infsnz	InitMRF24J40@j& (0+255),f,b
 10940  001BC8  2B72               	incf	(InitMRF24J40@j+1)& (0+255),f,b
 10941                           
 10942                           ; BSR set to: 0
 10943  001BCA  0EE8               	movlw	232
 10944  001BCC  5D71               	subwf	InitMRF24J40@j& (0+255),w,b
 10945  001BCE  0E03               	movlw	3
 10946  001BD0  5972               	subwfb	(InitMRF24J40@j+1)& (0+255),w,b
 10947  001BD2  E3F9               	bnc	l10341
 10948                           
 10949                           ; BSR set to: 0
 10950                           ;drv_mrf_miwi_24j40.c: 222: }
 10951                           ;drv_mrf_miwi_24j40.c: 225: PHYSetShortRAMAddr((0x1B), 0x01);
 10952  001BD4  0E01               	movlw	1
 10953  001BD6  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 10954  001BD8  0E1B               	movlw	27
 10955  001BDA  ECD6  F019         	call	_PHYSetShortRAMAddr
 10956                           
 10957                           ;drv_mrf_miwi_24j40.c: 228: PHYSetShortRAMAddr((0x07), 0xFF);
 10958  001BDE  681E               	setf	PHYSetShortRAMAddr@value,c
 10959  001BE0  0E07               	movlw	7
 10960  001BE2  ECD6  F019         	call	_PHYSetShortRAMAddr
 10961                           
 10962                           ;drv_mrf_miwi_24j40.c: 229: PHYSetShortRAMAddr((0x09), 0xFF);
 10963  001BE6  681E               	setf	PHYSetShortRAMAddr@value,c
 10964  001BE8  0E09               	movlw	9
 10965  001BEA  ECD6  F019         	call	_PHYSetShortRAMAddr
 10966                           
 10967                           ;drv_mrf_miwi_24j40.c: 230: PHYSetShortRAMAddr((0x03), 0xFF);
 10968  001BEE  681E               	setf	PHYSetShortRAMAddr@value,c
 10969  001BF0  0E03               	movlw	3
 10970  001BF2  ECD6  F019         	call	_PHYSetShortRAMAddr
 10971                           
 10972                           ;drv_mrf_miwi_24j40.c: 231: PHYSetShortRAMAddr((0x05), 0xFF);
 10973  001BF6  681E               	setf	PHYSetShortRAMAddr@value,c
 10974  001BF8  0E05               	movlw	5
 10975  001BFA  ECD6  F019         	call	_PHYSetShortRAMAddr
 10976                           
 10977                           ;drv_mrf_miwi_24j40.c: 234: for (i = 0; i < (uint8_t) 8; i++)
 10978  001BFE  0100               	movlb	0	; () banked
 10979  001C00  6B73               	clrf	InitMRF24J40@i& (0+255),b
 10980  001C02                     l10353:
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;drv_mrf_miwi_24j40.c: 235: {
 10984                           ;drv_mrf_miwi_24j40.c: 236: PHYSetShortRAMAddr((0x0B) + i * 2, MACInitParams.PAddress[i]
      +                          );
 10985  001C02  5173               	movf	InitMRF24J40@i& (0+255),w,b
 10986  001C04  25D8               	addwf	(_MACInitParams+1)& (0+255),w,b
 10987  001C06  6ED9               	movwf	fsr2l,c
 10988  001C08  0E00               	movlw	0
 10989  001C0A  21D9               	addwfc	(_MACInitParams+2)& (0+255),w,b
 10990  001C0C  6EDA               	movwf	fsr2h,c
 10991  001C0E  50DF               	movf	indf2,w,c
 10992  001C10  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 10993  001C12  5173               	movf	InitMRF24J40@i& (0+255),w,b
 10994  001C14  0D02               	mullw	2
 10995  001C16  50F3               	movf	prodl,w,c
 10996  001C18  0F0B               	addlw	11
 10997  001C1A  ECD6  F019         	call	_PHYSetShortRAMAddr
 10998  001C1E  0100               	movlb	0	; () banked
 10999  001C20  2B73               	incf	InitMRF24J40@i& (0+255),f,b
 11000                           
 11001                           ; BSR set to: 0
 11002  001C22  0E07               	movlw	7
 11003  001C24  6573               	cpfsgt	InitMRF24J40@i& (0+255),b
 11004  001C26  D7ED               	goto	l10353
 11005                           
 11006                           ; BSR set to: 0
 11007                           ;drv_mrf_miwi_24j40.c: 237: }
 11008                           ;drv_mrf_miwi_24j40.c: 240: PHYSetLongRAMAddr((0x202), 0x80);
 11009  001C28  0E02               	movlw	2
 11010  001C2A  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 11011  001C2C  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 11012  001C2E  0E80               	movlw	128
 11013  001C30  6E20               	movwf	PHYSetLongRAMAddr@value,c
 11014  001C32  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 11015                           
 11016                           ;drv_mrf_miwi_24j40.c: 263: PHYSetLongRAMAddr((0x203), 0x00);
 11017  001C36  0E02               	movlw	2
 11018  001C38  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 11019  001C3A  0E03               	movlw	3
 11020  001C3C  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 11021  001C3E  6A20               	clrf	PHYSetLongRAMAddr@value,c
 11022  001C40  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 11023                           
 11024                           ;drv_mrf_miwi_24j40.c: 267: PHYSetLongRAMAddr((0x206), 0x90);
 11025  001C44  0E02               	movlw	2
 11026  001C46  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 11027  001C48  0E06               	movlw	6
 11028  001C4A  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 11029  001C4C  0E90               	movlw	144
 11030  001C4E  6E20               	movwf	PHYSetLongRAMAddr@value,c
 11031  001C50  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 11032                           
 11033                           ;drv_mrf_miwi_24j40.c: 269: PHYSetLongRAMAddr((0x207), 0x80);
 11034  001C54  0E02               	movlw	2
 11035  001C56  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 11036  001C58  0E07               	movlw	7
 11037  001C5A  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 11038  001C5C  0E80               	movlw	128
 11039  001C5E  6E20               	movwf	PHYSetLongRAMAddr@value,c
 11040  001C60  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 11041                           
 11042                           ;drv_mrf_miwi_24j40.c: 271: PHYSetLongRAMAddr((0x208), 0x10);
 11043  001C64  0E02               	movlw	2
 11044  001C66  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 11045  001C68  0E08               	movlw	8
 11046  001C6A  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 11047  001C6C  0E10               	movlw	16
 11048  001C6E  6E20               	movwf	PHYSetLongRAMAddr@value,c
 11049  001C70  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 11050                           
 11051                           ;drv_mrf_miwi_24j40.c: 273: PHYSetLongRAMAddr((0x220), 0x21);
 11052  001C74  0E02               	movlw	2
 11053  001C76  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 11054  001C78  0E20               	movlw	32
 11055  001C7A  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 11056  001C7C  0E21               	movlw	33
 11057  001C7E  6E20               	movwf	PHYSetLongRAMAddr@value,c
 11058  001C80  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 11059                           
 11060                           ;drv_mrf_miwi_24j40.c: 276: PHYSetShortRAMAddr((0x75), 0x80);
 11061  001C84  0E80               	movlw	128
 11062  001C86  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 11063  001C88  0E75               	movlw	117
 11064  001C8A  ECD6  F019         	call	_PHYSetShortRAMAddr
 11065                           
 11066                           ;drv_mrf_miwi_24j40.c: 278: PHYSetShortRAMAddr((0x7D), 0x40);
 11067  001C8E  0E40               	movlw	64
 11068  001C90  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 11069  001C92  0E7D               	movlw	125
 11070  001C94  ECD6  F019         	call	_PHYSetShortRAMAddr
 11071                           
 11072                           ;drv_mrf_miwi_24j40.c: 280: PHYSetShortRAMAddr((0x7F), 0x60);
 11073  001C98  0E60               	movlw	96
 11074  001C9A  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 11075  001C9C  0E7F               	movlw	127
 11076  001C9E  ECD6  F019         	call	_PHYSetShortRAMAddr
 11077                           
 11078                           ;drv_mrf_miwi_24j40.c: 291: PHYSetShortRAMAddr((0x31), 0x98);
 11079  001CA2  0E98               	movlw	152
 11080  001CA4  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 11081  001CA6  0E31               	movlw	49
 11082  001CA8  ECD6  F019         	call	_PHYSetShortRAMAddr
 11083                           
 11084                           ;drv_mrf_miwi_24j40.c: 292: PHYSetShortRAMAddr((0x5D), 0x95);
 11085  001CAC  0E95               	movlw	149
 11086  001CAE  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 11087  001CB0  0E5D               	movlw	93
 11088  001CB2  ECD6  F019         	call	_PHYSetShortRAMAddr
 11089  001CB6                     l10371:
 11090                           
 11091                           ;drv_mrf_miwi_24j40.c: 296: {
 11092                           ;drv_mrf_miwi_24j40.c: 297: i = PHYGetLongRAMAddr((0x20f));
 11093  001CB6  0E02               	movlw	2
 11094  001CB8  6E1F               	movwf	PHYGetLongRAMAddr@address+1,c
 11095  001CBA  0E0F               	movlw	15
 11096  001CBC  6E1E               	movwf	PHYGetLongRAMAddr@address,c
 11097  001CBE  EC02  F017         	call	_PHYGetLongRAMAddr	;wreg free
 11098  001CC2  0100               	movlb	0	; () banked
 11099  001CC4  6F73               	movwf	InitMRF24J40@i& (0+255),b
 11100                           
 11101                           ; BSR set to: 0
 11102                           ;drv_mrf_miwi_24j40.c: 298: }
 11103                           ;drv_mrf_miwi_24j40.c: 299: while ((i&0xA0) != 0xA0);
 11104  001CC6  5173               	movf	InitMRF24J40@i& (0+255),w,b
 11105  001CC8  0BA0               	andlw	160
 11106  001CCA  0AA0               	xorlw	160
 11107  001CCC  E1F4               	bnz	l10371
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;drv_mrf_miwi_24j40.c: 301: PHYSetShortRAMAddr((0x65), 0xE6);
 11111  001CCE  0EE6               	movlw	230
 11112  001CD0  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 11113  001CD2  0E65               	movlw	101
 11114  001CD4  ECD6  F019         	call	_PHYSetShortRAMAddr
 11115                           
 11116                           ;drv_mrf_miwi_24j40.c: 308: PHYSetLongRAMAddr((0x200), 0x03);
 11117  001CD8  0E02               	movlw	2
 11118  001CDA  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 11119  001CDC  6A1E               	clrf	PHYSetLongRAMAddr@address,c
 11120  001CDE  0E03               	movlw	3
 11121  001CE0  6E20               	movwf	PHYSetLongRAMAddr@value,c
 11122  001CE2  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 11123                           
 11124                           ;drv_mrf_miwi_24j40.c: 309: PHYSetLongRAMAddr((0x201), 0x02);
 11125  001CE6  0E02               	movlw	2
 11126  001CE8  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 11127  001CEA  0E01               	movlw	1
 11128  001CEC  6E1E               	movwf	PHYSetLongRAMAddr@address,c
 11129  001CEE  0E02               	movlw	2
 11130  001CF0  6E20               	movwf	PHYSetLongRAMAddr@value,c
 11131  001CF2  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 11132                           
 11133                           ;drv_mrf_miwi_24j40.c: 311: MiMAC_SetChannel(MACCurrentChannel, 0);
 11134  001CF6  6A24               	clrf	MiMAC_SetChannel@offsetFreq,c
 11135  001CF8  0100               	movlb	0	; () banked
 11136  001CFA  51E1               	movf	_MACCurrentChannel& (0+255),w,b
 11137  001CFC  EC9B  F018         	call	_MiMAC_SetChannel
 11138  001D00  0012               	return		;funcret
 11139  001D02                     __end_of_InitMRF24J40:
 11140                           	opt stack 0
 11141                           tblptru	equ	0xFF8
 11142                           tblptrh	equ	0xFF7
 11143                           tblptrl	equ	0xFF6
 11144                           tablat	equ	0xFF5
 11145                           prodh	equ	0xFF4
 11146                           prodl	equ	0xFF3
 11147                           intcon	equ	0xFF2
 11148                           intcon2	equ	0xFF1
 11149                           intcon3	equ	0xFF0
 11150                           postinc0	equ	0xFEE
 11151                           plusw0	equ	0xFEB
 11152                           wreg	equ	0xFE8
 11153                           indf1	equ	0xFE7
 11154                           fsr1h	equ	0xFE2
 11155                           fsr1l	equ	0xFE1
 11156                           indf2	equ	0xFDF
 11157                           postinc2	equ	0xFDE
 11158                           postdec2	equ	0xFDD
 11159                           plusw2	equ	0xFDB
 11160                           fsr2h	equ	0xFDA
 11161                           fsr2l	equ	0xFD9
 11162                           status	equ	0xFD8
 11163                           
 11164 ;; *************** function _PHYGetShortRAMAddr *****************
 11165 ;; Defined at:
 11166 ;;		line 154 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;  address         1    wreg     unsigned char 
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;  address         1   29[COMRAM] unsigned char 
 11171 ;;  tmpRFIE         1   31[COMRAM] volatile unsigned char 
 11172 ;;  toReturn        1   30[COMRAM] unsigned char 
 11173 ;; Return value:  Size  Location     Type
 11174 ;;                  1    wreg      unsigned char 
 11175 ;; Registers used:
 11176 ;;		wreg, status,2, cstack
 11177 ;; Tracked objects:
 11178 ;;		On entry : 0/0
 11179 ;;		On exit  : 0/0
 11180 ;;		Unchanged: 0/0
 11181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11183 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11185 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11186 ;;Total ram usage:        3 bytes
 11187 ;; Hardware stack levels used:    1
 11188 ;; Hardware stack levels required when called:    5
 11189 ;; This function calls:
 11190 ;;		_SPI1_Exchange8bit
 11191 ;; This function is called by:
 11192 ;;		_InitMRF24J40
 11193 ;;		_MiMAC_PowerState
 11194 ;; This function uses a non-reentrant model
 11195 ;;
 11196                           
 11197                           	psect	text40
 11198  003328                     __ptext40:
 11199                           	opt stack 0
 11200  003328                     _PHYGetShortRAMAddr:
 11201                           	opt stack 19
 11202                           
 11203                           ;incstack = 0
 11204                           ;PHYGetShortRAMAddr@address stored from wreg
 11205  003328  6E1E               	movwf	PHYGetShortRAMAddr@address,c
 11206                           
 11207                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 11208                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 11209  00332A  0E00               	movlw	0
 11210  00332C  B6F0               	btfsc	intcon3,3,c	;volatile
 11211  00332E  0E01               	movlw	1
 11212  003330  6E20               	movwf	PHYGetShortRAMAddr@tmpRFIE,c	;volatile
 11213                           
 11214                           ;drv_mrf_miwi_24j40.c: 159: INTCON3bits.INT1IE = 0;
 11215  003332  96F0               	bcf	intcon3,3,c	;volatile
 11216                           
 11217                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
 11218  003334  968A               	bcf	3978,3,c	;volatile
 11219                           
 11220                           ;drv_mrf_miwi_24j40.c: 161: SPI1_Exchange8bit(address);
 11221  003336  501E               	movf	PHYGetShortRAMAddr@address,w,c
 11222  003338  ECD1  F01A         	call	_SPI1_Exchange8bit
 11223                           
 11224                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPI1_Exchange8bit(0x00);
 11225  00333C  0E00               	movlw	0
 11226  00333E  ECD1  F01A         	call	_SPI1_Exchange8bit
 11227  003342  6E1F               	movwf	PHYGetShortRAMAddr@toReturn,c
 11228                           
 11229                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
 11230  003344  868A               	bsf	3978,3,c	;volatile
 11231                           
 11232                           ;drv_mrf_miwi_24j40.c: 164: INTCON3bits.INT1IE = tmpRFIE;
 11233  003346  B020               	btfsc	PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
 11234  003348  D002               	bra	u10065
 11235  00334A  96F0               	bcf	intcon3,3,c	;volatile
 11236  00334C  D001               	bra	u10066
 11237  00334E                     u10065:
 11238  00334E  86F0               	bsf	intcon3,3,c	;volatile
 11239  003350                     u10066:
 11240                           
 11241                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 11242  003350  501F               	movf	PHYGetShortRAMAddr@toReturn,w,c
 11243  003352  0012               	return		;funcret
 11244  003354                     __end_of_PHYGetShortRAMAddr:
 11245                           	opt stack 0
 11246                           tblptru	equ	0xFF8
 11247                           tblptrh	equ	0xFF7
 11248                           tblptrl	equ	0xFF6
 11249                           tablat	equ	0xFF5
 11250                           prodh	equ	0xFF4
 11251                           prodl	equ	0xFF3
 11252                           intcon	equ	0xFF2
 11253                           intcon2	equ	0xFF1
 11254                           intcon3	equ	0xFF0
 11255                           postinc0	equ	0xFEE
 11256                           plusw0	equ	0xFEB
 11257                           wreg	equ	0xFE8
 11258                           indf1	equ	0xFE7
 11259                           fsr1h	equ	0xFE2
 11260                           fsr1l	equ	0xFE1
 11261                           indf2	equ	0xFDF
 11262                           postinc2	equ	0xFDE
 11263                           postdec2	equ	0xFDD
 11264                           plusw2	equ	0xFDB
 11265                           fsr2h	equ	0xFDA
 11266                           fsr2l	equ	0xFD9
 11267                           status	equ	0xFD8
 11268                           
 11269 ;; *************** function _PHYGetLongRAMAddr *****************
 11270 ;; Defined at:
 11271 ;;		line 185 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11272 ;; Parameters:    Size  Location     Type
 11273 ;;  address         2   29[COMRAM] unsigned int 
 11274 ;; Auto vars:     Size  Location     Type
 11275 ;;  tmpRFIE         1   34[COMRAM] volatile unsigned char 
 11276 ;;  toReturn        1   33[COMRAM] unsigned char 
 11277 ;; Return value:  Size  Location     Type
 11278 ;;                  1    wreg      unsigned char 
 11279 ;; Registers used:
 11280 ;;		wreg, status,2, status,0, cstack
 11281 ;; Tracked objects:
 11282 ;;		On entry : 0/0
 11283 ;;		On exit  : 0/0
 11284 ;;		Unchanged: 0/0
 11285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11289 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11290 ;;Total ram usage:        6 bytes
 11291 ;; Hardware stack levels used:    1
 11292 ;; Hardware stack levels required when called:    5
 11293 ;; This function calls:
 11294 ;;		_SPI1_Exchange8bit
 11295 ;; This function is called by:
 11296 ;;		_InitMRF24J40
 11297 ;;		_MiMAC_PowerState
 11298 ;; This function uses a non-reentrant model
 11299 ;;
 11300                           
 11301                           	psect	text41
 11302  002E04                     __ptext41:
 11303                           	opt stack 0
 11304  002E04                     _PHYGetLongRAMAddr:
 11305                           	opt stack 19
 11306                           
 11307                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 11308                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 11309                           
 11310                           ;incstack = 0
 11311  002E04  0E00               	movlw	0
 11312  002E06  B6F0               	btfsc	intcon3,3,c	;volatile
 11313  002E08  0E01               	movlw	1
 11314  002E0A  6E23               	movwf	PHYGetLongRAMAddr@tmpRFIE,c	;volatile
 11315                           
 11316                           ;drv_mrf_miwi_24j40.c: 190: INTCON3bits.INT1IE = 0;
 11317  002E0C  96F0               	bcf	intcon3,3,c	;volatile
 11318                           
 11319                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
 11320  002E0E  968A               	bcf	3978,3,c	;volatile
 11321                           
 11322                           ;drv_mrf_miwi_24j40.c: 192: SPI1_Exchange8bit(((address >> 3)&0x7F) | 0x80);
 11323  002E10  C01E  F020         	movff	PHYGetLongRAMAddr@address,??_PHYGetLongRAMAddr
 11324  002E14  C01F  F021         	movff	PHYGetLongRAMAddr@address+1,??_PHYGetLongRAMAddr+1
 11325  002E18  90D8               	bcf	status,0,c
 11326  002E1A  3221               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 11327  002E1C  3220               	rrcf	??_PHYGetLongRAMAddr,f,c
 11328  002E1E  90D8               	bcf	status,0,c
 11329  002E20  3221               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 11330  002E22  3220               	rrcf	??_PHYGetLongRAMAddr,f,c
 11331  002E24  90D8               	bcf	status,0,c
 11332  002E26  3221               	rrcf	??_PHYGetLongRAMAddr+1,f,c
 11333  002E28  3220               	rrcf	??_PHYGetLongRAMAddr,f,c
 11334  002E2A  5020               	movf	??_PHYGetLongRAMAddr,w,c
 11335  002E2C  0B7F               	andlw	127
 11336  002E2E  0980               	iorlw	128
 11337  002E30  ECD1  F01A         	call	_SPI1_Exchange8bit
 11338                           
 11339                           ;drv_mrf_miwi_24j40.c: 193: SPI1_Exchange8bit(((address << 5)&0xE0));
 11340  002E34  381E               	swapf	PHYGetLongRAMAddr@address,w,c
 11341  002E36  46E8               	rlncf	wreg,f,c
 11342  002E38  0BE0               	andlw	224
 11343  002E3A  ECD1  F01A         	call	_SPI1_Exchange8bit
 11344                           
 11345                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPI1_Exchange8bit(0x00);
 11346  002E3E  0E00               	movlw	0
 11347  002E40  ECD1  F01A         	call	_SPI1_Exchange8bit
 11348  002E44  6E22               	movwf	PHYGetLongRAMAddr@toReturn,c
 11349                           
 11350                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
 11351  002E46  868A               	bsf	3978,3,c	;volatile
 11352                           
 11353                           ;drv_mrf_miwi_24j40.c: 196: INTCON3bits.INT1IE = tmpRFIE;
 11354  002E48  B023               	btfsc	PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
 11355  002E4A  D002               	bra	u10075
 11356  002E4C  96F0               	bcf	intcon3,3,c	;volatile
 11357  002E4E  D001               	bra	u10076
 11358  002E50                     u10075:
 11359  002E50  86F0               	bsf	intcon3,3,c	;volatile
 11360  002E52                     u10076:
 11361                           
 11362                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 11363  002E52  5022               	movf	PHYGetLongRAMAddr@toReturn,w,c
 11364  002E54  0012               	return		;funcret
 11365  002E56                     __end_of_PHYGetLongRAMAddr:
 11366                           	opt stack 0
 11367                           tblptru	equ	0xFF8
 11368                           tblptrh	equ	0xFF7
 11369                           tblptrl	equ	0xFF6
 11370                           tablat	equ	0xFF5
 11371                           prodh	equ	0xFF4
 11372                           prodl	equ	0xFF3
 11373                           intcon	equ	0xFF2
 11374                           intcon2	equ	0xFF1
 11375                           intcon3	equ	0xFF0
 11376                           postinc0	equ	0xFEE
 11377                           plusw0	equ	0xFEB
 11378                           wreg	equ	0xFE8
 11379                           indf1	equ	0xFE7
 11380                           fsr1h	equ	0xFE2
 11381                           fsr1l	equ	0xFE1
 11382                           indf2	equ	0xFDF
 11383                           postinc2	equ	0xFDE
 11384                           postdec2	equ	0xFDD
 11385                           plusw2	equ	0xFDB
 11386                           fsr2h	equ	0xFDA
 11387                           fsr2l	equ	0xFD9
 11388                           status	equ	0xFD8
 11389                           
 11390 ;; *************** function _MiMAC_SetChannel *****************
 11391 ;; Defined at:
 11392 ;;		line 1302 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11393 ;; Parameters:    Size  Location     Type
 11394 ;;  channel         1    wreg     unsigned char 
 11395 ;;  offsetFreq      1   35[COMRAM] unsigned char 
 11396 ;; Auto vars:     Size  Location     Type
 11397 ;;  channel         1   36[COMRAM] unsigned char 
 11398 ;; Return value:  Size  Location     Type
 11399 ;;                  1    wreg      unsigned char 
 11400 ;; Registers used:
 11401 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11402 ;; Tracked objects:
 11403 ;;		On entry : F/0
 11404 ;;		On exit  : 0/0
 11405 ;;		Unchanged: 0/0
 11406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11407 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11411 ;;Total ram usage:        2 bytes
 11412 ;; Hardware stack levels used:    1
 11413 ;; Hardware stack levels required when called:    6
 11414 ;; This function calls:
 11415 ;;		_PHYSetLongRAMAddr
 11416 ;;		_PHYSetShortRAMAddr
 11417 ;; This function is called by:
 11418 ;;		_InitMRF24J40
 11419 ;;		_MiApp_SetChannel
 11420 ;; This function uses a non-reentrant model
 11421 ;;
 11422                           
 11423                           	psect	text42
 11424  003136                     __ptext42:
 11425                           	opt stack 0
 11426  003136                     _MiMAC_SetChannel:
 11427                           	opt stack 18
 11428                           
 11429                           ;incstack = 0
 11430                           ;MiMAC_SetChannel@channel stored from wreg
 11431  003136  6E25               	movwf	MiMAC_SetChannel@channel,c
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;drv_mrf_miwi_24j40.c: 1304: if (channel < 11 || channel > 26)
 11435  003138  0E0A               	movlw	10
 11436  00313A  6425               	cpfsgt	MiMAC_SetChannel@channel,c
 11437  00313C  0C00               	retlw	0
 11438                           
 11439                           ; BSR set to: 0
 11440  00313E  0E1A               	movlw	26
 11441  003140  6425               	cpfsgt	MiMAC_SetChannel@channel,c
 11442  003142  D001               	goto	l196
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;drv_mrf_miwi_24j40.c: 1305: {
 11446                           ;drv_mrf_miwi_24j40.c: 1306: return 0;
 11447  003144  0C00               	retlw	0
 11448  003146                     l196:
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;drv_mrf_miwi_24j40.c: 1307: }
 11452                           ;drv_mrf_miwi_24j40.c: 1316: MACCurrentChannel = channel;
 11453  003146  C025  F0E1         	movff	MiMAC_SetChannel@channel,_MACCurrentChannel
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;drv_mrf_miwi_24j40.c: 1317: PHYSetLongRAMAddr((0x200), ((channel - 11) << 4) | 0x03);
 11457  00314A  0E02               	movlw	2
 11458  00314C  6E1F               	movwf	PHYSetLongRAMAddr@address+1,c
 11459  00314E  6A1E               	clrf	PHYSetLongRAMAddr@address,c
 11460  003150  5025               	movf	MiMAC_SetChannel@channel,w,c
 11461  003152  0D10               	mullw	16
 11462  003154  50F3               	movf	prodl,w,c
 11463  003156  0F50               	addlw	80
 11464  003158  0903               	iorlw	3
 11465  00315A  6E20               	movwf	PHYSetLongRAMAddr@value,c
 11466  00315C  EC7C  F017         	call	_PHYSetLongRAMAddr	;wreg free
 11467                           
 11468                           ;drv_mrf_miwi_24j40.c: 1318: PHYSetShortRAMAddr((0x6D), 0x04);
 11469  003160  0E04               	movlw	4
 11470  003162  6E1E               	movwf	PHYSetShortRAMAddr@value,c
 11471  003164  0E6D               	movlw	109
 11472  003166  ECD6  F019         	call	_PHYSetShortRAMAddr
 11473                           
 11474                           ;drv_mrf_miwi_24j40.c: 1319: PHYSetShortRAMAddr((0x6D), 0x00);
 11475  00316A  6A1E               	clrf	PHYSetShortRAMAddr@value,c
 11476  00316C  0E6D               	movlw	109
 11477  00316E  ECD6  F019         	call	_PHYSetShortRAMAddr
 11478                           
 11479                           ;drv_mrf_miwi_24j40.c: 1320: return 1;
 11480  003172  0C01               	retlw	1	;funcret
 11481  003174                     __end_of_MiMAC_SetChannel:
 11482                           	opt stack 0
 11483                           tblptru	equ	0xFF8
 11484                           tblptrh	equ	0xFF7
 11485                           tblptrl	equ	0xFF6
 11486                           tablat	equ	0xFF5
 11487                           prodh	equ	0xFF4
 11488                           prodl	equ	0xFF3
 11489                           intcon	equ	0xFF2
 11490                           intcon2	equ	0xFF1
 11491                           intcon3	equ	0xFF0
 11492                           postinc0	equ	0xFEE
 11493                           plusw0	equ	0xFEB
 11494                           wreg	equ	0xFE8
 11495                           indf1	equ	0xFE7
 11496                           fsr1h	equ	0xFE2
 11497                           fsr1l	equ	0xFE1
 11498                           indf2	equ	0xFDF
 11499                           postinc2	equ	0xFDE
 11500                           postdec2	equ	0xFDD
 11501                           plusw2	equ	0xFDB
 11502                           fsr2h	equ	0xFDA
 11503                           fsr2l	equ	0xFD9
 11504                           status	equ	0xFD8
 11505                           
 11506 ;; *************** function _PHYSetShortRAMAddr *****************
 11507 ;; Defined at:
 11508 ;;		line 124 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11509 ;; Parameters:    Size  Location     Type
 11510 ;;  address         1    wreg     unsigned char 
 11511 ;;  value           1   29[COMRAM] unsigned char 
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;  address         1   30[COMRAM] unsigned char 
 11514 ;;  tmpRFIE         1   31[COMRAM] volatile unsigned char 
 11515 ;; Return value:  Size  Location     Type
 11516 ;;		None               void
 11517 ;; Registers used:
 11518 ;;		wreg, status,2, cstack
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11524 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11527 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11528 ;;Total ram usage:        3 bytes
 11529 ;; Hardware stack levels used:    1
 11530 ;; Hardware stack levels required when called:    5
 11531 ;; This function calls:
 11532 ;;		_SPI1_Exchange8bit
 11533 ;; This function is called by:
 11534 ;;		_InitMRF24J40
 11535 ;;		_MiMAC_SendPacket
 11536 ;;		_MiMAC_PowerState
 11537 ;;		_MiMAC_SetChannel
 11538 ;;		_MiMAC_SetAltAddress
 11539 ;; This function uses a non-reentrant model
 11540 ;;
 11541                           
 11542                           	psect	text43
 11543  0033AC                     __ptext43:
 11544                           	opt stack 0
 11545  0033AC                     _PHYSetShortRAMAddr:
 11546                           	opt stack 20
 11547                           
 11548                           ;incstack = 0
 11549                           ;PHYSetShortRAMAddr@address stored from wreg
 11550  0033AC  6E1F               	movwf	PHYSetShortRAMAddr@address,c
 11551                           
 11552                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 11553  0033AE  0E00               	movlw	0
 11554  0033B0  B6F0               	btfsc	intcon3,3,c	;volatile
 11555  0033B2  0E01               	movlw	1
 11556  0033B4  6E20               	movwf	PHYSetShortRAMAddr@tmpRFIE,c	;volatile
 11557                           
 11558                           ;drv_mrf_miwi_24j40.c: 128: INTCON3bits.INT1IE = 0;
 11559  0033B6  96F0               	bcf	intcon3,3,c	;volatile
 11560                           
 11561                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
 11562  0033B8  968A               	bcf	3978,3,c	;volatile
 11563                           
 11564                           ;drv_mrf_miwi_24j40.c: 130: SPI1_Exchange8bit(address);
 11565  0033BA  501F               	movf	PHYSetShortRAMAddr@address,w,c
 11566  0033BC  ECD1  F01A         	call	_SPI1_Exchange8bit
 11567                           
 11568                           ;drv_mrf_miwi_24j40.c: 131: SPI1_Exchange8bit(value);
 11569  0033C0  501E               	movf	PHYSetShortRAMAddr@value,w,c
 11570  0033C2  ECD1  F01A         	call	_SPI1_Exchange8bit
 11571                           
 11572                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
 11573  0033C6  868A               	bsf	3978,3,c	;volatile
 11574                           
 11575                           ;drv_mrf_miwi_24j40.c: 133: INTCON3bits.INT1IE = tmpRFIE;
 11576  0033C8  B020               	btfsc	PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
 11577  0033CA  D002               	bra	u10055
 11578  0033CC  96F0               	bcf	intcon3,3,c	;volatile
 11579  0033CE  D001               	bra	u10056
 11580  0033D0                     u10055:
 11581  0033D0  86F0               	bsf	intcon3,3,c	;volatile
 11582  0033D2                     u10056:
 11583  0033D2  0012               	return		;funcret
 11584  0033D4                     __end_of_PHYSetShortRAMAddr:
 11585                           	opt stack 0
 11586                           tblptru	equ	0xFF8
 11587                           tblptrh	equ	0xFF7
 11588                           tblptrl	equ	0xFF6
 11589                           tablat	equ	0xFF5
 11590                           prodh	equ	0xFF4
 11591                           prodl	equ	0xFF3
 11592                           intcon	equ	0xFF2
 11593                           intcon2	equ	0xFF1
 11594                           intcon3	equ	0xFF0
 11595                           postinc0	equ	0xFEE
 11596                           plusw0	equ	0xFEB
 11597                           wreg	equ	0xFE8
 11598                           indf1	equ	0xFE7
 11599                           fsr1h	equ	0xFE2
 11600                           fsr1l	equ	0xFE1
 11601                           indf2	equ	0xFDF
 11602                           postinc2	equ	0xFDE
 11603                           postdec2	equ	0xFDD
 11604                           plusw2	equ	0xFDB
 11605                           fsr2h	equ	0xFDA
 11606                           fsr2l	equ	0xFD9
 11607                           status	equ	0xFD8
 11608                           
 11609 ;; *************** function _PHYSetLongRAMAddr *****************
 11610 ;; Defined at:
 11611 ;;		line 90 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;  address         2   29[COMRAM] unsigned int 
 11614 ;;  value           1   31[COMRAM] unsigned char 
 11615 ;; Auto vars:     Size  Location     Type
 11616 ;;  tmpRFIE         1   34[COMRAM] volatile unsigned char 
 11617 ;; Return value:  Size  Location     Type
 11618 ;;		None               void
 11619 ;; Registers used:
 11620 ;;		wreg, status,2, status,0, cstack
 11621 ;; Tracked objects:
 11622 ;;		On entry : 0/0
 11623 ;;		On exit  : 0/0
 11624 ;;		Unchanged: 0/0
 11625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11626 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11628 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11629 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11630 ;;Total ram usage:        6 bytes
 11631 ;; Hardware stack levels used:    1
 11632 ;; Hardware stack levels required when called:    5
 11633 ;; This function calls:
 11634 ;;		_SPI1_Exchange8bit
 11635 ;; This function is called by:
 11636 ;;		_InitMRF24J40
 11637 ;;		_MiMAC_SendPacket
 11638 ;;		_MiMAC_SetChannel
 11639 ;; This function uses a non-reentrant model
 11640 ;;
 11641                           
 11642                           	psect	text44
 11643  002EF8                     __ptext44:
 11644                           	opt stack 0
 11645  002EF8                     _PHYSetLongRAMAddr:
 11646                           	opt stack 20
 11647                           
 11648                           ;drv_mrf_miwi_24j40.c: 92: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 11649                           
 11650                           ;incstack = 0
 11651  002EF8  0E00               	movlw	0
 11652  002EFA  B6F0               	btfsc	intcon3,3,c	;volatile
 11653  002EFC  0E01               	movlw	1
 11654  002EFE  6E23               	movwf	PHYSetLongRAMAddr@tmpRFIE,c	;volatile
 11655                           
 11656                           ;drv_mrf_miwi_24j40.c: 94: INTCON3bits.INT1IE = 0;
 11657  002F00  96F0               	bcf	intcon3,3,c	;volatile
 11658                           
 11659                           ;drv_mrf_miwi_24j40.c: 95: LATBbits.LATB3 = 0;
 11660  002F02  968A               	bcf	3978,3,c	;volatile
 11661                           
 11662                           ;drv_mrf_miwi_24j40.c: 96: SPI1_Exchange8bit((((uint8_t) (address >> 3))&0x7F) | 0x80);
 11663  002F04  C01E  F021         	movff	PHYSetLongRAMAddr@address,??_PHYSetLongRAMAddr
 11664  002F08  C01F  F022         	movff	PHYSetLongRAMAddr@address+1,??_PHYSetLongRAMAddr+1
 11665  002F0C  90D8               	bcf	status,0,c
 11666  002F0E  3222               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 11667  002F10  3221               	rrcf	??_PHYSetLongRAMAddr,f,c
 11668  002F12  90D8               	bcf	status,0,c
 11669  002F14  3222               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 11670  002F16  3221               	rrcf	??_PHYSetLongRAMAddr,f,c
 11671  002F18  90D8               	bcf	status,0,c
 11672  002F1A  3222               	rrcf	??_PHYSetLongRAMAddr+1,f,c
 11673  002F1C  3221               	rrcf	??_PHYSetLongRAMAddr,f,c
 11674  002F1E  5021               	movf	??_PHYSetLongRAMAddr,w,c
 11675  002F20  0B7F               	andlw	127
 11676  002F22  0980               	iorlw	128
 11677  002F24  ECD1  F01A         	call	_SPI1_Exchange8bit
 11678                           
 11679                           ;drv_mrf_miwi_24j40.c: 97: SPI1_Exchange8bit((((uint8_t) (address << 5))&0xE0) | 0x10);
 11680  002F28  381E               	swapf	PHYSetLongRAMAddr@address,w,c
 11681  002F2A  46E8               	rlncf	wreg,f,c
 11682  002F2C  0BE0               	andlw	224
 11683  002F2E  0910               	iorlw	16
 11684  002F30  ECD1  F01A         	call	_SPI1_Exchange8bit
 11685                           
 11686                           ;drv_mrf_miwi_24j40.c: 98: SPI1_Exchange8bit(value);
 11687  002F34  5020               	movf	PHYSetLongRAMAddr@value,w,c
 11688  002F36  ECD1  F01A         	call	_SPI1_Exchange8bit
 11689                           
 11690                           ;drv_mrf_miwi_24j40.c: 99: LATBbits.LATB3 = 1;
 11691  002F3A  868A               	bsf	3978,3,c	;volatile
 11692                           
 11693                           ;drv_mrf_miwi_24j40.c: 100: INTCON3bits.INT1IE = tmpRFIE;
 11694  002F3C  B023               	btfsc	PHYSetLongRAMAddr@tmpRFIE,0,c	;volatile
 11695  002F3E  D002               	bra	u10045
 11696  002F40  96F0               	bcf	intcon3,3,c	;volatile
 11697  002F42  D001               	bra	u10046
 11698  002F44                     u10045:
 11699  002F44  86F0               	bsf	intcon3,3,c	;volatile
 11700  002F46                     u10046:
 11701  002F46  0012               	return		;funcret
 11702  002F48                     __end_of_PHYSetLongRAMAddr:
 11703                           	opt stack 0
 11704                           tblptru	equ	0xFF8
 11705                           tblptrh	equ	0xFF7
 11706                           tblptrl	equ	0xFF6
 11707                           tablat	equ	0xFF5
 11708                           prodh	equ	0xFF4
 11709                           prodl	equ	0xFF3
 11710                           intcon	equ	0xFF2
 11711                           intcon2	equ	0xFF1
 11712                           intcon3	equ	0xFF0
 11713                           postinc0	equ	0xFEE
 11714                           plusw0	equ	0xFEB
 11715                           wreg	equ	0xFE8
 11716                           indf1	equ	0xFE7
 11717                           fsr1h	equ	0xFE2
 11718                           fsr1l	equ	0xFE1
 11719                           indf2	equ	0xFDF
 11720                           postinc2	equ	0xFDE
 11721                           postdec2	equ	0xFDD
 11722                           plusw2	equ	0xFDB
 11723                           fsr2h	equ	0xFDA
 11724                           fsr2l	equ	0xFD9
 11725                           status	equ	0xFD8
 11726                           
 11727 ;; *************** function _DemoOutput_UnicastFail *****************
 11728 ;; Defined at:
 11729 ;;		line 203 in file "../src/demo_ouput.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;		None
 11732 ;; Auto vars:     Size  Location     Type
 11733 ;;		None
 11734 ;; Return value:  Size  Location     Type
 11735 ;;		None               void
 11736 ;; Registers used:
 11737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11738 ;; Tracked objects:
 11739 ;;		On entry : F/0
 11740 ;;		On exit  : 0/0
 11741 ;;		Unchanged: 0/0
 11742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11747 ;;Total ram usage:        0 bytes
 11748 ;; Hardware stack levels used:    1
 11749 ;; Hardware stack levels required when called:    7
 11750 ;; This function calls:
 11751 ;;		_LCDDisplay
 11752 ;; This function is called by:
 11753 ;;		_Forward_Packet_PANCr_to_EDy
 11754 ;; This function uses a non-reentrant model
 11755 ;;
 11756                           
 11757                           	psect	text45
 11758  003566                     __ptext45:
 11759                           	opt stack 0
 11760  003566                     _DemoOutput_UnicastFail:
 11761                           	opt stack 17
 11762                           
 11763                           ; BSR set to: 0
 11764                           ;demo_ouput.c: 206: ;
 11765                           ;demo_ouput.c: 209: LCDDisplay((char *)" Unicast Failed", 0, 1);
 11766                           
 11767                           ;incstack = 0
 11768  003566  0EC4               	movlw	low STR_7
 11769  003568  6F87               	movwf	LCDDisplay@text& (0+255),b
 11770  00356A  0EFF               	movlw	high STR_7
 11771  00356C  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
 11772  00356E  6B89               	clrf	LCDDisplay@value& (0+255),b
 11773  003570  0E01               	movlw	1
 11774  003572  6F8A               	movwf	LCDDisplay@delay& (0+255),b
 11775  003574  EC7B  F018         	call	_LCDDisplay	;wreg free
 11776  003578  0012               	return		;funcret
 11777  00357A                     __end_of_DemoOutput_UnicastFail:
 11778                           	opt stack 0
 11779                           tblptru	equ	0xFF8
 11780                           tblptrh	equ	0xFF7
 11781                           tblptrl	equ	0xFF6
 11782                           tablat	equ	0xFF5
 11783                           prodh	equ	0xFF4
 11784                           prodl	equ	0xFF3
 11785                           intcon	equ	0xFF2
 11786                           intcon2	equ	0xFF1
 11787                           intcon3	equ	0xFF0
 11788                           postinc0	equ	0xFEE
 11789                           plusw0	equ	0xFEB
 11790                           wreg	equ	0xFE8
 11791                           indf1	equ	0xFE7
 11792                           fsr1h	equ	0xFE2
 11793                           fsr1l	equ	0xFE1
 11794                           indf2	equ	0xFDF
 11795                           postinc2	equ	0xFDE
 11796                           postdec2	equ	0xFDD
 11797                           plusw2	equ	0xFDB
 11798                           fsr2h	equ	0xFDA
 11799                           fsr2l	equ	0xFD9
 11800                           status	equ	0xFD8
 11801                           
 11802 ;; *************** function _Find_Index *****************
 11803 ;; Defined at:
 11804 ;;		line 105 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11805 ;; Parameters:    Size  Location     Type
 11806 ;;  DestAddr        2   28[COMRAM] PTR unsigned char 
 11807 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;  i               1   32[COMRAM] unsigned char 
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  1    wreg      unsigned char 
 11812 ;; Registers used:
 11813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11814 ;; Tracked objects:
 11815 ;;		On entry : E/0
 11816 ;;		On exit  : C/0
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11822 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11823 ;;Total ram usage:        5 bytes
 11824 ;; Hardware stack levels used:    1
 11825 ;; Hardware stack levels required when called:    4
 11826 ;; This function calls:
 11827 ;;		Nothing
 11828 ;; This function is called by:
 11829 ;;		_P2PTasks
 11830 ;; This function uses a non-reentrant model
 11831 ;;
 11832                           
 11833                           	psect	text46
 11834  002718                     __ptext46:
 11835                           	opt stack 0
 11836  002718                     _Find_Index:
 11837                           	opt stack 21
 11838                           
 11839                           ;miwi_p2p.c: 107: uint8_t i;
 11840                           ;miwi_p2p.c: 108: for (i=0;i<conn_size;i++)
 11841                           
 11842                           ;incstack = 0
 11843  002718  6A21               	clrf	Find_Index@i,c
 11844  00271A  D041               	goto	l11443
 11845  00271C                     l11427:
 11846                           
 11847                           ;miwi_p2p.c: 109: {
 11848                           ;miwi_p2p.c: 110: if (ConnectionTable[i].status.bits.isValid)
 11849  00271C  5021               	movf	Find_Index@i,w,c
 11850  00271E  0D0E               	mullw	14
 11851  002720  0E0C               	movlw	low (_ConnectionTable+12)
 11852  002722  24F3               	addwf	prodl,w,c
 11853  002724  6ED9               	movwf	fsr2l,c
 11854  002726  0E03               	movlw	high (_ConnectionTable+12)
 11855  002728  20F4               	addwfc	prodh,w,c
 11856  00272A  6EDA               	movwf	fsr2h,c
 11857  00272C  0103               	movlb	3	; () banked
 11858  00272E  AEDF               	btfss	indf2,7,c
 11859  002730  D035               	goto	l11441
 11860                           
 11861                           ; BSR set to: 3
 11862                           ;miwi_p2p.c: 111: {
 11863                           ;miwi_p2p.c: 112: if (DestAddr[1] == ConnectionTable[i].Address[0] && DestAddr[2] == Con
      +                          nectionTable[i].Address[1] && DestAddr[3] == ConnectionTable[i].Address[2] )
 11864  002732  5021               	movf	Find_Index@i,w,c
 11865  002734  0D0E               	mullw	14
 11866  002736  0E04               	movlw	low (_ConnectionTable+4)
 11867  002738  24F3               	addwf	prodl,w,c
 11868  00273A  6ED9               	movwf	fsr2l,c
 11869  00273C  0E03               	movlw	high (_ConnectionTable+4)
 11870  00273E  20F4               	addwfc	prodh,w,c
 11871  002740  6EDA               	movwf	fsr2h,c
 11872  002742  EE10 F001          	lfsr	1,1
 11873  002746  501D               	movf	Find_Index@DestAddr,w,c
 11874  002748  26E1               	addwf	fsr1l,f,c
 11875  00274A  501E               	movf	Find_Index@DestAddr+1,w,c
 11876  00274C  22E2               	addwfc	fsr1h,f,c
 11877  00274E  50DE               	movf	postinc2,w,c
 11878  002750  18E6               	xorwf	postinc1,w,c
 11879  002752  E124               	bnz	l11441
 11880                           
 11881                           ; BSR set to: 3
 11882  002754  5021               	movf	Find_Index@i,w,c
 11883  002756  0D0E               	mullw	14
 11884  002758  0E05               	movlw	low (_ConnectionTable+5)
 11885  00275A  24F3               	addwf	prodl,w,c
 11886  00275C  6ED9               	movwf	fsr2l,c
 11887  00275E  0E03               	movlw	high (_ConnectionTable+5)
 11888  002760  20F4               	addwfc	prodh,w,c
 11889  002762  6EDA               	movwf	fsr2h,c
 11890  002764  EE10 F002          	lfsr	1,2
 11891  002768  501D               	movf	Find_Index@DestAddr,w,c
 11892  00276A  26E1               	addwf	fsr1l,f,c
 11893  00276C  501E               	movf	Find_Index@DestAddr+1,w,c
 11894  00276E  22E2               	addwfc	fsr1h,f,c
 11895  002770  50DE               	movf	postinc2,w,c
 11896  002772  18E6               	xorwf	postinc1,w,c
 11897  002774  E113               	bnz	l11441
 11898                           
 11899                           ; BSR set to: 3
 11900  002776  5021               	movf	Find_Index@i,w,c
 11901  002778  0D0E               	mullw	14
 11902  00277A  0E06               	movlw	low (_ConnectionTable+6)
 11903  00277C  24F3               	addwf	prodl,w,c
 11904  00277E  6ED9               	movwf	fsr2l,c
 11905  002780  0E03               	movlw	high (_ConnectionTable+6)
 11906  002782  20F4               	addwfc	prodh,w,c
 11907  002784  6EDA               	movwf	fsr2h,c
 11908  002786  EE10 F003          	lfsr	1,3
 11909  00278A  501D               	movf	Find_Index@DestAddr,w,c
 11910  00278C  26E1               	addwf	fsr1l,f,c
 11911  00278E  501E               	movf	Find_Index@DestAddr+1,w,c
 11912  002790  22E2               	addwfc	fsr1h,f,c
 11913  002792  50DE               	movf	postinc2,w,c
 11914  002794  18E6               	xorwf	postinc1,w,c
 11915  002796  E102               	bnz	l11441
 11916                           
 11917                           ; BSR set to: 3
 11918                           ;miwi_p2p.c: 113: {
 11919                           ;miwi_p2p.c: 114: return i;
 11920  002798  5021               	movf	Find_Index@i,w,c
 11921  00279A  0012               	return	
 11922  00279C                     l11441:
 11923                           
 11924                           ; BSR set to: 3
 11925  00279C  2A21               	incf	Find_Index@i,f,c
 11926  00279E                     l11443:
 11927  00279E  5041               	movf	_conn_size,w,c
 11928  0027A0  5C21               	subwf	Find_Index@i,w,c
 11929  0027A2  E3BC               	bnc	l11427
 11930                           
 11931                           ;miwi_p2p.c: 116: }
 11932                           ;miwi_p2p.c: 118: }
 11933                           ;miwi_p2p.c: 119: }
 11934                           ;miwi_p2p.c: 120: if (i==conn_size)
 11935  0027A4  5041               	movf	_conn_size,w,c
 11936  0027A6  1821               	xorwf	Find_Index@i,w,c
 11937  0027A8  B4D8               	btfsc	status,2,c
 11938                           
 11939                           ;miwi_p2p.c: 121: {
 11940                           ;miwi_p2p.c: 122: return 0xff;
 11941  0027AA  0EFF               	movlw	255
 11942  0027AC  0012               	return		;funcret
 11943  0027AE                     __end_of_Find_Index:
 11944                           	opt stack 0
 11945                           tblptru	equ	0xFF8
 11946                           tblptrh	equ	0xFF7
 11947                           tblptrl	equ	0xFF6
 11948                           tablat	equ	0xFF5
 11949                           prodh	equ	0xFF4
 11950                           prodl	equ	0xFF3
 11951                           intcon	equ	0xFF2
 11952                           intcon2	equ	0xFF1
 11953                           intcon3	equ	0xFF0
 11954                           postinc0	equ	0xFEE
 11955                           plusw0	equ	0xFEB
 11956                           wreg	equ	0xFE8
 11957                           indf1	equ	0xFE7
 11958                           postinc1	equ	0xFE6
 11959                           fsr1h	equ	0xFE2
 11960                           fsr1l	equ	0xFE1
 11961                           indf2	equ	0xFDF
 11962                           postinc2	equ	0xFDE
 11963                           postdec2	equ	0xFDD
 11964                           plusw2	equ	0xFDB
 11965                           fsr2h	equ	0xFDA
 11966                           fsr2l	equ	0xFD9
 11967                           status	equ	0xFD8
 11968                           
 11969 ;; *************** function _AddConnection *****************
 11970 ;; Defined at:
 11971 ;;		line 2525 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11972 ;; Parameters:    Size  Location     Type
 11973 ;;		None
 11974 ;; Auto vars:     Size  Location     Type
 11975 ;;  i               1    8[BANK0 ] unsigned char 
 11976 ;;  connectionSl    1    7[BANK0 ] unsigned char 
 11977 ;;  status          1    0        unsigned char 
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  1    wreg      unsigned char 
 11980 ;; Registers used:
 11981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/0
 11984 ;;		On exit  : 0/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11988 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11989 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11990 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11991 ;;Total ram usage:        7 bytes
 11992 ;; Hardware stack levels used:    1
 11993 ;; Hardware stack levels required when called:    6
 11994 ;; This function calls:
 11995 ;;		_NVMWrite
 11996 ;;		_Total_Connections
 11997 ;;		_isSameAddress
 11998 ;; This function is called by:
 11999 ;;		_P2PTasks
 12000 ;; This function uses a non-reentrant model
 12001 ;;
 12002                           
 12003                           	psect	text47
 12004  001EE8                     __ptext47:
 12005                           	opt stack 0
 12006  001EE8                     _AddConnection:
 12007                           	opt stack 19
 12008                           
 12009                           ;miwi_p2p.c: 2531: uint8_t connectionSlot = 0xFF;
 12010                           
 12011                           ;incstack = 0
 12012  001EE8  0100               	movlb	0	; () banked
 12013  001EEA  6967               	setf	AddConnection@connectionSlot& (0+255),b
 12014                           
 12015                           ;miwi_p2p.c: 2542: for(i = 0; i < 10; i++)
 12016  001EEC  6B68               	clrf	AddConnection@i& (0+255),b
 12017  001EEE                     l11519:
 12018                           
 12019                           ; BSR set to: 0
 12020                           ;miwi_p2p.c: 2543: {
 12021                           ;miwi_p2p.c: 2545: if( ConnectionTable[i].status.bits.isValid )
 12022  001EEE  5168               	movf	AddConnection@i& (0+255),w,b
 12023  001EF0  0D0E               	mullw	14
 12024  001EF2  0E0C               	movlw	low (_ConnectionTable+12)
 12025  001EF4  24F3               	addwf	prodl,w,c
 12026  001EF6  6ED9               	movwf	fsr2l,c
 12027  001EF8  0E03               	movlw	high (_ConnectionTable+12)
 12028  001EFA  20F4               	addwfc	prodh,w,c
 12029  001EFC  6EDA               	movwf	fsr2h,c
 12030  001EFE  AEDF               	btfss	indf2,7,c
 12031  001F00  D014               	goto	l11527
 12032                           
 12033                           ; BSR set to: 3
 12034                           ;miwi_p2p.c: 2546: {
 12035                           ;miwi_p2p.c: 2548: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 12036  001F02  C0BC  F01D         	movff	_rxMessage+3,isSameAddress@Address1
 12037  001F06  C0BD  F01E         	movff	_rxMessage+4,isSameAddress@Address1+1
 12038  001F0A  0100               	movlb	0	; () banked
 12039  001F0C  5168               	movf	AddConnection@i& (0+255),w,b
 12040  001F0E  0D0E               	mullw	14
 12041  001F10  0E04               	movlw	low (_ConnectionTable+4)
 12042  001F12  24F3               	addwf	prodl,w,c
 12043  001F14  6E1F               	movwf	isSameAddress@Address2,c
 12044  001F16  0E03               	movlw	high (_ConnectionTable+4)
 12045  001F18  20F4               	addwfc	prodh,w,c
 12046  001F1A  6E20               	movwf	isSameAddress@Address2+1,c
 12047  001F1C  ECAA  F019         	call	_isSameAddress	;wreg free
 12048  001F20  0900               	iorlw	0
 12049  001F22  E008               	bz	l11531
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;miwi_p2p.c: 2549: {
 12053                           ;miwi_p2p.c: 2550: connectionSlot = i;
 12054  001F24  C068  F067         	movff	AddConnection@i,AddConnection@connectionSlot
 12055                           
 12056                           ; BSR set to: 0
 12057                           ;miwi_p2p.c: 2552: break;
 12058  001F28  D009               	goto	l11535
 12059  001F2A                     l11527:
 12060                           
 12061                           ; BSR set to: 3
 12062                           ;miwi_p2p.c: 2556: else if( connectionSlot == 0xFF )
 12063  001F2A  0100               	movlb	0	; () banked
 12064  001F2C  2967               	incf	AddConnection@connectionSlot& (0+255),w,b
 12065  001F2E  B4D8               	btfsc	status,2,c
 12066                           
 12067                           ; BSR set to: 0
 12068                           ;miwi_p2p.c: 2557: {
 12069                           ;miwi_p2p.c: 2559: connectionSlot = i;
 12070  001F30  C068  F067         	movff	AddConnection@i,AddConnection@connectionSlot
 12071  001F34                     l11531:
 12072                           
 12073                           ; BSR set to: 0
 12074  001F34  2B68               	incf	AddConnection@i& (0+255),f,b
 12075                           
 12076                           ; BSR set to: 0
 12077  001F36  0E09               	movlw	9
 12078  001F38  6568               	cpfsgt	AddConnection@i& (0+255),b
 12079  001F3A  D7D9               	goto	l11519
 12080  001F3C                     l11535:
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;miwi_p2p.c: 2561: }
 12084                           ;miwi_p2p.c: 2562: }
 12085                           ;miwi_p2p.c: 2564: if( connectionSlot == 0xFF )
 12086  001F3C  2967               	incf	AddConnection@connectionSlot& (0+255),w,b
 12087  001F3E  B4D8               	btfsc	status,2,c
 12088  001F40  0012               	return	
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;miwi_p2p.c: 2568: else
 12092                           ;miwi_p2p.c: 2569: {
 12093                           ;miwi_p2p.c: 2570: if( ConnMode >= 0x01 )
 12094  001F42  51FF               	movf	_ConnMode& (0+255),w,b
 12095  001F44  A4D8               	btfss	status,2,c
 12096  001F46  0012               	return	
 12097                           
 12098                           ; BSR set to: 0
 12099                           ;miwi_p2p.c: 2578: for(i = 0; i < 8; i++)
 12100                           
 12101                           ;miwi_p2p.c: 2573: }
 12102                           ;miwi_p2p.c: 2576: MyindexinPC = connectionSlot;
 12103  001F48  6B68               	clrf	AddConnection@i& (0+255),b
 12104  001F4A                     l11549:
 12105                           
 12106                           ; BSR set to: 0
 12107                           ;miwi_p2p.c: 2579: {
 12108                           ;miwi_p2p.c: 2580: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 12109  001F4A  5168               	movf	AddConnection@i& (0+255),w,b
 12110  001F4C  25BC               	addwf	(_rxMessage+3)& (0+255),w,b
 12111  001F4E  6ED9               	movwf	fsr2l,c
 12112  001F50  0E00               	movlw	0
 12113  001F52  21BD               	addwfc	(_rxMessage+4)& (0+255),w,b
 12114  001F54  6EDA               	movwf	fsr2h,c
 12115  001F56  5167               	movf	AddConnection@connectionSlot& (0+255),w,b
 12116  001F58  0D0E               	mullw	14
 12117  001F5A  0E00               	movlw	low _ConnectionTable
 12118  001F5C  6F62               	movwf	??_AddConnection& (0+255),b
 12119  001F5E  0E03               	movlw	high _ConnectionTable
 12120  001F60  6F63               	movwf	(??_AddConnection+1)& (0+255),b
 12121  001F62  0E04               	movlw	4
 12122  001F64  2762               	addwf	??_AddConnection& (0+255),f,b
 12123  001F66  0E00               	movlw	0
 12124  001F68  2363               	addwfc	(??_AddConnection+1)& (0+255),f,b
 12125  001F6A  50F3               	movf	prodl,w,c
 12126  001F6C  2762               	addwf	??_AddConnection& (0+255),f,b
 12127  001F6E  50F4               	movf	prodh,w,c
 12128  001F70  2363               	addwfc	(??_AddConnection+1)& (0+255),f,b
 12129  001F72  5168               	movf	AddConnection@i& (0+255),w,b
 12130  001F74  2562               	addwf	??_AddConnection& (0+255),w,b
 12131  001F76  6EE1               	movwf	fsr1l,c
 12132  001F78  0E00               	movlw	0
 12133  001F7A  2163               	addwfc	(??_AddConnection+1)& (0+255),w,b
 12134  001F7C  6EE2               	movwf	fsr1h,c
 12135  001F7E  CFDF FFE7          	movff	indf2,indf1
 12136                           
 12137                           ; BSR set to: 0
 12138  001F82  2B68               	incf	AddConnection@i& (0+255),f,b
 12139                           
 12140                           ; BSR set to: 0
 12141  001F84  0E07               	movlw	7
 12142  001F86  6568               	cpfsgt	AddConnection@i& (0+255),b
 12143  001F88  D7E0               	goto	l11549
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;miwi_p2p.c: 2583: }
 12147                           ;miwi_p2p.c: 2588: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 12148  001F8A  5167               	movf	AddConnection@connectionSlot& (0+255),w,b
 12149  001F8C  0D0E               	mullw	14
 12150  001F8E  0E0C               	movlw	low (_ConnectionTable+12)
 12151  001F90  24F3               	addwf	prodl,w,c
 12152  001F92  6ED9               	movwf	fsr2l,c
 12153  001F94  0E03               	movlw	high (_ConnectionTable+12)
 12154  001F96  20F4               	addwfc	prodh,w,c
 12155  001F98  6EDA               	movwf	fsr2h,c
 12156  001F9A  8EDF               	bsf	indf2,7,c
 12157                           
 12158                           ;miwi_p2p.c: 2589: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 12159  001F9C  0100               	movlb	0	; () banked
 12160  001F9E  EE20 F002          	lfsr	2,2
 12161  001FA2  51BE               	movf	(_rxMessage+5)& (0+255),w,b
 12162  001FA4  26D9               	addwf	fsr2l,f,c
 12163  001FA6  51BF               	movf	(_rxMessage+6)& (0+255),w,b
 12164  001FA8  22DA               	addwfc	fsr2h,f,c
 12165  001FAA  50DF               	movf	indf2,w,c
 12166  001FAC  6F62               	movwf	??_AddConnection& (0+255),b
 12167  001FAE  0E01               	movlw	1
 12168  001FB0  1762               	andwf	??_AddConnection& (0+255),f,b
 12169  001FB2  5167               	movf	AddConnection@connectionSlot& (0+255),w,b
 12170  001FB4  0D0E               	mullw	14
 12171  001FB6  0E0C               	movlw	low (_ConnectionTable+12)
 12172  001FB8  24F3               	addwf	prodl,w,c
 12173  001FBA  6ED9               	movwf	fsr2l,c
 12174  001FBC  0E03               	movlw	high (_ConnectionTable+12)
 12175  001FBE  20F4               	addwfc	prodh,w,c
 12176  001FC0  6EDA               	movwf	fsr2h,c
 12177  001FC2  50DF               	movf	223,w,c
 12178  001FC4  1962               	xorwf	??_AddConnection& (0+255),w,b
 12179  001FC6  0BFE               	andlw	-2
 12180  001FC8  1962               	xorwf	??_AddConnection& (0+255),w,b
 12181  001FCA  6EDF               	movwf	223,c
 12182                           
 12183                           ; BSR set to: 3
 12184                           ;miwi_p2p.c: 2593: for(i = 0; i < 1; i++)
 12185  001FCC  0100               	movlb	0	; () banked
 12186  001FCE  6B68               	clrf	AddConnection@i& (0+255),b
 12187  001FD0                     l11563:
 12188                           
 12189                           ; BSR set to: 0
 12190                           ;miwi_p2p.c: 2594: {
 12191                           ;miwi_p2p.c: 2595: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 12192  001FD0  5168               	movf	AddConnection@i& (0+255),w,b
 12193  001FD2  25BE               	addwf	(_rxMessage+5)& (0+255),w,b
 12194  001FD4  6F62               	movwf	??_AddConnection& (0+255),b
 12195  001FD6  0E00               	movlw	0
 12196  001FD8  21BF               	addwfc	(_rxMessage+6)& (0+255),w,b
 12197  001FDA  6F63               	movwf	(??_AddConnection+1)& (0+255),b
 12198  001FDC  0E03               	movlw	3
 12199  001FDE  2562               	addwf	??_AddConnection& (0+255),w,b
 12200  001FE0  6ED9               	movwf	fsr2l,c
 12201  001FE2  0E00               	movlw	0
 12202  001FE4  2163               	addwfc	(??_AddConnection+1)& (0+255),w,b
 12203  001FE6  6EDA               	movwf	fsr2h,c
 12204  001FE8  5167               	movf	AddConnection@connectionSlot& (0+255),w,b
 12205  001FEA  0D0E               	mullw	14
 12206  001FEC  0E00               	movlw	low _ConnectionTable
 12207  001FEE  6F64               	movwf	(??_AddConnection+2)& (0+255),b
 12208  001FF0  0E03               	movlw	high _ConnectionTable
 12209  001FF2  6F65               	movwf	(??_AddConnection+3)& (0+255),b
 12210  001FF4  0E0D               	movlw	13
 12211  001FF6  2764               	addwf	(??_AddConnection+2)& (0+255),f,b
 12212  001FF8  0E00               	movlw	0
 12213  001FFA  2365               	addwfc	(??_AddConnection+3)& (0+255),f,b
 12214  001FFC  50F3               	movf	prodl,w,c
 12215  001FFE  2764               	addwf	(??_AddConnection+2)& (0+255),f,b
 12216  002000  50F4               	movf	prodh,w,c
 12217  002002  2365               	addwfc	(??_AddConnection+3)& (0+255),f,b
 12218  002004  5168               	movf	AddConnection@i& (0+255),w,b
 12219  002006  2564               	addwf	(??_AddConnection+2)& (0+255),w,b
 12220  002008  6EE1               	movwf	fsr1l,c
 12221  00200A  0E00               	movlw	0
 12222  00200C  2165               	addwfc	(??_AddConnection+3)& (0+255),w,b
 12223  00200E  6EE2               	movwf	fsr1h,c
 12224  002010  CFDF FFE7          	movff	indf2,indf1
 12225                           
 12226                           ; BSR set to: 0
 12227  002014  2B68               	incf	AddConnection@i& (0+255),f,b
 12228                           
 12229                           ; BSR set to: 0
 12230  002016  5168               	movf	AddConnection@i& (0+255),w,b
 12231  002018  E0DB               	bz	l11563
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;miwi_p2p.c: 2596: }
 12235                           ;miwi_p2p.c: 2603: LatestConnection = connectionSlot;
 12236  00201A  C067  F0E0         	movff	AddConnection@connectionSlot,_LatestConnection
 12237                           
 12238                           ;miwi_p2p.c: 2605: P2PStatus.bits.SearchConnection = 0;
 12239  00201E  99E3               	bcf	_P2PStatus& (0+255),4,b	;volatile
 12240                           
 12241                           ; BSR set to: 0
 12242                           ;miwi_p2p.c: 2606: }
 12243                           ;miwi_p2p.c: 2607: conn_size = Total_Connections();
 12244  002020  ECCB  F017         	call	_Total_Connections	;wreg free
 12245  002024  6E41               	movwf	_conn_size,c
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;miwi_p2p.c: 2608: NVMWrite((uint8_t *)&conn_size, nvmEdc, 1);
 12249  002026  0E41               	movlw	low _conn_size
 12250  002028  6E1E               	movwf	NVMWrite@source,c
 12251  00202A  6A1F               	clrf	NVMWrite@source+1,c
 12252  00202C  C0F1  F020         	movff	_nvmEdc,NVMWrite@addr
 12253  002030  C0F2  F021         	movff	_nvmEdc+1,NVMWrite@addr+1
 12254  002034  6A23               	clrf	NVMWrite@count+1,c
 12255  002036  0E01               	movlw	1
 12256  002038  6E22               	movwf	NVMWrite@count,c
 12257  00203A  EF3F  F013         	goto	_NVMWrite	;wreg free
 12258  00203E                     __end_of_AddConnection:
 12259                           	opt stack 0
 12260                           tblptru	equ	0xFF8
 12261                           tblptrh	equ	0xFF7
 12262                           tblptrl	equ	0xFF6
 12263                           tablat	equ	0xFF5
 12264                           prodh	equ	0xFF4
 12265                           prodl	equ	0xFF3
 12266                           intcon	equ	0xFF2
 12267                           intcon2	equ	0xFF1
 12268                           intcon3	equ	0xFF0
 12269                           postinc0	equ	0xFEE
 12270                           plusw0	equ	0xFEB
 12271                           wreg	equ	0xFE8
 12272                           indf1	equ	0xFE7
 12273                           postinc1	equ	0xFE6
 12274                           fsr1h	equ	0xFE2
 12275                           fsr1l	equ	0xFE1
 12276                           indf2	equ	0xFDF
 12277                           postinc2	equ	0xFDE
 12278                           postdec2	equ	0xFDD
 12279                           plusw2	equ	0xFDB
 12280                           fsr2h	equ	0xFDA
 12281                           fsr2l	equ	0xFD9
 12282                           status	equ	0xFD8
 12283                           
 12284 ;; *************** function _isSameAddress *****************
 12285 ;; Defined at:
 12286 ;;		line 2126 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;  Address1        2   28[COMRAM] PTR unsigned char 
 12289 ;;		 -> RxBuffer.Payload(68), RxBuffer(138), 
 12290 ;;  Address2        2   30[COMRAM] PTR unsigned char 
 12291 ;;		 -> ConnectionTable(140), 
 12292 ;; Auto vars:     Size  Location     Type
 12293 ;;  i               1   34[COMRAM] unsigned char 
 12294 ;; Return value:  Size  Location     Type
 12295 ;;                  1    wreg      unsigned char 
 12296 ;; Registers used:
 12297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 12298 ;; Tracked objects:
 12299 ;;		On entry : F/0
 12300 ;;		On exit  : F/0
 12301 ;;		Unchanged: F/0
 12302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12306 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12307 ;;Total ram usage:        7 bytes
 12308 ;; Hardware stack levels used:    1
 12309 ;; Hardware stack levels required when called:    4
 12310 ;; This function calls:
 12311 ;;		Nothing
 12312 ;; This function is called by:
 12313 ;;		_P2PTasks
 12314 ;;		_AddConnection
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           	psect	text48
 12319  003354                     __ptext48:
 12320                           	opt stack 0
 12321  003354                     _isSameAddress:
 12322                           	opt stack 21
 12323                           
 12324                           ; BSR set to: 0
 12325                           ;miwi_p2p.c: 2128: uint8_t i;
 12326                           ;miwi_p2p.c: 2130: for(i = 0; i < 8; i++)
 12327                           
 12328                           ;incstack = 0
 12329  003354  6A23               	clrf	isSameAddress@i,c
 12330  003356                     l11233:
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;miwi_p2p.c: 2131: {
 12334                           ;miwi_p2p.c: 2132: if( Address1[i] != Address2[i] )
 12335  003356  5023               	movf	isSameAddress@i,w,c
 12336  003358  241F               	addwf	isSameAddress@Address2,w,c
 12337  00335A  6ED9               	movwf	fsr2l,c
 12338  00335C  0E00               	movlw	0
 12339  00335E  2020               	addwfc	isSameAddress@Address2+1,w,c
 12340  003360  6EDA               	movwf	fsr2h,c
 12341  003362  5023               	movf	isSameAddress@i,w,c
 12342  003364  241D               	addwf	isSameAddress@Address1,w,c
 12343  003366  6EE1               	movwf	fsr1l,c
 12344  003368  0E00               	movlw	0
 12345  00336A  201E               	addwfc	isSameAddress@Address1+1,w,c
 12346  00336C  6EE2               	movwf	fsr1h,c
 12347  00336E  50DE               	movf	postinc2,w,c
 12348  003370  18E6               	xorwf	postinc1,w,c
 12349  003372  E001               	bz	l11239
 12350                           
 12351                           ; BSR set to: 0
 12352                           ;miwi_p2p.c: 2133: {
 12353                           ;miwi_p2p.c: 2134: return 0;
 12354  003374  0C00               	retlw	0
 12355  003376                     l11239:
 12356                           
 12357                           ; BSR set to: 0
 12358  003376  2A23               	incf	isSameAddress@i,f,c
 12359                           
 12360                           ; BSR set to: 0
 12361  003378  0E07               	movlw	7
 12362  00337A  6423               	cpfsgt	isSameAddress@i,c
 12363  00337C  D7EC               	goto	l11233
 12364                           
 12365                           ; BSR set to: 0
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;miwi_p2p.c: 2135: }
 12369                           ;miwi_p2p.c: 2136: }
 12370                           ;miwi_p2p.c: 2137: return 1;
 12371  00337E  0C01               	retlw	1	;funcret
 12372  003380                     __end_of_isSameAddress:
 12373                           	opt stack 0
 12374                           tblptru	equ	0xFF8
 12375                           tblptrh	equ	0xFF7
 12376                           tblptrl	equ	0xFF6
 12377                           tablat	equ	0xFF5
 12378                           prodh	equ	0xFF4
 12379                           prodl	equ	0xFF3
 12380                           intcon	equ	0xFF2
 12381                           intcon2	equ	0xFF1
 12382                           intcon3	equ	0xFF0
 12383                           postinc0	equ	0xFEE
 12384                           plusw0	equ	0xFEB
 12385                           wreg	equ	0xFE8
 12386                           indf1	equ	0xFE7
 12387                           postinc1	equ	0xFE6
 12388                           fsr1h	equ	0xFE2
 12389                           fsr1l	equ	0xFE1
 12390                           indf2	equ	0xFDF
 12391                           postinc2	equ	0xFDE
 12392                           postdec2	equ	0xFDD
 12393                           plusw2	equ	0xFDB
 12394                           fsr2h	equ	0xFDA
 12395                           fsr2l	equ	0xFD9
 12396                           status	equ	0xFD8
 12397                           
 12398 ;; *************** function _Total_Connections *****************
 12399 ;; Defined at:
 12400 ;;		line 62 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;		None
 12403 ;; Auto vars:     Size  Location     Type
 12404 ;;  i               1   29[COMRAM] unsigned char 
 12405 ;;  count           1   28[COMRAM] unsigned char 
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  1    wreg      unsigned char 
 12408 ;; Registers used:
 12409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12410 ;; Tracked objects:
 12411 ;;		On entry : F/0
 12412 ;;		On exit  : F/0
 12413 ;;		Unchanged: F/0
 12414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12416 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12419 ;;Total ram usage:        2 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:    4
 12422 ;; This function calls:
 12423 ;;		Nothing
 12424 ;; This function is called by:
 12425 ;;		_AddConnection
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           	psect	text49
 12430  002F96                     __ptext49:
 12431                           	opt stack 0
 12432  002F96                     _Total_Connections:
 12433                           	opt stack 20
 12434                           
 12435                           ; BSR set to: 0
 12436                           ;miwi_p2p.c: 64: uint8_t count=0 , i;
 12437                           
 12438                           ; BSR set to: 0
 12439                           ;incstack = 0
 12440  002F96  6A1D               	clrf	Total_Connections@count,c
 12441                           
 12442                           ;miwi_p2p.c: 65: for (i=0;i<10;i++)
 12443  002F98  6A1E               	clrf	Total_Connections@i,c
 12444  002F9A                     l11183:
 12445                           
 12446                           ; BSR set to: 0
 12447                           ;miwi_p2p.c: 66: {
 12448                           ;miwi_p2p.c: 68: if (ConnectionTable[i].Address[0] != 0x00 || ConnectionTable[i].Address
      +                          [1] != 0x00 || ConnectionTable[i].Address[2] != 0x00)
 12449  002F9A  501E               	movf	Total_Connections@i,w,c
 12450  002F9C  0D0E               	mullw	14
 12451  002F9E  0E04               	movlw	low (_ConnectionTable+4)
 12452  002FA0  24F3               	addwf	prodl,w,c
 12453  002FA2  6ED9               	movwf	fsr2l,c
 12454  002FA4  0E03               	movlw	high (_ConnectionTable+4)
 12455  002FA6  20F4               	addwfc	prodh,w,c
 12456  002FA8  6EDA               	movwf	fsr2h,c
 12457  002FAA  50DF               	movf	indf2,w,c
 12458  002FAC  E114               	bnz	l11189
 12459                           
 12460                           ; BSR set to: 0
 12461  002FAE  501E               	movf	Total_Connections@i,w,c
 12462  002FB0  0D0E               	mullw	14
 12463  002FB2  0E05               	movlw	low (_ConnectionTable+5)
 12464  002FB4  24F3               	addwf	prodl,w,c
 12465  002FB6  6ED9               	movwf	fsr2l,c
 12466  002FB8  0E03               	movlw	high (_ConnectionTable+5)
 12467  002FBA  20F4               	addwfc	prodh,w,c
 12468  002FBC  6EDA               	movwf	fsr2h,c
 12469  002FBE  50DF               	movf	indf2,w,c
 12470  002FC0  E10A               	bnz	l11189
 12471                           
 12472                           ; BSR set to: 0
 12473  002FC2  501E               	movf	Total_Connections@i,w,c
 12474  002FC4  0D0E               	mullw	14
 12475  002FC6  0E06               	movlw	low (_ConnectionTable+6)
 12476  002FC8  24F3               	addwf	prodl,w,c
 12477  002FCA  6ED9               	movwf	fsr2l,c
 12478  002FCC  0E03               	movlw	high (_ConnectionTable+6)
 12479  002FCE  20F4               	addwfc	prodh,w,c
 12480  002FD0  6EDA               	movwf	fsr2h,c
 12481  002FD2  50DF               	movf	indf2,w,c
 12482  002FD4  A4D8               	btfss	status,2,c
 12483  002FD6                     l11189:
 12484                           
 12485                           ; BSR set to: 0
 12486                           ;miwi_p2p.c: 69: {
 12487                           ;miwi_p2p.c: 70: count++;
 12488  002FD6  2A1D               	incf	Total_Connections@count,f,c
 12489                           
 12490                           ; BSR set to: 0
 12491  002FD8  2A1E               	incf	Total_Connections@i,f,c
 12492                           
 12493                           ; BSR set to: 0
 12494  002FDA  0E09               	movlw	9
 12495  002FDC  641E               	cpfsgt	Total_Connections@i,c
 12496  002FDE  D7DD               	goto	l11183
 12497                           
 12498                           ; BSR set to: 0
 12499                           ;miwi_p2p.c: 71: }
 12500                           ;miwi_p2p.c: 78: }
 12501                           ;miwi_p2p.c: 79: return count;
 12502  002FE0  501D               	movf	Total_Connections@count,w,c
 12503                           
 12504                           ; BSR set to: 0
 12505  002FE2  0012               	return		;funcret
 12506  002FE4                     __end_of_Total_Connections:
 12507                           	opt stack 0
 12508                           tblptru	equ	0xFF8
 12509                           tblptrh	equ	0xFF7
 12510                           tblptrl	equ	0xFF6
 12511                           tablat	equ	0xFF5
 12512                           prodh	equ	0xFF4
 12513                           prodl	equ	0xFF3
 12514                           intcon	equ	0xFF2
 12515                           intcon2	equ	0xFF1
 12516                           intcon3	equ	0xFF0
 12517                           postinc0	equ	0xFEE
 12518                           plusw0	equ	0xFEB
 12519                           wreg	equ	0xFE8
 12520                           indf1	equ	0xFE7
 12521                           postinc1	equ	0xFE6
 12522                           fsr1h	equ	0xFE2
 12523                           fsr1l	equ	0xFE1
 12524                           indf2	equ	0xFDF
 12525                           postinc2	equ	0xFDE
 12526                           postdec2	equ	0xFDD
 12527                           plusw2	equ	0xFDB
 12528                           fsr2h	equ	0xFDA
 12529                           fsr2l	equ	0xFD9
 12530                           status	equ	0xFD8
 12531                           
 12532 ;; *************** function _MiApp_DiscardMessage *****************
 12533 ;; Defined at:
 12534 ;;		line 2370 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12535 ;; Parameters:    Size  Location     Type
 12536 ;;		None
 12537 ;; Auto vars:     Size  Location     Type
 12538 ;;		None
 12539 ;; Return value:  Size  Location     Type
 12540 ;;		None               void
 12541 ;; Registers used:
 12542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12543 ;; Tracked objects:
 12544 ;;		On entry : 0/0
 12545 ;;		On exit  : 0/0
 12546 ;;		Unchanged: 0/0
 12547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12552 ;;Total ram usage:        0 bytes
 12553 ;; Hardware stack levels used:    1
 12554 ;; Hardware stack levels required when called:    5
 12555 ;; This function calls:
 12556 ;;		_MiMAC_DiscardPacket
 12557 ;; This function is called by:
 12558 ;;		_MiApp_EstablishConnection
 12559 ;;		_run_star_demo
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           	psect	text50
 12564  0035DC                     __ptext50:
 12565                           	opt stack 0
 12566  0035DC                     _MiApp_DiscardMessage:
 12567                           	opt stack 22
 12568                           
 12569                           ;miwi_p2p.c: 2372: P2PStatus.bits.RxHasUserData = 0;
 12570                           
 12571                           ; BSR set to: 0
 12572                           ;incstack = 0
 12573  0035DC  0100               	movlb	0	; () banked
 12574  0035DE  97E3               	bcf	_P2PStatus& (0+255),3,b	;volatile
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;miwi_p2p.c: 2373: MiMAC_DiscardPacket();
 12578  0035E0  EC8E  F01A         	call	_MiMAC_DiscardPacket	;wreg free
 12579  0035E4  0012               	return		;funcret
 12580  0035E6                     __end_of_MiApp_DiscardMessage:
 12581                           	opt stack 0
 12582                           tblptru	equ	0xFF8
 12583                           tblptrh	equ	0xFF7
 12584                           tblptrl	equ	0xFF6
 12585                           tablat	equ	0xFF5
 12586                           prodh	equ	0xFF4
 12587                           prodl	equ	0xFF3
 12588                           intcon	equ	0xFF2
 12589                           intcon2	equ	0xFF1
 12590                           intcon3	equ	0xFF0
 12591                           postinc0	equ	0xFEE
 12592                           plusw0	equ	0xFEB
 12593                           wreg	equ	0xFE8
 12594                           indf1	equ	0xFE7
 12595                           postinc1	equ	0xFE6
 12596                           fsr1h	equ	0xFE2
 12597                           fsr1l	equ	0xFE1
 12598                           indf2	equ	0xFDF
 12599                           postinc2	equ	0xFDE
 12600                           postdec2	equ	0xFDD
 12601                           plusw2	equ	0xFDB
 12602                           fsr2h	equ	0xFDA
 12603                           fsr2l	equ	0xFD9
 12604                           status	equ	0xFD8
 12605                           
 12606 ;; *************** function _MiMAC_DiscardPacket *****************
 12607 ;; Defined at:
 12608 ;;		line 693 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 12609 ;; Parameters:    Size  Location     Type
 12610 ;;		None
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;		None
 12613 ;; Return value:  Size  Location     Type
 12614 ;;		None               void
 12615 ;; Registers used:
 12616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12617 ;; Tracked objects:
 12618 ;;		On entry : 0/0
 12619 ;;		On exit  : 0/0
 12620 ;;		Unchanged: 0/0
 12621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12626 ;;Total ram usage:        0 bytes
 12627 ;; Hardware stack levels used:    1
 12628 ;; Hardware stack levels required when called:    4
 12629 ;; This function calls:
 12630 ;;		Nothing
 12631 ;; This function is called by:
 12632 ;;		_MiMAC_ReceivedPacket
 12633 ;;		_P2PTasks
 12634 ;;		_MiApp_DiscardMessage
 12635 ;; This function uses a non-reentrant model
 12636 ;;
 12637                           
 12638                           	psect	text51
 12639  00351C                     __ptext51:
 12640                           	opt stack 0
 12641  00351C                     _MiMAC_DiscardPacket:
 12642                           	opt stack 20
 12643                           
 12644                           ;drv_mrf_miwi_24j40.c: 697: if (BankIndex < 2)
 12645                           
 12646                           ;incstack = 0
 12647  00351C  0E02               	movlw	2
 12648  00351E  6042               	cpfslt	_BankIndex,c
 12649  003520  0C02               	retlw	2
 12650                           
 12651                           ;drv_mrf_miwi_24j40.c: 698: {
 12652                           ;drv_mrf_miwi_24j40.c: 699: RxBuffer[BankIndex].PayloadLen = 0;
 12653  003522  5042               	movf	_BankIndex,w,c
 12654  003524  0D45               	mullw	69
 12655  003526  0E00               	movlw	low _RxBuffer
 12656  003528  24F3               	addwf	prodl,w,c
 12657  00352A  6ED9               	movwf	fsr2l,c
 12658  00352C  0E02               	movlw	high _RxBuffer
 12659  00352E  20F4               	addwfc	prodh,w,c
 12660  003530  6EDA               	movwf	fsr2h,c
 12661  003532  6ADF               	clrf	indf2,c
 12662  003534  0C00               	retlw	0	;funcret
 12663  003536                     __end_of_MiMAC_DiscardPacket:
 12664                           	opt stack 0
 12665                           tblptru	equ	0xFF8
 12666                           tblptrh	equ	0xFF7
 12667                           tblptrl	equ	0xFF6
 12668                           tablat	equ	0xFF5
 12669                           prodh	equ	0xFF4
 12670                           prodl	equ	0xFF3
 12671                           intcon	equ	0xFF2
 12672                           intcon2	equ	0xFF1
 12673                           intcon3	equ	0xFF0
 12674                           postinc0	equ	0xFEE
 12675                           plusw0	equ	0xFEB
 12676                           wreg	equ	0xFE8
 12677                           indf1	equ	0xFE7
 12678                           postinc1	equ	0xFE6
 12679                           fsr1h	equ	0xFE2
 12680                           fsr1l	equ	0xFE1
 12681                           indf2	equ	0xFDF
 12682                           postinc2	equ	0xFDE
 12683                           postdec2	equ	0xFDD
 12684                           plusw2	equ	0xFDB
 12685                           fsr2h	equ	0xFDA
 12686                           fsr2l	equ	0xFD9
 12687                           status	equ	0xFD8
 12688                           
 12689 ;; *************** function _MiApp_ConnectionMode *****************
 12690 ;; Defined at:
 12691 ;;		line 2962 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;  Mode            1    wreg     unsigned char 
 12694 ;; Auto vars:     Size  Location     Type
 12695 ;;  Mode            1    2[BANK0 ] unsigned char 
 12696 ;; Return value:  Size  Location     Type
 12697 ;;		None               void
 12698 ;; Registers used:
 12699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12700 ;; Tracked objects:
 12701 ;;		On entry : 0/0
 12702 ;;		On exit  : 0/0
 12703 ;;		Unchanged: 0/0
 12704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12706 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12708 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12709 ;;Total ram usage:        2 bytes
 12710 ;; Hardware stack levels used:    1
 12711 ;; Hardware stack levels required when called:    6
 12712 ;; This function calls:
 12713 ;;		_NVMWrite
 12714 ;; This function is called by:
 12715 ;;		_Initialize_Demo
 12716 ;;		_run_star_demo
 12717 ;; This function uses a non-reentrant model
 12718 ;;
 12719                           
 12720                           	psect	text52
 12721  00322A                     __ptext52:
 12722                           	opt stack 0
 12723  00322A                     _MiApp_ConnectionMode:
 12724                           	opt stack 22
 12725                           
 12726                           ;incstack = 0
 12727                           ;MiApp_ConnectionMode@Mode stored from wreg
 12728  00322A  0100               	movlb	0	; () banked
 12729  00322C  6F62               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;miwi_p2p.c: 2964: if( Mode > 3 )
 12733  00322E  0E03               	movlw	3
 12734  003230  6562               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 12735  003232  D001               	goto	l682
 12736  003234  0C03               	retlw	3
 12737  003236                     l682:
 12738                           
 12739                           ; BSR set to: 0
 12740                           ;miwi_p2p.c: 2967: }
 12741                           ;miwi_p2p.c: 2968: ConnMode = Mode;
 12742  003236  C062  F0FF         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;miwi_p2p.c: 2969: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 12746  00323A  C0FF  F025         	movff	_ConnMode,??_MiApp_ConnectionMode
 12747  00323E  3A25               	swapf	??_MiApp_ConnectionMode,f,c
 12748  003240  0EF0               	movlw	240
 12749  003242  1625               	andwf	??_MiApp_ConnectionMode,f,c
 12750  003244  51E2               	movf	_P2PCapacityInfo& (0+255),w,b
 12751  003246  0B0F               	andlw	15
 12752  003248  1025               	iorwf	??_MiApp_ConnectionMode,w,c
 12753  00324A  6FE2               	movwf	_P2PCapacityInfo& (0+255),b
 12754                           
 12755                           ; BSR set to: 0
 12756                           ;miwi_p2p.c: 2972: NVMWrite((uint8_t *)&ConnMode, nvmConnMode, 1);
 12757  00324C  0EFF               	movlw	low _ConnMode
 12758  00324E  6E1E               	movwf	NVMWrite@source,c
 12759  003250  6A1F               	clrf	NVMWrite@source+1,c
 12760  003252  C0ED  F020         	movff	_nvmConnMode,NVMWrite@addr
 12761  003256  C0EE  F021         	movff	_nvmConnMode+1,NVMWrite@addr+1
 12762  00325A  6A23               	clrf	NVMWrite@count+1,c
 12763  00325C  0E01               	movlw	1
 12764  00325E  6E22               	movwf	NVMWrite@count,c
 12765  003260  EF3F  F013         	goto	_NVMWrite	;wreg free
 12766  003264                     __end_of_MiApp_ConnectionMode:
 12767                           	opt stack 0
 12768                           tblptru	equ	0xFF8
 12769                           tblptrh	equ	0xFF7
 12770                           tblptrl	equ	0xFF6
 12771                           tablat	equ	0xFF5
 12772                           prodh	equ	0xFF4
 12773                           prodl	equ	0xFF3
 12774                           intcon	equ	0xFF2
 12775                           intcon2	equ	0xFF1
 12776                           intcon3	equ	0xFF0
 12777                           postinc0	equ	0xFEE
 12778                           plusw0	equ	0xFEB
 12779                           wreg	equ	0xFE8
 12780                           indf1	equ	0xFE7
 12781                           postinc1	equ	0xFE6
 12782                           fsr1h	equ	0xFE2
 12783                           fsr1l	equ	0xFE1
 12784                           indf2	equ	0xFDF
 12785                           postinc2	equ	0xFDE
 12786                           postdec2	equ	0xFDD
 12787                           plusw2	equ	0xFDB
 12788                           fsr2h	equ	0xFDA
 12789                           fsr2l	equ	0xFD9
 12790                           status	equ	0xFD8
 12791                           
 12792 ;; *************** function _NVMWrite *****************
 12793 ;; Defined at:
 12794 ;;		line 179 in file "../../../../../framework/miwi/src/miwi_nvm.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;  source          2   29[COMRAM] PTR unsigned char 
 12797 ;;		 -> myConnectionIndex_in_PanCo(1), myPANID(2), currentChannel(1), ConnMode(1), 
 12798 ;;		 -> role(1), conn_size(1), ConnectionTable(140), 
 12799 ;;  addr            2   31[COMRAM] unsigned int 
 12800 ;;  count           2   33[COMRAM] unsigned int 
 12801 ;; Auto vars:     Size  Location     Type
 12802 ;;  PageCounter     1    1[BANK0 ] unsigned char 
 12803 ;;  oldRFIE         1    0[BANK0 ] unsigned char 
 12804 ;; Return value:  Size  Location     Type
 12805 ;;		None               void
 12806 ;; Registers used:
 12807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12808 ;; Tracked objects:
 12809 ;;		On entry : 0/0
 12810 ;;		On exit  : 0/0
 12811 ;;		Unchanged: 0/0
 12812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12813 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12816 ;;      Totals:         7       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12817 ;;Total ram usage:        9 bytes
 12818 ;; Hardware stack levels used:    1
 12819 ;; Hardware stack levels required when called:    5
 12820 ;; This function calls:
 12821 ;;		_MacroNop
 12822 ;;		_SPI1_Exchange8bit
 12823 ;; This function is called by:
 12824 ;;		_P2PTasks
 12825 ;;		_MiApp_ProtocolInit
 12826 ;;		_MiApp_TransceiverPowerState
 12827 ;;		_MiApp_SetChannel
 12828 ;;		_AddConnection
 12829 ;;		_MiApp_ConnectionMode
 12830 ;;		_Initialize_Demo
 12831 ;; This function uses a non-reentrant model
 12832 ;;
 12833                           
 12834                           	psect	text53
 12835  00267E                     __ptext53:
 12836                           	opt stack 0
 12837  00267E                     _NVMWrite:
 12838                           	opt stack 20
 12839                           
 12840                           ;miwi_nvm.c: 187: uint8_t oldRFIE = INTCON3bits.INT1IE;
 12841                           
 12842                           ;incstack = 0
 12843  00267E  0E00               	movlw	0
 12844  002680  B6F0               	btfsc	intcon3,3,c	;volatile
 12845  002682  0E01               	movlw	1
 12846  002684  0100               	movlb	0	; () banked
 12847  002686  6F60               	movwf	NVMWrite@oldRFIE& (0+255),b
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;miwi_nvm.c: 188: INTCON3bits.INT1IE = 0;
 12851  002688  96F0               	bcf	intcon3,3,c	;volatile
 12852  00268A                     l11133:
 12853                           
 12854                           ; BSR set to: 0
 12855                           ;miwi_nvm.c: 194: {
 12856                           ;miwi_nvm.c: 195: LATDbits.LATD5 = 0;
 12857  00268A  9A8C               	bcf	3980,5,c	;volatile
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;miwi_nvm.c: 196: SPI1_Exchange8bit(0x05);
 12861  00268C  0E05               	movlw	5
 12862  00268E  ECD1  F01A         	call	_SPI1_Exchange8bit
 12863                           
 12864                           ;miwi_nvm.c: 197: PageCounter = SPI1_Exchange8bit(0x00);
 12865  002692  0E00               	movlw	0
 12866  002694  ECD1  F01A         	call	_SPI1_Exchange8bit
 12867  002698  0100               	movlb	0	; () banked
 12868  00269A  6F61               	movwf	NVMWrite@PageCounter& (0+255),b
 12869                           
 12870                           ; BSR set to: 0
 12871                           ;miwi_nvm.c: 198: LATDbits.LATD5 = 1;
 12872  00269C  8A8C               	bsf	3980,5,c	;volatile
 12873                           
 12874                           ; BSR set to: 0
 12875                           ;miwi_nvm.c: 199: MacroNop();
 12876  00269E  ECF8  F01A         	call	_MacroNop	;wreg free
 12877                           
 12878                           ;miwi_nvm.c: 200: } while(PageCounter & 0x01 );
 12879  0026A2  0100               	movlb	0	; () banked
 12880  0026A4  B161               	btfsc	NVMWrite@PageCounter& (0+255),0,b
 12881  0026A6  D7F1               	goto	l11133
 12882                           
 12883                           ; BSR set to: 0
 12884                           ;miwi_nvm.c: 202: LATDbits.LATD5 = 0;
 12885  0026A8  9A8C               	bcf	3980,5,c	;volatile
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;miwi_nvm.c: 203: SPI1_Exchange8bit(0x06);
 12889  0026AA  0E06               	movlw	6
 12890  0026AC  ECD1  F01A         	call	_SPI1_Exchange8bit
 12891                           
 12892                           ;miwi_nvm.c: 204: LATDbits.LATD5 = 1;
 12893  0026B0  8A8C               	bsf	3980,5,c	;volatile
 12894                           
 12895                           ;miwi_nvm.c: 205: MacroNop();
 12896  0026B2  ECF8  F01A         	call	_MacroNop	;wreg free
 12897                           
 12898                           ;miwi_nvm.c: 206: LATDbits.LATD5 = 0;
 12899  0026B6  9A8C               	bcf	3980,5,c	;volatile
 12900                           
 12901                           ;miwi_nvm.c: 221: SPI1_Exchange8bit(0x02);
 12902  0026B8  0E02               	movlw	2
 12903  0026BA  ECD1  F01A         	call	_SPI1_Exchange8bit
 12904                           
 12905                           ;miwi_nvm.c: 222: SPI1_Exchange8bit(addr>>8);
 12906  0026BE  5021               	movf	NVMWrite@addr+1,w,c
 12907  0026C0  ECD1  F01A         	call	_SPI1_Exchange8bit
 12908                           
 12909                           ;miwi_nvm.c: 223: SPI1_Exchange8bit(addr);
 12910  0026C4  5020               	movf	NVMWrite@addr,w,c
 12911  0026C6  ECD1  F01A         	call	_SPI1_Exchange8bit
 12912                           
 12913                           ;miwi_nvm.c: 225: PageCounter = 0;
 12914  0026CA  0100               	movlb	0	; () banked
 12915  0026CC  6B61               	clrf	NVMWrite@PageCounter& (0+255),b
 12916                           
 12917                           ;miwi_nvm.c: 226: while( count > 0 )
 12918  0026CE  D01A               	goto	l11175
 12919  0026D0                     l11161:
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;miwi_nvm.c: 227: {
 12923                           ;miwi_nvm.c: 228: SPI1_Exchange8bit(*source++);
 12924  0026D0  C01E  FFD9         	movff	NVMWrite@source,fsr2l
 12925  0026D4  C01F  FFDA         	movff	NVMWrite@source+1,fsr2h
 12926  0026D8  50DF               	movf	indf2,w,c
 12927  0026DA  ECD1  F01A         	call	_SPI1_Exchange8bit
 12928  0026DE  4A1E               	infsnz	NVMWrite@source,f,c
 12929  0026E0  2A1F               	incf	NVMWrite@source+1,f,c
 12930                           
 12931                           ;miwi_nvm.c: 229: count--;
 12932  0026E2  0622               	decf	NVMWrite@count,f,c
 12933  0026E4  A0D8               	btfss	status,0,c
 12934  0026E6  0623               	decf	NVMWrite@count+1,f,c
 12935                           
 12936                           ;miwi_nvm.c: 230: PageCounter++;
 12937  0026E8  0100               	movlb	0	; () banked
 12938  0026EA  2B61               	incf	NVMWrite@PageCounter& (0+255),f,b
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;miwi_nvm.c: 231: if( ((addr + PageCounter) & (64-1)) == 0 )
 12942  0026EC  5161               	movf	NVMWrite@PageCounter& (0+255),w,b
 12943  0026EE  2420               	addwf	NVMWrite@addr,w,c
 12944  0026F0  6E24               	movwf	??_NVMWrite& (0+255),c
 12945  0026F2  0E3F               	movlw	63
 12946  0026F4  1624               	andwf	??_NVMWrite,f,c
 12947  0026F6  E106               	bnz	l11175
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;miwi_nvm.c: 232: {
 12951                           ;miwi_nvm.c: 233: LATDbits.LATD5 = 1;
 12952  0026F8  8A8C               	bsf	3980,5,c	;volatile
 12953                           
 12954                           ; BSR set to: 0
 12955                           ;miwi_nvm.c: 234: addr += PageCounter;
 12956  0026FA  5161               	movf	NVMWrite@PageCounter& (0+255),w,b
 12957  0026FC  2620               	addwf	NVMWrite@addr,f,c
 12958  0026FE  0E00               	movlw	0
 12959  002700  2221               	addwfc	NVMWrite@addr+1,f,c
 12960                           
 12961                           ;miwi_nvm.c: 235: goto EEPROM_NEXT_PAGE;
 12962  002702  D7C3               	goto	l11133
 12963  002704                     l11175:
 12964                           
 12965                           ; BSR set to: 0
 12966  002704  5022               	movf	NVMWrite@count,w,c
 12967  002706  1023               	iorwf	NVMWrite@count+1,w,c
 12968  002708  E1E3               	bnz	l11161
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;miwi_nvm.c: 236: }
 12972                           ;miwi_nvm.c: 237: }
 12973                           ;miwi_nvm.c: 238: LATDbits.LATD5 = 1;
 12974  00270A  8A8C               	bsf	3980,5,c	;volatile
 12975                           
 12976                           ;miwi_nvm.c: 243: INTCON3bits.INT1IE = oldRFIE;
 12977  00270C  B160               	btfsc	NVMWrite@oldRFIE& (0+255),0,b
 12978  00270E  D002               	bra	u11405
 12979  002710  96F0               	bcf	intcon3,3,c	;volatile
 12980  002712  D001               	bra	u11406
 12981  002714                     u11405:
 12982  002714  86F0               	bsf	intcon3,3,c	;volatile
 12983  002716                     u11406:
 12984  002716  0012               	return		;funcret
 12985  002718                     __end_of_NVMWrite:
 12986                           	opt stack 0
 12987                           tblptru	equ	0xFF8
 12988                           tblptrh	equ	0xFF7
 12989                           tblptrl	equ	0xFF6
 12990                           tablat	equ	0xFF5
 12991                           prodh	equ	0xFF4
 12992                           prodl	equ	0xFF3
 12993                           intcon	equ	0xFF2
 12994                           intcon2	equ	0xFF1
 12995                           intcon3	equ	0xFF0
 12996                           postinc0	equ	0xFEE
 12997                           plusw0	equ	0xFEB
 12998                           wreg	equ	0xFE8
 12999                           indf1	equ	0xFE7
 13000                           postinc1	equ	0xFE6
 13001                           fsr1h	equ	0xFE2
 13002                           fsr1l	equ	0xFE1
 13003                           indf2	equ	0xFDF
 13004                           postinc2	equ	0xFDE
 13005                           postdec2	equ	0xFDD
 13006                           plusw2	equ	0xFDB
 13007                           fsr2h	equ	0xFDA
 13008                           fsr2l	equ	0xFD9
 13009                           status	equ	0xFD8
 13010                           
 13011 ;; *************** function _SPI1_Exchange8bit *****************
 13012 ;; Defined at:
 13013 ;;		line 52 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;  data            1    wreg     unsigned char 
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;  data            1   28[COMRAM] unsigned char 
 13018 ;; Return value:  Size  Location     Type
 13019 ;;                  1    wreg      unsigned char 
 13020 ;; Registers used:
 13021 ;;		wreg, status,2
 13022 ;; Tracked objects:
 13023 ;;		On entry : 0/0
 13024 ;;		On exit  : 0/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13031 ;;Total ram usage:        1 bytes
 13032 ;; Hardware stack levels used:    1
 13033 ;; Hardware stack levels required when called:    4
 13034 ;; This function calls:
 13035 ;;		Nothing
 13036 ;; This function is called by:
 13037 ;;		_PHYSetLongRAMAddr
 13038 ;;		_PHYSetShortRAMAddr
 13039 ;;		_PHYGetShortRAMAddr
 13040 ;;		_PHYGetLongRAMAddr
 13041 ;;		_NVMRead
 13042 ;;		_NVMWrite
 13043 ;;		_EEPROM_Read
 13044 ;; This function uses a non-reentrant model
 13045 ;;
 13046                           
 13047                           	psect	text54
 13048  0035A2                     __ptext54:
 13049                           	opt stack 0
 13050  0035A2                     _SPI1_Exchange8bit:
 13051                           	opt stack 20
 13052                           
 13053                           ;incstack = 0
 13054                           ;SPI1_Exchange8bit@data stored from wreg
 13055  0035A2  6E1D               	movwf	SPI1_Exchange8bit@data,c
 13056                           
 13057                           ;spi.c: 54: SSP1CON1bits.WCOL = 0;
 13058  0035A4  9EC6               	bcf	4038,7,c	;volatile
 13059                           
 13060                           ;spi.c: 56: SSP1BUF = data;
 13061  0035A6  C01D  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
 13062  0035AA                     l832:
 13063  0035AA  A0C7               	btfss	4039,0,c	;volatile
 13064  0035AC  D7FE               	goto	l832
 13065                           
 13066                           ;spi.c: 59: }
 13067                           ;spi.c: 61: return (SSP1BUF);
 13068  0035AE  50C9               	movf	4041,w,c	;volatile
 13069  0035B0  0012               	return		;funcret
 13070  0035B2                     __end_of_SPI1_Exchange8bit:
 13071                           	opt stack 0
 13072                           tblptru	equ	0xFF8
 13073                           tblptrh	equ	0xFF7
 13074                           tblptrl	equ	0xFF6
 13075                           tablat	equ	0xFF5
 13076                           prodh	equ	0xFF4
 13077                           prodl	equ	0xFF3
 13078                           intcon	equ	0xFF2
 13079                           intcon2	equ	0xFF1
 13080                           intcon3	equ	0xFF0
 13081                           postinc0	equ	0xFEE
 13082                           plusw0	equ	0xFEB
 13083                           wreg	equ	0xFE8
 13084                           indf1	equ	0xFE7
 13085                           postinc1	equ	0xFE6
 13086                           fsr1h	equ	0xFE2
 13087                           fsr1l	equ	0xFE1
 13088                           indf2	equ	0xFDF
 13089                           postinc2	equ	0xFDE
 13090                           postdec2	equ	0xFDD
 13091                           plusw2	equ	0xFDB
 13092                           fsr2h	equ	0xFDA
 13093                           fsr2l	equ	0xFD9
 13094                           status	equ	0xFD8
 13095                           
 13096 ;; *************** function _MacroNop *****************
 13097 ;; Defined at:
 13098 ;;		line 322 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 13099 ;; Parameters:    Size  Location     Type
 13100 ;;		None
 13101 ;; Auto vars:     Size  Location     Type
 13102 ;;		None
 13103 ;; Return value:  Size  Location     Type
 13104 ;;		None               void
 13105 ;; Registers used:
 13106 ;;		None
 13107 ;; Tracked objects:
 13108 ;;		On entry : 0/0
 13109 ;;		On exit  : 0/0
 13110 ;;		Unchanged: 0/0
 13111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13116 ;;Total ram usage:        0 bytes
 13117 ;; Hardware stack levels used:    1
 13118 ;; Hardware stack levels required when called:    4
 13119 ;; This function calls:
 13120 ;;		Nothing
 13121 ;; This function is called by:
 13122 ;;		_NVMWrite
 13123 ;; This function uses a non-reentrant model
 13124 ;;
 13125                           
 13126                           	psect	text55
 13127  0035F0                     __ptext55:
 13128                           	opt stack 0
 13129  0035F0                     _MacroNop:
 13130                           	opt stack 20
 13131                           
 13132                           ;miwi_p2p.c: 324: __nop();
 13133                           
 13134                           ;incstack = 0
 13135  0035F0  F000               	nop	
 13136  0035F2  0012               	return		;funcret
 13137  0035F4                     __end_of_MacroNop:
 13138                           	opt stack 0
 13139                           tblptru	equ	0xFF8
 13140                           tblptrh	equ	0xFF7
 13141                           tblptrl	equ	0xFF6
 13142                           tablat	equ	0xFF5
 13143                           prodh	equ	0xFF4
 13144                           prodl	equ	0xFF3
 13145                           intcon	equ	0xFF2
 13146                           intcon2	equ	0xFF1
 13147                           intcon3	equ	0xFF0
 13148                           postinc0	equ	0xFEE
 13149                           plusw0	equ	0xFEB
 13150                           wreg	equ	0xFE8
 13151                           indf1	equ	0xFE7
 13152                           postinc1	equ	0xFE6
 13153                           fsr1h	equ	0xFE2
 13154                           fsr1l	equ	0xFE1
 13155                           indf2	equ	0xFDF
 13156                           postinc2	equ	0xFDE
 13157                           postdec2	equ	0xFDD
 13158                           plusw2	equ	0xFDB
 13159                           fsr2h	equ	0xFDA
 13160                           fsr2l	equ	0xFD9
 13161                           status	equ	0xFD8
 13162                           
 13163 ;; *************** function _DumpConnection *****************
 13164 ;; Defined at:
 13165 ;;		line 2417 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 13166 ;; Parameters:    Size  Location     Type
 13167 ;;  index           1    wreg     unsigned char 
 13168 ;; Auto vars:     Size  Location     Type
 13169 ;;  index           1   28[COMRAM] unsigned char 
 13170 ;;  i               1   30[COMRAM] unsigned char 
 13171 ;;  j               1   29[COMRAM] unsigned char 
 13172 ;; Return value:  Size  Location     Type
 13173 ;;		None               void
 13174 ;; Registers used:
 13175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13176 ;; Tracked objects:
 13177 ;;		On entry : 0/1
 13178 ;;		On exit  : 0/0
 13179 ;;		Unchanged: 0/0
 13180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13182 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13184 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13185 ;;Total ram usage:        3 bytes
 13186 ;; Hardware stack levels used:    1
 13187 ;; Hardware stack levels required when called:    4
 13188 ;; This function calls:
 13189 ;;		Nothing
 13190 ;; This function is called by:
 13191 ;;		_Initialize_Demo
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195                           	psect	text56
 13196  002C6C                     __ptext56:
 13197                           	opt stack 0
 13198  002C6C                     _DumpConnection:
 13199                           	opt stack 25
 13200                           
 13201                           ;incstack = 0
 13202                           ;DumpConnection@index stored from wreg
 13203  002C6C  6E1D               	movwf	DumpConnection@index,c
 13204                           
 13205                           ;miwi_p2p.c: 2419: uint8_t i, j;
 13206                           ;miwi_p2p.c: 2421: if( index > 10 )
 13207  002C6E  0E0A               	movlw	10
 13208  002C70  641D               	cpfsgt	DumpConnection@index,c
 13209  002C72  D005               	goto	l9543
 13210                           
 13211                           ;miwi_p2p.c: 2422: {
 13212                           ;miwi_p2p.c: 2423: ;
 13213                           ;miwi_p2p.c: 2424: for(i = 0; i < 8; i++)
 13214  002C74  6A1F               	clrf	DumpConnection@i,c
 13215  002C76                     l9539:
 13216                           
 13217                           ;miwi_p2p.c: 2425: {
 13218                           ;miwi_p2p.c: 2427: ;
 13219  002C76  2A1F               	incf	DumpConnection@i,f,c
 13220  002C78  0E07               	movlw	7
 13221  002C7A  641F               	cpfsgt	DumpConnection@i,c
 13222  002C7C  D7FC               	goto	l9539
 13223  002C7E                     l9543:
 13224                           
 13225                           ;miwi_p2p.c: 2439: }
 13226                           ;miwi_p2p.c: 2441: if( index < 10 )
 13227  002C7E  0E0A               	movlw	10
 13228  002C80  601D               	cpfslt	DumpConnection@index,c
 13229  002C82  D016               	goto	l632
 13230                           
 13231                           ;miwi_p2p.c: 2442: {
 13232                           ;miwi_p2p.c: 2443: ;
 13233                           ;miwi_p2p.c: 2444: if( ConnectionTable[index].status.bits.isValid )
 13234  002C84  501D               	movf	DumpConnection@index,w,c
 13235  002C86  0D0E               	mullw	14
 13236  002C88  0E0C               	movlw	low (_ConnectionTable+12)
 13237  002C8A  24F3               	addwf	prodl,w,c
 13238  002C8C  6ED9               	movwf	fsr2l,c
 13239  002C8E  0E03               	movlw	high (_ConnectionTable+12)
 13240  002C90  20F4               	addwfc	prodh,w,c
 13241  002C92  6EDA               	movwf	fsr2h,c
 13242  002C94  0103               	movlb	3	; () banked
 13243  002C96  AEDF               	btfss	indf2,7,c
 13244  002C98  0012               	return	
 13245                           
 13246                           ; BSR set to: 3
 13247                           ;miwi_p2p.c: 2445: {
 13248                           ;miwi_p2p.c: 2446: ;
 13249                           ;miwi_p2p.c: 2447: ;
 13250                           ;miwi_p2p.c: 2448: for(i = 0; i < 8; i++)
 13251  002C9A  6A1F               	clrf	DumpConnection@i,c
 13252  002C9C                     l9557:
 13253  002C9C  2A1F               	incf	DumpConnection@i,f,c
 13254  002C9E  0E07               	movlw	7
 13255  002CA0  641F               	cpfsgt	DumpConnection@i,c
 13256  002CA2  D7FC               	goto	l9557
 13257                           
 13258                           ;miwi_p2p.c: 2457: }
 13259                           ;miwi_p2p.c: 2458: }
 13260                           ;miwi_p2p.c: 2459: ;
 13261                           ;miwi_p2p.c: 2461: for(i = 0; i < 1; i++)
 13262  002CA4  6A1F               	clrf	DumpConnection@i,c
 13263  002CA6                     l9565:
 13264                           
 13265                           ;miwi_p2p.c: 2462: {
 13266                           ;miwi_p2p.c: 2463: ;
 13267  002CA6  2A1F               	incf	DumpConnection@i,f,c
 13268  002CA8  501F               	movf	DumpConnection@i,w,c
 13269  002CAA  A4D8               	btfss	status,2,c
 13270  002CAC  0012               	return	
 13271  002CAE  D7FB               	goto	l9565
 13272  002CB0                     l632:
 13273                           
 13274                           ;miwi_p2p.c: 2469: else
 13275                           ;miwi_p2p.c: 2470: {
 13276                           ;miwi_p2p.c: 2471: ;
 13277                           ;miwi_p2p.c: 2472: for(i = 0; i < 10; i++)
 13278  002CB0  6A1F               	clrf	DumpConnection@i,c
 13279  002CB2                     l9573:
 13280                           
 13281                           ;miwi_p2p.c: 2473: {
 13282                           ;miwi_p2p.c: 2475: if( ConnectionTable[i].status.bits.isValid )
 13283  002CB2  501F               	movf	DumpConnection@i,w,c
 13284  002CB4  0D0E               	mullw	14
 13285  002CB6  0E0C               	movlw	low (_ConnectionTable+12)
 13286  002CB8  24F3               	addwf	prodl,w,c
 13287  002CBA  6ED9               	movwf	fsr2l,c
 13288  002CBC  0E03               	movlw	high (_ConnectionTable+12)
 13289  002CBE  20F4               	addwfc	prodh,w,c
 13290  002CC0  6EDA               	movwf	fsr2h,c
 13291  002CC2  0103               	movlb	3	; () banked
 13292  002CC4  AEDF               	btfss	indf2,7,c
 13293  002CC6  D009               	goto	l9597
 13294                           
 13295                           ; BSR set to: 3
 13296                           ;miwi_p2p.c: 2476: {
 13297                           ;miwi_p2p.c: 2477: ;
 13298                           ;miwi_p2p.c: 2478: ;
 13299                           ;miwi_p2p.c: 2479: for(j = 0; j < 8; j++)
 13300  002CC8  6A1E               	clrf	DumpConnection@j,c
 13301  002CCA                     l9585:
 13302  002CCA  2A1E               	incf	DumpConnection@j,f,c
 13303  002CCC  0E07               	movlw	7
 13304  002CCE  641E               	cpfsgt	DumpConnection@j,c
 13305  002CD0  D7FC               	goto	l9585
 13306                           
 13307                           ;miwi_p2p.c: 2488: }
 13308                           ;miwi_p2p.c: 2489: }
 13309                           ;miwi_p2p.c: 2490: ;
 13310                           ;miwi_p2p.c: 2492: for(j = 0; j < 1; j++)
 13311  002CD2  6A1E               	clrf	DumpConnection@j,c
 13312  002CD4                     l9593:
 13313                           
 13314                           ;miwi_p2p.c: 2493: {
 13315                           ;miwi_p2p.c: 2494: ;
 13316  002CD4  2A1E               	incf	DumpConnection@j,f,c
 13317  002CD6  501E               	movf	DumpConnection@j,w,c
 13318  002CD8  E0FD               	bz	l9593
 13319  002CDA                     l9597:
 13320  002CDA  2A1F               	incf	DumpConnection@i,f,c
 13321  002CDC  0E09               	movlw	9
 13322  002CDE  641F               	cpfsgt	DumpConnection@i,c
 13323  002CE0  D7E8               	goto	l9573
 13324  002CE2  0C09               	retlw	9
 13325  002CE4                     __end_of_DumpConnection:
 13326                           	opt stack 0
 13327                           tblptru	equ	0xFF8
 13328                           tblptrh	equ	0xFF7
 13329                           tblptrl	equ	0xFF6
 13330                           tablat	equ	0xFF5
 13331                           prodh	equ	0xFF4
 13332                           prodl	equ	0xFF3
 13333                           intcon	equ	0xFF2
 13334                           intcon2	equ	0xFF1
 13335                           intcon3	equ	0xFF0
 13336                           postinc0	equ	0xFEE
 13337                           plusw0	equ	0xFEB
 13338                           wreg	equ	0xFE8
 13339                           indf1	equ	0xFE7
 13340                           postinc1	equ	0xFE6
 13341                           fsr1h	equ	0xFE2
 13342                           fsr1l	equ	0xFE1
 13343                           indf2	equ	0xFDF
 13344                           postinc2	equ	0xFDE
 13345                           postdec2	equ	0xFDD
 13346                           plusw2	equ	0xFDB
 13347                           fsr2h	equ	0xFDA
 13348                           fsr2l	equ	0xFD9
 13349                           status	equ	0xFD8
 13350                           
 13351 ;; *************** function _DemoOutput_Instruction *****************
 13352 ;; Defined at:
 13353 ;;		line 136 in file "../src/demo_ouput.c"
 13354 ;; Parameters:    Size  Location     Type
 13355 ;;		None
 13356 ;; Auto vars:     Size  Location     Type
 13357 ;;		None
 13358 ;; Return value:  Size  Location     Type
 13359 ;;		None               void
 13360 ;; Registers used:
 13361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13362 ;; Tracked objects:
 13363 ;;		On entry : 0/1
 13364 ;;		On exit  : 0/0
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13371 ;;Total ram usage:        0 bytes
 13372 ;; Hardware stack levels used:    1
 13373 ;; Hardware stack levels required when called:    7
 13374 ;; This function calls:
 13375 ;;		_LCDDisplay
 13376 ;; This function is called by:
 13377 ;;		_Initialize_Demo
 13378 ;; This function uses a non-reentrant model
 13379 ;;
 13380                           
 13381                           	psect	text57
 13382  00357A                     __ptext57:
 13383                           	opt stack 0
 13384  00357A                     _DemoOutput_Instruction:
 13385                           	opt stack 22
 13386                           
 13387                           ;demo_ouput.c: 139: LCDDisplay((char *)"RB0: Broadcast  RB2: Unicast", 0, 0);
 13388                           
 13389                           ;incstack = 0
 13390  00357A  0ECC               	movlw	low STR_6
 13391  00357C  0100               	movlb	0	; () banked
 13392  00357E  6F87               	movwf	LCDDisplay@text& (0+255),b
 13393  003580  0EFE               	movlw	high STR_6
 13394  003582  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
 13395  003584  6B89               	clrf	LCDDisplay@value& (0+255),b
 13396  003586  6B8A               	clrf	LCDDisplay@delay& (0+255),b
 13397  003588  EC7B  F018         	call	_LCDDisplay	;wreg free
 13398  00358C  0012               	return		;funcret
 13399  00358E                     __end_of_DemoOutput_Instruction:
 13400                           	opt stack 0
 13401                           tblptru	equ	0xFF8
 13402                           tblptrh	equ	0xFF7
 13403                           tblptrl	equ	0xFF6
 13404                           tablat	equ	0xFF5
 13405                           prodh	equ	0xFF4
 13406                           prodl	equ	0xFF3
 13407                           intcon	equ	0xFF2
 13408                           intcon2	equ	0xFF1
 13409                           intcon3	equ	0xFF0
 13410                           postinc0	equ	0xFEE
 13411                           plusw0	equ	0xFEB
 13412                           wreg	equ	0xFE8
 13413                           indf1	equ	0xFE7
 13414                           postinc1	equ	0xFE6
 13415                           fsr1h	equ	0xFE2
 13416                           fsr1l	equ	0xFE1
 13417                           indf2	equ	0xFDF
 13418                           postinc2	equ	0xFDE
 13419                           postdec2	equ	0xFDD
 13420                           plusw2	equ	0xFDB
 13421                           fsr2h	equ	0xFDA
 13422                           fsr2l	equ	0xFD9
 13423                           status	equ	0xFD8
 13424                           
 13425 ;; *************** function _DemoOutput_ChannelError *****************
 13426 ;; Defined at:
 13427 ;;		line 193 in file "../src/demo_ouput.c"
 13428 ;; Parameters:    Size  Location     Type
 13429 ;;  channel         1    wreg     unsigned char 
 13430 ;; Auto vars:     Size  Location     Type
 13431 ;;  channel         1    0[COMRAM] unsigned char 
 13432 ;; Return value:  Size  Location     Type
 13433 ;;		None               void
 13434 ;; Registers used:
 13435 ;;		wreg
 13436 ;; Tracked objects:
 13437 ;;		On entry : 0/1
 13438 ;;		On exit  : 0/0
 13439 ;;		Unchanged: 0/0
 13440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13445 ;;Total ram usage:        0 bytes
 13446 ;; Hardware stack levels used:    1
 13447 ;; Hardware stack levels required when called:    4
 13448 ;; This function calls:
 13449 ;;		Nothing
 13450 ;; This function is called by:
 13451 ;;		_Initialize_Demo
 13452 ;; This function uses a non-reentrant model
 13453 ;;
 13454                           
 13455                           	psect	text58
 13456  0035FA                     __ptext58:
 13457                           	opt stack 0
 13458  0035FA                     _DemoOutput_ChannelError:
 13459                           	opt stack 25
 13460                           
 13461                           ;incstack = 0
 13462  0035FA  0012               	return		;funcret
 13463  0035FC                     __end_of_DemoOutput_ChannelError:
 13464                           	opt stack 0
 13465                           tblptru	equ	0xFF8
 13466                           tblptrh	equ	0xFF7
 13467                           tblptrl	equ	0xFF6
 13468                           tablat	equ	0xFF5
 13469                           prodh	equ	0xFF4
 13470                           prodl	equ	0xFF3
 13471                           intcon	equ	0xFF2
 13472                           intcon2	equ	0xFF1
 13473                           intcon3	equ	0xFF0
 13474                           postinc0	equ	0xFEE
 13475                           plusw0	equ	0xFEB
 13476                           wreg	equ	0xFE8
 13477                           indf1	equ	0xFE7
 13478                           postinc1	equ	0xFE6
 13479                           fsr1h	equ	0xFE2
 13480                           fsr1l	equ	0xFE1
 13481                           indf2	equ	0xFDF
 13482                           postinc2	equ	0xFDE
 13483                           postdec2	equ	0xFDD
 13484                           plusw2	equ	0xFDB
 13485                           fsr2h	equ	0xFDA
 13486                           fsr2l	equ	0xFD9
 13487                           status	equ	0xFD8
 13488                           
 13489 ;; *************** function _DemoOutput_Channel *****************
 13490 ;; Defined at:
 13491 ;;		line 111 in file "../src/demo_ouput.c"
 13492 ;; Parameters:    Size  Location     Type
 13493 ;;  channel         1    wreg     unsigned char 
 13494 ;;  Step            1   43[BANK0 ] unsigned char 
 13495 ;; Auto vars:     Size  Location     Type
 13496 ;;  channel         1   44[BANK0 ] unsigned char 
 13497 ;; Return value:  Size  Location     Type
 13498 ;;		None               void
 13499 ;; Registers used:
 13500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13501 ;; Tracked objects:
 13502 ;;		On entry : F/0
 13503 ;;		On exit  : 0/0
 13504 ;;		Unchanged: 0/0
 13505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13506 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13507 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13510 ;;Total ram usage:        2 bytes
 13511 ;; Hardware stack levels used:    1
 13512 ;; Hardware stack levels required when called:    7
 13513 ;; This function calls:
 13514 ;;		_DELAY_ms
 13515 ;;		_LCDDisplay
 13516 ;; This function is called by:
 13517 ;;		_Initialize_Demo
 13518 ;; This function uses a non-reentrant model
 13519 ;;
 13520                           
 13521                           	psect	text59
 13522  003174                     __ptext59:
 13523                           	opt stack 0
 13524  003174                     _DemoOutput_Channel:
 13525                           	opt stack 22
 13526                           
 13527                           ;incstack = 0
 13528                           ;DemoOutput_Channel@channel stored from wreg
 13529  003174  6F8C               	movwf	DemoOutput_Channel@channel& (0+255),b
 13530                           
 13531                           ; BSR set to: 0
 13532                           ;demo_ouput.c: 113: if( Step == 0 )
 13533  003176  518B               	movf	DemoOutput_Channel@Step& (0+255),w,b
 13534  003178  E10B               	bnz	l12293
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;demo_ouput.c: 114: {
 13538                           ;demo_ouput.c: 115: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 13539  00317A  0E4E               	movlw	low STR_4
 13540  00317C  6F87               	movwf	LCDDisplay@text& (0+255),b
 13541  00317E  0EFE               	movlw	high STR_4
 13542  003180  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
 13543  003182  C08C  F089         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 13544  003186  0E01               	movlw	1
 13545  003188  6F8A               	movwf	LCDDisplay@delay& (0+255),b
 13546  00318A  EC7B  F018         	call	_LCDDisplay	;wreg free
 13547                           
 13548                           ;demo_ouput.c: 117: ;
 13549                           ;demo_ouput.c: 118: ;
 13550                           ;demo_ouput.c: 119: ;
 13551                           ;demo_ouput.c: 122: }
 13552  00318E  D00A               	goto	l12295
 13553  003190                     l12293:
 13554                           
 13555                           ; BSR set to: 0
 13556                           ;demo_ouput.c: 123: else
 13557                           ;demo_ouput.c: 124: {
 13558                           ;demo_ouput.c: 125: LCDDisplay((char *)" Connected Peer  on Channel %d", channel, 1);
 13559  003190  0EAD               	movlw	low STR_5
 13560  003192  6F87               	movwf	LCDDisplay@text& (0+255),b
 13561  003194  0EFE               	movlw	high STR_5
 13562  003196  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
 13563  003198  C08C  F089         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 13564  00319C  0E01               	movlw	1
 13565  00319E  6F8A               	movwf	LCDDisplay@delay& (0+255),b
 13566  0031A0  EC7B  F018         	call	_LCDDisplay	;wreg free
 13567  0031A4                     l12295:
 13568                           
 13569                           ;demo_ouput.c: 132: }
 13570                           ;demo_ouput.c: 133: DELAY_ms(1000);
 13571  0031A4  0E03               	movlw	3
 13572  0031A6  6E1E               	movwf	DELAY_ms@ms+1,c
 13573  0031A8  0EE8               	movlw	232
 13574  0031AA  6E1D               	movwf	DELAY_ms@ms,c
 13575  0031AC  ECC2  F011         	call	_DELAY_ms	;wreg free
 13576  0031B0  0012               	return		;funcret
 13577  0031B2                     __end_of_DemoOutput_Channel:
 13578                           	opt stack 0
 13579                           tblptru	equ	0xFF8
 13580                           tblptrh	equ	0xFF7
 13581                           tblptrl	equ	0xFF6
 13582                           tablat	equ	0xFF5
 13583                           prodh	equ	0xFF4
 13584                           prodl	equ	0xFF3
 13585                           intcon	equ	0xFF2
 13586                           intcon2	equ	0xFF1
 13587                           intcon3	equ	0xFF0
 13588                           postinc0	equ	0xFEE
 13589                           plusw0	equ	0xFEB
 13590                           wreg	equ	0xFE8
 13591                           indf1	equ	0xFE7
 13592                           postinc1	equ	0xFE6
 13593                           fsr1h	equ	0xFE2
 13594                           fsr1l	equ	0xFE1
 13595                           indf2	equ	0xFDF
 13596                           postinc2	equ	0xFDE
 13597                           postdec2	equ	0xFDD
 13598                           plusw2	equ	0xFDB
 13599                           fsr2h	equ	0xFDA
 13600                           fsr2l	equ	0xFD9
 13601                           status	equ	0xFD8
 13602                           
 13603 ;; *************** function _DemoOutput_Greeting *****************
 13604 ;; Defined at:
 13605 ;;		line 63 in file "../src/demo_ouput.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;		None
 13608 ;; Auto vars:     Size  Location     Type
 13609 ;;		None
 13610 ;; Return value:  Size  Location     Type
 13611 ;;		None               void
 13612 ;; Registers used:
 13613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13614 ;; Tracked objects:
 13615 ;;		On entry : 0/0
 13616 ;;		On exit  : 0/0
 13617 ;;		Unchanged: 0/0
 13618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13623 ;;Total ram usage:        0 bytes
 13624 ;; Hardware stack levels used:    1
 13625 ;; Hardware stack levels required when called:    7
 13626 ;; This function calls:
 13627 ;;		_DELAY_ms
 13628 ;;		_LCDDisplay
 13629 ;; This function is called by:
 13630 ;;		_main
 13631 ;; This function uses a non-reentrant model
 13632 ;;
 13633                           
 13634                           	psect	text60
 13635  003448                     __ptext60:
 13636                           	opt stack 0
 13637  003448                     _DemoOutput_Greeting:
 13638                           	opt stack 23
 13639                           
 13640                           ;demo_ouput.c: 70: LCDDisplay((char *)"Simple STAR     MRF24J40 Node1", 0, 1);
 13641                           
 13642                           ;incstack = 0
 13643  003448  0E8E               	movlw	low STR_3
 13644  00344A  0100               	movlb	0	; () banked
 13645  00344C  6F87               	movwf	LCDDisplay@text& (0+255),b
 13646  00344E  0EFE               	movlw	high STR_3
 13647  003450  6F88               	movwf	(LCDDisplay@text+1)& (0+255),b
 13648  003452  6B89               	clrf	LCDDisplay@value& (0+255),b
 13649  003454  0E01               	movlw	1
 13650  003456  6F8A               	movwf	LCDDisplay@delay& (0+255),b
 13651  003458  EC7B  F018         	call	_LCDDisplay	;wreg free
 13652                           
 13653                           ;demo_ouput.c: 86: ;
 13654                           ;demo_ouput.c: 87: ;
 13655                           ;demo_ouput.c: 88: ;
 13656                           ;demo_ouput.c: 89: ;
 13657                           ;demo_ouput.c: 90: ;
 13658                           ;demo_ouput.c: 91: ;
 13659                           ;demo_ouput.c: 96: ;
 13660                           ;demo_ouput.c: 100: ;
 13661                           ;demo_ouput.c: 101: ;
 13662                           ;demo_ouput.c: 102: ;
 13663                           ;demo_ouput.c: 103: ;
 13664                           ;demo_ouput.c: 104: ;
 13665                           ;demo_ouput.c: 105: ;
 13666                           ;demo_ouput.c: 106: ;
 13667                           ;demo_ouput.c: 108: DELAY_ms(1500);
 13668  00345C  0E05               	movlw	5
 13669  00345E  6E1E               	movwf	DELAY_ms@ms+1,c
 13670  003460  0EDC               	movlw	220
 13671  003462  6E1D               	movwf	DELAY_ms@ms,c
 13672  003464  ECC2  F011         	call	_DELAY_ms	;wreg free
 13673  003468  0012               	return		;funcret
 13674  00346A                     __end_of_DemoOutput_Greeting:
 13675                           	opt stack 0
 13676                           tblptru	equ	0xFF8
 13677                           tblptrh	equ	0xFF7
 13678                           tblptrl	equ	0xFF6
 13679                           tablat	equ	0xFF5
 13680                           prodh	equ	0xFF4
 13681                           prodl	equ	0xFF3
 13682                           intcon	equ	0xFF2
 13683                           intcon2	equ	0xFF1
 13684                           intcon3	equ	0xFF0
 13685                           postinc0	equ	0xFEE
 13686                           plusw0	equ	0xFEB
 13687                           wreg	equ	0xFE8
 13688                           indf1	equ	0xFE7
 13689                           postinc1	equ	0xFE6
 13690                           fsr1h	equ	0xFE2
 13691                           fsr1l	equ	0xFE1
 13692                           indf2	equ	0xFDF
 13693                           postinc2	equ	0xFDE
 13694                           postdec2	equ	0xFDD
 13695                           plusw2	equ	0xFDB
 13696                           fsr2h	equ	0xFDA
 13697                           fsr2l	equ	0xFD9
 13698                           status	equ	0xFD8
 13699                           
 13700 ;; *************** function _LCDDisplay *****************
 13701 ;; Defined at:
 13702 ;;		line 326 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 13703 ;; Parameters:    Size  Location     Type
 13704 ;;  text            2   39[BANK0 ] PTR unsigned char 
 13705 ;;		 -> STR_20(12), STR_19(20), STR_14(11), STR_13(11), 
 13706 ;;		 -> STR_12(28), STR_9(32), STR_8(33), STR_7(16), 
 13707 ;;		 -> STR_6(29), STR_5(31), STR_4(32), STR_3(31), 
 13708 ;;  value           1   41[BANK0 ] unsigned char 
 13709 ;;  delay           1   42[BANK0 ] unsigned char 
 13710 ;; Auto vars:     Size  Location     Type
 13711 ;;  i               1   36[COMRAM] unsigned char 
 13712 ;; Return value:  Size  Location     Type
 13713 ;;		None               void
 13714 ;; Registers used:
 13715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13716 ;; Tracked objects:
 13717 ;;		On entry : F/0
 13718 ;;		On exit  : 0/0
 13719 ;;		Unchanged: 0/0
 13720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13721 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13724 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13725 ;;Total ram usage:        5 bytes
 13726 ;; Hardware stack levels used:    1
 13727 ;; Hardware stack levels required when called:    6
 13728 ;; This function calls:
 13729 ;;		_DELAY_ms
 13730 ;;		_LCD_Erase
 13731 ;;		_LCD_Update
 13732 ;;		_sprintf
 13733 ;; This function is called by:
 13734 ;;		_DemoOutput_Greeting
 13735 ;;		_DemoOutput_Channel
 13736 ;;		_DemoOutput_Instruction
 13737 ;;		_DemoOutput_UnicastFail
 13738 ;;		_STAR_DEMO_OPTIONS_MESSAGE
 13739 ;;		_freezer_feature
 13740 ;;		_run_star_demo
 13741 ;; This function uses a non-reentrant model
 13742 ;;
 13743                           
 13744                           	psect	text61
 13745  0030F6                     __ptext61:
 13746                           	opt stack 0
 13747  0030F6                     _LCDDisplay:
 13748                           	opt stack 23
 13749                           
 13750                           ; BSR set to: 0
 13751                           ;lcd.c: 329: LCD_Erase();
 13752                           
 13753                           ;incstack = 0
 13754  0030F6  EC80  F01A         	call	_LCD_Erase	;wreg free
 13755                           
 13756                           ;lcd.c: 330: sprintf((char *)LCDText, (char*)text, value);
 13757  0030FA  0E8A               	movlw	low _LCDText
 13758  0030FC  0100               	movlb	0	; () banked
 13759  0030FE  6F64               	movwf	sprintf@sp& (0+255),b
 13760  003100  0E02               	movlw	high _LCDText
 13761  003102  6F65               	movwf	(sprintf@sp+1)& (0+255),b
 13762  003104  C087  F066         	movff	LCDDisplay@text,sprintf@f
 13763  003108  C088  F067         	movff	LCDDisplay@text+1,sprintf@f+1
 13764  00310C  C089  F068         	movff	LCDDisplay@value,?_sprintf+4
 13765  003110  6B69               	clrf	(?_sprintf+5)& (0+255),b
 13766  003112  ECC6  F000         	call	_sprintf	;wreg free
 13767                           
 13768                           ; BSR set to: 0
 13769                           ;lcd.c: 331: LCD_Update();
 13770  003116  EC9B  F01A         	call	_LCD_Update	;wreg free
 13771                           
 13772                           ; BSR set to: 0
 13773                           ;lcd.c: 334: if( delay )
 13774  00311A  518A               	movf	LCDDisplay@delay& (0+255),w,b
 13775  00311C  B4D8               	btfsc	status,2,c
 13776  00311E  0012               	return	
 13777                           
 13778                           ; BSR set to: 0
 13779                           ;lcd.c: 335: {
 13780                           ;lcd.c: 336: uint8_t i;
 13781                           ;lcd.c: 337: for(i = 0; i < 8; i++)
 13782  003120  6A25               	clrf	LCDDisplay@i,c
 13783  003122                     l11117:
 13784                           
 13785                           ;lcd.c: 338: {
 13786                           ;lcd.c: 339: DELAY_ms(250);
 13787  003122  6A1E               	clrf	DELAY_ms@ms+1,c
 13788  003124  0EFA               	movlw	250
 13789  003126  6E1D               	movwf	DELAY_ms@ms,c
 13790  003128  ECC2  F011         	call	_DELAY_ms	;wreg free
 13791  00312C  2A25               	incf	LCDDisplay@i,f,c
 13792  00312E  0E07               	movlw	7
 13793  003130  6425               	cpfsgt	LCDDisplay@i,c
 13794  003132  D7F7               	goto	l11117
 13795  003134  0C07               	retlw	7
 13796  003136                     __end_of_LCDDisplay:
 13797                           	opt stack 0
 13798                           tblptru	equ	0xFF8
 13799                           tblptrh	equ	0xFF7
 13800                           tblptrl	equ	0xFF6
 13801                           tablat	equ	0xFF5
 13802                           prodh	equ	0xFF4
 13803                           prodl	equ	0xFF3
 13804                           intcon	equ	0xFF2
 13805                           intcon2	equ	0xFF1
 13806                           intcon3	equ	0xFF0
 13807                           postinc0	equ	0xFEE
 13808                           plusw0	equ	0xFEB
 13809                           wreg	equ	0xFE8
 13810                           indf1	equ	0xFE7
 13811                           postinc1	equ	0xFE6
 13812                           fsr1h	equ	0xFE2
 13813                           fsr1l	equ	0xFE1
 13814                           indf2	equ	0xFDF
 13815                           postinc2	equ	0xFDE
 13816                           postdec2	equ	0xFDD
 13817                           plusw2	equ	0xFDB
 13818                           fsr2h	equ	0xFDA
 13819                           fsr2l	equ	0xFD9
 13820                           status	equ	0xFD8
 13821                           
 13822 ;; *************** function _sprintf *****************
 13823 ;; Defined at:
 13824 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
 13825 ;; Parameters:    Size  Location     Type
 13826 ;;  sp              2    4[BANK0 ] PTR unsigned char 
 13827 ;;		 -> LCDText(33), 
 13828 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 13829 ;;		 -> STR_20(12), STR_19(20), STR_18(17), STR_17(22), 
 13830 ;;		 -> STR_16(22), STR_15(25), STR_14(11), STR_13(11), 
 13831 ;;		 -> STR_12(28), STR_11(22), STR_10(17), STR_9(32), 
 13832 ;;		 -> STR_8(33), STR_7(16), STR_6(29), STR_5(31), 
 13833 ;;		 -> STR_4(32), STR_3(31), STR_2(17), STR_1(17), 
 13834 ;; Auto vars:     Size  Location     Type
 13835 ;;  idx             1   20[BANK0 ] unsigned char 
 13836 ;;  tmpval          4    0        struct .
 13837 ;;  flag            2   37[BANK0 ] unsigned short 
 13838 ;;  width           2   34[BANK0 ] int 
 13839 ;;  val             2   31[BANK0 ] unsigned int 
 13840 ;;  len             2   28[BANK0 ] unsigned int 
 13841 ;;  c               1   36[BANK0 ] char 
 13842 ;;  prec            1   33[BANK0 ] char 
 13843 ;;  ap              1   30[BANK0 ] PTR void [1]
 13844 ;;		 -> ?_sprintf(2), 
 13845 ;;  cp              1   27[BANK0 ] PTR const unsigned char 
 13846 ;;		 -> sprintf@c(1), 
 13847 ;; Return value:  Size  Location     Type
 13848 ;;                  2    4[BANK0 ] int 
 13849 ;; Registers used:
 13850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13851 ;; Tracked objects:
 13852 ;;		On entry : F/0
 13853 ;;		On exit  : F/0
 13854 ;;		Unchanged: 0/0
 13855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13856 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13857 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13858 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13859 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13860 ;;Total ram usage:       35 bytes
 13861 ;; Hardware stack levels used:    1
 13862 ;; Hardware stack levels required when called:    5
 13863 ;; This function calls:
 13864 ;;		___lwdiv
 13865 ;;		___lwmod
 13866 ;;		___wmul
 13867 ;;		_isdigit
 13868 ;; This function is called by:
 13869 ;;		_LCDTRXCount
 13870 ;;		_LCDDisplay
 13871 ;;		_run_star_demo
 13872 ;; This function uses a non-reentrant model
 13873 ;;
 13874                           
 13875                           	psect	text62
 13876  00018C                     __ptext62:
 13877                           	opt stack 0
 13878  00018C                     _sprintf:
 13879                           	opt stack 23
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;doprnt.c: 494: va_list ap;
 13883                           ;doprnt.c: 499: signed char c;
 13884                           ;doprnt.c: 501: int width;
 13885                           ;doprnt.c: 506: signed char prec;
 13886                           ;doprnt.c: 508: unsigned short flag;
 13887                           ;doprnt.c: 523: union {
 13888                           ;doprnt.c: 524: unsigned long vd;
 13889                           ;doprnt.c: 525: double integ;
 13890                           ;doprnt.c: 526: } tmpval;
 13891                           ;doprnt.c: 528: unsigned int val;
 13892                           ;doprnt.c: 529: unsigned len;
 13893                           ;doprnt.c: 530: const char * cp;
 13894                           ;doprnt.c: 533: *ap = __va_start();
 13895                           
 13896                           ;incstack = 0
 13897  00018C  0E68               	movlw	low (?_sprintf+4)
 13898  00018E  6F7E               	movwf	sprintf@ap& (0+255),b
 13899                           
 13900                           ;doprnt.c: 536: while(c = *f++) {
 13901  000190  D37D               	goto	l11091
 13902  000192                     l10769:
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;doprnt.c: 538: if(c != '%')
 13906  000192  0E25               	movlw	37
 13907  000194  1984               	xorwf	sprintf@c& (0+255),w,b
 13908  000196  E009               	bz	l1297
 13909                           
 13910                           ; BSR set to: 0
 13911                           ;doprnt.c: 540: {
 13912                           ;doprnt.c: 541: ((*sp++ = (c)));
 13913  000198  C064  FFD9         	movff	sprintf@sp,fsr2l
 13914  00019C  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 13915  0001A0  C084  FFDF         	movff	sprintf@c,indf2
 13916                           
 13917                           ; BSR set to: 0
 13918  0001A4  4B64               	infsnz	sprintf@sp& (0+255),f,b
 13919  0001A6  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 13920                           
 13921                           ;doprnt.c: 542: continue;
 13922  0001A8  D371               	goto	l11091
 13923  0001AA                     l1297:
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;doprnt.c: 543: }
 13927                           ;doprnt.c: 546: width = 0;
 13928  0001AA  6B82               	clrf	sprintf@width& (0+255),b
 13929  0001AC  6B83               	clrf	(sprintf@width+1)& (0+255),b
 13930                           
 13931                           ;doprnt.c: 548: flag = 0;
 13932  0001AE  6B85               	clrf	sprintf@flag& (0+255),b
 13933  0001B0  6B86               	clrf	(sprintf@flag+1)& (0+255),b
 13934  0001B2  D009               	goto	l10785
 13935  0001B4                     l10775:
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;doprnt.c: 554: flag |= 0x08;
 13939  0001B4  8785               	bsf	sprintf@flag& (0+255),3,b
 13940  0001B6  D005               	goto	L16
 13941  0001B8                     l10777:
 13942                           
 13943                           ; BSR set to: 0
 13944                           ;doprnt.c: 561: flag |= 0x01;
 13945  0001B8  8185               	bsf	sprintf@flag& (0+255),0,b
 13946  0001BA  D003               	goto	L16
 13947  0001BC                     l10779:
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;doprnt.c: 574: flag |= 0x800;
 13951  0001BC  8786               	bsf	(sprintf@flag+1)& (0+255),3,b
 13952  0001BE  D001               	goto	L16
 13953  0001C0                     l10781:
 13954                           
 13955                           ; BSR set to: 0
 13956                           ;doprnt.c: 580: flag |= 0x04;
 13957  0001C0  8585               	bsf	sprintf@flag& (0+255),2,b
 13958  0001C2                     L16:
 13959                           
 13960                           ;doprnt.c: 581: f++;
 13961  0001C2  4B66               	infsnz	sprintf@f& (0+255),f,b
 13962  0001C4  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 13963  0001C6                     l10785:
 13964                           
 13965                           ; BSR set to: 0
 13966  0001C6  C066  FFF6         	movff	sprintf@f,tblptrl
 13967  0001CA  C067  FFF7         	movff	sprintf@f+1,tblptrh
 13968  0001CE                     	if	0	;tblptru may be non-zero
 13969  0001CE                     	endif
 13970  0001CE                     	if	0	;tblptru may be non-zero
 13971  0001CE                     	endif
 13972  0001CE  0008               	tblrd		*
 13973  0001D0  50F5               	movf	tablat,w,c
 13974                           
 13975                           ; Switch size 1, requested type "speed"
 13976                           ; Number of cases is 4, Range of values is 32 to 48
 13977                           ; switch strategies available:
 13978                           ; Name         Instructions Cycles
 13979                           ; simple_byte           13     7 (average)
 13980                           ;	Chosen strategy is simple_byte
 13981  0001D2  0A20               	xorlw	32	; case 32
 13982  0001D4  E0F1               	bz	l10777
 13983  0001D6  0A03               	xorlw	3	; case 35
 13984  0001D8  E0F1               	bz	l10779
 13985  0001DA  0A0E               	xorlw	14	; case 45
 13986  0001DC  E0EB               	bz	l10775
 13987  0001DE  0A1D               	xorlw	29	; case 48
 13988  0001E0  E0EF               	bz	l10781
 13989                           
 13990                           ; BSR set to: 0
 13991                           ;doprnt.c: 593: if(flag & 0x08)
 13992  0001E2  B785               	btfsc	sprintf@flag& (0+255),3,b
 13993                           
 13994                           ; BSR set to: 0
 13995                           ;doprnt.c: 594: flag &= ~0x04;
 13996  0001E4  9585               	bcf	sprintf@flag& (0+255),2,b
 13997                           
 13998                           ; BSR set to: 0
 13999                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 14000  0001E6  C066  FFF6         	movff	sprintf@f,tblptrl
 14001  0001EA  C067  FFF7         	movff	sprintf@f+1,tblptrh
 14002  0001EE                     	if	0	;tblptru may be non-zero
 14003  0001EE                     	endif
 14004  0001EE                     	if	0	;tblptru may be non-zero
 14005  0001EE                     	endif
 14006  0001EE  0008               	tblrd		*
 14007  0001F0  50F5               	movf	tablat,w,c
 14008  0001F2  EC72  F01A         	call	_isdigit
 14009  0001F6  E32E               	bnc	l10801
 14010                           
 14011                           ; BSR set to: 0
 14012                           ;doprnt.c: 598: width = 0;
 14013  0001F8  6B82               	clrf	sprintf@width& (0+255),b
 14014  0001FA  6B83               	clrf	(sprintf@width+1)& (0+255),b
 14015  0001FC                     l10793:
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;doprnt.c: 600: width *= 10;
 14019  0001FC  C082  F01D         	movff	sprintf@width,___wmul@multiplier
 14020  000200  C083  F01E         	movff	sprintf@width+1,___wmul@multiplier+1
 14021  000204  6A20               	clrf	___wmul@multiplicand+1,c
 14022  000206  0E0A               	movlw	10
 14023  000208  6E1F               	movwf	___wmul@multiplicand,c
 14024  00020A  EC11  F01A         	call	___wmul	;wreg free
 14025  00020E  C01D  F082         	movff	?___wmul,sprintf@width
 14026  000212  C01E  F083         	movff	?___wmul+1,sprintf@width+1
 14027                           
 14028                           ; BSR set to: 0
 14029                           ;doprnt.c: 601: width += *f++ - '0';
 14030  000216  0ED0               	movlw	208
 14031  000218  6F70               	movwf	??_sprintf& (0+255),b
 14032  00021A  6971               	setf	(??_sprintf+1)& (0+255),b
 14033  00021C  C066  FFF6         	movff	sprintf@f,tblptrl
 14034  000220  C067  FFF7         	movff	sprintf@f+1,tblptrh
 14035  000224                     	if	0	;tblptru may be non-zero
 14036  000224                     	endif
 14037  000224                     	if	0	;tblptru may be non-zero
 14038  000224                     	endif
 14039  000224  0008               	tblrd		*
 14040  000226  50F5               	movf	tablat,w,c
 14041  000228  6F72               	movwf	(??_sprintf+2)& (0+255),b
 14042  00022A  6B73               	clrf	(??_sprintf+3)& (0+255),b
 14043  00022C  5170               	movf	??_sprintf& (0+255),w,b
 14044  00022E  2772               	addwf	(??_sprintf+2)& (0+255),f,b
 14045  000230  5171               	movf	(??_sprintf+1)& (0+255),w,b
 14046  000232  2373               	addwfc	(??_sprintf+3)& (0+255),f,b
 14047  000234  5172               	movf	(??_sprintf+2)& (0+255),w,b
 14048  000236  2782               	addwf	sprintf@width& (0+255),f,b
 14049  000238  5173               	movf	(??_sprintf+3)& (0+255),w,b
 14050  00023A  2383               	addwfc	(sprintf@width+1)& (0+255),f,b
 14051                           
 14052                           ; BSR set to: 0
 14053  00023C  4B66               	infsnz	sprintf@f& (0+255),f,b
 14054  00023E  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 14058  000240  C066  FFF6         	movff	sprintf@f,tblptrl
 14059  000244  C067  FFF7         	movff	sprintf@f+1,tblptrh
 14060  000248                     	if	0	;tblptru may be non-zero
 14061  000248                     	endif
 14062  000248                     	if	0	;tblptru may be non-zero
 14063  000248                     	endif
 14064  000248  0008               	tblrd		*
 14065  00024A  50F5               	movf	tablat,w,c
 14066  00024C  EC72  F01A         	call	_isdigit
 14067  000250  E314               	bnc	l10809
 14068  000252  D7D4               	goto	l10793
 14069  000254                     l10801:
 14070                           
 14071                           ; BSR set to: 0
 14072  000254  C066  FFF6         	movff	sprintf@f,tblptrl
 14073  000258  C067  FFF7         	movff	sprintf@f+1,tblptrh
 14074  00025C                     	if	0	;tblptru may be non-zero
 14075  00025C                     	endif
 14076  00025C                     	if	0	;tblptru may be non-zero
 14077  00025C                     	endif
 14078  00025C  0008               	tblrd		*
 14079  00025E  50F5               	movf	tablat,w,c
 14080  000260  0A2A               	xorlw	42
 14081  000262  E10B               	bnz	l10809
 14082                           
 14083                           ; BSR set to: 0
 14084                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 14085  000264  517E               	movf	sprintf@ap& (0+255),w,b
 14086  000266  6ED9               	movwf	fsr2l,c
 14087  000268  6ADA               	clrf	fsr2h,c
 14088  00026A  CFDE F082          	movff	postinc2,sprintf@width
 14089  00026E  CFDD F083          	movff	postdec2,sprintf@width+1
 14090                           
 14091                           ; BSR set to: 0
 14092  000272  0E02               	movlw	2
 14093  000274  277E               	addwf	sprintf@ap& (0+255),f,b
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;doprnt.c: 606: f++;
 14097  000276  4B66               	infsnz	sprintf@f& (0+255),f,b
 14098  000278  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 14099  00027A                     l10809:
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;doprnt.c: 608: }
 14103                           ;doprnt.c: 611: if(*f == '.') {
 14104  00027A  C066  FFF6         	movff	sprintf@f,tblptrl
 14105  00027E  C067  FFF7         	movff	sprintf@f+1,tblptrh
 14106  000282                     	if	0	;tblptru may be non-zero
 14107  000282                     	endif
 14108  000282                     	if	0	;tblptru may be non-zero
 14109  000282                     	endif
 14110  000282  0008               	tblrd		*
 14111  000284  50F5               	movf	tablat,w,c
 14112  000286  0A2E               	xorlw	46
 14113  000288  E130               	bnz	l1313
 14114                           
 14115                           ; BSR set to: 0
 14116                           ;doprnt.c: 612: flag |= 0x4000;
 14117  00028A  8D86               	bsf	(sprintf@flag+1)& (0+255),6,b
 14118                           
 14119                           ;doprnt.c: 613: f++;
 14120  00028C  4B66               	infsnz	sprintf@f& (0+255),f,b
 14121  00028E  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;doprnt.c: 615: if(*f == '*') {
 14125  000290  C066  FFF6         	movff	sprintf@f,tblptrl
 14126  000294  C067  FFF7         	movff	sprintf@f+1,tblptrh
 14127  000298                     	if	0	;tblptru may be non-zero
 14128  000298                     	endif
 14129  000298                     	if	0	;tblptru may be non-zero
 14130  000298                     	endif
 14131  000298  0008               	tblrd		*
 14132  00029A  50F5               	movf	tablat,w,c
 14133  00029C  0A2A               	xorlw	42
 14134  00029E  E10A               	bnz	l1314
 14135                           
 14136                           ; BSR set to: 0
 14137                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 14138  0002A0  517E               	movf	sprintf@ap& (0+255),w,b
 14139  0002A2  6ED9               	movwf	fsr2l,c
 14140  0002A4  6ADA               	clrf	fsr2h,c
 14141  0002A6  50DF               	movf	indf2,w,c
 14142  0002A8  6F81               	movwf	sprintf@prec& (0+255),b
 14143                           
 14144                           ; BSR set to: 0
 14145  0002AA  0E02               	movlw	2
 14146  0002AC  277E               	addwf	sprintf@ap& (0+255),f,b
 14147                           
 14148                           ; BSR set to: 0
 14149                           ;doprnt.c: 617: f++;
 14150  0002AE  4B66               	infsnz	sprintf@f& (0+255),f,b
 14151  0002B0  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 14152                           
 14153                           ;doprnt.c: 618: } else
 14154  0002B2  D08B               	goto	l10877
 14155  0002B4                     l1314:
 14156                           
 14157                           ; BSR set to: 0
 14158                           ;doprnt.c: 620: {
 14159                           ;doprnt.c: 621: prec = 0;
 14160  0002B4  6B81               	clrf	sprintf@prec& (0+255),b
 14161                           
 14162                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 14163  0002B6  D00F               	goto	l10825
 14164  0002B8                     l10821:
 14165                           
 14166                           ; BSR set to: 0
 14167                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 14168  0002B8  C066  FFF6         	movff	sprintf@f,tblptrl
 14169  0002BC  C067  FFF7         	movff	sprintf@f+1,tblptrh
 14170  0002C0                     	if	0	;tblptru may be non-zero
 14171  0002C0                     	endif
 14172  0002C0                     	if	0	;tblptru may be non-zero
 14173  0002C0                     	endif
 14174  0002C0  0008               	tblrd		*
 14175  0002C2  CFF5 F070          	movff	tablat,??_sprintf
 14176  0002C6  5181               	movf	sprintf@prec& (0+255),w,b
 14177  0002C8  0D0A               	mullw	10
 14178  0002CA  50F3               	movf	prodl,w,c
 14179  0002CC  2570               	addwf	??_sprintf& (0+255),w,b
 14180  0002CE  0FD0               	addlw	208
 14181  0002D0  6F81               	movwf	sprintf@prec& (0+255),b
 14182                           
 14183                           ; BSR set to: 0
 14184  0002D2  4B66               	infsnz	sprintf@f& (0+255),f,b
 14185  0002D4  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 14186  0002D6                     l10825:
 14187                           
 14188                           ; BSR set to: 0
 14189  0002D6  C066  FFF6         	movff	sprintf@f,tblptrl
 14190  0002DA  C067  FFF7         	movff	sprintf@f+1,tblptrh
 14191  0002DE                     	if	0	;tblptru may be non-zero
 14192  0002DE                     	endif
 14193  0002DE                     	if	0	;tblptru may be non-zero
 14194  0002DE                     	endif
 14195  0002DE  0008               	tblrd		*
 14196  0002E0  50F5               	movf	tablat,w,c
 14197  0002E2  EC72  F01A         	call	_isdigit
 14198  0002E6  E371               	bnc	l10877
 14199  0002E8  D7E7               	goto	l10821
 14200  0002EA                     l1313:
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;doprnt.c: 626: prec = 0;
 14204  0002EA  6B81               	clrf	sprintf@prec& (0+255),b
 14205  0002EC  D06E               	goto	l10877
 14206  0002EE                     l10827:
 14207                           
 14208                           ; BSR set to: 0
 14209                           ;doprnt.c: 691: flag |= 0x40;
 14210  0002EE  8D85               	bsf	sprintf@flag& (0+255),6,b
 14211                           
 14212                           ;doprnt.c: 693: break;
 14213  0002F0  D089               	goto	l10879
 14214  0002F2                     l10829:
 14215                           
 14216                           ; BSR set to: 0
 14217                           ;doprnt.c: 714: flag |= 0x20;
 14218  0002F2  8B85               	bsf	sprintf@flag& (0+255),5,b
 14219  0002F4                     l1328:
 14220                           
 14221                           ; BSR set to: 0
 14222                           ;doprnt.c: 721: flag |= 0x80;
 14223  0002F4  8F85               	bsf	sprintf@flag& (0+255),7,b
 14224                           
 14225                           ;doprnt.c: 723: break;
 14226  0002F6  D086               	goto	l10879
 14227  0002F8                     l10831:
 14228                           
 14229                           ; BSR set to: 0
 14230                           ;doprnt.c: 753: if(prec && prec < len)
 14231  0002F8  5181               	movf	sprintf@prec& (0+255),w,b
 14232  0002FA  E00F               	bz	l10837
 14233                           
 14234                           ; BSR set to: 0
 14235  0002FC  C081  F070         	movff	sprintf@prec,??_sprintf
 14236  000300  6B71               	clrf	(??_sprintf+1)& (0+255),b
 14237  000302  BF70               	btfsc	??_sprintf& (0+255),7,b
 14238  000304  0771               	decf	(??_sprintf+1)& (0+255),f,b
 14239  000306  517C               	movf	sprintf@len& (0+255),w,b
 14240  000308  5D70               	subwf	??_sprintf& (0+255),w,b
 14241  00030A  517D               	movf	(sprintf@len+1)& (0+255),w,b
 14242  00030C  5971               	subwfb	(??_sprintf+1)& (0+255),w,b
 14243  00030E  E205               	bc	l10837
 14244                           
 14245                           ; BSR set to: 0
 14246                           ;doprnt.c: 754: len = prec;
 14247  000310  5181               	movf	sprintf@prec& (0+255),w,b
 14248  000312  6F7C               	movwf	sprintf@len& (0+255),b
 14249  000314  6B7D               	clrf	(sprintf@len+1)& (0+255),b
 14250  000316  BF7C               	btfsc	sprintf@len& (0+255),7,b
 14251  000318  077D               	decf	(sprintf@len+1)& (0+255),f,b
 14252  00031A                     l10837:
 14253                           
 14254                           ; BSR set to: 0
 14255                           ;doprnt.c: 757: if(width > len)
 14256  00031A  5182               	movf	sprintf@width& (0+255),w,b
 14257  00031C  5D7C               	subwf	sprintf@len& (0+255),w,b
 14258  00031E  5183               	movf	(sprintf@width+1)& (0+255),w,b
 14259  000320  597D               	subwfb	(sprintf@len+1)& (0+255),w,b
 14260  000322  E205               	bc	l1331
 14261                           
 14262                           ; BSR set to: 0
 14263                           ;doprnt.c: 758: width -= len;
 14264  000324  517C               	movf	sprintf@len& (0+255),w,b
 14265  000326  5F82               	subwf	sprintf@width& (0+255),f,b
 14266  000328  517D               	movf	(sprintf@len+1)& (0+255),w,b
 14267  00032A  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 14268  00032C  D002               	goto	l1332
 14269  00032E                     l1331:
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;doprnt.c: 759: else
 14273                           ;doprnt.c: 760: width = 0;
 14274  00032E  6B82               	clrf	sprintf@width& (0+255),b
 14275  000330  6B83               	clrf	(sprintf@width+1)& (0+255),b
 14276  000332                     l1332:
 14277                           
 14278                           ; BSR set to: 0
 14279                           ;doprnt.c: 762: if(!(flag & 0x08))
 14280  000332  A785               	btfss	sprintf@flag& (0+255),3,b
 14281  000334  D009               	goto	l10847
 14282  000336  D01C               	goto	l10855
 14283  000338                     l10843:
 14284                           
 14285                           ; BSR set to: 0
 14286                           ;doprnt.c: 765: ((*sp++ = (' ')));
 14287  000338  C064  FFD9         	movff	sprintf@sp,fsr2l
 14288  00033C  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 14289  000340  0E20               	movlw	32
 14290  000342  6EDF               	movwf	indf2,c
 14291                           
 14292                           ; BSR set to: 0
 14293  000344  4B64               	infsnz	sprintf@sp& (0+255),f,b
 14294  000346  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 14295  000348                     l10847:
 14296                           
 14297                           ; BSR set to: 0
 14298  000348  0782               	decf	sprintf@width& (0+255),f,b
 14299  00034A  A0D8               	btfss	status,0,c
 14300  00034C  0783               	decf	(sprintf@width+1)& (0+255),f,b
 14301  00034E  2982               	incf	sprintf@width& (0+255),w,b
 14302  000350  E1F3               	bnz	l10843
 14303  000352  2983               	incf	(sprintf@width+1)& (0+255),w,b
 14304  000354  E00D               	bz	l10855
 14305  000356  D7F0               	goto	l10843
 14306  000358                     l10849:
 14307                           
 14308                           ; BSR set to: 0
 14309                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 14310  000358  517B               	movf	sprintf@cp& (0+255),w,b
 14311  00035A  6ED9               	movwf	fsr2l,c
 14312  00035C  6ADA               	clrf	fsr2h,c
 14313  00035E  C064  FFE1         	movff	sprintf@sp,fsr1l
 14314  000362  C065  FFE2         	movff	sprintf@sp+1,fsr1h
 14315  000366  CFDF FFE7          	movff	indf2,indf1
 14316                           
 14317                           ; BSR set to: 0
 14318  00036A  2B7B               	incf	sprintf@cp& (0+255),f,b
 14319                           
 14320                           ; BSR set to: 0
 14321  00036C  4B64               	infsnz	sprintf@sp& (0+255),f,b
 14322  00036E  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 14323  000370                     l10855:
 14324                           
 14325                           ; BSR set to: 0
 14326  000370  077C               	decf	sprintf@len& (0+255),f,b
 14327  000372  A0D8               	btfss	status,0,c
 14328  000374  077D               	decf	(sprintf@len+1)& (0+255),f,b
 14329  000376  297C               	incf	sprintf@len& (0+255),w,b
 14330  000378  E1EF               	bnz	l10849
 14331  00037A  297D               	incf	(sprintf@len+1)& (0+255),w,b
 14332  00037C  A4D8               	btfss	status,2,c
 14333  00037E  D7EC               	goto	l10849
 14334                           
 14335                           ; BSR set to: 0
 14336                           ;doprnt.c: 770: if(flag & 0x08)
 14337  000380  B785               	btfsc	sprintf@flag& (0+255),3,b
 14338  000382  D009               	goto	l10863
 14339  000384  D283               	goto	l11091
 14340  000386                     l10859:
 14341                           
 14342                           ; BSR set to: 0
 14343                           ;doprnt.c: 772: ((*sp++ = (' ')));
 14344  000386  C064  FFD9         	movff	sprintf@sp,fsr2l
 14345  00038A  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 14346  00038E  0E20               	movlw	32
 14347  000390  6EDF               	movwf	indf2,c
 14348                           
 14349                           ; BSR set to: 0
 14350  000392  4B64               	infsnz	sprintf@sp& (0+255),f,b
 14351  000394  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 14352  000396                     l10863:
 14353                           
 14354                           ; BSR set to: 0
 14355  000396  0782               	decf	sprintf@width& (0+255),f,b
 14356  000398  A0D8               	btfss	status,0,c
 14357  00039A  0783               	decf	(sprintf@width+1)& (0+255),f,b
 14358  00039C  2982               	incf	sprintf@width& (0+255),w,b
 14359  00039E  E1F3               	bnz	l10859
 14360  0003A0  2983               	incf	(sprintf@width+1)& (0+255),w,b
 14361  0003A2  E101 D273          	bz	l11091
 14362  0003A6  D7EF               	goto	l10859
 14363  0003A8                     l10865:
 14364                           
 14365                           ; BSR set to: 0
 14366                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 14367  0003A8  517E               	movf	sprintf@ap& (0+255),w,b
 14368  0003AA  6ED9               	movwf	fsr2l,c
 14369  0003AC  6ADA               	clrf	fsr2h,c
 14370  0003AE  50DF               	movf	indf2,w,c
 14371  0003B0  6F84               	movwf	sprintf@c& (0+255),b
 14372                           
 14373                           ; BSR set to: 0
 14374  0003B2  0E02               	movlw	2
 14375  0003B4  277E               	addwf	sprintf@ap& (0+255),f,b
 14376  0003B6                     l10869:
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;doprnt.c: 805: cp = (char *)&c;
 14380  0003B6  0E84               	movlw	low sprintf@c
 14381  0003B8  6F7B               	movwf	sprintf@cp& (0+255),b
 14382                           
 14383                           ; BSR set to: 0
 14384                           ;doprnt.c: 806: len = 1;
 14385  0003BA  0E00               	movlw	0
 14386  0003BC  6F7D               	movwf	(sprintf@len+1)& (0+255),b
 14387  0003BE  0E01               	movlw	1
 14388  0003C0  6F7C               	movwf	sprintf@len& (0+255),b
 14389                           
 14390                           ;doprnt.c: 807: goto dostring;
 14391  0003C2  D79A               	goto	l10831
 14392  0003C4                     l10873:
 14393                           
 14394                           ; BSR set to: 0
 14395                           ;doprnt.c: 818: flag |= 0xC0;
 14396  0003C4  0EC0               	movlw	192
 14397  0003C6  1385               	iorwf	sprintf@flag& (0+255),f,b
 14398                           
 14399                           ;doprnt.c: 819: break;
 14400  0003C8  D01D               	goto	l10879
 14401  0003CA                     l10877:
 14402                           
 14403                           ; BSR set to: 0
 14404  0003CA  C066  FFF6         	movff	sprintf@f,tblptrl
 14405  0003CE  C067  FFF7         	movff	sprintf@f+1,tblptrh
 14406  0003D2  4B66               	infsnz	sprintf@f& (0+255),f,b
 14407  0003D4  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 14408  0003D6                     	if	0	;tblptru may be non-zero
 14409  0003D6                     	endif
 14410  0003D6                     	if	0	;tblptru may be non-zero
 14411  0003D6                     	endif
 14412  0003D6  0008               	tblrd		*
 14413  0003D8  CFF5 F084          	movff	tablat,sprintf@c
 14414  0003DC  5184               	movf	sprintf@c& (0+255),w,b
 14415                           
 14416                           ; Switch size 1, requested type "speed"
 14417                           ; Number of cases is 8, Range of values is 0 to 120
 14418                           ; switch strategies available:
 14419                           ; Name         Instructions Cycles
 14420                           ; simple_byte           25    13 (average)
 14421                           ;	Chosen strategy is simple_byte
 14422  0003DE  E101 D261          	bz	l11093
 14423  0003E2  0A58               	xorlw	88	; case 88
 14424  0003E4  E086               	bz	l10829
 14425  0003E6  0A3B               	xorlw	59	; case 99
 14426  0003E8  E0DF               	bz	l10865
 14427  0003EA  0A07               	xorlw	7	; case 100
 14428  0003EC  E00B               	bz	l10879
 14429  0003EE  0A0D               	xorlw	13	; case 105
 14430  0003F0  E009               	bz	l10879
 14431  0003F2  0A06               	xorlw	6	; case 111
 14432  0003F4  E101 D77B          	bz	l10827
 14433  0003F8  0A1A               	xorlw	26	; case 117
 14434  0003FA  E0E4               	bz	l10873
 14435  0003FC  0A0D               	xorlw	13	; case 120
 14436  0003FE  E101 D779          	bz	l1328
 14437  000402  D7D9               	goto	l10869
 14438  000404                     l10879:
 14439                           
 14440                           ; BSR set to: 0
 14441                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 14442  000404  C085  F070         	movff	sprintf@flag,??_sprintf
 14443  000408  0EC0               	movlw	192
 14444  00040A  1770               	andwf	??_sprintf& (0+255),f,b
 14445  00040C  E112               	bnz	l10891
 14446                           
 14447                           ; BSR set to: 0
 14448                           ;doprnt.c: 1253: {
 14449                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 14450  00040E  517E               	movf	sprintf@ap& (0+255),w,b
 14451  000410  6ED9               	movwf	fsr2l,c
 14452  000412  6ADA               	clrf	fsr2h,c
 14453  000414  CFDE F07F          	movff	postinc2,sprintf@val
 14454  000418  CFDD F080          	movff	postdec2,sprintf@val+1
 14455                           
 14456                           ; BSR set to: 0
 14457  00041C  0E02               	movlw	2
 14458  00041E  277E               	addwf	sprintf@ap& (0+255),f,b
 14459                           
 14460                           ; BSR set to: 0
 14461                           ;doprnt.c: 1261: if((int)val < 0) {
 14462  000420  AF80               	btfss	(sprintf@val+1)& (0+255),7,b
 14463  000422  D010               	goto	l10895
 14464                           
 14465                           ; BSR set to: 0
 14466                           ;doprnt.c: 1262: flag |= 0x03;
 14467  000424  0E03               	movlw	3
 14468  000426  1385               	iorwf	sprintf@flag& (0+255),f,b
 14469                           
 14470                           ; BSR set to: 0
 14471                           ;doprnt.c: 1263: val = -val;
 14472  000428  6D7F               	negf	sprintf@val& (0+255),b
 14473  00042A  1F80               	comf	(sprintf@val+1)& (0+255),f,b
 14474  00042C  B0D8               	btfsc	status,0,c
 14475  00042E  2B80               	incf	(sprintf@val+1)& (0+255),f,b
 14476  000430  D009               	goto	l10895
 14477  000432                     l10891:
 14478                           
 14479                           ; BSR set to: 0
 14480                           ;doprnt.c: 1268: else
 14481                           ;doprnt.c: 1273: {
 14482                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 14483  000432  517E               	movf	sprintf@ap& (0+255),w,b
 14484  000434  6ED9               	movwf	fsr2l,c
 14485  000436  6ADA               	clrf	fsr2h,c
 14486  000438  CFDE F07F          	movff	postinc2,sprintf@val
 14487  00043C  CFDD F080          	movff	postdec2,sprintf@val+1
 14488                           
 14489                           ; BSR set to: 0
 14490  000440  0E02               	movlw	2
 14491  000442  277E               	addwf	sprintf@ap& (0+255),f,b
 14492  000444                     l10895:
 14493                           
 14494                           ; BSR set to: 0
 14495                           ;doprnt.c: 1287: }
 14496                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 14497  000444  5181               	movf	sprintf@prec& (0+255),w,b
 14498  000446  E147               	bnz	l10945
 14499                           
 14500                           ; BSR set to: 0
 14501  000448  517F               	movf	sprintf@val& (0+255),w,b
 14502  00044A  1180               	iorwf	(sprintf@val+1)& (0+255),w,b
 14503  00044C  E144               	bnz	l10945
 14504                           
 14505                           ; BSR set to: 0
 14506                           ;doprnt.c: 1291: prec++;
 14507  00044E  2B81               	incf	sprintf@prec& (0+255),f,b
 14508  000450  D042               	goto	l10945
 14509  000452                     l10901:
 14510                           
 14511                           ; BSR set to: 0
 14512                           ;doprnt.c: 1302: case 0xC0:
 14513                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 14514  000452  0E01               	movlw	1
 14515  000454  6F84               	movwf	sprintf@c& (0+255),b
 14516  000456                     l10903:
 14517                           
 14518                           ; BSR set to: 0
 14519  000456  0E05               	movlw	5
 14520  000458  1984               	xorwf	sprintf@c& (0+255),w,b
 14521  00045A  E046               	bz	l10947
 14522                           
 14523                           ; BSR set to: 0
 14524                           ;doprnt.c: 1306: if(val < dpowers[c])
 14525  00045C  5184               	movf	sprintf@c& (0+255),w,b
 14526  00045E  0D02               	mullw	2
 14527  000460  0E1B               	movlw	low _dpowers
 14528  000462  24F3               	addwf	prodl,w,c
 14529  000464  6EF6               	movwf	tblptrl,c
 14530  000466  0EFE               	movlw	high _dpowers
 14531  000468  20F4               	addwfc	prodh,w,c
 14532  00046A  6EF7               	movwf	tblptrh,c
 14533  00046C                     	if	0	;There are less than 3 active tblptr bytes
 14534  00046C                     	endif
 14535  00046C  0009               	tblrd		*+
 14536  00046E  50F5               	movf	tablat,w,c
 14537  000470  5D7F               	subwf	sprintf@val& (0+255),w,b
 14538  000472  0009               	tblrd		*+
 14539  000474  50F5               	movf	tablat,w,c
 14540  000476  5980               	subwfb	(sprintf@val+1)& (0+255),w,b
 14541  000478  E337               	bnc	l10947
 14542                           
 14543                           ; BSR set to: 0
 14544  00047A  2B84               	incf	sprintf@c& (0+255),f,b
 14545  00047C  D7EC               	goto	l10903
 14546  00047E                     l10915:
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 14550  00047E  0E01               	movlw	1
 14551  000480  6F84               	movwf	sprintf@c& (0+255),b
 14552  000482                     l10917:
 14553                           
 14554                           ; BSR set to: 0
 14555  000482  0E04               	movlw	4
 14556  000484  1984               	xorwf	sprintf@c& (0+255),w,b
 14557  000486  E030               	bz	l10947
 14558                           
 14559                           ; BSR set to: 0
 14560                           ;doprnt.c: 1317: if(val < hexpowers[c])
 14561  000488  5184               	movf	sprintf@c& (0+255),w,b
 14562  00048A  0D02               	mullw	2
 14563  00048C  0E25               	movlw	low _hexpowers
 14564  00048E  24F3               	addwf	prodl,w,c
 14565  000490  6EF6               	movwf	tblptrl,c
 14566  000492  0EFE               	movlw	high _hexpowers
 14567  000494  20F4               	addwfc	prodh,w,c
 14568  000496  6EF7               	movwf	tblptrh,c
 14569  000498                     	if	0	;There are less than 3 active tblptr bytes
 14570  000498                     	endif
 14571  000498  0009               	tblrd		*+
 14572  00049A  50F5               	movf	tablat,w,c
 14573  00049C  5D7F               	subwf	sprintf@val& (0+255),w,b
 14574  00049E  0009               	tblrd		*+
 14575  0004A0  50F5               	movf	tablat,w,c
 14576  0004A2  5980               	subwfb	(sprintf@val+1)& (0+255),w,b
 14577  0004A4  E321               	bnc	l10947
 14578                           
 14579                           ; BSR set to: 0
 14580  0004A6  2B84               	incf	sprintf@c& (0+255),f,b
 14581  0004A8  D7EC               	goto	l10917
 14582  0004AA                     l10929:
 14583                           
 14584                           ; BSR set to: 0
 14585                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 14586  0004AA  0E01               	movlw	1
 14587  0004AC  6F84               	movwf	sprintf@c& (0+255),b
 14588  0004AE                     l10931:
 14589                           
 14590                           ; BSR set to: 0
 14591  0004AE  0E06               	movlw	6
 14592  0004B0  1984               	xorwf	sprintf@c& (0+255),w,b
 14593  0004B2  E01A               	bz	l10947
 14594                           
 14595                           ; BSR set to: 0
 14596                           ;doprnt.c: 1329: if(val < octpowers[c])
 14597  0004B4  5184               	movf	sprintf@c& (0+255),w,b
 14598  0004B6  0D02               	mullw	2
 14599  0004B8  0E0F               	movlw	low _octpowers
 14600  0004BA  24F3               	addwf	prodl,w,c
 14601  0004BC  6EF6               	movwf	tblptrl,c
 14602  0004BE  0EFE               	movlw	high _octpowers
 14603  0004C0  20F4               	addwfc	prodh,w,c
 14604  0004C2  6EF7               	movwf	tblptrh,c
 14605  0004C4                     	if	0	;There are less than 3 active tblptr bytes
 14606  0004C4                     	endif
 14607  0004C4  0009               	tblrd		*+
 14608  0004C6  50F5               	movf	tablat,w,c
 14609  0004C8  5D7F               	subwf	sprintf@val& (0+255),w,b
 14610  0004CA  0009               	tblrd		*+
 14611  0004CC  50F5               	movf	tablat,w,c
 14612  0004CE  5980               	subwfb	(sprintf@val+1)& (0+255),w,b
 14613  0004D0  E30B               	bnc	l10947
 14614                           
 14615                           ; BSR set to: 0
 14616  0004D2  2B84               	incf	sprintf@c& (0+255),f,b
 14617  0004D4  D7EC               	goto	l10931
 14618  0004D6                     l10945:
 14619                           
 14620                           ; BSR set to: 0
 14621  0004D6  5185               	movf	sprintf@flag& (0+255),w,b
 14622  0004D8  0BC0               	andlw	192
 14623                           
 14624                           ; Switch size 1, requested type "speed"
 14625                           ; Number of cases is 4, Range of values is 0 to 192
 14626                           ; switch strategies available:
 14627                           ; Name         Instructions Cycles
 14628                           ; simple_byte           13     7 (average)
 14629                           ;	Chosen strategy is simple_byte
 14630  0004DA  E0BB               	bz	l10901
 14631  0004DC  0A40               	xorlw	64	; case 64
 14632  0004DE  E0E5               	bz	l10929
 14633  0004E0  0AC0               	xorlw	192	; case 128
 14634  0004E2  E0CD               	bz	l10915
 14635  0004E4  0A40               	xorlw	64	; case 192
 14636  0004E6  E0B5               	bz	l10901
 14637  0004E8                     l10947:
 14638                           
 14639                           ; BSR set to: 0
 14640                           ;doprnt.c: 1339: if(c < prec)
 14641  0004E8  5184               	movf	sprintf@c& (0+255),w,b
 14642  0004EA  0A80               	xorlw	128
 14643  0004EC  6F70               	movwf	??_sprintf& (0+255),b
 14644  0004EE  5181               	movf	sprintf@prec& (0+255),w,b
 14645  0004F0  0A80               	xorlw	128
 14646  0004F2  5D70               	subwf	??_sprintf& (0+255),w,b
 14647  0004F4  E203               	bc	l10951
 14648                           
 14649                           ; BSR set to: 0
 14650                           ;doprnt.c: 1340: c = prec;
 14651  0004F6  C081  F084         	movff	sprintf@prec,sprintf@c
 14652  0004FA  D009               	goto	l10955
 14653  0004FC                     l10951:
 14654                           
 14655                           ; BSR set to: 0
 14656                           ;doprnt.c: 1341: else if(prec < c)
 14657  0004FC  5181               	movf	sprintf@prec& (0+255),w,b
 14658  0004FE  0A80               	xorlw	128
 14659  000500  6F70               	movwf	??_sprintf& (0+255),b
 14660  000502  5184               	movf	sprintf@c& (0+255),w,b
 14661  000504  0A80               	xorlw	128
 14662  000506  5D70               	subwf	??_sprintf& (0+255),w,b
 14663  000508  A0D8               	btfss	status,0,c
 14664                           
 14665                           ; BSR set to: 0
 14666                           ;doprnt.c: 1342: prec = c;
 14667  00050A  C084  F081         	movff	sprintf@c,sprintf@prec
 14668  00050E                     l10955:
 14669                           
 14670                           ; BSR set to: 0
 14671                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14672  00050E  5182               	movf	sprintf@width& (0+255),w,b
 14673  000510  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 14674  000512  E008               	bz	l10961
 14675                           
 14676                           ; BSR set to: 0
 14677  000514  C085  F070         	movff	sprintf@flag,??_sprintf
 14678  000518  0E03               	movlw	3
 14679  00051A  1770               	andwf	??_sprintf& (0+255),f,b
 14680  00051C  E003               	bz	l10961
 14681                           
 14682                           ; BSR set to: 0
 14683                           ;doprnt.c: 1346: width--;
 14684  00051E  0782               	decf	sprintf@width& (0+255),f,b
 14685  000520  A0D8               	btfss	status,0,c
 14686  000522  0783               	decf	(sprintf@width+1)& (0+255),f,b
 14687  000524                     l10961:
 14688                           
 14689                           ; BSR set to: 0
 14690                           ;doprnt.c: 1348: if(flag & 0x4000) {
 14691  000524  AD86               	btfss	(sprintf@flag+1)& (0+255),6,b
 14692  000526  D013               	goto	l10967
 14693                           
 14694                           ; BSR set to: 0
 14695                           ;doprnt.c: 1349: if(width > prec)
 14696  000528  0E80               	movlw	128
 14697  00052A  BF81               	btfsc	sprintf@prec& (0+255),7,b
 14698  00052C  0E7F               	movlw	127
 14699  00052E  6F70               	movwf	??_sprintf& (0+255),b
 14700  000530  5182               	movf	sprintf@width& (0+255),w,b
 14701  000532  5D81               	subwf	sprintf@prec& (0+255),w,b
 14702  000534  5183               	movf	(sprintf@width+1)& (0+255),w,b
 14703  000536  0A80               	xorlw	128
 14704  000538  5970               	subwfb	??_sprintf& (0+255),w,b
 14705  00053A  E207               	bc	l1371
 14706                           
 14707                           ; BSR set to: 0
 14708                           ;doprnt.c: 1350: width -= prec;
 14709  00053C  5181               	movf	sprintf@prec& (0+255),w,b
 14710  00053E  5F82               	subwf	sprintf@width& (0+255),f,b
 14711  000540  0E00               	movlw	0
 14712  000542  BF81               	btfsc	sprintf@prec& (0+255),7,b
 14713  000544  0EFF               	movlw	255
 14714  000546  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 14715  000548  D002               	goto	l10967
 14716  00054A                     l1371:
 14717                           
 14718                           ; BSR set to: 0
 14719                           ;doprnt.c: 1351: else
 14720                           ;doprnt.c: 1352: width = 0;
 14721  00054A  6B82               	clrf	sprintf@width& (0+255),b
 14722  00054C  6B83               	clrf	(sprintf@width+1)& (0+255),b
 14723  00054E                     l10967:
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;doprnt.c: 1353: }
 14727                           ;doprnt.c: 1357: if((flag & (
 14728                           ;doprnt.c: 1359: 0x04|
 14729                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 14730  00054E  0EC4               	movlw	196
 14731  000550  6F70               	movwf	??_sprintf& (0+255),b
 14732  000552  0E08               	movlw	8
 14733  000554  6F71               	movwf	(??_sprintf+1)& (0+255),b
 14734  000556  C085  F072         	movff	sprintf@flag,??_sprintf+2
 14735  00055A  C086  F073         	movff	sprintf@flag+1,??_sprintf+3
 14736  00055E  5170               	movf	??_sprintf& (0+255),w,b
 14737  000560  1772               	andwf	(??_sprintf+2)& (0+255),f,b
 14738  000562  5171               	movf	(??_sprintf+1)& (0+255),w,b
 14739  000564  1773               	andwf	(??_sprintf+3)& (0+255),f,b
 14740  000566  0E40               	movlw	64
 14741  000568  1972               	xorwf	(??_sprintf+2)& (0+255),w,b
 14742  00056A  E10B               	bnz	l10973
 14743  00056C  0E08               	movlw	8
 14744  00056E  1973               	xorwf	(??_sprintf+3)& (0+255),w,b
 14745  000570  A4D8               	btfss	status,2,c
 14746  000572  D007               	goto	l10973
 14747                           
 14748                           ; BSR set to: 0
 14749                           ;doprnt.c: 1362: if(width)
 14750  000574  5182               	movf	sprintf@width& (0+255),w,b
 14751  000576  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 14752  000578  E025               	bz	l10979
 14753                           
 14754                           ; BSR set to: 0
 14755                           ;doprnt.c: 1363: width--;
 14756  00057A  0782               	decf	sprintf@width& (0+255),f,b
 14757  00057C  A0D8               	btfss	status,0,c
 14758  00057E  0783               	decf	(sprintf@width+1)& (0+255),f,b
 14759  000580  D021               	goto	l10979
 14760  000582                     l10973:
 14761                           
 14762                           ; BSR set to: 0
 14763                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 14764  000582  0EC0               	movlw	192
 14765  000584  6F70               	movwf	??_sprintf& (0+255),b
 14766  000586  0E08               	movlw	8
 14767  000588  6F71               	movwf	(??_sprintf+1)& (0+255),b
 14768  00058A  C085  F072         	movff	sprintf@flag,??_sprintf+2
 14769  00058E  C086  F073         	movff	sprintf@flag+1,??_sprintf+3
 14770  000592  5170               	movf	??_sprintf& (0+255),w,b
 14771  000594  1772               	andwf	(??_sprintf+2)& (0+255),f,b
 14772  000596  5171               	movf	(??_sprintf+1)& (0+255),w,b
 14773  000598  1773               	andwf	(??_sprintf+3)& (0+255),f,b
 14774  00059A  0E80               	movlw	128
 14775  00059C  1972               	xorwf	(??_sprintf+2)& (0+255),w,b
 14776  00059E  E112               	bnz	l10979
 14777  0005A0  0E08               	movlw	8
 14778  0005A2  1973               	xorwf	(??_sprintf+3)& (0+255),w,b
 14779  0005A4  A4D8               	btfss	status,2,c
 14780  0005A6  D00E               	goto	l10979
 14781                           
 14782                           ; BSR set to: 0
 14783                           ;doprnt.c: 1372: if(width > 2)
 14784  0005A8  BF83               	btfsc	(sprintf@width+1)& (0+255),7,b
 14785  0005AA  D00A               	goto	l1377
 14786  0005AC  5183               	movf	(sprintf@width+1)& (0+255),w,b
 14787  0005AE  E103               	bnz	u11110
 14788  0005B0  0E03               	movlw	3
 14789  0005B2  5D82               	subwf	sprintf@width& (0+255),w,b
 14790  0005B4  E305               	bnc	l1377
 14791  0005B6                     u11110:
 14792                           
 14793                           ; BSR set to: 0
 14794                           ;doprnt.c: 1373: width -= 2;
 14795  0005B6  0EFE               	movlw	254
 14796  0005B8  2782               	addwf	sprintf@width& (0+255),f,b
 14797  0005BA  0EFF               	movlw	255
 14798  0005BC  2383               	addwfc	(sprintf@width+1)& (0+255),f,b
 14799  0005BE  D002               	goto	l10979
 14800  0005C0                     l1377:
 14801                           
 14802                           ; BSR set to: 0
 14803                           ;doprnt.c: 1374: else
 14804                           ;doprnt.c: 1375: width = 0;
 14805  0005C0  6B82               	clrf	sprintf@width& (0+255),b
 14806  0005C2  6B83               	clrf	(sprintf@width+1)& (0+255),b
 14807  0005C4                     l10979:
 14808                           
 14809                           ; BSR set to: 0
 14810                           ;doprnt.c: 1376: }
 14811                           ;doprnt.c: 1381: if(width > c)
 14812  0005C4  0E80               	movlw	128
 14813  0005C6  BF84               	btfsc	sprintf@c& (0+255),7,b
 14814  0005C8  0E7F               	movlw	127
 14815  0005CA  6F70               	movwf	??_sprintf& (0+255),b
 14816  0005CC  5182               	movf	sprintf@width& (0+255),w,b
 14817  0005CE  5D84               	subwf	sprintf@c& (0+255),w,b
 14818  0005D0  5183               	movf	(sprintf@width+1)& (0+255),w,b
 14819  0005D2  0A80               	xorlw	128
 14820  0005D4  5970               	subwfb	??_sprintf& (0+255),w,b
 14821  0005D6  E207               	bc	l1379
 14822                           
 14823                           ; BSR set to: 0
 14824                           ;doprnt.c: 1382: width -= c;
 14825  0005D8  5184               	movf	sprintf@c& (0+255),w,b
 14826  0005DA  5F82               	subwf	sprintf@width& (0+255),f,b
 14827  0005DC  0E00               	movlw	0
 14828  0005DE  BF84               	btfsc	sprintf@c& (0+255),7,b
 14829  0005E0  0EFF               	movlw	255
 14830  0005E2  5B83               	subwfb	(sprintf@width+1)& (0+255),f,b
 14831  0005E4  D002               	goto	l1380
 14832  0005E6                     l1379:
 14833                           
 14834                           ; BSR set to: 0
 14835                           ;doprnt.c: 1383: else
 14836                           ;doprnt.c: 1384: width = 0;
 14837  0005E6  6B82               	clrf	sprintf@width& (0+255),b
 14838  0005E8  6B83               	clrf	(sprintf@width+1)& (0+255),b
 14839  0005EA                     l1380:
 14840                           
 14841                           ; BSR set to: 0
 14842                           ;doprnt.c: 1387: if(flag & 0x04) {
 14843  0005EA  A585               	btfss	sprintf@flag& (0+255),2,b
 14844  0005EC  D050               	goto	l11017
 14845                           
 14846                           ; BSR set to: 0
 14847                           ;doprnt.c: 1392: if(flag & 0x03)
 14848  0005EE  C085  F070         	movff	sprintf@flag,??_sprintf
 14849  0005F2  0E03               	movlw	3
 14850  0005F4  1770               	andwf	??_sprintf& (0+255),f,b
 14851  0005F6  E009               	bz	l1382
 14852                           
 14853                           ; BSR set to: 0
 14854                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14855  0005F8  C064  FFD9         	movff	sprintf@sp,fsr2l
 14856  0005FC  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 14857  000600  0E2D               	movlw	45
 14858  000602  6EDF               	movwf	indf2,c
 14859  000604                     l10987:
 14860                           
 14861                           ; BSR set to: 0
 14862  000604  4B64               	infsnz	sprintf@sp& (0+255),f,b
 14863  000606  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 14864  000608  D032               	goto	l11009
 14865  00060A                     l1382:
 14866                           
 14867                           ; BSR set to: 0
 14868                           ;doprnt.c: 1396: else
 14869                           ;doprnt.c: 1399: if(flag & 0x01)
 14870  00060A  A185               	btfss	sprintf@flag& (0+255),0,b
 14871  00060C  D006               	goto	l10993
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 14875  00060E  C064  FFD9         	movff	sprintf@sp,fsr2l
 14876  000612  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 14877  000616  0E20               	movlw	32
 14878  000618  D7F4               	goto	L17
 14879  00061A                     l10993:
 14880                           
 14881                           ; BSR set to: 0
 14882                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 14883  00061A  0EC0               	movlw	192
 14884  00061C  6F70               	movwf	??_sprintf& (0+255),b
 14885  00061E  0E08               	movlw	8
 14886  000620  6F71               	movwf	(??_sprintf+1)& (0+255),b
 14887  000622  C085  F072         	movff	sprintf@flag,??_sprintf+2
 14888  000626  C086  F073         	movff	sprintf@flag+1,??_sprintf+3
 14889  00062A  5170               	movf	??_sprintf& (0+255),w,b
 14890  00062C  1772               	andwf	(??_sprintf+2)& (0+255),f,b
 14891  00062E  5171               	movf	(??_sprintf+1)& (0+255),w,b
 14892  000630  1773               	andwf	(??_sprintf+3)& (0+255),f,b
 14893  000632  0E80               	movlw	128
 14894  000634  1972               	xorwf	(??_sprintf+2)& (0+255),w,b
 14895  000636  E11B               	bnz	l11009
 14896  000638  0E08               	movlw	8
 14897  00063A  1973               	xorwf	(??_sprintf+3)& (0+255),w,b
 14898  00063C  A4D8               	btfss	status,2,c
 14899  00063E  D017               	goto	l11009
 14900                           
 14901                           ; BSR set to: 0
 14902                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 14903  000640  C064  FFD9         	movff	sprintf@sp,fsr2l
 14904  000644  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 14905  000648  0E30               	movlw	48
 14906  00064A  6EDF               	movwf	indf2,c
 14907                           
 14908                           ; BSR set to: 0
 14909  00064C  4B64               	infsnz	sprintf@sp& (0+255),f,b
 14910  00064E  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 14911                           
 14912                           ; BSR set to: 0
 14913                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 14914  000650  BB85               	btfsc	sprintf@flag& (0+255),5,b
 14915  000652  D003               	goto	l11003
 14916                           
 14917                           ; BSR set to: 0
 14918  000654  6B76               	clrf	(_sprintf$3719+1)& (0+255),b
 14919  000656  0E78               	movlw	120
 14920  000658  D002               	goto	L18
 14921  00065A                     l11003:
 14922                           
 14923                           ; BSR set to: 0
 14924  00065A  6B76               	clrf	(_sprintf$3719+1)& (0+255),b
 14925  00065C  0E58               	movlw	88
 14926  00065E                     L18:
 14927  00065E  6F75               	movwf	_sprintf$3719& (0+255),b
 14928                           
 14929                           ; BSR set to: 0
 14930  000660  C064  FFD9         	movff	sprintf@sp,fsr2l
 14931  000664  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 14932  000668  C075  FFDF         	movff	_sprintf$3719,indf2
 14933  00066C  D7CB               	goto	l10987
 14934  00066E                     l11009:
 14935                           
 14936                           ; BSR set to: 0
 14937                           ;doprnt.c: 1412: }
 14938                           ;doprnt.c: 1415: if(width)
 14939  00066E  5182               	movf	sprintf@width& (0+255),w,b
 14940  000670  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 14941  000672  E101 D0F3          	bz	l11081
 14942                           
 14943                           ; BSR set to: 0
 14944                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14945  000676  C064  FFD9         	movff	sprintf@sp,fsr2l
 14946  00067A  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 14947  00067E  0E30               	movlw	48
 14948  000680  6EDF               	movwf	indf2,c
 14949                           
 14950                           ; BSR set to: 0
 14951  000682  4B64               	infsnz	sprintf@sp& (0+255),f,b
 14952  000684  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 14953                           
 14954                           ; BSR set to: 0
 14955                           ;doprnt.c: 1418: while(--width);
 14956  000686  0782               	decf	sprintf@width& (0+255),f,b
 14957  000688  A0D8               	btfss	status,0,c
 14958  00068A  0783               	decf	(sprintf@width+1)& (0+255),f,b
 14959  00068C  D7F0               	goto	l11009
 14960  00068E                     l11017:
 14961                           
 14962                           ; BSR set to: 0
 14963                           ;doprnt.c: 1422: {
 14964                           ;doprnt.c: 1424: if(width
 14965                           ;doprnt.c: 1426: && !(flag & 0x08)
 14966                           ;doprnt.c: 1428: )
 14967  00068E  5182               	movf	sprintf@width& (0+255),w,b
 14968  000690  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 14969  000692  A4D8               	btfss	status,2,c
 14970                           
 14971                           ; BSR set to: 0
 14972  000694  B785               	btfsc	sprintf@flag& (0+255),3,b
 14973  000696  D00E               	goto	l11027
 14974  000698                     l11021:
 14975                           
 14976                           ; BSR set to: 0
 14977                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14978  000698  C064  FFD9         	movff	sprintf@sp,fsr2l
 14979  00069C  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 14980  0006A0  0E20               	movlw	32
 14981  0006A2  6EDF               	movwf	indf2,c
 14982                           
 14983                           ; BSR set to: 0
 14984  0006A4  4B64               	infsnz	sprintf@sp& (0+255),f,b
 14985  0006A6  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 14986                           
 14987                           ; BSR set to: 0
 14988                           ;doprnt.c: 1431: while(--width);
 14989  0006A8  0782               	decf	sprintf@width& (0+255),f,b
 14990  0006AA  A0D8               	btfss	status,0,c
 14991  0006AC  0783               	decf	(sprintf@width+1)& (0+255),f,b
 14992  0006AE  5182               	movf	sprintf@width& (0+255),w,b
 14993  0006B0  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 14994  0006B2  E1F2               	bnz	l11021
 14995  0006B4                     l11027:
 14996                           
 14997                           ; BSR set to: 0
 14998                           ;doprnt.c: 1438: if(flag & 0x03)
 14999  0006B4  C085  F070         	movff	sprintf@flag,??_sprintf
 15000  0006B8  0E03               	movlw	3
 15001  0006BA  1770               	andwf	??_sprintf& (0+255),f,b
 15002  0006BC  E009               	bz	l1398
 15003                           
 15004                           ; BSR set to: 0
 15005                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 15006  0006BE  C064  FFD9         	movff	sprintf@sp,fsr2l
 15007  0006C2  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 15008  0006C6  0E2D               	movlw	45
 15009  0006C8  6EDF               	movwf	indf2,c
 15010                           
 15011                           ; BSR set to: 0
 15012  0006CA  4B64               	infsnz	sprintf@sp& (0+255),f,b
 15013  0006CC  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 15014  0006CE  D008               	goto	l11037
 15015  0006D0                     l1398:
 15016                           
 15017                           ; BSR set to: 0
 15018                           ;doprnt.c: 1443: else if(flag & 0x01)
 15019  0006D0  A185               	btfss	sprintf@flag& (0+255),0,b
 15020  0006D2  D006               	goto	l11037
 15021                           
 15022                           ; BSR set to: 0
 15023                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 15024  0006D4  C064  FFD9         	movff	sprintf@sp,fsr2l
 15025  0006D8  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 15026  0006DC  0E20               	movlw	32
 15027  0006DE  D7F4               	goto	L19
 15028  0006E0                     l11037:
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 15032  0006E0  0EC0               	movlw	192
 15033  0006E2  6F70               	movwf	??_sprintf& (0+255),b
 15034  0006E4  0E08               	movlw	8
 15035  0006E6  6F71               	movwf	(??_sprintf+1)& (0+255),b
 15036  0006E8  C085  F072         	movff	sprintf@flag,??_sprintf+2
 15037  0006EC  C086  F073         	movff	sprintf@flag+1,??_sprintf+3
 15038  0006F0  5170               	movf	??_sprintf& (0+255),w,b
 15039  0006F2  1772               	andwf	(??_sprintf+2)& (0+255),f,b
 15040  0006F4  5171               	movf	(??_sprintf+1)& (0+255),w,b
 15041  0006F6  1773               	andwf	(??_sprintf+3)& (0+255),f,b
 15042  0006F8  0E40               	movlw	64
 15043  0006FA  1972               	xorwf	(??_sprintf+2)& (0+255),w,b
 15044  0006FC  E10D               	bnz	l11043
 15045  0006FE  0E08               	movlw	8
 15046  000700  1973               	xorwf	(??_sprintf+3)& (0+255),w,b
 15047  000702  A4D8               	btfss	status,2,c
 15048  000704  D009               	goto	l11043
 15049                           
 15050                           ; BSR set to: 0
 15051                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 15052  000706  C064  FFD9         	movff	sprintf@sp,fsr2l
 15053  00070A  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 15054  00070E  0E30               	movlw	48
 15055  000710  6EDF               	movwf	indf2,c
 15056  000712                     l11041:
 15057                           
 15058                           ; BSR set to: 0
 15059  000712  4B64               	infsnz	sprintf@sp& (0+255),f,b
 15060  000714  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 15061  000716  D0A2               	goto	l11081
 15062  000718                     l11043:
 15063                           
 15064                           ; BSR set to: 0
 15065                           ;doprnt.c: 1450: else
 15066                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 15067  000718  0EC0               	movlw	192
 15068  00071A  6F70               	movwf	??_sprintf& (0+255),b
 15069  00071C  0E08               	movlw	8
 15070  00071E  6F71               	movwf	(??_sprintf+1)& (0+255),b
 15071  000720  C085  F072         	movff	sprintf@flag,??_sprintf+2
 15072  000724  C086  F073         	movff	sprintf@flag+1,??_sprintf+3
 15073  000728  5170               	movf	??_sprintf& (0+255),w,b
 15074  00072A  1772               	andwf	(??_sprintf+2)& (0+255),f,b
 15075  00072C  5171               	movf	(??_sprintf+1)& (0+255),w,b
 15076  00072E  1773               	andwf	(??_sprintf+3)& (0+255),f,b
 15077  000730  0E80               	movlw	128
 15078  000732  1972               	xorwf	(??_sprintf+2)& (0+255),w,b
 15079  000734  E11B               	bnz	l1394
 15080  000736  0E08               	movlw	8
 15081  000738  1973               	xorwf	(??_sprintf+3)& (0+255),w,b
 15082  00073A  A4D8               	btfss	status,2,c
 15083  00073C  D08F               	goto	l11081
 15084                           
 15085                           ; BSR set to: 0
 15086                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 15087  00073E  C064  FFD9         	movff	sprintf@sp,fsr2l
 15088  000742  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 15089  000746  0E30               	movlw	48
 15090  000748  6EDF               	movwf	indf2,c
 15091                           
 15092                           ; BSR set to: 0
 15093  00074A  4B64               	infsnz	sprintf@sp& (0+255),f,b
 15094  00074C  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 15095                           
 15096                           ; BSR set to: 0
 15097                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 15098  00074E  BB85               	btfsc	sprintf@flag& (0+255),5,b
 15099  000750  D003               	goto	l11053
 15100                           
 15101                           ; BSR set to: 0
 15102  000752  6B78               	clrf	(_sprintf$3720+1)& (0+255),b
 15103  000754  0E78               	movlw	120
 15104  000756  D002               	goto	L20
 15105  000758                     l11053:
 15106                           
 15107                           ; BSR set to: 0
 15108  000758  6B78               	clrf	(_sprintf$3720+1)& (0+255),b
 15109  00075A  0E58               	movlw	88
 15110  00075C                     L20:
 15111  00075C  6F77               	movwf	_sprintf$3720& (0+255),b
 15112                           
 15113                           ; BSR set to: 0
 15114  00075E  C064  FFD9         	movff	sprintf@sp,fsr2l
 15115  000762  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 15116  000766  C077  FFDF         	movff	_sprintf$3720,indf2
 15117  00076A  D7D3               	goto	l11041
 15118  00076C                     l1394:
 15119                           
 15120                           ; BSR set to: 0
 15121                           ;doprnt.c: 1466: }
 15122                           ;doprnt.c: 1469: }
 15123                           ;doprnt.c: 1474: while(prec--) {
 15124  00076C  D077               	goto	l11081
 15125  00076E                     l11059:
 15126                           
 15127                           ; BSR set to: 0
 15128                           ;doprnt.c: 1486: case 0xC0:
 15129                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 15130  00076E  5181               	movf	sprintf@prec& (0+255),w,b
 15131  000770  0D02               	mullw	2
 15132  000772  0E1B               	movlw	low _dpowers
 15133  000774  24F3               	addwf	prodl,w,c
 15134  000776  6EF6               	movwf	tblptrl,c
 15135  000778  0EFE               	movlw	high _dpowers
 15136  00077A  20F4               	addwfc	prodh,w,c
 15137  00077C  6EF7               	movwf	tblptrh,c
 15138  00077E                     	if	0	;There are less than 3 active tblptr bytes
 15139  00077E                     	endif
 15140  00077E  0009               	tblrd		*+
 15141  000780  CFF5 F01F          	movff	tablat,___lwdiv@divisor
 15142  000784  000A               	tblrd		*-
 15143  000786  CFF5 F020          	movff	tablat,___lwdiv@divisor+1
 15144  00078A  C07F  F01D         	movff	sprintf@val,___lwdiv@dividend
 15145  00078E  C080  F01E         	movff	sprintf@val+1,___lwdiv@dividend+1
 15146  000792  ECF2  F017         	call	___lwdiv	;wreg free
 15147  000796  C01D  F060         	movff	?___lwdiv,___lwmod@dividend
 15148  00079A  C01E  F061         	movff	?___lwdiv+1,___lwmod@dividend+1
 15149  00079E  6B63               	clrf	(___lwmod@divisor+1)& (0+255),b
 15150  0007A0  0E0A               	movlw	10
 15151  0007A2  6F62               	movwf	___lwmod@divisor& (0+255),b
 15152  0007A4  ECD9  F018         	call	___lwmod	;wreg free
 15153  0007A8  5160               	movf	?___lwmod& (0+255),w,b
 15154  0007AA  D045               	goto	L21
 15155  0007AC                     l11061:
 15156                           
 15157                           ; BSR set to: 0
 15158                           ;doprnt.c: 1499: {
 15159                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 15160  0007AC  C07F  F01D         	movff	sprintf@val,___lwdiv@dividend
 15161  0007B0  C080  F01E         	movff	sprintf@val+1,___lwdiv@dividend+1
 15162  0007B4  5181               	movf	sprintf@prec& (0+255),w,b
 15163  0007B6  0D02               	mullw	2
 15164  0007B8  0E25               	movlw	low _hexpowers
 15165  0007BA  24F3               	addwf	prodl,w,c
 15166  0007BC  6EF6               	movwf	tblptrl,c
 15167  0007BE  0EFE               	movlw	high _hexpowers
 15168  0007C0  20F4               	addwfc	prodh,w,c
 15169  0007C2  6EF7               	movwf	tblptrh,c
 15170  0007C4                     	if	0	;There are less than 3 active tblptr bytes
 15171  0007C4                     	endif
 15172  0007C4  0009               	tblrd		*+
 15173  0007C6  CFF5 F01F          	movff	tablat,___lwdiv@divisor
 15174  0007CA  000A               	tblrd		*-
 15175  0007CC  CFF5 F020          	movff	tablat,___lwdiv@divisor+1
 15176  0007D0  ECF2  F017         	call	___lwdiv	;wreg free
 15177  0007D4  501D               	movf	?___lwdiv,w,c
 15178  0007D6  0B0F               	andlw	15
 15179  0007D8  6F74               	movwf	sprintf@idx& (0+255),b
 15180                           
 15181                           ; BSR set to: 0
 15182                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 15183  0007DA  BB85               	btfsc	sprintf@flag& (0+255),5,b
 15184  0007DC  D004               	goto	l11067
 15185                           
 15186                           ; BSR set to: 0
 15187  0007DE  0E6F               	movlw	low STR_22
 15188  0007E0  6F79               	movwf	_sprintf$3726& (0+255),b
 15189  0007E2  0EFF               	movlw	high STR_22
 15190  0007E4  D003               	goto	L22
 15191  0007E6                     l11067:
 15192                           
 15193                           ; BSR set to: 0
 15194  0007E6  0E5E               	movlw	low STR_21
 15195  0007E8  6F79               	movwf	_sprintf$3726& (0+255),b
 15196  0007EA  0EFF               	movlw	high STR_21
 15197  0007EC                     L22:
 15198  0007EC  6F7A               	movwf	(_sprintf$3726+1)& (0+255),b
 15199                           
 15200                           ; BSR set to: 0
 15201  0007EE  5174               	movf	sprintf@idx& (0+255),w,b
 15202  0007F0  2579               	addwf	_sprintf$3726& (0+255),w,b
 15203  0007F2  6F70               	movwf	??_sprintf& (0+255),b
 15204  0007F4  0E00               	movlw	0
 15205  0007F6  217A               	addwfc	(_sprintf$3726+1)& (0+255),w,b
 15206  0007F8  6F71               	movwf	(??_sprintf+1)& (0+255),b
 15207  0007FA  C070  FFF6         	movff	??_sprintf,tblptrl
 15208  0007FE  C071  FFF7         	movff	??_sprintf+1,tblptrh
 15209  000802                     	if	0	;tblptru may be non-zero
 15210  000802                     	endif
 15211  000802                     	if	0	;tblptru may be non-zero
 15212  000802                     	endif
 15213  000802  0008               	tblrd		*
 15214  000804  CFF5 F084          	movff	tablat,sprintf@c
 15215                           
 15216                           ;doprnt.c: 1508: }
 15217                           ;doprnt.c: 1510: break;
 15218  000808  D022               	goto	l11077
 15219  00080A                     l11071:
 15220                           
 15221                           ; BSR set to: 0
 15222                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 15223  00080A  C07F  F01D         	movff	sprintf@val,___lwdiv@dividend
 15224  00080E  C080  F01E         	movff	sprintf@val+1,___lwdiv@dividend+1
 15225  000812  5181               	movf	sprintf@prec& (0+255),w,b
 15226  000814  0D02               	mullw	2
 15227  000816  0E0F               	movlw	low _octpowers
 15228  000818  24F3               	addwf	prodl,w,c
 15229  00081A  6EF6               	movwf	tblptrl,c
 15230  00081C  0EFE               	movlw	high _octpowers
 15231  00081E  20F4               	addwfc	prodh,w,c
 15232  000820  6EF7               	movwf	tblptrh,c
 15233  000822                     	if	0	;There are less than 3 active tblptr bytes
 15234  000822                     	endif
 15235  000822  0009               	tblrd		*+
 15236  000824  CFF5 F01F          	movff	tablat,___lwdiv@divisor
 15237  000828  000A               	tblrd		*-
 15238  00082A  CFF5 F020          	movff	tablat,___lwdiv@divisor+1
 15239  00082E  ECF2  F017         	call	___lwdiv	;wreg free
 15240  000832  501D               	movf	?___lwdiv,w,c
 15241  000834  0B07               	andlw	7
 15242  000836                     L21:
 15243  000836  0F30               	addlw	48
 15244  000838  6F84               	movwf	sprintf@c& (0+255),b
 15245                           
 15246                           ;doprnt.c: 1520: break;
 15247  00083A  D009               	goto	l11077
 15248  00083C                     l11075:
 15249                           
 15250                           ; BSR set to: 0
 15251  00083C  5185               	movf	sprintf@flag& (0+255),w,b
 15252  00083E  0BC0               	andlw	192
 15253                           
 15254                           ; Switch size 1, requested type "speed"
 15255                           ; Number of cases is 4, Range of values is 0 to 192
 15256                           ; switch strategies available:
 15257                           ; Name         Instructions Cycles
 15258                           ; simple_byte           13     7 (average)
 15259                           ;	Chosen strategy is simple_byte
 15260  000840  E096               	bz	l11059
 15261  000842  0A40               	xorlw	64	; case 64
 15262  000844  E0E2               	bz	l11071
 15263  000846  0AC0               	xorlw	192	; case 128
 15264  000848  E0B1               	bz	l11061
 15265  00084A  0A40               	xorlw	64	; case 192
 15266  00084C  E090               	bz	l11059
 15267  00084E                     l11077:
 15268                           
 15269                           ; BSR set to: 0
 15270                           ;doprnt.c: 1524: ((*sp++ = (c)));
 15271  00084E  C064  FFD9         	movff	sprintf@sp,fsr2l
 15272  000852  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 15273  000856  C084  FFDF         	movff	sprintf@c,indf2
 15274  00085A  D75B               	goto	l11041
 15275  00085C                     l11081:
 15276                           
 15277                           ; BSR set to: 0
 15278  00085C  0781               	decf	sprintf@prec& (0+255),f,b
 15279  00085E  2981               	incf	sprintf@prec& (0+255),w,b
 15280  000860  E1ED               	bnz	l11075
 15281                           
 15282                           ; BSR set to: 0
 15283                           ;doprnt.c: 1525: }
 15284                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 15285  000862  B785               	btfsc	sprintf@flag& (0+255),3,b
 15286                           
 15287                           ; BSR set to: 0
 15288  000864  BF83               	btfsc	(sprintf@width+1)& (0+255),7,b
 15289  000866  D012               	goto	l11091
 15290  000868  5183               	movf	(sprintf@width+1)& (0+255),w,b
 15291  00086A  E102               	bnz	u11310
 15292  00086C  0582               	decf	sprintf@width& (0+255),w,b
 15293  00086E  E30E               	bnc	l11091
 15294  000870                     u11310:
 15295  000870                     l11085:
 15296                           
 15297                           ; BSR set to: 0
 15298                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 15299  000870  C064  FFD9         	movff	sprintf@sp,fsr2l
 15300  000874  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 15301  000878  0E20               	movlw	32
 15302  00087A  6EDF               	movwf	indf2,c
 15303                           
 15304                           ; BSR set to: 0
 15305  00087C  4B64               	infsnz	sprintf@sp& (0+255),f,b
 15306  00087E  2B65               	incf	(sprintf@sp+1)& (0+255),f,b
 15307                           
 15308                           ; BSR set to: 0
 15309                           ;doprnt.c: 1531: while(--width);
 15310  000880  0782               	decf	sprintf@width& (0+255),f,b
 15311  000882  A0D8               	btfss	status,0,c
 15312  000884  0783               	decf	(sprintf@width+1)& (0+255),f,b
 15313  000886  5182               	movf	sprintf@width& (0+255),w,b
 15314  000888  1183               	iorwf	(sprintf@width+1)& (0+255),w,b
 15315  00088A  E1F2               	bnz	l11085
 15316  00088C                     l11091:
 15317                           
 15318                           ; BSR set to: 0
 15319  00088C  C066  FFF6         	movff	sprintf@f,tblptrl
 15320  000890  C067  FFF7         	movff	sprintf@f+1,tblptrh
 15321  000894  4B66               	infsnz	sprintf@f& (0+255),f,b
 15322  000896  2B67               	incf	(sprintf@f+1)& (0+255),f,b
 15323  000898                     	if	0	;tblptru may be non-zero
 15324  000898                     	endif
 15325  000898                     	if	0	;tblptru may be non-zero
 15326  000898                     	endif
 15327  000898  0008               	tblrd		*
 15328  00089A  CFF5 F084          	movff	tablat,sprintf@c
 15329  00089E  5184               	movf	sprintf@c& (0+255),w,b
 15330  0008A0  E001 D477          	bnz	l10769
 15331  0008A4                     l11093:
 15332                           
 15333                           ; BSR set to: 0
 15334                           ;doprnt.c: 1538: *sp = 0;
 15335  0008A4  C064  FFD9         	movff	sprintf@sp,fsr2l
 15336  0008A8  C065  FFDA         	movff	sprintf@sp+1,fsr2h
 15337  0008AC  0E00               	movlw	0
 15338  0008AE  6ADF               	clrf	indf2,c
 15339                           
 15340                           ; BSR set to: 0
 15341  0008B0  0012               	return		;funcret
 15342  0008B2                     __end_of_sprintf:
 15343                           	opt stack 0
 15344                           tblptru	equ	0xFF8
 15345                           tblptrh	equ	0xFF7
 15346                           tblptrl	equ	0xFF6
 15347                           tablat	equ	0xFF5
 15348                           prodh	equ	0xFF4
 15349                           prodl	equ	0xFF3
 15350                           intcon	equ	0xFF2
 15351                           intcon2	equ	0xFF1
 15352                           intcon3	equ	0xFF0
 15353                           postinc0	equ	0xFEE
 15354                           plusw0	equ	0xFEB
 15355                           wreg	equ	0xFE8
 15356                           indf1	equ	0xFE7
 15357                           postinc1	equ	0xFE6
 15358                           fsr1h	equ	0xFE2
 15359                           fsr1l	equ	0xFE1
 15360                           indf2	equ	0xFDF
 15361                           postinc2	equ	0xFDE
 15362                           postdec2	equ	0xFDD
 15363                           plusw2	equ	0xFDB
 15364                           fsr2h	equ	0xFDA
 15365                           fsr2l	equ	0xFD9
 15366                           status	equ	0xFD8
 15367                           
 15368 ;; *************** function _isdigit *****************
 15369 ;; Defined at:
 15370 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\isdigit.c"
 15371 ;; Parameters:    Size  Location     Type
 15372 ;;  c               1    wreg     unsigned char 
 15373 ;; Auto vars:     Size  Location     Type
 15374 ;;  c               1   30[COMRAM] unsigned char 
 15375 ;; Return value:  Size  Location     Type
 15376 ;;		None               void
 15377 ;; Registers used:
 15378 ;;		wreg, status,2, status,0
 15379 ;; Tracked objects:
 15380 ;;		On entry : F/0
 15381 ;;		On exit  : F/0
 15382 ;;		Unchanged: F/0
 15383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15387 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15388 ;;Total ram usage:        3 bytes
 15389 ;; Hardware stack levels used:    1
 15390 ;; Hardware stack levels required when called:    4
 15391 ;; This function calls:
 15392 ;;		Nothing
 15393 ;; This function is called by:
 15394 ;;		_sprintf
 15395 ;; This function uses a non-reentrant model
 15396 ;;
 15397                           
 15398                           	psect	text63
 15399  0034E4                     __ptext63:
 15400                           	opt stack 0
 15401  0034E4                     _isdigit:
 15402                           	opt stack 23
 15403                           
 15404                           ; BSR set to: 0
 15405                           ;incstack = 0
 15406                           ;isdigit@c stored from wreg
 15407  0034E4  6E1F               	movwf	isdigit@c,c
 15408                           
 15409                           ; BSR set to: 0
 15410  0034E6  6A1E               	clrf	_isdigit$4005,c
 15411                           
 15412                           ; BSR set to: 0
 15413  0034E8  0E3A               	movlw	58
 15414  0034EA  601F               	cpfslt	isdigit@c,c
 15415  0034EC  D005               	goto	l10659
 15416                           
 15417                           ; BSR set to: 0
 15418  0034EE  0E2F               	movlw	47
 15419  0034F0  641F               	cpfsgt	isdigit@c,c
 15420  0034F2  D002               	goto	l10659
 15421                           
 15422                           ; BSR set to: 0
 15423  0034F4  0E01               	movlw	1
 15424  0034F6  6E1E               	movwf	_isdigit$4005,c
 15425  0034F8                     l10659:
 15426                           
 15427                           ; BSR set to: 0
 15428  0034F8  C01E  F01D         	movff	_isdigit$4005,??_isdigit
 15429  0034FC  301D               	rrcf	??_isdigit,w,c
 15430                           
 15431                           ; BSR set to: 0
 15432  0034FE  0012               	return		;funcret
 15433  003500                     __end_of_isdigit:
 15434                           	opt stack 0
 15435                           tblptru	equ	0xFF8
 15436                           tblptrh	equ	0xFF7
 15437                           tblptrl	equ	0xFF6
 15438                           tablat	equ	0xFF5
 15439                           prodh	equ	0xFF4
 15440                           prodl	equ	0xFF3
 15441                           intcon	equ	0xFF2
 15442                           intcon2	equ	0xFF1
 15443                           intcon3	equ	0xFF0
 15444                           postinc0	equ	0xFEE
 15445                           plusw0	equ	0xFEB
 15446                           wreg	equ	0xFE8
 15447                           indf1	equ	0xFE7
 15448                           postinc1	equ	0xFE6
 15449                           fsr1h	equ	0xFE2
 15450                           fsr1l	equ	0xFE1
 15451                           indf2	equ	0xFDF
 15452                           postinc2	equ	0xFDE
 15453                           postdec2	equ	0xFDD
 15454                           plusw2	equ	0xFDB
 15455                           fsr2h	equ	0xFDA
 15456                           fsr2l	equ	0xFD9
 15457                           status	equ	0xFD8
 15458                           
 15459 ;; *************** function ___wmul *****************
 15460 ;; Defined at:
 15461 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
 15462 ;; Parameters:    Size  Location     Type
 15463 ;;  multiplier      2   28[COMRAM] unsigned int 
 15464 ;;  multiplicand    2   30[COMRAM] unsigned int 
 15465 ;; Auto vars:     Size  Location     Type
 15466 ;;  product         2   32[COMRAM] unsigned int 
 15467 ;; Return value:  Size  Location     Type
 15468 ;;                  2   28[COMRAM] unsigned int 
 15469 ;; Registers used:
 15470 ;;		wreg, status,2, status,0, prodl, prodh
 15471 ;; Tracked objects:
 15472 ;;		On entry : F/0
 15473 ;;		On exit  : F/0
 15474 ;;		Unchanged: F/0
 15475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15476 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15477 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15479 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15480 ;;Total ram usage:        6 bytes
 15481 ;; Hardware stack levels used:    1
 15482 ;; Hardware stack levels required when called:    4
 15483 ;; This function calls:
 15484 ;;		Nothing
 15485 ;; This function is called by:
 15486 ;;		_sprintf
 15487 ;; This function uses a non-reentrant model
 15488 ;;
 15489                           
 15490                           	psect	text64
 15491  003422                     __ptext64:
 15492                           	opt stack 0
 15493  003422                     ___wmul:
 15494                           	opt stack 23
 15495                           
 15496                           ; BSR set to: 0
 15497                           
 15498                           ; BSR set to: 0
 15499                           ;incstack = 0
 15500  003422  501D               	movf	___wmul@multiplier,w,c
 15501  003424  021F               	mulwf	___wmul@multiplicand,c
 15502  003426  CFF3 F021          	movff	prodl,___wmul@product
 15503  00342A  CFF4 F022          	movff	prodh,___wmul@product+1
 15504  00342E  501D               	movf	___wmul@multiplier,w,c
 15505  003430  0220               	mulwf	___wmul@multiplicand+1,c
 15506  003432  50F3               	movf	prodl,w,c
 15507  003434  2622               	addwf	___wmul@product+1,f,c
 15508  003436  501E               	movf	___wmul@multiplier+1,w,c
 15509  003438  021F               	mulwf	___wmul@multiplicand,c
 15510  00343A  50F3               	movf	prodl,w,c
 15511  00343C  2622               	addwf	___wmul@product+1,f,c
 15512                           
 15513                           ; BSR set to: 0
 15514  00343E  C021  F01D         	movff	___wmul@product,?___wmul
 15515  003442  C022  F01E         	movff	___wmul@product+1,?___wmul+1
 15516                           
 15517                           ; BSR set to: 0
 15518  003446  0012               	return		;funcret
 15519  003448                     __end_of___wmul:
 15520                           	opt stack 0
 15521                           tblptru	equ	0xFF8
 15522                           tblptrh	equ	0xFF7
 15523                           tblptrl	equ	0xFF6
 15524                           tablat	equ	0xFF5
 15525                           prodh	equ	0xFF4
 15526                           prodl	equ	0xFF3
 15527                           intcon	equ	0xFF2
 15528                           intcon2	equ	0xFF1
 15529                           intcon3	equ	0xFF0
 15530                           postinc0	equ	0xFEE
 15531                           plusw0	equ	0xFEB
 15532                           wreg	equ	0xFE8
 15533                           indf1	equ	0xFE7
 15534                           postinc1	equ	0xFE6
 15535                           fsr1h	equ	0xFE2
 15536                           fsr1l	equ	0xFE1
 15537                           indf2	equ	0xFDF
 15538                           postinc2	equ	0xFDE
 15539                           postdec2	equ	0xFDD
 15540                           plusw2	equ	0xFDB
 15541                           fsr2h	equ	0xFDA
 15542                           fsr2l	equ	0xFD9
 15543                           status	equ	0xFD8
 15544                           
 15545 ;; *************** function ___lwmod *****************
 15546 ;; Defined at:
 15547 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
 15548 ;; Parameters:    Size  Location     Type
 15549 ;;  dividend        2    0[BANK0 ] unsigned int 
 15550 ;;  divisor         2    2[BANK0 ] unsigned int 
 15551 ;; Auto vars:     Size  Location     Type
 15552 ;;  counter         1   35[COMRAM] unsigned char 
 15553 ;; Return value:  Size  Location     Type
 15554 ;;                  2    0[BANK0 ] unsigned int 
 15555 ;; Registers used:
 15556 ;;		wreg, status,2, status,0
 15557 ;; Tracked objects:
 15558 ;;		On entry : F/0
 15559 ;;		On exit  : F/0
 15560 ;;		Unchanged: 0/0
 15561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15562 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15563 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15565 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15566 ;;Total ram usage:        5 bytes
 15567 ;; Hardware stack levels used:    1
 15568 ;; Hardware stack levels required when called:    4
 15569 ;; This function calls:
 15570 ;;		Nothing
 15571 ;; This function is called by:
 15572 ;;		_sprintf
 15573 ;; This function uses a non-reentrant model
 15574 ;;
 15575                           
 15576                           	psect	text65
 15577  0031B2                     __ptext65:
 15578                           	opt stack 0
 15579  0031B2                     ___lwmod:
 15580                           	opt stack 23
 15581                           
 15582                           ; BSR set to: 0
 15583                           
 15584                           ; BSR set to: 0
 15585                           ;incstack = 0
 15586  0031B2  5162               	movf	___lwmod@divisor& (0+255),w,b
 15587  0031B4  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 15588  0031B6  E017               	bz	l1950
 15589                           
 15590                           ; BSR set to: 0
 15591  0031B8  0E01               	movlw	1
 15592  0031BA  6E24               	movwf	___lwmod@counter,c
 15593  0031BC  D004               	goto	l10697
 15594  0031BE                     l10695:
 15595                           
 15596                           ; BSR set to: 0
 15597  0031BE  90D8               	bcf	status,0,c
 15598  0031C0  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 15599  0031C2  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 15600  0031C4  2A24               	incf	___lwmod@counter,f,c
 15601  0031C6                     l10697:
 15602                           
 15603                           ; BSR set to: 0
 15604  0031C6  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 15605  0031C8  D7FA               	goto	l10695
 15606  0031CA                     l10699:
 15607                           
 15608                           ; BSR set to: 0
 15609  0031CA  5162               	movf	___lwmod@divisor& (0+255),w,b
 15610  0031CC  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 15611  0031CE  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15612  0031D0  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 15613  0031D2  E304               	bnc	l10703
 15614                           
 15615                           ; BSR set to: 0
 15616  0031D4  5162               	movf	___lwmod@divisor& (0+255),w,b
 15617  0031D6  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 15618  0031D8  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15619  0031DA  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 15620  0031DC                     l10703:
 15621                           
 15622                           ; BSR set to: 0
 15623  0031DC  90D8               	bcf	status,0,c
 15624  0031DE  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 15625  0031E0  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 15626                           
 15627                           ; BSR set to: 0
 15628  0031E2  2E24               	decfsz	___lwmod@counter,f,c
 15629  0031E4  D7F2               	goto	l10699
 15630  0031E6                     l1950:
 15631                           
 15632                           ; BSR set to: 0
 15633  0031E6  C060  F060         	movff	___lwmod@dividend,?___lwmod
 15634  0031EA  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 15635                           
 15636                           ; BSR set to: 0
 15637  0031EE  0012               	return		;funcret
 15638  0031F0                     __end_of___lwmod:
 15639                           	opt stack 0
 15640                           tblptru	equ	0xFF8
 15641                           tblptrh	equ	0xFF7
 15642                           tblptrl	equ	0xFF6
 15643                           tablat	equ	0xFF5
 15644                           prodh	equ	0xFF4
 15645                           prodl	equ	0xFF3
 15646                           intcon	equ	0xFF2
 15647                           intcon2	equ	0xFF1
 15648                           intcon3	equ	0xFF0
 15649                           postinc0	equ	0xFEE
 15650                           plusw0	equ	0xFEB
 15651                           wreg	equ	0xFE8
 15652                           indf1	equ	0xFE7
 15653                           postinc1	equ	0xFE6
 15654                           fsr1h	equ	0xFE2
 15655                           fsr1l	equ	0xFE1
 15656                           indf2	equ	0xFDF
 15657                           postinc2	equ	0xFDE
 15658                           postdec2	equ	0xFDD
 15659                           plusw2	equ	0xFDB
 15660                           fsr2h	equ	0xFDA
 15661                           fsr2l	equ	0xFD9
 15662                           status	equ	0xFD8
 15663                           
 15664 ;; *************** function ___lwdiv *****************
 15665 ;; Defined at:
 15666 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
 15667 ;; Parameters:    Size  Location     Type
 15668 ;;  dividend        2   28[COMRAM] unsigned int 
 15669 ;;  divisor         2   30[COMRAM] unsigned int 
 15670 ;; Auto vars:     Size  Location     Type
 15671 ;;  quotient        2   33[COMRAM] unsigned int 
 15672 ;;  counter         1   32[COMRAM] unsigned char 
 15673 ;; Return value:  Size  Location     Type
 15674 ;;                  2   28[COMRAM] unsigned int 
 15675 ;; Registers used:
 15676 ;;		wreg, status,2, status,0
 15677 ;; Tracked objects:
 15678 ;;		On entry : F/0
 15679 ;;		On exit  : F/0
 15680 ;;		Unchanged: F/0
 15681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15683 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15685 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15686 ;;Total ram usage:        7 bytes
 15687 ;; Hardware stack levels used:    1
 15688 ;; Hardware stack levels required when called:    4
 15689 ;; This function calls:
 15690 ;;		Nothing
 15691 ;; This function is called by:
 15692 ;;		_sprintf
 15693 ;; This function uses a non-reentrant model
 15694 ;;
 15695                           
 15696                           	psect	text66
 15697  002FE4                     __ptext66:
 15698                           	opt stack 0
 15699  002FE4                     ___lwdiv:
 15700                           	opt stack 23
 15701                           
 15702                           ; BSR set to: 0
 15703                           
 15704                           ; BSR set to: 0
 15705                           ;incstack = 0
 15706  002FE4  6A22               	clrf	___lwdiv@quotient,c
 15707  002FE6  6A23               	clrf	___lwdiv@quotient+1,c
 15708                           
 15709                           ; BSR set to: 0
 15710  002FE8  501F               	movf	___lwdiv@divisor,w,c
 15711  002FEA  1020               	iorwf	___lwdiv@divisor+1,w,c
 15712  002FEC  E01B               	bz	l1940
 15713                           
 15714                           ; BSR set to: 0
 15715  002FEE  0E01               	movlw	1
 15716  002FF0  6E21               	movwf	___lwdiv@counter,c
 15717  002FF2  D004               	goto	l10677
 15718  002FF4                     l10675:
 15719                           
 15720                           ; BSR set to: 0
 15721  002FF4  90D8               	bcf	status,0,c
 15722  002FF6  361F               	rlcf	___lwdiv@divisor,f,c
 15723  002FF8  3620               	rlcf	___lwdiv@divisor+1,f,c
 15724  002FFA  2A21               	incf	___lwdiv@counter,f,c
 15725  002FFC                     l10677:
 15726                           
 15727                           ; BSR set to: 0
 15728  002FFC  AE20               	btfss	___lwdiv@divisor+1,7,c
 15729  002FFE  D7FA               	goto	l10675
 15730  003000                     l10679:
 15731                           
 15732                           ; BSR set to: 0
 15733  003000  90D8               	bcf	status,0,c
 15734  003002  3622               	rlcf	___lwdiv@quotient,f,c
 15735  003004  3623               	rlcf	___lwdiv@quotient+1,f,c
 15736                           
 15737                           ; BSR set to: 0
 15738  003006  501F               	movf	___lwdiv@divisor,w,c
 15739  003008  5C1D               	subwf	___lwdiv@dividend,w,c
 15740  00300A  5020               	movf	___lwdiv@divisor+1,w,c
 15741  00300C  581E               	subwfb	___lwdiv@dividend+1,w,c
 15742  00300E  E305               	bnc	l10687
 15743                           
 15744                           ; BSR set to: 0
 15745  003010  501F               	movf	___lwdiv@divisor,w,c
 15746  003012  5E1D               	subwf	___lwdiv@dividend,f,c
 15747  003014  5020               	movf	___lwdiv@divisor+1,w,c
 15748  003016  5A1E               	subwfb	___lwdiv@dividend+1,f,c
 15749                           
 15750                           ; BSR set to: 0
 15751  003018  8022               	bsf	___lwdiv@quotient,0,c
 15752  00301A                     l10687:
 15753                           
 15754                           ; BSR set to: 0
 15755  00301A  90D8               	bcf	status,0,c
 15756  00301C  3220               	rrcf	___lwdiv@divisor+1,f,c
 15757  00301E  321F               	rrcf	___lwdiv@divisor,f,c
 15758                           
 15759                           ; BSR set to: 0
 15760  003020  2E21               	decfsz	___lwdiv@counter,f,c
 15761  003022  D7EE               	goto	l10679
 15762  003024                     l1940:
 15763                           
 15764                           ; BSR set to: 0
 15765  003024  C022  F01D         	movff	___lwdiv@quotient,?___lwdiv
 15766  003028  C023  F01E         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15767                           
 15768                           ; BSR set to: 0
 15769  00302C  0012               	return		;funcret
 15770  00302E                     __end_of___lwdiv:
 15771                           	opt stack 0
 15772                           tblptru	equ	0xFF8
 15773                           tblptrh	equ	0xFF7
 15774                           tblptrl	equ	0xFF6
 15775                           tablat	equ	0xFF5
 15776                           prodh	equ	0xFF4
 15777                           prodl	equ	0xFF3
 15778                           intcon	equ	0xFF2
 15779                           intcon2	equ	0xFF1
 15780                           intcon3	equ	0xFF0
 15781                           postinc0	equ	0xFEE
 15782                           plusw0	equ	0xFEB
 15783                           wreg	equ	0xFE8
 15784                           indf1	equ	0xFE7
 15785                           postinc1	equ	0xFE6
 15786                           fsr1h	equ	0xFE2
 15787                           fsr1l	equ	0xFE1
 15788                           indf2	equ	0xFDF
 15789                           postinc2	equ	0xFDE
 15790                           postdec2	equ	0xFDD
 15791                           plusw2	equ	0xFDB
 15792                           fsr2h	equ	0xFDA
 15793                           fsr2l	equ	0xFD9
 15794                           status	equ	0xFD8
 15795                           
 15796 ;; *************** function _LCD_Update *****************
 15797 ;; Defined at:
 15798 ;;		line 239 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 15799 ;; Parameters:    Size  Location     Type
 15800 ;;		None
 15801 ;; Auto vars:     Size  Location     Type
 15802 ;;		None
 15803 ;; Return value:  Size  Location     Type
 15804 ;;		None               void
 15805 ;; Registers used:
 15806 ;;		wreg, status,2, cstack
 15807 ;; Tracked objects:
 15808 ;;		On entry : F/0
 15809 ;;		On exit  : F/0
 15810 ;;		Unchanged: 0/0
 15811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15816 ;;Total ram usage:        0 bytes
 15817 ;; Hardware stack levels used:    1
 15818 ;; Hardware stack levels required when called:    5
 15819 ;; This function calls:
 15820 ;;		_I2CWrite
 15821 ;; This function is called by:
 15822 ;;		_LCDTRXCount
 15823 ;;		_LCDDisplay
 15824 ;;		_run_star_demo
 15825 ;; This function uses a non-reentrant model
 15826 ;;
 15827                           
 15828                           	psect	text67
 15829  003536                     __ptext67:
 15830                           	opt stack 0
 15831  003536                     _LCD_Update:
 15832                           	opt stack 23
 15833                           
 15834                           ; BSR set to: 0
 15835                           ;lcd.c: 242: LCDCommand[0] = 0x3E<<1;
 15836                           
 15837                           ; BSR set to: 0
 15838                           ;incstack = 0
 15839  003536  0E7C               	movlw	124
 15840  003538  6FC7               	movwf	_LCDCommand& (0+255),b
 15841                           
 15842                           ;lcd.c: 243: LCDCommand[1] = 0x32;
 15843  00353A  0E32               	movlw	50
 15844  00353C  6FC8               	movwf	(_LCDCommand+1)& (0+255),b
 15845                           
 15846                           ; BSR set to: 0
 15847                           ;lcd.c: 244: LCDCommand[2] = 0x00;
 15848  00353E  6BC9               	clrf	(_LCDCommand+2)& (0+255),b
 15849                           
 15850                           ;lcd.c: 245: LCDCommand[3] = 32;
 15851  003540  0E20               	movlw	32
 15852  003542  6FCA               	movwf	(_LCDCommand+3)& (0+255),b
 15853                           
 15854                           ; BSR set to: 0
 15855                           ;lcd.c: 247: I2CWrite(4, 32);
 15856  003544  0E20               	movlw	32
 15857  003546  6E1D               	movwf	I2CWrite@BufferLen,c
 15858  003548  0E04               	movlw	4
 15859  00354A  ECA8  F01A         	call	_I2CWrite
 15860                           
 15861                           ; BSR set to: 0
 15862  00354E  0012               	return		;funcret
 15863  003550                     __end_of_LCD_Update:
 15864                           	opt stack 0
 15865                           tblptru	equ	0xFF8
 15866                           tblptrh	equ	0xFF7
 15867                           tblptrl	equ	0xFF6
 15868                           tablat	equ	0xFF5
 15869                           prodh	equ	0xFF4
 15870                           prodl	equ	0xFF3
 15871                           intcon	equ	0xFF2
 15872                           intcon2	equ	0xFF1
 15873                           intcon3	equ	0xFF0
 15874                           postinc0	equ	0xFEE
 15875                           plusw0	equ	0xFEB
 15876                           wreg	equ	0xFE8
 15877                           indf1	equ	0xFE7
 15878                           postinc1	equ	0xFE6
 15879                           fsr1h	equ	0xFE2
 15880                           fsr1l	equ	0xFE1
 15881                           indf2	equ	0xFDF
 15882                           postinc2	equ	0xFDE
 15883                           postdec2	equ	0xFDD
 15884                           plusw2	equ	0xFDB
 15885                           fsr2h	equ	0xFDA
 15886                           fsr2l	equ	0xFD9
 15887                           status	equ	0xFD8
 15888                           
 15889 ;; *************** function _I2CWrite *****************
 15890 ;; Defined at:
 15891 ;;		line 124 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 15892 ;; Parameters:    Size  Location     Type
 15893 ;;  Commandlen      1    wreg     unsigned char 
 15894 ;;  BufferLen       1   28[COMRAM] unsigned char 
 15895 ;; Auto vars:     Size  Location     Type
 15896 ;;  Commandlen      1   29[COMRAM] unsigned char 
 15897 ;; Return value:  Size  Location     Type
 15898 ;;		None               void
 15899 ;; Registers used:
 15900 ;;		wreg
 15901 ;; Tracked objects:
 15902 ;;		On entry : F/0
 15903 ;;		On exit  : F/0
 15904 ;;		Unchanged: F/0
 15905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15906 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15909 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15910 ;;Total ram usage:        2 bytes
 15911 ;; Hardware stack levels used:    1
 15912 ;; Hardware stack levels required when called:    4
 15913 ;; This function calls:
 15914 ;;		Nothing
 15915 ;; This function is called by:
 15916 ;;		_LCD_Initialize
 15917 ;;		_LCD_Update
 15918 ;; This function uses a non-reentrant model
 15919 ;;
 15920                           
 15921                           	psect	text68
 15922  003550                     __ptext68:
 15923                           	opt stack 0
 15924  003550                     _I2CWrite:
 15925                           	opt stack 23
 15926                           
 15927                           ; BSR set to: 0
 15928                           ;incstack = 0
 15929                           ;I2CWrite@Commandlen stored from wreg
 15930  003550  6E1E               	movwf	I2CWrite@Commandlen,c
 15931  003552                     l781:
 15932                           
 15933                           ; BSR set to: 0
 15934  003552  B471               	btfsc	3953,2,c	;volatile
 15935  003554  D7FE               	goto	l781
 15936                           
 15937                           ; BSR set to: 0
 15938                           ;lcd.c: 127: CommandPtr = 0;
 15939  003556  6A27               	clrf	_CommandPtr,c
 15940                           
 15941                           ;lcd.c: 128: TextPtr = 0;
 15942  003558  6A2B               	clrf	_TextPtr,c
 15943                           
 15944                           ; BSR set to: 0
 15945                           ;lcd.c: 129: CommandLen = Commandlen;
 15946  00355A  C01E  F026         	movff	I2CWrite@Commandlen,_CommandLen
 15947                           
 15948                           ; BSR set to: 0
 15949                           ;lcd.c: 130: TextLen = BufferLen;
 15950  00355E  C01D  F02A         	movff	I2CWrite@BufferLen,_TextLen
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;lcd.c: 131: SSP2CON2bits.SEN = 1;
 15954  003562  8071               	bsf	3953,0,c	;volatile
 15955                           
 15956                           ; BSR set to: 0
 15957  003564  0012               	return		;funcret
 15958  003566                     __end_of_I2CWrite:
 15959                           	opt stack 0
 15960                           tblptru	equ	0xFF8
 15961                           tblptrh	equ	0xFF7
 15962                           tblptrl	equ	0xFF6
 15963                           tablat	equ	0xFF5
 15964                           prodh	equ	0xFF4
 15965                           prodl	equ	0xFF3
 15966                           intcon	equ	0xFF2
 15967                           intcon2	equ	0xFF1
 15968                           intcon3	equ	0xFF0
 15969                           postinc0	equ	0xFEE
 15970                           plusw0	equ	0xFEB
 15971                           wreg	equ	0xFE8
 15972                           indf1	equ	0xFE7
 15973                           postinc1	equ	0xFE6
 15974                           fsr1h	equ	0xFE2
 15975                           fsr1l	equ	0xFE1
 15976                           indf2	equ	0xFDF
 15977                           postinc2	equ	0xFDE
 15978                           postdec2	equ	0xFDD
 15979                           plusw2	equ	0xFDB
 15980                           fsr2h	equ	0xFDA
 15981                           fsr2l	equ	0xFD9
 15982                           status	equ	0xFD8
 15983                           
 15984 ;; *************** function _LCD_Erase *****************
 15985 ;; Defined at:
 15986 ;;		line 215 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 15987 ;; Parameters:    Size  Location     Type
 15988 ;;		None
 15989 ;; Auto vars:     Size  Location     Type
 15990 ;;  i               1   28[COMRAM] unsigned char 
 15991 ;; Return value:  Size  Location     Type
 15992 ;;		None               void
 15993 ;; Registers used:
 15994 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15995 ;; Tracked objects:
 15996 ;;		On entry : 0/1
 15997 ;;		On exit  : 0/0
 15998 ;;		Unchanged: 0/0
 15999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16004 ;;Total ram usage:        1 bytes
 16005 ;; Hardware stack levels used:    1
 16006 ;; Hardware stack levels required when called:    4
 16007 ;; This function calls:
 16008 ;;		Nothing
 16009 ;; This function is called by:
 16010 ;;		_LCDTRXCount
 16011 ;;		_LCDDisplay
 16012 ;;		_run_star_demo
 16013 ;; This function uses a non-reentrant model
 16014 ;;
 16015                           
 16016                           	psect	text69
 16017  003500                     __ptext69:
 16018                           	opt stack 0
 16019  003500                     _LCD_Erase:
 16020                           	opt stack 24
 16021                           
 16022                           ;lcd.c: 217: uint8_t i;
 16023                           ;lcd.c: 219: for(i = 0; i < 32; i++)
 16024                           
 16025                           ; BSR set to: 0
 16026                           ;incstack = 0
 16027  003500  6A1D               	clrf	LCD_Erase@i,c
 16028  003502                     l10755:
 16029                           
 16030                           ;lcd.c: 220: {
 16031                           ;lcd.c: 221: LCDText[i] = ' ';
 16032  003502  0E8A               	movlw	low _LCDText
 16033  003504  241D               	addwf	LCD_Erase@i,w,c
 16034  003506  6ED9               	movwf	fsr2l,c
 16035  003508  6ADA               	clrf	fsr2h,c
 16036  00350A  0E02               	movlw	high _LCDText
 16037  00350C  22DA               	addwfc	fsr2h,f,c
 16038  00350E  0E20               	movlw	32
 16039  003510  6EDF               	movwf	indf2,c
 16040  003512  2A1D               	incf	LCD_Erase@i,f,c
 16041  003514  0E1F               	movlw	31
 16042  003516  641D               	cpfsgt	LCD_Erase@i,c
 16043  003518  D7F4               	goto	l10755
 16044  00351A  0C1F               	retlw	31
 16045  00351C                     __end_of_LCD_Erase:
 16046                           	opt stack 0
 16047                           tblptru	equ	0xFF8
 16048                           tblptrh	equ	0xFF7
 16049                           tblptrl	equ	0xFF6
 16050                           tablat	equ	0xFF5
 16051                           prodh	equ	0xFF4
 16052                           prodl	equ	0xFF3
 16053                           intcon	equ	0xFF2
 16054                           intcon2	equ	0xFF1
 16055                           intcon3	equ	0xFF0
 16056                           postinc0	equ	0xFEE
 16057                           plusw0	equ	0xFEB
 16058                           wreg	equ	0xFE8
 16059                           indf1	equ	0xFE7
 16060                           postinc1	equ	0xFE6
 16061                           fsr1h	equ	0xFE2
 16062                           fsr1l	equ	0xFE1
 16063                           indf2	equ	0xFDF
 16064                           postinc2	equ	0xFDE
 16065                           postdec2	equ	0xFDD
 16066                           plusw2	equ	0xFDB
 16067                           fsr2h	equ	0xFDA
 16068                           fsr2l	equ	0xFD9
 16069                           status	equ	0xFD8
 16070                           
 16071 ;; *************** function _DELAY_ms *****************
 16072 ;; Defined at:
 16073 ;;		line 108 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/delay.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;  ms              2   28[COMRAM] unsigned int 
 16076 ;; Auto vars:     Size  Location     Type
 16077 ;;  cyclesRequir    4   30[COMRAM] long 
 16078 ;; Return value:  Size  Location     Type
 16079 ;;		None               void
 16080 ;; Registers used:
 16081 ;;		wreg, status,2, status,0, prodl, prodh
 16082 ;; Tracked objects:
 16083 ;;		On entry : 0/F
 16084 ;;		On exit  : 0/0
 16085 ;;		Unchanged: 0/0
 16086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16088 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16089 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16090 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16091 ;;Total ram usage:       14 bytes
 16092 ;; Hardware stack levels used:    1
 16093 ;; Hardware stack levels required when called:    4
 16094 ;; This function calls:
 16095 ;;		Nothing
 16096 ;; This function is called by:
 16097 ;;		_LCD_Initialize
 16098 ;;		_LCDDisplay
 16099 ;;		_DemoOutput_Greeting
 16100 ;;		_DemoOutput_Channel
 16101 ;;		_run_star_demo
 16102 ;; This function uses a non-reentrant model
 16103 ;;
 16104                           
 16105                           	psect	text70
 16106  002384                     __ptext70:
 16107                           	opt stack 0
 16108  002384                     _DELAY_ms:
 16109                           	opt stack 24
 16110                           
 16111                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000)/4)/1000) * ms;
 16112                           
 16113                           ;incstack = 0
 16114  002384  501D               	movf	DELAY_ms@ms,w,c
 16115  002386  0100               	movlb	0	; () banked
 16116  002388  6F60               	movwf	??_DELAY_ms& (0+255),b
 16117  00238A  501E               	movf	DELAY_ms@ms+1,w,c
 16118  00238C  6F61               	movwf	(??_DELAY_ms+1)& (0+255),b
 16119  00238E  6B62               	clrf	(??_DELAY_ms+2)& (0+255),b
 16120  002390  6B63               	clrf	(??_DELAY_ms+3)& (0+255),b
 16121  002392  0ED0               	movlw	208
 16122  002394  0360               	mulwf	??_DELAY_ms& (0+255),b
 16123  002396  CFF3 F064          	movff	prodl,??_DELAY_ms+4
 16124  00239A  CFF4 F065          	movff	prodh,??_DELAY_ms+5
 16125  00239E  6B66               	clrf	(??_DELAY_ms+6)& (0+255),b
 16126  0023A0  6B67               	clrf	(??_DELAY_ms+7)& (0+255),b
 16127  0023A2  0361               	mulwf	(??_DELAY_ms+1)& (0+255),b
 16128  0023A4  50F3               	movf	prodl,w,c
 16129  0023A6  2765               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 16130  0023A8  50F4               	movf	prodh,w,c
 16131  0023AA  2366               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 16132  0023AC  0E00               	movlw	0
 16133  0023AE  2367               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 16134  0023B0  0E07               	movlw	7
 16135  0023B2  0360               	mulwf	??_DELAY_ms& (0+255),b
 16136  0023B4  50F3               	movf	prodl,w,c
 16137  0023B6  2765               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 16138  0023B8  50F4               	movf	prodh,w,c
 16139  0023BA  2366               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 16140  0023BC  0E00               	movlw	0
 16141  0023BE  2367               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 16142  0023C0  0ED0               	movlw	208
 16143  0023C2  0362               	mulwf	(??_DELAY_ms+2)& (0+255),b
 16144  0023C4  50F3               	movf	prodl,w,c
 16145  0023C6  2766               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 16146  0023C8  50F4               	movf	prodh,w,c
 16147  0023CA  2367               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 16148  0023CC  0E07               	movlw	7
 16149  0023CE  0361               	mulwf	(??_DELAY_ms+1)& (0+255),b
 16150  0023D0  50F3               	movf	prodl,w,c
 16151  0023D2  2766               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 16152  0023D4  50F4               	movf	prodh,w,c
 16153  0023D6  2367               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 16154  0023D8  0E00               	movlw	0
 16155  0023DA  0360               	mulwf	??_DELAY_ms& (0+255),b
 16156  0023DC  50F3               	movf	prodl,w,c
 16157  0023DE  2766               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 16158  0023E0  50F4               	movf	prodh,w,c
 16159  0023E2  2367               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 16160  0023E4  0ED0               	movlw	208
 16161  0023E6  0363               	mulwf	(??_DELAY_ms+3)& (0+255),b
 16162  0023E8  50F3               	movf	prodl,w,c
 16163  0023EA  2767               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 16164  0023EC  0E07               	movlw	7
 16165  0023EE  0362               	mulwf	(??_DELAY_ms+2)& (0+255),b
 16166  0023F0  50F3               	movf	prodl,w,c
 16167  0023F2  2767               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 16168  0023F4  0E00               	movlw	0
 16169  0023F6  0361               	mulwf	(??_DELAY_ms+1)& (0+255),b
 16170  0023F8  50F3               	movf	prodl,w,c
 16171  0023FA  2767               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 16172  0023FC  0E00               	movlw	0
 16173  0023FE  0360               	mulwf	??_DELAY_ms& (0+255),b
 16174  002400  50F3               	movf	prodl,w,c
 16175  002402  2767               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 16176  002404  C064  F01F         	movff	??_DELAY_ms+4,DELAY_ms@cyclesRequiredForEntireDelay
 16177  002408  C065  F020         	movff	??_DELAY_ms+5,DELAY_ms@cyclesRequiredForEntireDelay+1
 16178  00240C  C066  F021         	movff	??_DELAY_ms+6,DELAY_ms@cyclesRequiredForEntireDelay+2
 16179  002410  C067  F022         	movff	??_DELAY_ms+7,DELAY_ms@cyclesRequiredForEntireDelay+3
 16180                           
 16181                           ; BSR set to: 0
 16182                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 16183  002414  0E56               	movlw	86
 16184  002416  261F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
 16185  002418  0EFF               	movlw	255
 16186  00241A  2220               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 16187  00241C  2221               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 16188  00241E  2222               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 16189                           
 16190                           ; BSR set to: 0
 16191                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 16192  002420  BE22               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 16193  002422  0012               	return	
 16194  002424  5022               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 16195  002426  1021               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 16196  002428  1020               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 16197  00242A  E10C               	bnz	l701
 16198  00242C  0EC4               	movlw	196
 16199  00242E  5C1F               	subwf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
 16200  002430  A0D8               	btfss	status,0,c
 16201  002432  0012               	return	
 16202  002434  D007               	goto	l701
 16203  002436                     l702:
 16204                           
 16205                           ;delay.c: 128: {
 16206                           ;delay.c: 129: __nop();
 16207  002436  F000               	nop	
 16208                           
 16209                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 16210  002438  0ED9               	movlw	217
 16211  00243A  261F               	addwf	DELAY_ms@cyclesRequiredForEntireDelay,f,c
 16212  00243C  0EFF               	movlw	255
 16213  00243E  2220               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 16214  002440  2221               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 16215  002442  2222               	addwfc	DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 16216  002444                     l701:
 16217  002444  BE22               	btfsc	DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 16218  002446  0012               	return	
 16219  002448  5022               	movf	DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 16220  00244A  1021               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 16221  00244C  1020               	iorwf	DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 16222  00244E  E1F3               	bnz	l702
 16223  002450  041F               	decf	DELAY_ms@cyclesRequiredForEntireDelay,w,c
 16224  002452  B0D8               	btfsc	status,0,c
 16225  002454  D7F0               	goto	l702
 16226  002456  0012               	return		;funcret
 16227  002458                     __end_of_DELAY_ms:
 16228                           	opt stack 0
 16229                           tblptru	equ	0xFF8
 16230                           tblptrh	equ	0xFF7
 16231                           tblptrl	equ	0xFF6
 16232                           tablat	equ	0xFF5
 16233                           prodh	equ	0xFF4
 16234                           prodl	equ	0xFF3
 16235                           intcon	equ	0xFF2
 16236                           intcon2	equ	0xFF1
 16237                           intcon3	equ	0xFF0
 16238                           postinc0	equ	0xFEE
 16239                           plusw0	equ	0xFEB
 16240                           wreg	equ	0xFE8
 16241                           indf1	equ	0xFE7
 16242                           postinc1	equ	0xFE6
 16243                           fsr1h	equ	0xFE2
 16244                           fsr1l	equ	0xFE1
 16245                           indf2	equ	0xFDF
 16246                           postinc2	equ	0xFDE
 16247                           postdec2	equ	0xFDD
 16248                           plusw2	equ	0xFDB
 16249                           fsr2h	equ	0xFDA
 16250                           fsr2l	equ	0xFD9
 16251                           status	equ	0xFD8
 16252                           
 16253 ;; *************** function _high_isr *****************
 16254 ;; Defined at:
 16255 ;;		line 1852 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 16256 ;; Parameters:    Size  Location     Type
 16257 ;;		None
 16258 ;; Auto vars:     Size  Location     Type
 16259 ;;  results         1   23[COMRAM] struct _DRIVER_UINT8_UNI
 16260 ;;  RxBank          1   26[COMRAM] unsigned char 
 16261 ;;  flags           2   24[COMRAM] struct .
 16262 ;;  i               1   27[COMRAM] unsigned char 
 16263 ;; Return value:  Size  Location     Type
 16264 ;;		None               void
 16265 ;; Registers used:
 16266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16267 ;; Tracked objects:
 16268 ;;		On entry : 0/0
 16269 ;;		On exit  : 0/0
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16273 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16274 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16275 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16276 ;;Total ram usage:       14 bytes
 16277 ;; Hardware stack levels used:    1
 16278 ;; Hardware stack levels required when called:    3
 16279 ;; This function calls:
 16280 ;;		_UserInterruptHandler
 16281 ;;		i2_PHYGetLongRAMAddr
 16282 ;;		i2_PHYGetShortRAMAddr
 16283 ;;		i2_PHYSetShortRAMAddr
 16284 ;; This function is called by:
 16285 ;;		Interrupt level 2
 16286 ;; This function uses a non-reentrant model
 16287 ;;
 16288                           
 16289                           	psect	intcode
 16290  000008                     __pintcode:
 16291                           	opt stack 0
 16292  000008                     _high_isr:
 16293                           	opt stack 13
 16294                           
 16295                           ;incstack = 0
 16296  000008  CFD9 F014          	movff	fsr2l,??_high_isr+5
 16297  00000C  CFDA F015          	movff	fsr2h,??_high_isr+6
 16298  000010  CFF3 F016          	movff	prodl,??_high_isr+7
 16299  000014  CFF4 F017          	movff	prodh,??_high_isr+8
 16300                           
 16301                           ;drv_mrf_miwi_24j40.c: 1867: if (INTCON3bits.INT1IE && INTCON3bits.INT1IF)
 16302  000018  B6F0               	btfsc	intcon3,3,c	;volatile
 16303  00001A  A0F0               	btfss	intcon3,0,c	;volatile
 16304  00001C  D0A2               	goto	i2l10149
 16305                           
 16306                           ;drv_mrf_miwi_24j40.c: 1868: {
 16307                           ;drv_mrf_miwi_24j40.c: 1869: uint8_t i;
 16308                           ;drv_mrf_miwi_24j40.c: 1873: INTCON3bits.INT1IF = 0;
 16309  00001E  90F0               	bcf	intcon3,0,c	;volatile
 16310                           
 16311                           ;drv_mrf_miwi_24j40.c: 1877: {
 16312                           ;drv_mrf_miwi_24j40.c: 1878: MRF24J40_IFREG flags;
 16313                           ;drv_mrf_miwi_24j40.c: 1881: flags.Val = PHYGetShortRAMAddr((0x62));
 16314  000020  0E62               	movlw	98
 16315  000022  ECC0  F019         	call	i2_PHYGetShortRAMAddr
 16316  000026  6E19               	movwf	high_isr@flags,c
 16317                           
 16318                           ;drv_mrf_miwi_24j40.c: 1883: if (flags.bits.RF_TXIF)
 16319  000028  A019               	btfss	high_isr@flags,0,c
 16320  00002A  D00F               	goto	i2l225
 16321                           
 16322                           ;drv_mrf_miwi_24j40.c: 1884: {
 16323                           ;drv_mrf_miwi_24j40.c: 1887: MRF24J40Status.bits.TX_BUSY = 0;
 16324  00002C  9029               	bcf	_MRF24J40Status,0,c	;volatile
 16325                           
 16326                           ;drv_mrf_miwi_24j40.c: 1889: if (MRF24J40Status.bits.SEC_IF)
 16327  00002E  BC29               	btfsc	_MRF24J40Status,6,c	;volatile
 16328                           
 16329                           ;drv_mrf_miwi_24j40.c: 1890: {
 16330                           ;drv_mrf_miwi_24j40.c: 1891: MRF24J40Status.bits.SEC_IF = 0;
 16331  000030  9C29               	bcf	_MRF24J40Status,6,c	;volatile
 16332                           
 16333                           ;drv_mrf_miwi_24j40.c: 1892: }
 16334                           ;drv_mrf_miwi_24j40.c: 1894: failureCounter = 0;
 16335  000032  0100               	movlb	0	; () banked
 16336  000034  6BDA               	clrf	_failureCounter& (0+255),b	;volatile
 16337  000036  6BDB               	clrf	(_failureCounter+1)& (0+255),b	;volatile
 16338                           
 16339                           ;drv_mrf_miwi_24j40.c: 1898: if (MRF24J40Status.bits.TX_PENDING_ACK)
 16340  000038  A229               	btfss	_MRF24J40Status,1,c	;volatile
 16341  00003A  D007               	goto	i2l225
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;drv_mrf_miwi_24j40.c: 1899: {
 16345                           ;drv_mrf_miwi_24j40.c: 1900: DRIVER_UINT8_UNION results;
 16346                           ;drv_mrf_miwi_24j40.c: 1903: results.Val = PHYGetShortRAMAddr((0x48));
 16347  00003C  0E48               	movlw	72
 16348  00003E  ECC0  F019         	call	i2_PHYGetShortRAMAddr
 16349  000042  6E18               	movwf	high_isr@results,c
 16350                           
 16351                           ;drv_mrf_miwi_24j40.c: 1905: if (results.bits.b0 == 1)
 16352  000044  B018               	btfsc	high_isr@results,0,c
 16353                           
 16354                           ;drv_mrf_miwi_24j40.c: 1906: {
 16355                           ;drv_mrf_miwi_24j40.c: 1909: MRF24J40Status.bits.TX_FAIL = 1;
 16356  000046  8429               	bsf	_MRF24J40Status,2,c	;volatile
 16357                           
 16358                           ;drv_mrf_miwi_24j40.c: 1910: }
 16359                           ;drv_mrf_miwi_24j40.c: 1914: MRF24J40Status.bits.TX_PENDING_ACK = 0;
 16360  000048  9229               	bcf	_MRF24J40Status,1,c	;volatile
 16361  00004A                     i2l225:
 16362                           
 16363                           ;drv_mrf_miwi_24j40.c: 1916: }
 16364                           ;drv_mrf_miwi_24j40.c: 1918: }
 16365                           ;drv_mrf_miwi_24j40.c: 1920: if (flags.bits.RF_RXIF)
 16366  00004A  A619               	btfss	high_isr@flags,3,c
 16367  00004C  D083               	goto	i2l10145
 16368                           
 16369                           ;drv_mrf_miwi_24j40.c: 1921: {
 16370                           ;drv_mrf_miwi_24j40.c: 1922: uint8_t RxBank = 0xFF;
 16371  00004E  681B               	setf	high_isr@RxBank,c
 16372                           
 16373                           ;drv_mrf_miwi_24j40.c: 1924: for (i = 0; i < 2; i++)
 16374  000050  6A1C               	clrf	high_isr@i,c
 16375  000052                     i2l10113:
 16376                           
 16377                           ;drv_mrf_miwi_24j40.c: 1925: {
 16378                           ;drv_mrf_miwi_24j40.c: 1926: if (RxBuffer[i].PayloadLen == 0)
 16379  000052  501C               	movf	high_isr@i,w,c
 16380  000054  0D45               	mullw	69
 16381  000056  0E00               	movlw	low _RxBuffer
 16382  000058  24F3               	addwf	prodl,w,c
 16383  00005A  6ED9               	movwf	fsr2l,c
 16384  00005C  0E02               	movlw	high _RxBuffer
 16385  00005E  20F4               	addwfc	prodh,w,c
 16386  000060  6EDA               	movwf	fsr2h,c
 16387  000062  50DF               	movf	indf2,w,c
 16388  000064  E103               	bnz	i2l10117
 16389                           
 16390                           ;drv_mrf_miwi_24j40.c: 1927: {
 16391                           ;drv_mrf_miwi_24j40.c: 1928: RxBank = i;
 16392  000066  C01C  F01B         	movff	high_isr@i,high_isr@RxBank
 16393                           
 16394                           ;drv_mrf_miwi_24j40.c: 1929: break;
 16395  00006A  D004               	goto	i2l10121
 16396  00006C                     i2l10117:
 16397  00006C  2A1C               	incf	high_isr@i,f,c
 16398  00006E  0E01               	movlw	1
 16399  000070  641C               	cpfsgt	high_isr@i,c
 16400  000072  D7EF               	goto	i2l10113
 16401  000074                     i2l10121:
 16402                           
 16403                           ;drv_mrf_miwi_24j40.c: 1930: }
 16404                           ;drv_mrf_miwi_24j40.c: 1931: }
 16405                           ;drv_mrf_miwi_24j40.c: 1934: if (RxBank < 2)
 16406  000074  0E02               	movlw	2
 16407  000076  601B               	cpfslt	high_isr@RxBank,c
 16408  000078  D068               	goto	i2l10143
 16409                           
 16410                           ;drv_mrf_miwi_24j40.c: 1935: {
 16411                           ;drv_mrf_miwi_24j40.c: 1941: PHYSetShortRAMAddr((0x73), 0x04);
 16412  00007A  0E04               	movlw	4
 16413  00007C  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 16414  00007E  0E73               	movlw	115
 16415  000080  ECEA  F019         	call	i2_PHYSetShortRAMAddr
 16416                           
 16417                           ;drv_mrf_miwi_24j40.c: 1945: RxBuffer[RxBank].PayloadLen = PHYGetLongRAMAddr(0x300) + 2;
 16418  000084  501B               	movf	high_isr@RxBank,w,c
 16419  000086  0D45               	mullw	69
 16420  000088  0E00               	movlw	low _RxBuffer
 16421  00008A  24F3               	addwf	prodl,w,c
 16422  00008C  6ED9               	movwf	fsr2l,c
 16423  00008E  0E02               	movlw	high _RxBuffer
 16424  000090  20F4               	addwfc	prodh,w,c
 16425  000092  6EDA               	movwf	fsr2h,c
 16426  000094  0E03               	movlw	3
 16427  000096  6E03               	movwf	i2PHYGetLongRAMAddr@address+1,c
 16428  000098  6A02               	clrf	i2PHYGetLongRAMAddr@address,c
 16429  00009A  EC2B  F017         	call	i2_PHYGetLongRAMAddr	;wreg free
 16430  00009E  0F02               	addlw	2
 16431  0000A0  6EDF               	movwf	indf2,c
 16432                           
 16433                           ;drv_mrf_miwi_24j40.c: 1946: if (RxBuffer[RxBank].PayloadLen < (40+0+8+8+12))
 16434  0000A2  501B               	movf	high_isr@RxBank,w,c
 16435  0000A4  0D45               	mullw	69
 16436  0000A6  0E00               	movlw	low _RxBuffer
 16437  0000A8  24F3               	addwf	prodl,w,c
 16438  0000AA  6ED9               	movwf	fsr2l,c
 16439  0000AC  0E02               	movlw	high _RxBuffer
 16440  0000AE  20F4               	addwfc	prodh,w,c
 16441  0000B0  6EDA               	movwf	fsr2h,c
 16442  0000B2  0E44               	movlw	68
 16443  0000B4  60DF               	cpfslt	indf2,c
 16444  0000B6  D03F               	goto	i2l10141
 16445                           
 16446                           ;drv_mrf_miwi_24j40.c: 1947: {
 16447                           ;drv_mrf_miwi_24j40.c: 1949: MRF24J40Status.bits.RX_BUFFERED = 1;
 16448  0000B8  8A29               	bsf	_MRF24J40Status,5,c	;volatile
 16449                           
 16450                           ;drv_mrf_miwi_24j40.c: 1952: for (i = 1; i <= RxBuffer[RxBank].PayloadLen + 2; i++)
 16451  0000BA  0E01               	movlw	1
 16452  0000BC  6E1C               	movwf	high_isr@i,c
 16453  0000BE  D01A               	goto	i2l10137
 16454  0000C0                     i2l10133:
 16455                           
 16456                           ;drv_mrf_miwi_24j40.c: 1953: {
 16457                           ;drv_mrf_miwi_24j40.c: 1954: RxBuffer[RxBank].Payload[i - 1] = PHYGetLongRAMAddr(0x300 +
      +                           i);
 16458  0000C0  501B               	movf	high_isr@RxBank,w,c
 16459  0000C2  0D45               	mullw	69
 16460  0000C4  0E00               	movlw	low _RxBuffer
 16461  0000C6  6E0F               	movwf	??_high_isr& (0+255),c
 16462  0000C8  0E02               	movlw	high _RxBuffer
 16463  0000CA  6E10               	movwf	(??_high_isr+1)& (0+255),c
 16464  0000CC  50F3               	movf	prodl,w,c
 16465  0000CE  260F               	addwf	??_high_isr,f,c
 16466  0000D0  50F4               	movf	prodh,w,c
 16467  0000D2  2210               	addwfc	??_high_isr+1,f,c
 16468  0000D4  501C               	movf	high_isr@i,w,c
 16469  0000D6  240F               	addwf	??_high_isr,w,c
 16470  0000D8  6ED9               	movwf	fsr2l,c
 16471  0000DA  0E00               	movlw	0
 16472  0000DC  2010               	addwfc	??_high_isr+1,w,c
 16473  0000DE  6EDA               	movwf	fsr2h,c
 16474  0000E0  0E00               	movlw	0
 16475  0000E2  241C               	addwf	high_isr@i,w,c
 16476  0000E4  6E02               	movwf	i2PHYGetLongRAMAddr@address,c
 16477  0000E6  6A03               	clrf	i2PHYGetLongRAMAddr@address+1,c
 16478  0000E8  0E03               	movlw	3
 16479  0000EA  2203               	addwfc	i2PHYGetLongRAMAddr@address+1,f,c
 16480  0000EC  EC2B  F017         	call	i2_PHYGetLongRAMAddr	;wreg free
 16481  0000F0  6EDF               	movwf	indf2,c
 16482  0000F2  2A1C               	incf	high_isr@i,f,c
 16483  0000F4                     i2l10137:
 16484  0000F4  501C               	movf	high_isr@i,w,c
 16485  0000F6  6E0F               	movwf	??_high_isr& (0+255),c
 16486  0000F8  6A10               	clrf	(??_high_isr+1)& (0+255),c
 16487  0000FA  501B               	movf	high_isr@RxBank,w,c
 16488  0000FC  0D45               	mullw	69
 16489  0000FE  0E00               	movlw	low _RxBuffer
 16490  000100  24F3               	addwf	prodl,w,c
 16491  000102  6ED9               	movwf	fsr2l,c
 16492  000104  0E02               	movlw	high _RxBuffer
 16493  000106  20F4               	addwfc	prodh,w,c
 16494  000108  6EDA               	movwf	fsr2h,c
 16495  00010A  50DF               	movf	indf2,w,c
 16496  00010C  6E11               	movwf	(??_high_isr+2)& (0+255),c
 16497  00010E  6A12               	clrf	(??_high_isr+3)& (0+255),c
 16498  000110  0E02               	movlw	2
 16499  000112  2611               	addwf	??_high_isr+2,f,c
 16500  000114  0E00               	movlw	0
 16501  000116  2212               	addwfc	??_high_isr+3,f,c
 16502  000118  500F               	movf	??_high_isr,w,c
 16503  00011A  5C11               	subwf	??_high_isr+2,w,c
 16504  00011C  5012               	movf	??_high_isr+3,w,c
 16505  00011E  0A80               	xorlw	128
 16506  000120  6E13               	movwf	(??_high_isr+4)& (0+255),c
 16507  000122  5010               	movf	??_high_isr+1,w,c
 16508  000124  0A80               	xorlw	128
 16509  000126  5813               	subwfb	(??_high_isr+4)& (0+255),w,c
 16510  000128  E2CB               	bc	i2l10133
 16511                           
 16512                           ;drv_mrf_miwi_24j40.c: 1955: }
 16513                           ;drv_mrf_miwi_24j40.c: 1956: PHYSetShortRAMAddr((0x1B), 0x01);
 16514  00012A  0E01               	movlw	1
 16515  00012C  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 16516  00012E  0E1B               	movlw	27
 16517  000130  ECEA  F019         	call	i2_PHYSetShortRAMAddr
 16518                           
 16519                           ;drv_mrf_miwi_24j40.c: 1957: } else
 16520  000134  D005               	goto	i2l238
 16521  000136                     i2l10141:
 16522                           
 16523                           ;drv_mrf_miwi_24j40.c: 1958: {
 16524                           ;drv_mrf_miwi_24j40.c: 1961: PHYSetShortRAMAddr((0x1B), 0x01);
 16525  000136  0E01               	movlw	1
 16526  000138  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 16527  00013A  0E1B               	movlw	27
 16528  00013C  ECEA  F019         	call	i2_PHYSetShortRAMAddr
 16529  000140                     i2l238:
 16530                           
 16531                           ;drv_mrf_miwi_24j40.c: 1962: }
 16532                           ;drv_mrf_miwi_24j40.c: 1965: PHYSetShortRAMAddr((0x73), 0x00);
 16533  000140  6A02               	clrf	i2PHYSetShortRAMAddr@value,c
 16534  000142  0E73               	movlw	115
 16535  000144  ECEA  F019         	call	i2_PHYSetShortRAMAddr
 16536                           
 16537                           ;drv_mrf_miwi_24j40.c: 1966: } else
 16538  000148  D005               	goto	i2l10145
 16539  00014A                     i2l10143:
 16540                           
 16541                           ;drv_mrf_miwi_24j40.c: 1967: {
 16542                           ;drv_mrf_miwi_24j40.c: 1970: PHYSetShortRAMAddr((0x1B), 0x01);
 16543  00014A  0E01               	movlw	1
 16544  00014C  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 16545  00014E  0E1B               	movlw	27
 16546  000150  ECEA  F019         	call	i2_PHYSetShortRAMAddr
 16547  000154                     i2l10145:
 16548                           
 16549                           ;drv_mrf_miwi_24j40.c: 1977: }
 16550                           ;drv_mrf_miwi_24j40.c: 1979: }
 16551                           ;drv_mrf_miwi_24j40.c: 1982: if (flags.bits.SECIF)
 16552  000154  A819               	btfss	high_isr@flags,4,c
 16553  000156  D005               	goto	i2l10149
 16554                           
 16555                           ;drv_mrf_miwi_24j40.c: 1983: {
 16556                           ;drv_mrf_miwi_24j40.c: 1984: PHYSetShortRAMAddr((0x59), 0x80);
 16557  000158  0E80               	movlw	128
 16558  00015A  6E02               	movwf	i2PHYSetShortRAMAddr@value,c
 16559  00015C  0E59               	movlw	89
 16560  00015E  ECEA  F019         	call	i2_PHYSetShortRAMAddr
 16561  000162                     i2l10149:
 16562                           
 16563                           ;drv_mrf_miwi_24j40.c: 1985: }
 16564                           ;drv_mrf_miwi_24j40.c: 1986: }
 16565                           ;drv_mrf_miwi_24j40.c: 1987: }
 16566                           ;drv_mrf_miwi_24j40.c: 1992: if (PIR1bits.TMR1IF)
 16567  000162  B09E               	btfsc	3998,0,c	;volatile
 16568                           
 16569                           ;drv_mrf_miwi_24j40.c: 1993: {
 16570                           ;drv_mrf_miwi_24j40.c: 1994: if (PIE1bits.TMR1IE)
 16571  000164  A09D               	btfss	3997,0,c	;volatile
 16572  000166  D005               	goto	i2l10161
 16573                           
 16574                           ;drv_mrf_miwi_24j40.c: 1995: {
 16575                           ;drv_mrf_miwi_24j40.c: 1997: PIR1bits.TMR1IF = 0;
 16576  000168  909E               	bcf	3998,0,c	;volatile
 16577                           
 16578                           ;drv_mrf_miwi_24j40.c: 1998: timerExtension1++;
 16579  00016A  2A2E               	incf	_timerExtension1,f,c	;volatile
 16580                           
 16581                           ;drv_mrf_miwi_24j40.c: 1999: if (timerExtension1 == 0)
 16582  00016C  502E               	movf	_timerExtension1,w,c	;volatile
 16583  00016E  B4D8               	btfsc	status,2,c
 16584                           
 16585                           ;drv_mrf_miwi_24j40.c: 2000: {
 16586                           ;drv_mrf_miwi_24j40.c: 2001: timerExtension2++;
 16587  000170  2A2F               	incf	_timerExtension2,f,c	;volatile
 16588  000172                     i2l10161:
 16589                           
 16590                           ;drv_mrf_miwi_24j40.c: 2002: }
 16591                           ;drv_mrf_miwi_24j40.c: 2003: }
 16592                           ;drv_mrf_miwi_24j40.c: 2004: }
 16593                           ;drv_mrf_miwi_24j40.c: 2006: UserInterruptHandler();
 16594  000172  ECC7  F01A         	call	_UserInterruptHandler	;wreg free
 16595  000176  C017  FFF4         	movff	??_high_isr+8,prodh
 16596  00017A  C016  FFF3         	movff	??_high_isr+7,prodl
 16597  00017E  C015  FFDA         	movff	??_high_isr+6,fsr2h
 16598  000182  C014  FFD9         	movff	??_high_isr+5,fsr2l
 16599  000186  0011               	retfie		f
 16600  000188                     __end_of_high_isr:
 16601                           	opt stack 0
 16602                           tblptru	equ	0xFF8
 16603                           tblptrh	equ	0xFF7
 16604                           tblptrl	equ	0xFF6
 16605                           tablat	equ	0xFF5
 16606                           prodh	equ	0xFF4
 16607                           prodl	equ	0xFF3
 16608                           intcon	equ	0xFF2
 16609                           intcon2	equ	0xFF1
 16610                           intcon3	equ	0xFF0
 16611                           postinc0	equ	0xFEE
 16612                           plusw0	equ	0xFEB
 16613                           wreg	equ	0xFE8
 16614                           indf1	equ	0xFE7
 16615                           postinc1	equ	0xFE6
 16616                           fsr1h	equ	0xFE2
 16617                           fsr1l	equ	0xFE1
 16618                           indf2	equ	0xFDF
 16619                           postinc2	equ	0xFDE
 16620                           postdec2	equ	0xFDD
 16621                           plusw2	equ	0xFDB
 16622                           fsr2h	equ	0xFDA
 16623                           fsr2l	equ	0xFD9
 16624                           status	equ	0xFD8
 16625                           
 16626 ;; *************** function i2_PHYSetShortRAMAddr *****************
 16627 ;; Defined at:
 16628 ;;		line 124 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 16629 ;; Parameters:    Size  Location     Type
 16630 ;;  address         1    wreg     unsigned char 
 16631 ;;  value           1    1[COMRAM] unsigned char 
 16632 ;; Auto vars:     Size  Location     Type
 16633 ;;  address         1    2[COMRAM] unsigned char 
 16634 ;;  PHYSetShortR    1    3[COMRAM] volatile unsigned char 
 16635 ;; Return value:  Size  Location     Type
 16636 ;;		None               void
 16637 ;; Registers used:
 16638 ;;		wreg, status,2, cstack
 16639 ;; Tracked objects:
 16640 ;;		On entry : 0/0
 16641 ;;		On exit  : 0/0
 16642 ;;		Unchanged: 0/0
 16643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16644 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16647 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16648 ;;Total ram usage:        3 bytes
 16649 ;; Hardware stack levels used:    1
 16650 ;; Hardware stack levels required when called:    1
 16651 ;; This function calls:
 16652 ;;		i2_SPI1_Exchange8bit
 16653 ;; This function is called by:
 16654 ;;		_high_isr
 16655 ;; This function uses a non-reentrant model
 16656 ;;
 16657                           
 16658                           	psect	text72
 16659  0033D4                     __ptext72:
 16660                           	opt stack 0
 16661  0033D4                     i2_PHYSetShortRAMAddr:
 16662                           	opt stack 14
 16663                           
 16664                           ;incstack = 0
 16665                           ;i2PHYSetShortRAMAddr@address stored from wreg
 16666  0033D4  6E03               	movwf	i2PHYSetShortRAMAddr@address,c
 16667                           
 16668                           ;drv_mrf_miwi_24j40.c: 126: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 16669  0033D6  0E00               	movlw	0
 16670  0033D8  B6F0               	btfsc	intcon3,3,c	;volatile
 16671  0033DA  0E01               	movlw	1
 16672  0033DC  6E04               	movwf	i2PHYSetShortRAMAddr@tmpRFIE,c	;volatile
 16673                           
 16674                           ;drv_mrf_miwi_24j40.c: 128: INTCON3bits.INT1IE = 0;
 16675  0033DE  96F0               	bcf	intcon3,3,c	;volatile
 16676                           
 16677                           ;drv_mrf_miwi_24j40.c: 129: LATBbits.LATB3 = 0;
 16678  0033E0  968A               	bcf	3978,3,c	;volatile
 16679                           
 16680                           ;drv_mrf_miwi_24j40.c: 130: SPI1_Exchange8bit(address);
 16681  0033E2  5003               	movf	i2PHYSetShortRAMAddr@address,w,c
 16682  0033E4  ECD9  F01A         	call	i2_SPI1_Exchange8bit
 16683                           
 16684                           ;drv_mrf_miwi_24j40.c: 131: SPI1_Exchange8bit(value);
 16685  0033E8  5002               	movf	i2PHYSetShortRAMAddr@value,w,c
 16686  0033EA  ECD9  F01A         	call	i2_SPI1_Exchange8bit
 16687                           
 16688                           ;drv_mrf_miwi_24j40.c: 132: LATBbits.LATB3 = 1;
 16689  0033EE  868A               	bsf	3978,3,c	;volatile
 16690                           
 16691                           ;drv_mrf_miwi_24j40.c: 133: INTCON3bits.INT1IE = tmpRFIE;
 16692  0033F0  B004               	btfsc	i2PHYSetShortRAMAddr@tmpRFIE,0,c	;volatile
 16693  0033F2  D002               	bra	i2u983_45
 16694  0033F4  96F0               	bcf	intcon3,3,c	;volatile
 16695  0033F6  D001               	bra	i2u983_46
 16696  0033F8                     i2u983_45:
 16697  0033F8  86F0               	bsf	intcon3,3,c	;volatile
 16698  0033FA                     i2u983_46:
 16699  0033FA  0012               	return		;funcret
 16700  0033FC                     __end_ofi2_PHYSetShortRAMAddr:
 16701                           	opt stack 0
 16702                           tblptru	equ	0xFF8
 16703                           tblptrh	equ	0xFF7
 16704                           tblptrl	equ	0xFF6
 16705                           tablat	equ	0xFF5
 16706                           prodh	equ	0xFF4
 16707                           prodl	equ	0xFF3
 16708                           intcon	equ	0xFF2
 16709                           intcon2	equ	0xFF1
 16710                           intcon3	equ	0xFF0
 16711                           postinc0	equ	0xFEE
 16712                           plusw0	equ	0xFEB
 16713                           wreg	equ	0xFE8
 16714                           indf1	equ	0xFE7
 16715                           postinc1	equ	0xFE6
 16716                           fsr1h	equ	0xFE2
 16717                           fsr1l	equ	0xFE1
 16718                           indf2	equ	0xFDF
 16719                           postinc2	equ	0xFDE
 16720                           postdec2	equ	0xFDD
 16721                           plusw2	equ	0xFDB
 16722                           fsr2h	equ	0xFDA
 16723                           fsr2l	equ	0xFD9
 16724                           status	equ	0xFD8
 16725                           
 16726 ;; *************** function i2_PHYGetShortRAMAddr *****************
 16727 ;; Defined at:
 16728 ;;		line 154 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 16729 ;; Parameters:    Size  Location     Type
 16730 ;;  address         1    wreg     unsigned char 
 16731 ;; Auto vars:     Size  Location     Type
 16732 ;;  address         1    1[COMRAM] unsigned char 
 16733 ;;  PHYGetShortR    1    3[COMRAM] volatile unsigned char 
 16734 ;;  PHYGetShortR    1    2[COMRAM] unsigned char 
 16735 ;; Return value:  Size  Location     Type
 16736 ;;                  1    wreg      unsigned char 
 16737 ;; Registers used:
 16738 ;;		wreg, status,2, cstack
 16739 ;; Tracked objects:
 16740 ;;		On entry : 0/0
 16741 ;;		On exit  : 0/0
 16742 ;;		Unchanged: 0/0
 16743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16745 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16747 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16748 ;;Total ram usage:        3 bytes
 16749 ;; Hardware stack levels used:    1
 16750 ;; Hardware stack levels required when called:    1
 16751 ;; This function calls:
 16752 ;;		i2_SPI1_Exchange8bit
 16753 ;; This function is called by:
 16754 ;;		_high_isr
 16755 ;; This function uses a non-reentrant model
 16756 ;;
 16757                           
 16758                           	psect	text73
 16759  003380                     __ptext73:
 16760                           	opt stack 0
 16761  003380                     i2_PHYGetShortRAMAddr:
 16762                           	opt stack 14
 16763                           
 16764                           ;incstack = 0
 16765                           ;i2PHYGetShortRAMAddr@address stored from wreg
 16766  003380  6E02               	movwf	i2PHYGetShortRAMAddr@address,c
 16767                           
 16768                           ;drv_mrf_miwi_24j40.c: 156: uint8_t toReturn;
 16769                           ;drv_mrf_miwi_24j40.c: 157: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 16770  003382  0E00               	movlw	0
 16771  003384  B6F0               	btfsc	intcon3,3,c	;volatile
 16772  003386  0E01               	movlw	1
 16773  003388  6E04               	movwf	i2PHYGetShortRAMAddr@tmpRFIE,c	;volatile
 16774                           
 16775                           ;drv_mrf_miwi_24j40.c: 159: INTCON3bits.INT1IE = 0;
 16776  00338A  96F0               	bcf	intcon3,3,c	;volatile
 16777                           
 16778                           ;drv_mrf_miwi_24j40.c: 160: LATBbits.LATB3 = 0;
 16779  00338C  968A               	bcf	3978,3,c	;volatile
 16780                           
 16781                           ;drv_mrf_miwi_24j40.c: 161: SPI1_Exchange8bit(address);
 16782  00338E  5002               	movf	i2PHYGetShortRAMAddr@address,w,c
 16783  003390  ECD9  F01A         	call	i2_SPI1_Exchange8bit
 16784                           
 16785                           ;drv_mrf_miwi_24j40.c: 162: toReturn = SPI1_Exchange8bit(0x00);
 16786  003394  0E00               	movlw	0
 16787  003396  ECD9  F01A         	call	i2_SPI1_Exchange8bit
 16788  00339A  6E03               	movwf	i2PHYGetShortRAMAddr@toReturn,c
 16789                           
 16790                           ;drv_mrf_miwi_24j40.c: 163: LATBbits.LATB3 = 1;
 16791  00339C  868A               	bsf	3978,3,c	;volatile
 16792                           
 16793                           ;drv_mrf_miwi_24j40.c: 164: INTCON3bits.INT1IE = tmpRFIE;
 16794  00339E  B004               	btfsc	i2PHYGetShortRAMAddr@tmpRFIE,0,c	;volatile
 16795  0033A0  D002               	bra	i2u984_45
 16796  0033A2  96F0               	bcf	intcon3,3,c	;volatile
 16797  0033A4  D001               	bra	i2u984_46
 16798  0033A6                     i2u984_45:
 16799  0033A6  86F0               	bsf	intcon3,3,c	;volatile
 16800  0033A8                     i2u984_46:
 16801                           
 16802                           ;drv_mrf_miwi_24j40.c: 166: return toReturn;
 16803  0033A8  5003               	movf	i2PHYGetShortRAMAddr@toReturn,w,c
 16804  0033AA  0012               	return		;funcret
 16805  0033AC                     __end_ofi2_PHYGetShortRAMAddr:
 16806                           	opt stack 0
 16807                           tblptru	equ	0xFF8
 16808                           tblptrh	equ	0xFF7
 16809                           tblptrl	equ	0xFF6
 16810                           tablat	equ	0xFF5
 16811                           prodh	equ	0xFF4
 16812                           prodl	equ	0xFF3
 16813                           intcon	equ	0xFF2
 16814                           intcon2	equ	0xFF1
 16815                           intcon3	equ	0xFF0
 16816                           postinc0	equ	0xFEE
 16817                           plusw0	equ	0xFEB
 16818                           wreg	equ	0xFE8
 16819                           indf1	equ	0xFE7
 16820                           postinc1	equ	0xFE6
 16821                           fsr1h	equ	0xFE2
 16822                           fsr1l	equ	0xFE1
 16823                           indf2	equ	0xFDF
 16824                           postinc2	equ	0xFDE
 16825                           postdec2	equ	0xFDD
 16826                           plusw2	equ	0xFDB
 16827                           fsr2h	equ	0xFDA
 16828                           fsr2l	equ	0xFD9
 16829                           status	equ	0xFD8
 16830                           
 16831 ;; *************** function i2_PHYGetLongRAMAddr *****************
 16832 ;; Defined at:
 16833 ;;		line 185 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_24j40.c"
 16834 ;; Parameters:    Size  Location     Type
 16835 ;;  address         2    1[COMRAM] unsigned int 
 16836 ;; Auto vars:     Size  Location     Type
 16837 ;;  PHYGetLongRA    1    6[COMRAM] volatile unsigned char 
 16838 ;;  PHYGetLongRA    1    5[COMRAM] unsigned char 
 16839 ;; Return value:  Size  Location     Type
 16840 ;;                  1    wreg      unsigned char 
 16841 ;; Registers used:
 16842 ;;		wreg, status,2, status,0, cstack
 16843 ;; Tracked objects:
 16844 ;;		On entry : 0/0
 16845 ;;		On exit  : 0/0
 16846 ;;		Unchanged: 0/0
 16847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16851 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16852 ;;Total ram usage:        6 bytes
 16853 ;; Hardware stack levels used:    1
 16854 ;; Hardware stack levels required when called:    1
 16855 ;; This function calls:
 16856 ;;		i2_SPI1_Exchange8bit
 16857 ;; This function is called by:
 16858 ;;		_high_isr
 16859 ;; This function uses a non-reentrant model
 16860 ;;
 16861                           
 16862                           	psect	text74
 16863  002E56                     __ptext74:
 16864                           	opt stack 0
 16865  002E56                     i2_PHYGetLongRAMAddr:
 16866                           	opt stack 14
 16867                           
 16868                           ;drv_mrf_miwi_24j40.c: 187: uint8_t toReturn;
 16869                           ;drv_mrf_miwi_24j40.c: 188: volatile uint8_t tmpRFIE = INTCON3bits.INT1IE;
 16870                           
 16871                           ;incstack = 0
 16872  002E56  0E00               	movlw	0
 16873  002E58  B6F0               	btfsc	intcon3,3,c	;volatile
 16874  002E5A  0E01               	movlw	1
 16875  002E5C  6E07               	movwf	i2PHYGetLongRAMAddr@tmpRFIE,c	;volatile
 16876                           
 16877                           ;drv_mrf_miwi_24j40.c: 190: INTCON3bits.INT1IE = 0;
 16878  002E5E  96F0               	bcf	intcon3,3,c	;volatile
 16879                           
 16880                           ;drv_mrf_miwi_24j40.c: 191: LATBbits.LATB3 = 0;
 16881  002E60  968A               	bcf	3978,3,c	;volatile
 16882                           
 16883                           ;drv_mrf_miwi_24j40.c: 192: SPI1_Exchange8bit(((address >> 3)&0x7F) | 0x80);
 16884  002E62  C002  F004         	movff	i2PHYGetLongRAMAddr@address,??i2_PHYGetLongRAMAddr
 16885  002E66  C003  F005         	movff	i2PHYGetLongRAMAddr@address+1,??i2_PHYGetLongRAMAddr+1
 16886  002E6A  90D8               	bcf	status,0,c
 16887  002E6C  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 16888  002E6E  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 16889  002E70  90D8               	bcf	status,0,c
 16890  002E72  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 16891  002E74  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 16892  002E76  90D8               	bcf	status,0,c
 16893  002E78  3205               	rrcf	??i2_PHYGetLongRAMAddr+1,f,c
 16894  002E7A  3204               	rrcf	??i2_PHYGetLongRAMAddr,f,c
 16895  002E7C  5004               	movf	??i2_PHYGetLongRAMAddr,w,c
 16896  002E7E  0B7F               	andlw	127
 16897  002E80  0980               	iorlw	128
 16898  002E82  ECD9  F01A         	call	i2_SPI1_Exchange8bit
 16899                           
 16900                           ;drv_mrf_miwi_24j40.c: 193: SPI1_Exchange8bit(((address << 5)&0xE0));
 16901  002E86  3802               	swapf	i2PHYGetLongRAMAddr@address,w,c
 16902  002E88  46E8               	rlncf	wreg,f,c
 16903  002E8A  0BE0               	andlw	224
 16904  002E8C  ECD9  F01A         	call	i2_SPI1_Exchange8bit
 16905                           
 16906                           ;drv_mrf_miwi_24j40.c: 194: toReturn = SPI1_Exchange8bit(0x00);
 16907  002E90  0E00               	movlw	0
 16908  002E92  ECD9  F01A         	call	i2_SPI1_Exchange8bit
 16909  002E96  6E06               	movwf	i2PHYGetLongRAMAddr@toReturn,c
 16910                           
 16911                           ;drv_mrf_miwi_24j40.c: 195: LATBbits.LATB3 = 1;
 16912  002E98  868A               	bsf	3978,3,c	;volatile
 16913                           
 16914                           ;drv_mrf_miwi_24j40.c: 196: INTCON3bits.INT1IE = tmpRFIE;
 16915  002E9A  B007               	btfsc	i2PHYGetLongRAMAddr@tmpRFIE,0,c	;volatile
 16916  002E9C  D002               	bra	i2u985_45
 16917  002E9E  96F0               	bcf	intcon3,3,c	;volatile
 16918  002EA0  D001               	bra	i2u985_46
 16919  002EA2                     i2u985_45:
 16920  002EA2  86F0               	bsf	intcon3,3,c	;volatile
 16921  002EA4                     i2u985_46:
 16922                           
 16923                           ;drv_mrf_miwi_24j40.c: 198: return toReturn;
 16924  002EA4  5006               	movf	i2PHYGetLongRAMAddr@toReturn,w,c
 16925  002EA6  0012               	return		;funcret
 16926  002EA8                     __end_ofi2_PHYGetLongRAMAddr:
 16927                           	opt stack 0
 16928                           tblptru	equ	0xFF8
 16929                           tblptrh	equ	0xFF7
 16930                           tblptrl	equ	0xFF6
 16931                           tablat	equ	0xFF5
 16932                           prodh	equ	0xFF4
 16933                           prodl	equ	0xFF3
 16934                           intcon	equ	0xFF2
 16935                           intcon2	equ	0xFF1
 16936                           intcon3	equ	0xFF0
 16937                           postinc0	equ	0xFEE
 16938                           plusw0	equ	0xFEB
 16939                           wreg	equ	0xFE8
 16940                           indf1	equ	0xFE7
 16941                           postinc1	equ	0xFE6
 16942                           fsr1h	equ	0xFE2
 16943                           fsr1l	equ	0xFE1
 16944                           indf2	equ	0xFDF
 16945                           postinc2	equ	0xFDE
 16946                           postdec2	equ	0xFDD
 16947                           plusw2	equ	0xFDB
 16948                           fsr2h	equ	0xFDA
 16949                           fsr2l	equ	0xFD9
 16950                           status	equ	0xFD8
 16951                           
 16952 ;; *************** function i2_SPI1_Exchange8bit *****************
 16953 ;; Defined at:
 16954 ;;		line 52 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/spi.c"
 16955 ;; Parameters:    Size  Location     Type
 16956 ;;  data            1    wreg     unsigned char 
 16957 ;; Auto vars:     Size  Location     Type
 16958 ;;  data            1    0[COMRAM] unsigned char 
 16959 ;; Return value:  Size  Location     Type
 16960 ;;                  1    wreg      unsigned char 
 16961 ;; Registers used:
 16962 ;;		wreg, status,2
 16963 ;; Tracked objects:
 16964 ;;		On entry : 0/0
 16965 ;;		On exit  : 0/0
 16966 ;;		Unchanged: 0/0
 16967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16971 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16972 ;;Total ram usage:        1 bytes
 16973 ;; Hardware stack levels used:    1
 16974 ;; This function calls:
 16975 ;;		Nothing
 16976 ;; This function is called by:
 16977 ;;		i2_PHYSetShortRAMAddr
 16978 ;;		i2_PHYGetShortRAMAddr
 16979 ;;		i2_PHYGetLongRAMAddr
 16980 ;; This function uses a non-reentrant model
 16981 ;;
 16982                           
 16983                           	psect	text75
 16984  0035B2                     __ptext75:
 16985                           	opt stack 0
 16986  0035B2                     i2_SPI1_Exchange8bit:
 16987                           	opt stack 14
 16988                           
 16989                           ;incstack = 0
 16990                           ;i2SPI1_Exchange8bit@data stored from wreg
 16991  0035B2  6E01               	movwf	i2SPI1_Exchange8bit@data,c
 16992                           
 16993                           ;spi.c: 54: SSP1CON1bits.WCOL = 0;
 16994  0035B4  9EC6               	bcf	4038,7,c	;volatile
 16995                           
 16996                           ;spi.c: 56: SSP1BUF = data;
 16997  0035B6  C001  FFC9         	movff	i2SPI1_Exchange8bit@data,4041	;volatile
 16998  0035BA                     i2l832:
 16999  0035BA  A0C7               	btfss	4039,0,c	;volatile
 17000  0035BC  D7FE               	goto	i2l832
 17001                           
 17002                           ;spi.c: 59: }
 17003                           ;spi.c: 61: return (SSP1BUF);
 17004  0035BE  50C9               	movf	4041,w,c	;volatile
 17005  0035C0  0012               	return		;funcret
 17006  0035C2                     __end_ofi2_SPI1_Exchange8bit:
 17007                           	opt stack 0
 17008                           tblptru	equ	0xFF8
 17009                           tblptrh	equ	0xFF7
 17010                           tblptrl	equ	0xFF6
 17011                           tablat	equ	0xFF5
 17012                           prodh	equ	0xFF4
 17013                           prodl	equ	0xFF3
 17014                           intcon	equ	0xFF2
 17015                           intcon2	equ	0xFF1
 17016                           intcon3	equ	0xFF0
 17017                           postinc0	equ	0xFEE
 17018                           plusw0	equ	0xFEB
 17019                           wreg	equ	0xFE8
 17020                           indf1	equ	0xFE7
 17021                           postinc1	equ	0xFE6
 17022                           fsr1h	equ	0xFE2
 17023                           fsr1l	equ	0xFE1
 17024                           indf2	equ	0xFDF
 17025                           postinc2	equ	0xFDE
 17026                           postdec2	equ	0xFDD
 17027                           plusw2	equ	0xFDB
 17028                           fsr2h	equ	0xFDA
 17029                           fsr2l	equ	0xFD9
 17030                           status	equ	0xFD8
 17031                           
 17032 ;; *************** function _UserInterruptHandler *****************
 17033 ;; Defined at:
 17034 ;;		line 346 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 17035 ;; Parameters:    Size  Location     Type
 17036 ;;		None
 17037 ;; Auto vars:     Size  Location     Type
 17038 ;;		None
 17039 ;; Return value:  Size  Location     Type
 17040 ;;		None               void
 17041 ;; Registers used:
 17042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17043 ;; Tracked objects:
 17044 ;;		On entry : 0/0
 17045 ;;		On exit  : 0/0
 17046 ;;		Unchanged: 0/0
 17047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17052 ;;Total ram usage:        0 bytes
 17053 ;; Hardware stack levels used:    1
 17054 ;; Hardware stack levels required when called:    2
 17055 ;; This function calls:
 17056 ;;		_I2CTask
 17057 ;;		i2_DELAY_ms
 17058 ;; This function is called by:
 17059 ;;		_high_isr
 17060 ;; This function uses a non-reentrant model
 17061 ;;
 17062                           
 17063                           	psect	text76
 17064  00358E                     __ptext76:
 17065                           	opt stack 0
 17066  00358E                     _UserInterruptHandler:
 17067                           	opt stack 13
 17068                           
 17069                           ;lcd.c: 349: if( PIR3bits.SSP2IF )
 17070                           
 17071                           ;incstack = 0
 17072  00358E  AEA4               	btfss	4004,7,c	;volatile
 17073  003590  0012               	return	
 17074                           
 17075                           ;lcd.c: 350: {
 17076                           ;lcd.c: 351: PIR3bits.SSP2IF = 0;
 17077  003592  9EA4               	bcf	4004,7,c	;volatile
 17078                           
 17079                           ;lcd.c: 352: I2CTask();
 17080  003594  ECB7  F015         	call	_I2CTask	;wreg free
 17081                           
 17082                           ;lcd.c: 353: DELAY_ms(5);
 17083  003598  6A02               	clrf	i2DELAY_ms@ms+1,c
 17084  00359A  0E05               	movlw	5
 17085  00359C  6E01               	movwf	i2DELAY_ms@ms,c
 17086  00359E  EF2C  F012         	goto	i2_DELAY_ms	;wreg free
 17087  0035A2                     __end_of_UserInterruptHandler:
 17088                           	opt stack 0
 17089                           tblptru	equ	0xFF8
 17090                           tblptrh	equ	0xFF7
 17091                           tblptrl	equ	0xFF6
 17092                           tablat	equ	0xFF5
 17093                           prodh	equ	0xFF4
 17094                           prodl	equ	0xFF3
 17095                           intcon	equ	0xFF2
 17096                           intcon2	equ	0xFF1
 17097                           intcon3	equ	0xFF0
 17098                           postinc0	equ	0xFEE
 17099                           plusw0	equ	0xFEB
 17100                           wreg	equ	0xFE8
 17101                           indf1	equ	0xFE7
 17102                           postinc1	equ	0xFE6
 17103                           fsr1h	equ	0xFE2
 17104                           fsr1l	equ	0xFE1
 17105                           indf2	equ	0xFDF
 17106                           postinc2	equ	0xFDE
 17107                           postdec2	equ	0xFDD
 17108                           plusw2	equ	0xFDB
 17109                           fsr2h	equ	0xFDA
 17110                           fsr2l	equ	0xFD9
 17111                           status	equ	0xFD8
 17112                           
 17113 ;; *************** function _I2CTask *****************
 17114 ;; Defined at:
 17115 ;;		line 66 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/lcd.c"
 17116 ;; Parameters:    Size  Location     Type
 17117 ;;		None
 17118 ;; Auto vars:     Size  Location     Type
 17119 ;;		None
 17120 ;; Return value:  Size  Location     Type
 17121 ;;		None               void
 17122 ;; Registers used:
 17123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17124 ;; Tracked objects:
 17125 ;;		On entry : 0/0
 17126 ;;		On exit  : 0/0
 17127 ;;		Unchanged: 0/0
 17128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17133 ;;Total ram usage:        0 bytes
 17134 ;; Hardware stack levels used:    1
 17135 ;; Hardware stack levels required when called:    1
 17136 ;; This function calls:
 17137 ;;		i2_DELAY_ms
 17138 ;; This function is called by:
 17139 ;;		_UserInterruptHandler
 17140 ;; This function uses a non-reentrant model
 17141 ;;
 17142                           
 17143                           	psect	text77
 17144  002B6E                     __ptext77:
 17145                           	opt stack 0
 17146  002B6E                     _I2CTask:
 17147                           	opt stack 13
 17148                           
 17149                           ;lcd.c: 69: if( CommandPtr < CommandLen || TextPtr < TextLen )
 17150                           
 17151                           ;incstack = 0
 17152  002B6E  5026               	movf	_CommandLen,w,c
 17153  002B70  5C27               	subwf	_CommandPtr,w,c
 17154  002B72  E304               	bnc	i2l769
 17155  002B74  502A               	movf	_TextLen,w,c
 17156  002B76  5C2B               	subwf	_TextPtr,w,c
 17157  002B78  B0D8               	btfsc	status,0,c
 17158  002B7A  0012               	return	
 17159  002B7C                     i2l769:
 17160  002B7C  B071               	btfsc	3953,0,c	;volatile
 17161  002B7E  D7FE               	goto	i2l769
 17162                           
 17163                           ;lcd.c: 72: if( CommandPtr < CommandLen )
 17164  002B80  5026               	movf	_CommandLen,w,c
 17165  002B82  5C27               	subwf	_CommandPtr,w,c
 17166  002B84  E215               	bc	i2l9655
 17167                           
 17168                           ;lcd.c: 73: {
 17169                           ;lcd.c: 74: SSP2BUF = LCDCommand[CommandPtr];
 17170  002B86  5027               	movf	_CommandPtr,w,c
 17171  002B88  0FC7               	addlw	low _LCDCommand
 17172  002B8A  6ED9               	movwf	fsr2l,c
 17173  002B8C  6ADA               	clrf	fsr2h,c
 17174  002B8E  50DF               	movf	indf2,w,c
 17175  002B90  6E75               	movwf	3957,c	;volatile
 17176                           
 17177                           ;lcd.c: 76: {
 17178                           ;lcd.c: 77: CommandPtr++;
 17179  002B92  2A27               	incf	_CommandPtr,f,c
 17180                           
 17181                           ;lcd.c: 78: }
 17182                           ;lcd.c: 79: if( CommandPtr == CommandLen && TextLen == 0 )
 17183  002B94  5026               	movf	_CommandLen,w,c
 17184  002B96  1827               	xorwf	_CommandPtr,w,c
 17185  002B98  A4D8               	btfss	status,2,c
 17186  002B9A  0012               	return	
 17187  002B9C  502A               	movf	_TextLen,w,c
 17188  002B9E  A4D8               	btfss	status,2,c
 17189  002BA0  0012               	return	
 17190                           
 17191                           ;lcd.c: 80: {
 17192                           ;lcd.c: 82: SSP2CON2bits.PEN = 1;
 17193  002BA2  8471               	bsf	3953,2,c	;volatile
 17194                           
 17195                           ;lcd.c: 83: DELAY_ms(300);
 17196  002BA4  0E01               	movlw	1
 17197  002BA6  6E02               	movwf	i2DELAY_ms@ms+1,c
 17198  002BA8  0E2C               	movlw	44
 17199  002BAA  6E01               	movwf	i2DELAY_ms@ms,c
 17200  002BAC  EF2C  F012         	goto	i2_DELAY_ms	;wreg free
 17201  002BB0                     i2l9655:
 17202                           
 17203                           ;lcd.c: 86: else if( TextPtr < TextLen )
 17204  002BB0  502A               	movf	_TextLen,w,c
 17205  002BB2  5C2B               	subwf	_TextPtr,w,c
 17206  002BB4  B0D8               	btfsc	status,0,c
 17207  002BB6  0012               	return	
 17208                           
 17209                           ;lcd.c: 87: {
 17210                           ;lcd.c: 88: if( LCDText[TextPtr] == 0 )
 17211  002BB8  0E8A               	movlw	low _LCDText
 17212  002BBA  242B               	addwf	_TextPtr,w,c
 17213  002BBC  6ED9               	movwf	fsr2l,c
 17214  002BBE  6ADA               	clrf	fsr2h,c
 17215  002BC0  0E02               	movlw	high _LCDText
 17216  002BC2  22DA               	addwfc	fsr2h,f,c
 17217  002BC4  50DF               	movf	indf2,w,c
 17218  002BC6  E108               	bnz	i2l776
 17219                           
 17220                           ;lcd.c: 89: {
 17221                           ;lcd.c: 90: LCDText[TextPtr] = ' ';
 17222  002BC8  0E8A               	movlw	low _LCDText
 17223  002BCA  242B               	addwf	_TextPtr,w,c
 17224  002BCC  6ED9               	movwf	fsr2l,c
 17225  002BCE  6ADA               	clrf	fsr2h,c
 17226  002BD0  0E02               	movlw	high _LCDText
 17227  002BD2  22DA               	addwfc	fsr2h,f,c
 17228  002BD4  0E20               	movlw	32
 17229  002BD6  6EDF               	movwf	indf2,c
 17230  002BD8                     i2l776:
 17231                           
 17232                           ;lcd.c: 91: }
 17233                           ;lcd.c: 92: SSP2BUF = LCDText[TextPtr];
 17234  002BD8  0E8A               	movlw	low _LCDText
 17235  002BDA  242B               	addwf	_TextPtr,w,c
 17236  002BDC  6ED9               	movwf	fsr2l,c
 17237  002BDE  6ADA               	clrf	fsr2h,c
 17238  002BE0  0E02               	movlw	high _LCDText
 17239  002BE2  22DA               	addwfc	fsr2h,f,c
 17240  002BE4  50DF               	movf	indf2,w,c
 17241  002BE6  6E75               	movwf	3957,c	;volatile
 17242                           
 17243                           ;lcd.c: 95: {
 17244                           ;lcd.c: 96: TextPtr++;
 17245  002BE8  2A2B               	incf	_TextPtr,f,c
 17246                           
 17247                           ;lcd.c: 97: }
 17248                           ;lcd.c: 98: if( TextPtr == TextLen )
 17249  002BEA  502A               	movf	_TextLen,w,c
 17250  002BEC  182B               	xorwf	_TextPtr,w,c
 17251  002BEE  D7D7               	goto	L23
 17252  002BF0                     __end_of_I2CTask:
 17253                           	opt stack 0
 17254                           tblptru	equ	0xFF8
 17255                           tblptrh	equ	0xFF7
 17256                           tblptrl	equ	0xFF6
 17257                           tablat	equ	0xFF5
 17258                           prodh	equ	0xFF4
 17259                           prodl	equ	0xFF3
 17260                           intcon	equ	0xFF2
 17261                           intcon2	equ	0xFF1
 17262                           intcon3	equ	0xFF0
 17263                           postinc0	equ	0xFEE
 17264                           plusw0	equ	0xFEB
 17265                           wreg	equ	0xFE8
 17266                           indf1	equ	0xFE7
 17267                           postinc1	equ	0xFE6
 17268                           fsr1h	equ	0xFE2
 17269                           fsr1l	equ	0xFE1
 17270                           indf2	equ	0xFDF
 17271                           postinc2	equ	0xFDE
 17272                           postdec2	equ	0xFDD
 17273                           plusw2	equ	0xFDB
 17274                           fsr2h	equ	0xFDA
 17275                           fsr2l	equ	0xFD9
 17276                           status	equ	0xFD8
 17277                           
 17278 ;; *************** function i2_DELAY_ms *****************
 17279 ;; Defined at:
 17280 ;;		line 108 in file "../src/system_config/8bitwdk_pic18f46j50_24j40/delay.c"
 17281 ;; Parameters:    Size  Location     Type
 17282 ;;  ms              2    0[COMRAM] unsigned int 
 17283 ;; Auto vars:     Size  Location     Type
 17284 ;;  DELAY_ms        4   10[COMRAM] long 
 17285 ;; Return value:  Size  Location     Type
 17286 ;;		None               void
 17287 ;; Registers used:
 17288 ;;		wreg, status,2, status,0, prodl, prodh
 17289 ;; Tracked objects:
 17290 ;;		On entry : 0/0
 17291 ;;		On exit  : 0/0
 17292 ;;		Unchanged: 0/0
 17293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17295 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17296 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17297 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17298 ;;Total ram usage:       14 bytes
 17299 ;; Hardware stack levels used:    1
 17300 ;; This function calls:
 17301 ;;		Nothing
 17302 ;; This function is called by:
 17303 ;;		_I2CTask
 17304 ;;		_UserInterruptHandler
 17305 ;; This function uses a non-reentrant model
 17306 ;;
 17307                           
 17308                           	psect	text78
 17309  002458                     __ptext78:
 17310                           	opt stack 0
 17311  002458                     i2_DELAY_ms:
 17312                           	opt stack 14
 17313                           
 17314                           ;delay.c: 115: cyclesRequiredForEntireDelay = (signed long)(((8000000)/4)/1000) * ms;
 17315                           
 17316                           ;incstack = 0
 17317  002458  5001               	movf	i2DELAY_ms@ms,w,c
 17318  00245A  6E03               	movwf	??i2_DELAY_ms& (0+255),c
 17319  00245C  5002               	movf	i2DELAY_ms@ms+1,w,c
 17320  00245E  6E04               	movwf	(??i2_DELAY_ms+1)& (0+255),c
 17321  002460  6A05               	clrf	(??i2_DELAY_ms+2)& (0+255),c
 17322  002462  6A06               	clrf	(??i2_DELAY_ms+3)& (0+255),c
 17323  002464  0ED0               	movlw	208
 17324  002466  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 17325  002468  CFF3 F007          	movff	prodl,??i2_DELAY_ms+4
 17326  00246C  CFF4 F008          	movff	prodh,??i2_DELAY_ms+5
 17327  002470  6A09               	clrf	(??i2_DELAY_ms+6)& (0+255),c
 17328  002472  6A0A               	clrf	(??i2_DELAY_ms+7)& (0+255),c
 17329  002474  0204               	mulwf	(??i2_DELAY_ms+1)& (0+255),c
 17330  002476  50F3               	movf	prodl,w,c
 17331  002478  2608               	addwf	(??i2_DELAY_ms+5)& (0+255),f,c
 17332  00247A  50F4               	movf	prodh,w,c
 17333  00247C  2209               	addwfc	(??i2_DELAY_ms+6)& (0+255),f,c
 17334  00247E  0E00               	movlw	0
 17335  002480  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 17336  002482  0E07               	movlw	7
 17337  002484  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 17338  002486  50F3               	movf	prodl,w,c
 17339  002488  2608               	addwf	(??i2_DELAY_ms+5)& (0+255),f,c
 17340  00248A  50F4               	movf	prodh,w,c
 17341  00248C  2209               	addwfc	(??i2_DELAY_ms+6)& (0+255),f,c
 17342  00248E  0E00               	movlw	0
 17343  002490  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 17344  002492  0ED0               	movlw	208
 17345  002494  0205               	mulwf	(??i2_DELAY_ms+2)& (0+255),c
 17346  002496  50F3               	movf	prodl,w,c
 17347  002498  2609               	addwf	(??i2_DELAY_ms+6)& (0+255),f,c
 17348  00249A  50F4               	movf	prodh,w,c
 17349  00249C  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 17350  00249E  0E07               	movlw	7
 17351  0024A0  0204               	mulwf	(??i2_DELAY_ms+1)& (0+255),c
 17352  0024A2  50F3               	movf	prodl,w,c
 17353  0024A4  2609               	addwf	(??i2_DELAY_ms+6)& (0+255),f,c
 17354  0024A6  50F4               	movf	prodh,w,c
 17355  0024A8  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 17356  0024AA  0E00               	movlw	0
 17357  0024AC  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 17358  0024AE  50F3               	movf	prodl,w,c
 17359  0024B0  2609               	addwf	(??i2_DELAY_ms+6)& (0+255),f,c
 17360  0024B2  50F4               	movf	prodh,w,c
 17361  0024B4  220A               	addwfc	(??i2_DELAY_ms+7)& (0+255),f,c
 17362  0024B6  0ED0               	movlw	208
 17363  0024B8  0206               	mulwf	(??i2_DELAY_ms+3)& (0+255),c
 17364  0024BA  50F3               	movf	prodl,w,c
 17365  0024BC  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 17366  0024BE  0E07               	movlw	7
 17367  0024C0  0205               	mulwf	(??i2_DELAY_ms+2)& (0+255),c
 17368  0024C2  50F3               	movf	prodl,w,c
 17369  0024C4  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 17370  0024C6  0E00               	movlw	0
 17371  0024C8  0204               	mulwf	(??i2_DELAY_ms+1)& (0+255),c
 17372  0024CA  50F3               	movf	prodl,w,c
 17373  0024CC  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 17374  0024CE  0E00               	movlw	0
 17375  0024D0  0203               	mulwf	??i2_DELAY_ms& (0+255),c
 17376  0024D2  50F3               	movf	prodl,w,c
 17377  0024D4  260A               	addwf	(??i2_DELAY_ms+7)& (0+255),f,c
 17378  0024D6  C007  F00B         	movff	??i2_DELAY_ms+4,i2DELAY_ms@cyclesRequiredForEntireDelay
 17379  0024DA  C008  F00C         	movff	??i2_DELAY_ms+5,i2DELAY_ms@cyclesRequiredForEntireDelay+1
 17380  0024DE  C009  F00D         	movff	??i2_DELAY_ms+6,i2DELAY_ms@cyclesRequiredForEntireDelay+2
 17381  0024E2  C00A  F00E         	movff	??i2_DELAY_ms+7,i2DELAY_ms@cyclesRequiredForEntireDelay+3
 17382                           
 17383                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 17384  0024E6  0E56               	movlw	86
 17385  0024E8  260B               	addwf	i2DELAY_ms@cyclesRequiredForEntireDelay,f,c
 17386  0024EA  0EFF               	movlw	255
 17387  0024EC  220C               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 17388  0024EE  220D               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 17389  0024F0  220E               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 17390                           
 17391                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 17392  0024F2  BE0E               	btfsc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 17393  0024F4  0012               	return	
 17394  0024F6  500E               	movf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 17395  0024F8  100D               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 17396  0024FA  100C               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 17397  0024FC  E10C               	bnz	i2l701
 17398  0024FE  0EC4               	movlw	196
 17399  002500  5C0B               	subwf	i2DELAY_ms@cyclesRequiredForEntireDelay,w,c
 17400  002502  A0D8               	btfss	status,0,c
 17401  002504  0012               	return	
 17402  002506  D007               	goto	i2l701
 17403  002508                     i2l702:
 17404                           
 17405                           ;delay.c: 128: {
 17406                           ;delay.c: 129: __nop();
 17407  002508  F000               	nop	
 17408                           
 17409                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 17410  00250A  0ED9               	movlw	217
 17411  00250C  260B               	addwf	i2DELAY_ms@cyclesRequiredForEntireDelay,f,c
 17412  00250E  0EFF               	movlw	255
 17413  002510  220C               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+1,f,c
 17414  002512  220D               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+2,f,c
 17415  002514  220E               	addwfc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,f,c
 17416  002516                     i2l701:
 17417  002516  BE0E               	btfsc	i2DELAY_ms@cyclesRequiredForEntireDelay+3,7,c
 17418  002518  0012               	return	
 17419  00251A  500E               	movf	i2DELAY_ms@cyclesRequiredForEntireDelay+3,w,c
 17420  00251C  100D               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+2,w,c
 17421  00251E  100C               	iorwf	i2DELAY_ms@cyclesRequiredForEntireDelay+1,w,c
 17422  002520  E1F3               	bnz	i2l702
 17423  002522  040B               	decf	i2DELAY_ms@cyclesRequiredForEntireDelay,w,c
 17424  002524  B0D8               	btfsc	status,0,c
 17425  002526  D7F0               	goto	i2l702
 17426  002528  0012               	return		;funcret
 17427  00252A                     __end_ofi2_DELAY_ms:
 17428                           	opt stack 0
 17429                           tblptru	equ	0xFF8
 17430                           tblptrh	equ	0xFF7
 17431                           tblptrl	equ	0xFF6
 17432                           tablat	equ	0xFF5
 17433                           prodh	equ	0xFF4
 17434                           prodl	equ	0xFF3
 17435                           intcon	equ	0xFF2
 17436                           intcon2	equ	0xFF1
 17437                           intcon3	equ	0xFF0
 17438                           postinc0	equ	0xFEE
 17439                           plusw0	equ	0xFEB
 17440                           wreg	equ	0xFE8
 17441                           indf1	equ	0xFE7
 17442                           postinc1	equ	0xFE6
 17443                           fsr1h	equ	0xFE2
 17444                           fsr1l	equ	0xFE1
 17445                           indf2	equ	0xFDF
 17446                           postinc2	equ	0xFDE
 17447                           postdec2	equ	0xFDD
 17448                           plusw2	equ	0xFDB
 17449                           fsr2h	equ	0xFDA
 17450                           fsr2l	equ	0xFD9
 17451                           status	equ	0xFD8
 17452                           tblptru	equ	0xFF8
 17453                           tblptrh	equ	0xFF7
 17454                           tblptrl	equ	0xFF6
 17455                           tablat	equ	0xFF5
 17456                           prodh	equ	0xFF4
 17457                           prodl	equ	0xFF3
 17458                           intcon	equ	0xFF2
 17459                           intcon2	equ	0xFF1
 17460                           intcon3	equ	0xFF0
 17461                           postinc0	equ	0xFEE
 17462                           plusw0	equ	0xFEB
 17463                           wreg	equ	0xFE8
 17464                           indf1	equ	0xFE7
 17465                           postinc1	equ	0xFE6
 17466                           fsr1h	equ	0xFE2
 17467                           fsr1l	equ	0xFE1
 17468                           indf2	equ	0xFDF
 17469                           postinc2	equ	0xFDE
 17470                           postdec2	equ	0xFDD
 17471                           plusw2	equ	0xFDB
 17472                           fsr2h	equ	0xFDA
 17473                           fsr2l	equ	0xFD9
 17474                           status	equ	0xFD8
 17475                           
 17476                           	psect	rparam
 17477  0000                     tblptru	equ	0xFF8
 17478                           tblptrh	equ	0xFF7
 17479                           tblptrl	equ	0xFF6
 17480                           tablat	equ	0xFF5
 17481                           prodh	equ	0xFF4
 17482                           prodl	equ	0xFF3
 17483                           intcon	equ	0xFF2
 17484                           intcon2	equ	0xFF1
 17485                           intcon3	equ	0xFF0
 17486                           postinc0	equ	0xFEE
 17487                           plusw0	equ	0xFEB
 17488                           wreg	equ	0xFE8
 17489                           indf1	equ	0xFE7
 17490                           postinc1	equ	0xFE6
 17491                           fsr1h	equ	0xFE2
 17492                           fsr1l	equ	0xFE1
 17493                           indf2	equ	0xFDF
 17494                           postinc2	equ	0xFDE
 17495                           postdec2	equ	0xFDD
 17496                           plusw2	equ	0xFDB
 17497                           fsr2h	equ	0xFDA
 17498                           fsr2l	equ	0xFD9
 17499                           status	equ	0xFD8


Data Sizes:
    Strings     457
    Constant    156
    Data        5
    BSS         511
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      67
    BANK0           160     89     160
    BANK1           256     30     134
    BANK2           256      0     171
    BANK3           256      0     140
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    sprintf$3726	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_22(CODE[17]), STR_21(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[12]), STR_19(CODE[20]), STR_18(CODE[17]), STR_17(CODE[22]), 
		 -> STR_16(CODE[22]), STR_15(CODE[25]), STR_14(CODE[11]), STR_13(CODE[11]), 
		 -> STR_12(CODE[28]), STR_11(CODE[22]), STR_10(CODE[17]), STR_9(CODE[32]), 
		 -> STR_8(CODE[33]), STR_7(CODE[16]), STR_6(CODE[29]), STR_5(CODE[31]), 
		 -> STR_4(CODE[32]), STR_3(CODE[31]), STR_2(CODE[17]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK2[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[12]), STR_19(CODE[20]), STR_14(CODE[11]), STR_13(CODE[11]), 
		 -> STR_12(CODE[28]), STR_9(CODE[32]), STR_8(CODE[33]), STR_7(CODE[16]), 
		 -> STR_6(CODE[29]), STR_5(CODE[31]), STR_4(CODE[32]), STR_3(CODE[31]), 

    Read_MAC_Address@myAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    EEPROM_Read@dest	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK3[140]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    SW_Ack_SrED@Dest_Addr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK3[140]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 140
		 -> NULL(NULL[0]), ConnectionTable(BANK3[140]), RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> NULL(NULL[0]), ConnectionTable(BANK3[140]), RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S1002$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK2[138]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    S1002$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK2[138]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    Forward_Packet_PANCr_to_EDy@fw_payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    Forward_Packet_PANCr_to_EDy@EDxAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    store_connection_tb@payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    Find_Index@DestAddr	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    NVMalloc@location	PTR unsigned int  size(1) Largest target is 2
		 -> nvmmyIndex(BANK0[2]), nvmRole(BANK0[2]), nvmEdc(BANK0[2]), nvmOutFrameCounter(BANK0[2]), 
		 -> nvmConnectionTable(COMRAM[2]), nvmConnMode(BANK0[2]), nvmCurrentChannel(BANK0[2]), nvmMyPANID(BANK0[2]), 

    NVMWrite@source	PTR unsigned char  size(2) Largest target is 140
		 -> myConnectionIndex_in_PanCo(BANK0[1]), myPANID(BANK0[2]), currentChannel(BANK0[1]), ConnMode(BANK0[1]), 
		 -> role(COMRAM[1]), conn_size(COMRAM[1]), ConnectionTable(BANK3[140]), 

    NVMRead@dest	PTR unsigned char  size(2) Largest target is 140
		 -> myConnectionIndex_in_PanCo(BANK0[1]), myPANID(BANK0[2]), currentChannel(BANK0[1]), ConnMode(BANK0[1]), 
		 -> role(COMRAM[1]), conn_size(COMRAM[1]), ConnectionTable(BANK3[140]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MiMAC_SetAltAddress@PANID	PTR unsigned char  size(1) Largest target is 2
		 -> myPANID(BANK0[2]), MAC_PANID(COMRAM[2]), 

    MiMAC_SetAltAddress@Address	PTR unsigned char  size(1) Largest target is 2
		 -> MiApp_StartConnection@tmp(COMRAM[2]), MiApp_ProtocolInit@tmp(BANK0[2]), P2PTasks@tmp(BANK0[2]), myNetworkAddress(COMRAM[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 40
		 -> TxBuffer(BANK1[40]), 

    S425$DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> NULL(NULL[0]), ConnectionTable(BANK3[140]), RxBuffer(BANK2[138]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> NULL(NULL[0]), ConnectionTable(BANK3[140]), RxBuffer(BANK2[138]), 

    S29$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S381$Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK2[138]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 

    S381$SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer(BANK2[138]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 138
		 -> RxBuffer.Payload(BANK2[68]), RxBuffer(BANK2[138]), 


Critical Paths under _main in COMRAM

    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _run_star_demo->_LCDDisplay
    _run_star_demo->_MiApp_ConnectionMode
    _STAR_DEMO_OPTIONS_MESSAGE->_LCDDisplay
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_MiApp_ConnectionMode
    _Initialize_Demo->_Read_MAC_Address
    _Read_MAC_Address->_EEPROM_Read
    _EEPROM_Read->_SPI1_Exchange8bit
    _NVMRead->_SPI1_Exchange8bit
    _NVMInit->_NVMalloc
    _MiApp_SetChannel->_MiMAC_SetChannel
    _P2PTasks->_store_connection_tb
    _store_connection_tb->_handle_lost_connection
    _MiMAC_SetAltAddress->_PHYSetShortRAMAddr
    _InitMRF24J40->_MiMAC_SetChannel
    _PHYGetShortRAMAddr->_SPI1_Exchange8bit
    _PHYGetLongRAMAddr->_SPI1_Exchange8bit
    _MiMAC_SetChannel->_PHYSetLongRAMAddr
    _PHYSetShortRAMAddr->_SPI1_Exchange8bit
    _PHYSetLongRAMAddr->_SPI1_Exchange8bit
    _DemoOutput_UnicastFail->_LCDDisplay
    _AddConnection->_NVMWrite
    _MiApp_ConnectionMode->_NVMWrite
    _NVMWrite->_SPI1_Exchange8bit
    _DemoOutput_Instruction->_LCDDisplay
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Update->_I2CWrite

Critical Paths under _high_isr in COMRAM

    i2_PHYSetShortRAMAddr->i2_SPI1_Exchange8bit
    i2_PHYGetShortRAMAddr->i2_SPI1_Exchange8bit
    i2_PHYGetLongRAMAddr->i2_SPI1_Exchange8bit
    _UserInterruptHandler->i2_DELAY_ms
    _I2CTask->i2_DELAY_ms

Critical Paths under _main in BANK0

    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _STAR_DEMO_OPTIONS_MESSAGE->_LCDDisplay
    _MiApp_TransceiverPowerState->_P2PTasks
    _MiMAC_PowerState->_InitMRF24J40
    _CheckForData->_SendPacket
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _ButtonPressed->_MiWi_TickGet
    _MiApp_ProtocolInit->_MiMAC_Init
    _MiMAC_Init->_InitMRF24J40
    _MiApp_SetChannel->_NVMWrite
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_Forward_Packet_PANCr_to_EDy
    _SW_Ack_SrED->_SendPacket
    _Forward_Packet_PANCr_to_EDy->_MiApp_UnicastConnection
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_InitMRF24J40
    _DemoOutput_UnicastFail->_LCDDisplay
    _AddConnection->_NVMWrite
    _MiApp_ConnectionMode->_NVMWrite
    _DemoOutput_Instruction->_LCDDisplay
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _Run_Demo->_run_star_demo
    _run_star_demo->_MiApp_EstablishConnection
    _Initialize_Demo->_MiApp_EstablishConnection

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 1581388
                                             29 BANK1      1     1      0
                _DemoOutput_Greeting
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                      1     1      0   16671
                                             43 BANK0      1     1      0
                      _ButtonPressed
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1761
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    1761
                           _DELAY_ms
                           _I2CWrite
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0 1173105
                      _run_star_demo
 ---------------------------------------------------------------------------------
 (2) _run_star_demo                                       13    13      0 1173105
                                             17 BANK1     12    12      0
                      _ButtonPressed
                       _CheckForData
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
                         _LCDDisplay
                          _LCD_Erase
                         _LCD_Update
               _MiApp_ConnectionMode
               _MiApp_DiscardMessage
          _MiApp_EstablishConnection
             _MiApp_MessageAvailable
                   _MiApp_SetChannel
        _MiApp_TransceiverPowerState
            _MiApp_UnicastConnection
                  _MiApp_UnicastStar
                       _MiWi_TickGet
          _STAR_DEMO_OPTIONS_MESSAGE
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _STAR_DEMO_OPTIONS_MESSAGE                            1     1      0   16011
                                             43 BANK0      1     1      0
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastStar                                   14    14      0  249904
                                              0 BANK1     13    13      0
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_TransceiverPowerState                          1     1      0  290927
                                              0 BANK1      1     1      0
                       _CheckForData
                   _MiMAC_PowerState
                           _NVMWrite
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (4) _MiMAC_PowerState                                    10    10      0   35911
                                             20 BANK0     10    10      0
                       _InitMRF24J40
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (4) _CheckForData                                         2     2      0   53316
                                             63 BANK0      2     2      0
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _DemoOutput_UpdateTxRx                                2     1      1   10366
                                             40 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (4) _LCDTRXCount                                          2     1      1   10161
                                             36 COMRAM     1     1      0
                                             39 BANK0      1     0      1
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     612
                                              5 BANK0      8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      1     1      0  372393
                                             17 BANK1      1     1      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
             _DemoOutput_Instruction
                     _DumpConnection
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
                           _NVMWrite
                   _Read_MAC_Address
 ---------------------------------------------------------------------------------
 (2) _Read_MAC_Address                                     5     3      2    1908
                                             34 COMRAM     3     1      2
                                              0 BANK0      2     2      0
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          5     1      4    1107
                                             29 COMRAM     5     1      4
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   7     7      0   58044
                                             24 BANK0      7     7      0
                   _MiApp_SetChannel
                         _MiMAC_Init
                _MiMAC_SetAltAddress
                            _NVMInit
                            _NVMRead
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _NVMRead                                              7     1      6    2327
                                             29 COMRAM     7     1      6
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    1791
                                             33 COMRAM     1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             5     2      3    1757
                                             28 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           4     1      3   25909
                                             20 BANK0      4     1      3
                       _InitMRF24J40
 ---------------------------------------------------------------------------------
 (3) _MiApp_SetChannel                                     1     1      0   17436
                                              2 BANK0      1     1      0
                   _MiMAC_SetChannel
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (3) _MiApp_EstablishConnection                           18    17      1  250488
                                              0 BANK1     17    16      1
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0  196630
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            22    22      0  196630
                                             76 BANK0     13    13      0
                      _AddConnection
                         _Find_Index
        _Forward_Packet_PANCr_to_EDy
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                           _NVMWrite
                        _SW_Ack_SrED
                         _SendPacket
                      _isSameAddress
                _store_connection_tb
 ---------------------------------------------------------------------------------
 (6) _store_connection_tb                                  8     6      2     975
                                             35 COMRAM     2     0      2
                                              0 BANK0      4     4      0
             _handle_lost_connection
 ---------------------------------------------------------------------------------
 (7) _handle_lost_connection                               7     7      0     192
                                             28 COMRAM     7     7      0
 ---------------------------------------------------------------------------------
 (6) _SW_Ack_SrED                                          2     0      2   52713
                                             63 BANK0      2     0      2
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                 8     8      0     408
                                             28 COMRAM     8     8      0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _Forward_Packet_PANCr_to_EDy                          7     2      5   70065
                                             69 BANK0      7     2      5
             _DemoOutput_UnicastFail
            _MiApp_UnicastConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_UnicastConnection                              2     1      1   53365
                                             67 BANK0      2     1      1
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (8) _MiApp_UnicastAddress                                 4     0      4   52997
                                             63 BANK0      4     0      4
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _SendPacket                                          16    10      6   52620
                                             47 BANK0     16    10      6
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (5) _MiMAC_SendPacket                                    27    17     10   46708
                                             20 BANK0     27    17     10
                       _InitMRF24J40
                _MiMAC_SetAltAddress
                       _MiWi_TickGet
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (3) _MiWi_TickGet                                        10     6      4     516
                                             28 COMRAM     5     1      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) _MiMAC_SetAltAddress                                  2     1      1    4887
                                             32 COMRAM     2     1      1
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (6) _InitMRF24J40                                        20    20      0   25608
                                              0 BANK0     20    20      0
                   _MiMAC_SetChannel
                  _PHYGetLongRAMAddr
                 _PHYGetShortRAMAddr
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (7) _PHYGetShortRAMAddr                                   3     3      0     180
                                             29 COMRAM     3     3      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _PHYGetLongRAMAddr                                    6     4      2     614
                                             29 COMRAM     6     4      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _MiMAC_SetChannel                                     2     1      1   12324
                                             35 COMRAM     2     1      1
                  _PHYSetLongRAMAddr
                 _PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (6) _PHYSetShortRAMAddr                                   3     2      1    3770
                                             29 COMRAM     3     2      1
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _PHYSetLongRAMAddr                                    6     3      3    8144
                                             29 COMRAM     6     3      3
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _DemoOutput_UnicastFail                               0     0      0   15969
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (6) _Find_Index                                           5     3      2     483
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        7     7      0    7063
                                              2 BANK0      7     7      0
                           _NVMWrite
                  _Total_Connections
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     3      4     780
                                             28 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0     276
                                             28 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (7) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MiApp_ConnectionMode                                 2     2      0    5112
                                             36 COMRAM     1     1      0
                                              2 BANK0      1     1      0
                           _NVMWrite
 ---------------------------------------------------------------------------------
 (6) _NVMWrite                                             9     3      6    5028
                                             29 COMRAM     7     1      6
                                              0 BANK0      2     2      0
                           _MacroNop
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI1_Exchange8bit                                    1     1      0      42
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DumpConnection                                       3     3      0     594
                                             28 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Instruction                               0     0      0   15969
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   17772
                                             43 BANK0      2     1      1
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   17404
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   15969
                                             36 COMRAM     1     1      0
                                             39 BANK0      4     0      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    27     12    9492
                                              4 BANK0     35    23     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0     138
                                             28 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     566
                                             28 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     566
                                             35 COMRAM     1     1      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1068
                                             28 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           0     0      0     326
                           _I2CWrite
 ---------------------------------------------------------------------------------
 (4) _I2CWrite                                             2     1      1     326
                                             28 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            1     1      0     138
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                            14    12      2    1435
                                             28 COMRAM     6     4      2
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _high_isr                                           14    14      0    1638
                                             14 COMRAM    14    14      0
               _UserInterruptHandler
                i2_PHYGetLongRAMAddr
               i2_PHYGetShortRAMAddr
               i2_PHYSetShortRAMAddr
 ---------------------------------------------------------------------------------
 (16) i2_PHYSetShortRAMAddr                                3     2      1     337
                                              1 COMRAM     3     2      1
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (16) i2_PHYGetShortRAMAddr                                3     3      0     130
                                              1 COMRAM     3     3      0
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (16) i2_PHYGetLongRAMAddr                                 6     4      2     231
                                              1 COMRAM     6     4      2
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (17) i2_SPI1_Exchange8bit                                 1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) _UserInterruptHandler                                0     0      0     420
                            _I2CTask
                         i2_DELAY_ms
 ---------------------------------------------------------------------------------
 (17) _I2CTask                                             0     0      0     210
                         i2_DELAY_ms
 ---------------------------------------------------------------------------------
 (17) i2_DELAY_ms                                         14    12      2     210
                                              0 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DemoOutput_Greeting
     _DELAY_ms
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
       _LCD_Update
         _I2CWrite
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _Initialize_Demo
     _DemoOutput_Channel
       _DELAY_ms
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
         _LCD_Update
           _I2CWrite
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DemoOutput_ChannelError
     _DemoOutput_Instruction
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
         _LCD_Update
           _I2CWrite
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DumpConnection
     _MiApp_ConnectionMode
       _NVMWrite
         _MacroNop
         _SPI1_Exchange8bit
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _Total_Connections
             _isSameAddress
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                 _LCD_Update
                   _I2CWrite
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiMAC_DiscardPacket
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _NVMWrite
             _MacroNop
             _SPI1_Exchange8bit
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _InitMRF24J40
             _MiMAC_SetChannel
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _PHYGetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYGetShortRAMAddr
               _SPI1_Exchange8bit
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
     _MiApp_ProtocolInit
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
         _NVMWrite
           _MacroNop
           _SPI1_Exchange8bit
       _MiMAC_Init
         _InitMRF24J40
           _MiMAC_SetChannel
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _PHYGetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYGetShortRAMAddr
             _SPI1_Exchange8bit
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
       _MiMAC_SetAltAddress
         _PHYSetShortRAMAddr
           _SPI1_Exchange8bit
       _NVMInit
         _NVMalloc
       _NVMRead
         _SPI1_Exchange8bit
       _NVMWrite
         _MacroNop
         _SPI1_Exchange8bit
     _MiApp_SetChannel
       _MiMAC_SetChannel
         _PHYSetLongRAMAddr
           _SPI1_Exchange8bit
         _PHYSetShortRAMAddr
           _SPI1_Exchange8bit
       _NVMWrite
         _MacroNop
         _SPI1_Exchange8bit
     _NVMWrite
       _MacroNop
       _SPI1_Exchange8bit
     _Read_MAC_Address
       _EEPROM_Read
         _SPI1_Exchange8bit
   _Run_Demo
     _run_star_demo
       _ButtonPressed
         _MiWi_TickGet
       _CheckForData
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _DELAY_ms
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _LCD_Erase
           _LCD_Update
             _I2CWrite
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
         _LCD_Update
           _I2CWrite
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _LCD_Erase
       _LCD_Update
         _I2CWrite
       _MiApp_ConnectionMode
         _NVMWrite
           _MacroNop
           _SPI1_Exchange8bit
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_EstablishConnection
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPI1_Exchange8bit
               _Total_Connections
               _isSameAddress
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                   _LCD_Update
                     _I2CWrite
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPI1_Exchange8bit
                           _PHYSetShortRAMAddr
                             _SPI1_Exchange8bit
                         _PHYGetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYGetShortRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             _isSameAddress
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _Total_Connections
             _isSameAddress
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                 _LCD_Update
                   _I2CWrite
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiMAC_DiscardPacket
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _NVMWrite
             _MacroNop
             _SPI1_Exchange8bit
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiApp_SetChannel
         _MiMAC_SetChannel
           _PHYSetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
         _NVMWrite
           _MacroNop
           _SPI1_Exchange8bit
       _MiApp_TransceiverPowerState
         _CheckForData
           _MiWi_TickGet
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
         _MiMAC_PowerState
           _InitMRF24J40
             _MiMAC_SetChannel
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _PHYGetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYGetShortRAMAddr
               _SPI1_Exchange8bit
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _PHYGetLongRAMAddr
             _SPI1_Exchange8bit
           _PHYGetShortRAMAddr
             _SPI1_Exchange8bit
           _PHYSetShortRAMAddr
             _SPI1_Exchange8bit
         _NVMWrite
           _MacroNop
           _SPI1_Exchange8bit
         _P2PTasks
           _AddConnection
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _Total_Connections
             _isSameAddress
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                 _LCD_Update
                   _I2CWrite
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _InitMRF24J40
                       _MiMAC_SetChannel
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _PHYGetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYGetShortRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiMAC_SetAltAddress
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _MiWi_TickGet
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiMAC_DiscardPacket
           _MiMAC_SetAltAddress
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
           _MiWi_TickGet
           _NVMWrite
             _MacroNop
             _SPI1_Exchange8bit
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _InitMRF24J40
                 _MiMAC_SetChannel
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _PHYGetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYGetShortRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiMAC_SetAltAddress
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _MiWi_TickGet
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
       _MiApp_UnicastStar
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _NVMWrite
                 _MacroNop
                 _SPI1_Exchange8bit
               _Total_Connections
               _isSameAddress
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                   _LCD_Update
                     _I2CWrite
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _InitMRF24J40
                         _MiMAC_SetChannel
                           _PHYSetLongRAMAddr
                             _SPI1_Exchange8bit
                           _PHYSetShortRAMAddr
                             _SPI1_Exchange8bit
                         _PHYGetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYGetShortRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetLongRAMAddr
                           _SPI1_Exchange8bit
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiMAC_SetAltAddress
                         _PHYSetShortRAMAddr
                           _SPI1_Exchange8bit
                       _MiWi_TickGet
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiMAC_DiscardPacket
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _NVMWrite
               _MacroNop
               _SPI1_Exchange8bit
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _InitMRF24J40
                     _MiMAC_SetChannel
                       _PHYSetLongRAMAddr
                         _SPI1_Exchange8bit
                       _PHYSetShortRAMAddr
                         _SPI1_Exchange8bit
                     _PHYGetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYGetShortRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiMAC_SetAltAddress
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _MiWi_TickGet
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _InitMRF24J40
                   _MiMAC_SetChannel
                     _PHYSetLongRAMAddr
                       _SPI1_Exchange8bit
                     _PHYSetShortRAMAddr
                       _SPI1_Exchange8bit
                   _PHYGetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYGetShortRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetLongRAMAddr
                     _SPI1_Exchange8bit
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiMAC_SetAltAddress
                   _PHYSetShortRAMAddr
                     _SPI1_Exchange8bit
                 _MiWi_TickGet
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
             _isSameAddress
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _InitMRF24J40
               _MiMAC_SetChannel
                 _PHYSetLongRAMAddr
                   _SPI1_Exchange8bit
                 _PHYSetShortRAMAddr
                   _SPI1_Exchange8bit
               _PHYGetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYGetShortRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetLongRAMAddr
                 _SPI1_Exchange8bit
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiMAC_SetAltAddress
               _PHYSetShortRAMAddr
                 _SPI1_Exchange8bit
             _MiWi_TickGet
             _PHYSetLongRAMAddr
               _SPI1_Exchange8bit
             _PHYSetShortRAMAddr
               _SPI1_Exchange8bit
       _MiWi_TickGet
       _STAR_DEMO_OPTIONS_MESSAGE
         _LCDDisplay
           _DELAY_ms
           _LCD_Erase
           _LCD_Update
             _I2CWrite
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
       _I2CWrite
   _TMR1_Initialize
     _TMR1_StartTimer
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
       _LCD_Update
         _I2CWrite
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit

 _high_isr (ROOT)
   _UserInterruptHandler
     _I2CTask
       i2_DELAY_ms
     i2_DELAY_ms
   i2_PHYGetLongRAMAddr
     i2_SPI1_Exchange8bit
   i2_PHYGetShortRAMAddr
     i2_SPI1_Exchange8bit
   i2_PHYSetShortRAMAddr
     i2_SPI1_Exchange8bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      8C      12       54.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      AB      10       66.8%
BITBANK1           100      0       0       7        0.0%
BANK1              100     1E      86       8       52.3%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      43       1       70.5%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A0       6        0.0%
DATA                 0      0     2A0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Feb 13 19:24:33 2016

                          _SPI1_Exchange8bit 35A2                       _PUSH_BUTTON_press_time 0100  
                                          _i 002D                               _LCD_Initialize 302E  
                        P2PTasks@final_index 00B3                    __end_of_MiApp_UnicastStar 28D0  
                       ?_MiMAC_DiscardPacket 0001                               ?_isSameAddress 001D  
                         ?_SPI1_Exchange8bit 0001                                           l71 1B9A  
                                         l65 1B50                                           l77 1BAE  
                                         l99 0EA4                                           _t1 0104  
                                         _t2 00CF                                           _t3 00D3  
                                ?_LCD_Update 0001                          ___wmul@multiplicand 001F  
                        MiApp_ProtocolInit@i 007E                    i2PHYSetShortRAMAddr@value 0002  
                               NVMRead@count 0022                                   _MiMAC_Init 31F0  
                            _P2PCapacityInfo 00E2                                          l111 1174  
                                        l103 0F62                                          l106 1020  
                                        l108 10AE                                          l160 1A54  
                                        l137 182A                                          l154 19B2  
                                        l181 21C0                                          l182 21D6  
                                        l159 1A2C                                          l511 17D8  
                                        l507 17C2                                          l515 1D62  
                                        l179 2194                                          l196 3146  
                                        l612 20E8                                          l701 2444  
                                        l702 2436                                          l463 17C0  
                                        l543 2D42                                          l527 29E8  
                                        l632 2CB0                                          l457 136E  
                                        l474 14F2                                          l487 1670  
                                        l832 35AA                                          l682 3236  
                                        l781 3552                                          l876 2EB2  
                                        l879 2ED0                                  P2PTasks@tmp 00B1  
                __size_of_PHYSetShortRAMAddr 0028                              _timer1ReloadVal 00DE  
                        ??_SPI1_Exchange8bit 001D                                          _tt1 0108  
                                        _tt2 010C                              __end_of_I2CTask 2BF0  
                __end_of_MiMAC_SetAltAddress 2E04                              ??_AddConnection 0062  
                                LCDDisplay@i 0025                                          prod 000FF3  
                                        wreg 000FE8                                NVMInit@result 0022  
                                ?i2_DELAY_ms 0001            __end_of_MiApp_EstablishConnection 218E  
                          _Total_Connections 2F96                         i2_PHYSetShortRAMAddr 33D4  
                                       l1034 27D2                                         l1133 2B06  
                                       l1313 02EA                                         l1314 02B4  
                                       l1250 0A02                                         l1331 032E  
                                       l1332 0332                                         l1254 0B12  
                                       l1328 02F4                                         l1258 0C0A  
                                       l1371 054A                                         l1380 05EA  
                                       l1382 060A                                         l1377 05C0  
                                       l1297 01AA                                         l1394 076C  
                                       l1379 05E6                                         l1398 06D0  
                                       l1940 3024                                         l1950 31E6  
                                       l9119 32E2         __size_of_Forward_Packet_PANCr_to_EDy 009C  
                                       l9543 2C7E                                         l9539 2C76  
                                       l9573 2CB2                                         l9565 2CA6  
                                       l9557 2C9C                                         l9593 2CD4  
                                       l9585 2CCA                                         l9597 2CDA  
                                       STR_1 FFB3                                         STR_2 FFA2  
                                       STR_3 FE8E                                         STR_4 FE4E  
                                       STR_5 FEAD                                         STR_6 FECC  
                                       STR_7 FFC4                                         STR_8 FE2D  
                                       STR_9 FE6E                                         _LATA 000F89  
                                       _LATB 000F8A                                         _LATD 000F8C  
                                       _LATE 000F8D                       __size_of_ButtonPressed 0094  
                  DemoOutput_Channel@channel 008C                                         _TMR1 000FCE  
                                       _MiWi FD91                           ?_Total_Connections 0001  
                     MiApp_UnicastStar@SecEn 016C                   MiMAC_SetChannel@offsetFreq 0024  
                                       _main 346A                              __end_of_NVMInit 295A  
                            __end_of_NVMRead 2F96                                         _role 0043  
                                       fsr1h 000FE2                                         fsr2h 000FDA  
                                       indf1 000FE7                                         fsr1l 000FE1  
                                       indf2 000FDF                                         fsr2l 000FD9  
                         __size_of_LCD_Erase 001C                               ??_InitMRF24J40 0060  
                           __end_of_I2CWrite 3566                                         prodh 000FF4  
                                       prodl 000FF3                                         start 0188  
                     __size_of_run_star_demo 0548                    __end_of_SPI1_Exchange8bit 35B2  
                           __end_of_DELAY_ms 2458                        MiApp_ProtocolInit@tmp 0078  
                               _sprintf$3720 0077                                 _sprintf$3726 0079  
                               _sprintf$3719 0075                          ??_Total_Connections 001D  
                     __end_of_LCD_Initialize 3072                              ?_DumpConnection 0001  
                               ___param_bank 000010                            _PHYGetLongRAMAddr 2E04  
                      ??_MiMAC_DiscardPacket 001D                               NVMRead@oldRFIE 0024  
                         ?_PHYGetLongRAMAddr 001E                             __end_of_P2PTasks 17DE  
               __end_of_MiApp_DiscardMessage 35E6                                __CFG_PLLDIV$2 000000  
                                 _Find_Index 2718                   MiMAC_PowerState@PowerState 0074  
                                      l11003 065A                                        l11021 0698  
                                      l11041 0712                                        l11009 066E  
                                      l11017 068E                                        l10321 1B2A  
                                      l11043 0718                                        l11027 06B4  
                                      l11203 2D56                                        l11211 2D84  
                                      l11061 07AC                                        l11053 0758  
                                      l11037 06E0                                        l11117 3122  
                                      l11133 268A                                        l10341 1BC6  
                                      l12101 30CE                                        l11071 080A  
                                      l10327 1B68                                        l10319 1B1E  
                                      l11311 0FC4                                        l11081 085C  
                                      l11161 26D0                                        l11233 3356  
                                      l10353 1C02                                        l10329 1B74  
                                      l10505 18D4                                        l11209 2D82  
                                      l12025 2082                                        l12017 2054  
                                      l11075 083C                                        l11067 07E6  
                                      l11059 076E                                        l11091 088C  
                                      l10371 1CB6                                        l10523 190A  
                                      l10515 18F2                                        l10507 18DA  
                                      l10435 17F8                                        l10427 17E8  
                                      l12107 30E4                                        l12115 349A  
                                      l11085 0870                                        l11077 084E  
                                      l11093 08A4                                        l10613 1AB2  
                                      l10605 1A8E                                        l11405 1280  
                                      l10703 31DC                                        l11175 2704  
                                      l11183 2F9A                                        l11239 3376  
                                      l10543 1974                                        l10527 191A  
                                      l10439 1802                                        l11407 12AA  
                                      l11343 1114                                        l11255 0E14  
                                      l12063 2138                                        l12303 08D6  
                                      l10801 0254                                        l11441 279C  
                                      l10625 1AC2                                        l10609 1A94  
                                      l10449 1824                                        l11329 1084  
                                      l11273 0E3E                                        l11265 0E1C  
                                      l11257 0E18                                        l12073 2174  
                                      l12401 0C94                                        l11531 1F34  
                                      l11427 271C                                        l11443 279E  
                                      l10395 2EDC                                        l10571 1A02  
                                      l10555 19B4                                        l10563 19DA  
                                      l11363 11EA                                        l11283 0E7A  
                                      l11603 13CC                                        l12163 1D12  
                                      l12243 2ABA                                        l12139 27F6  
                                      l12147 2840                                        l10901 0452  
                                      l10821 02B8                                        l11189 2FD6  
                                      l10469 1846                                        l11373 122A  
                                      l11357 11B4                                        l11381 1230  
                                      l11269 0E36                                        l11461 22D0  
                                      l12077 2180                                        l12173 1D66  
                                      l12229 2A6A                                        l12413 0CD8  
                                      l12405 0C9C                                        l12421 0CFA  
                                      l10903 0456                                        l10831 02F8  
                                      l11535 1F3C                                        l11527 1F2A  
                                      l11519 1EEE                                        l10591 1A58  
                                      l10583 1A2E                                        l10479 185C  
                                      l11391 126A                                        l11383 1254  
                                      l11471 2376                                        l12431 0D34  
                                      l12351 0A96                                        l12327 09C6  
                                      l12319 096E                                        l10825 02D6  
                                      l10809 027A                                        l11393 1270  
                                      l11369 1214                                        l11297 0F06  
                                      l11457 22A8                                        l11713 1612  
                                      l11705 15B6                                        l11633 1460  
                                      l12185 1D94                                        l12345 0A0A  
                                      l12433 0D3C                                        l12337 09EE  
                                      l10755 3502                                        l10675 2FF4  
                                      l10659 34F8                                        l10931 04AE  
                                      l10915 047E                                        l10843 0338  
                                      l10827 02EE                                        l11563 1FD0  
                                      l10499 18BE                                        l11395 127A  
                                      l11707 15DA                                        l11643 146E  
                                      l11619 143E                                        l12187 1E28  
                                      l12443 0D5C                                        l12427 0D2E  
                                      l12371 0BD8                                        l10677 2FFC  
                                      l10917 0482                                        l10837 031A  
                                      l10829 02F2                                        l10781 01C0  
                                      l12293 3190                                        l11549 1F4A  
                                      l10597 1A78                                        l11741 168A  
                                      l11733 1676                                        l11725 165A  
                                      l12197 1E92                                        l12445 0D6C  
                                      l12429 0D30                                        l12381 0C04  
                                      l12357 0BAC                                        l12437 0D4A  
                                      l10687 301A                                        l10679 3000  
                                      l10695 31BE                                        l10951 04FC  
                                      l10863 0396                                        l10847 0348  
                                      l10855 0370                                        l10775 01B4  
                                      l12295 31A4                                        l11495 263E  
                                      l11639 1466                                        l11911 320E  
                                      l12367 0BD0                                        l10697 31C6  
                                      l10961 0524                                        l10929 04AA  
                                      l10945 04D6                                        l10873 03C4  
                                      l10865 03A8                                        l10849 0358  
                                      l10793 01FC                                        l10777 01B8  
                                      l10785 01C6                                        l10769 0192  
                                      l11681 1508                                        l11841 2284  
                                      l11825 2228                                        l12553 340E  
                                      l10699 31CA                                        l10955 050E  
                                      l10947 04E8                                        l10891 0432  
                                      l10859 0386                                        l10779 01BC  
                                      l11763 1716                                        l11755 170A  
                                      l11659 14A8                                        l11835 226C  
                                      l11819 221A                                        l12379 0BFC  
                                      l12459 0DF0                                        l12619 3484  
                                      l10973 0582                                        l10869 03B6  
                                      l10877 03CA                                        l11781 1772  
                                      l11773 173E                                        l11749 16FE  
                                      l11693 158E                                        l12565 341A  
                                      l10967 054E                                        l10895 0444  
                                      l10879 0404                                        l11791 1786  
                                      l11935 2F82                                        l10993 061A  
                                      l11697 1598                                        l11929 2F68  
                                      l12585 2B1C                                        l11849 2298  
                                      l11961 2A1E                                        l10987 0604  
                                      l10979 05C4                                        l11947 3326  
                                      l11797 17CC                                        l12597 2B4A  
                                      l11973 2A4C                                        l11965 2A30  
                                      l11957 2A0C                                        l11975 2A50  
                                      l11979 2A58                                        l11987 287E  
                                      l11997 28C6                                        l11999 28CC  
                                      ?_main 0001                                        STR_10 FF91  
                                      STR_11 FF34                                        STR_20 FFD4  
                                      STR_12 FEE9                MiApp_EstablishConnection@Mode 0168  
                                      STR_13 FFEB                                        STR_21 FF5E  
                                      STR_14 FFE0                                        STR_22 FF6F  
                                      STR_15 FF05                                        STR_16 FF1E  
                                      STR_17 FF1E                                        STR_18 FF80  
                                      STR_19 FF4A                              _TMR1_StartTimer 35EC  
                                      u10045 2F44                                        u11110 05B6  
                                      u10046 2F46                                        u10055 33D0  
                                      u10056 33D2                                        u10065 334E  
                                      u10066 3350                                        u10075 2E50  
                                      u10076 2E52                                        u11310 0870  
                                      u10270 1818                                        u10520 1AFE  
                                      u10700 2590                                        u10620 2538  
                                      u11405 2714                                        u11406 2716  
                                      u10640 2550                                        _T1CON 000FCD  
                                      u10721 25C0                                        u12250 220A  
                                      u12410 28C0                                        u11540 0E0C  
                                      u10718 2594                                        u10638 253C  
                                      u12270 225C                                        u12335 2F92  
                                      u12336 2F94                                        u10665 256A  
                                      u10666 256E                                        u10658 2554  
                                      u12450 20C2                                        u10675 2576  
                                      u10676 257A                                        u11900 136C  
                                      u12700 09AE                                        u12535 30F2  
                                      u11920 13B0                                        u12536 30F4  
                                      u11950 13EC                                        u12590 283E  
                                      u12655 1EAE                                        u12656 1EB2  
                                      u11970 1414                                        u12690 0928  
                                      u12860 0DB8                                        u11965 1402  
                                      u11958 13F0                                        u11967 1406  
                                      u11995 142E                                        u11988 1418  
                                      u11997 1432                      ?_DemoOutput_Instruction 0001  
                            __end_of___lwdiv 302E                              __end_of___lwmod 31F0  
                                      i2l225 004A                                        i2l238 0140  
                                      i2l701 2516                                        i2l702 2508  
                                      i2l832 35BA                                        i2l776 2BD8  
                                      i2l769 2B7C                          ??_PHYGetLongRAMAddr 0020  
                                      _TMR1H 000FCF                                        _TMR0L 000FD6  
                                      _TMR1L 000FCE                                        _TRISA 000F92  
                                      _TRISB 000F93                                        _TRISC 000F94  
                                      _TRISD 000F95                                        _TRISE 000F96  
                           SendPacket@tParam 0098                                   _CommandLen 0026  
                                 _CommandPtr 0027                        __size_of_CheckForData 0068  
                     ?_DemoOutput_UpdateTxRx 0088                   __end_of_PHYGetShortRAMAddr 3354  
                  __end_of_Total_Connections 2FE4                                        _RxNum 00E5  
                     run_star_demo@select_ed 0184                                        _TxNum 00E7  
                        __size_of_LCDDisplay 0040                __size_of_MiApp_ConnectionMode 003A  
                                      _awake 00E8                              __end_of_dpowers FE25  
                      ?i2_PHYSetShortRAMAddr 0002                             SendPacket@status 0096  
                 store_connection_tb@payload 0024                __size_of_MiApp_UnicastAddress 001E  
                                _SW_Ack_SrED 329A                              __end_of_isdigit 3500  
                           __end_of_NVMWrite 2718                      __end_of_TMR1_Initialize 34E4  
                           __end_of_NVMalloc 32FA                                        tablat 000FF5  
                              InitMRF24J40@i 0073                                InitMRF24J40@j 0071  
                             ButtonPressed@t 0069                  __end_ofi2_SPI1_Exchange8bit 35C2  
                                      plusw0 000FEB                                        plusw2 000FDB  
                        __size_of_LCD_Update 001A                                        status 000FD8  
                            __end_of_sprintf 08B2          __end_of_MiApp_TransceiverPowerState 2A68  
                _MiApp_TransceiverPowerState 29E2                       run_star_demo@update_ed 0181  
                  __end_of_PHYGetLongRAMAddr 2E56                    __size_of_MiMAC_SetChannel 003E  
                       __size_of_EEPROM_Read 0042                    __size_of_Read_MAC_Address 0084  
                __end_of_DemoOutput_Greeting 346A                              ?_LCD_Initialize 0001  
                               __end_of_MiWi FE0F                              __initialization 2BF0  
                            ??_isSameAddress 0021                    __size_of_MiMAC_SendPacket 0332  
       STAR_DEMO_OPTIONS_MESSAGE@NetworkRole 008B                             __end_of_MacroNop 35F4  
                               __end_of_main 348A                          __size_ofi2_DELAY_ms 00D2  
                    handle_lost_connection@i 0023                   __size_of_MiApp_UnicastStar 008E  
                              high_isr@flags 0019                                _ButtonPressed 27AE  
                          _MACCurrentChannel 00E1                    PHYGetShortRAMAddr@address 001E  
                    MiMAC_PowerState@results 0079                                 _CheckForData 2CE4  
                                  ??_I2CTask 000F       MiApp_UnicastConnection@ConnectionIndex 00A4  
             __end_of_DemoOutput_Instruction 358E                                       ??_main 0026  
                                ?_MiMAC_Init 0074                      _DemoOutput_ChannelError 35FA  
                              __activetblptr 000002                                 NVMWrite@addr 0020  
                          __end_of_LCD_Erase 351C                                _run_star_demo 08B2  
                       __end_of_MiWi_TickGet 2EF8                      MiApp_SetChannel@channel 0062  
                       store_connection_tb@i 0063                         store_connection_tb@j 0062  
               __size_of_store_connection_tb 00E0                    PHYGetShortRAMAddr@tmpRFIE 0020  
                           __end_of_Run_Demo 35EC            MiApp_ProtocolInit@bNetworkFreezer 007A  
                       _MiMAC_ReceivedPacket 0DFA                    PHYSetShortRAMAddr@address 001F  
                                 _SendPacket 252A                                    ??_NVMInit 0022  
                                  ??_NVMRead 0024                                       _EECON2 000FA7  
                                     _ANCON0 000F48                                       _ANCON1 000F49  
                   ?_MiApp_UnicastConnection 00A3                                       _T1GCON 000F9A  
                             __CFG_WDTEN$OFF 000000                                       _INTCON 000FF2  
                                     i2l9655 2BB0                  __end_ofi2_PHYGetLongRAMAddr 2EA8  
                                     _OSCCON 000FD3                                       _RPINR1 000EE7  
                                     _RPOR17 000ED7                    PHYSetShortRAMAddr@tmpRFIE 0020  
                  __size_of_MiMAC_PowerState 0116                  i2PHYGetLongRAMAddr@toReturn 0006  
                      SPI1_Exchange8bit@data 001D                         __size_of_LCDTRXCount 0042  
              __size_of_UserInterruptHandler 0014                      ?_DemoOutput_UnicastFail 0001  
                 __size_of_SPI1_Exchange8bit 0010                                 i2DELAY_ms@ms 0001  
                             __CFG_XINST$OFF 000000                                       _TxData 00E6  
                           __end_of_high_isr 0188                      __end_of_TMR1_StartTimer 35F0  
                                     ___wmul 3422                               ?_ButtonPressed 0001  
                   __size_of_freezer_feature 0026                    __size_of_MiApp_SetChannel 002E  
                                  ??___lwdiv 0021                                    ??___lwmod 0024  
                                     _fix_me 00E9                                  ?_Find_Index 001D  
                                     clear_0 2BF6                                       clear_1 2C02  
                                     clear_2 2C0E                                       clear_3 2C1A  
                                     clear_4 2C26                                       _nvmEdc 00F1  
                               NVMalloc@size 001D                               ?_run_star_demo 0001  
                       __end_of_InitMRF24J40 1D02                                 __pdataCOMRAM 0042  
                                  ??_isdigit 001D                               LCDDisplay@text 0087  
                                  ?_I2CWrite 001D                                 __mediumconst FD90  
                      ?_MiMAC_ReceivedPacket 0001                  __size_of_DemoOutput_Channel 003E  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                 __size_of_Total_Connections 004E                                       tblptru 000FF8  
                     ??i2_PHYSetShortRAMAddr 0003                  ??_MiApp_EstablishConnection 0169  
                                  ?_DELAY_ms 001D                                    ??_sprintf 0070  
                           ?_TMR1_Initialize 0001                            _SYSTEM_Initialize 295A  
                                  ?_P2PTasks 0001                         _MiApp_DiscardMessage 35DC  
                        _PUSH_BUTTON_pressed 00E4                                   __accesstop 0060  
                    __end_of__initialization 2C62               __end_of_DemoOutput_UnicastFail 357A  
                                  P2PTasks@i 00B8                           ?_SYSTEM_Initialize 0001  
               i2PHYGetShortRAMAddr@toReturn 0003                          __size_of_MiMAC_Init 003A  
                              ___rparam_used 000001                               _chk_sel_status 00FE  
                           _LatestConnection 00E0                   __size_of_PHYGetLongRAMAddr 0052  
                               ??_LCDDisplay 0025                              NVMWrite@oldRFIE 0060  
                 _myConnectionIndex_in_PanCo 00FC                               __pcstackCOMRAM 0001  
              MiMAC_ReceivedPacket@bIntraPAN 0024        Forward_Packet_PANCr_to_EDy@fw_payload 00A5  
                             high_isr@RxBank 001B                                 __pidataBANK0 35F4  
                        ??_SYSTEM_Initialize 0023                     __size_of_Initialize_Demo 0082  
                  ??_DemoOutput_ChannelError 001D                                 ??_LCD_Update 001F  
                 i2PHYGetLongRAMAddr@address 0002                                    ?_NVMWrite 001E  
                    run_star_demo@switch_val 0183                 ?_Forward_Packet_PANCr_to_EDy 00A5  
                                  ?_NVMalloc 001D                   SendPacket@DestinationPANID 008F  
                   CheckForData@firstuint8_t 00A0                              _ConnectionTable 0300  
                            __CFG_OSC$INTOSC 000000              __end_of_MiApp_UnicastConnection 329A  
                                 ??_I2CWrite 001E                   i2PHYGetLongRAMAddr@tmpRFIE 0007  
                      InitMRF24J40@_dcnt_635 0065                                 ??i2_DELAY_ms 0003  
                                 ??_DELAY_ms 0060                    _END_DEVICES_Short_Address 0110  
                                ?_SendPacket 008F                           __end_of_LCDDisplay 3136  
                  __end_of_SYSTEM_Initialize 29E2              MiApp_TransceiverPowerState@Mode 0168  
                               sprintf@width 0082                        isSameAddress@Address1 001D  
                      isSameAddress@Address2 001F                                    ?_MacroNop 0001  
                                 __pbssBANK0 00B9                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                                   __pbssBANK3 0300  
                      ?_MiApp_DiscardMessage 0001                                   ??_P2PTasks 00AC  
                __size_of_MiApp_ProtocolInit 01E6                                NVMWrite@count 0022  
                        __size_of_Find_Index 0096                             ??_DumpConnection 001D  
                         __end_of_LCD_Update 3550                    SendPacket@SecurityEnabled 0094  
                             isSameAddress@i 0023                __size_ofi2_PHYGetShortRAMAddr 002C  
                            P2PTasks@FW_Stat 00B0                          InitMRF24J40@_ms_636 006D  
                           _MiMAC_SetChannel 3136                           MiMAC_SendPacket@t1 0082  
                         MiMAC_SendPacket@t2 0086                        CheckForData@tmpTxData 009F  
                  _MiApp_EstablishConnection 203E                     MiMAC_SetAltAddress@PANID 0021  
                           _Read_MAC_Address 2A68                   PHYGetShortRAMAddr@toReturn 001F  
                            ??_ButtonPressed 0022                           I2CWrite@Commandlen 001E  
                           _MiMAC_SendPacket 17DE                                    ?_Run_Demo 0001  
                                    ?___wmul 001D                             ?_TMR1_StartTimer 0001  
                         __end_ofi2_DELAY_ms 252A                        __size_of_MiWi_TickGet 0050  
                                    _I2CTask 2B6E                              ??_run_star_demo 0179  
                 __end_of_PHYSetShortRAMAddr 33D4                                   ??_NVMWrite 0024  
           run_star_demo@sw_layer_ack_status 0180                                   ??_NVMalloc 0020  
                    ??_DemoOutput_UpdateTxRx 0026                            ??_freezer_feature 0026  
                                    i2l10121 0074                                      i2l10113 0052  
                                    i2l10133 00C0                                      i2l10141 0136  
                                    i2l10117 006C                                      i2l10143 014A  
                                    i2l10161 0172                                      i2l10137 00F4  
                                    i2l10145 0154                                      i2l10149 0162  
              ??_Forward_Packet_PANCr_to_EDy 0026                       ??_MiMAC_ReceivedPacket 001D  
                                    _LCDText 028A                        __end_of_AddConnection 203E  
                                    _RPINR16 000EF6                               _failureCounter 00DA  
                                    _SSP2ADD 000F74                                      _SSP1BUF 000FC9  
                                    _SSP2BUF 000F75                                 ?_SW_Ack_SrED 009F  
                                    _NVMInit 28D0                                      _NVMRead 2F48  
                                  ?_high_isr 0001                                   ??_MacroNop 001D  
               __size_of_MiMAC_SetAltAddress 0058           __size_of_STAR_DEMO_OPTIONS_MESSAGE 0020  
                    i2SPI1_Exchange8bit@data 0001                             ??_LCD_Initialize 0023  
                 ?_STAR_DEMO_OPTIONS_MESSAGE 0001                  AddConnection@connectionSlot 0067  
                            _timerExtension1 002E                              _timerExtension2 002F  
                   MiApp_ConnectionMode@Mode 0062                             _MiMAC_PowerState 218E  
                           _AdditionalNodeID 00FD                  __end_of_MiMAC_DiscardPacket 3536  
                            P2PTasks@tmpTick 00B4                           _PHYGetShortRAMAddr 3328  
                                 DELAY_ms@ms 001D                                 _MiWi_TickGet 2EA8  
                                    __Hparam 0000                          _store_connection_tb 22A4  
                                    __Lparam 0000                 __end_of_MiApp_ConnectionMode 3264  
                                    _TextLen 002A                 __end_of_MiApp_UnicastAddress 34C8  
                                    _TextPtr 002B                                   ??_Run_Demo 0026  
                        ?_PHYGetShortRAMAddr 0001                              __size_of___wmul 0026  
                           _MiApp_SetChannel 32FA                          __size_of_SendPacket 00B8  
                                    ___lwdiv 2FE4                                      ___lwmod 31B2  
                   ??_handle_lost_connection 001D                        __size_of_InitMRF24J40 01F2  
                                    __pcinit 2BF0               DemoOutput_ChannelError@channel 0001  
                                    __ramtop 0F00         __size_of_MiApp_TransceiverPowerState 0086  
                                    __ptext0 346A                                      __ptext1 33FC  
                               ??_MiMAC_Init 0026                                      __ptext2 34C8  
                                    __ptext3 35EC                                      __ptext4 295A  
                                    __ptext5 302E                                      __ptext6 35E6  
                                    __ptext7 08B2                                      __ptext8 348A  
                                    __ptext9 2842                                      _myPANID 00EB  
                          __end_of_hexpowers FE2D                                    _T1CONbits 000FCD  
                                    _dpowers FE1B                Initialize_Demo@freezer_enable 0179  
                   ??_MiApp_MessageAvailable 0026                                      _rec_ack 00EA  
                                    _isdigit 34E4                            ??_Initialize_Demo 0026  
                              _myLongAddress 0160                                    _MAC_PANID 003B  
                       ?_store_connection_tb 0024                       DemoOutput_Channel@Step 008B  
                                    _nvmRole 00F7                                    _P2PStatus 00E3  
                                  _LCD_Erase 3500                         ??_PHYGetShortRAMAddr 001E  
                 __size_of_SYSTEM_Initialize 0088                                      _sprintf 018C  
                     ??_MiApp_DiscardMessage 001D                                   ??_high_isr 000F  
                       end_of_initialization 2C62                            __end_of_octpowers FE1B  
                              ??_EEPROM_Read 0022                MiMAC_SendPacket@MACPayloadLen 007D  
                              __Lmediumconst FD90                              LCDDisplay@delay 008A  
                                 _nvmMyPANID 00F3            __end_of_STAR_DEMO_OPTIONS_MESSAGE 34AA  
                            InitMRF24J40@_ms 0069                              LCDDisplay@value 0089  
                               _InitMRF24J40 1B10                           __end_of_MiMAC_Init 322A  
               __size_ofi2_SPI1_Exchange8bit 0010                 MiApp_UnicastConnection@SecEn 00A3  
           __size_of_MiApp_UnicastConnection 0036                      MiMAC_SetChannel@channel 0025  
                                    postdec2 000FDD                                      postinc0 000FEE  
                                    postinc1 000FE6                                      postinc2 000FDE  
                      __end_of_isSameAddress 3380         DELAY_ms@cyclesRequiredForEntireDelay 001F  
     i2DELAY_ms@cyclesRequiredForEntireDelay 000B                                 ??_Find_Index 001F  
                 run_star_demo@PressedButton 0182                 __size_of_DemoOutput_Greeting 0022  
                                  _PORTBbits 000F81                             NVMalloc@location 001F  
               __end_of_UserInterruptHandler 35A2                        ??_store_connection_tb 0060  
                                 _nvmmyIndex 00F9                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISDbits 000F95                                   ?_LCD_Erase 0001  
                          __size_of_I2CWrite 0016                                  NVMRead@addr 0020  
                                NVMRead@dest 001E                                    _BankIndex 0042  
                          __size_of_DELAY_ms 00D4                                ??_LCDTRXCount 0025  
                 MiMAC_SendPacket@transParam 0074                   MiMAC_SetAltAddress@Address 0022  
                  MiApp_UnicastAddress@SecEn 00A2                           __end_of_Find_Index 27AE  
                          __size_of_P2PTasks 04B6                                   LCD_Erase@i 001D  
               __size_ofi2_PHYGetLongRAMAddr 0052                          __end_of_EEPROM_Read 30F6  
              freezer_feature@PressedButton1 008B                          DumpConnection@index 001D  
                             __end_of___wmul 3448              __size_of_handle_lost_connection 0060  
                   PHYGetLongRAMAddr@address 001E                                __pidataCOMRAM 35F7  
         __size_of_MiApp_EstablishConnection 0150                   __end_of_DemoOutput_Channel 31B2  
                  Read_MAC_Address@myAddress 0023                     PHYSetLongRAMAddr@address 001E  
                          __size_of_NVMWrite 009A              __size_of_MiApp_MessageAvailable 000C  
                   __end_of_MiMAC_SetChannel 3174                            __size_of_NVMalloc 002E  
                        start_initialization 2BF0                     __end_of_Read_MAC_Address 2AEC  
                   PHYGetLongRAMAddr@tmpRFIE 0023                     __end_of_MiMAC_SendPacket 1B10  
                               ??_SendPacket 0095                         _MiApp_ConnectionMode 322A  
               MiMAC_SendPacket@headerLength 008C                         _MiApp_UnicastAddress 34AA  
              __size_ofi2_PHYSetShortRAMAddr 0028                     PHYSetLongRAMAddr@tmpRFIE 0023  
                       __size_of_SW_Ack_SrED 0032                              high_isr@results 0018  
          Forward_Packet_PANCr_to_EDy@status 00AA                            __size_of_MacroNop 0004  
                             _currentChannel 00FB                          __end_of_LCDTRXCount 30B4  
MiApp_EstablishConnection@connectionInterval 016F                     __size_of_TMR1_Initialize 001C  
                   ??_DemoOutput_Instruction 0026                              _freezer_feature 33FC  
                                   ??___wmul 0021            MiApp_UnicastAddress@PermanentAddr 00A1  
                i2PHYGetShortRAMAddr@address 0002                                  __pdataBANK0 00FD  
                         __end_of_SendPacket 25E2                          _MiMAC_SetAltAddress 2DAC  
                                   ?_I2CTask 0001                            __size_of_Run_Demo 0006  
               __end_ofi2_PHYGetShortRAMAddr 33AC                     __end_of_MiMAC_PowerState 22A4  
             __size_of_DemoOutput_UpdateTxRx 000E                      MiWi_TickGet@currentTime 0061  
              __end_of_DemoOutput_UpdateTxRx 35D0                  i2PHYGetShortRAMAddr@tmpRFIE 0004  
                                __pbssCOMRAM 0026                                __pcstackBANK0 0060  
                              __pcstackBANK1 0168                  i2PHYSetShortRAMAddr@address 0003  
                      ?_MiApp_ConnectionMode 0001                          SendPacket@Broadcast 0097  
                                ??_LCD_Erase 001D       MiApp_UnicastAddress@DestinationAddress 009F  
                      ?_MiApp_UnicastAddress 009F                                 _isdigit$4005 001E  
                                   ?_NVMInit 0001                   __end_of_MiApp_ProtocolInit 1EE8  
                                   ?_NVMRead 001E                               NVMWrite@source 001E  
                         _PHYSetShortRAMAddr 33AC                   MiApp_EstablishConnection@i 0178  
                   __end_of_MiApp_SetChannel 3328                            Read_MAC_Address@i 0025  
                     _handle_lost_connection 2D4C                         ?_MiMAC_SetAltAddress 0021  
                     PHYSetLongRAMAddr@value 0020                                  MiMAC_Init@i 0077  
                    PHYSetShortRAMAddr@value 001E                            __size_of_high_isr 0180  
                                sprintf@flag 0085                  i2PHYSetShortRAMAddr@tmpRFIE 0004  
               MiMAC_ReceivedPacket@addrMode 0022                  ??_STAR_DEMO_OPTIONS_MESSAGE 0026  
                                _EEPROM_Read 30B4                                  sprintf@prec 0081  
                        ?_PHYSetShortRAMAddr 001E                          MiMAC_SendPacket@loc 008E  
                     _MiApp_MessageAvailable 35D0                 ?_MiApp_TransceiverPowerState 0001  
                       _UserInterruptHandler 358E                            I2CWrite@BufferLen 001D  
                          MiMAC_SendPacket@i 008D                             ___lwdiv@dividend 001D  
                    _MiApp_UnicastConnection 3264                     ?_DemoOutput_ChannelError 0001  
                                  __pintcode 0008                                __pmediumconst FD90  
                            _Initialize_Demo 2AEC                        __end_of_ButtonPressed 2842  
                                   ?___lwdiv 001D                                     ?___lwmod 0060  
                                  _end_nodes 002C                                ?_CheckForData 0001  
                           _DataRequestTimer 00C3                                    _conn_size 0041  
                      __end_of_run_star_demo 0DFA                 Forward_Packet_PANCr_to_EDy@i 00AB  
                       ??_PHYSetShortRAMAddr 001F                     __size_of_TMR1_StartTimer 0004  
                          _PHYSetLongRAMAddr 2EF8                                     ?_isdigit 0001  
                                   _I2CWrite 3550                __size_of_MiMAC_ReceivedPacket 052E  
                         ?_PHYSetLongRAMAddr 001E                          i2_SPI1_Exchange8bit 35B2  
                                   _DELAY_ms 2384                                    _hexpowers FE25  
                   ??_DemoOutput_UnicastFail 0026                             ___lwdiv@quotient 0022  
                                   ?_sprintf 0064                          NVMWrite@PageCounter 0061  
                      ??_MiMAC_SetAltAddress 0022                                  _LCDTRXCount 3072  
                                   _P2PTasks 1328                          ??_PHYSetLongRAMAddr 0021  
                        _DemoOutput_Greeting 3448                      __end_of_freezer_feature 3422  
                             ___wmul@product 0021                                     _LATAbits 000F89  
                                   _LATBbits 000F8A                                     _LATCbits 000F8B  
                                   _LATDbits 000F8C                        ?_UserInterruptHandler 0001  
                                  _octpowers FE0F                                     _PIE1bits 000F9D  
                                   _PIE3bits 000FA3                    PHYGetLongRAMAddr@toReturn 0022  
                 DemoOutput_UpdateTxRx@RxNum 0088                   DemoOutput_UpdateTxRx@TxNum 0089  
                                   _PIR1bits 000F9E                                     _PIR3bits 000FA4  
              ??_MiApp_TransceiverPowerState 0026                         ?i2_SPI1_Exchange8bit 0001  
                                  _rxMessage 00B9                           _nvmConnectionTable 003F  
               MiMAC_SendPacket@frameControl 008B                                     i2u983_45 33F8  
                                   i2u983_46 33FA                                     i2u984_45 33A6  
                                   i2u984_46 33A8                                     i2u985_45 2EA2  
                                   i2u985_46 2EA4              __size_of_DemoOutput_Instruction 0014  
                                   _SSP1CON1 000FC6                                     _SSP2CON1 000F72  
                                   _SSP2CON2 000F71                       __size_of_AddConnection 0156  
                             ??_CheckForData 0026                                     _SSP1STAT 000FC7  
                                   _SSP2STAT 000F73                 __size_of_MiMAC_DiscardPacket 001A  
                    __size_of_DumpConnection 0078     MiApp_EstablishConnection@ActiveScanIndex 0001  
        __end_of_Forward_Packet_PANCr_to_EDy 267E                  _Forward_Packet_PANCr_to_EDy 25E2  
                                _MACRxPacket 0030                         ?_DemoOutput_Greeting 0001  
                  _STAR_DEMO_OPTIONS_MESSAGE 348A                                     _NVMWrite 267E  
                          ??_TMR1_Initialize 001D                             __size_of_I2CTask 0082  
                  __end_of_PHYSetLongRAMAddr 2F48                                     _NVMalloc 32CC  
                         MiMAC_PowerState@t1 0075                           MiMAC_PowerState@t2 007A  
                          ___wmul@multiplier 001D                                    high_isr@i 001C  
                     ??_MiApp_ConnectionMode 0025                           main@freezer_enable 0185  
                     ??_MiApp_UnicastAddress 0026                          SendPacket@isCommand 0093  
                        i2_PHYGetLongRAMAddr 2E56                               _nextEEPosition 00DC  
                                   _ConnMode 00FF                                  _INTCON2bits 000FF1  
                                _INTCON3bits 000FF0               MiApp_EstablishConnection@retry 016E  
                __size_of_PHYGetShortRAMAddr 002C        Forward_Packet_PANCr_to_EDy@EDxAddress 00A8  
                                   _MacroNop 35F0                             __size_of_NVMInit 008A  
                           __size_of_NVMRead 004E                __size_of_MiApp_DiscardMessage 000A  
            __end_of_DemoOutput_ChannelError 35FC                    ??_MiApp_UnicastConnection 0026  
                    __end_of_Initialize_Demo 2B6E                         i2_PHYGetShortRAMAddr 3380  
                                   _RxBuffer 0200                                     __Hrparam 0000  
                      ??i2_SPI1_Exchange8bit 0001                                     _TxBuffer 0138  
                       ?i2_PHYGetLongRAMAddr 0002                                 _nvmDelayTick 00CB  
                                   __Lrparam 0000                                     _Run_Demo 35E6  
                         Total_Connections@i 001E                      __size_of_LCD_Initialize 0044  
                      MiMAC_ReceivedPacket@i 0023                  __end_of_store_connection_tb 2384  
                      ??_DemoOutput_Greeting 0026                             __size_of___lwdiv 004A  
                           __size_of___lwmod 003E                                   sprintf@idx 0074  
                                 sprintf@len 007C                                   sprintf@val 007F  
                          InitMRF24J40@_dcnt 0061                             __size_of_isdigit 001C  
                          ?_MiMAC_SetChannel 0024                              ___lwdiv@divisor 001F  
                     _DemoOutput_Instruction 357A                            ?_Read_MAC_Address 0023  
                                 _IEEESeqNum 0028                              ___lwdiv@counter 0021  
                                   __ptext10 29E2                                     __ptext11 218E  
                                   __ptext20 2F48                                     __ptext12 2CE4  
                                   __ptext21 28D0                                     __ptext13 35C2  
                                   __ptext30 329A                                     __ptext22 32CC  
                                   __ptext14 3072                                     __ptext31 0DFA  
                                   __ptext23 31F0                                     __ptext15 27AE  
                                   __ptext40 3328                                     __ptext32 25E2  
                                   __ptext24 32FA                                     __ptext16 2AEC  
                                   __ptext41 2E04                                     __ptext33 3264  
                                   __ptext25 203E                                     __ptext17 2A68  
                                   __ptext50 35DC                                     __ptext42 3136  
                                   __ptext34 34AA                                     __ptext26 35D0  
                                   __ptext18 30B4                                     __ptext51 351C  
                                   __ptext43 33AC                                     __ptext35 252A  
                                   __ptext27 1328                                     __ptext19 1D02  
                                   __ptext60 3448                                     __ptext52 322A  
                                   __ptext44 2EF8                                     __ptext36 17DE  
                                   __ptext28 22A4                                     __ptext61 30F6  
                                   __ptext53 267E                                     __ptext45 3566  
                                   __ptext37 2EA8                                     __ptext29 2D4C  
                                   __ptext70 2384                                     __ptext62 018C  
                                   __ptext54 35A2                                     __ptext46 2718  
                                   __ptext38 2DAC                                     __ptext63 34E4  
                                   __ptext55 35F0                                     __ptext47 1EE8  
                                   __ptext39 1B10                                     __ptext72 33D4  
                                   __ptext64 3422                                     __ptext56 2C6C  
                                   __ptext48 3354                                     __ptext73 3380  
                                   __ptext65 31B2                                     __ptext57 357A  
                                   __ptext49 2F96                                     __ptext74 2E56  
                                   __ptext66 2FE4                                     __ptext58 35FA  
                                   __ptext75 35B2                                     __ptext67 3536  
                                   __ptext59 3174                                     __ptext76 358E  
                                   __ptext68 3550                                     __ptext77 2B6E  
                                   __ptext69 3500                                     __ptext78 2458  
                               _SSP1CON1bits 000FC6                                _AddConnection 1EE8  
                         ??_MiMAC_SetChannel 0025                            ?_MiMAC_SendPacket 0074  
            __size_of_DemoOutput_UnicastFail 0014                                     _high_isr 0008  
                         ??_Read_MAC_Address 0060                                 _SSP2CON2bits 000F71  
                          ??_TMR1_StartTimer 001D                             __size_of_sprintf 0726  
                            DumpConnection@i 001F                              DumpConnection@j 001E  
                     __size_of_isSameAddress 002C                           ??_MiMAC_SendPacket 007E  
                         _DemoOutput_Channel 3174                       ??_UserInterruptHandler 000F  
                              __size_of_main 0020                             ?_freezer_feature 0001  
                      ?i2_PHYGetShortRAMAddr 0001                        ??i2_PHYGetLongRAMAddr 0004  
                        ?_DemoOutput_Channel 008B                                   _LCDCommand 00C7  
                                 _LCDDisplay 30F6                 __end_ofi2_PHYSetShortRAMAddr 33FC  
                         LCDTRXCount@rxCount 0087                  MiApp_EstablishConnection@t1 0170  
                MiApp_EstablishConnection@t2 0174                           LCDTRXCount@txCount 0025  
                               _SSP1STATbits 000FC7                                   _LCD_Update 3536  
                        MiApp_UnicastStar@t1 016D                          MiApp_UnicastStar@t2 0171  
                 __size_of_PHYSetLongRAMAddr 0050                   MiMAC_SendPacket@MACPayload 007B  
                      __CFG_CPUDIV$OSC2_PLL2 000000                                  Find_Index@i 0021  
                          ?_MiMAC_PowerState 0001                                   _INTCONbits 000FF2  
                             AddConnection@i 0068                         ??_DemoOutput_Channel 0026  
                    ?_handle_lost_connection 0001                           ??_MiMAC_PowerState 0026  
                                 i2_DELAY_ms 2458                               ?_AddConnection 0001  
                ButtonPressed@tickDifference 0065                                     isdigit@c 001F  
                           _myNetworkAddress 003D                                ??_SW_Ack_SrED 0026  
                                _nvmConnMode 00ED                         SW_Ack_SrED@Dest_Addr 009F  
                     Total_Connections@count 001D                  MiApp_ProtocolInit@initValue 007B  
                       __end_of_CheckForData 2D4C                                     intlevel2 0000  
                          ?_MiApp_SetChannel 0001                                    sprintf@ap 007E  
                                  sprintf@cp 007B                                    sprintf@sp 0064  
                    ?_MiApp_MessageAvailable 0001                             ___lwmod@dividend 0060  
                               ?_EEPROM_Read 001E                           ??_MiApp_SetChannel 0026  
                           ?_Initialize_Demo 0001                                ?_MiWi_TickGet 001D  
                         _MiApp_ProtocolInit 1D02                 SendPacket@DestinationAddress 0091  
                     _DemoOutput_UnicastFail 3566                                _MACInitParams 00D7  
                        MiMAC_Init@initValue 0074                               _DumpConnection 2C6C  
                         EEPROM_Read@oldGIEH 0022                               _MRF24J40Status 0029  
                              _isSameAddress 3354                          ?_MiApp_ProtocolInit 0001  
                 MiWi_TickGet@failureCounter 0060                            _MiApp_UnicastStar 2842  
                                   sprintf@c 0084                                     sprintf@f 0066  
                         ?_MiApp_UnicastStar 0001                                   _PPSCONbits 000EFF  
           __size_of_DemoOutput_ChannelError 0002               __end_of_handle_lost_connection 2DAC  
                            ___lwmod@divisor 0062   MiApp_EstablishConnection@tmpConnectionMode 016D  
                            ___lwmod@counter 0024                   ?_MiApp_EstablishConnection 0168  
                      _DemoOutput_UpdateTxRx 35C2                                   _WDTCONbits 000FC0  
                        ??_MiApp_UnicastStar 0168               __end_of_MiApp_MessageAvailable 35DC  
                        _MiMAC_DiscardPacket 351C                           _nvmOutFrameCounter 00F5  
                          _nvmCurrentChannel 00EF                         ??_MiApp_ProtocolInit 0026  
                               ?_LCDTRXCount 0087                       ??i2_PHYGetShortRAMAddr 0002  
                           EEPROM_Read@count 0021                               ??_MiWi_TickGet 0021  
                        __end_of_SW_Ack_SrED 32CC                              EEPROM_Read@addr 0020  
                            EEPROM_Read@dest 001E                                ?_InitMRF24J40 0001  
           Forward_Packet_PANCr_to_EDy@index 00A7                              _TMR1_Initialize 34C8  
                   MiMAC_SendPacket@IntraPAN 008A                 __end_of_MiMAC_ReceivedPacket 1328  
                         Find_Index@DestAddr 001D                                  ?_LCDDisplay 0087  
                     __end_of_DumpConnection 2CE4  
