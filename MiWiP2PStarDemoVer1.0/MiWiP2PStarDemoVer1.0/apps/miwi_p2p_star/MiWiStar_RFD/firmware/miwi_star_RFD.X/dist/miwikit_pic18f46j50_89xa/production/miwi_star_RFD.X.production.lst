

Microchip Technology PIC18 PRO Macro Assembler V1.35 build -356382666 
                                                                                               Sun Feb 14 03:46:02 2016

Microchip Technology Omniscient Code Generator v1.35 (PRO mode) build 201507080246
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    96                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   107                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   108                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   109  0000                     
   110                           	psect	idataBANK0
   111  0033BA                     __pidataBANK0:
   112                           	opt stack 0
   113                           
   114                           ;initializer for _AdditionalNodeID
   115  0033BA  01                 	db	1
   116                           
   117                           ;initializer for _chk_sel_status
   118  0033BB  01                 	db	1
   119                           
   120                           ;initializer for _ConnMode
   121  0033BC  03                 	db	3
   122                           
   123                           ;initializer for _role
   124  0033BD  01                 	db	1
   125                           
   126                           	psect	mediumconst
   127  00FC70                     __pmediumconst:
   128                           	opt stack 0
   129  00FC70  00                 	db	0
   130  00FC71                     _MiWi:
   131                           	opt stack 0
   132  00FC71  20                 	db	32
   133  00FC72  B2                 	db	178
   134  00FC73  20                 	db	32
   135  00FC74  20                 	db	32
   136  00FC75  20                 	db	32
   137  00FC76  B2                 	db	178
   138  00FC77  20                 	db	32
   139  00FC78  20                 	db	32
   140  00FC79  B2                 	db	178
   141  00FC7A  20                 	db	32
   142  00FC7B  B2                 	db	178
   143  00FC7C  20                 	db	32
   144  00FC7D  20                 	db	32
   145  00FC7E  20                 	db	32
   146  00FC7F  20                 	db	32
   147  00FC80  20                 	db	32
   148  00FC81  B2                 	db	178
   149  00FC82  20                 	db	32
   150  00FC83  B2                 	db	178
   151  00FC84  0D                 	db	13
   152  00FC85  0A                 	db	10
   153  00FC86  B2                 	db	178
   154  00FC87  20                 	db	32
   155  00FC88  B2                 	db	178
   156  00FC89  20                 	db	32
   157  00FC8A  B2                 	db	178
   158  00FC8B  20                 	db	32
   159  00FC8C  B2                 	db	178
   160  00FC8D  20                 	db	32
   161  00FC8E  20                 	db	32
   162  00FC8F  20                 	db	32
   163  00FC90  B2                 	db	178
   164  00FC91  20                 	db	32
   165  00FC92  20                 	db	32
   166  00FC93  B2                 	db	178
   167  00FC94  20                 	db	32
   168  00FC95  20                 	db	32
   169  00FC96  B2                 	db	178
   170  00FC97  20                 	db	32
   171  00FC98  20                 	db	32
   172  00FC99  0D                 	db	13
   173  00FC9A  0A                 	db	10
   174  00FC9B  B2                 	db	178
   175  00FC9C  20                 	db	32
   176  00FC9D  20                 	db	32
   177  00FC9E  B2                 	db	178
   178  00FC9F  20                 	db	32
   179  00FCA0  20                 	db	32
   180  00FCA1  B2                 	db	178
   181  00FCA2  20                 	db	32
   182  00FCA3  B2                 	db	178
   183  00FCA4  20                 	db	32
   184  00FCA5  B2                 	db	178
   185  00FCA6  20                 	db	32
   186  00FCA7  20                 	db	32
   187  00FCA8  B2                 	db	178
   188  00FCA9  20                 	db	32
   189  00FCAA  20                 	db	32
   190  00FCAB  B2                 	db	178
   191  00FCAC  20                 	db	32
   192  00FCAD  B2                 	db	178
   193  00FCAE  0D                 	db	13
   194  00FCAF  0A                 	db	10
   195  00FCB0  B2                 	db	178
   196  00FCB1  20                 	db	32
   197  00FCB2  20                 	db	32
   198  00FCB3  B2                 	db	178
   199  00FCB4  20                 	db	32
   200  00FCB5  20                 	db	32
   201  00FCB6  B2                 	db	178
   202  00FCB7  20                 	db	32
   203  00FCB8  B2                 	db	178
   204  00FCB9  20                 	db	32
   205  00FCBA  20                 	db	32
   206  00FCBB  B2                 	db	178
   207  00FCBC  20                 	db	32
   208  00FCBD  B2                 	db	178
   209  00FCBE  20                 	db	32
   210  00FCBF  B2                 	db	178
   211  00FCC0  20                 	db	32
   212  00FCC1  20                 	db	32
   213  00FCC2  B2                 	db	178
   214  00FCC3  0D                 	db	13
   215  00FCC4  0A                 	db	10
   216  00FCC5  B2                 	db	178
   217  00FCC6  20                 	db	32
   218  00FCC7  20                 	db	32
   219  00FCC8  B2                 	db	178
   220  00FCC9  20                 	db	32
   221  00FCCA  20                 	db	32
   222  00FCCB  B2                 	db	178
   223  00FCCC  20                 	db	32
   224  00FCCD  B2                 	db	178
   225  00FCCE  20                 	db	32
   226  00FCCF  20                 	db	32
   227  00FCD0  20                 	db	32
   228  00FCD1  B2                 	db	178
   229  00FCD2  20                 	db	32
   230  00FCD3  B2                 	db	178
   231  00FCD4  20                 	db	32
   232  00FCD5  20                 	db	32
   233  00FCD6  20                 	db	32
   234  00FCD7  B2                 	db	178
   235  00FCD8  0D                 	db	13
   236  00FCD9  0A                 	db	10
   237  00FCDA  20                 	db	32
   238  00FCDB  20                 	db	32
   239  00FCDC  20                 	db	32
   240  00FCDD  20                 	db	32
   241  00FCDE  20                 	db	32
   242  00FCDF  20                 	db	32
   243  00FCE0  20                 	db	32
   244  00FCE1  20                 	db	32
   245  00FCE2  20                 	db	32
   246  00FCE3  20                 	db	32
   247  00FCE4  20                 	db	32
   248  00FCE5  20                 	db	32
   249  00FCE6  20                 	db	32
   250  00FCE7  20                 	db	32
   251  00FCE8  20                 	db	32
   252  00FCE9  20                 	db	32
   253  00FCEA  20                 	db	32
   254  00FCEB  20                 	db	32
   255  00FCEC  20                 	db	32
   256  00FCED  0D                 	db	13
   257  00FCEE  0A                 	db	10
   258  00FCEF                     __end_of_MiWi:
   259                           	opt stack 0
   260  00FCEF                     _InitConfigRegs:
   261                           	opt stack 0
   262  00FCEF  0026               	dw	38
   263  00FCF1  0284               	dw	644
   264  00FCF3  0409               	dw	1033
   265  00FCF5  0609               	dw	1545
   266  00FCF7  080C               	dw	2060
   267  00FCF9  0AC1               	dw	2753
   268  00FCFB  0C77               	dw	3191
   269  00FCFD  0E63               	dw	3683
   270  00FCFF  1019               	dw	4121
   271  00FD01  1200               	dw	4608
   272  00FD03  1400               	dw	5120
   273  00FD05  1600               	dw	5632
   274  00FD07  1838               	dw	6200
   275  00FD09  1AC8               	dw	6856
   276  00FD0B  1C0D               	dw	7181
   277  00FD0D  1E00               	dw	7680
   278  00FD0F  2072               	dw	8306
   279  00FD11  2238               	dw	8760
   280  00FD13  2438               	dw	9272
   281  00FD15  2607               	dw	9735
   282  00FD17  2800               	dw	10240
   283  00FD19  2A00               	dw	10752
   284  00FD1B  2C69               	dw	11369
   285  00FD1D  2E81               	dw	11905
   286  00FD1F  307E               	dw	12414
   287  00FD21  3296               	dw	12950
   288  00FD23  34F8               	dw	13560
   289  00FD25  3688               	dw	13960
   290  00FD27  3840               	dw	14400
   291  00FD29  3A00               	dw	14848
   292  00FD2B  3CE8               	dw	15592
   293  00FD2D  3E00               	dw	15872
   294  00FD2F                     __end_of_InitConfigRegs:
   295                           	opt stack 0
   296  00FD2F                     _PVALUE:
   297                           	opt stack 0
   298  00FD2F  53                 	db	83
   299  00FD30  53                 	db	83
   300  00FD31  53                 	db	83
   301  00FD32  53                 	db	83
   302  00FD33  53                 	db	83
   303  00FD34  53                 	db	83
   304  00FD35  53                 	db	83
   305  00FD36  53                 	db	83
   306  00FD37  53                 	db	83
   307  00FD38  53                 	db	83
   308  00FD39  53                 	db	83
   309  00FD3A  53                 	db	83
   310  00FD3B  53                 	db	83
   311  00FD3C  53                 	db	83
   312  00FD3D  53                 	db	83
   313  00FD3E  53                 	db	83
   314  00FD3F  53                 	db	83
   315  00FD40  53                 	db	83
   316  00FD41  53                 	db	83
   317  00FD42  53                 	db	83
   318  00FD43  54                 	db	84
   319  00FD44  54                 	db	84
   320  00FD45  54                 	db	84
   321  00FD46  54                 	db	84
   322  00FD47  54                 	db	84
   323  00FD48  54                 	db	84
   324  00FD49  54                 	db	84
   325  00FD4A  54                 	db	84
   326  00FD4B  54                 	db	84
   327  00FD4C  54                 	db	84
   328  00FD4D  54                 	db	84
   329  00FD4E  54                 	db	84
   330  00FD4F                     __end_of_PVALUE:
   331                           	opt stack 0
   332  00FD4F                     _SVALUE:
   333                           	opt stack 0
   334  00FD4F  1D                 	db	29
   335  00FD50  20                 	db	32
   336  00FD51  22                 	db	34
   337  00FD52  25                 	db	37
   338  00FD53  28                 	db	40
   339  00FD54  2B                 	db	43
   340  00FD55  2E                 	db	46
   341  00FD56  30                 	db	48
   342  00FD57  33                 	db	51
   343  00FD58  36                 	db	54
   344  00FD59  39                 	db	57
   345  00FD5A  3C                 	db	60
   346  00FD5B  3F                 	db	63
   347  00FD5C  41                 	db	65
   348  00FD5D  44                 	db	68
   349  00FD5E  47                 	db	71
   350  00FD5F  4A                 	db	74
   351  00FD60  4D                 	db	77
   352  00FD61  4F                 	db	79
   353  00FD62  52                 	db	82
   354  00FD63  0A                 	db	10
   355  00FD64  0D                 	db	13
   356  00FD65  10                 	db	16
   357  00FD66  12                 	db	18
   358  00FD67  15                 	db	21
   359  00FD68  18                 	db	24
   360  00FD69  1B                 	db	27
   361  00FD6A  1E                 	db	30
   362  00FD6B  20                 	db	32
   363  00FD6C  23                 	db	35
   364  00FD6D  26                 	db	38
   365  00FD6E  29                 	db	41
   366  00FD6F                     __end_of_SVALUE:
   367                           	opt stack 0
   368  00FD6F                     _octpowers:
   369                           	opt stack 0
   370  00FD6F  0001               	dw	1
   371  00FD71  0008               	dw	8
   372  00FD73  0040               	dw	64
   373  00FD75  0200               	dw	512
   374  00FD77  1000               	dw	4096
   375  00FD79  8000               	dw	32768
   376  00FD7B                     __end_of_octpowers:
   377                           	opt stack 0
   378  00FD7B                     _dpowers:
   379                           	opt stack 0
   380  00FD7B  0001               	dw	1
   381  00FD7D  000A               	dw	10
   382  00FD7F  0064               	dw	100
   383  00FD81  03E8               	dw	1000
   384  00FD83  2710               	dw	10000
   385  00FD85                     __end_of_dpowers:
   386                           	opt stack 0
   387  00FD85                     _hexpowers:
   388                           	opt stack 0
   389  00FD85  0001               	dw	1
   390  00FD87  0010               	dw	16
   391  00FD89  0100               	dw	256
   392  00FD8B  1000               	dw	4096
   393  00FD8D                     __end_of_hexpowers:
   394                           	opt stack 0
   395  0000                     _PPSCONbits	set	3839
   396  0000                     _RPINR1	set	3815
   397  0000                     _RPINR21	set	3835
   398  0000                     _RPOR19	set	3801
   399  0000                     _RPOR21	set	3803
   400  0000                     _ANCON0	set	3912
   401  0000                     _ANCON1	set	3913
   402  0000                     _TMR1	set	4046
   403  0000                     _EECON2	set	4007
   404  0000                     _INTCON2bits	set	4081
   405  0000                     _INTCON3bits	set	4080
   406  0000                     _INTCONbits	set	4082
   407  0000                     _LATAbits	set	3977
   408  0000                     _LATCbits	set	3979
   409  0000                     _LATDbits	set	3980
   410  0000                     _LATEbits	set	3981
   411  0000                     _OSCCON	set	4051
   412  0000                     _OSCTUNEbits	set	3995
   413  0000                     _PIE1bits	set	3997
   414  0000                     _PIR1bits	set	3998
   415  0000                     _PIR3bits	set	4004
   416  0000                     _PORTBbits	set	3969
   417  0000                     _SSP1BUF	set	4041
   418  0000                     _SSP1CON1	set	4038
   419  0000                     _SSP1CON1bits	set	4038
   420  0000                     _SSP1STAT	set	4039
   421  0000                     _SSP1STATbits	set	4039
   422  0000                     _SSP2BUF	set	3957
   423  0000                     _SSP2CON1	set	3954
   424  0000                     _SSP2CON1bits	set	3954
   425  0000                     _SSP2STAT	set	3955
   426  0000                     _T1CON	set	4045
   427  0000                     _T1CONbits	set	4045
   428  0000                     _T1GCON	set	3994
   429  0000                     _TMR0L	set	4054
   430  0000                     _TMR1H	set	4047
   431  0000                     _TMR1L	set	4046
   432  0000                     _TRISAbits	set	3986
   433  0000                     _TRISBbits	set	3987
   434  0000                     _TRISCbits	set	3988
   435  0000                     _TRISDbits	set	3989
   436  0000                     _TRISEbits	set	3990
   437  0000                     _WDTCONbits	set	4032
   438  00FD8D                     STR_8:
   439  00FD8D  0D                 	db	13
   440  00FD8E  0A                 	db	10
   441  00FD8F  0D                 	db	13
   442  00FD90  0A                 	db	10
   443  00FD91  43                 	db	67	;'C'
   444  00FD92  6F                 	db	111	;'o'
   445  00FD93  6E                 	db	110	;'n'
   446  00FD94  6E                 	db	110	;'n'
   447  00FD95  65                 	db	101	;'e'
   448  00FD96  63                 	db	99	;'c'
   449  00FD97  74                 	db	116	;'t'
   450  00FD98  69                 	db	105	;'i'
   451  00FD99  6F                 	db	111	;'o'
   452  00FD9A  6E                 	db	110	;'n'
   453  00FD9B  20                 	db	32
   454  00FD9C  20                 	db	32
   455  00FD9D  20                 	db	32
   456  00FD9E  20                 	db	32
   457  00FD9F  20                 	db	32
   458  00FDA0  50                 	db	80	;'P'
   459  00FDA1  65                 	db	101	;'e'
   460  00FDA2  65                 	db	101	;'e'
   461  00FDA3  72                 	db	114	;'r'
   462  00FDA4  4C                 	db	76	;'L'
   463  00FDA5  6F                 	db	111	;'o'
   464  00FDA6  6E                 	db	110	;'n'
   465  00FDA7  67                 	db	103	;'g'
   466  00FDA8  41                 	db	65	;'A'
   467  00FDA9  64                 	db	100	;'d'
   468  00FDAA  64                 	db	100	;'d'
   469  00FDAB  72                 	db	114	;'r'
   470  00FDAC  65                 	db	101	;'e'
   471  00FDAD  73                 	db	115	;'s'
   472  00FDAE  73                 	db	115	;'s'
   473  00FDAF  20                 	db	32
   474  00FDB0  20                 	db	32
   475  00FDB1  20                 	db	32
   476  00FDB2  20                 	db	32
   477  00FDB3  20                 	db	32
   478  00FDB4  50                 	db	80	;'P'
   479  00FDB5  65                 	db	101	;'e'
   480  00FDB6  65                 	db	101	;'e'
   481  00FDB7  72                 	db	114	;'r'
   482  00FDB8  49                 	db	73	;'I'
   483  00FDB9  6E                 	db	110	;'n'
   484  00FDBA  66                 	db	102	;'f'
   485  00FDBB  6F                 	db	111	;'o'
   486  00FDBC  0D                 	db	13
   487  00FDBD  0A                 	db	10
   488  00FDBE  00                 	db	0
   489  00FDBF                     STR_25:
   490  00FDBF  50                 	db	80	;'P'
   491  00FDC0  43                 	db	67	;'C'
   492  00FDC1  20                 	db	32
   493  00FDC2  3A                 	db	58	;':'
   494  00FDC3  53                 	db	83	;'S'
   495  00FDC4  57                 	db	87	;'W'
   496  00FDC5  31                 	db	49	;'1'
   497  00FDC6  20                 	db	32
   498  00FDC7  6F                 	db	111	;'o'
   499  00FDC8  72                 	db	114	;'r'
   500  00FDC9  20                 	db	32
   501  00FDCA  53                 	db	83	;'S'
   502  00FDCB  57                 	db	87	;'W'
   503  00FDCC  32                 	db	50	;'2'
   504  00FDCD  20                 	db	32
   505  00FDCE  20                 	db	32
   506  00FDCF  74                 	db	116	;'t'
   507  00FDD0  6F                 	db	111	;'o'
   508  00FDD1  20                 	db	32
   509  00FDD2  42                 	db	66	;'B'
   510  00FDD3  72                 	db	114	;'r'
   511  00FDD4  6F                 	db	111	;'o'
   512  00FDD5  61                 	db	97	;'a'
   513  00FDD6  64                 	db	100	;'d'
   514  00FDD7  43                 	db	67	;'C'
   515  00FDD8  61                 	db	97	;'a'
   516  00FDD9  73                 	db	115	;'s'
   517  00FDDA  74                 	db	116	;'t'
   518  00FDDB  20                 	db	32
   519  00FDDC  6D                 	db	109	;'m'
   520  00FDDD  73                 	db	115	;'s'
   521  00FDDE  67                 	db	103	;'g'
   522  00FDDF  00                 	db	0
   523  00FDE0                     STR_16:
   524  00FDE0  43                 	db	67	;'C'
   525  00FDE1  6F                 	db	111	;'o'
   526  00FDE2  6E                 	db	110	;'n'
   527  00FDE3  6E                 	db	110	;'n'
   528  00FDE4  65                 	db	101	;'e'
   529  00FDE5  63                 	db	99	;'c'
   530  00FDE6  74                 	db	116	;'t'
   531  00FDE7  69                 	db	105	;'i'
   532  00FDE8  6E                 	db	110	;'n'
   533  00FDE9  67                 	db	103	;'g'
   534  00FDEA  20                 	db	32
   535  00FDEB  50                 	db	80	;'P'
   536  00FDEC  65                 	db	101	;'e'
   537  00FDED  65                 	db	101	;'e'
   538  00FDEE  72                 	db	114	;'r'
   539  00FDEF  20                 	db	32
   540  00FDF0  20                 	db	32
   541  00FDF1  6F                 	db	111	;'o'
   542  00FDF2  6E                 	db	110	;'n'
   543  00FDF3  20                 	db	32
   544  00FDF4  43                 	db	67	;'C'
   545  00FDF5  68                 	db	104	;'h'
   546  00FDF6  61                 	db	97	;'a'
   547  00FDF7  6E                 	db	110	;'n'
   548  00FDF8  6E                 	db	110	;'n'
   549  00FDF9  65                 	db	101	;'e'
   550  00FDFA  6C                 	db	108	;'l'
   551  00FDFB  20                 	db	32
   552  00FDFC  25                 	db	37
   553  00FDFD  64                 	db	100	;'d'
   554  00FDFE  20                 	db	32
   555  00FDFF  00                 	db	0
   556  00FE00                     STR_26:
   557  00FE00  53                 	db	83	;'S'
   558  00FE01  57                 	db	87	;'W'
   559  00FE02  31                 	db	49	;'1'
   560  00FE03  20                 	db	32
   561  00FE04  3A                 	db	58	;':'
   562  00FE05  20                 	db	32
   563  00FE06  55                 	db	85	;'U'
   564  00FE07  6E                 	db	110	;'n'
   565  00FE08  69                 	db	105	;'i'
   566  00FE09  63                 	db	99	;'c'
   567  00FE0A  61                 	db	97	;'a'
   568  00FE0B  73                 	db	115	;'s'
   569  00FE0C  74                 	db	116	;'t'
   570  00FE0D  20                 	db	32
   571  00FE0E  20                 	db	32
   572  00FE0F  20                 	db	32
   573  00FE10  53                 	db	83	;'S'
   574  00FE11  57                 	db	87	;'W'
   575  00FE12  32                 	db	50	;'2'
   576  00FE13  20                 	db	32
   577  00FE14  3A                 	db	58	;':'
   578  00FE15  20                 	db	32
   579  00FE16  4E                 	db	78	;'N'
   580  00FE17  65                 	db	101	;'e'
   581  00FE18  78                 	db	120	;'x'
   582  00FE19  74                 	db	116	;'t'
   583  00FE1A  20                 	db	32
   584  00FE1B  4E                 	db	78	;'N'
   585  00FE1C  6F                 	db	111	;'o'
   586  00FE1D  64                 	db	100	;'d'
   587  00FE1E  65                 	db	101	;'e'
   588  00FE1F  00                 	db	0
   589  00FE20                     STR_17:
   590  00FE20  20                 	db	32
   591  00FE21  43                 	db	67	;'C'
   592  00FE22  6F                 	db	111	;'o'
   593  00FE23  6E                 	db	110	;'n'
   594  00FE24  6E                 	db	110	;'n'
   595  00FE25  65                 	db	101	;'e'
   596  00FE26  63                 	db	99	;'c'
   597  00FE27  74                 	db	116	;'t'
   598  00FE28  65                 	db	101	;'e'
   599  00FE29  64                 	db	100	;'d'
   600  00FE2A  20                 	db	32
   601  00FE2B  50                 	db	80	;'P'
   602  00FE2C  65                 	db	101	;'e'
   603  00FE2D  65                 	db	101	;'e'
   604  00FE2E  72                 	db	114	;'r'
   605  00FE2F  20                 	db	32
   606  00FE30  20                 	db	32
   607  00FE31  6F                 	db	111	;'o'
   608  00FE32  6E                 	db	110	;'n'
   609  00FE33  20                 	db	32
   610  00FE34  43                 	db	67	;'C'
   611  00FE35  68                 	db	104	;'h'
   612  00FE36  61                 	db	97	;'a'
   613  00FE37  6E                 	db	110	;'n'
   614  00FE38  6E                 	db	110	;'n'
   615  00FE39  65                 	db	101	;'e'
   616  00FE3A  6C                 	db	108	;'l'
   617  00FE3B  20                 	db	32
   618  00FE3C  25                 	db	37
   619  00FE3D  64                 	db	100	;'d'
   620  00FE3E  00                 	db	0
   621  00FE3F                     STR_15:
   622  00FE3F  53                 	db	83	;'S'
   623  00FE40  69                 	db	105	;'i'
   624  00FE41  6D                 	db	109	;'m'
   625  00FE42  70                 	db	112	;'p'
   626  00FE43  6C                 	db	108	;'l'
   627  00FE44  65                 	db	101	;'e'
   628  00FE45  20                 	db	32
   629  00FE46  53                 	db	83	;'S'
   630  00FE47  54                 	db	84	;'T'
   631  00FE48  41                 	db	65	;'A'
   632  00FE49  52                 	db	82	;'R'
   633  00FE4A  20                 	db	32
   634  00FE4B  20                 	db	32
   635  00FE4C  20                 	db	32
   636  00FE4D  20                 	db	32
   637  00FE4E  20                 	db	32
   638  00FE4F  4D                 	db	77	;'M'
   639  00FE50  52                 	db	82	;'R'
   640  00FE51  46                 	db	70	;'F'
   641  00FE52  38                 	db	56	;'8'
   642  00FE53  39                 	db	57	;'9'
   643  00FE54  58                 	db	88	;'X'
   644  00FE55  41                 	db	65	;'A'
   645  00FE56  20                 	db	32
   646  00FE57  4E                 	db	78	;'N'
   647  00FE58  6F                 	db	111	;'o'
   648  00FE59  64                 	db	100	;'d'
   649  00FE5A  65                 	db	101	;'e'
   650  00FE5B  31                 	db	49	;'1'
   651  00FE5C  00                 	db	0
   652  00FE5D                     STR_18:
   653  00FE5D  53                 	db	83	;'S'
   654  00FE5E  57                 	db	87	;'W'
   655  00FE5F  31                 	db	49	;'1'
   656  00FE60  3A                 	db	58	;':'
   657  00FE61  20                 	db	32
   658  00FE62  42                 	db	66	;'B'
   659  00FE63  72                 	db	114	;'r'
   660  00FE64  6F                 	db	111	;'o'
   661  00FE65  61                 	db	97	;'a'
   662  00FE66  64                 	db	100	;'d'
   663  00FE67  63                 	db	99	;'c'
   664  00FE68  61                 	db	97	;'a'
   665  00FE69  73                 	db	115	;'s'
   666  00FE6A  74                 	db	116	;'t'
   667  00FE6B  20                 	db	32
   668  00FE6C  20                 	db	32
   669  00FE6D  53                 	db	83	;'S'
   670  00FE6E  57                 	db	87	;'W'
   671  00FE6F  32                 	db	50	;'2'
   672  00FE70  3A                 	db	58	;':'
   673  00FE71  20                 	db	32
   674  00FE72  55                 	db	85	;'U'
   675  00FE73  6E                 	db	110	;'n'
   676  00FE74  69                 	db	105	;'i'
   677  00FE75  63                 	db	99	;'c'
   678  00FE76  61                 	db	97	;'a'
   679  00FE77  73                 	db	115	;'s'
   680  00FE78  74                 	db	116	;'t'
   681  00FE79  00                 	db	0
   682  00FE7A                     STR_29:
   683  00FE7A  53                 	db	83	;'S'
   684  00FE7B  57                 	db	87	;'W'
   685  00FE7C  31                 	db	49	;'1'
   686  00FE7D  3A                 	db	58	;':'
   687  00FE7E  4E                 	db	78	;'N'
   688  00FE7F  65                 	db	101	;'e'
   689  00FE80  77                 	db	119	;'w'
   690  00FE81  20                 	db	32
   691  00FE82  4E                 	db	78	;'N'
   692  00FE83  65                 	db	101	;'e'
   693  00FE84  74                 	db	116	;'t'
   694  00FE85  77                 	db	119	;'w'
   695  00FE86  6F                 	db	111	;'o'
   696  00FE87  72                 	db	114	;'r'
   697  00FE88  6B                 	db	107	;'k'
   698  00FE89  20                 	db	32
   699  00FE8A  53                 	db	83	;'S'
   700  00FE8B  57                 	db	87	;'W'
   701  00FE8C  32                 	db	50	;'2'
   702  00FE8D  3A                 	db	58	;':'
   703  00FE8E  46                 	db	70	;'F'
   704  00FE8F  72                 	db	114	;'r'
   705  00FE90  65                 	db	101	;'e'
   706  00FE91  65                 	db	101	;'e'
   707  00FE92  7A                 	db	122	;'z'
   708  00FE93  65                 	db	101	;'e'
   709  00FE94  72                 	db	114	;'r'
   710  00FE95  00                 	db	0
   711  00FE96  42                 	db	66	;'B'
   712  00FE97  72                 	db	114	;'r'
   713  00FE98  6F                 	db	111	;'o'
   714  00FE99  61                 	db	97	;'a'
   715  00FE9A  64                 	db	100	;'d'
   716  00FE9B  63                 	db	99	;'c'
   717  00FE9C  61                 	db	97	;'a'
   718  00FE9D  73                 	db	115	;'s'
   719  00FE9E  74                 	db	116	;'t'
   720  00FE9F  20                 	db	32
   721  00FEA0  50                 	db	80	;'P'
   722  00FEA1  61                 	db	97	;'a'
   723  00FEA2  63                 	db	99	;'c'
   724  00FEA3  6B                 	db	107	;'k'
   725  00FEA4  65                 	db	101	;'e'
   726  00FEA5  74                 	db	116	;'t'
   727  00FEA6  20                 	db	32
   728  00FEA7  77                 	db	119	;'w'
   729  00FEA8  69                 	db	105	;'i'
   730  00FEA9  74                 	db	116	;'t'
   731  00FEAA  68                 	db	104	;'h'
   732  00FEAB  20                 	db	32
   733  00FEAC  52                 	db	82	;'R'
   734  00FEAD  53                 	db	83	;'S'
   735  00FEAE  53                 	db	83	;'S'
   736  00FEAF  49                 	db	73	;'I'
   737  00FEB0  20                 	db	32
   738  00FEB1  00                 	db	0
   739  00FEB2  55                 	db	85	;'U'
   740  00FEB3  6E                 	db	110	;'n'
   741  00FEB4  69                 	db	105	;'i'
   742  00FEB5  63                 	db	99	;'c'
   743  00FEB6  61                 	db	97	;'a'
   744  00FEB7  73                 	db	115	;'s'
   745  00FEB8  74                 	db	116	;'t'
   746  00FEB9  20                 	db	32
   747  00FEBA  50                 	db	80	;'P'
   748  00FEBB  61                 	db	97	;'a'
   749  00FEBC  63                 	db	99	;'c'
   750  00FEBD  6B                 	db	107	;'k'
   751  00FEBE  65                 	db	101	;'e'
   752  00FEBF  74                 	db	116	;'t'
   753  00FEC0  20                 	db	32
   754  00FEC1  77                 	db	119	;'w'
   755  00FEC2  69                 	db	105	;'i'
   756  00FEC3  74                 	db	116	;'t'
   757  00FEC4  68                 	db	104	;'h'
   758  00FEC5  20                 	db	32
   759  00FEC6  52                 	db	82	;'R'
   760  00FEC7  53                 	db	83	;'S'
   761  00FEC8  53                 	db	83	;'S'
   762  00FEC9  49                 	db	73	;'I'
   763  00FECA  20                 	db	32
   764  00FECB  00                 	db	0
   765  00FECC                     STR_32:
   766  00FECC  52                 	db	82	;'R'
   767  00FECD  42                 	db	66	;'B'
   768  00FECE  30                 	db	48	;'0'
   769  00FECF  3A                 	db	58	;':'
   770  00FED0  25                 	db	37
   771  00FED1  30                 	db	48	;'0'
   772  00FED2  32                 	db	50	;'2'
   773  00FED3  64                 	db	100	;'d'
   774  00FED4  2D                 	db	45
   775  00FED5  25                 	db	37
   776  00FED6  30                 	db	48	;'0'
   777  00FED7  32                 	db	50	;'2'
   778  00FED8  78                 	db	120	;'x'
   779  00FED9  25                 	db	37
   780  00FEDA  30                 	db	48	;'0'
   781  00FEDB  32                 	db	50	;'2'
   782  00FEDC  78                 	db	120	;'x'
   783  00FEDD  25                 	db	37
   784  00FEDE  30                 	db	48	;'0'
   785  00FEDF  32                 	db	50	;'2'
   786  00FEE0  78                 	db	120	;'x'
   787  00FEE1  2D                 	db	45
   788  00FEE2  6D                 	db	109	;'m'
   789  00FEE3  65                 	db	101	;'e'
   790  00FEE4  00                 	db	0
   791  00FEE5                     STR_33:
   792  00FEE5  52                 	db	82	;'R'
   793  00FEE6  42                 	db	66	;'B'
   794  00FEE7  30                 	db	48	;'0'
   795  00FEE8  3A                 	db	58	;':'
   796  00FEE9  25                 	db	37
   797  00FEEA  30                 	db	48	;'0'
   798  00FEEB  32                 	db	50	;'2'
   799  00FEEC  64                 	db	100	;'d'
   800  00FEED  2D                 	db	45
   801  00FEEE  25                 	db	37
   802  00FEEF  30                 	db	48	;'0'
   803  00FEF0  32                 	db	50	;'2'
   804  00FEF1  78                 	db	120	;'x'
   805  00FEF2  25                 	db	37
   806  00FEF3  30                 	db	48	;'0'
   807  00FEF4  32                 	db	50	;'2'
   808  00FEF5  78                 	db	120	;'x'
   809  00FEF6  25                 	db	37
   810  00FEF7  30                 	db	48	;'0'
   811  00FEF8  32                 	db	50	;'2'
   812  00FEF9  78                 	db	120	;'x'
   813  00FEFA  00                 	db	0
   814  00FEFB  20                 	db	32
   815  00FEFC  41                 	db	65	;'A'
   816  00FEFD  64                 	db	100	;'d'
   817  00FEFE  64                 	db	100	;'d'
   818  00FEFF  72                 	db	114	;'r'
   819  00FF00  65                 	db	101	;'e'
   820  00FF01  73                 	db	115	;'s'
   821  00FF02  73                 	db	115	;'s'
   822  00FF03  3A                 	db	58	;':'
   823  00FF04  25                 	db	37
   824  00FF05  30                 	db	48	;'0'
   825  00FF06  32                 	db	50	;'2'
   826  00FF07  78                 	db	120	;'x'
   827  00FF08  25                 	db	37
   828  00FF09  30                 	db	48	;'0'
   829  00FF0A  32                 	db	50	;'2'
   830  00FF0B  78                 	db	120	;'x'
   831  00FF0C  25                 	db	37
   832  00FF0D  30                 	db	48	;'0'
   833  00FF0E  32                 	db	50	;'2'
   834  00FF0F  78                 	db	120	;'x'
   835  00FF10  00                 	db	0
   836  00FF11                     STR_36:
   837  00FF11  44                 	db	68	;'D'
   838  00FF12  61                 	db	97	;'a'
   839  00FF13  74                 	db	116	;'t'
   840  00FF14  61                 	db	97	;'a'
   841  00FF15  5F                 	db	95	;'_'
   842  00FF16  53                 	db	83	;'S'
   843  00FF17  65                 	db	101	;'e'
   844  00FF18  6E                 	db	110	;'n'
   845  00FF19  64                 	db	100	;'d'
   846  00FF1A  69                 	db	105	;'i'
   847  00FF1B  6E                 	db	110	;'n'
   848  00FF1C  67                 	db	103	;'g'
   849  00FF1D  5F                 	db	95	;'_'
   850  00FF1E  46                 	db	70	;'F'
   851  00FF1F  61                 	db	97	;'a'
   852  00FF20  69                 	db	105	;'i'
   853  00FF21  6C                 	db	108	;'l'
   854  00FF22  21                 	db	33
   855  00FF23  21                 	db	33
   856  00FF24  00                 	db	0
   857  00FF25  0D                 	db	13
   858  00FF26  0A                 	db	10
   859  00FF27  0D                 	db	13
   860  00FF28  0A                 	db	10
   861  00FF29  4D                 	db	77	;'M'
   862  00FF2A  79                 	db	121	;'y'
   863  00FF2B  20                 	db	32
   864  00FF2C  41                 	db	65	;'A'
   865  00FF2D  64                 	db	100	;'d'
   866  00FF2E  64                 	db	100	;'d'
   867  00FF2F  72                 	db	114	;'r'
   868  00FF30  65                 	db	101	;'e'
   869  00FF31  73                 	db	115	;'s'
   870  00FF32  73                 	db	115	;'s'
   871  00FF33  3A                 	db	58	;':'
   872  00FF34  20                 	db	32
   873  00FF35  30                 	db	48	;'0'
   874  00FF36  78                 	db	120	;'x'
   875  00FF37  00                 	db	0
   876  00FF38                     STR_38:
   877  00FF38  30                 	db	48	;'0'
   878  00FF39  31                 	db	49	;'1'
   879  00FF3A  32                 	db	50	;'2'
   880  00FF3B  33                 	db	51	;'3'
   881  00FF3C  34                 	db	52	;'4'
   882  00FF3D  35                 	db	53	;'5'
   883  00FF3E  36                 	db	54	;'6'
   884  00FF3F  37                 	db	55	;'7'
   885  00FF40  38                 	db	56	;'8'
   886  00FF41  39                 	db	57	;'9'
   887  00FF42  41                 	db	65	;'A'
   888  00FF43  42                 	db	66	;'B'
   889  00FF44  43                 	db	67	;'C'
   890  00FF45  44                 	db	68	;'D'
   891  00FF46  45                 	db	69	;'E'
   892  00FF47  46                 	db	70	;'F'
   893  00FF48  00                 	db	0
   894  00FF49                     STR_39:
   895  00FF49  30                 	db	48	;'0'
   896  00FF4A  31                 	db	49	;'1'
   897  00FF4B  32                 	db	50	;'2'
   898  00FF4C  33                 	db	51	;'3'
   899  00FF4D  34                 	db	52	;'4'
   900  00FF4E  35                 	db	53	;'5'
   901  00FF4F  36                 	db	54	;'6'
   902  00FF50  37                 	db	55	;'7'
   903  00FF51  38                 	db	56	;'8'
   904  00FF52  39                 	db	57	;'9'
   905  00FF53  61                 	db	97	;'a'
   906  00FF54  62                 	db	98	;'b'
   907  00FF55  63                 	db	99	;'c'
   908  00FF56  64                 	db	100	;'d'
   909  00FF57  65                 	db	101	;'e'
   910  00FF58  66                 	db	102	;'f'
   911  00FF59  00                 	db	0
   912  00FF5A                     STR_35:
   913  00FF5A  52                 	db	82	;'R'
   914  00FF5B  42                 	db	66	;'B'
   915  00FF5C  32                 	db	50	;'2'
   916  00FF5D  3A                 	db	58	;':'
   917  00FF5E  20                 	db	32
   918  00FF5F  43                 	db	67	;'C'
   919  00FF60  68                 	db	104	;'h'
   920  00FF61  61                 	db	97	;'a'
   921  00FF62  6E                 	db	110	;'n'
   922  00FF63  67                 	db	103	;'g'
   923  00FF64  65                 	db	101	;'e'
   924  00FF65  20                 	db	32
   925  00FF66  6E                 	db	110	;'n'
   926  00FF67  6F                 	db	111	;'o'
   927  00FF68  64                 	db	100	;'d'
   928  00FF69  65                 	db	101	;'e'
   929  00FF6A  00                 	db	0
   930  00FF6B  44                 	db	68	;'D'
   931  00FF6C  61                 	db	97	;'a'
   932  00FF6D  74                 	db	116	;'t'
   933  00FF6E  61                 	db	97	;'a'
   934  00FF6F  20                 	db	32
   935  00FF70  50                 	db	80	;'P'
   936  00FF71  61                 	db	97	;'a'
   937  00FF72  63                 	db	99	;'c'
   938  00FF73  6B                 	db	107	;'k'
   939  00FF74  65                 	db	101	;'e'
   940  00FF75  74                 	db	116	;'t'
   941  00FF76  20                 	db	32
   942  00FF77  66                 	db	102	;'f'
   943  00FF78  72                 	db	114	;'r'
   944  00FF79  6F                 	db	111	;'o'
   945  00FF7A  6D                 	db	109	;'m'
   946  00FF7B  00                 	db	0
   947  00FF7C                     STR_24:
   948  00FF7C  20                 	db	32
   949  00FF7D  55                 	db	85	;'U'
   950  00FF7E  6E                 	db	110	;'n'
   951  00FF7F  69                 	db	105	;'i'
   952  00FF80  63                 	db	99	;'c'
   953  00FF81  61                 	db	97	;'a'
   954  00FF82  73                 	db	115	;'s'
   955  00FF83  74                 	db	116	;'t'
   956  00FF84  20                 	db	32
   957  00FF85  46                 	db	70	;'F'
   958  00FF86  61                 	db	97	;'a'
   959  00FF87  69                 	db	105	;'i'
   960  00FF88  6C                 	db	108	;'l'
   961  00FF89  65                 	db	101	;'e'
   962  00FF8A  64                 	db	100	;'d'
   963  00FF8B  00                 	db	0
   964  00FF8C                     STR_13:
   965  00FF8C  54                 	db	84	;'T'
   966  00FF8D  58                 	db	88	;'X'
   967  00FF8E  3A                 	db	58	;':'
   968  00FF8F  25                 	db	37
   969  00FF90  33                 	db	51	;'3'
   970  00FF91  64                 	db	100	;'d'
   971  00FF92  20                 	db	32
   972  00FF93  2C                 	db	44
   973  00FF94  20                 	db	32
   974  00FF95  52                 	db	82	;'R'
   975  00FF96  58                 	db	88	;'X'
   976  00FF97  3A                 	db	58	;':'
   977  00FF98  25                 	db	37
   978  00FF99  33                 	db	51	;'3'
   979  00FF9A  64                 	db	100	;'d'
   980  00FF9B  00                 	db	0
   981  00FF9C                     STR_14:
   982  00FF9C  4D                 	db	77	;'M'
   983  00FF9D  65                 	db	101	;'e'
   984  00FF9E  73                 	db	115	;'s'
   985  00FF9F  73                 	db	115	;'s'
   986  00FFA0  61                 	db	97	;'a'
   987  00FFA1  67                 	db	103	;'g'
   988  00FFA2  65                 	db	101	;'e'
   989  00FFA3  20                 	db	32
   990  00FFA4  43                 	db	67	;'C'
   991  00FFA5  6F                 	db	111	;'o'
   992  00FFA6  75                 	db	117	;'u'
   993  00FFA7  6E                 	db	110	;'n'
   994  00FFA8  74                 	db	116	;'t'
   995  00FFA9  00                 	db	0
   996  00FFAA                     STR_4:
   997  00FFAA  20                 	db	32
   998  00FFAB  20                 	db	32
   999  00FFAC  20                 	db	32
  1000  00FFAD  20                 	db	32
  1001  00FFAE  20                 	db	32
  1002  00FFAF  20                 	db	32
  1003  00FFB0  20                 	db	32
  1004  00FFB1  20                 	db	32
  1005  00FFB2  20                 	db	32
  1006  00FFB3  20                 	db	32
  1007  00FFB4  20                 	db	32
  1008  00FFB5  20                 	db	32
  1009  00FFB6  20                 	db	32
  1010  00FFB7  00                 	db	0
  1011  00FFB8                     STR_37:
  1012  00FFB8  53                 	db	83	;'S'
  1013  00FFB9  6C                 	db	108	;'l'
  1014  00FFBA  65                 	db	101	;'e'
  1015  00FFBB  65                 	db	101	;'e'
  1016  00FFBC  70                 	db	112	;'p'
  1017  00FFBD  69                 	db	105	;'i'
  1018  00FFBE  6E                 	db	110	;'n'
  1019  00FFBF  67                 	db	103	;'g'
  1020  00FFC0  21                 	db	33
  1021  00FFC1  21                 	db	33
  1022  00FFC2  21                 	db	33
  1023  00FFC3  00                 	db	0
  1024  00FFC4                     STR_2:
  1025  00FFC4  20                 	db	32
  1026  00FFC5  20                 	db	32
  1027  00FFC6  43                 	db	67	;'C'
  1028  00FFC7  68                 	db	104	;'h'
  1029  00FFC8  61                 	db	97	;'a'
  1030  00FFC9  6E                 	db	110	;'n'
  1031  00FFCA  6E                 	db	110	;'n'
  1032  00FFCB  65                 	db	101	;'e'
  1033  00FFCC  6C                 	db	108	;'l'
  1034  00FFCD  3A                 	db	58	;':'
  1035  00FFCE  20                 	db	32
  1036  00FFCF  00                 	db	0
  1037  00FFD0                     STR_31:
  1038  00FFD0  57                 	db	87	;'W'
  1039  00FFD1  6F                 	db	111	;'o'
  1040  00FFD2  6B                 	db	107	;'k'
  1041  00FFD3  65                 	db	101	;'e'
  1042  00FFD4  20                 	db	32
  1043  00FFD5  55                 	db	85	;'U'
  1044  00FFD6  70                 	db	112	;'p'
  1045  00FFD7  21                 	db	33
  1046  00FFD8  21                 	db	33
  1047  00FFD9  21                 	db	33
  1048  00FFDA  00                 	db	0
  1049  00FFDB                     STR_30:
  1050  00FFDB  53                 	db	83	;'S'
  1051  00FFDC  6C                 	db	108	;'l'
  1052  00FFDD  65                 	db	101	;'e'
  1053  00FFDE  65                 	db	101	;'e'
  1054  00FFDF  70                 	db	112	;'p'
  1055  00FFE0  69                 	db	105	;'i'
  1056  00FFE1  6E                 	db	110	;'n'
  1057  00FFE2  67                 	db	103	;'g'
  1058  00FFE3  21                 	db	33
  1059  00FFE4  21                 	db	33
  1060  00FFE5  00                 	db	0
  1061  00FFE6  53                 	db	83	;'S'
  1062  00FFE7  65                 	db	101	;'e'
  1063  00FFE8  63                 	db	99	;'c'
  1064  00FFE9  75                 	db	117	;'u'
  1065  00FFEA  72                 	db	114	;'r'
  1066  00FFEB  65                 	db	101	;'e'
  1067  00FFEC  64                 	db	100	;'d'
  1068  00FFED  20                 	db	32
  1069  00FFEE  00                 	db	0
  1070  00FFEF  20                 	db	32
  1071  00FFF0  66                 	db	102	;'f'
  1072  00FFF1  72                 	db	114	;'r'
  1073  00FFF2  6F                 	db	111	;'o'
  1074  00FFF3  6D                 	db	109	;'m'
  1075  00FFF4  20                 	db	32
  1076  00FFF5  00                 	db	0
  1077  0000                     
  1078                           ; #config settings
  1079  00FFF6  00                 	db	0	; dummy byte at the end
  1080  0000                     
  1081                           	psect	cinit
  1082  002BAC                     __pcinit:
  1083                           	opt stack 0
  1084  002BAC                     start_initialization:
  1085                           	opt stack 0
  1086  002BAC                     __initialization:
  1087                           	opt stack 0
  1088                           
  1089                           ; Clear objects allocated to BANK2 (254 bytes)
  1090  002BAC  EE02  F000         	lfsr	0,__pbssBANK2
  1091  002BB0  0EFE               	movlw	254
  1092  002BB2                     clear_0:
  1093  002BB2  6AEE               	clrf	postinc0,c
  1094  002BB4  06E8               	decf	wreg,f,c
  1095  002BB6  E1FD               	bnz	clear_0
  1096                           
  1097                           ; Clear objects allocated to BANK1 (225 bytes)
  1098  002BB8  EE01  F000         	lfsr	0,__pbssBANK1
  1099  002BBC  0EE1               	movlw	225
  1100  002BBE                     clear_1:
  1101  002BBE  6AEE               	clrf	postinc0,c
  1102  002BC0  06E8               	decf	wreg,f,c
  1103  002BC2  E1FD               	bnz	clear_1
  1104                           
  1105                           ; Clear objects allocated to BANK0 (39 bytes)
  1106  002BC4  EE00  F0CC         	lfsr	0,__pbssBANK0
  1107  002BC8  0E27               	movlw	39
  1108  002BCA                     clear_2:
  1109  002BCA  6AEE               	clrf	postinc0,c
  1110  002BCC  06E8               	decf	wreg,f,c
  1111  002BCE  E1FD               	bnz	clear_2
  1112                           
  1113                           ; Clear objects allocated to COMRAM (35 bytes)
  1114  002BD0  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1115  002BD4  0E23               	movlw	35
  1116  002BD6                     clear_3:
  1117  002BD6  6AEE               	clrf	postinc0,c
  1118  002BD8  06E8               	decf	wreg,f,c
  1119  002BDA  E1FD               	bnz	clear_3
  1120                           
  1121                           ; Initialize objects allocated to BANK0 (4 bytes)
  1122                           ; load TBLPTR registers with __pidataBANK0
  1123  002BDC  0EBA               	movlw	low __pidataBANK0
  1124  002BDE  6EF6               	movwf	tblptrl,c
  1125  002BE0  0E33               	movlw	high __pidataBANK0
  1126  002BE2  6EF7               	movwf	tblptrh,c
  1127  002BE4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1128  002BE6  6EF8               	movwf	tblptru,c
  1129  002BE8  EE00  F0F3         	lfsr	0,__pdataBANK0
  1130  002BEC  EE10 F004          	lfsr	1,4
  1131  002BF0                     copy_data0:
  1132  002BF0  0009               	tblrd		*+
  1133  002BF2  CFF5 FFEE          	movff	tablat,postinc0
  1134  002BF6  50E5               	movf	postdec1,w,c
  1135  002BF8  50E1               	movf	fsr1l,w,c
  1136  002BFA  E1FA               	bnz	copy_data0
  1137  002BFC                     end_of_initialization:
  1138                           	opt stack 0
  1139  002BFC                     __end_of__initialization:
  1140                           	opt stack 0
  1141  002BFC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1142  002BFE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1143  002C00  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1144  002C02  6EF8               	movwf	tblptru,c
  1145  002C04  0100               	movlb	0
  1146  002C06  EF3B  F019         	goto	_main	;jump to C main() function
  1147                           tblptru	equ	0xFF8
  1148                           tblptrh	equ	0xFF7
  1149                           tblptrl	equ	0xFF6
  1150                           tablat	equ	0xFF5
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           postdec1	equ	0xFE5
  1154                           fsr1l	equ	0xFE1
  1155                           
  1156                           	psect	bssCOMRAM
  1157  00003C                     __pbssCOMRAM:
  1158                           	opt stack 0
  1159  00003C                     _MACRxPacket:
  1160                           	opt stack 0
  1161  00003C                     	ds	8
  1162  000044                     _t2:
  1163                           	opt stack 0
  1164  000044                     	ds	4
  1165  000048                     _t3:
  1166                           	opt stack 0
  1167  000048                     	ds	4
  1168  00004C                     _timer1ReloadVal:
  1169                           	opt stack 0
  1170  00004C                     	ds	2
  1171  00004E                     _RSSIVal:
  1172                           	opt stack 0
  1173  00004E                     	ds	1
  1174  00004F                     _TxMACSeq:
  1175                           	opt stack 0
  1176  00004F                     	ds	1
  1177  000050                     _timerExtension1:
  1178                           	opt stack 0
  1179  000050                     	ds	1
  1180  000051                     _nvmConnMode:
  1181                           	opt stack 0
  1182  000051                     	ds	2
  1183  000053                     _nvmConnectionTable:
  1184                           	opt stack 0
  1185  000053                     	ds	2
  1186  000055                     _nvmCurrentChannel:
  1187                           	opt stack 0
  1188  000055                     	ds	2
  1189  000057                     _nvmEdc:
  1190                           	opt stack 0
  1191  000057                     	ds	2
  1192  000059                     _nvmOutFrameCounter:
  1193                           	opt stack 0
  1194  000059                     	ds	2
  1195  00005B                     _nvmRole:
  1196                           	opt stack 0
  1197  00005B                     	ds	2
  1198  00005D                     _nvmmyIndex:
  1199                           	opt stack 0
  1200  00005D                     	ds	2
  1201                           tblptru	equ	0xFF8
  1202                           tblptrh	equ	0xFF7
  1203                           tblptrl	equ	0xFF6
  1204                           tablat	equ	0xFF5
  1205                           postinc0	equ	0xFEE
  1206                           wreg	equ	0xFE8
  1207                           postdec1	equ	0xFE5
  1208                           fsr1l	equ	0xFE1
  1209                           
  1210                           	psect	bssBANK0
  1211  0000CC                     __pbssBANK0:
  1212                           	opt stack 0
  1213  0000CC                     _rxMessage:
  1214                           	opt stack 0
  1215  0000CC                     	ds	10
  1216  0000D6                     _MACInitParams:
  1217                           	opt stack 0
  1218  0000D6                     	ds	3
  1219  0000D9                     _nextEEPosition:
  1220                           	opt stack 0
  1221  0000D9                     	ds	2
  1222  0000DB                     _IRQ1_Received:
  1223                           	opt stack 0
  1224  0000DB                     	ds	1
  1225  0000DC                     _LatestConnection:
  1226                           	opt stack 0
  1227  0000DC                     	ds	1
  1228  0000DD                     _MACSeq:
  1229                           	opt stack 0
  1230  0000DD                     	ds	1
  1231  0000DE                     _P2PCapacityInfo:
  1232                           	opt stack 0
  1233  0000DE                     	ds	1
  1234  0000DF                     _P2PStatus:
  1235                           	opt stack 0
  1236  0000DF                     	ds	1
  1237  0000E0                     _PUSH_BUTTON_pressed:
  1238                           	opt stack 0
  1239  0000E0                     	ds	1
  1240  0000E1                     _RF_Mode:
  1241                           	opt stack 0
  1242  0000E1                     	ds	1
  1243  0000E2                     _RSSILock:
  1244                           	opt stack 0
  1245  0000E2                     	ds	1
  1246  0000E3                     _ReceivedBankIndex:
  1247                           	opt stack 0
  1248  0000E3                     	ds	1
  1249  0000E4                     _RxNum:
  1250                           	opt stack 0
  1251  0000E4                     	ds	1
  1252  0000E5                     _TxData:
  1253                           	opt stack 0
  1254  0000E5                     	ds	1
  1255  0000E6                     _TxNum:
  1256                           	opt stack 0
  1257  0000E6                     	ds	1
  1258  0000E7                     _awake:
  1259                           	opt stack 0
  1260  0000E7                     	ds	1
  1261  0000E8                     _end_nodes:
  1262                           	opt stack 0
  1263  0000E8                     	ds	1
  1264  0000E9                     _hasAck:
  1265                           	opt stack 0
  1266  0000E9                     	ds	1
  1267  0000EA                     _i:
  1268                           	opt stack 0
  1269  0000EA                     	ds	1
  1270  0000EB                     _lost_connection:
  1271                           	opt stack 0
  1272  0000EB                     	ds	1
  1273  0000EC                     _rec_ack:
  1274                           	opt stack 0
  1275  0000EC                     	ds	1
  1276  0000ED                     _timerExtension2:
  1277                           	opt stack 0
  1278  0000ED                     	ds	1
  1279  0000EE                     _nvmMyPANID:
  1280                           	opt stack 0
  1281  0000EE                     	ds	2
  1282  0000F0                     _conn_size:
  1283                           	opt stack 0
  1284  0000F0                     	ds	1
  1285  0000F1                     _currentChannel:
  1286                           	opt stack 0
  1287  0000F1                     	ds	1
  1288  0000F2                     _myConnectionIndex_in_PanCo:
  1289                           	opt stack 0
  1290  0000F2                     	ds	1
  1291                           tblptru	equ	0xFF8
  1292                           tblptrh	equ	0xFF7
  1293                           tblptrl	equ	0xFF6
  1294                           tablat	equ	0xFF5
  1295                           postinc0	equ	0xFEE
  1296                           wreg	equ	0xFE8
  1297                           postdec1	equ	0xFE5
  1298                           fsr1l	equ	0xFE1
  1299                           
  1300                           	psect	dataBANK0
  1301  0000F3                     __pdataBANK0:
  1302                           	opt stack 0
  1303  0000F3                     _AdditionalNodeID:
  1304                           	opt stack 0
  1305  0000F3                     	ds	1
  1306  0000F4                     _chk_sel_status:
  1307                           	opt stack 0
  1308  0000F4                     	ds	1
  1309  0000F5                     _ConnMode:
  1310                           	opt stack 0
  1311  0000F5                     	ds	1
  1312  0000F6                     _role:
  1313                           	opt stack 0
  1314  0000F6                     	ds	1
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           postinc0	equ	0xFEE
  1320                           wreg	equ	0xFE8
  1321                           postdec1	equ	0xFE5
  1322                           fsr1l	equ	0xFE1
  1323                           
  1324                           	psect	bssBANK1
  1325  000100                     __pbssBANK1:
  1326                           	opt stack 0
  1327  000100                     _MACTxBuffer:
  1328                           	opt stack 0
  1329  000100                     	ds	55
  1330  000137                     _END_DEVICES_Short_Address:
  1331                           	opt stack 0
  1332  000137                     	ds	40
  1333  00015F                     _AckInfo:
  1334                           	opt stack 0
  1335  00015F                     	ds	30
  1336  00017D                     _DataRequestTimer:
  1337                           	opt stack 0
  1338  00017D                     	ds	4
  1339  000181                     _PUSH_BUTTON_press_time:
  1340                           	opt stack 0
  1341  000181                     	ds	4
  1342  000185                     _nvmDelayTick:
  1343                           	opt stack 0
  1344  000185                     	ds	4
  1345  000189                     _t1:
  1346                           	opt stack 0
  1347  000189                     	ds	4
  1348  00018D                     _tt1:
  1349                           	opt stack 0
  1350  00018D                     	ds	4
  1351  000191                     _tt2:
  1352                           	opt stack 0
  1353  000191                     	ds	4
  1354  000195                     _TxBuffer:
  1355                           	opt stack 0
  1356  000195                     	ds	35
  1357  0001B8                     _LCDText:
  1358                           	opt stack 0
  1359  0001B8                     	ds	33
  1360  0001D9                     _myLongAddress:
  1361                           	opt stack 0
  1362  0001D9                     	ds	8
  1363                           tblptru	equ	0xFF8
  1364                           tblptrh	equ	0xFF7
  1365                           tblptrl	equ	0xFF6
  1366                           tablat	equ	0xFF5
  1367                           postinc0	equ	0xFEE
  1368                           wreg	equ	0xFE8
  1369                           postdec1	equ	0xFE5
  1370                           fsr1l	equ	0xFE1
  1371                           
  1372                           	psect	bssBANK2
  1373  000200                     __pbssBANK2:
  1374                           	opt stack 0
  1375  000200                     _ConnectionTable:
  1376                           	opt stack 0
  1377  000200                     	ds	140
  1378  00028C                     _RxPacket:
  1379                           	opt stack 0
  1380  00028C                     	ds	114
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           postdec1	equ	0xFE5
  1388                           fsr1l	equ	0xFE1
  1389                           
  1390                           	psect	cstackBANK1
  1391  0001E1                     __pcstackBANK1:
  1392                           	opt stack 0
  1393  0001E1                     ??_run_star_demo:
  1394                           
  1395                           ; 0 bytes @ 0x0
  1396  0001E1                     	ds	7
  1397  0001E8                     run_star_demo@sw_layer_ack_status:
  1398                           	opt stack 0
  1399                           
  1400                           ; 1 bytes @ 0x7
  1401  0001E8                     	ds	1
  1402  0001E9                     run_star_demo@update_ed:
  1403                           	opt stack 0
  1404                           
  1405                           ; 1 bytes @ 0x8
  1406  0001E9                     	ds	1
  1407  0001EA                     run_star_demo@PressedButton:
  1408                           	opt stack 0
  1409                           
  1410                           ; 1 bytes @ 0x9
  1411  0001EA                     	ds	1
  1412  0001EB                     run_star_demo@switch_val:
  1413                           	opt stack 0
  1414                           
  1415                           ; 1 bytes @ 0xA
  1416  0001EB                     	ds	1
  1417  0001EC                     run_star_demo@select_ed:
  1418                           	opt stack 0
  1419                           
  1420                           ; 1 bytes @ 0xB
  1421  0001EC                     	ds	1
  1422                           tblptru	equ	0xFF8
  1423                           tblptrh	equ	0xFF7
  1424                           tblptrl	equ	0xFF6
  1425                           tablat	equ	0xFF5
  1426                           postinc0	equ	0xFEE
  1427                           wreg	equ	0xFE8
  1428                           postdec1	equ	0xFE5
  1429                           fsr1l	equ	0xFE1
  1430                           
  1431                           	psect	cstackBANK0
  1432  000060                     __pcstackBANK0:
  1433                           	opt stack 0
  1434  000060                     i1SPI1_Exchange8bit@data:
  1435                           	opt stack 0
  1436                           
  1437                           ; 1 bytes @ 0x0
  1438  000060                     	ds	1
  1439  000061                     i1RegisterRead@address:
  1440                           	opt stack 0
  1441                           
  1442                           ; 1 bytes @ 0x1
  1443  000061                     	ds	1
  1444  000062                     i1RegisterRead@value:
  1445                           	opt stack 0
  1446                           
  1447                           ; 1 bytes @ 0x2
  1448  000062                     	ds	1
  1449  000063                     i1RegisterRead@IRQ1select:
  1450                           	opt stack 0
  1451                           
  1452                           ; 1 bytes @ 0x3
  1453  000063                     	ds	1
  1454  000064                     i1RegisterRead@IRQ0select:
  1455                           	opt stack 0
  1456                           
  1457                           ; 1 bytes @ 0x4
  1458  000064                     	ds	1
  1459  000065                     ??_low_isr:
  1460                           
  1461                           ; 0 bytes @ 0x5
  1462  000065                     	ds	4
  1463  000069                     ??_isdigit:
  1464  000069                     ??_handle_lost_connection:
  1465  000069                     ?___wmul:
  1466                           	opt stack 0
  1467  000069                     ?___lwdiv:
  1468                           	opt stack 0
  1469  000069                     ?_MiWi_TickGet:
  1470                           	opt stack 0
  1471  000069                     Total_Connections@count:
  1472                           	opt stack 0
  1473  000069                     SPI1_Exchange8bit@data:
  1474                           	opt stack 0
  1475  000069                     SPIPut2@v:
  1476                           	opt stack 0
  1477  000069                     NVMalloc@size:
  1478                           	opt stack 0
  1479  000069                     Find_Index@DestAddr:
  1480                           	opt stack 0
  1481  000069                     isSameAddress@Address1:
  1482                           	opt stack 0
  1483  000069                     DELAY_ms@ms:
  1484                           	opt stack 0
  1485  000069                     ___wmul@multiplier:
  1486                           	opt stack 0
  1487  000069                     ___lwdiv@dividend:
  1488                           	opt stack 0
  1489  000069                     memset@p1:
  1490                           	opt stack 0
  1491  000069                     DELAY_10us@tenMicroSecondCounter:
  1492                           	opt stack 0
  1493                           
  1494                           ; 4 bytes @ 0x9
  1495  000069                     	ds	1
  1496  00006A                     RegisterRead@address:
  1497                           	opt stack 0
  1498  00006A                     WriteFIFO@Data:
  1499                           	opt stack 0
  1500  00006A                     Total_Connections@i:
  1501                           	opt stack 0
  1502  00006A                     LCD_WriteCmd@data:
  1503                           	opt stack 0
  1504  00006A                     LCD_WriteData@data:
  1505                           	opt stack 0
  1506  00006A                     _isdigit$4039:
  1507                           	opt stack 0
  1508  00006A                     RegisterSet@setting:
  1509                           	opt stack 0
  1510  00006A                     EEPROM_Read@dest:
  1511                           	opt stack 0
  1512  00006A                     EEPROM_Write@dest:
  1513                           	opt stack 0
  1514                           
  1515                           ; 2 bytes @ 0xA
  1516  00006A                     	ds	1
  1517  00006B                     ??_DELAY_ms:
  1518  00006B                     RegisterRead@value:
  1519                           	opt stack 0
  1520  00006B                     WriteFIFO@IRQ1select:
  1521                           	opt stack 0
  1522  00006B                     NVMalloc@location:
  1523                           	opt stack 0
  1524  00006B                     LCD_Update@i:
  1525                           	opt stack 0
  1526  00006B                     isdigit@c:
  1527                           	opt stack 0
  1528  00006B                     isSameAddress@Address2:
  1529                           	opt stack 0
  1530  00006B                     ___wmul@multiplicand:
  1531                           	opt stack 0
  1532  00006B                     ___lwdiv@divisor:
  1533                           	opt stack 0
  1534  00006B                     memset@c:
  1535                           	opt stack 0
  1536                           
  1537                           ; 2 bytes @ 0xB
  1538  00006B                     	ds	1
  1539  00006C                     ??_NVMalloc:
  1540  00006C                     RegisterSet@IRQ1select:
  1541                           	opt stack 0
  1542  00006C                     RegisterRead@IRQ1select:
  1543                           	opt stack 0
  1544  00006C                     WriteFIFO@IRQ0select:
  1545                           	opt stack 0
  1546  00006C                     EEPROM_Read@addr:
  1547                           	opt stack 0
  1548  00006C                     EEPROM_Write@addr:
  1549                           	opt stack 0
  1550                           
  1551                           ; 1 bytes @ 0xC
  1552  00006C                     	ds	1
  1553  00006D                     ??_DELAY_10us:
  1554  00006D                     ??_MiWi_TickGet:
  1555  00006D                     RegisterSet@IRQ0select:
  1556                           	opt stack 0
  1557  00006D                     RegisterRead@IRQ0select:
  1558                           	opt stack 0
  1559  00006D                     Find_Index@i:
  1560                           	opt stack 0
  1561  00006D                     EEPROM_Read@count:
  1562                           	opt stack 0
  1563  00006D                     EEPROM_Write@count:
  1564                           	opt stack 0
  1565  00006D                     ___lwdiv@counter:
  1566                           	opt stack 0
  1567  00006D                     ___wmul@product:
  1568                           	opt stack 0
  1569  00006D                     memset@n:
  1570                           	opt stack 0
  1571                           
  1572                           ; 2 bytes @ 0xD
  1573  00006D                     	ds	1
  1574  00006E                     ??_EEPROM_Write:
  1575  00006E                     SetRFMode@mode:
  1576                           	opt stack 0
  1577  00006E                     NVMInit@result:
  1578                           	opt stack 0
  1579  00006E                     handle_lost_connection@stat:
  1580                           	opt stack 0
  1581  00006E                     MiWi_TickGet@failureCounter:
  1582                           	opt stack 0
  1583  00006E                     Read_MAC_Address@myAddress:
  1584                           	opt stack 0
  1585  00006E                     ___lwdiv@quotient:
  1586                           	opt stack 0
  1587                           
  1588                           ; 2 bytes @ 0xE
  1589  00006E                     	ds	1
  1590  00006F                     MiMAC_SetChannel@offsetFreq:
  1591                           	opt stack 0
  1592  00006F                     handle_lost_connection@i:
  1593                           	opt stack 0
  1594  00006F                     isSameAddress@i:
  1595                           	opt stack 0
  1596  00006F                     EEPROM_Write@oldRFIE:
  1597                           	opt stack 0
  1598  00006F                     memset@p:
  1599                           	opt stack 0
  1600  00006F                     MiWi_TickGet@currentTime:
  1601                           	opt stack 0
  1602                           
  1603                           ; 4 bytes @ 0xF
  1604  00006F                     	ds	1
  1605  000070                     ??_MiMAC_SetChannel:
  1606  000070                     ??_Read_MAC_Address:
  1607  000070                     ?___lwmod:
  1608                           	opt stack 0
  1609  000070                     EEPROM_Write@PageCounter:
  1610                           	opt stack 0
  1611  000070                     store_connection_tb@payload:
  1612                           	opt stack 0
  1613  000070                     ___lwmod@dividend:
  1614                           	opt stack 0
  1615                           
  1616                           ; 2 bytes @ 0x10
  1617  000070                     	ds	1
  1618  000071                     ??_AddConnection:
  1619  000071                     ??_MiApp_ConnectionMode:
  1620  000071                     MiMAC_SetChannel@channel:
  1621                           	opt stack 0
  1622                           
  1623                           ; 1 bytes @ 0x11
  1624  000071                     	ds	1
  1625  000072                     ??_store_connection_tb:
  1626  000072                     MiApp_SetChannel@channel:
  1627                           	opt stack 0
  1628  000072                     MiApp_ConnectionMode@Mode:
  1629                           	opt stack 0
  1630  000072                     Read_MAC_Address@i:
  1631                           	opt stack 0
  1632  000072                     ___lwmod@divisor:
  1633                           	opt stack 0
  1634                           
  1635                           ; 2 bytes @ 0x12
  1636  000072                     	ds	1
  1637  000073                     ??_MiMAC_ReceivedPacket:
  1638  000073                     DELAY_ms@cyclesRequiredForEntireDelay:
  1639                           	opt stack 0
  1640  000073                     ButtonPressed@tickDifference:
  1641                           	opt stack 0
  1642                           
  1643                           ; 4 bytes @ 0x13
  1644  000073                     	ds	1
  1645  000074                     store_connection_tb@j:
  1646                           	opt stack 0
  1647  000074                     ___lwmod@counter:
  1648                           	opt stack 0
  1649                           
  1650                           ; 1 bytes @ 0x14
  1651  000074                     	ds	1
  1652  000075                     ?_sprintf:
  1653                           	opt stack 0
  1654  000075                     store_connection_tb@i:
  1655                           	opt stack 0
  1656  000075                     sprintf@sp:
  1657                           	opt stack 0
  1658  000075                     DELAY_10us@cyclesRequiredForEntireDelay:
  1659                           	opt stack 0
  1660                           
  1661                           ; 4 bytes @ 0x15
  1662  000075                     	ds	1
  1663  000076                     AddConnection@connectionSlot:
  1664                           	opt stack 0
  1665                           
  1666                           ; 1 bytes @ 0x16
  1667  000076                     	ds	1
  1668  000077                     MiMAC_PowerState@PowerState:
  1669                           	opt stack 0
  1670  000077                     AddConnection@i:
  1671                           	opt stack 0
  1672  000077                     sprintf@f:
  1673                           	opt stack 0
  1674  000077                     MiMAC_Init@initValue:
  1675                           	opt stack 0
  1676  000077                     ButtonPressed@t:
  1677                           	opt stack 0
  1678                           
  1679                           ; 4 bytes @ 0x17
  1680  000077                     	ds	1
  1681  000078                     MiMAC_PowerState@i:
  1682                           	opt stack 0
  1683                           
  1684                           ; 1 bytes @ 0x18
  1685  000078                     	ds	1
  1686  000079                     TxPacket@CCA:
  1687                           	opt stack 0
  1688                           
  1689                           ; 1 bytes @ 0x19
  1690  000079                     	ds	1
  1691  00007A                     ??_TxPacket:
  1692  00007A                     MiMAC_Init@i:
  1693                           	opt stack 0
  1694                           
  1695                           ; 1 bytes @ 0x1A
  1696  00007A                     	ds	1
  1697  00007B                     MiApp_ProtocolInit@bNetworkFreezer:
  1698                           	opt stack 0
  1699  00007B                     MiMAC_ReceivedPacket@currentTick:
  1700                           	opt stack 0
  1701                           
  1702                           ; 4 bytes @ 0x1B
  1703  00007B                     	ds	1
  1704  00007C                     MiApp_ProtocolInit@initValue:
  1705                           	opt stack 0
  1706                           
  1707                           ; 3 bytes @ 0x1C
  1708  00007C                     	ds	2
  1709  00007E                     TxPacket@t1:
  1710                           	opt stack 0
  1711                           
  1712                           ; 4 bytes @ 0x1E
  1713  00007E                     	ds	1
  1714  00007F                     MiMAC_ReceivedPacket@PayloadIndex:
  1715                           	opt stack 0
  1716  00007F                     MiApp_ProtocolInit@i:
  1717                           	opt stack 0
  1718                           
  1719                           ; 1 bytes @ 0x1F
  1720  00007F                     	ds	1
  1721  000080                     MiMAC_ReceivedPacket@i:
  1722                           	opt stack 0
  1723                           
  1724                           ; 1 bytes @ 0x20
  1725  000080                     	ds	1
  1726  000081                     ??_sprintf:
  1727                           
  1728                           ; 0 bytes @ 0x21
  1729  000081                     	ds	1
  1730  000082                     TxPacket@t2:
  1731                           	opt stack 0
  1732                           
  1733                           ; 4 bytes @ 0x22
  1734  000082                     	ds	3
  1735  000085                     sprintf@idx:
  1736                           	opt stack 0
  1737                           
  1738                           ; 1 bytes @ 0x25
  1739  000085                     	ds	1
  1740  000086                     TxPacket@CCARetries:
  1741                           	opt stack 0
  1742  000086                     _sprintf$3808:
  1743                           	opt stack 0
  1744                           
  1745                           ; 2 bytes @ 0x26
  1746  000086                     	ds	1
  1747  000087                     TxPacket@reTry:
  1748                           	opt stack 0
  1749                           
  1750                           ; 1 bytes @ 0x27
  1751  000087                     	ds	1
  1752  000088                     TxPacket@allowedTxFailure:
  1753                           	opt stack 0
  1754  000088                     _sprintf$3809:
  1755                           	opt stack 0
  1756                           
  1757                           ; 2 bytes @ 0x28
  1758  000088                     	ds	1
  1759  000089                     TxPacket@rssival:
  1760                           	opt stack 0
  1761                           
  1762                           ; 1 bytes @ 0x29
  1763  000089                     	ds	1
  1764  00008A                     TxPacket@status:
  1765                           	opt stack 0
  1766  00008A                     _sprintf$3815:
  1767                           	opt stack 0
  1768                           
  1769                           ; 2 bytes @ 0x2A
  1770  00008A                     	ds	1
  1771  00008B                     TxPacket@TxPacketLen:
  1772                           	opt stack 0
  1773                           
  1774                           ; 1 bytes @ 0x2B
  1775  00008B                     	ds	1
  1776  00008C                     TxPacket@i:
  1777                           	opt stack 0
  1778  00008C                     sprintf@cp:
  1779                           	opt stack 0
  1780                           
  1781                           ; 1 bytes @ 0x2C
  1782  00008C                     	ds	1
  1783  00008D                     sprintf@len:
  1784                           	opt stack 0
  1785  00008D                     MiMAC_SendPacket@transParam:
  1786                           	opt stack 0
  1787                           
  1788                           ; 3 bytes @ 0x2D
  1789  00008D                     	ds	2
  1790  00008F                     sprintf@ap:
  1791                           	opt stack 0
  1792                           
  1793                           ; 1 bytes @ 0x2F
  1794  00008F                     	ds	1
  1795  000090                     MiMAC_SendPacket@MACPayload:
  1796                           	opt stack 0
  1797  000090                     sprintf@val:
  1798                           	opt stack 0
  1799                           
  1800                           ; 2 bytes @ 0x30
  1801  000090                     	ds	2
  1802  000092                     MiMAC_SendPacket@MACPayloadLen:
  1803                           	opt stack 0
  1804  000092                     sprintf@prec:
  1805                           	opt stack 0
  1806                           
  1807                           ; 1 bytes @ 0x32
  1808  000092                     	ds	1
  1809  000093                     ??_MiMAC_SendPacket:
  1810  000093                     sprintf@width:
  1811                           	opt stack 0
  1812                           
  1813                           ; 2 bytes @ 0x33
  1814  000093                     	ds	1
  1815  000094                     MiMAC_SendPacket@TxIndex:
  1816                           	opt stack 0
  1817                           
  1818                           ; 1 bytes @ 0x34
  1819  000094                     	ds	1
  1820  000095                     MiMAC_SendPacket@i:
  1821                           	opt stack 0
  1822  000095                     sprintf@c:
  1823                           	opt stack 0
  1824                           
  1825                           ; 1 bytes @ 0x35
  1826  000095                     	ds	1
  1827  000096                     SendPacket@DestinationAddress:
  1828                           	opt stack 0
  1829  000096                     sprintf@flag:
  1830                           	opt stack 0
  1831                           
  1832                           ; 2 bytes @ 0x36
  1833  000096                     	ds	2
  1834  000098                     SendPacket@isCommand:
  1835                           	opt stack 0
  1836  000098                     LCDTRXCount@rxCount:
  1837                           	opt stack 0
  1838  000098                     LCDDisplay@text:
  1839                           	opt stack 0
  1840                           
  1841                           ; 2 bytes @ 0x38
  1842  000098                     	ds	1
  1843  000099                     SendPacket@SecurityEnabled:
  1844                           	opt stack 0
  1845  000099                     LCDTRXCount@txCount:
  1846                           	opt stack 0
  1847                           
  1848                           ; 1 bytes @ 0x39
  1849  000099                     	ds	1
  1850  00009A                     ??_SendPacket:
  1851  00009A                     LCDDisplay@value:
  1852                           	opt stack 0
  1853  00009A                     DemoOutput_UpdateTxRx@RxNum:
  1854                           	opt stack 0
  1855                           
  1856                           ; 1 bytes @ 0x3A
  1857  00009A                     	ds	1
  1858  00009B                     SendPacket@status:
  1859                           	opt stack 0
  1860  00009B                     LCDDisplay@delay:
  1861                           	opt stack 0
  1862  00009B                     DemoOutput_UpdateTxRx@TxNum:
  1863                           	opt stack 0
  1864                           
  1865                           ; 1 bytes @ 0x3B
  1866  00009B                     	ds	1
  1867  00009C                     SendPacket@Broadcast:
  1868                           	opt stack 0
  1869  00009C                     LCDDisplay@i:
  1870                           	opt stack 0
  1871                           
  1872                           ; 1 bytes @ 0x3C
  1873  00009C                     	ds	1
  1874  00009D                     DemoOutput_Channel@Step:
  1875                           	opt stack 0
  1876  00009D                     STAR_DEMO_OPTIONS_MESSAGE@NetworkRole:
  1877                           	opt stack 0
  1878  00009D                     freezer_feature@PressedButton1:
  1879                           	opt stack 0
  1880  00009D                     SendPacket@tParam:
  1881                           	opt stack 0
  1882                           
  1883                           ; 3 bytes @ 0x3D
  1884  00009D                     	ds	1
  1885  00009E                     DemoOutput_Channel@channel:
  1886                           	opt stack 0
  1887                           
  1888                           ; 1 bytes @ 0x3E
  1889  00009E                     	ds	2
  1890  0000A0                     ??_StartChannelHopping:
  1891  0000A0                     CheckForData@tmpTxData:
  1892                           	opt stack 0
  1893  0000A0                     MiApp_UnicastAddress@DestinationAddress:
  1894                           	opt stack 0
  1895  0000A0                     SW_Ack_SrED@Dest_Addr:
  1896                           	opt stack 0
  1897                           
  1898                           ; 2 bytes @ 0x40
  1899  0000A0                     	ds	1
  1900  0000A1                     CheckForData@firstuint8_t:
  1901                           	opt stack 0
  1902                           
  1903                           ; 1 bytes @ 0x41
  1904  0000A1                     	ds	1
  1905  0000A2                     MiApp_UnicastAddress@PermanentAddr:
  1906                           	opt stack 0
  1907                           
  1908                           ; 1 bytes @ 0x42
  1909  0000A2                     	ds	1
  1910  0000A3                     MiApp_UnicastAddress@SecEn:
  1911                           	opt stack 0
  1912                           
  1913                           ; 1 bytes @ 0x43
  1914  0000A3                     	ds	1
  1915  0000A4                     MiApp_UnicastConnection@SecEn:
  1916                           	opt stack 0
  1917  0000A4                     StartChannelHopping@t1:
  1918                           	opt stack 0
  1919                           
  1920                           ; 4 bytes @ 0x44
  1921  0000A4                     	ds	1
  1922  0000A5                     MiApp_UnicastConnection@ConnectionIndex:
  1923                           	opt stack 0
  1924                           
  1925                           ; 1 bytes @ 0x45
  1926  0000A5                     	ds	1
  1927  0000A6                     Forward_Packet_PANCr_to_EDy@fw_payload:
  1928                           	opt stack 0
  1929                           
  1930                           ; 2 bytes @ 0x46
  1931  0000A6                     	ds	2
  1932  0000A8                     Forward_Packet_PANCr_to_EDy@index:
  1933                           	opt stack 0
  1934  0000A8                     StartChannelHopping@t2:
  1935                           	opt stack 0
  1936                           
  1937                           ; 4 bytes @ 0x48
  1938  0000A8                     	ds	1
  1939  0000A9                     Forward_Packet_PANCr_to_EDy@EDxAddress:
  1940                           	opt stack 0
  1941                           
  1942                           ; 2 bytes @ 0x49
  1943  0000A9                     	ds	2
  1944  0000AB                     Forward_Packet_PANCr_to_EDy@status:
  1945                           	opt stack 0
  1946                           
  1947                           ; 1 bytes @ 0x4B
  1948  0000AB                     	ds	1
  1949  0000AC                     Forward_Packet_PANCr_to_EDy@i:
  1950                           	opt stack 0
  1951  0000AC                     StartChannelHopping@OptimalChannel:
  1952                           	opt stack 0
  1953                           
  1954                           ; 1 bytes @ 0x4C
  1955  0000AC                     	ds	1
  1956  0000AD                     StartChannelHopping@i:
  1957                           	opt stack 0
  1958                           
  1959                           ; 1 bytes @ 0x4D
  1960  0000AD                     	ds	1
  1961  0000AE                     ??_P2PTasks:
  1962                           
  1963                           ; 0 bytes @ 0x4E
  1964  0000AE                     	ds	4
  1965  0000B2                     P2PTasks@FW_Stat:
  1966                           	opt stack 0
  1967                           
  1968                           ; 1 bytes @ 0x52
  1969  0000B2                     	ds	1
  1970  0000B3                     P2PTasks@tmpTick:
  1971                           	opt stack 0
  1972                           
  1973                           ; 4 bytes @ 0x53
  1974  0000B3                     	ds	4
  1975  0000B7                     P2PTasks@final_index:
  1976                           	opt stack 0
  1977                           
  1978                           ; 1 bytes @ 0x57
  1979  0000B7                     	ds	1
  1980  0000B8                     P2PTasks@i:
  1981                           	opt stack 0
  1982                           
  1983                           ; 1 bytes @ 0x58
  1984  0000B8                     	ds	1
  1985  0000B9                     ??_MiApp_UnicastStar:
  1986  0000B9                     MiApp_TransceiverPowerState@Mode:
  1987                           	opt stack 0
  1988  0000B9                     MiApp_EstablishConnection@Mode:
  1989                           	opt stack 0
  1990                           
  1991                           ; 1 bytes @ 0x59
  1992  0000B9                     	ds	1
  1993  0000BA                     ??_MiApp_EstablishConnection:
  1994                           
  1995                           ; 0 bytes @ 0x5A
  1996  0000BA                     	ds	3
  1997  0000BD                     MiApp_UnicastStar@t1:
  1998                           	opt stack 0
  1999                           
  2000                           ; 4 bytes @ 0x5D
  2001  0000BD                     	ds	1
  2002  0000BE                     MiApp_EstablishConnection@tmpConnectionMode:
  2003                           	opt stack 0
  2004                           
  2005                           ; 1 bytes @ 0x5E
  2006  0000BE                     	ds	1
  2007  0000BF                     MiApp_EstablishConnection@retry:
  2008                           	opt stack 0
  2009                           
  2010                           ; 1 bytes @ 0x5F
  2011  0000BF                     	ds	1
  2012  0000C0                     MiApp_EstablishConnection@t1:
  2013                           	opt stack 0
  2014                           
  2015                           ; 4 bytes @ 0x60
  2016  0000C0                     	ds	1
  2017  0000C1                     MiApp_UnicastStar@t2:
  2018                           	opt stack 0
  2019                           
  2020                           ; 4 bytes @ 0x61
  2021  0000C1                     	ds	3
  2022  0000C4                     MiApp_EstablishConnection@connectionInterval:
  2023                           	opt stack 0
  2024                           
  2025                           ; 1 bytes @ 0x64
  2026  0000C4                     	ds	1
  2027  0000C5                     MiApp_UnicastStar@SecEn:
  2028                           	opt stack 0
  2029  0000C5                     MiApp_EstablishConnection@t2:
  2030                           	opt stack 0
  2031                           
  2032                           ; 4 bytes @ 0x65
  2033  0000C5                     	ds	4
  2034  0000C9                     MiApp_EstablishConnection@i:
  2035                           	opt stack 0
  2036                           
  2037                           ; 1 bytes @ 0x69
  2038  0000C9                     	ds	1
  2039  0000CA                     Initialize_Demo@freezer_enable:
  2040                           	opt stack 0
  2041                           
  2042                           ; 1 bytes @ 0x6A
  2043  0000CA                     	ds	1
  2044  0000CB                     main@freezer_enable:
  2045                           	opt stack 0
  2046                           
  2047                           ; 1 bytes @ 0x6B
  2048  0000CB                     	ds	1
  2049                           tblptru	equ	0xFF8
  2050                           tblptrh	equ	0xFF7
  2051                           tblptrl	equ	0xFF6
  2052                           tablat	equ	0xFF5
  2053                           postinc0	equ	0xFEE
  2054                           wreg	equ	0xFE8
  2055                           postdec1	equ	0xFE5
  2056                           fsr1l	equ	0xFE1
  2057                           
  2058                           	psect	cstackCOMRAM
  2059  000001                     __pcstackCOMRAM:
  2060                           	opt stack 0
  2061  000001                     ?i2_MiWi_TickGet:
  2062                           	opt stack 0
  2063  000001                     i2SPI1_Exchange8bit@data:
  2064                           	opt stack 0
  2065  000001                     i2DELAY_10us@tenMicroSecondCounter:
  2066                           	opt stack 0
  2067                           
  2068                           ; 4 bytes @ 0x0
  2069  000001                     	ds	1
  2070  000002                     i2RegisterRead@address:
  2071                           	opt stack 0
  2072  000002                     i2WriteFIFO@Data:
  2073                           	opt stack 0
  2074  000002                     i2RegisterSet@setting:
  2075                           	opt stack 0
  2076                           
  2077                           ; 2 bytes @ 0x1
  2078  000002                     	ds	1
  2079  000003                     i2RegisterRead@value:
  2080                           	opt stack 0
  2081  000003                     i2WriteFIFO@IRQ1select:
  2082                           	opt stack 0
  2083                           
  2084                           ; 1 bytes @ 0x2
  2085  000003                     	ds	1
  2086  000004                     i2RegisterSet@IRQ1select:
  2087                           	opt stack 0
  2088  000004                     i2RegisterRead@IRQ1select:
  2089                           	opt stack 0
  2090  000004                     i2WriteFIFO@IRQ0select:
  2091                           	opt stack 0
  2092                           
  2093                           ; 1 bytes @ 0x3
  2094  000004                     	ds	1
  2095  000005                     ??i2_DELAY_10us:
  2096  000005                     ??i2_MiWi_TickGet:
  2097  000005                     i2RegisterSet@IRQ0select:
  2098                           	opt stack 0
  2099  000005                     i2RegisterRead@IRQ0select:
  2100                           	opt stack 0
  2101                           
  2102                           ; 1 bytes @ 0x4
  2103  000005                     	ds	1
  2104  000006                     i2SetRFMode@mode:
  2105                           	opt stack 0
  2106  000006                     i2MiWi_TickGet@failureCounter:
  2107                           	opt stack 0
  2108                           
  2109                           ; 1 bytes @ 0x5
  2110  000006                     	ds	1
  2111  000007                     i2MiWi_TickGet@currentTime:
  2112                           	opt stack 0
  2113                           
  2114                           ; 4 bytes @ 0x6
  2115  000007                     	ds	6
  2116  00000D                     i2DELAY_10us@cyclesRequiredForEntireDelay:
  2117                           	opt stack 0
  2118                           
  2119                           ; 4 bytes @ 0xC
  2120  00000D                     	ds	4
  2121  000011                     i2TxPacket@CCA:
  2122                           	opt stack 0
  2123                           
  2124                           ; 1 bytes @ 0x10
  2125  000011                     	ds	1
  2126  000012                     ??i2_TxPacket:
  2127                           
  2128                           ; 0 bytes @ 0x11
  2129  000012                     	ds	4
  2130  000016                     i2TxPacket@TxPacketLen:
  2131                           	opt stack 0
  2132                           
  2133                           ; 1 bytes @ 0x15
  2134  000016                     	ds	1
  2135  000017                     i2TxPacket@status:
  2136                           	opt stack 0
  2137                           
  2138                           ; 1 bytes @ 0x16
  2139  000017                     	ds	1
  2140  000018                     i2TxPacket@t1:
  2141                           	opt stack 0
  2142                           
  2143                           ; 4 bytes @ 0x17
  2144  000018                     	ds	4
  2145  00001C                     i2TxPacket@t2:
  2146                           	opt stack 0
  2147                           
  2148                           ; 4 bytes @ 0x1B
  2149  00001C                     	ds	4
  2150  000020                     i2TxPacket@CCARetries:
  2151                           	opt stack 0
  2152                           
  2153                           ; 1 bytes @ 0x1F
  2154  000020                     	ds	1
  2155  000021                     i2TxPacket@reTry:
  2156                           	opt stack 0
  2157                           
  2158                           ; 1 bytes @ 0x20
  2159  000021                     	ds	1
  2160  000022                     i2TxPacket@allowedTxFailure:
  2161                           	opt stack 0
  2162                           
  2163                           ; 1 bytes @ 0x21
  2164  000022                     	ds	1
  2165  000023                     i2TxPacket@rssival:
  2166                           	opt stack 0
  2167                           
  2168                           ; 1 bytes @ 0x22
  2169  000023                     	ds	1
  2170  000024                     i2TxPacket@i:
  2171                           	opt stack 0
  2172                           
  2173                           ; 1 bytes @ 0x23
  2174  000024                     	ds	1
  2175  000025                     ??_high_isr:
  2176                           
  2177                           ; 0 bytes @ 0x24
  2178  000025                     	ds	10
  2179  00002F                     high_isr@counter:
  2180                           	opt stack 0
  2181                           
  2182                           ; 2 bytes @ 0x2E
  2183  00002F                     	ds	2
  2184  000031                     high_isr@fifo_stat:
  2185                           	opt stack 0
  2186                           
  2187                           ; 1 bytes @ 0x30
  2188  000031                     	ds	1
  2189  000032                     high_isr@ackPacket:
  2190                           	opt stack 0
  2191                           
  2192                           ; 4 bytes @ 0x31
  2193  000032                     	ds	4
  2194  000036                     high_isr@bAck:
  2195                           	opt stack 0
  2196                           
  2197                           ; 1 bytes @ 0x35
  2198  000036                     	ds	1
  2199  000037                     high_isr@RxPacketPtr:
  2200                           	opt stack 0
  2201                           
  2202                           ; 1 bytes @ 0x36
  2203  000037                     	ds	1
  2204  000038                     high_isr@ackInfoIndex:
  2205                           	opt stack 0
  2206                           
  2207                           ; 1 bytes @ 0x37
  2208  000038                     	ds	1
  2209  000039                     high_isr@PacketLen:
  2210                           	opt stack 0
  2211                           
  2212                           ; 1 bytes @ 0x38
  2213  000039                     	ds	1
  2214  00003A                     high_isr@BankIndex:
  2215                           	opt stack 0
  2216                           
  2217                           ; 1 bytes @ 0x39
  2218  00003A                     	ds	1
  2219  00003B                     high_isr@i:
  2220                           	opt stack 0
  2221                           
  2222                           ; 1 bytes @ 0x3A
  2223  00003B                     	ds	1
  2224                           tblptru	equ	0xFF8
  2225                           tblptrh	equ	0xFF7
  2226                           tblptrl	equ	0xFF6
  2227                           tablat	equ	0xFF5
  2228                           postinc0	equ	0xFEE
  2229                           wreg	equ	0xFE8
  2230                           postdec1	equ	0xFE5
  2231                           fsr1l	equ	0xFE1
  2232                           
  2233 ;;
  2234 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2235 ;;
  2236 ;; *************** function _main *****************
  2237 ;; Defined at:
  2238 ;;		line 56 in file "../src/main.c"
  2239 ;; Parameters:    Size  Location     Type
  2240 ;;		None
  2241 ;; Auto vars:     Size  Location     Type
  2242 ;;  freezer_enab    1  107[BANK0 ] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;		None               void
  2245 ;; Registers used:
  2246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : F/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;Total ram usage:        1 bytes
  2257 ;; Hardware stack levels required when called:   22
  2258 ;; This function calls:
  2259 ;;		_DemoOutput_Greeting
  2260 ;;		_Initialize_Demo
  2261 ;;		_Run_Demo
  2262 ;;		_SYSTEM_Initialize
  2263 ;;		_TMR1_Initialize
  2264 ;;		_freezer_feature
  2265 ;; This function is called by:
  2266 ;;		Startup code after reset
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text0
  2271  003276                     __ptext0:
  2272                           	opt stack 0
  2273  003276                     _main:
  2274                           	opt stack 9
  2275                           
  2276                           ;main.c: 60: SYSTEM_Initialize();
  2277                           
  2278                           ;incstack = 0
  2279  003276  EC24  F011         	call	_SYSTEM_Initialize	;wreg free
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;main.c: 62: TMR1_Initialize();
  2283  00327A  EC68  F019         	call	_TMR1_Initialize	;wreg free
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;main.c: 64: DemoOutput_Greeting();
  2287  00327E  EC4A  F019         	call	_DemoOutput_Greeting	;wreg free
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;main.c: 68: freezer_enable = freezer_feature();
  2291  003282  EC09  F019         	call	_freezer_feature	;wreg free
  2292  003286  6FCB               	movwf	main@freezer_enable& (0+255),b
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;main.c: 72: Initialize_Demo(freezer_enable);
  2296  003288  51CB               	movf	main@freezer_enable& (0+255),w,b
  2297  00328A  ECFD  F014         	call	_Initialize_Demo
  2298  00328E                     l9744:
  2299                           
  2300                           ;main.c: 74: {
  2301                           ;main.c: 76: Run_Demo();
  2302  00328E  ECE1  F019         	call	_Run_Demo	;wreg free
  2303  003292  D7FD               	goto	l9744
  2304  003294                     __end_of_main:
  2305                           	opt stack 0
  2306                           tblptru	equ	0xFF8
  2307                           tblptrh	equ	0xFF7
  2308                           tblptrl	equ	0xFF6
  2309                           tablat	equ	0xFF5
  2310                           postinc0	equ	0xFEE
  2311                           wreg	equ	0xFE8
  2312                           postdec1	equ	0xFE5
  2313                           fsr1l	equ	0xFE1
  2314                           
  2315 ;; *************** function _freezer_feature *****************
  2316 ;; Defined at:
  2317 ;;		line 74 in file "../src/task.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  PressedButto    1   61[BANK0 ] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      unsigned char 
  2324 ;; Registers used:
  2325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : F/0
  2328 ;;		On exit  : F/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2334 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2335 ;;Total ram usage:        1 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:   12
  2338 ;; This function calls:
  2339 ;;		_ButtonPressed
  2340 ;;		_LCDDisplay
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text1
  2347  003212                     __ptext1:
  2348                           	opt stack 0
  2349  003212                     _freezer_feature:
  2350                           	opt stack 18
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;task.c: 79: LCDDisplay((char *)"SW1:New Network SW2:Freezer", 0, 0);
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;incstack = 0
  2357  003212  0E7A               	movlw	low STR_29
  2358  003214  6F98               	movwf	LCDDisplay@text& (0+255),b
  2359  003216  0EFE               	movlw	high STR_29
  2360  003218  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
  2361  00321A  6B9A               	clrf	LCDDisplay@value& (0+255),b
  2362  00321C  6B9B               	clrf	LCDDisplay@delay& (0+255),b
  2363  00321E  EC94  F017         	call	_LCDDisplay	;wreg free
  2364  003222                     l9678:
  2365                           
  2366                           ; BSR set to: 0
  2367                           ;task.c: 82: {
  2368                           ;task.c: 83: uint8_t PressedButton1 = ButtonPressed();
  2369  003222  ECAD  F012         	call	_ButtonPressed	;wreg free
  2370  003226  6F9D               	movwf	freezer_feature@PressedButton1& (0+255),b
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;task.c: 84: if (PressedButton1 == 1)
  2374  003228  059D               	decf	freezer_feature@PressedButton1& (0+255),w,b
  2375  00322A  E101               	bnz	l9690
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;task.c: 85: {
  2379                           ;task.c: 86: return 0;
  2380  00322C  0C00               	retlw	0
  2381  00322E                     l9690:
  2382                           
  2383                           ; BSR set to: 0
  2384                           ;task.c: 89: else if (PressedButton1 == 2)
  2385  00322E  0E02               	movlw	2
  2386  003230  199D               	xorwf	freezer_feature@PressedButton1& (0+255),w,b
  2387  003232  E1F7               	bnz	l9678
  2388                           
  2389                           ; BSR set to: 0
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;task.c: 90: {
  2393                           ;task.c: 91: return 1;
  2394  003234  0C01               	retlw	1	;funcret
  2395  003236                     __end_of_freezer_feature:
  2396                           	opt stack 0
  2397                           tblptru	equ	0xFF8
  2398                           tblptrh	equ	0xFF7
  2399                           tblptrl	equ	0xFF6
  2400                           tablat	equ	0xFF5
  2401                           postinc0	equ	0xFEE
  2402                           wreg	equ	0xFE8
  2403                           postdec1	equ	0xFE5
  2404                           fsr1l	equ	0xFE1
  2405                           
  2406 ;; *************** function _TMR1_Initialize *****************
  2407 ;; Defined at:
  2408 ;;		line 175 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;		None               void
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : F/0
  2419 ;;		On exit  : F/0
  2420 ;;		Unchanged: F/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    9
  2429 ;; This function calls:
  2430 ;;		_TMR1_StartTimer
  2431 ;; This function is called by:
  2432 ;;		_main
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text2
  2437  0032D0                     __ptext2:
  2438                           	opt stack 0
  2439  0032D0                     _TMR1_Initialize:
  2440                           	opt stack 21
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;symbol.c: 179: T1CON = 0x38;
  2444                           
  2445                           ; BSR set to: 0
  2446                           ;incstack = 0
  2447  0032D0  0E38               	movlw	56
  2448  0032D2  6ECD               	movwf	4045,c	;volatile
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;symbol.c: 182: T1GCON = 0x00;
  2452  0032D4  6A9A               	clrf	3994,c	;volatile
  2453                           
  2454                           ; BSR set to: 0
  2455                           ;symbol.c: 185: TMR1H = 0x00;
  2456  0032D6  6ACF               	clrf	4047,c	;volatile
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;symbol.c: 188: TMR1L = 0x00;
  2460  0032D8  6ACE               	clrf	4046,c	;volatile
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;symbol.c: 191: timer1ReloadVal = TMR1;
  2464  0032DA  CFCE F04C          	movff	4046,_timer1ReloadVal	;volatile
  2465  0032DE  CFCF F04D          	movff	4047,_timer1ReloadVal+1	;volatile
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;symbol.c: 194: PIR1bits.TMR1IF = 0;
  2469  0032E2  909E               	bcf	3998,0,c	;volatile
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;symbol.c: 197: PIE1bits.TMR1IE = 1;
  2473  0032E4  809D               	bsf	3997,0,c	;volatile
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;symbol.c: 200: TMR1_StartTimer();
  2477  0032E6  EFDF  F019         	goto	_TMR1_StartTimer	;wreg free
  2478  0032EA                     __end_of_TMR1_Initialize:
  2479                           	opt stack 0
  2480                           tblptru	equ	0xFF8
  2481                           tblptrh	equ	0xFF7
  2482                           tblptrl	equ	0xFF6
  2483                           tablat	equ	0xFF5
  2484                           postinc0	equ	0xFEE
  2485                           wreg	equ	0xFE8
  2486                           postdec1	equ	0xFE5
  2487                           fsr1l	equ	0xFE1
  2488                           
  2489 ;; *************** function _TMR1_StartTimer *****************
  2490 ;; Defined at:
  2491 ;;		line 203 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;		None
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;		None
  2496 ;; Return value:  Size  Location     Type
  2497 ;;		None               void
  2498 ;; Registers used:
  2499 ;;		None
  2500 ;; Tracked objects:
  2501 ;;		On entry : F/0
  2502 ;;		On exit  : F/0
  2503 ;;		Unchanged: F/0
  2504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2509 ;;Total ram usage:        0 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:    8
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_TMR1_Initialize
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           	psect	text3
  2520  0033BE                     __ptext3:
  2521                           	opt stack 0
  2522  0033BE                     _TMR1_StartTimer:
  2523                           	opt stack 21
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;symbol.c: 205: T1CONbits.TMR1ON = 1;
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;incstack = 0
  2530  0033BE  80CD               	bsf	4045,0,c	;volatile
  2531                           
  2532                           ; BSR set to: 0
  2533  0033C0  0012               	return		;funcret
  2534  0033C2                     __end_of_TMR1_StartTimer:
  2535                           	opt stack 0
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           postinc0	equ	0xFEE
  2541                           wreg	equ	0xFE8
  2542                           postdec1	equ	0xFE5
  2543                           fsr1l	equ	0xFE1
  2544                           
  2545 ;; *************** function _SYSTEM_Initialize *****************
  2546 ;; Defined at:
  2547 ;;		line 46 in file "../src/system_config/miwikit_pic18f46j50_89xa/system.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;		None               void
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : F/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2565 ;;Total ram usage:        0 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; Hardware stack levels required when called:   11
  2568 ;; This function calls:
  2569 ;;		_LCD_Initialize
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text4
  2576  002248                     __ptext4:
  2577                           	opt stack 0
  2578  002248                     _SYSTEM_Initialize:
  2579                           	opt stack 19
  2580                           
  2581                           ;system.c: 51: OSCCON = 0x78;
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;incstack = 0
  2585  002248  0E78               	movlw	120
  2586  00224A  6ED3               	movwf	4051,c	;volatile
  2587                           
  2588                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
  2589  00224C  8C9B               	bsf	3995,6,c	;volatile
  2590                           
  2591                           ;system.c: 53: WDTCONbits.SWDTEN = 0;
  2592  00224E  90C0               	bcf	4032,0,c	;volatile
  2593                           
  2594                           ;system.c: 59: EECON2 = 0x55;
  2595  002250  0E55               	movlw	85
  2596  002252  6EA7               	movwf	4007,c	;volatile
  2597                           
  2598                           ;system.c: 60: EECON2 = 0xAA;
  2599  002254  0EAA               	movlw	170
  2600  002256  6EA7               	movwf	4007,c	;volatile
  2601                           
  2602                           ;system.c: 61: PPSCONbits.IOLOCK = 0;
  2603  002258  010E               	movlb	14	; () banked
  2604  00225A  91FF               	bcf	255,0,b	;volatile
  2605                           
  2606                           ;system.c: 63: RPINR1 = 17;
  2607  00225C  0E11               	movlw	17
  2608  00225E  6FE7               	movwf	231,b	;volatile
  2609                           
  2610                           ;system.c: 64: RPINR21 = 23;
  2611  002260  0E17               	movlw	23
  2612  002262  6FFB               	movwf	251,b	;volatile
  2613                           
  2614                           ;system.c: 65: RPOR21 = 10;
  2615  002264  0E0A               	movlw	10
  2616  002266  6FDB               	movwf	219,b	;volatile
  2617                           
  2618                           ;system.c: 66: RPOR19 = 9;
  2619  002268  0E09               	movlw	9
  2620  00226A  6FD9               	movwf	217,b	;volatile
  2621                           
  2622                           ;system.c: 69: EECON2 = 0x55;
  2623  00226C  0E55               	movlw	85
  2624  00226E  6EA7               	movwf	4007,c	;volatile
  2625                           
  2626                           ;system.c: 70: EECON2 = 0xAA;
  2627  002270  0EAA               	movlw	170
  2628  002272  6EA7               	movwf	4007,c	;volatile
  2629                           
  2630                           ; BSR set to: 14
  2631                           ;system.c: 71: PPSCONbits.IOLOCK = 1;
  2632  002274  81FF               	bsf	255,0,b	;volatile
  2633                           
  2634                           ;system.c: 76: ANCON0 = 0xFC;
  2635  002276  0EFC               	movlw	252
  2636  002278  010F               	movlb	15	; () banked
  2637  00227A  6F48               	movwf	72,b	;volatile
  2638                           
  2639                           ;system.c: 77: ANCON1 = 0x1F;
  2640  00227C  0E1F               	movlw	31
  2641  00227E  6F49               	movwf	73,b	;volatile
  2642                           
  2643                           ; BSR set to: 15
  2644                           ;system.c: 82: LATCbits.LATC2 = 0;
  2645  002280  948B               	bcf	3979,2,c	;volatile
  2646                           
  2647                           ; BSR set to: 15
  2648                           ;system.c: 83: LATAbits.LATA6 = 0;
  2649  002282  9C89               	bcf	3977,6,c	;volatile
  2650                           
  2651                           ; BSR set to: 15
  2652                           ;system.c: 84: LATAbits.LATA7 = 0;
  2653  002284  9E89               	bcf	3977,7,c	;volatile
  2654                           
  2655                           ; BSR set to: 15
  2656                           ;system.c: 85: TRISCbits.TRISC2 = 0;
  2657  002286  9494               	bcf	3988,2,c	;volatile
  2658                           
  2659                           ; BSR set to: 15
  2660                           ;system.c: 86: TRISAbits.TRISA6 = 0;
  2661  002288  9C92               	bcf	3986,6,c	;volatile
  2662                           
  2663                           ; BSR set to: 15
  2664                           ;system.c: 87: TRISAbits.TRISA7 = 0;
  2665  00228A  9E92               	bcf	3986,7,c	;volatile
  2666                           
  2667                           ; BSR set to: 15
  2668                           ;system.c: 89: TRISBbits.TRISB1 = 1;
  2669  00228C  8293               	bsf	3987,1,c	;volatile
  2670                           
  2671                           ; BSR set to: 15
  2672                           ;system.c: 90: TRISBbits.TRISB2 = 1;
  2673  00228E  8493               	bsf	3987,2,c	;volatile
  2674                           
  2675                           ; BSR set to: 15
  2676                           ;system.c: 92: INTCON2bits.RBPU = 0;
  2677  002290  9EF1               	bcf	intcon2,7,c	;volatile
  2678                           
  2679                           ; BSR set to: 15
  2680                           ;system.c: 97: TRISAbits.TRISA1 = 1;
  2681  002292  8292               	bsf	3986,1,c	;volatile
  2682                           
  2683                           ; BSR set to: 15
  2684                           ;system.c: 98: TRISAbits.TRISA0 = 1;
  2685  002294  8092               	bsf	3986,0,c	;volatile
  2686                           
  2687                           ; BSR set to: 15
  2688                           ;system.c: 107: LATAbits.LATA5 = 1;
  2689  002296  8A89               	bsf	3977,5,c	;volatile
  2690                           
  2691                           ; BSR set to: 15
  2692                           ;system.c: 108: LATDbits.LATD1 = 1;
  2693  002298  828C               	bsf	3980,1,c	;volatile
  2694                           
  2695                           ; BSR set to: 15
  2696                           ;system.c: 110: TRISAbits.TRISA5 = 0;
  2697  00229A  9A92               	bcf	3986,5,c	;volatile
  2698                           
  2699                           ; BSR set to: 15
  2700                           ;system.c: 111: TRISDbits.TRISD1 = 0;
  2701  00229C  9295               	bcf	3989,1,c	;volatile
  2702                           
  2703                           ; BSR set to: 15
  2704                           ;system.c: 113: TRISBbits.TRISB0 = 1;
  2705  00229E  8093               	bsf	3987,0,c	;volatile
  2706                           
  2707                           ; BSR set to: 15
  2708                           ;system.c: 114: TRISCbits.TRISC6 = 1;
  2709  0022A0  8C94               	bsf	3988,6,c	;volatile
  2710                           
  2711                           ; BSR set to: 15
  2712                           ;system.c: 117: INTCON2bits.INTEDG1 = 1;
  2713  0022A2  8AF1               	bsf	intcon2,5,c	;volatile
  2714                           
  2715                           ; BSR set to: 15
  2716                           ;system.c: 120: INTCON2bits.INTEDG0 = 1;
  2717  0022A4  8CF1               	bsf	intcon2,6,c	;volatile
  2718                           
  2719                           ; BSR set to: 15
  2720                           ;system.c: 122: INTCONbits.INT0IF = 0;
  2721  0022A6  92F2               	bcf	intcon,1,c	;volatile
  2722                           
  2723                           ; BSR set to: 15
  2724                           ;system.c: 123: INTCONbits.INT0IE = 1;
  2725  0022A8  88F2               	bsf	intcon,4,c	;volatile
  2726                           
  2727                           ; BSR set to: 15
  2728                           ;system.c: 124: INTCON3bits.INT1IF = 0;
  2729  0022AA  90F0               	bcf	intcon3,0,c	;volatile
  2730                           
  2731                           ; BSR set to: 15
  2732                           ;system.c: 125: INTCON3bits.INT1IE = 1;
  2733  0022AC  86F0               	bsf	intcon3,3,c	;volatile
  2734                           
  2735                           ; BSR set to: 15
  2736                           ;system.c: 129: TRISBbits.TRISB5 = 1;
  2737  0022AE  8A93               	bsf	3987,5,c	;volatile
  2738                           
  2739                           ; BSR set to: 15
  2740                           ;system.c: 130: TRISCbits.TRISC7 = 0;
  2741  0022B0  9E94               	bcf	3988,7,c	;volatile
  2742                           
  2743                           ; BSR set to: 15
  2744                           ;system.c: 131: TRISBbits.TRISB4 = 0;
  2745  0022B2  9893               	bcf	3987,4,c	;volatile
  2746                           
  2747                           ;system.c: 133: SSP1STAT = 0xC0;
  2748  0022B4  0EC0               	movlw	192
  2749  0022B6  6EC7               	movwf	4039,c	;volatile
  2750                           
  2751                           ;system.c: 134: SSP1CON1 = 0x21;
  2752  0022B8  0E21               	movlw	33
  2753  0022BA  6EC6               	movwf	4038,c	;volatile
  2754                           
  2755                           ; BSR set to: 15
  2756                           ;system.c: 136: LATDbits.LATD0 = 0;
  2757  0022BC  908C               	bcf	3980,0,c	;volatile
  2758                           
  2759                           ; BSR set to: 15
  2760                           ;system.c: 137: TRISDbits.TRISD0 = 1;
  2761  0022BE  8095               	bsf	3989,0,c	;volatile
  2762                           
  2763                           ; BSR set to: 15
  2764                           ;system.c: 143: LATDbits.LATD5 = 1;
  2765  0022C0  8A8C               	bsf	3980,5,c	;volatile
  2766                           
  2767                           ; BSR set to: 15
  2768                           ;system.c: 144: TRISDbits.TRISD5 = 0;
  2769  0022C2  9A95               	bcf	3989,5,c	;volatile
  2770                           
  2771                           ; BSR set to: 15
  2772                           ;system.c: 145: LATEbits.LATE2 = 1;
  2773  0022C4  848D               	bsf	3981,2,c	;volatile
  2774                           
  2775                           ; BSR set to: 15
  2776                           ;system.c: 146: TRISEbits.TRISE2 = 0;
  2777  0022C6  9496               	bcf	3990,2,c	;volatile
  2778                           
  2779                           ; BSR set to: 15
  2780                           ;system.c: 152: LATEbits.LATE1 = 0;
  2781  0022C8  928D               	bcf	3981,1,c	;volatile
  2782                           
  2783                           ; BSR set to: 15
  2784                           ;system.c: 153: LATDbits.LATD7 = 1;
  2785  0022CA  8E8C               	bsf	3980,7,c	;volatile
  2786                           
  2787                           ; BSR set to: 15
  2788                           ;system.c: 154: LATDbits.LATD3 = 0;
  2789  0022CC  968C               	bcf	3980,3,c	;volatile
  2790                           
  2791                           ; BSR set to: 15
  2792                           ;system.c: 155: LATEbits.LATE0 = 0;
  2793  0022CE  908D               	bcf	3981,0,c	;volatile
  2794                           
  2795                           ; BSR set to: 15
  2796                           ;system.c: 156: TRISEbits.TRISE1 = 0;
  2797  0022D0  9296               	bcf	3990,1,c	;volatile
  2798                           
  2799                           ; BSR set to: 15
  2800                           ;system.c: 157: TRISDbits.TRISD7 = 0;
  2801  0022D2  9E95               	bcf	3989,7,c	;volatile
  2802                           
  2803                           ; BSR set to: 15
  2804                           ;system.c: 158: TRISDbits.TRISD3 = 0;
  2805  0022D4  9695               	bcf	3989,3,c	;volatile
  2806                           
  2807                           ; BSR set to: 15
  2808                           ;system.c: 159: TRISEbits.TRISE0 = 0;
  2809  0022D6  9096               	bcf	3990,0,c	;volatile
  2810                           
  2811                           ; BSR set to: 15
  2812                           ;system.c: 164: TRISDbits.TRISD6 = 1;
  2813  0022D8  8C95               	bsf	3989,6,c	;volatile
  2814                           
  2815                           ; BSR set to: 15
  2816                           ;system.c: 165: TRISDbits.TRISD2 = 0;
  2817  0022DA  9495               	bcf	3989,2,c	;volatile
  2818                           
  2819                           ; BSR set to: 15
  2820                           ;system.c: 166: TRISDbits.TRISD4 = 0;
  2821  0022DC  9895               	bcf	3989,4,c	;volatile
  2822                           
  2823                           ; BSR set to: 15
  2824                           ;system.c: 168: SSP2STAT = 0x00;
  2825  0022DE  6A73               	clrf	3955,c	;volatile
  2826                           
  2827                           ;system.c: 169: SSP2CON1 = 0x31;
  2828  0022E0  0E31               	movlw	49
  2829  0022E2  6E72               	movwf	3954,c	;volatile
  2830                           
  2831                           ; BSR set to: 15
  2832                           ;system.c: 171: PIR3bits.SSP2IF = 0;
  2833  0022E4  9EA4               	bcf	4004,7,c	;volatile
  2834                           
  2835                           ; BSR set to: 15
  2836                           ;system.c: 173: LCD_Initialize();
  2837  0022E6  ECB6  F00E         	call	_LCD_Initialize	;wreg free
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;system.c: 178: INTCONbits.GIEH = 1;
  2841  0022EA  8EF2               	bsf	intcon,7,c	;volatile
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;system.c: 179: INTCONbits.GIEL = 1;
  2845  0022EC  8CF2               	bsf	intcon,6,c	;volatile
  2846                           
  2847                           ; BSR set to: 0
  2848  0022EE  0012               	return		;funcret
  2849  0022F0                     __end_of_SYSTEM_Initialize:
  2850                           	opt stack 0
  2851                           tblptru	equ	0xFF8
  2852                           tblptrh	equ	0xFF7
  2853                           tblptrl	equ	0xFF6
  2854                           tablat	equ	0xFF5
  2855                           intcon	equ	0xFF2
  2856                           intcon2	equ	0xFF1
  2857                           intcon3	equ	0xFF0
  2858                           postinc0	equ	0xFEE
  2859                           wreg	equ	0xFE8
  2860                           postdec1	equ	0xFE5
  2861                           fsr1l	equ	0xFE1
  2862                           
  2863 ;; *************** function _LCD_Initialize *****************
  2864 ;; Defined at:
  2865 ;;		line 54 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;		None               void
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : F/F
  2876 ;;		On exit  : F/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:   10
  2886 ;; This function calls:
  2887 ;;		_DELAY_ms
  2888 ;;		_LCD_WriteCmd
  2889 ;; This function is called by:
  2890 ;;		_SYSTEM_Initialize
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text5
  2895  001D6C                     __ptext5:
  2896                           	opt stack 0
  2897  001D6C                     _LCD_Initialize:
  2898                           	opt stack 19
  2899                           
  2900                           ; BSR set to: 15
  2901                           ;lcd.c: 56: LATDbits.LATD7 = 1;
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;incstack = 0
  2905  001D6C  8E8C               	bsf	3980,7,c	;volatile
  2906                           
  2907                           ;lcd.c: 57: LATEbits.LATE0 = 0;
  2908  001D6E  908D               	bcf	3981,0,c	;volatile
  2909                           
  2910                           ; BSR set to: 15
  2911                           ;lcd.c: 58: DELAY_ms(8);
  2912  001D70  0100               	movlb	0	; () banked
  2913  001D72  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2914  001D74  0E08               	movlw	8
  2915  001D76  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2916  001D78  ECFE  F00F         	call	_DELAY_ms	;wreg free
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;lcd.c: 59: LATEbits.LATE0 = 1;
  2920  001D7C  808D               	bsf	3981,0,c	;volatile
  2921                           
  2922                           ;lcd.c: 60: DELAY_ms(80);
  2923  001D7E  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2924  001D80  0E50               	movlw	80
  2925  001D82  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2926  001D84  ECFE  F00F         	call	_DELAY_ms	;wreg free
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;lcd.c: 61: LCD_WriteCmd(0x30);
  2930  001D88  0E30               	movlw	48
  2931  001D8A  ECAF  F019         	call	_LCD_WriteCmd
  2932                           
  2933                           ;lcd.c: 62: DELAY_ms(8);
  2934  001D8E  0100               	movlb	0	; () banked
  2935  001D90  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2936  001D92  0E08               	movlw	8
  2937  001D94  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2938  001D96  ECFE  F00F         	call	_DELAY_ms	;wreg free
  2939                           
  2940                           ;lcd.c: 63: LCD_WriteCmd(0x30);
  2941  001D9A  0E30               	movlw	48
  2942  001D9C  ECAF  F019         	call	_LCD_WriteCmd
  2943                           
  2944                           ;lcd.c: 64: DELAY_ms(1);
  2945  001DA0  0100               	movlb	0	; () banked
  2946  001DA2  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2947  001DA4  0E01               	movlw	1
  2948  001DA6  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2949  001DA8  ECFE  F00F         	call	_DELAY_ms	;wreg free
  2950                           
  2951                           ; BSR set to: 0
  2952                           ;lcd.c: 65: LCD_WriteCmd(0x30);
  2953  001DAC  0E30               	movlw	48
  2954  001DAE  ECAF  F019         	call	_LCD_WriteCmd
  2955                           
  2956                           ;lcd.c: 66: DELAY_ms(1);
  2957  001DB2  0100               	movlb	0	; () banked
  2958  001DB4  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2959  001DB6  0E01               	movlw	1
  2960  001DB8  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2961  001DBA  ECFE  F00F         	call	_DELAY_ms	;wreg free
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;lcd.c: 67: LCD_WriteCmd(0x39);
  2965  001DBE  0E39               	movlw	57
  2966  001DC0  ECAF  F019         	call	_LCD_WriteCmd
  2967                           
  2968                           ;lcd.c: 68: DELAY_ms(1);
  2969  001DC4  0100               	movlb	0	; () banked
  2970  001DC6  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2971  001DC8  0E01               	movlw	1
  2972  001DCA  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2973  001DCC  ECFE  F00F         	call	_DELAY_ms	;wreg free
  2974                           
  2975                           ;lcd.c: 69: LCD_WriteCmd(0x14);
  2976  001DD0  0E14               	movlw	20
  2977  001DD2  ECAF  F019         	call	_LCD_WriteCmd
  2978                           
  2979                           ;lcd.c: 70: DELAY_ms(1);
  2980  001DD6  0100               	movlb	0	; () banked
  2981  001DD8  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2982  001DDA  0E01               	movlw	1
  2983  001DDC  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2984  001DDE  ECFE  F00F         	call	_DELAY_ms	;wreg free
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;lcd.c: 71: LCD_WriteCmd(0x56);
  2988  001DE2  0E56               	movlw	86
  2989  001DE4  ECAF  F019         	call	_LCD_WriteCmd
  2990                           
  2991                           ;lcd.c: 72: DELAY_ms(1);
  2992  001DE8  0100               	movlb	0	; () banked
  2993  001DEA  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  2994  001DEC  0E01               	movlw	1
  2995  001DEE  6F69               	movwf	DELAY_ms@ms& (0+255),b
  2996  001DF0  ECFE  F00F         	call	_DELAY_ms	;wreg free
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;lcd.c: 73: LCD_WriteCmd(0x6D);
  3000  001DF4  0E6D               	movlw	109
  3001  001DF6  ECAF  F019         	call	_LCD_WriteCmd
  3002                           
  3003                           ;lcd.c: 74: DELAY_ms(1);
  3004  001DFA  0100               	movlb	0	; () banked
  3005  001DFC  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3006  001DFE  0E01               	movlw	1
  3007  001E00  6F69               	movwf	DELAY_ms@ms& (0+255),b
  3008  001E02  ECFE  F00F         	call	_DELAY_ms	;wreg free
  3009                           
  3010                           ;lcd.c: 75: LCD_WriteCmd(0x70);
  3011  001E06  0E70               	movlw	112
  3012  001E08  ECAF  F019         	call	_LCD_WriteCmd
  3013                           
  3014                           ;lcd.c: 76: DELAY_ms(1);
  3015  001E0C  0100               	movlb	0	; () banked
  3016  001E0E  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3017  001E10  0E01               	movlw	1
  3018  001E12  6F69               	movwf	DELAY_ms@ms& (0+255),b
  3019  001E14  ECFE  F00F         	call	_DELAY_ms	;wreg free
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;lcd.c: 77: LCD_WriteCmd(0x0E);
  3023  001E18  0E0E               	movlw	14
  3024  001E1A  ECAF  F019         	call	_LCD_WriteCmd
  3025                           
  3026                           ;lcd.c: 78: DELAY_ms(1);
  3027  001E1E  0100               	movlb	0	; () banked
  3028  001E20  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3029  001E22  0E01               	movlw	1
  3030  001E24  6F69               	movwf	DELAY_ms@ms& (0+255),b
  3031  001E26  ECFE  F00F         	call	_DELAY_ms	;wreg free
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;lcd.c: 79: LCD_WriteCmd(0x06);
  3035  001E2A  0E06               	movlw	6
  3036  001E2C  ECAF  F019         	call	_LCD_WriteCmd
  3037                           
  3038                           ;lcd.c: 80: DELAY_ms(1);
  3039  001E30  0100               	movlb	0	; () banked
  3040  001E32  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3041  001E34  0E01               	movlw	1
  3042  001E36  6F69               	movwf	DELAY_ms@ms& (0+255),b
  3043  001E38  ECFE  F00F         	call	_DELAY_ms	;wreg free
  3044                           
  3045                           ;lcd.c: 81: LCD_WriteCmd(0x01);
  3046  001E3C  0E01               	movlw	1
  3047  001E3E  ECAF  F019         	call	_LCD_WriteCmd
  3048                           
  3049                           ;lcd.c: 82: DELAY_ms(40);
  3050  001E42  0100               	movlb	0	; () banked
  3051  001E44  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  3052  001E46  0E28               	movlw	40
  3053  001E48  6F69               	movwf	DELAY_ms@ms& (0+255),b
  3054  001E4A  EFFE  F00F         	goto	_DELAY_ms	;wreg free
  3055  001E4E                     __end_of_LCD_Initialize:
  3056                           	opt stack 0
  3057                           tblptru	equ	0xFF8
  3058                           tblptrh	equ	0xFF7
  3059                           tblptrl	equ	0xFF6
  3060                           tablat	equ	0xFF5
  3061                           intcon	equ	0xFF2
  3062                           intcon2	equ	0xFF1
  3063                           intcon3	equ	0xFF0
  3064                           postinc0	equ	0xFEE
  3065                           wreg	equ	0xFE8
  3066                           postdec1	equ	0xFE5
  3067                           fsr1l	equ	0xFE1
  3068                           
  3069 ;; *************** function _Run_Demo *****************
  3070 ;; Defined at:
  3071 ;;		line 199 in file "../src/task.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;		None               void
  3078 ;; Registers used:
  3079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : F/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:   21
  3092 ;; This function calls:
  3093 ;;		_run_star_demo
  3094 ;; This function is called by:
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text6
  3100  0033C2                     __ptext6:
  3101                           	opt stack 0
  3102  0033C2                     _Run_Demo:
  3103                           	opt stack 9
  3104                           
  3105                           ;task.c: 202: run_star_demo();
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;incstack = 0
  3109  0033C2  EFB9  F003         	goto	_run_star_demo	;wreg free
  3110  0033C6                     __end_of_Run_Demo:
  3111                           	opt stack 0
  3112                           tblptru	equ	0xFF8
  3113                           tblptrh	equ	0xFF7
  3114                           tblptrl	equ	0xFF6
  3115                           tablat	equ	0xFF5
  3116                           intcon	equ	0xFF2
  3117                           intcon2	equ	0xFF1
  3118                           intcon3	equ	0xFF0
  3119                           postinc0	equ	0xFEE
  3120                           wreg	equ	0xFE8
  3121                           postdec1	equ	0xFE5
  3122                           fsr1l	equ	0xFE1
  3123                           
  3124 ;; *************** function _run_star_demo *****************
  3125 ;; Defined at:
  3126 ;;		line 67 in file "../src/star_demo.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  switch_val      1   10[BANK1 ] unsigned char 
  3131 ;;  sw_layer_ack    1    7[BANK1 ] unsigned char 
  3132 ;;  mac_ack_stat    1    0        unsigned char 
  3133 ;;  select_ed       1   11[BANK1 ] unsigned char 
  3134 ;;  update_ed       1    8[BANK1 ] unsigned char 
  3135 ;;  PressedButto    1    9[BANK1 ] unsigned char 
  3136 ;; Return value:  Size  Location     Type
  3137 ;;		None               void
  3138 ;; Registers used:
  3139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : F/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3146 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3148 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;Total ram usage:       12 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:   20
  3152 ;; This function calls:
  3153 ;;		_ButtonPressed
  3154 ;;		_CheckForData
  3155 ;;		_DELAY_ms
  3156 ;;		_DemoOutput_UpdateTxRx
  3157 ;;		_LCDDisplay
  3158 ;;		_LCD_BacklightOFF
  3159 ;;		_LCD_BacklightON
  3160 ;;		_LCD_Erase
  3161 ;;		_LCD_Update
  3162 ;;		_MiApp_DiscardMessage
  3163 ;;		_MiApp_EstablishConnection
  3164 ;;		_MiApp_MessageAvailable
  3165 ;;		_MiApp_TransceiverPowerState
  3166 ;;		_MiApp_UnicastConnection
  3167 ;;		_MiApp_UnicastStar
  3168 ;;		_MiWi_TickGet
  3169 ;;		_STAR_DEMO_OPTIONS_MESSAGE
  3170 ;;		_sprintf
  3171 ;; This function is called by:
  3172 ;;		_Run_Demo
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text7
  3177  000772                     __ptext7:
  3178                           	opt stack 0
  3179  000772                     _run_star_demo:
  3180                           	opt stack 9
  3181                           
  3182                           ;star_demo.c: 70: t1 = MiWi_TickGet();
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;incstack = 0
  3186  000772  EC31  F016         	call	_MiWi_TickGet	;wreg free
  3187  000776  C069  F189         	movff	?_MiWi_TickGet,_t1
  3188  00077A  C06A  F18A         	movff	?_MiWi_TickGet+1,_t1+1
  3189  00077E  C06B  F18B         	movff	?_MiWi_TickGet+2,_t1+2
  3190  000782  C06C  F18C         	movff	?_MiWi_TickGet+3,_t1+3
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;star_demo.c: 71: LCDDisplay((char *)"Sleeping!!", 0, 0);
  3194  000786  0EDB               	movlw	low STR_30
  3195  000788  6F98               	movwf	LCDDisplay@text& (0+255),b
  3196  00078A  0EFF               	movlw	high STR_30
  3197  00078C  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
  3198  00078E  6B9A               	clrf	LCDDisplay@value& (0+255),b
  3199  000790  6B9B               	clrf	LCDDisplay@delay& (0+255),b
  3200  000792  EC94  F017         	call	_LCDDisplay	;wreg free
  3201  000796                     l9404:
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;star_demo.c: 73: {
  3205                           ;star_demo.c: 75: t2 = MiWi_TickGet();
  3206  000796  EC31  F016         	call	_MiWi_TickGet	;wreg free
  3207  00079A  C069  F044         	movff	?_MiWi_TickGet,_t2
  3208  00079E  C06A  F045         	movff	?_MiWi_TickGet+1,_t2+1
  3209  0007A2  C06B  F046         	movff	?_MiWi_TickGet+2,_t2+2
  3210  0007A6  C06C  F047         	movff	?_MiWi_TickGet+3,_t2+3
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;star_demo.c: 77: if(((t2.Val - t1.Val) > (((uint32_t)(16000000)/32) * 20)))
  3214  0007AA  0101               	movlb	1	; () banked
  3215  0007AC  5189               	movf	_t1& (0+255),w,b
  3216  0007AE  5C44               	subwf	_t2,w,c
  3217  0007B0  6FE1               	movwf	??_run_star_demo& (0+255),b
  3218  0007B2  518A               	movf	(_t1+1)& (0+255),w,b
  3219  0007B4  5845               	subwfb	_t2+1,w,c
  3220  0007B6  6FE2               	movwf	(??_run_star_demo+1)& (0+255),b
  3221  0007B8  518B               	movf	(_t1+2)& (0+255),w,b
  3222  0007BA  5846               	subwfb	_t2+2,w,c
  3223  0007BC  6FE3               	movwf	(??_run_star_demo+2)& (0+255),b
  3224  0007BE  518C               	movf	(_t1+3)& (0+255),w,b
  3225  0007C0  5847               	subwfb	_t2+3,w,c
  3226  0007C2  6FE4               	movwf	(??_run_star_demo+3)& (0+255),b
  3227  0007C4  51E4               	movf	(??_run_star_demo+3)& (0+255),w,b
  3228  0007C6  E108               	bnz	u9100
  3229  0007C8  0E81               	movlw	129
  3230  0007CA  5DE1               	subwf	??_run_star_demo& (0+255),w,b
  3231  0007CC  0E96               	movlw	150
  3232  0007CE  59E2               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  3233  0007D0  0E98               	movlw	152
  3234  0007D2  59E3               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  3235  0007D4  E201 D25B          	bnc	l9564
  3236  0007D8                     u9100:
  3237                           
  3238                           ; BSR set to: 1
  3239                           ;star_demo.c: 78: {
  3240                           ;star_demo.c: 79: awake = 1;
  3241  0007D8  0E01               	movlw	1
  3242  0007DA  0100               	movlb	0	; () banked
  3243  0007DC  6FE7               	movwf	_awake& (0+255),b
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;star_demo.c: 81: LCD_BacklightON();
  3247  0007DE  ECE3  F019         	call	_LCD_BacklightON	;wreg free
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;star_demo.c: 84: MiApp_TransceiverPowerState(0x02);
  3251  0007E2  0E02               	movlw	2
  3252  0007E4  EC6F  F015         	call	_MiApp_TransceiverPowerState
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;star_demo.c: 85: LCDDisplay((char *)"Woke Up!!!", 0, 0);
  3256  0007E8  0ED0               	movlw	low STR_31
  3257  0007EA  6F98               	movwf	LCDDisplay@text& (0+255),b
  3258  0007EC  0EFF               	movlw	high STR_31
  3259  0007EE  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
  3260  0007F0  6B9A               	clrf	LCDDisplay@value& (0+255),b
  3261  0007F2  6B9B               	clrf	LCDDisplay@delay& (0+255),b
  3262  0007F4  EC94  F017         	call	_LCDDisplay	;wreg free
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;star_demo.c: 86: DELAY_ms(1000);
  3266  0007F8  0E03               	movlw	3
  3267  0007FA  6F6A               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3268  0007FC  0EE8               	movlw	232
  3269  0007FE  6F69               	movwf	DELAY_ms@ms& (0+255),b
  3270  000800  ECFE  F00F         	call	_DELAY_ms	;wreg free
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;star_demo.c: 87: STAR_DEMO_OPTIONS_MESSAGE (0);
  3274  000804  0E00               	movlw	0
  3275  000806  EC1B  F019         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;star_demo.c: 88: tt1 = MiWi_TickGet();
  3279  00080A  EC31  F016         	call	_MiWi_TickGet	;wreg free
  3280  00080E  C069  F18D         	movff	?_MiWi_TickGet,_tt1
  3281  000812  C06A  F18E         	movff	?_MiWi_TickGet+1,_tt1+1
  3282  000816  C06B  F18F         	movff	?_MiWi_TickGet+2,_tt1+2
  3283  00081A  C06C  F190         	movff	?_MiWi_TickGet+3,_tt1+3
  3284  00081E  D237               	goto	l9564
  3285  000820                     l9422:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;star_demo.c: 91: {
  3289                           ;star_demo.c: 92: tt2 = MiWi_TickGet();
  3290  000820  EC31  F016         	call	_MiWi_TickGet	;wreg free
  3291  000824  C069  F191         	movff	?_MiWi_TickGet,_tt2
  3292  000828  C06A  F192         	movff	?_MiWi_TickGet+1,_tt2+1
  3293  00082C  C06B  F193         	movff	?_MiWi_TickGet+2,_tt2+2
  3294  000830  C06C  F194         	movff	?_MiWi_TickGet+3,_tt2+3
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;star_demo.c: 93: if(((tt2.Val - tt1.Val) > (((uint32_t)(16000000)/32) * 10)))
  3298  000834  0101               	movlb	1	; () banked
  3299  000836  518D               	movf	_tt1& (0+255),w,b
  3300  000838  5D91               	subwf	_tt2& (0+255),w,b
  3301  00083A  6FE1               	movwf	??_run_star_demo& (0+255),b
  3302  00083C  518E               	movf	(_tt1+1)& (0+255),w,b
  3303  00083E  5992               	subwfb	(_tt2+1)& (0+255),w,b
  3304  000840  6FE2               	movwf	(??_run_star_demo+1)& (0+255),b
  3305  000842  518F               	movf	(_tt1+2)& (0+255),w,b
  3306  000844  5993               	subwfb	(_tt2+2)& (0+255),w,b
  3307  000846  6FE3               	movwf	(??_run_star_demo+2)& (0+255),b
  3308  000848  5190               	movf	(_tt1+3)& (0+255),w,b
  3309  00084A  5994               	subwfb	(_tt2+3)& (0+255),w,b
  3310  00084C  6FE4               	movwf	(??_run_star_demo+3)& (0+255),b
  3311  00084E  51E4               	movf	(??_run_star_demo+3)& (0+255),w,b
  3312  000850  E107               	bnz	u9110
  3313  000852  0E41               	movlw	65
  3314  000854  5DE1               	subwf	??_run_star_demo& (0+255),w,b
  3315  000856  0E4B               	movlw	75
  3316  000858  59E2               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  3317  00085A  0E4C               	movlw	76
  3318  00085C  59E3               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  3319  00085E  E30C               	bnc	l9430
  3320  000860                     u9110:
  3321                           
  3322                           ; BSR set to: 1
  3323                           ;star_demo.c: 94: {
  3324                           ;star_demo.c: 98: CheckForData();
  3325  000860  ECA6  F015         	call	_CheckForData	;wreg free
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;star_demo.c: 99: tt1 = MiWi_TickGet();
  3329  000864  EC31  F016         	call	_MiWi_TickGet	;wreg free
  3330  000868  C069  F18D         	movff	?_MiWi_TickGet,_tt1
  3331  00086C  C06A  F18E         	movff	?_MiWi_TickGet+1,_tt1+1
  3332  000870  C06B  F18F         	movff	?_MiWi_TickGet+2,_tt1+2
  3333  000874  C06C  F190         	movff	?_MiWi_TickGet+3,_tt1+3
  3334  000878                     l9430:
  3335                           
  3336                           ;star_demo.c: 100: }
  3337                           ;star_demo.c: 108: if( MiApp_MessageAvailable())
  3338  000878  ECD0  F019         	call	_MiApp_MessageAvailable	;wreg free
  3339  00087C  0900               	iorlw	0
  3340  00087E  E010               	bz	l9440
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;star_demo.c: 109: {
  3344                           ;star_demo.c: 115: DemoOutput_UpdateTxRx(TxNum, ++RxNum);
  3345  000880  2BE4               	incf	_RxNum& (0+255),f,b
  3346  000882  C0E4  F09A         	movff	_RxNum,DemoOutput_UpdateTxRx@RxNum
  3347  000886  51E6               	movf	_TxNum& (0+255),w,b
  3348  000888  ECC9  F019         	call	_DemoOutput_UpdateTxRx
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;star_demo.c: 116: DELAY_ms(2000);
  3352  00088C  0E07               	movlw	7
  3353  00088E  6F6A               	movwf	(DELAY_ms@ms+1)& (0+255),b
  3354  000890  0ED0               	movlw	208
  3355  000892  6F69               	movwf	DELAY_ms@ms& (0+255),b
  3356  000894  ECFE  F00F         	call	_DELAY_ms	;wreg free
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;star_demo.c: 118: LATAbits.LATA7 ^= 1;
  3360  000898  7E89               	btg	3977,7,c	;volatile
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;star_demo.c: 126: MiApp_DiscardMessage();
  3364  00089A  ECDA  F019         	call	_MiApp_DiscardMessage	;wreg free
  3365                           
  3366                           ;star_demo.c: 131: }
  3367  00089E  D1B2               	goto	l9540
  3368  0008A0                     l9440:
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;star_demo.c: 132: else
  3372                           ;star_demo.c: 133: {
  3373                           ;star_demo.c: 140: uint8_t PressedButton = ButtonPressed();
  3374  0008A0  ECAD  F012         	call	_ButtonPressed	;wreg free
  3375  0008A4  0101               	movlb	1	; () banked
  3376  0008A6  6FEA               	movwf	run_star_demo@PressedButton& (0+255),b
  3377                           
  3378                           ; BSR set to: 1
  3379                           ;star_demo.c: 141: if ( PressedButton == 1 || PressedButton == 2)
  3380  0008A8  05EA               	decf	run_star_demo@PressedButton& (0+255),w,b
  3381  0008AA  E004               	bz	l1329
  3382                           
  3383                           ; BSR set to: 1
  3384  0008AC  0E02               	movlw	2
  3385  0008AE  19EA               	xorwf	run_star_demo@PressedButton& (0+255),w,b
  3386  0008B0  E001 D1A8          	bnz	l9540
  3387  0008B4                     l1329:
  3388                           
  3389                           ; BSR set to: 1
  3390                           ;star_demo.c: 142: {
  3391                           ;star_demo.c: 144: uint8_t select_ed =0;
  3392  0008B4  6BEC               	clrf	run_star_demo@select_ed& (0+255),b
  3393                           
  3394                           ; BSR set to: 1
  3395                           ;star_demo.c: 145: bool update_ed = 1;
  3396  0008B6  0E01               	movlw	1
  3397  0008B8  6FE9               	movwf	run_star_demo@update_ed& (0+255),b
  3398                           
  3399                           ;star_demo.c: 146: while(update_ed == 1)
  3400  0008BA  D19D               	goto	l9536
  3401  0008BC                     l9448:
  3402                           
  3403                           ; BSR set to: 1
  3404                           ;star_demo.c: 147: {
  3405                           ;star_demo.c: 150: LCD_Erase();
  3406  0008BC  ECE2  F018         	call	_LCD_Erase	;wreg free
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;star_demo.c: 151: if (myConnectionIndex_in_PanCo == select_ed)
  3410  0008C0  0101               	movlb	1	; () banked
  3411  0008C2  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3412  0008C4  0100               	movlb	0	; () banked
  3413  0008C6  19F2               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3414  0008C8  E13F               	bnz	l9454
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;star_demo.c: 152: {
  3418                           ;star_demo.c: 153: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x-me",END_DEVICE
      +                          S_Short_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[
      +                          0],
  3419                           ;star_demo.c: 154: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3420  0008CA  0EB8               	movlw	low _LCDText
  3421  0008CC  6F75               	movwf	sprintf@sp& (0+255),b
  3422  0008CE  0E01               	movlw	high _LCDText
  3423  0008D0  6F76               	movwf	(sprintf@sp+1)& (0+255),b
  3424  0008D2  0ECC               	movlw	low STR_32
  3425  0008D4  6F77               	movwf	sprintf@f& (0+255),b
  3426  0008D6  0EFE               	movlw	high STR_32
  3427  0008D8  6F78               	movwf	(sprintf@f+1)& (0+255),b
  3428  0008DA  0101               	movlb	1	; () banked
  3429  0008DC  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3430  0008DE  0D04               	mullw	4
  3431  0008E0  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  3432  0008E2  24F3               	addwf	prodl,w,c
  3433  0008E4  6ED9               	movwf	fsr2l,c
  3434  0008E6  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  3435  0008E8  20F4               	addwfc	prodh,w,c
  3436  0008EA  6EDA               	movwf	fsr2h,c
  3437  0008EC  50DF               	movf	indf2,w,c
  3438  0008EE  0100               	movlb	0	; () banked
  3439  0008F0  6F79               	movwf	(?_sprintf+4)& (0+255),b
  3440  0008F2  6B7A               	clrf	(?_sprintf+5)& (0+255),b
  3441  0008F4  0101               	movlb	1	; () banked
  3442  0008F6  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3443  0008F8  0D04               	mullw	4
  3444  0008FA  0E37               	movlw	low _END_DEVICES_Short_Address
  3445  0008FC  24F3               	addwf	prodl,w,c
  3446  0008FE  6ED9               	movwf	fsr2l,c
  3447  000900  0E01               	movlw	high _END_DEVICES_Short_Address
  3448  000902  20F4               	addwfc	prodh,w,c
  3449  000904  6EDA               	movwf	fsr2h,c
  3450  000906  50DF               	movf	indf2,w,c
  3451  000908  0100               	movlb	0	; () banked
  3452  00090A  6F7B               	movwf	(?_sprintf+6)& (0+255),b
  3453  00090C  6B7C               	clrf	(?_sprintf+7)& (0+255),b
  3454  00090E  0101               	movlb	1	; () banked
  3455  000910  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3456  000912  0D04               	mullw	4
  3457  000914  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3458  000916  24F3               	addwf	prodl,w,c
  3459  000918  6ED9               	movwf	fsr2l,c
  3460  00091A  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3461  00091C  20F4               	addwfc	prodh,w,c
  3462  00091E  6EDA               	movwf	fsr2h,c
  3463  000920  50DF               	movf	indf2,w,c
  3464  000922  0100               	movlb	0	; () banked
  3465  000924  6F7D               	movwf	(?_sprintf+8)& (0+255),b
  3466  000926  6B7E               	clrf	(?_sprintf+9)& (0+255),b
  3467  000928  0101               	movlb	1	; () banked
  3468  00092A  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3469  00092C  0D04               	mullw	4
  3470  00092E  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3471  000930  24F3               	addwf	prodl,w,c
  3472  000932  6ED9               	movwf	fsr2l,c
  3473  000934  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3474  000936  20F4               	addwfc	prodh,w,c
  3475  000938  6EDA               	movwf	fsr2h,c
  3476  00093A  50DF               	movf	indf2,w,c
  3477  00093C  0100               	movlb	0	; () banked
  3478  00093E  6F7F               	movwf	(?_sprintf+10)& (0+255),b
  3479  000940  6B80               	clrf	(?_sprintf+11)& (0+255),b
  3480  000942  EC2C  F000         	call	_sprintf	;wreg free
  3481                           
  3482                           ;star_demo.c: 155: }
  3483  000946  D03E               	goto	l1333
  3484  000948                     l9454:
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;star_demo.c: 156: else
  3488                           ;star_demo.c: 157: {
  3489                           ;star_demo.c: 158: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3490                           ;star_demo.c: 159: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3491  000948  0EB8               	movlw	low _LCDText
  3492  00094A  6F75               	movwf	sprintf@sp& (0+255),b
  3493  00094C  0E01               	movlw	high _LCDText
  3494  00094E  6F76               	movwf	(sprintf@sp+1)& (0+255),b
  3495  000950  0EE5               	movlw	low STR_33
  3496  000952  6F77               	movwf	sprintf@f& (0+255),b
  3497  000954  0EFE               	movlw	high STR_33
  3498  000956  6F78               	movwf	(sprintf@f+1)& (0+255),b
  3499  000958  0101               	movlb	1	; () banked
  3500  00095A  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3501  00095C  0D04               	mullw	4
  3502  00095E  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  3503  000960  24F3               	addwf	prodl,w,c
  3504  000962  6ED9               	movwf	fsr2l,c
  3505  000964  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  3506  000966  20F4               	addwfc	prodh,w,c
  3507  000968  6EDA               	movwf	fsr2h,c
  3508  00096A  50DF               	movf	indf2,w,c
  3509  00096C  0100               	movlb	0	; () banked
  3510  00096E  6F79               	movwf	(?_sprintf+4)& (0+255),b
  3511  000970  6B7A               	clrf	(?_sprintf+5)& (0+255),b
  3512  000972  0101               	movlb	1	; () banked
  3513  000974  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3514  000976  0D04               	mullw	4
  3515  000978  0E37               	movlw	low _END_DEVICES_Short_Address
  3516  00097A  24F3               	addwf	prodl,w,c
  3517  00097C  6ED9               	movwf	fsr2l,c
  3518  00097E  0E01               	movlw	high _END_DEVICES_Short_Address
  3519  000980  20F4               	addwfc	prodh,w,c
  3520  000982  6EDA               	movwf	fsr2h,c
  3521  000984  50DF               	movf	indf2,w,c
  3522  000986  0100               	movlb	0	; () banked
  3523  000988  6F7B               	movwf	(?_sprintf+6)& (0+255),b
  3524  00098A  6B7C               	clrf	(?_sprintf+7)& (0+255),b
  3525  00098C  0101               	movlb	1	; () banked
  3526  00098E  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3527  000990  0D04               	mullw	4
  3528  000992  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3529  000994  24F3               	addwf	prodl,w,c
  3530  000996  6ED9               	movwf	fsr2l,c
  3531  000998  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3532  00099A  20F4               	addwfc	prodh,w,c
  3533  00099C  6EDA               	movwf	fsr2h,c
  3534  00099E  50DF               	movf	indf2,w,c
  3535  0009A0  0100               	movlb	0	; () banked
  3536  0009A2  6F7D               	movwf	(?_sprintf+8)& (0+255),b
  3537  0009A4  6B7E               	clrf	(?_sprintf+9)& (0+255),b
  3538  0009A6  0101               	movlb	1	; () banked
  3539  0009A8  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3540  0009AA  0D04               	mullw	4
  3541  0009AC  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3542  0009AE  24F3               	addwf	prodl,w,c
  3543  0009B0  6ED9               	movwf	fsr2l,c
  3544  0009B2  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3545  0009B4  20F4               	addwfc	prodh,w,c
  3546  0009B6  6EDA               	movwf	fsr2h,c
  3547  0009B8  50DF               	movf	indf2,w,c
  3548  0009BA  0100               	movlb	0	; () banked
  3549  0009BC  6F7F               	movwf	(?_sprintf+10)& (0+255),b
  3550  0009BE  6B80               	clrf	(?_sprintf+11)& (0+255),b
  3551  0009C0  EC2C  F000         	call	_sprintf	;wreg free
  3552  0009C4                     l1333:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;star_demo.c: 160: }
  3556                           ;star_demo.c: 161: sprintf((char *)LCDText, (char*)"RB0:%02d-%02x%02x%02x",END_DEVICES_S
      +                          hort_Address[select_ed].connection_slot,END_DEVICES_Short_Address[select_ed].Address[0],
  3557                           ;star_demo.c: 162: END_DEVICES_Short_Address[select_ed].Address[1],END_DEVICES_Short_Add
      +                          ress[select_ed].Address[2] );
  3558  0009C4  0EB8               	movlw	low _LCDText
  3559  0009C6  6F75               	movwf	sprintf@sp& (0+255),b
  3560  0009C8  0E01               	movlw	high _LCDText
  3561  0009CA  6F76               	movwf	(sprintf@sp+1)& (0+255),b
  3562  0009CC  0EE5               	movlw	low STR_33
  3563  0009CE  6F77               	movwf	sprintf@f& (0+255),b
  3564  0009D0  0EFE               	movlw	high STR_33
  3565  0009D2  6F78               	movwf	(sprintf@f+1)& (0+255),b
  3566  0009D4  0101               	movlb	1	; () banked
  3567  0009D6  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3568  0009D8  0D04               	mullw	4
  3569  0009DA  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  3570  0009DC  24F3               	addwf	prodl,w,c
  3571  0009DE  6ED9               	movwf	fsr2l,c
  3572  0009E0  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  3573  0009E2  20F4               	addwfc	prodh,w,c
  3574  0009E4  6EDA               	movwf	fsr2h,c
  3575  0009E6  50DF               	movf	indf2,w,c
  3576  0009E8  0100               	movlb	0	; () banked
  3577  0009EA  6F79               	movwf	(?_sprintf+4)& (0+255),b
  3578  0009EC  6B7A               	clrf	(?_sprintf+5)& (0+255),b
  3579  0009EE  0101               	movlb	1	; () banked
  3580  0009F0  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3581  0009F2  0D04               	mullw	4
  3582  0009F4  0E37               	movlw	low _END_DEVICES_Short_Address
  3583  0009F6  24F3               	addwf	prodl,w,c
  3584  0009F8  6ED9               	movwf	fsr2l,c
  3585  0009FA  0E01               	movlw	high _END_DEVICES_Short_Address
  3586  0009FC  20F4               	addwfc	prodh,w,c
  3587  0009FE  6EDA               	movwf	fsr2h,c
  3588  000A00  50DF               	movf	indf2,w,c
  3589  000A02  0100               	movlb	0	; () banked
  3590  000A04  6F7B               	movwf	(?_sprintf+6)& (0+255),b
  3591  000A06  6B7C               	clrf	(?_sprintf+7)& (0+255),b
  3592  000A08  0101               	movlb	1	; () banked
  3593  000A0A  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3594  000A0C  0D04               	mullw	4
  3595  000A0E  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3596  000A10  24F3               	addwf	prodl,w,c
  3597  000A12  6ED9               	movwf	fsr2l,c
  3598  000A14  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3599  000A16  20F4               	addwfc	prodh,w,c
  3600  000A18  6EDA               	movwf	fsr2h,c
  3601  000A1A  50DF               	movf	indf2,w,c
  3602  000A1C  0100               	movlb	0	; () banked
  3603  000A1E  6F7D               	movwf	(?_sprintf+8)& (0+255),b
  3604  000A20  6B7E               	clrf	(?_sprintf+9)& (0+255),b
  3605  000A22  0101               	movlb	1	; () banked
  3606  000A24  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3607  000A26  0D04               	mullw	4
  3608  000A28  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3609  000A2A  24F3               	addwf	prodl,w,c
  3610  000A2C  6ED9               	movwf	fsr2l,c
  3611  000A2E  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3612  000A30  20F4               	addwfc	prodh,w,c
  3613  000A32  6EDA               	movwf	fsr2h,c
  3614  000A34  50DF               	movf	indf2,w,c
  3615  000A36  0100               	movlb	0	; () banked
  3616  000A38  6F7F               	movwf	(?_sprintf+10)& (0+255),b
  3617  000A3A  6B80               	clrf	(?_sprintf+11)& (0+255),b
  3618  000A3C  EC2C  F000         	call	_sprintf	;wreg free
  3619                           
  3620                           ;star_demo.c: 163: sprintf((char *)&(LCDText[16]), (char*)"RB2: Change node");
  3621  000A40  0EC8               	movlw	low (_LCDText+16)
  3622  000A42  6F75               	movwf	sprintf@sp& (0+255),b
  3623  000A44  0E01               	movlw	high (_LCDText+16)
  3624  000A46  6F76               	movwf	(sprintf@sp+1)& (0+255),b
  3625  000A48  0E5A               	movlw	low STR_35
  3626  000A4A  6F77               	movwf	sprintf@f& (0+255),b
  3627  000A4C  0EFF               	movlw	high STR_35
  3628  000A4E  6F78               	movwf	(sprintf@f+1)& (0+255),b
  3629  000A50  EC2C  F000         	call	_sprintf	;wreg free
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;star_demo.c: 164: LCD_Update();
  3633  000A54  EC07  F014         	call	_LCD_Update	;wreg free
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;star_demo.c: 165: chk_sel_status = 1;
  3637  000A58  0E01               	movlw	1
  3638  000A5A  6FF4               	movwf	_chk_sel_status& (0+255),b
  3639                           
  3640                           ;star_demo.c: 166: bool sw_layer_ack_status , mac_ack_status;
  3641                           ;star_demo.c: 167: while(chk_sel_status)
  3642  000A5C  D0C8               	goto	l9534
  3643  000A5E                     l9460:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;star_demo.c: 168: {
  3647                           ;star_demo.c: 169: uint8_t switch_val = ButtonPressed();
  3648  000A5E  ECAD  F012         	call	_ButtonPressed	;wreg free
  3649  000A62  0101               	movlb	1	; () banked
  3650  000A64  6FEB               	movwf	run_star_demo@switch_val& (0+255),b
  3651                           
  3652                           ; BSR set to: 1
  3653                           ;star_demo.c: 170: if(switch_val == 1)
  3654  000A66  05EB               	decf	run_star_demo@switch_val& (0+255),w,b
  3655  000A68  E001 D0A2          	bnz	l9524
  3656                           
  3657                           ; BSR set to: 1
  3658                           ;star_demo.c: 171: {
  3659                           ;star_demo.c: 172: update_ed = 0;
  3660  000A6C  6BE9               	clrf	run_star_demo@update_ed& (0+255),b
  3661                           
  3662                           ;star_demo.c: 173: chk_sel_status = 0;
  3663  000A6E  0100               	movlb	0	; () banked
  3664  000A70  6BF4               	clrf	_chk_sel_status& (0+255),b
  3665                           
  3666                           ;star_demo.c: 174: update_ed = 0;
  3667  000A72  0101               	movlb	1	; () banked
  3668  000A74  6BE9               	clrf	run_star_demo@update_ed& (0+255),b
  3669                           
  3670                           ; BSR set to: 1
  3671                           ;star_demo.c: 179: if (myConnectionIndex_in_PanCo == select_ed)
  3672  000A76  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3673  000A78  0100               	movlb	0	; () banked
  3674  000A7A  19F2               	xorwf	_myConnectionIndex_in_PanCo& (0+255),w,b
  3675  000A7C  E11F               	bnz	l1337
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;star_demo.c: 180: {
  3679                           ;star_demo.c: 181: {TxData = 0;};
  3680  000A7E  6BE5               	clrf	_TxData& (0+255),b
  3681                           
  3682                           ;star_demo.c: 182: for (i = 0 ; i < 21 ; i++)
  3683  000A80  6BEA               	clrf	_i& (0+255),b
  3684  000A82                     l9470:
  3685                           
  3686                           ; BSR set to: 0
  3687  000A82  0E14               	movlw	20
  3688  000A84  65EA               	cpfsgt	_i& (0+255),b
  3689  000A86  D001               	goto	l9474
  3690  000A88  D012               	goto	l9482
  3691  000A8A                     l9474:
  3692                           
  3693                           ; BSR set to: 0
  3694                           ;star_demo.c: 183: {
  3695                           ;star_demo.c: 184: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i];
  3696  000A8A  0E71               	movlw	low _MiWi
  3697  000A8C  25EA               	addwf	_i& (0+255),w,b
  3698  000A8E  6EF6               	movwf	tblptrl,c
  3699  000A90  6AF7               	clrf	tblptrh,c
  3700  000A92  0EFC               	movlw	high _MiWi
  3701  000A94  22F7               	addwfc	tblptrh,f,c
  3702  000A96                     	if	0	;There are less than 3 active tblptr bytes
  3703  000A96                     	endif
  3704  000A96  0E95               	movlw	low _TxBuffer
  3705  000A98  25E5               	addwf	_TxData& (0+255),w,b
  3706  000A9A  6ED9               	movwf	fsr2l,c
  3707  000A9C  6ADA               	clrf	fsr2h,c
  3708  000A9E  0E01               	movlw	high _TxBuffer
  3709  000AA0  22DA               	addwfc	fsr2h,f,c
  3710  000AA2  0008               	tblrd		*
  3711  000AA4  CFF5 FFDF          	movff	tablat,indf2
  3712                           
  3713                           ; BSR set to: 0
  3714  000AA8  2BE5               	incf	_TxData& (0+255),f,b
  3715                           
  3716                           ; BSR set to: 0
  3717  000AAA  2BEA               	incf	_i& (0+255),f,b
  3718  000AAC  D7EA               	goto	l9470
  3719  000AAE                     l9482:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;star_demo.c: 185: }
  3723                           ;star_demo.c: 192: mac_ack_status = MiApp_UnicastConnection (0, 0);
  3724  000AAE  0E00               	movlw	0
  3725  000AB0  6BA4               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  3726  000AB2  EC0D  F018         	call	_MiApp_UnicastConnection
  3727  000AB6                     l9484:
  3728                           
  3729                           ;star_demo.c: 194: TxNum++;
  3730  000AB6  0100               	movlb	0	; () banked
  3731  000AB8  2BE6               	incf	_TxNum& (0+255),f,b
  3732                           
  3733                           ;star_demo.c: 195: }
  3734  000ABA  D099               	goto	l9534
  3735  000ABC                     l1337:
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;star_demo.c: 196: else
  3739                           ;star_demo.c: 197: {
  3740                           ;star_demo.c: 202: {TxData = 0;};
  3741  000ABC  6BE5               	clrf	_TxData& (0+255),b
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;star_demo.c: 203: TxBuffer[TxData++] = 0xCC;
  3745  000ABE  0E95               	movlw	low _TxBuffer
  3746  000AC0  25E5               	addwf	_TxData& (0+255),w,b
  3747  000AC2  6ED9               	movwf	fsr2l,c
  3748  000AC4  6ADA               	clrf	fsr2h,c
  3749  000AC6  0E01               	movlw	high _TxBuffer
  3750  000AC8  22DA               	addwfc	fsr2h,f,c
  3751  000ACA  0ECC               	movlw	204
  3752  000ACC  6EDF               	movwf	indf2,c
  3753                           
  3754                           ; BSR set to: 0
  3755  000ACE  2BE5               	incf	_TxData& (0+255),f,b
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;star_demo.c: 204: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[0];
  3759  000AD0  0101               	movlb	1	; () banked
  3760  000AD2  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3761  000AD4  0D04               	mullw	4
  3762  000AD6  0E37               	movlw	low _END_DEVICES_Short_Address
  3763  000AD8  24F3               	addwf	prodl,w,c
  3764  000ADA  6ED9               	movwf	fsr2l,c
  3765  000ADC  0E01               	movlw	high _END_DEVICES_Short_Address
  3766  000ADE  20F4               	addwfc	prodh,w,c
  3767  000AE0  6EDA               	movwf	fsr2h,c
  3768  000AE2  0E95               	movlw	low _TxBuffer
  3769  000AE4  0100               	movlb	0	; () banked
  3770  000AE6  25E5               	addwf	_TxData& (0+255),w,b
  3771  000AE8  6EE1               	movwf	fsr1l,c
  3772  000AEA  6AE2               	clrf	fsr1h,c
  3773  000AEC  0E01               	movlw	high _TxBuffer
  3774  000AEE  22E2               	addwfc	fsr1h,f,c
  3775  000AF0  CFDF FFE7          	movff	indf2,indf1
  3776                           
  3777                           ; BSR set to: 0
  3778  000AF4  2BE5               	incf	_TxData& (0+255),f,b
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;star_demo.c: 205: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[1];
  3782  000AF6  0101               	movlb	1	; () banked
  3783  000AF8  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3784  000AFA  0D04               	mullw	4
  3785  000AFC  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  3786  000AFE  24F3               	addwf	prodl,w,c
  3787  000B00  6ED9               	movwf	fsr2l,c
  3788  000B02  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  3789  000B04  20F4               	addwfc	prodh,w,c
  3790  000B06  6EDA               	movwf	fsr2h,c
  3791  000B08  0E95               	movlw	low _TxBuffer
  3792  000B0A  0100               	movlb	0	; () banked
  3793  000B0C  25E5               	addwf	_TxData& (0+255),w,b
  3794  000B0E  6EE1               	movwf	fsr1l,c
  3795  000B10  6AE2               	clrf	fsr1h,c
  3796  000B12  0E01               	movlw	high _TxBuffer
  3797  000B14  22E2               	addwfc	fsr1h,f,c
  3798  000B16  CFDF FFE7          	movff	indf2,indf1
  3799                           
  3800                           ; BSR set to: 0
  3801  000B1A  2BE5               	incf	_TxData& (0+255),f,b
  3802                           
  3803                           ; BSR set to: 0
  3804                           ;star_demo.c: 206: TxBuffer[TxData++] = END_DEVICES_Short_Address[select_ed].Address[2];
  3805  000B1C  0101               	movlb	1	; () banked
  3806  000B1E  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3807  000B20  0D04               	mullw	4
  3808  000B22  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  3809  000B24  24F3               	addwf	prodl,w,c
  3810  000B26  6ED9               	movwf	fsr2l,c
  3811  000B28  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  3812  000B2A  20F4               	addwfc	prodh,w,c
  3813  000B2C  6EDA               	movwf	fsr2h,c
  3814  000B2E  0E95               	movlw	low _TxBuffer
  3815  000B30  0100               	movlb	0	; () banked
  3816  000B32  25E5               	addwf	_TxData& (0+255),w,b
  3817  000B34  6EE1               	movwf	fsr1l,c
  3818  000B36  6AE2               	clrf	fsr1h,c
  3819  000B38  0E01               	movlw	high _TxBuffer
  3820  000B3A  22E2               	addwfc	fsr1h,f,c
  3821  000B3C  CFDF FFE7          	movff	indf2,indf1
  3822                           
  3823                           ; BSR set to: 0
  3824  000B40  2BE5               	incf	_TxData& (0+255),f,b
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;star_demo.c: 207: for (i = 4 ; i < 25 ; i++)
  3828  000B42  0E04               	movlw	4
  3829  000B44  6FEA               	movwf	_i& (0+255),b
  3830  000B46                     l9504:
  3831                           
  3832                           ; BSR set to: 0
  3833  000B46  0E18               	movlw	24
  3834  000B48  65EA               	cpfsgt	_i& (0+255),b
  3835  000B4A  D001               	goto	l9508
  3836  000B4C  D020               	goto	l9516
  3837  000B4E                     l9508:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;star_demo.c: 208: {
  3841                           ;star_demo.c: 209: TxBuffer[TxData++] = MiWi[(TxSynCount%6)][i-4];
  3842  000B4E  0EFC               	movlw	252
  3843  000B50  0101               	movlb	1	; () banked
  3844  000B52  6FE1               	movwf	??_run_star_demo& (0+255),b
  3845  000B54  69E2               	setf	(??_run_star_demo+1)& (0+255),b
  3846  000B56  0100               	movlb	0	; () banked
  3847  000B58  51EA               	movf	_i& (0+255),w,b
  3848  000B5A  0101               	movlb	1	; () banked
  3849  000B5C  6FE3               	movwf	(??_run_star_demo+2)& (0+255),b
  3850  000B5E  6BE4               	clrf	(??_run_star_demo+3)& (0+255),b
  3851  000B60  51E1               	movf	??_run_star_demo& (0+255),w,b
  3852  000B62  27E3               	addwf	(??_run_star_demo+2)& (0+255),f,b
  3853  000B64  51E2               	movf	(??_run_star_demo+1)& (0+255),w,b
  3854  000B66  23E4               	addwfc	(??_run_star_demo+3)& (0+255),f,b
  3855  000B68  0E71               	movlw	low _MiWi
  3856  000B6A  25E3               	addwf	(??_run_star_demo+2)& (0+255),w,b
  3857  000B6C  6EF6               	movwf	tblptrl,c
  3858  000B6E  0EFC               	movlw	high _MiWi
  3859  000B70  21E4               	addwfc	(??_run_star_demo+3)& (0+255),w,b
  3860  000B72  6EF7               	movwf	tblptrh,c
  3861  000B74                     	if	0	;There are less than 3 active tblptr bytes
  3862  000B74                     	endif
  3863  000B74  0E95               	movlw	low _TxBuffer
  3864  000B76  0100               	movlb	0	; () banked
  3865  000B78  25E5               	addwf	_TxData& (0+255),w,b
  3866  000B7A  6ED9               	movwf	fsr2l,c
  3867  000B7C  6ADA               	clrf	fsr2h,c
  3868  000B7E  0E01               	movlw	high _TxBuffer
  3869  000B80  22DA               	addwfc	fsr2h,f,c
  3870  000B82  0008               	tblrd		*
  3871  000B84  CFF5 FFDF          	movff	tablat,indf2
  3872                           
  3873                           ; BSR set to: 0
  3874  000B88  2BE5               	incf	_TxData& (0+255),f,b
  3875                           
  3876                           ; BSR set to: 0
  3877  000B8A  2BEA               	incf	_i& (0+255),f,b
  3878  000B8C  D7DC               	goto	l9504
  3879  000B8E                     l9516:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;star_demo.c: 210: }
  3883                           ;star_demo.c: 214: sw_layer_ack_status = MiApp_UnicastStar (0);
  3884  000B8E  0E00               	movlw	0
  3885  000B90  EC47  F014         	call	_MiApp_UnicastStar
  3886  000B94  0101               	movlb	1	; () banked
  3887  000B96  6FE8               	movwf	run_star_demo@sw_layer_ack_status& (0+255),b
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;star_demo.c: 219: if (sw_layer_ack_status)
  3891  000B98  51E8               	movf	run_star_demo@sw_layer_ack_status& (0+255),w,b
  3892  000B9A  E18D               	bnz	l9484
  3893                           
  3894                           ; BSR set to: 1
  3895                           ;star_demo.c: 223: else
  3896                           ;star_demo.c: 224: {
  3897                           ;star_demo.c: 225: LCDDisplay((char *)"Data_Sending_Fail!!", 0, 0);
  3898  000B9C  0E11               	movlw	low STR_36
  3899  000B9E  0100               	movlb	0	; () banked
  3900  000BA0  6F98               	movwf	LCDDisplay@text& (0+255),b
  3901  000BA2  0EFF               	movlw	high STR_36
  3902  000BA4  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
  3903  000BA6  6B9A               	clrf	LCDDisplay@value& (0+255),b
  3904  000BA8  6B9B               	clrf	LCDDisplay@delay& (0+255),b
  3905  000BAA  EC94  F017         	call	_LCDDisplay	;wreg free
  3906  000BAE  D01F               	goto	l9534
  3907  000BB0                     l9524:
  3908                           
  3909                           ; BSR set to: 1
  3910                           ;star_demo.c: 234: else if(switch_val == 2)
  3911  000BB0  0E02               	movlw	2
  3912  000BB2  19EB               	xorwf	run_star_demo@switch_val& (0+255),w,b
  3913  000BB4  E11C               	bnz	l9534
  3914                           
  3915                           ; BSR set to: 1
  3916                           ;star_demo.c: 235: {
  3917                           ;star_demo.c: 236: if (select_ed > end_nodes-1)
  3918  000BB6  51EC               	movf	run_star_demo@select_ed& (0+255),w,b
  3919  000BB8  6FE1               	movwf	??_run_star_demo& (0+255),b
  3920  000BBA  6BE2               	clrf	(??_run_star_demo+1)& (0+255),b
  3921  000BBC  69E3               	setf	(??_run_star_demo+2)& (0+255),b
  3922  000BBE  69E4               	setf	(??_run_star_demo+3)& (0+255),b
  3923  000BC0  0100               	movlb	0	; () banked
  3924  000BC2  51E8               	movf	_end_nodes& (0+255),w,b
  3925  000BC4  0101               	movlb	1	; () banked
  3926  000BC6  6FE5               	movwf	(??_run_star_demo+4)& (0+255),b
  3927  000BC8  6BE6               	clrf	(??_run_star_demo+5)& (0+255),b
  3928  000BCA  51E3               	movf	(??_run_star_demo+2)& (0+255),w,b
  3929  000BCC  27E5               	addwf	(??_run_star_demo+4)& (0+255),f,b
  3930  000BCE  51E4               	movf	(??_run_star_demo+3)& (0+255),w,b
  3931  000BD0  23E6               	addwfc	(??_run_star_demo+5)& (0+255),f,b
  3932  000BD2  51E1               	movf	??_run_star_demo& (0+255),w,b
  3933  000BD4  5DE5               	subwf	(??_run_star_demo+4)& (0+255),w,b
  3934  000BD6  51E6               	movf	(??_run_star_demo+5)& (0+255),w,b
  3935  000BD8  0A80               	xorlw	128
  3936  000BDA  6FE7               	movwf	(??_run_star_demo+6)& (0+255),b
  3937  000BDC  51E2               	movf	(??_run_star_demo+1)& (0+255),w,b
  3938  000BDE  0A80               	xorlw	128
  3939  000BE0  59E7               	subwfb	(??_run_star_demo+6)& (0+255),w,b
  3940  000BE2  E202               	bc	l9530
  3941                           
  3942                           ; BSR set to: 1
  3943                           ;star_demo.c: 237: {
  3944                           ;star_demo.c: 238: select_ed = 0;
  3945  000BE4  6BEC               	clrf	run_star_demo@select_ed& (0+255),b
  3946                           
  3947                           ;star_demo.c: 239: }
  3948  000BE6  D001               	goto	l9532
  3949  000BE8                     l9530:
  3950                           
  3951                           ; BSR set to: 1
  3952                           ;star_demo.c: 240: else
  3953                           ;star_demo.c: 241: {
  3954                           ;star_demo.c: 242: select_ed = select_ed+1;
  3955  000BE8  2BEC               	incf	run_star_demo@select_ed& (0+255),f,b
  3956  000BEA                     l9532:
  3957                           
  3958                           ; BSR set to: 1
  3959                           ;star_demo.c: 243: }
  3960                           ;star_demo.c: 244: chk_sel_status = 0;
  3961  000BEA  0100               	movlb	0	; () banked
  3962  000BEC  6BF4               	clrf	_chk_sel_status& (0+255),b
  3963  000BEE                     l9534:
  3964  000BEE  0100               	movlb	0	; () banked
  3965  000BF0  51F4               	movf	_chk_sel_status& (0+255),w,b
  3966  000BF2  E001 D734          	bnz	l9460
  3967  000BF6                     l9536:
  3968  000BF6  0101               	movlb	1	; () banked
  3969  000BF8  05E9               	decf	run_star_demo@update_ed& (0+255),w,b
  3970  000BFA  E101 D65F          	bz	l9448
  3971                           
  3972                           ; BSR set to: 1
  3973                           ;star_demo.c: 246: }
  3974                           ;star_demo.c: 247: }
  3975                           ;star_demo.c: 249: }
  3976                           ;star_demo.c: 250: STAR_DEMO_OPTIONS_MESSAGE (0);
  3977  000BFE  0E00               	movlw	0
  3978  000C00  EC1B  F019         	call	_STAR_DEMO_OPTIONS_MESSAGE
  3979  000C04                     l9540:
  3980                           
  3981                           ;star_demo.c: 251: }
  3982                           ;star_demo.c: 252: }
  3983                           ;star_demo.c: 254: t3 = MiWi_TickGet();
  3984  000C04  EC31  F016         	call	_MiWi_TickGet	;wreg free
  3985  000C08  C069  F048         	movff	?_MiWi_TickGet,_t3
  3986  000C0C  C06A  F049         	movff	?_MiWi_TickGet+1,_t3+1
  3987  000C10  C06B  F04A         	movff	?_MiWi_TickGet+2,_t3+2
  3988  000C14  C06C  F04B         	movff	?_MiWi_TickGet+3,_t3+3
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;star_demo.c: 255: if(((t3.Val - t2.Val) > (((uint32_t)(16000000)/32) * 40)))
  3992  000C18  5044               	movf	_t2,w,c
  3993  000C1A  5C48               	subwf	_t3,w,c
  3994  000C1C  0101               	movlb	1	; () banked
  3995  000C1E  6FE1               	movwf	??_run_star_demo& (0+255),b
  3996  000C20  5045               	movf	_t2+1,w,c
  3997  000C22  5849               	subwfb	_t3+1,w,c
  3998  000C24  6FE2               	movwf	(??_run_star_demo+1)& (0+255),b
  3999  000C26  5046               	movf	_t2+2,w,c
  4000  000C28  584A               	subwfb	_t3+2,w,c
  4001  000C2A  6FE3               	movwf	(??_run_star_demo+2)& (0+255),b
  4002  000C2C  5047               	movf	_t2+3,w,c
  4003  000C2E  584B               	subwfb	_t3+3,w,c
  4004  000C30  6FE4               	movwf	(??_run_star_demo+3)& (0+255),b
  4005  000C32  05E1               	decf	??_run_star_demo& (0+255),w,b
  4006  000C34  0E2D               	movlw	45
  4007  000C36  59E2               	subwfb	(??_run_star_demo+1)& (0+255),w,b
  4008  000C38  0E31               	movlw	49
  4009  000C3A  59E3               	subwfb	(??_run_star_demo+2)& (0+255),w,b
  4010  000C3C  0E01               	movlw	1
  4011  000C3E  59E4               	subwfb	(??_run_star_demo+3)& (0+255),w,b
  4012  000C40  E31D               	bnc	l9556
  4013                           
  4014                           ; BSR set to: 1
  4015                           ;star_demo.c: 256: {
  4016                           ;star_demo.c: 257: awake = 0;
  4017  000C42  0100               	movlb	0	; () banked
  4018  000C44  6BE7               	clrf	_awake& (0+255),b
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;star_demo.c: 259: LCD_BacklightOFF();
  4022  000C46  ECE5  F019         	call	_LCD_BacklightOFF	;wreg free
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;star_demo.c: 261: MiApp_TransceiverPowerState(0x00);
  4026  000C4A  0E00               	movlw	0
  4027  000C4C  EC6F  F015         	call	_MiApp_TransceiverPowerState
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;star_demo.c: 262: LCDDisplay((char *)"Sleeping!!!", 0, 0);
  4031  000C50  0EB8               	movlw	low STR_37
  4032  000C52  6F98               	movwf	LCDDisplay@text& (0+255),b
  4033  000C54  0EFF               	movlw	high STR_37
  4034  000C56  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
  4035  000C58  6B9A               	clrf	LCDDisplay@value& (0+255),b
  4036  000C5A  6B9B               	clrf	LCDDisplay@delay& (0+255),b
  4037  000C5C  EC94  F017         	call	_LCDDisplay	;wreg free
  4038                           
  4039                           ; BSR set to: 0
  4040                           ;star_demo.c: 263: DELAY_ms(1000);
  4041  000C60  0E03               	movlw	3
  4042  000C62  6F6A               	movwf	(DELAY_ms@ms+1)& (0+255),b
  4043  000C64  0EE8               	movlw	232
  4044  000C66  6F69               	movwf	DELAY_ms@ms& (0+255),b
  4045  000C68  ECFE  F00F         	call	_DELAY_ms	;wreg free
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;star_demo.c: 264: t1 = t3;
  4049  000C6C  C048  F189         	movff	_t3,_t1
  4050  000C70  C049  F18A         	movff	_t3+1,_t1+1
  4051  000C74  C04A  F18B         	movff	_t3+2,_t1+2
  4052  000C78  C04B  F18C         	movff	_t3+3,_t1+3
  4053  000C7C                     l9556:
  4054                           
  4055                           ;star_demo.c: 266: }
  4056                           ;star_demo.c: 268: if (lost_connection && !role)
  4057  000C7C  0100               	movlb	0	; () banked
  4058  000C7E  51EB               	movf	_lost_connection& (0+255),w,b
  4059  000C80  E006               	bz	l9564
  4060                           
  4061                           ; BSR set to: 0
  4062  000C82  51F6               	movf	_role& (0+255),w,b
  4063  000C84  E104               	bnz	l9564
  4064                           
  4065                           ; BSR set to: 0
  4066                           ;star_demo.c: 269: {
  4067                           ;star_demo.c: 270: MiApp_EstablishConnection(0xFF, 0x00);
  4068  000C86  6BB9               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  4069  000C88  EC87  F00C         	call	_MiApp_EstablishConnection
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;star_demo.c: 271: lost_connection = 0;
  4073  000C8C  6BEB               	clrf	_lost_connection& (0+255),b
  4074  000C8E                     l9564:
  4075  000C8E  0100               	movlb	0	; () banked
  4076  000C90  51E7               	movf	_awake& (0+255),w,b
  4077  000C92  E101 D580          	bz	l9404
  4078  000C96  D5C4               	goto	l9422
  4079  000C98                     __end_of_run_star_demo:
  4080                           	opt stack 0
  4081                           tblptru	equ	0xFF8
  4082                           tblptrh	equ	0xFF7
  4083                           tblptrl	equ	0xFF6
  4084                           tablat	equ	0xFF5
  4085                           prodh	equ	0xFF4
  4086                           prodl	equ	0xFF3
  4087                           intcon	equ	0xFF2
  4088                           intcon2	equ	0xFF1
  4089                           intcon3	equ	0xFF0
  4090                           postinc0	equ	0xFEE
  4091                           wreg	equ	0xFE8
  4092                           indf1	equ	0xFE7
  4093                           postdec1	equ	0xFE5
  4094                           fsr1h	equ	0xFE2
  4095                           fsr1l	equ	0xFE1
  4096                           indf2	equ	0xFDF
  4097                           fsr2h	equ	0xFDA
  4098                           fsr2l	equ	0xFD9
  4099                           
  4100 ;; *************** function _STAR_DEMO_OPTIONS_MESSAGE *****************
  4101 ;; Defined at:
  4102 ;;		line 212 in file "../src/demo_ouput.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  NetworkRole     1    wreg     unsigned char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  NetworkRole     1   61[BANK0 ] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;		None               void
  4109 ;; Registers used:
  4110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : E/0
  4113 ;;		On exit  : F/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4117 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4119 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4120 ;;Total ram usage:        1 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:   12
  4123 ;; This function calls:
  4124 ;;		_LCDDisplay
  4125 ;; This function is called by:
  4126 ;;		_run_star_demo
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text8
  4131  003236                     __ptext8:
  4132                           	opt stack 0
  4133  003236                     _STAR_DEMO_OPTIONS_MESSAGE:
  4134                           	opt stack 16
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;incstack = 0
  4138                           ;STAR_DEMO_OPTIONS_MESSAGE@NetworkRole stored from wreg
  4139  003236  0100               	movlb	0	; () banked
  4140  003238  6F9D               	movwf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),b
  4141                           
  4142                           ;demo_ouput.c: 214: if (NetworkRole)
  4143  00323A  519D               	movf	STAR_DEMO_OPTIONS_MESSAGE@NetworkRole& (0+255),w,b
  4144  00323C  E004               	bz	l9214
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;demo_ouput.c: 215: {
  4148                           ;demo_ouput.c: 219: LCDDisplay((char *)"PC :SW1 or SW2  to BroadCast msg", 0, 0);
  4149  00323E  0EBF               	movlw	low STR_25
  4150  003240  6F98               	movwf	LCDDisplay@text& (0+255),b
  4151  003242  0EFD               	movlw	high STR_25
  4152  003244  D003               	goto	L9
  4153  003246                     l9214:
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;demo_ouput.c: 222: else
  4157                           ;demo_ouput.c: 223: {
  4158                           ;demo_ouput.c: 227: LCDDisplay((char *)"SW1 : Unicast   SW2 : Next Node", 0, 0);
  4159  003246  0E00               	movlw	low STR_26
  4160  003248  6F98               	movwf	LCDDisplay@text& (0+255),b
  4161  00324A  0EFE               	movlw	high STR_26
  4162  00324C                     L9:
  4163  00324C  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
  4164  00324E  6B9A               	clrf	LCDDisplay@value& (0+255),b
  4165  003250  6B9B               	clrf	LCDDisplay@delay& (0+255),b
  4166  003252  EF94  F017         	goto	_LCDDisplay	;wreg free
  4167  003256                     __end_of_STAR_DEMO_OPTIONS_MESSAGE:
  4168                           	opt stack 0
  4169                           tblptru	equ	0xFF8
  4170                           tblptrh	equ	0xFF7
  4171                           tblptrl	equ	0xFF6
  4172                           tablat	equ	0xFF5
  4173                           prodh	equ	0xFF4
  4174                           prodl	equ	0xFF3
  4175                           intcon	equ	0xFF2
  4176                           intcon2	equ	0xFF1
  4177                           intcon3	equ	0xFF0
  4178                           postinc0	equ	0xFEE
  4179                           wreg	equ	0xFE8
  4180                           indf1	equ	0xFE7
  4181                           postdec1	equ	0xFE5
  4182                           fsr1h	equ	0xFE2
  4183                           fsr1l	equ	0xFE1
  4184                           indf2	equ	0xFDF
  4185                           fsr2h	equ	0xFDA
  4186                           fsr2l	equ	0xFD9
  4187                           
  4188 ;; *************** function _MiApp_UnicastStar *****************
  4189 ;; Defined at:
  4190 ;;		line 1974 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  SecEn           1    wreg     unsigned char 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  SecEn           1  101[BANK0 ] unsigned char 
  4195 ;;  t2              4   97[BANK0 ] struct _MIWI_TICK
  4196 ;;  t1              4   93[BANK0 ] struct _MIWI_TICK
  4197 ;;  status          1    0        unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      unsigned char 
  4200 ;; Registers used:
  4201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : F/0
  4204 ;;		On exit  : F/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4208 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4209 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4210 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4211 ;;Total ram usage:       13 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:   19
  4214 ;; This function calls:
  4215 ;;		_MiApp_MessageAvailable
  4216 ;;		_MiWi_TickGet
  4217 ;;		_SendPacket
  4218 ;; This function is called by:
  4219 ;;		_run_star_demo
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text9
  4224  00288E                     __ptext9:
  4225                           	opt stack 0
  4226  00288E                     _MiApp_UnicastStar:
  4227                           	opt stack 9
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;incstack = 0
  4231                           ;MiApp_UnicastStar@SecEn stored from wreg
  4232  00288E  6FC5               	movwf	MiApp_UnicastStar@SecEn& (0+255),b
  4233                           
  4234                           ;miwi_p2p.c: 1976: rec_ack = 0;
  4235  002890  0100               	movlb	0	; () banked
  4236  002892  6BEC               	clrf	_rec_ack& (0+255),b
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;miwi_p2p.c: 1977: bool status;
  4240                           ;miwi_p2p.c: 1980: status = SendPacket(0, ConnectionTable[0].Address, 1, SecEn);
  4241  002894  0E04               	movlw	low (_ConnectionTable+4)
  4242  002896  6F96               	movwf	SendPacket@DestinationAddress& (0+255),b
  4243  002898  0E02               	movlw	high (_ConnectionTable+4)
  4244  00289A  6F97               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  4245  00289C  0E01               	movlw	1
  4246  00289E  6F98               	movwf	SendPacket@isCommand& (0+255),b
  4247  0028A0  C0C5  F099         	movff	MiApp_UnicastStar@SecEn,SendPacket@SecurityEnabled
  4248  0028A4  0E00               	movlw	0
  4249  0028A6  EC78  F011         	call	_SendPacket
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;miwi_p2p.c: 1987: MIWI_TICK t1, t2;
  4253                           ;miwi_p2p.c: 1989: t1 = MiWi_TickGet();
  4254  0028AA  EC31  F016         	call	_MiWi_TickGet	;wreg free
  4255  0028AE  C069  F0BD         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t1
  4256  0028B2  C06A  F0BE         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t1+1
  4257  0028B6  C06B  F0BF         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t1+2
  4258  0028BA  C06C  F0C0         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t1+3
  4259                           
  4260                           ;miwi_p2p.c: 1990: while (!rec_ack)
  4261  0028BE  D022               	goto	l9118
  4262  0028C0                     l9108:
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;miwi_p2p.c: 1991: {
  4266                           ;miwi_p2p.c: 1992: t2 = MiWi_TickGet();
  4267  0028C0  EC31  F016         	call	_MiWi_TickGet	;wreg free
  4268  0028C4  C069  F0C1         	movff	?_MiWi_TickGet,MiApp_UnicastStar@t2
  4269  0028C8  C06A  F0C2         	movff	?_MiWi_TickGet+1,MiApp_UnicastStar@t2+1
  4270  0028CC  C06B  F0C3         	movff	?_MiWi_TickGet+2,MiApp_UnicastStar@t2+2
  4271  0028D0  C06C  F0C4         	movff	?_MiWi_TickGet+3,MiApp_UnicastStar@t2+3
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;miwi_p2p.c: 1993: MiApp_MessageAvailable();
  4275  0028D4  ECD0  F019         	call	_MiApp_MessageAvailable	;wreg free
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;miwi_p2p.c: 1996: if((t2.Val - t1.Val) > ((((uint32_t)(16000000)/32)/10)))
  4279  0028D8  51BD               	movf	MiApp_UnicastStar@t1& (0+255),w,b
  4280  0028DA  5DC1               	subwf	MiApp_UnicastStar@t2& (0+255),w,b
  4281  0028DC  6FB9               	movwf	??_MiApp_UnicastStar& (0+255),b
  4282  0028DE  51BE               	movf	(MiApp_UnicastStar@t1+1)& (0+255),w,b
  4283  0028E0  59C2               	subwfb	(MiApp_UnicastStar@t2+1)& (0+255),w,b
  4284  0028E2  6FBA               	movwf	(??_MiApp_UnicastStar+1)& (0+255),b
  4285  0028E4  51BF               	movf	(MiApp_UnicastStar@t1+2)& (0+255),w,b
  4286  0028E6  59C3               	subwfb	(MiApp_UnicastStar@t2+2)& (0+255),w,b
  4287  0028E8  6FBB               	movwf	(??_MiApp_UnicastStar+2)& (0+255),b
  4288  0028EA  51C0               	movf	(MiApp_UnicastStar@t1+3)& (0+255),w,b
  4289  0028EC  59C4               	subwfb	(MiApp_UnicastStar@t2+3)& (0+255),w,b
  4290  0028EE  6FBC               	movwf	(??_MiApp_UnicastStar+3)& (0+255),b
  4291  0028F0  51BC               	movf	(??_MiApp_UnicastStar+3)& (0+255),w,b
  4292  0028F2  11BB               	iorwf	(??_MiApp_UnicastStar+2)& (0+255),w,b
  4293  0028F4  E105               	bnz	u8840
  4294  0028F6  0E51               	movlw	81
  4295  0028F8  5DB9               	subwf	??_MiApp_UnicastStar& (0+255),w,b
  4296  0028FA  0EC3               	movlw	195
  4297  0028FC  59BA               	subwfb	(??_MiApp_UnicastStar+1)& (0+255),w,b
  4298  0028FE  E302               	bnc	l9118
  4299  002900                     u8840:
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;miwi_p2p.c: 1997: {
  4303                           ;miwi_p2p.c: 1998: if (rec_ack != 1)
  4304  002900  05EC               	decf	_rec_ack& (0+255),w,b
  4305  002902  E102               	bnz	l9120
  4306  002904                     l9118:
  4307                           
  4308                           ; BSR set to: 0
  4309  002904  51EC               	movf	_rec_ack& (0+255),w,b
  4310  002906  E0DC               	bz	l9108
  4311  002908                     l9120:
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;miwi_p2p.c: 2001: }
  4315                           ;miwi_p2p.c: 2002: }
  4316                           ;miwi_p2p.c: 2003: }
  4317                           ;miwi_p2p.c: 2006: return rec_ack;
  4318  002908  51EC               	movf	_rec_ack& (0+255),w,b
  4319                           
  4320                           ; BSR set to: 0
  4321  00290A  0012               	return		;funcret
  4322  00290C                     __end_of_MiApp_UnicastStar:
  4323                           	opt stack 0
  4324                           tblptru	equ	0xFF8
  4325                           tblptrh	equ	0xFF7
  4326                           tblptrl	equ	0xFF6
  4327                           tablat	equ	0xFF5
  4328                           prodh	equ	0xFF4
  4329                           prodl	equ	0xFF3
  4330                           intcon	equ	0xFF2
  4331                           intcon2	equ	0xFF1
  4332                           intcon3	equ	0xFF0
  4333                           postinc0	equ	0xFEE
  4334                           wreg	equ	0xFE8
  4335                           indf1	equ	0xFE7
  4336                           postdec1	equ	0xFE5
  4337                           fsr1h	equ	0xFE2
  4338                           fsr1l	equ	0xFE1
  4339                           indf2	equ	0xFDF
  4340                           fsr2h	equ	0xFDA
  4341                           fsr2l	equ	0xFD9
  4342                           
  4343 ;; *************** function _MiApp_TransceiverPowerState *****************
  4344 ;; Defined at:
  4345 ;;		line 1321 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  Mode            1    wreg     unsigned char 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  Mode            1   89[BANK0 ] unsigned char 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      unsigned char 
  4352 ;; Registers used:
  4353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : F/0
  4356 ;;		On exit  : F/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4362 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4363 ;;Total ram usage:        1 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:   18
  4366 ;; This function calls:
  4367 ;;		_CheckForData
  4368 ;;		_EEPROM_Write
  4369 ;;		_MiMAC_PowerState
  4370 ;;		_P2PTasks
  4371 ;; This function is called by:
  4372 ;;		_run_star_demo
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376                           	psect	text10
  4377  002ADE                     __ptext10:
  4378                           	opt stack 0
  4379  002ADE                     _MiApp_TransceiverPowerState:
  4380                           	opt stack 10
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;incstack = 0
  4384                           ;MiApp_TransceiverPowerState@Mode stored from wreg
  4385  002ADE  6FB9               	movwf	MiApp_TransceiverPowerState@Mode& (0+255),b
  4386                           
  4387                           ;miwi_p2p.c: 1325: switch(Mode)
  4388  002AE0  D02D               	goto	l9100
  4389  002AE2                     l529:
  4390                           
  4391                           ; BSR set to: 0
  4392                           ;miwi_p2p.c: 1328: {
  4393                           ;miwi_p2p.c: 1330: if( P2PStatus.bits.SaveConnection )
  4394  002AE2  A3DF               	btfss	_P2PStatus& (0+255),1,b	;volatile
  4395  002AE4  D00C               	goto	l9078
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;miwi_p2p.c: 1331: {
  4399                           ;miwi_p2p.c: 1332: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)10 * sizeof(C
      +                          ONNECTION_ENTRY));
  4400  002AE6  0E00               	movlw	low _ConnectionTable
  4401  002AE8  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  4402  002AEA  0E02               	movlw	high _ConnectionTable
  4403  002AEC  6F6B               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  4404  002AEE  0E04               	movlw	4
  4405  002AF0  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  4406  002AF2  0E8C               	movlw	140
  4407  002AF4  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  4408  002AF6  EC83  F013         	call	_EEPROM_Write	;wreg free
  4409                           
  4410                           ;miwi_p2p.c: 1333: P2PStatus.bits.SaveConnection = 0;
  4411  002AFA  0100               	movlb	0	; () banked
  4412  002AFC  93DF               	bcf	_P2PStatus& (0+255),1,b	;volatile
  4413  002AFE                     l9078:
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;miwi_p2p.c: 1334: }
  4417                           ;miwi_p2p.c: 1336: if( MiMAC_PowerState(0x00) )
  4418  002AFE  0E00               	movlw	0
  4419  002B00  EC05  F016         	call	_MiMAC_PowerState
  4420  002B04  0900               	iorlw	0
  4421  002B06  A4D8               	btfss	status,2,c
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;miwi_p2p.c: 1337: {
  4425                           ;miwi_p2p.c: 1338: P2PStatus.bits.Sleeping = 1;
  4426  002B08  81DF               	bsf	_P2PStatus& (0+255),0,b	;volatile
  4427                           
  4428                           ;miwi_p2p.c: 1339: return 0x00;
  4429                           ;	Return value of _MiApp_TransceiverPowerState is never used
  4430  002B0A  0012               	return	
  4431  002B0C                     l9082:
  4432                           
  4433                           ; BSR set to: 0
  4434                           ;miwi_p2p.c: 1345: {
  4435                           ;miwi_p2p.c: 1346: if( MiMAC_PowerState(0xFF) )
  4436  002B0C  0EFF               	movlw	255
  4437  002B0E  EC05  F016         	call	_MiMAC_PowerState
  4438  002B12  0900               	iorlw	0
  4439  002B14  A4D8               	btfss	status,2,c
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;miwi_p2p.c: 1347: {
  4443                           ;miwi_p2p.c: 1348: P2PStatus.bits.Sleeping = 0;
  4444  002B16  91DF               	bcf	_P2PStatus& (0+255),0,b	;volatile
  4445                           
  4446                           ;miwi_p2p.c: 1349: return 0x00;
  4447                           ;	Return value of _MiApp_TransceiverPowerState is never used
  4448  002B18  0012               	return	
  4449  002B1A                     l9086:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;miwi_p2p.c: 1355: {
  4453                           ;miwi_p2p.c: 1356: if( 0 == MiMAC_PowerState(0xFF) )
  4454  002B1A  0EFF               	movlw	255
  4455  002B1C  EC05  F016         	call	_MiMAC_PowerState
  4456  002B20  0900               	iorlw	0
  4457  002B22  E101               	bnz	l536
  4458  002B24  0012               	return	
  4459  002B26                     l536:
  4460                           
  4461                           ; BSR set to: 0
  4462                           ;miwi_p2p.c: 1359: }
  4463                           ;miwi_p2p.c: 1360: P2PStatus.bits.Sleeping = 0;
  4464  002B26  91DF               	bcf	_P2PStatus& (0+255),0,b	;volatile
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;miwi_p2p.c: 1361: if( CheckForData() == 0 )
  4468  002B28  ECA6  F015         	call	_CheckForData	;wreg free
  4469  002B2C  0900               	iorlw	0
  4470  002B2E  E103               	bnz	l9096
  4471  002B30  0012               	return	
  4472  002B32                     l9094:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;miwi_p2p.c: 1366: {
  4476                           ;miwi_p2p.c: 1367: P2PTasks();
  4477  002B32  EC4C  F006         	call	_P2PTasks	;wreg free
  4478  002B36                     l9096:
  4479                           
  4480                           ; BSR set to: 0
  4481  002B36  A5DF               	btfss	_P2PStatus& (0+255),2,b	;volatile
  4482  002B38  0012               	return	
  4483  002B3A  D7FB               	goto	l9094
  4484  002B3C                     l9100:
  4485  002B3C  0100               	movlb	0	; () banked
  4486  002B3E  51B9               	movf	MiApp_TransceiverPowerState@Mode& (0+255),w,b
  4487                           
  4488                           ; Switch size 1, requested type "speed"
  4489                           ; Number of cases is 3, Range of values is 0 to 2
  4490                           ; switch strategies available:
  4491                           ; Name         Instructions Cycles
  4492                           ; simple_byte           10     6 (average)
  4493                           ;	Chosen strategy is simple_byte
  4494  002B40  E0D0               	bz	l529
  4495  002B42  0A01               	xorlw	1	; case 1
  4496  002B44  E0E3               	bz	l9082
  4497  002B46  0A03               	xorlw	3	; case 2
  4498  002B48  E0E8               	bz	l9086
  4499                           
  4500                           ; BSR set to: 0
  4501  002B4A  0012               	return		;funcret
  4502  002B4C                     __end_of_MiApp_TransceiverPowerState:
  4503                           	opt stack 0
  4504                           tblptru	equ	0xFF8
  4505                           tblptrh	equ	0xFF7
  4506                           tblptrl	equ	0xFF6
  4507                           tablat	equ	0xFF5
  4508                           prodh	equ	0xFF4
  4509                           prodl	equ	0xFF3
  4510                           intcon	equ	0xFF2
  4511                           intcon2	equ	0xFF1
  4512                           intcon3	equ	0xFF0
  4513                           postinc0	equ	0xFEE
  4514                           wreg	equ	0xFE8
  4515                           indf1	equ	0xFE7
  4516                           postdec1	equ	0xFE5
  4517                           fsr1h	equ	0xFE2
  4518                           fsr1l	equ	0xFE1
  4519                           indf2	equ	0xFDF
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           status	equ	0xFD8
  4523                           
  4524 ;; *************** function _MiMAC_PowerState *****************
  4525 ;; Defined at:
  4526 ;;		line 1167 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  PowerState      1    wreg     unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  PowerState      1   23[BANK0 ] unsigned char 
  4531 ;;  i               1   24[BANK0 ] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      unsigned char 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : F/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4542 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4545 ;;Total ram usage:        2 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:   11
  4548 ;; This function calls:
  4549 ;;		_DELAY_ms
  4550 ;;		_SetRFMode
  4551 ;; This function is called by:
  4552 ;;		_MiApp_TransceiverPowerState
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text11
  4557  002C0A                     __ptext11:
  4558                           	opt stack 0
  4559  002C0A                     _MiMAC_PowerState:
  4560                           	opt stack 16
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;incstack = 0
  4564                           ;MiMAC_PowerState@PowerState stored from wreg
  4565  002C0A  0100               	movlb	0	; () banked
  4566  002C0C  6F77               	movwf	MiMAC_PowerState@PowerState& (0+255),b
  4567                           
  4568                           ;drv_mrf_miwi_89xa.c: 1169: switch(PowerState)
  4569  002C0E  D022               	goto	l8958
  4570  002C10                     l8926:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;drv_mrf_miwi_89xa.c: 1172: {
  4574                           ;drv_mrf_miwi_89xa.c: 1173: SetRFMode(0x00);
  4575  002C10  0E00               	movlw	0
  4576  002C12  ECC2  F014         	call	_SetRFMode
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;drv_mrf_miwi_89xa.c: 1175: INTCONbits.INT0IE = 0;
  4580  002C16  98F2               	bcf	intcon,4,c	;volatile
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;drv_mrf_miwi_89xa.c: 1177: INTCON3bits.INT1IE = 0;
  4584  002C18  96F0               	bcf	intcon3,3,c	;volatile
  4585                           
  4586                           ;drv_mrf_miwi_89xa.c: 1178: }
  4587                           ;drv_mrf_miwi_89xa.c: 1179: break;
  4588  002C1A  0C01               	retlw	1
  4589  002C1C                     l8932:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;drv_mrf_miwi_89xa.c: 1182: {
  4593                           ;drv_mrf_miwi_89xa.c: 1183: uint8_t i;
  4594                           ;drv_mrf_miwi_89xa.c: 1185: SetRFMode(0x20);
  4595  002C1C  0E20               	movlw	32
  4596  002C1E  ECC2  F014         	call	_SetRFMode
  4597                           
  4598                           ;drv_mrf_miwi_89xa.c: 1186: SetRFMode(0x60);
  4599  002C22  0E60               	movlw	96
  4600  002C24  ECC2  F014         	call	_SetRFMode
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;drv_mrf_miwi_89xa.c: 1188: INTCONbits.INT0IE = 1;
  4604  002C28  88F2               	bsf	intcon,4,c	;volatile
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;drv_mrf_miwi_89xa.c: 1190: INTCON3bits.INT1IE = 1;
  4608  002C2A  86F0               	bsf	intcon3,3,c	;volatile
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;drv_mrf_miwi_89xa.c: 1191: DELAY_ms(10);
  4612  002C2C  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  4613  002C2E  0E0A               	movlw	10
  4614  002C30  6F69               	movwf	DELAY_ms@ms& (0+255),b
  4615  002C32  ECFE  F00F         	call	_DELAY_ms	;wreg free
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;drv_mrf_miwi_89xa.c: 1193: for(i = 0; i < 5; i++)
  4619  002C36  6B78               	clrf	MiMAC_PowerState@i& (0+255),b
  4620  002C38                     l8946:
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;drv_mrf_miwi_89xa.c: 1194: {
  4624                           ;drv_mrf_miwi_89xa.c: 1195: AckInfo[i].Valid = 0;
  4625  002C38  5178               	movf	MiMAC_PowerState@i& (0+255),w,b
  4626  002C3A  0D06               	mullw	6
  4627  002C3C  0E5F               	movlw	low _AckInfo
  4628  002C3E  24F3               	addwf	prodl,w,c
  4629  002C40  6ED9               	movwf	fsr2l,c
  4630  002C42  0E01               	movlw	high _AckInfo
  4631  002C44  20F4               	addwfc	prodh,w,c
  4632  002C46  6EDA               	movwf	fsr2h,c
  4633  002C48  6ADF               	clrf	indf2,c
  4634                           
  4635                           ; BSR set to: 0
  4636  002C4A  2B78               	incf	MiMAC_PowerState@i& (0+255),f,b
  4637                           
  4638                           ; BSR set to: 0
  4639  002C4C  0E04               	movlw	4
  4640  002C4E  6578               	cpfsgt	MiMAC_PowerState@i& (0+255),b
  4641  002C50  D7F3               	goto	l8946
  4642  002C52  0C01               	retlw	1
  4643  002C54                     l8958:
  4644  002C54  0100               	movlb	0	; () banked
  4645  002C56  5177               	movf	MiMAC_PowerState@PowerState& (0+255),w,b
  4646                           
  4647                           ; Switch size 1, requested type "speed"
  4648                           ; Number of cases is 2, Range of values is 0 to 255
  4649                           ; switch strategies available:
  4650                           ; Name         Instructions Cycles
  4651                           ; simple_byte            7     4 (average)
  4652                           ;	Chosen strategy is simple_byte
  4653  002C58  E0DB               	bz	l8926
  4654  002C5A  0AFF               	xorlw	255	; case 255
  4655  002C5C  A4D8               	btfss	status,2,c
  4656  002C5E  0C00               	retlw	0
  4657  002C60  D7DD               	goto	l8932
  4658  002C62                     __end_of_MiMAC_PowerState:
  4659                           	opt stack 0
  4660                           tblptru	equ	0xFF8
  4661                           tblptrh	equ	0xFF7
  4662                           tblptrl	equ	0xFF6
  4663                           tablat	equ	0xFF5
  4664                           prodh	equ	0xFF4
  4665                           prodl	equ	0xFF3
  4666                           intcon	equ	0xFF2
  4667                           intcon2	equ	0xFF1
  4668                           intcon3	equ	0xFF0
  4669                           postinc0	equ	0xFEE
  4670                           wreg	equ	0xFE8
  4671                           indf1	equ	0xFE7
  4672                           postdec1	equ	0xFE5
  4673                           fsr1h	equ	0xFE2
  4674                           fsr1l	equ	0xFE1
  4675                           indf2	equ	0xFDF
  4676                           fsr2h	equ	0xFDA
  4677                           fsr2l	equ	0xFD9
  4678                           status	equ	0xFD8
  4679                           
  4680 ;; *************** function _CheckForData *****************
  4681 ;; Defined at:
  4682 ;;		line 1399 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;		None
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  firstuint8_t    1   65[BANK0 ] unsigned char 
  4687 ;;  tmpTxData       1   64[BANK0 ] unsigned char 
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  1    wreg      unsigned char 
  4690 ;; Registers used:
  4691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : E/1
  4694 ;;		On exit  : F/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4698 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4700 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4701 ;;Total ram usage:        2 bytes
  4702 ;; Hardware stack levels used:    1
  4703 ;; Hardware stack levels required when called:   14
  4704 ;; This function calls:
  4705 ;;		_MiWi_TickGet
  4706 ;;		_SendPacket
  4707 ;; This function is called by:
  4708 ;;		_MiApp_TransceiverPowerState
  4709 ;;		_run_star_demo
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text12
  4714  002B4C                     __ptext12:
  4715                           	opt stack 0
  4716  002B4C                     _CheckForData:
  4717                           	opt stack 13
  4718                           
  4719                           ;miwi_p2p.c: 1401: uint8_t tmpTxData = TxData;
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;incstack = 0
  4723  002B4C  C0E5  F0A0         	movff	_TxData,CheckForData@tmpTxData
  4724                           
  4725                           ;miwi_p2p.c: 1402: uint8_t firstuint8_t = TxBuffer[0];
  4726  002B50  C195  F0A1         	movff	_TxBuffer,CheckForData@firstuint8_t
  4727                           
  4728                           ;miwi_p2p.c: 1404: {TxData = 0;};
  4729  002B54  0100               	movlb	0	; () banked
  4730  002B56  6BE5               	clrf	_TxData& (0+255),b
  4731                           
  4732                           ; BSR set to: 0
  4733                           ;miwi_p2p.c: 1405: TxBuffer[TxData++] = 0x04;
  4734  002B58  0E95               	movlw	low _TxBuffer
  4735  002B5A  25E5               	addwf	_TxData& (0+255),w,b
  4736  002B5C  6ED9               	movwf	fsr2l,c
  4737  002B5E  6ADA               	clrf	fsr2h,c
  4738  002B60  0E01               	movlw	high _TxBuffer
  4739  002B62  22DA               	addwfc	fsr2h,f,c
  4740  002B64  0E04               	movlw	4
  4741  002B66  6EDF               	movwf	indf2,c
  4742                           
  4743                           ; BSR set to: 0
  4744  002B68  2BE5               	incf	_TxData& (0+255),f,b
  4745                           
  4746                           ; BSR set to: 0
  4747                           ;miwi_p2p.c: 1431: if( SendPacket(0, ConnectionTable[0].Address, 1, 0) )
  4748  002B6A  0E04               	movlw	low (_ConnectionTable+4)
  4749  002B6C  6F96               	movwf	SendPacket@DestinationAddress& (0+255),b
  4750  002B6E  0E02               	movlw	high (_ConnectionTable+4)
  4751  002B70  6F97               	movwf	(SendPacket@DestinationAddress+1)& (0+255),b
  4752  002B72  0E01               	movlw	1
  4753  002B74  6F98               	movwf	SendPacket@isCommand& (0+255),b
  4754  002B76  0E00               	movlw	0
  4755  002B78  6B99               	clrf	SendPacket@SecurityEnabled& (0+255),b
  4756  002B7A  EC78  F011         	call	_SendPacket
  4757  002B7E  0900               	iorlw	0
  4758  002B80  E010               	bz	l545
  4759                           
  4760                           ; BSR set to: 0
  4761                           ;miwi_p2p.c: 1434: {
  4762                           ;miwi_p2p.c: 1435: P2PStatus.bits.DataRequesting = 1;
  4763  002B82  85DF               	bsf	_P2PStatus& (0+255),2,b	;volatile
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;miwi_p2p.c: 1439: DataRequestTimer = MiWi_TickGet();
  4767  002B84  EC31  F016         	call	_MiWi_TickGet	;wreg free
  4768  002B88  C069  F17D         	movff	?_MiWi_TickGet,_DataRequestTimer
  4769  002B8C  C06A  F17E         	movff	?_MiWi_TickGet+1,_DataRequestTimer+1
  4770  002B90  C06B  F17F         	movff	?_MiWi_TickGet+2,_DataRequestTimer+2
  4771  002B94  C06C  F180         	movff	?_MiWi_TickGet+3,_DataRequestTimer+3
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;miwi_p2p.c: 1440: TxBuffer[0] = firstuint8_t;
  4775  002B98  C0A1  F195         	movff	CheckForData@firstuint8_t,_TxBuffer
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;miwi_p2p.c: 1441: TxData = tmpTxData;
  4779  002B9C  C0A0  F0E5         	movff	CheckForData@tmpTxData,_TxData
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;miwi_p2p.c: 1455: return 1;
  4783  002BA0  0C01               	retlw	1
  4784  002BA2                     l545:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;miwi_p2p.c: 1456: }
  4788                           ;miwi_p2p.c: 1457: TxBuffer[0] = firstuint8_t;
  4789  002BA2  C0A1  F195         	movff	CheckForData@firstuint8_t,_TxBuffer
  4790                           
  4791                           ;miwi_p2p.c: 1458: TxData = tmpTxData;
  4792  002BA6  C0A0  F0E5         	movff	CheckForData@tmpTxData,_TxData
  4793                           
  4794                           ; BSR set to: 0
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;miwi_p2p.c: 1462: return 0;
  4798  002BAA  0C00               	retlw	0	;funcret
  4799  002BAC                     __end_of_CheckForData:
  4800                           	opt stack 0
  4801                           tblptru	equ	0xFF8
  4802                           tblptrh	equ	0xFF7
  4803                           tblptrl	equ	0xFF6
  4804                           tablat	equ	0xFF5
  4805                           prodh	equ	0xFF4
  4806                           prodl	equ	0xFF3
  4807                           intcon	equ	0xFF2
  4808                           intcon2	equ	0xFF1
  4809                           intcon3	equ	0xFF0
  4810                           postinc0	equ	0xFEE
  4811                           wreg	equ	0xFE8
  4812                           indf1	equ	0xFE7
  4813                           postdec1	equ	0xFE5
  4814                           fsr1h	equ	0xFE2
  4815                           fsr1l	equ	0xFE1
  4816                           indf2	equ	0xFDF
  4817                           fsr2h	equ	0xFDA
  4818                           fsr2l	equ	0xFD9
  4819                           status	equ	0xFD8
  4820                           
  4821 ;; *************** function _LCD_BacklightON *****************
  4822 ;; Defined at:
  4823 ;;		line 111 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;		None               void
  4830 ;; Registers used:
  4831 ;;		None
  4832 ;; Tracked objects:
  4833 ;;		On entry : F/0
  4834 ;;		On exit  : F/0
  4835 ;;		Unchanged: F/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4841 ;;Total ram usage:        0 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    8
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_run_star_demo
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text13
  4852  0033C6                     __ptext13:
  4853                           	opt stack 0
  4854  0033C6                     _LCD_BacklightON:
  4855                           	opt stack 20
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;lcd.c: 113: LATEbits.LATE1 = 1;
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;incstack = 0
  4862  0033C6  828D               	bsf	3981,1,c	;volatile
  4863                           
  4864                           ; BSR set to: 0
  4865  0033C8  0012               	return		;funcret
  4866  0033CA                     __end_of_LCD_BacklightON:
  4867                           	opt stack 0
  4868                           tblptru	equ	0xFF8
  4869                           tblptrh	equ	0xFF7
  4870                           tblptrl	equ	0xFF6
  4871                           tablat	equ	0xFF5
  4872                           prodh	equ	0xFF4
  4873                           prodl	equ	0xFF3
  4874                           intcon	equ	0xFF2
  4875                           intcon2	equ	0xFF1
  4876                           intcon3	equ	0xFF0
  4877                           postinc0	equ	0xFEE
  4878                           wreg	equ	0xFE8
  4879                           indf1	equ	0xFE7
  4880                           postdec1	equ	0xFE5
  4881                           fsr1h	equ	0xFE2
  4882                           fsr1l	equ	0xFE1
  4883                           indf2	equ	0xFDF
  4884                           fsr2h	equ	0xFDA
  4885                           fsr2l	equ	0xFD9
  4886                           status	equ	0xFD8
  4887                           
  4888 ;; *************** function _LCD_BacklightOFF *****************
  4889 ;; Defined at:
  4890 ;;		line 116 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;		None
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;		None               void
  4897 ;; Registers used:
  4898 ;;		None
  4899 ;; Tracked objects:
  4900 ;;		On entry : F/0
  4901 ;;		On exit  : F/0
  4902 ;;		Unchanged: F/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4908 ;;Total ram usage:        0 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    8
  4911 ;; This function calls:
  4912 ;;		Nothing
  4913 ;; This function is called by:
  4914 ;;		_run_star_demo
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text14
  4919  0033CA                     __ptext14:
  4920                           	opt stack 0
  4921  0033CA                     _LCD_BacklightOFF:
  4922                           	opt stack 20
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;lcd.c: 118: LATEbits.LATE1 = 0;
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;incstack = 0
  4929  0033CA  928D               	bcf	3981,1,c	;volatile
  4930                           
  4931                           ; BSR set to: 0
  4932  0033CC  0012               	return		;funcret
  4933  0033CE                     __end_of_LCD_BacklightOFF:
  4934                           	opt stack 0
  4935                           tblptru	equ	0xFF8
  4936                           tblptrh	equ	0xFF7
  4937                           tblptrl	equ	0xFF6
  4938                           tablat	equ	0xFF5
  4939                           prodh	equ	0xFF4
  4940                           prodl	equ	0xFF3
  4941                           intcon	equ	0xFF2
  4942                           intcon2	equ	0xFF1
  4943                           intcon3	equ	0xFF0
  4944                           postinc0	equ	0xFEE
  4945                           wreg	equ	0xFE8
  4946                           indf1	equ	0xFE7
  4947                           postdec1	equ	0xFE5
  4948                           fsr1h	equ	0xFE2
  4949                           fsr1l	equ	0xFE1
  4950                           indf2	equ	0xFDF
  4951                           fsr2h	equ	0xFDA
  4952                           fsr2l	equ	0xFD9
  4953                           status	equ	0xFD8
  4954                           
  4955 ;; *************** function _DemoOutput_UpdateTxRx *****************
  4956 ;; Defined at:
  4957 ;;		line 188 in file "../src/demo_ouput.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  TxNum           1    wreg     unsigned char 
  4960 ;;  RxNum           1   58[BANK0 ] unsigned char 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;  TxNum           1   59[BANK0 ] unsigned char 
  4963 ;; Return value:  Size  Location     Type
  4964 ;;		None               void
  4965 ;; Registers used:
  4966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4967 ;; Tracked objects:
  4968 ;;		On entry : F/0
  4969 ;;		On exit  : F/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4972 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4975 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4976 ;;Total ram usage:        2 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; Hardware stack levels required when called:   12
  4979 ;; This function calls:
  4980 ;;		_LCDTRXCount
  4981 ;; This function is called by:
  4982 ;;		_run_star_demo
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text15
  4987  003392                     __ptext15:
  4988                           	opt stack 0
  4989  003392                     _DemoOutput_UpdateTxRx:
  4990                           	opt stack 16
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;incstack = 0
  4994                           ;DemoOutput_UpdateTxRx@TxNum stored from wreg
  4995  003392  6F9B               	movwf	DemoOutput_UpdateTxRx@TxNum& (0+255),b
  4996                           
  4997                           ;demo_ouput.c: 190: LCDTRXCount(TxNum, RxNum);
  4998  003394  C09A  F098         	movff	DemoOutput_UpdateTxRx@RxNum,LCDTRXCount@rxCount
  4999  003398  0100               	movlb	0	; () banked
  5000  00339A  519B               	movf	DemoOutput_UpdateTxRx@TxNum& (0+255),w,b
  5001  00339C  EF56  F017         	goto	_LCDTRXCount
  5002  0033A0                     __end_of_DemoOutput_UpdateTxRx:
  5003                           	opt stack 0
  5004                           tblptru	equ	0xFF8
  5005                           tblptrh	equ	0xFF7
  5006                           tblptrl	equ	0xFF6
  5007                           tablat	equ	0xFF5
  5008                           prodh	equ	0xFF4
  5009                           prodl	equ	0xFF3
  5010                           intcon	equ	0xFF2
  5011                           intcon2	equ	0xFF1
  5012                           intcon3	equ	0xFF0
  5013                           postinc0	equ	0xFEE
  5014                           wreg	equ	0xFE8
  5015                           indf1	equ	0xFE7
  5016                           postdec1	equ	0xFE5
  5017                           fsr1h	equ	0xFE2
  5018                           fsr1l	equ	0xFE1
  5019                           indf2	equ	0xFDF
  5020                           fsr2h	equ	0xFDA
  5021                           fsr2l	equ	0xFD9
  5022                           status	equ	0xFD8
  5023                           
  5024 ;; *************** function _LCDTRXCount *****************
  5025 ;; Defined at:
  5026 ;;		line 120 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  txCount         1    wreg     unsigned char 
  5029 ;;  rxCount         1   56[BANK0 ] unsigned char 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  txCount         1   57[BANK0 ] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : F/0
  5038 ;;		On exit  : F/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5041 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5044 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5045 ;;Total ram usage:        2 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:   11
  5048 ;; This function calls:
  5049 ;;		_LCD_Erase
  5050 ;;		_LCD_Update
  5051 ;;		_sprintf
  5052 ;; This function is called by:
  5053 ;;		_DemoOutput_UpdateTxRx
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text16
  5058  002EAC                     __ptext16:
  5059                           	opt stack 0
  5060  002EAC                     _LCDTRXCount:
  5061                           	opt stack 16
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;incstack = 0
  5065                           ;LCDTRXCount@txCount stored from wreg
  5066  002EAC  6F99               	movwf	LCDTRXCount@txCount& (0+255),b
  5067                           
  5068                           ;lcd.c: 123: LCD_Erase();
  5069  002EAE  ECE2  F018         	call	_LCD_Erase	;wreg free
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;lcd.c: 124: sprintf((char *)LCDText, (char*)"TX:%3d , RX:%3d", txCount , rxCount);
  5073  002EB2  0EB8               	movlw	low _LCDText
  5074  002EB4  6F75               	movwf	sprintf@sp& (0+255),b
  5075  002EB6  0E01               	movlw	high _LCDText
  5076  002EB8  6F76               	movwf	(sprintf@sp+1)& (0+255),b
  5077  002EBA  0E8C               	movlw	low STR_13
  5078  002EBC  6F77               	movwf	sprintf@f& (0+255),b
  5079  002EBE  0EFF               	movlw	high STR_13
  5080  002EC0  6F78               	movwf	(sprintf@f+1)& (0+255),b
  5081  002EC2  C099  F079         	movff	LCDTRXCount@txCount,?_sprintf+4
  5082  002EC6  6B7A               	clrf	(?_sprintf+5)& (0+255),b
  5083  002EC8  C098  F07B         	movff	LCDTRXCount@rxCount,?_sprintf+6
  5084  002ECC  6B7C               	clrf	(?_sprintf+7)& (0+255),b
  5085  002ECE  EC2C  F000         	call	_sprintf	;wreg free
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;lcd.c: 125: sprintf((char *)&(LCDText[16]), (char*)"Message Count");
  5089  002ED2  0EC8               	movlw	low (_LCDText+16)
  5090  002ED4  6F75               	movwf	sprintf@sp& (0+255),b
  5091  002ED6  0E01               	movlw	high (_LCDText+16)
  5092  002ED8  6F76               	movwf	(sprintf@sp+1)& (0+255),b
  5093  002EDA  0E9C               	movlw	low STR_14
  5094  002EDC  6F77               	movwf	sprintf@f& (0+255),b
  5095  002EDE  0EFF               	movlw	high STR_14
  5096  002EE0  6F78               	movwf	(sprintf@f+1)& (0+255),b
  5097  002EE2  EC2C  F000         	call	_sprintf	;wreg free
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;lcd.c: 126: LCD_Update();
  5101  002EE6  EF07  F014         	goto	_LCD_Update	;wreg free
  5102  002EEA                     __end_of_LCDTRXCount:
  5103                           	opt stack 0
  5104                           tblptru	equ	0xFF8
  5105                           tblptrh	equ	0xFF7
  5106                           tblptrl	equ	0xFF6
  5107                           tablat	equ	0xFF5
  5108                           prodh	equ	0xFF4
  5109                           prodl	equ	0xFF3
  5110                           intcon	equ	0xFF2
  5111                           intcon2	equ	0xFF1
  5112                           intcon3	equ	0xFF0
  5113                           postinc0	equ	0xFEE
  5114                           wreg	equ	0xFE8
  5115                           indf1	equ	0xFE7
  5116                           postdec1	equ	0xFE5
  5117                           fsr1h	equ	0xFE2
  5118                           fsr1l	equ	0xFE1
  5119                           indf2	equ	0xFDF
  5120                           fsr2h	equ	0xFDA
  5121                           fsr2l	equ	0xFD9
  5122                           status	equ	0xFD8
  5123                           
  5124 ;; *************** function _ButtonPressed *****************
  5125 ;; Defined at:
  5126 ;;		line 260 in file "../src/demo_ouput.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  t               4   23[BANK0 ] struct _MIWI_TICK
  5131 ;;  tickDifferen    4   19[BANK0 ] struct _MIWI_TICK
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  1    wreg      unsigned char 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : F/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5142 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5144 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5145 ;;Total ram usage:        8 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    9
  5148 ;; This function calls:
  5149 ;;		_MiWi_TickGet
  5150 ;; This function is called by:
  5151 ;;		_freezer_feature
  5152 ;;		_run_star_demo
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text17
  5157  00255A                     __ptext17:
  5158                           	opt stack 0
  5159  00255A                     _ButtonPressed:
  5160                           	opt stack 20
  5161                           
  5162                           ;demo_ouput.c: 262: MIWI_TICK tickDifference;
  5163                           ;demo_ouput.c: 264: if(PORTBbits.RB1 == 0)
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;incstack = 0
  5167  00255A  B281               	btfsc	3969,1,c	;volatile
  5168  00255C  D010               	goto	l1115
  5169                           
  5170                           ;demo_ouput.c: 265: {
  5171                           ;demo_ouput.c: 267: if(PUSH_BUTTON_pressed == 0)
  5172  00255E  0100               	movlb	0	; () banked
  5173  002560  51E0               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  5174  002562  E144               	bnz	l9246
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;demo_ouput.c: 268: {
  5178                           ;demo_ouput.c: 269: PUSH_BUTTON_pressed = 1;
  5179  002564  0E01               	movlw	1
  5180  002566  6FE0               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  5181                           
  5182                           ; BSR set to: 0
  5183                           ;demo_ouput.c: 270: PUSH_BUTTON_press_time = MiWi_TickGet();
  5184  002568  EC31  F016         	call	_MiWi_TickGet	;wreg free
  5185  00256C  C069  F181         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  5186  002570  C06A  F182         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  5187  002574  C06B  F183         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  5188  002578  C06C  F184         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;demo_ouput.c: 271: return 1;
  5192  00257C  0C01               	retlw	1
  5193  00257E                     l1115:
  5194                           
  5195                           ;demo_ouput.c: 274: else if(PORTBbits.RB2 == 0)
  5196  00257E  B481               	btfsc	3969,2,c	;volatile
  5197  002580  D010               	goto	l9238
  5198                           
  5199                           ;demo_ouput.c: 275: {
  5200                           ;demo_ouput.c: 277: if(PUSH_BUTTON_pressed == 0)
  5201  002582  0100               	movlb	0	; () banked
  5202  002584  51E0               	movf	_PUSH_BUTTON_pressed& (0+255),w,b
  5203  002586  E132               	bnz	l9246
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;demo_ouput.c: 278: {
  5207                           ;demo_ouput.c: 279: PUSH_BUTTON_pressed = 1;
  5208  002588  0E01               	movlw	1
  5209  00258A  6FE0               	movwf	_PUSH_BUTTON_pressed& (0+255),b
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;demo_ouput.c: 280: PUSH_BUTTON_press_time = MiWi_TickGet();
  5213  00258C  EC31  F016         	call	_MiWi_TickGet	;wreg free
  5214  002590  C069  F181         	movff	?_MiWi_TickGet,_PUSH_BUTTON_press_time
  5215  002594  C06A  F182         	movff	?_MiWi_TickGet+1,_PUSH_BUTTON_press_time+1
  5216  002598  C06B  F183         	movff	?_MiWi_TickGet+2,_PUSH_BUTTON_press_time+2
  5217  00259C  C06C  F184         	movff	?_MiWi_TickGet+3,_PUSH_BUTTON_press_time+3
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;demo_ouput.c: 281: return 2;
  5221  0025A0  0C02               	retlw	2
  5222  0025A2                     l9238:
  5223                           
  5224                           ;demo_ouput.c: 284: else
  5225                           ;demo_ouput.c: 285: {
  5226                           ;demo_ouput.c: 287: MIWI_TICK t = MiWi_TickGet();
  5227  0025A2  EC31  F016         	call	_MiWi_TickGet	;wreg free
  5228  0025A6  C069  F077         	movff	?_MiWi_TickGet,ButtonPressed@t
  5229  0025AA  C06A  F078         	movff	?_MiWi_TickGet+1,ButtonPressed@t+1
  5230  0025AE  C06B  F079         	movff	?_MiWi_TickGet+2,ButtonPressed@t+2
  5231  0025B2  C06C  F07A         	movff	?_MiWi_TickGet+3,ButtonPressed@t+3
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;demo_ouput.c: 290: tickDifference.Val = (t.Val - PUSH_BUTTON_press_time.Val);
  5235  0025B6  0101               	movlb	1	; () banked
  5236  0025B8  5181               	movf	_PUSH_BUTTON_press_time& (0+255),w,b
  5237  0025BA  0100               	movlb	0	; () banked
  5238  0025BC  5D77               	subwf	ButtonPressed@t& (0+255),w,b
  5239  0025BE  6F73               	movwf	ButtonPressed@tickDifference& (0+255),b
  5240  0025C0  0101               	movlb	1	; () banked
  5241  0025C2  5182               	movf	(_PUSH_BUTTON_press_time+1)& (0+255),w,b
  5242  0025C4  0100               	movlb	0	; () banked
  5243  0025C6  5978               	subwfb	(ButtonPressed@t+1)& (0+255),w,b
  5244  0025C8  6F74               	movwf	(ButtonPressed@tickDifference+1)& (0+255),b
  5245  0025CA  0101               	movlb	1	; () banked
  5246  0025CC  5183               	movf	(_PUSH_BUTTON_press_time+2)& (0+255),w,b
  5247  0025CE  0100               	movlb	0	; () banked
  5248  0025D0  5979               	subwfb	(ButtonPressed@t+2)& (0+255),w,b
  5249  0025D2  6F75               	movwf	(ButtonPressed@tickDifference+2)& (0+255),b
  5250  0025D4  0101               	movlb	1	; () banked
  5251  0025D6  5184               	movf	(_PUSH_BUTTON_press_time+3)& (0+255),w,b
  5252  0025D8  0100               	movlb	0	; () banked
  5253  0025DA  597A               	subwfb	(ButtonPressed@t+3)& (0+255),w,b
  5254  0025DC  6F76               	movwf	(ButtonPressed@tickDifference+3)& (0+255),b
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;demo_ouput.c: 293: if(tickDifference.Val > 0x00003FFF)
  5258  0025DE  5176               	movf	(ButtonPressed@tickDifference+3)& (0+255),w,b
  5259  0025E0  1175               	iorwf	(ButtonPressed@tickDifference+2)& (0+255),w,b
  5260  0025E2  E103               	bnz	u8990
  5261  0025E4  0E40               	movlw	64
  5262  0025E6  5D74               	subwf	(ButtonPressed@tickDifference+1)& (0+255),w,b
  5263  0025E8  E301               	bnc	l9246
  5264  0025EA                     u8990:
  5265                           
  5266                           ; BSR set to: 0
  5267                           ;demo_ouput.c: 294: {
  5268                           ;demo_ouput.c: 295: PUSH_BUTTON_pressed = 0;
  5269  0025EA  6BE0               	clrf	_PUSH_BUTTON_pressed& (0+255),b
  5270  0025EC                     l9246:
  5271                           
  5272                           ; BSR set to: 0
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;demo_ouput.c: 296: }
  5276                           ;demo_ouput.c: 297: }
  5277                           ;demo_ouput.c: 299: return 0;
  5278  0025EC  0C00               	retlw	0	;funcret
  5279  0025EE                     __end_of_ButtonPressed:
  5280                           	opt stack 0
  5281                           tblptru	equ	0xFF8
  5282                           tblptrh	equ	0xFF7
  5283                           tblptrl	equ	0xFF6
  5284                           tablat	equ	0xFF5
  5285                           prodh	equ	0xFF4
  5286                           prodl	equ	0xFF3
  5287                           intcon	equ	0xFF2
  5288                           intcon2	equ	0xFF1
  5289                           intcon3	equ	0xFF0
  5290                           postinc0	equ	0xFEE
  5291                           wreg	equ	0xFE8
  5292                           indf1	equ	0xFE7
  5293                           postdec1	equ	0xFE5
  5294                           fsr1h	equ	0xFE2
  5295                           fsr1l	equ	0xFE1
  5296                           indf2	equ	0xFDF
  5297                           fsr2h	equ	0xFDA
  5298                           fsr2l	equ	0xFD9
  5299                           status	equ	0xFD8
  5300                           
  5301 ;; *************** function _Initialize_Demo *****************
  5302 ;; Defined at:
  5303 ;;		line 97 in file "../src/task.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  freezer_enab    1    wreg     unsigned char 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  freezer_enab    1  106[BANK0 ] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      unsigned char 
  5310 ;; Registers used:
  5311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : F/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5320 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5321 ;;Total ram usage:        1 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:   20
  5324 ;; This function calls:
  5325 ;;		_DemoOutput_Channel
  5326 ;;		_DemoOutput_ChannelError
  5327 ;;		_DemoOutput_Instruction
  5328 ;;		_EEPROM_Write
  5329 ;;		_MiApp_ConnectionMode
  5330 ;;		_MiApp_EstablishConnection
  5331 ;;		_MiApp_ProtocolInit
  5332 ;;		_MiApp_SetChannel
  5333 ;;		_Read_MAC_Address
  5334 ;; This function is called by:
  5335 ;;		_main
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text18
  5340  0029FA                     __ptext18:
  5341                           	opt stack 0
  5342  0029FA                     _Initialize_Demo:
  5343                           	opt stack 10
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;incstack = 0
  5347                           ;Initialize_Demo@freezer_enable stored from wreg
  5348  0029FA  6FCA               	movwf	Initialize_Demo@freezer_enable& (0+255),b
  5349                           
  5350                           ;task.c: 100: Read_MAC_Address(myLongAddress);
  5351  0029FC  0ED9               	movlw	low _myLongAddress
  5352  0029FE  0100               	movlb	0	; () banked
  5353  002A00  6F6E               	movwf	Read_MAC_Address@myAddress& (0+255),b
  5354  002A02  0E01               	movlw	high _myLongAddress
  5355  002A04  6F6F               	movwf	(Read_MAC_Address@myAddress+1)& (0+255),b
  5356  002A06  ECC7  F013         	call	_Read_MAC_Address	;wreg free
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;task.c: 103: if (freezer_enable)
  5360  002A0A  51CA               	movf	Initialize_Demo@freezer_enable& (0+255),w,b
  5361  002A0C  E003               	bz	l1222
  5362                           
  5363                           ; BSR set to: 0
  5364                           ;task.c: 104: {
  5365                           ;task.c: 105: MiApp_ProtocolInit(1);
  5366  002A0E  0E01               	movlw	1
  5367  002A10  EF2C  F00B         	goto	_MiApp_ProtocolInit
  5368  002A14                     l1222:
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;task.c: 107: else
  5372                           ;task.c: 108: {
  5373                           ;task.c: 109: LATAbits.LATA6 = 0;
  5374  002A14  9C89               	bcf	3977,6,c	;volatile
  5375                           
  5376                           ;task.c: 110: LATAbits.LATA7 = 0;
  5377  002A16  9E89               	bcf	3977,7,c	;volatile
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;task.c: 122: MiApp_ProtocolInit(0);
  5381  002A18  0E00               	movlw	0
  5382  002A1A  EC2C  F00B         	call	_MiApp_ProtocolInit
  5383                           
  5384                           ; BSR set to: 0
  5385  002A1E  0E19               	movlw	25
  5386  002A20  ECA4  F018         	call	_MiApp_SetChannel
  5387  002A24  0900               	iorlw	0
  5388  002A26  E101               	bnz	l9712
  5389  002A28  0C19               	retlw	25
  5390  002A2A                     l9712:
  5391                           
  5392                           ;task.c: 133: }
  5393                           ;task.c: 144: MiApp_ConnectionMode(0x00);
  5394  002A2A  0E00               	movlw	0
  5395  002A2C  EC44  F018         	call	_MiApp_ConnectionMode
  5396  002A30  0E00               	movlw	0
  5397  002A32  0100               	movlb	0	; () banked
  5398  002A34  6F9D               	movwf	DemoOutput_Channel@Step& (0+255),b
  5399  002A36  0E19               	movlw	25
  5400  002A38  EC75  F017         	call	_DemoOutput_Channel
  5401                           
  5402                           ; BSR set to: 0
  5403                           ;task.c: 159: i = MiApp_EstablishConnection(0xFF , 0x00);
  5404  002A3C  6BB9               	clrf	MiApp_EstablishConnection@Mode& (0+255),b
  5405  002A3E  EC87  F00C         	call	_MiApp_EstablishConnection
  5406  002A42  6FEA               	movwf	_i& (0+255),b
  5407                           
  5408                           ; BSR set to: 0
  5409                           ;task.c: 164: if( i != 0xFF )
  5410  002A44  29EA               	incf	_i& (0+255),w,b
  5411  002A46  E006               	bz	l9724
  5412                           
  5413                           ; BSR set to: 0
  5414  002A48  0E01               	movlw	1
  5415  002A4A  6F9D               	movwf	DemoOutput_Channel@Step& (0+255),b
  5416  002A4C  0E19               	movlw	25
  5417  002A4E  EC75  F017         	call	_DemoOutput_Channel
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;task.c: 167: role = 0;
  5421  002A52  6BF6               	clrf	_role& (0+255),b
  5422  002A54                     l9724:
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;task.c: 168: }
  5426                           ;task.c: 170: EEPROM_Write((uint8_t *)&role, 0xB8, 1);
  5427  002A54  0EF6               	movlw	low _role
  5428  002A56  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  5429  002A58  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  5430  002A5A  0EB8               	movlw	184
  5431  002A5C  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  5432  002A5E  0E01               	movlw	1
  5433  002A60  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  5434  002A62  EC83  F013         	call	_EEPROM_Write	;wreg free
  5435                           
  5436                           ;task.c: 187: LATAbits.LATA6 = 1;
  5437  002A66  8C89               	bsf	3977,6,c	;volatile
  5438                           
  5439                           ;task.c: 188: DemoOutput_Instruction();
  5440  002A68  EF9D  F019         	goto	_DemoOutput_Instruction	;wreg free
  5441  002A6C                     __end_of_Initialize_Demo:
  5442                           	opt stack 0
  5443                           tblptru	equ	0xFF8
  5444                           tblptrh	equ	0xFF7
  5445                           tblptrl	equ	0xFF6
  5446                           tablat	equ	0xFF5
  5447                           prodh	equ	0xFF4
  5448                           prodl	equ	0xFF3
  5449                           intcon	equ	0xFF2
  5450                           intcon2	equ	0xFF1
  5451                           intcon3	equ	0xFF0
  5452                           postinc0	equ	0xFEE
  5453                           wreg	equ	0xFE8
  5454                           indf1	equ	0xFE7
  5455                           postdec1	equ	0xFE5
  5456                           fsr1h	equ	0xFE2
  5457                           fsr1l	equ	0xFE1
  5458                           indf2	equ	0xFDF
  5459                           fsr2h	equ	0xFDA
  5460                           fsr2l	equ	0xFD9
  5461                           status	equ	0xFD8
  5462                           
  5463 ;; *************** function _Read_MAC_Address *****************
  5464 ;; Defined at:
  5465 ;;		line 84 in file "../src/system_config/miwikit_pic18f46j50_89xa/eeprom.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  myAddress       2   14[BANK0 ] PTR unsigned char 
  5468 ;;		 -> myLongAddress(8), 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  i               1   18[BANK0 ] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;		None               void
  5473 ;; Registers used:
  5474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5475 ;; Tracked objects:
  5476 ;;		On entry : F/0
  5477 ;;		On exit  : F/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5481 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5483 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5484 ;;Total ram usage:        5 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; Hardware stack levels required when called:   11
  5487 ;; This function calls:
  5488 ;;		_EEPROM_Read
  5489 ;; This function is called by:
  5490 ;;		_Initialize_Demo
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text19
  5495  00278E                     __ptext19:
  5496                           	opt stack 0
  5497  00278E                     _Read_MAC_Address:
  5498                           	opt stack 18
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;eeprom.c: 89: {
  5502                           ;eeprom.c: 90: for(i = 0; i < 3; i++)
  5503                           
  5504                           ;incstack = 0
  5505  00278E  6B72               	clrf	Read_MAC_Address@i& (0+255),b
  5506  002790                     l9324:
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;eeprom.c: 91: {
  5510                           ;eeprom.c: 92: EEPROM_Read(&(myAddress[8-1-i]), 0xFA+i, 1);
  5511  002790  5172               	movf	Read_MAC_Address@i& (0+255),w,b
  5512  002792  5D6E               	subwf	Read_MAC_Address@myAddress& (0+255),w,b
  5513  002794  6F70               	movwf	??_Read_MAC_Address& (0+255),b
  5514  002796  0E00               	movlw	0
  5515  002798  596F               	subwfb	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  5516  00279A  6F71               	movwf	(??_Read_MAC_Address+1)& (0+255),b
  5517  00279C  0E07               	movlw	7
  5518  00279E  2570               	addwf	??_Read_MAC_Address& (0+255),w,b
  5519  0027A0  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  5520  0027A2  0E00               	movlw	0
  5521  0027A4  2171               	addwfc	(??_Read_MAC_Address+1)& (0+255),w,b
  5522  0027A6  6F6B               	movwf	(EEPROM_Read@dest+1)& (0+255),b
  5523  0027A8  5172               	movf	Read_MAC_Address@i& (0+255),w,b
  5524  0027AA  0FFA               	addlw	250
  5525  0027AC  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  5526  0027AE  0E01               	movlw	1
  5527  0027B0  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  5528  0027B2  EC5E  F018         	call	_EEPROM_Read	;wreg free
  5529                           
  5530                           ; BSR set to: 0
  5531  0027B6  2B72               	incf	Read_MAC_Address@i& (0+255),f,b
  5532                           
  5533                           ; BSR set to: 0
  5534  0027B8  0E02               	movlw	2
  5535  0027BA  6572               	cpfsgt	Read_MAC_Address@i& (0+255),b
  5536  0027BC  D7E9               	goto	l9324
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;eeprom.c: 96: {
  5540                           ;eeprom.c: 97: myAddress[4] = 0xFF;
  5541  0027BE  EE20 F004          	lfsr	2,4
  5542  0027C2  516E               	movf	Read_MAC_Address@myAddress& (0+255),w,b
  5543  0027C4  26D9               	addwf	fsr2l,f,c
  5544  0027C6  516F               	movf	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  5545  0027C8  22DA               	addwfc	fsr2h,f,c
  5546  0027CA  68DF               	setf	indf2,c
  5547                           
  5548                           ; BSR set to: 0
  5549                           ;eeprom.c: 99: }
  5550                           ;eeprom.c: 100: myAddress[3] = 0xFE;
  5551  0027CC  EE20 F003          	lfsr	2,3
  5552  0027D0  516E               	movf	Read_MAC_Address@myAddress& (0+255),w,b
  5553  0027D2  26D9               	addwf	fsr2l,f,c
  5554  0027D4  516F               	movf	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  5555  0027D6  22DA               	addwfc	fsr2h,f,c
  5556  0027D8  0EFE               	movlw	254
  5557  0027DA  6EDF               	movwf	indf2,c
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;eeprom.c: 102: for(i = 0; i < 3; i++)
  5561  0027DC  6B72               	clrf	Read_MAC_Address@i& (0+255),b
  5562  0027DE                     l9338:
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;eeprom.c: 103: {
  5566                           ;eeprom.c: 104: EEPROM_Read(&(myAddress[2-i]), 0xFA+3+i, 1);
  5567  0027DE  5172               	movf	Read_MAC_Address@i& (0+255),w,b
  5568  0027E0  5D6E               	subwf	Read_MAC_Address@myAddress& (0+255),w,b
  5569  0027E2  6F70               	movwf	??_Read_MAC_Address& (0+255),b
  5570  0027E4  0E00               	movlw	0
  5571  0027E6  596F               	subwfb	(Read_MAC_Address@myAddress+1)& (0+255),w,b
  5572  0027E8  6F71               	movwf	(??_Read_MAC_Address+1)& (0+255),b
  5573  0027EA  0E02               	movlw	2
  5574  0027EC  2570               	addwf	??_Read_MAC_Address& (0+255),w,b
  5575  0027EE  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  5576  0027F0  0E00               	movlw	0
  5577  0027F2  2171               	addwfc	(??_Read_MAC_Address+1)& (0+255),w,b
  5578  0027F4  6F6B               	movwf	(EEPROM_Read@dest+1)& (0+255),b
  5579  0027F6  5172               	movf	Read_MAC_Address@i& (0+255),w,b
  5580  0027F8  0FFD               	addlw	253
  5581  0027FA  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  5582  0027FC  0E01               	movlw	1
  5583  0027FE  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  5584  002800  EC5E  F018         	call	_EEPROM_Read	;wreg free
  5585                           
  5586                           ; BSR set to: 0
  5587  002804  2B72               	incf	Read_MAC_Address@i& (0+255),f,b
  5588                           
  5589                           ; BSR set to: 0
  5590  002806  0E02               	movlw	2
  5591  002808  6572               	cpfsgt	Read_MAC_Address@i& (0+255),b
  5592  00280A  D7E9               	goto	l9338
  5593  00280C  0C02               	retlw	2
  5594  00280E                     __end_of_Read_MAC_Address:
  5595                           	opt stack 0
  5596                           tblptru	equ	0xFF8
  5597                           tblptrh	equ	0xFF7
  5598                           tblptrl	equ	0xFF6
  5599                           tablat	equ	0xFF5
  5600                           prodh	equ	0xFF4
  5601                           prodl	equ	0xFF3
  5602                           intcon	equ	0xFF2
  5603                           intcon2	equ	0xFF1
  5604                           intcon3	equ	0xFF0
  5605                           postinc0	equ	0xFEE
  5606                           wreg	equ	0xFE8
  5607                           indf1	equ	0xFE7
  5608                           postdec1	equ	0xFE5
  5609                           fsr1h	equ	0xFE2
  5610                           fsr1l	equ	0xFE1
  5611                           indf2	equ	0xFDF
  5612                           fsr2h	equ	0xFDA
  5613                           fsr2l	equ	0xFD9
  5614                           status	equ	0xFD8
  5615                           
  5616 ;; *************** function _MiApp_ProtocolInit *****************
  5617 ;; Defined at:
  5618 ;;		line 1130 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  bNetworkFree    1    wreg     unsigned char 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  bNetworkFree    1   27[BANK0 ] unsigned char 
  5623 ;;  initValue       3   28[BANK0 ] struct .
  5624 ;;  i               1   31[BANK0 ] unsigned char 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      unsigned char 
  5627 ;; Registers used:
  5628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : F/0
  5631 ;;		On exit  : F/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5635 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5637 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5638 ;;Total ram usage:        5 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:   13
  5641 ;; This function calls:
  5642 ;;		_EEPROM_Read
  5643 ;;		_EEPROM_Write
  5644 ;;		_MiApp_SetChannel
  5645 ;;		_MiMAC_Init
  5646 ;;		_NVMInit
  5647 ;; This function is called by:
  5648 ;;		_Initialize_Demo
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text20
  5653  001658                     __ptext20:
  5654                           	opt stack 0
  5655  001658                     _MiApp_ProtocolInit:
  5656                           	opt stack 16
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;incstack = 0
  5660                           ;MiApp_ProtocolInit@bNetworkFreezer stored from wreg
  5661  001658  6F7B               	movwf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),b
  5662                           
  5663                           ;miwi_p2p.c: 1132: uint8_t i;
  5664                           ;miwi_p2p.c: 1134: MACINIT_PARAM initValue;
  5665                           ;miwi_p2p.c: 1137: NVMInit();
  5666  00165A  ECF7  F012         	call	_NVMInit	;wreg free
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;miwi_p2p.c: 1141: P2PStatus.Val = 0;
  5670  00165E  6BDF               	clrf	_P2PStatus& (0+255),b	;volatile
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;miwi_p2p.c: 1142: if (!bNetworkFreezer)
  5674  001660  517B               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5675  001662  E129               	bnz	l517
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;miwi_p2p.c: 1143: {
  5679                           ;miwi_p2p.c: 1144: for(i = 0; i < 10; i++)
  5680  001664  6B7F               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5681  001666                     l9262:
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;miwi_p2p.c: 1145: {
  5685                           ;miwi_p2p.c: 1146: ConnectionTable[i].status.Val = 0;
  5686  001666  517F               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5687  001668  0D0E               	mullw	14
  5688  00166A  0E0C               	movlw	low (_ConnectionTable+12)
  5689  00166C  24F3               	addwf	prodl,w,c
  5690  00166E  6ED9               	movwf	fsr2l,c
  5691  001670  0E02               	movlw	high (_ConnectionTable+12)
  5692  001672  20F4               	addwfc	prodh,w,c
  5693  001674  6EDA               	movwf	fsr2h,c
  5694  001676  6ADF               	clrf	indf2,c
  5695                           
  5696                           ;miwi_p2p.c: 1147: ConnectionTable[i].Address[0] = 0x00;
  5697  001678  517F               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5698  00167A  0D0E               	mullw	14
  5699  00167C  0E04               	movlw	low (_ConnectionTable+4)
  5700  00167E  24F3               	addwf	prodl,w,c
  5701  001680  6ED9               	movwf	fsr2l,c
  5702  001682  0E02               	movlw	high (_ConnectionTable+4)
  5703  001684  20F4               	addwfc	prodh,w,c
  5704  001686  6EDA               	movwf	fsr2h,c
  5705  001688  6ADF               	clrf	indf2,c
  5706                           
  5707                           ;miwi_p2p.c: 1148: ConnectionTable[i].Address[1] = 0x00;
  5708  00168A  517F               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5709  00168C  0D0E               	mullw	14
  5710  00168E  0E05               	movlw	low (_ConnectionTable+5)
  5711  001690  24F3               	addwf	prodl,w,c
  5712  001692  6ED9               	movwf	fsr2l,c
  5713  001694  0E02               	movlw	high (_ConnectionTable+5)
  5714  001696  20F4               	addwfc	prodh,w,c
  5715  001698  6EDA               	movwf	fsr2h,c
  5716  00169A  6ADF               	clrf	indf2,c
  5717                           
  5718                           ;miwi_p2p.c: 1149: ConnectionTable[i].Address[2] = 0x00;
  5719  00169C  517F               	movf	MiApp_ProtocolInit@i& (0+255),w,b
  5720  00169E  0D0E               	mullw	14
  5721  0016A0  0E06               	movlw	low (_ConnectionTable+6)
  5722  0016A2  24F3               	addwf	prodl,w,c
  5723  0016A4  6ED9               	movwf	fsr2l,c
  5724  0016A6  0E02               	movlw	high (_ConnectionTable+6)
  5725  0016A8  20F4               	addwfc	prodh,w,c
  5726  0016AA  6EDA               	movwf	fsr2h,c
  5727  0016AC  6ADF               	clrf	indf2,c
  5728                           
  5729                           ; BSR set to: 0
  5730  0016AE  2B7F               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5731                           
  5732                           ; BSR set to: 0
  5733  0016B0  0E09               	movlw	9
  5734  0016B2  657F               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5735  0016B4  D7D8               	goto	l9262
  5736  0016B6                     l517:
  5737                           
  5738                           ; BSR set to: 0
  5739                           ;miwi_p2p.c: 1154: }
  5740                           ;miwi_p2p.c: 1155: }
  5741                           ;miwi_p2p.c: 1157: TxData = 0;
  5742  0016B6  6BE5               	clrf	_TxData& (0+255),b
  5743                           
  5744                           ;miwi_p2p.c: 1166: for (i=0;i<10;i++)
  5745  0016B8  6B7F               	clrf	MiApp_ProtocolInit@i& (0+255),b
  5746  0016BA                     l9272:
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;miwi_p2p.c: 1167: {
  5750  0016BA  2B7F               	incf	MiApp_ProtocolInit@i& (0+255),f,b
  5751                           
  5752                           ; BSR set to: 0
  5753  0016BC  0E09               	movlw	9
  5754  0016BE  657F               	cpfsgt	MiApp_ProtocolInit@i& (0+255),b
  5755  0016C0  D7FC               	goto	l9272
  5756                           
  5757                           ; BSR set to: 0
  5758                           ;miwi_p2p.c: 1170: }
  5759                           ;miwi_p2p.c: 1180: if( bNetworkFreezer )
  5760  0016C2  517B               	movf	MiApp_ProtocolInit@bNetworkFreezer& (0+255),w,b
  5761  0016C4  E03C               	bz	l9286
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;miwi_p2p.c: 1181: {
  5765                           ;miwi_p2p.c: 1182: EEPROM_Read( (uint8_t *)&currentChannel, 0x02, 1);
  5766  0016C6  0EF1               	movlw	low _currentChannel
  5767  0016C8  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  5768  0016CA  6B6B               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  5769  0016CC  0E02               	movlw	2
  5770  0016CE  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  5771  0016D0  0E01               	movlw	1
  5772  0016D2  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  5773  0016D4  EC5E  F018         	call	_EEPROM_Read	;wreg free
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;miwi_p2p.c: 1183: if( currentChannel >= 32 )
  5777  0016D8  0E1F               	movlw	31
  5778  0016DA  65F1               	cpfsgt	_currentChannel& (0+255),b
  5779  0016DC  D001               	goto	l9284
  5780  0016DE  0C1F               	retlw	31
  5781  0016E0                     l9284:
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;miwi_p2p.c: 1186: }
  5785                           ;miwi_p2p.c: 1191: EEPROM_Read( (uint8_t *)&ConnMode,0x03, 1);
  5786  0016E0  0EF5               	movlw	low _ConnMode
  5787  0016E2  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  5788  0016E4  6B6B               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  5789  0016E6  0E03               	movlw	3
  5790  0016E8  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  5791  0016EA  0E01               	movlw	1
  5792  0016EC  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  5793  0016EE  EC5E  F018         	call	_EEPROM_Read	;wreg free
  5794                           
  5795                           ;miwi_p2p.c: 1192: EEPROM_Read( (uint8_t *)ConnectionTable, 0x04, (uint16_t)10 * sizeof(
      +                          CONNECTION_ENTRY));
  5796  0016F2  0E00               	movlw	low _ConnectionTable
  5797  0016F4  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  5798  0016F6  0E02               	movlw	high _ConnectionTable
  5799  0016F8  6F6B               	movwf	(EEPROM_Read@dest+1)& (0+255),b
  5800  0016FA  0E04               	movlw	4
  5801  0016FC  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  5802  0016FE  0E8C               	movlw	140
  5803  001700  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  5804  001702  EC5E  F018         	call	_EEPROM_Read	;wreg free
  5805                           
  5806                           ;miwi_p2p.c: 1195: EEPROM_Read( (uint8_t *)&role, 0xB8, 1);
  5807  001706  0EF6               	movlw	low _role
  5808  001708  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  5809  00170A  6B6B               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  5810  00170C  0EB8               	movlw	184
  5811  00170E  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  5812  001710  0E01               	movlw	1
  5813  001712  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  5814  001714  EC5E  F018         	call	_EEPROM_Read	;wreg free
  5815                           
  5816                           ;miwi_p2p.c: 1196: EEPROM_Read( (uint8_t *)&myConnectionIndex_in_PanCo, 0xBB, 1);
  5817  001718  0EF2               	movlw	low _myConnectionIndex_in_PanCo
  5818  00171A  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  5819  00171C  6B6B               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  5820  00171E  0EBB               	movlw	187
  5821  001720  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  5822  001722  0E01               	movlw	1
  5823  001724  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  5824  001726  EC5E  F018         	call	_EEPROM_Read	;wreg free
  5825                           
  5826                           ;miwi_p2p.c: 1198: EEPROM_Read( (uint8_t *)&conn_size, 0xBA, 1);
  5827  00172A  0EF0               	movlw	low _conn_size
  5828  00172C  6F6A               	movwf	EEPROM_Read@dest& (0+255),b
  5829  00172E  6B6B               	clrf	(EEPROM_Read@dest+1)& (0+255),b
  5830  001730  0EBA               	movlw	186
  5831  001732  6F6C               	movwf	EEPROM_Read@addr& (0+255),b
  5832  001734  0E01               	movlw	1
  5833  001736  6F6D               	movwf	EEPROM_Read@count& (0+255),b
  5834  001738  EC5E  F018         	call	_EEPROM_Read	;wreg free
  5835                           
  5836                           ;miwi_p2p.c: 1210: }
  5837  00173C  D01E               	goto	l9288
  5838  00173E                     l9286:
  5839                           
  5840                           ; BSR set to: 0
  5841                           ;miwi_p2p.c: 1211: else
  5842                           ;miwi_p2p.c: 1212: {
  5843                           ;miwi_p2p.c: 1217: EEPROM_Write((uint8_t *)&currentChannel, 0x02, 1);
  5844  00173E  0EF1               	movlw	low _currentChannel
  5845  001740  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  5846  001742  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  5847  001744  0E02               	movlw	2
  5848  001746  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  5849  001748  0E01               	movlw	1
  5850  00174A  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  5851  00174C  EC83  F013         	call	_EEPROM_Write	;wreg free
  5852                           
  5853                           ;miwi_p2p.c: 1218: EEPROM_Write((uint8_t *)&ConnMode, 0x03, 1);
  5854  001750  0EF5               	movlw	low _ConnMode
  5855  001752  0100               	movlb	0	; () banked
  5856  001754  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  5857  001756  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  5858  001758  0E03               	movlw	3
  5859  00175A  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  5860  00175C  0E01               	movlw	1
  5861  00175E  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  5862  001760  EC83  F013         	call	_EEPROM_Write	;wreg free
  5863                           
  5864                           ;miwi_p2p.c: 1219: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)10 * sizeof(C
      +                          ONNECTION_ENTRY));
  5865  001764  0E00               	movlw	low _ConnectionTable
  5866  001766  0100               	movlb	0	; () banked
  5867  001768  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  5868  00176A  0E02               	movlw	high _ConnectionTable
  5869  00176C  6F6B               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  5870  00176E  0E04               	movlw	4
  5871  001770  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  5872  001772  0E8C               	movlw	140
  5873  001774  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  5874  001776  EC83  F013         	call	_EEPROM_Write	;wreg free
  5875  00177A                     l9288:
  5876                           
  5877                           ;miwi_p2p.c: 1221: }
  5878                           ;miwi_p2p.c: 1228: initValue.PAddress = myLongAddress;
  5879  00177A  0ED9               	movlw	low _myLongAddress
  5880  00177C  0100               	movlb	0	; () banked
  5881  00177E  6F7D               	movwf	(MiApp_ProtocolInit@initValue+1)& (0+255),b
  5882  001780  0E01               	movlw	high _myLongAddress
  5883  001782  6F7E               	movwf	(MiApp_ProtocolInit@initValue+2)& (0+255),b
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;miwi_p2p.c: 1229: initValue.actionFlags.bits.CCAEnable = 1;
  5887  001784  837C               	bsf	MiApp_ProtocolInit@initValue& (0+255),1,b
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;miwi_p2p.c: 1230: initValue.actionFlags.bits.PAddrLength = 8;
  5891  001786  517C               	movf	MiApp_ProtocolInit@initValue& (0+255),w,b
  5892  001788  0B87               	andlw	-121
  5893  00178A  0940               	iorlw	64
  5894  00178C  6F7C               	movwf	MiApp_ProtocolInit@initValue& (0+255),b
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;miwi_p2p.c: 1231: initValue.actionFlags.bits.NetworkFreezer = bNetworkFreezer;
  5898  00178E  B17B               	btfsc	MiApp_ProtocolInit@bNetworkFreezer& (0+255),0,b
  5899  001790  D002               	bra	u9055
  5900  001792  957C               	bcf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5901  001794  D002               	bra	u9056
  5902  001796                     u9055:
  5903  001796  0100               	movlb	0	; () banked
  5904  001798  857C               	bsf	MiApp_ProtocolInit@initValue& (0+255),2,b
  5905  00179A                     u9056:
  5906                           
  5907                           ; BSR set to: 0
  5908                           ;miwi_p2p.c: 1232: initValue.actionFlags.bits.RepeaterMode = 0;
  5909  00179A  917C               	bcf	MiApp_ProtocolInit@initValue& (0+255),0,b
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;miwi_p2p.c: 1234: MiMAC_Init(initValue);
  5913  00179C  C07C  F077         	movff	MiApp_ProtocolInit@initValue,MiMAC_Init@initValue
  5914  0017A0  C07D  F078         	movff	MiApp_ProtocolInit@initValue+1,MiMAC_Init@initValue+1
  5915  0017A4  C07E  F079         	movff	MiApp_ProtocolInit@initValue+2,MiMAC_Init@initValue+2
  5916  0017A8  ECC7  F011         	call	_MiMAC_Init	;wreg free
  5917                           
  5918                           ; BSR set to: 0
  5919                           ;miwi_p2p.c: 1243: MiApp_SetChannel(currentChannel);
  5920  0017AC  51F1               	movf	_currentChannel& (0+255),w,b
  5921  0017AE  ECA4  F018         	call	_MiApp_SetChannel
  5922                           
  5923                           ;miwi_p2p.c: 1254: P2PCapacityInfo = 0;
  5924  0017B2  0100               	movlb	0	; () banked
  5925  0017B4  6BDE               	clrf	_P2PCapacityInfo& (0+255),b
  5926                           
  5927                           ; BSR set to: 0
  5928                           ;miwi_p2p.c: 1261: P2PCapacityInfo |= (ConnMode << 4);
  5929  0017B6  39F5               	swapf	_ConnMode& (0+255),w,b
  5930  0017B8  0BF0               	andlw	240
  5931  0017BA  13DE               	iorwf	_P2PCapacityInfo& (0+255),f,b
  5932                           
  5933                           ; BSR set to: 0
  5934                           ;miwi_p2p.c: 1263: INTCON3bits.INT1IE = 1;
  5935  0017BC  86F0               	bsf	intcon3,3,c	;volatile
  5936                           
  5937                           ; BSR set to: 0
  5938  0017BE  0012               	return		;funcret
  5939  0017C0                     __end_of_MiApp_ProtocolInit:
  5940                           	opt stack 0
  5941                           tblptru	equ	0xFF8
  5942                           tblptrh	equ	0xFF7
  5943                           tblptrl	equ	0xFF6
  5944                           tablat	equ	0xFF5
  5945                           prodh	equ	0xFF4
  5946                           prodl	equ	0xFF3
  5947                           intcon	equ	0xFF2
  5948                           intcon2	equ	0xFF1
  5949                           intcon3	equ	0xFF0
  5950                           postinc0	equ	0xFEE
  5951                           wreg	equ	0xFE8
  5952                           indf1	equ	0xFE7
  5953                           postdec1	equ	0xFE5
  5954                           fsr1h	equ	0xFE2
  5955                           fsr1l	equ	0xFE1
  5956                           indf2	equ	0xFDF
  5957                           fsr2h	equ	0xFDA
  5958                           fsr2l	equ	0xFD9
  5959                           status	equ	0xFD8
  5960                           
  5961 ;; *************** function _NVMInit *****************
  5962 ;; Defined at:
  5963 ;;		line 631 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;		None
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  result          1   14[BANK0 ] unsigned char 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      unsigned char 
  5970 ;; Registers used:
  5971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : F/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5978 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5980 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5981 ;;Total ram usage:        1 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    9
  5984 ;; This function calls:
  5985 ;;		_NVMalloc
  5986 ;; This function is called by:
  5987 ;;		_MiApp_ProtocolInit
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text21
  5992  0025EE                     __ptext21:
  5993                           	opt stack 0
  5994  0025EE                     _NVMInit:
  5995                           	opt stack 19
  5996                           
  5997                           ;miwi_nvm.c: 633: bool result = 1;
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;incstack = 0
  6001  0025EE  0E01               	movlw	1
  6002  0025F0  0100               	movlb	0	; () banked
  6003  0025F2  6F6E               	movwf	NVMInit@result& (0+255),b
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;miwi_nvm.c: 635: nextEEPosition = 0;
  6007  0025F4  6BD9               	clrf	_nextEEPosition& (0+255),b
  6008  0025F6  6BDA               	clrf	(_nextEEPosition+1)& (0+255),b
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;miwi_nvm.c: 637: result &= NVMalloc(2, &nvmMyPANID);
  6012  0025F8  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  6013  0025FA  0E02               	movlw	2
  6014  0025FC  6F69               	movwf	NVMalloc@size& (0+255),b
  6015  0025FE  0EEE               	movlw	low _nvmMyPANID
  6016  002600  6F6B               	movwf	NVMalloc@location& (0+255),b
  6017  002602  EC77  F018         	call	_NVMalloc	;wreg free
  6018  002606  176E               	andwf	NVMInit@result& (0+255),f,b
  6019                           
  6020                           ; BSR set to: 0
  6021                           ;miwi_nvm.c: 638: result &= NVMalloc(1, &nvmCurrentChannel);
  6022  002608  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  6023  00260A  0E01               	movlw	1
  6024  00260C  6F69               	movwf	NVMalloc@size& (0+255),b
  6025  00260E  0E55               	movlw	low _nvmCurrentChannel
  6026  002610  6F6B               	movwf	NVMalloc@location& (0+255),b
  6027  002612  EC77  F018         	call	_NVMalloc	;wreg free
  6028  002616  176E               	andwf	NVMInit@result& (0+255),f,b
  6029                           
  6030                           ; BSR set to: 0
  6031                           ;miwi_nvm.c: 639: result &= NVMalloc(1, &nvmConnMode);
  6032  002618  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  6033  00261A  0E01               	movlw	1
  6034  00261C  6F69               	movwf	NVMalloc@size& (0+255),b
  6035  00261E  0E51               	movlw	low _nvmConnMode
  6036  002620  6F6B               	movwf	NVMalloc@location& (0+255),b
  6037  002622  EC77  F018         	call	_NVMalloc	;wreg free
  6038  002626  176E               	andwf	NVMInit@result& (0+255),f,b
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;miwi_nvm.c: 640: result &= NVMalloc(sizeof(CONNECTION_ENTRY) * 10, &nvmConnectionTable)
      +                          ;
  6042  002628  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  6043  00262A  0E8C               	movlw	140
  6044  00262C  6F69               	movwf	NVMalloc@size& (0+255),b
  6045  00262E  0E53               	movlw	low _nvmConnectionTable
  6046  002630  6F6B               	movwf	NVMalloc@location& (0+255),b
  6047  002632  EC77  F018         	call	_NVMalloc	;wreg free
  6048  002636  176E               	andwf	NVMInit@result& (0+255),f,b
  6049                           
  6050                           ; BSR set to: 0
  6051                           ;miwi_nvm.c: 641: result &= NVMalloc(4, &nvmOutFrameCounter);
  6052  002638  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  6053  00263A  0E04               	movlw	4
  6054  00263C  6F69               	movwf	NVMalloc@size& (0+255),b
  6055  00263E  0E59               	movlw	low _nvmOutFrameCounter
  6056  002640  6F6B               	movwf	NVMalloc@location& (0+255),b
  6057  002642  EC77  F018         	call	_NVMalloc	;wreg free
  6058  002646  176E               	andwf	NVMInit@result& (0+255),f,b
  6059                           
  6060                           ; BSR set to: 0
  6061                           ;miwi_nvm.c: 642: result &= NVMalloc(1,&nvmEdc);
  6062  002648  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  6063  00264A  0E01               	movlw	1
  6064  00264C  6F69               	movwf	NVMalloc@size& (0+255),b
  6065  00264E  0E57               	movlw	low _nvmEdc
  6066  002650  6F6B               	movwf	NVMalloc@location& (0+255),b
  6067  002652  EC77  F018         	call	_NVMalloc	;wreg free
  6068  002656  176E               	andwf	NVMInit@result& (0+255),f,b
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;miwi_nvm.c: 645: result &= NVMalloc(1,&nvmRole);
  6072  002658  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  6073  00265A  0E01               	movlw	1
  6074  00265C  6F69               	movwf	NVMalloc@size& (0+255),b
  6075  00265E  0E5B               	movlw	low _nvmRole
  6076  002660  6F6B               	movwf	NVMalloc@location& (0+255),b
  6077  002662  EC77  F018         	call	_NVMalloc	;wreg free
  6078  002666  176E               	andwf	NVMInit@result& (0+255),f,b
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;miwi_nvm.c: 646: result &= NVMalloc(1,&nvmmyIndex);
  6082  002668  6B6A               	clrf	(NVMalloc@size+1)& (0+255),b
  6083  00266A  0E01               	movlw	1
  6084  00266C  6F69               	movwf	NVMalloc@size& (0+255),b
  6085  00266E  0E5D               	movlw	low _nvmmyIndex
  6086  002670  6F6B               	movwf	NVMalloc@location& (0+255),b
  6087  002672  EC77  F018         	call	_NVMalloc	;wreg free
  6088  002676  176E               	andwf	NVMInit@result& (0+255),f,b
  6089                           
  6090                           ; BSR set to: 0
  6091  002678  0012               	return		;funcret
  6092  00267A                     __end_of_NVMInit:
  6093                           	opt stack 0
  6094                           tblptru	equ	0xFF8
  6095                           tblptrh	equ	0xFF7
  6096                           tblptrl	equ	0xFF6
  6097                           tablat	equ	0xFF5
  6098                           prodh	equ	0xFF4
  6099                           prodl	equ	0xFF3
  6100                           intcon	equ	0xFF2
  6101                           intcon2	equ	0xFF1
  6102                           intcon3	equ	0xFF0
  6103                           postinc0	equ	0xFEE
  6104                           wreg	equ	0xFE8
  6105                           indf1	equ	0xFE7
  6106                           postdec1	equ	0xFE5
  6107                           fsr1h	equ	0xFE2
  6108                           fsr1l	equ	0xFE1
  6109                           indf2	equ	0xFDF
  6110                           fsr2h	equ	0xFDA
  6111                           fsr2l	equ	0xFD9
  6112                           status	equ	0xFD8
  6113                           
  6114 ;; *************** function _NVMalloc *****************
  6115 ;; Defined at:
  6116 ;;		line 616 in file "../../../../../framework/miwi/src/miwi_nvm.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  size            2    9[BANK0 ] unsigned int 
  6119 ;;  location        1   11[BANK0 ] PTR unsigned int 
  6120 ;;		 -> nvmmyIndex(2), nvmRole(2), nvmEdc(2), nvmOutFrameCounter(2), 
  6121 ;;		 -> nvmConnectionTable(2), nvmConnMode(2), nvmCurrentChannel(2), nvmMyPANID(2), 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;		None
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      unsigned char 
  6126 ;; Registers used:
  6127 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6128 ;; Tracked objects:
  6129 ;;		On entry : F/0
  6130 ;;		On exit  : F/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6133 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6135 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6136 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6137 ;;Total ram usage:        5 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    8
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_NVMInit
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text22
  6148  0030EE                     __ptext22:
  6149                           	opt stack 0
  6150  0030EE                     _NVMalloc:
  6151                           	opt stack 19
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;miwi_nvm.c: 620: if ((nextEEPosition + size) > 32768)
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;incstack = 0
  6158  0030EE  5169               	movf	NVMalloc@size& (0+255),w,b
  6159  0030F0  25D9               	addwf	_nextEEPosition& (0+255),w,b
  6160  0030F2  6F6C               	movwf	??_NVMalloc& (0+255),b
  6161  0030F4  516A               	movf	(NVMalloc@size+1)& (0+255),w,b
  6162  0030F6  21DA               	addwfc	(_nextEEPosition+1)& (0+255),w,b
  6163  0030F8  6F6D               	movwf	(??_NVMalloc+1)& (0+255),b
  6164  0030FA  056C               	decf	??_NVMalloc& (0+255),w,b
  6165  0030FC  0E80               	movlw	128
  6166  0030FE  596D               	subwfb	(??_NVMalloc+1)& (0+255),w,b
  6167  003100  E301               	bnc	l6270
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;miwi_nvm.c: 621: {
  6171                           ;miwi_nvm.c: 622: return 0;
  6172  003102  0C00               	retlw	0
  6173  003104                     l6270:
  6174                           
  6175                           ; BSR set to: 0
  6176                           ;miwi_nvm.c: 623: }
  6177                           ;miwi_nvm.c: 625: *location = nextEEPosition;
  6178  003104  516B               	movf	NVMalloc@location& (0+255),w,b
  6179  003106  6ED9               	movwf	fsr2l,c
  6180  003108  6ADA               	clrf	fsr2h,c
  6181  00310A  C0D9  FFDE         	movff	_nextEEPosition,postinc2
  6182  00310E  C0DA  FFDD         	movff	_nextEEPosition+1,postdec2
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;miwi_nvm.c: 626: nextEEPosition += size;
  6186  003112  5169               	movf	NVMalloc@size& (0+255),w,b
  6187  003114  27D9               	addwf	_nextEEPosition& (0+255),f,b
  6188  003116  516A               	movf	(NVMalloc@size+1)& (0+255),w,b
  6189  003118  23DA               	addwfc	(_nextEEPosition+1)& (0+255),f,b
  6190                           
  6191                           ; BSR set to: 0
  6192                           
  6193                           ; BSR set to: 0
  6194                           ;miwi_nvm.c: 627: return 1;
  6195  00311A  0C01               	retlw	1	;funcret
  6196  00311C                     __end_of_NVMalloc:
  6197                           	opt stack 0
  6198                           tblptru	equ	0xFF8
  6199                           tblptrh	equ	0xFF7
  6200                           tblptrl	equ	0xFF6
  6201                           tablat	equ	0xFF5
  6202                           prodh	equ	0xFF4
  6203                           prodl	equ	0xFF3
  6204                           intcon	equ	0xFF2
  6205                           intcon2	equ	0xFF1
  6206                           intcon3	equ	0xFF0
  6207                           postinc0	equ	0xFEE
  6208                           wreg	equ	0xFE8
  6209                           indf1	equ	0xFE7
  6210                           postdec1	equ	0xFE5
  6211                           fsr1h	equ	0xFE2
  6212                           fsr1l	equ	0xFE1
  6213                           indf2	equ	0xFDF
  6214                           postinc2	equ	0xFDE
  6215                           postdec2	equ	0xFDD
  6216                           fsr2h	equ	0xFDA
  6217                           fsr2l	equ	0xFD9
  6218                           status	equ	0xFD8
  6219                           
  6220 ;; *************** function _MiMAC_Init *****************
  6221 ;; Defined at:
  6222 ;;		line 579 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;  initValue       3   23[BANK0 ] struct .
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;  i               1   26[BANK0 ] unsigned char 
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      unsigned char 
  6229 ;; Registers used:
  6230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6231 ;; Tracked objects:
  6232 ;;		On entry : F/0
  6233 ;;		On exit  : F/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6236 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6237 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6239 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6240 ;;Total ram usage:        4 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; Hardware stack levels required when called:   11
  6243 ;; This function calls:
  6244 ;;		_DELAY_ms
  6245 ;;		_RegisterSet
  6246 ;;		_SetRFMode
  6247 ;; This function is called by:
  6248 ;;		_MiApp_ProtocolInit
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text23
  6253  00238E                     __ptext23:
  6254                           	opt stack 0
  6255  00238E                     _MiMAC_Init:
  6256                           	opt stack 17
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;drv_mrf_miwi_89xa.c: 581: uint8_t i;
  6260                           ;drv_mrf_miwi_89xa.c: 583: MACInitParams = initValue;
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;incstack = 0
  6264  00238E  C077  F0D6         	movff	MiMAC_Init@initValue,_MACInitParams
  6265  002392  C078  F0D7         	movff	MiMAC_Init@initValue+1,_MACInitParams+1
  6266  002396  C079  F0D8         	movff	MiMAC_Init@initValue+2,_MACInitParams+2
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;drv_mrf_miwi_89xa.c: 585: DELAY_ms(20);
  6270  00239A  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
  6271  00239C  0E14               	movlw	20
  6272  00239E  6F69               	movwf	DELAY_ms@ms& (0+255),b
  6273  0023A0  ECFE  F00F         	call	_DELAY_ms	;wreg free
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;drv_mrf_miwi_89xa.c: 586: LATDbits.LATD1 = 1;
  6277  0023A4  828C               	bsf	3980,1,c	;volatile
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;drv_mrf_miwi_89xa.c: 587: LATAbits.LATA5 = 1;
  6281  0023A6  8A89               	bsf	3977,5,c	;volatile
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;drv_mrf_miwi_89xa.c: 590: MACSeq = TMR0L;
  6285  0023A8  CFD6 F0DD          	movff	4054,_MACSeq	;volatile
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;drv_mrf_miwi_89xa.c: 591: ReceivedBankIndex = 0xFF;
  6289  0023AC  69E3               	setf	_ReceivedBankIndex& (0+255),b
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;drv_mrf_miwi_89xa.c: 593: for(i = 0; i < 2; i++)
  6293  0023AE  6B7A               	clrf	MiMAC_Init@i& (0+255),b
  6294  0023B0                     l9024:
  6295                           
  6296                           ; BSR set to: 0
  6297                           ;drv_mrf_miwi_89xa.c: 594: {
  6298                           ;drv_mrf_miwi_89xa.c: 595: RxPacket[i].flags.Val = 0;
  6299  0023B0  517A               	movf	MiMAC_Init@i& (0+255),w,b
  6300  0023B2  0D39               	mullw	57
  6301  0023B4  0E8C               	movlw	low _RxPacket
  6302  0023B6  24F3               	addwf	prodl,w,c
  6303  0023B8  6ED9               	movwf	fsr2l,c
  6304  0023BA  0E02               	movlw	high _RxPacket
  6305  0023BC  20F4               	addwfc	prodh,w,c
  6306  0023BE  6EDA               	movwf	fsr2h,c
  6307  0023C0  6ADF               	clrf	indf2,c
  6308                           
  6309                           ; BSR set to: 0
  6310  0023C2  2B7A               	incf	MiMAC_Init@i& (0+255),f,b
  6311                           
  6312                           ; BSR set to: 0
  6313  0023C4  0E01               	movlw	1
  6314  0023C6  657A               	cpfsgt	MiMAC_Init@i& (0+255),b
  6315  0023C8  D7F3               	goto	l9024
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;drv_mrf_miwi_89xa.c: 596: }
  6319                           ;drv_mrf_miwi_89xa.c: 630: for (i = 0 ; i <= 31; i++)
  6320  0023CA  6B7A               	clrf	MiMAC_Init@i& (0+255),b
  6321  0023CC                     l9034:
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;drv_mrf_miwi_89xa.c: 631: {
  6325                           ;drv_mrf_miwi_89xa.c: 632: RegisterSet(InitConfigRegs[i]);
  6326  0023CC  517A               	movf	MiMAC_Init@i& (0+255),w,b
  6327  0023CE  0D02               	mullw	2
  6328  0023D0  0EEF               	movlw	low _InitConfigRegs
  6329  0023D2  24F3               	addwf	prodl,w,c
  6330  0023D4  6EF6               	movwf	tblptrl,c
  6331  0023D6  0EFC               	movlw	high _InitConfigRegs
  6332  0023D8  20F4               	addwfc	prodh,w,c
  6333  0023DA  6EF7               	movwf	tblptrh,c
  6334  0023DC                     	if	0	;There are less than 3 active tblptr bytes
  6335  0023DC                     	endif
  6336  0023DC  0009               	tblrd		*+
  6337  0023DE  CFF5 F06A          	movff	tablat,RegisterSet@setting
  6338  0023E2  000A               	tblrd		*-
  6339  0023E4  CFF5 F06B          	movff	tablat,RegisterSet@setting+1
  6340  0023E8  EC36  F017         	call	_RegisterSet	;wreg free
  6341  0023EC  0100               	movlb	0	; () banked
  6342  0023EE  2B7A               	incf	MiMAC_Init@i& (0+255),f,b
  6343                           
  6344                           ; BSR set to: 0
  6345  0023F0  0E1F               	movlw	31
  6346  0023F2  657A               	cpfsgt	MiMAC_Init@i& (0+255),b
  6347  0023F4  D7EB               	goto	l9034
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;drv_mrf_miwi_89xa.c: 633: }
  6351                           ;drv_mrf_miwi_89xa.c: 634: SetRFMode(0x20);
  6352  0023F6  0E20               	movlw	32
  6353  0023F8  ECC2  F014         	call	_SetRFMode
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;drv_mrf_miwi_89xa.c: 635: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
  6357  0023FC  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
  6358  0023FE  0E46               	movlw	70
  6359  002400  6F6A               	movwf	RegisterSet@setting& (0+255),b
  6360  002402  EC36  F017         	call	_RegisterSet	;wreg free
  6361                           
  6362                           ;drv_mrf_miwi_89xa.c: 636: SetRFMode(0x40);
  6363  002406  0E40               	movlw	64
  6364  002408  ECC2  F014         	call	_SetRFMode
  6365                           
  6366                           ;drv_mrf_miwi_89xa.c: 640: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  6367  00240C  0E1C               	movlw	28
  6368  00240E  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
  6369  002410  0E0F               	movlw	15
  6370  002412  6F6A               	movwf	RegisterSet@setting& (0+255),b
  6371  002414  EC36  F017         	call	_RegisterSet	;wreg free
  6372                           
  6373                           ;drv_mrf_miwi_89xa.c: 642: SetRFMode(0x60);
  6374  002418  0E60               	movlw	96
  6375  00241A  ECC2  F014         	call	_SetRFMode
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;drv_mrf_miwi_89xa.c: 644: INTCONbits.INT0IF = 0;
  6379  00241E  92F2               	bcf	intcon,1,c	;volatile
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;drv_mrf_miwi_89xa.c: 645: INTCONbits.INT0IE = 1;
  6383  002420  88F2               	bsf	intcon,4,c	;volatile
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;drv_mrf_miwi_89xa.c: 647: INTCON3bits.INT1IF = 0;
  6387  002422  90F0               	bcf	intcon3,0,c	;volatile
  6388                           
  6389                           ; BSR set to: 0
  6390                           ;drv_mrf_miwi_89xa.c: 648: INTCON3bits.INT1IE = 1;
  6391  002424  86F0               	bsf	intcon3,3,c	;volatile
  6392                           
  6393                           ; BSR set to: 0
  6394  002426  0012               	return		;funcret
  6395  002428                     __end_of_MiMAC_Init:
  6396                           	opt stack 0
  6397                           tblptru	equ	0xFF8
  6398                           tblptrh	equ	0xFF7
  6399                           tblptrl	equ	0xFF6
  6400                           tablat	equ	0xFF5
  6401                           prodh	equ	0xFF4
  6402                           prodl	equ	0xFF3
  6403                           intcon	equ	0xFF2
  6404                           intcon2	equ	0xFF1
  6405                           intcon3	equ	0xFF0
  6406                           postinc0	equ	0xFEE
  6407                           wreg	equ	0xFE8
  6408                           indf1	equ	0xFE7
  6409                           postdec1	equ	0xFE5
  6410                           fsr1h	equ	0xFE2
  6411                           fsr1l	equ	0xFE1
  6412                           indf2	equ	0xFDF
  6413                           postinc2	equ	0xFDE
  6414                           postdec2	equ	0xFDD
  6415                           fsr2h	equ	0xFDA
  6416                           fsr2l	equ	0xFD9
  6417                           status	equ	0xFD8
  6418                           
  6419 ;; *************** function _EEPROM_Read *****************
  6420 ;; Defined at:
  6421 ;;		line 56 in file "../src/system_config/miwikit_pic18f46j50_89xa/eeprom.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  dest            2   10[BANK0 ] PTR unsigned char 
  6424 ;;		 -> myConnectionIndex_in_PanCo(1), currentChannel(1), ConnMode(1), myLongAddress(8), 
  6425 ;;		 -> role(1), conn_size(1), ConnectionTable(140), 
  6426 ;;  addr            1   12[BANK0 ] unsigned char 
  6427 ;;  count           1   13[BANK0 ] unsigned char 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;		None               void
  6432 ;; Registers used:
  6433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : F/0
  6436 ;;		On exit  : F/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6442 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6443 ;;Total ram usage:        4 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:   10
  6446 ;; This function calls:
  6447 ;;		_SPIGet2
  6448 ;;		_SPIPut2
  6449 ;; This function is called by:
  6450 ;;		_MiApp_ProtocolInit
  6451 ;;		_Read_MAC_Address
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text24
  6456  0030BC                     __ptext24:
  6457                           	opt stack 0
  6458  0030BC                     _EEPROM_Read:
  6459                           	opt stack 18
  6460                           
  6461                           ; BSR set to: 0
  6462                           ;eeprom.c: 58: LATDbits.LATD5 = 0;
  6463                           
  6464                           ; BSR set to: 0
  6465                           ;incstack = 0
  6466  0030BC  9A8C               	bcf	3980,5,c	;volatile
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;eeprom.c: 59: SPIPut2(0x03);
  6470  0030BE  0E03               	movlw	3
  6471  0030C0  EC75  F019         	call	_SPIPut2
  6472                           
  6473                           ;eeprom.c: 60: SPIPut2(addr);
  6474  0030C4  0100               	movlb	0	; () banked
  6475  0030C6  516C               	movf	EEPROM_Read@addr& (0+255),w,b
  6476  0030C8  EC75  F019         	call	_SPIPut2
  6477                           
  6478                           ;eeprom.c: 61: while( count )
  6479  0030CC  D00B               	goto	l9070
  6480  0030CE                     l9064:
  6481                           
  6482                           ; BSR set to: 0
  6483                           ;eeprom.c: 62: {
  6484                           ;eeprom.c: 63: *dest++ = SPIGet2();
  6485  0030CE  ECD5  F019         	call	_SPIGet2	;wreg free
  6486  0030D2  C06A  FFD9         	movff	EEPROM_Read@dest,fsr2l
  6487  0030D6  C06B  FFDA         	movff	EEPROM_Read@dest+1,fsr2h
  6488  0030DA  6EDF               	movwf	indf2,c
  6489  0030DC  0100               	movlb	0	; () banked
  6490  0030DE  4B6A               	infsnz	EEPROM_Read@dest& (0+255),f,b
  6491  0030E0  2B6B               	incf	(EEPROM_Read@dest+1)& (0+255),f,b
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;eeprom.c: 64: count--;
  6495  0030E2  076D               	decf	EEPROM_Read@count& (0+255),f,b
  6496  0030E4                     l9070:
  6497  0030E4  0100               	movlb	0	; () banked
  6498  0030E6  516D               	movf	EEPROM_Read@count& (0+255),w,b
  6499  0030E8  E1F2               	bnz	l9064
  6500                           
  6501                           ; BSR set to: 0
  6502                           ;eeprom.c: 65: }
  6503                           ;eeprom.c: 66: LATDbits.LATD5 = 1;
  6504  0030EA  8A8C               	bsf	3980,5,c	;volatile
  6505                           
  6506                           ; BSR set to: 0
  6507  0030EC  0012               	return		;funcret
  6508  0030EE                     __end_of_EEPROM_Read:
  6509                           	opt stack 0
  6510                           tblptru	equ	0xFF8
  6511                           tblptrh	equ	0xFF7
  6512                           tblptrl	equ	0xFF6
  6513                           tablat	equ	0xFF5
  6514                           prodh	equ	0xFF4
  6515                           prodl	equ	0xFF3
  6516                           intcon	equ	0xFF2
  6517                           intcon2	equ	0xFF1
  6518                           intcon3	equ	0xFF0
  6519                           postinc0	equ	0xFEE
  6520                           wreg	equ	0xFE8
  6521                           indf1	equ	0xFE7
  6522                           postdec1	equ	0xFE5
  6523                           fsr1h	equ	0xFE2
  6524                           fsr1l	equ	0xFE1
  6525                           indf2	equ	0xFDF
  6526                           postinc2	equ	0xFDE
  6527                           postdec2	equ	0xFDD
  6528                           fsr2h	equ	0xFDA
  6529                           fsr2l	equ	0xFD9
  6530                           status	equ	0xFD8
  6531                           
  6532 ;; *************** function _MiApp_EstablishConnection *****************
  6533 ;; Defined at:
  6534 ;;		line 2260 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  ActiveScanIn    1    wreg     unsigned char 
  6537 ;;  Mode            1   89[BANK0 ] unsigned char 
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;  ActiveScanIn    1    0[COMRAM] unsigned char 
  6540 ;;  i               1  105[BANK0 ] unsigned char 
  6541 ;;  t2              4  101[BANK0 ] struct _MIWI_TICK
  6542 ;;  t1              4   96[BANK0 ] struct _MIWI_TICK
  6543 ;;  connectionIn    1  100[BANK0 ] unsigned char 
  6544 ;;  retry           1   95[BANK0 ] unsigned char 
  6545 ;;  tmpConnectio    1   94[BANK0 ] unsigned char 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1    wreg      unsigned char 
  6548 ;; Registers used:
  6549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : F/0
  6552 ;;		On exit  : F/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6555 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6556 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6557 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6558 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6559 ;;Total ram usage:       17 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:   19
  6562 ;; This function calls:
  6563 ;;		_MiApp_DiscardMessage
  6564 ;;		_MiApp_MessageAvailable
  6565 ;;		_MiWi_TickGet
  6566 ;;		_SendPacket
  6567 ;; This function is called by:
  6568 ;;		_Initialize_Demo
  6569 ;;		_run_star_demo
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text25
  6574  00190E                     __ptext25:
  6575                           	opt stack 0
  6576  00190E                     _MiApp_EstablishConnection:
  6577                           	opt stack 9
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;miwi_p2p.c: 2262: uint8_t tmpConnectionMode = ConnMode;
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;incstack = 0
  6584  00190E  C0F5  F0BE         	movff	_ConnMode,MiApp_EstablishConnection@tmpConnectionMode
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;miwi_p2p.c: 2263: uint8_t retry = 10;
  6588  001912  0E0A               	movlw	10
  6589  001914  6FBF               	movwf	MiApp_EstablishConnection@retry& (0+255),b
  6590                           
  6591                           ; BSR set to: 0
  6592                           ;miwi_p2p.c: 2264: uint8_t connectionInterval = 0;
  6593  001916  6BC4               	clrf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6594                           
  6595                           ; BSR set to: 0
  6596                           ;miwi_p2p.c: 2265: MIWI_TICK t1, t2;
  6597                           ;miwi_p2p.c: 2266: tick1 = MiWi_TickGet();
  6598  001918  EC31  F016         	call	_MiWi_TickGet	;wreg free
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;miwi_p2p.c: 2267: if( Mode == 0x01 )
  6602  00191C  05B9               	decf	MiApp_EstablishConnection@Mode& (0+255),w,b
  6603  00191E  E101               	bnz	l9138
  6604                           
  6605                           ; BSR set to: 0
  6606                           ;miwi_p2p.c: 2268: {
  6607                           ;miwi_p2p.c: 2269: return 0xFF;
  6608  001920  0CFF               	retlw	255
  6609  001922                     l9138:
  6610                           
  6611                           ; BSR set to: 0
  6612                           ;miwi_p2p.c: 2270: }
  6613                           ;miwi_p2p.c: 2272: t1 = MiWi_TickGet();
  6614  001922  EC31  F016         	call	_MiWi_TickGet	;wreg free
  6615  001926  C069  F0C0         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t1
  6616  00192A  C06A  F0C1         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t1+1
  6617  00192E  C06B  F0C2         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t1+2
  6618  001932  C06C  F0C3         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t1+3
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;miwi_p2p.c: 2274: t1.Val -= (((uint32_t)(16000000)/32));
  6622  001936  0E20               	movlw	32
  6623  001938  5FC0               	subwf	MiApp_EstablishConnection@t1& (0+255),f,b
  6624  00193A  0EA1               	movlw	161
  6625  00193C  5BC1               	subwfb	(MiApp_EstablishConnection@t1+1)& (0+255),f,b
  6626  00193E  0E07               	movlw	7
  6627  001940  5BC2               	subwfb	(MiApp_EstablishConnection@t1+2)& (0+255),f,b
  6628  001942  0E00               	movlw	0
  6629  001944  5BC3               	subwfb	(MiApp_EstablishConnection@t1+3)& (0+255),f,b
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;miwi_p2p.c: 2275: ConnMode = 0x00;
  6633  001946  6BF5               	clrf	_ConnMode& (0+255),b
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;miwi_p2p.c: 2276: P2PStatus.bits.SearchConnection = 1;
  6637  001948  89DF               	bsf	_P2PStatus& (0+255),4,b	;volatile
  6638                           
  6639                           ;miwi_p2p.c: 2277: while( P2PStatus.bits.SearchConnection )
  6640  00194A  D074               	goto	l9198
  6641  00194C                     l9146:
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;miwi_p2p.c: 2278: {
  6645                           ;miwi_p2p.c: 2279: t2 = MiWi_TickGet();
  6646  00194C  EC31  F016         	call	_MiWi_TickGet	;wreg free
  6647  001950  C069  F0C5         	movff	?_MiWi_TickGet,MiApp_EstablishConnection@t2
  6648  001954  C06A  F0C6         	movff	?_MiWi_TickGet+1,MiApp_EstablishConnection@t2+1
  6649  001958  C06B  F0C7         	movff	?_MiWi_TickGet+2,MiApp_EstablishConnection@t2+2
  6650  00195C  C06C  F0C8         	movff	?_MiWi_TickGet+3,MiApp_EstablishConnection@t2+3
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;miwi_p2p.c: 2280: if( (t2.Val - t1.Val) > (((uint32_t)(16000000)/32)) )
  6654  001960  51C0               	movf	MiApp_EstablishConnection@t1& (0+255),w,b
  6655  001962  5DC5               	subwf	MiApp_EstablishConnection@t2& (0+255),w,b
  6656  001964  6FBA               	movwf	??_MiApp_EstablishConnection& (0+255),b
  6657  001966  51C1               	movf	(MiApp_EstablishConnection@t1+1)& (0+255),w,b
  6658  001968  59C6               	subwfb	(MiApp_EstablishConnection@t2+1)& (0+255),w,b
  6659  00196A  6FBB               	movwf	(??_MiApp_EstablishConnection+1)& (0+255),b
  6660  00196C  51C2               	movf	(MiApp_EstablishConnection@t1+2)& (0+255),w,b
  6661  00196E  59C7               	subwfb	(MiApp_EstablishConnection@t2+2)& (0+255),w,b
  6662  001970  6FBC               	movwf	(??_MiApp_EstablishConnection+2)& (0+255),b
  6663  001972  51C3               	movf	(MiApp_EstablishConnection@t1+3)& (0+255),w,b
  6664  001974  59C8               	subwfb	(MiApp_EstablishConnection@t2+3)& (0+255),w,b
  6665  001976  6FBD               	movwf	(??_MiApp_EstablishConnection+3)& (0+255),b
  6666  001978  51BD               	movf	(??_MiApp_EstablishConnection+3)& (0+255),w,b
  6667  00197A  E107               	bnz	u8880
  6668  00197C  0E21               	movlw	33
  6669  00197E  5DBA               	subwf	??_MiApp_EstablishConnection& (0+255),w,b
  6670  001980  0EA1               	movlw	161
  6671  001982  59BB               	subwfb	(??_MiApp_EstablishConnection+1)& (0+255),w,b
  6672  001984  0E07               	movlw	7
  6673  001986  59BC               	subwfb	(??_MiApp_EstablishConnection+2)& (0+255),w,b
  6674  001988  E34F               	bnc	l9194
  6675  00198A                     u8880:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;miwi_p2p.c: 2281: {
  6679                           ;miwi_p2p.c: 2282: t1.Val = t2.Val;
  6680  00198A  C0C5  F0C0         	movff	MiApp_EstablishConnection@t2,MiApp_EstablishConnection@t1
  6681  00198E  C0C6  F0C1         	movff	MiApp_EstablishConnection@t2+1,MiApp_EstablishConnection@t1+1
  6682  001992  C0C7  F0C2         	movff	MiApp_EstablishConnection@t2+2,MiApp_EstablishConnection@t1+2
  6683  001996  C0C8  F0C3         	movff	MiApp_EstablishConnection@t2+3,MiApp_EstablishConnection@t1+3
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;miwi_p2p.c: 2284: if( connectionInterval-- > 0 )
  6687  00199A  07C4               	decf	MiApp_EstablishConnection@connectionInterval& (0+255),f,b
  6688  00199C  29C4               	incf	MiApp_EstablishConnection@connectionInterval& (0+255),w,b
  6689  00199E  E14A               	bnz	l9198
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;miwi_p2p.c: 2287: }
  6693                           ;miwi_p2p.c: 2288: connectionInterval = 2-1;
  6694  0019A0  0E01               	movlw	1
  6695  0019A2  6FC4               	movwf	MiApp_EstablishConnection@connectionInterval& (0+255),b
  6696                           
  6697                           ; BSR set to: 0
  6698                           ;miwi_p2p.c: 2289: if( retry-- == 0 )
  6699  0019A4  07BF               	decf	MiApp_EstablishConnection@retry& (0+255),f,b
  6700  0019A6  29BF               	incf	MiApp_EstablishConnection@retry& (0+255),w,b
  6701  0019A8  E102               	bnz	l614
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;miwi_p2p.c: 2290: {
  6705                           ;miwi_p2p.c: 2292: P2PStatus.bits.SearchConnection = 0;
  6706  0019AA  99DF               	bcf	_P2PStatus& (0+255),4,b	;volatile
  6707  0019AC  0CFF               	retlw	255
  6708  0019AE                     l614:
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;miwi_p2p.c: 2294: }
  6712                           ;miwi_p2p.c: 2295: {TxData = 0;};
  6713  0019AE  6BE5               	clrf	_TxData& (0+255),b
  6714                           
  6715                           ; BSR set to: 0
  6716                           ;miwi_p2p.c: 2296: TxBuffer[TxData++] = 0x81;
  6717  0019B0  0E95               	movlw	low _TxBuffer
  6718  0019B2  25E5               	addwf	_TxData& (0+255),w,b
  6719  0019B4  6ED9               	movwf	fsr2l,c
  6720  0019B6  6ADA               	clrf	fsr2h,c
  6721  0019B8  0E01               	movlw	high _TxBuffer
  6722  0019BA  22DA               	addwfc	fsr2h,f,c
  6723  0019BC  0E81               	movlw	129
  6724  0019BE  6EDF               	movwf	indf2,c
  6725                           
  6726                           ; BSR set to: 0
  6727  0019C0  2BE5               	incf	_TxData& (0+255),f,b
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;miwi_p2p.c: 2297: TxBuffer[TxData++] = currentChannel;
  6731  0019C2  0E95               	movlw	low _TxBuffer
  6732  0019C4  25E5               	addwf	_TxData& (0+255),w,b
  6733  0019C6  6ED9               	movwf	fsr2l,c
  6734  0019C8  6ADA               	clrf	fsr2h,c
  6735  0019CA  0E01               	movlw	high _TxBuffer
  6736  0019CC  22DA               	addwfc	fsr2h,f,c
  6737  0019CE  C0F1  FFDF         	movff	_currentChannel,indf2
  6738  0019D2  2BE5               	incf	_TxData& (0+255),f,b
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;miwi_p2p.c: 2298: TxBuffer[TxData++] = P2PCapacityInfo;
  6742  0019D4  0E95               	movlw	low _TxBuffer
  6743  0019D6  25E5               	addwf	_TxData& (0+255),w,b
  6744  0019D8  6ED9               	movwf	fsr2l,c
  6745  0019DA  6ADA               	clrf	fsr2h,c
  6746  0019DC  0E01               	movlw	high _TxBuffer
  6747  0019DE  22DA               	addwfc	fsr2h,f,c
  6748  0019E0  C0DE  FFDF         	movff	_P2PCapacityInfo,indf2
  6749                           
  6750                           ; BSR set to: 0
  6751  0019E4  2BE5               	incf	_TxData& (0+255),f,b
  6752                           
  6753                           ;miwi_p2p.c: 2300: {
  6754                           ;miwi_p2p.c: 2301: TxBuffer[TxData++] = 0xAA;
  6755  0019E6  0E95               	movlw	low _TxBuffer
  6756  0019E8  25E5               	addwf	_TxData& (0+255),w,b
  6757  0019EA  6ED9               	movwf	fsr2l,c
  6758  0019EC  6ADA               	clrf	fsr2h,c
  6759  0019EE  0E01               	movlw	high _TxBuffer
  6760  0019F0  22DA               	addwfc	fsr2h,f,c
  6761  0019F2  0EAA               	movlw	170
  6762  0019F4  6EDF               	movwf	indf2,c
  6763                           
  6764                           ; BSR set to: 0
  6765  0019F6  2BE5               	incf	_TxData& (0+255),f,b
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;miwi_p2p.c: 2302: }
  6769                           ;miwi_p2p.c: 2305: {
  6770                           ;miwi_p2p.c: 2306: uint8_t i;
  6771                           ;miwi_p2p.c: 2308: for(i = 0; i < 1; i++)
  6772  0019F8  6BC9               	clrf	MiApp_EstablishConnection@i& (0+255),b
  6773  0019FA                     l9184:
  6774                           
  6775                           ; BSR set to: 0
  6776                           ;miwi_p2p.c: 2309: {
  6777                           ;miwi_p2p.c: 2310: TxBuffer[TxData++] = AdditionalNodeID[i];
  6778  0019FA  51C9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6779  0019FC  0FF3               	addlw	low _AdditionalNodeID
  6780  0019FE  6ED9               	movwf	fsr2l,c
  6781  001A00  6ADA               	clrf	fsr2h,c
  6782  001A02  0E95               	movlw	low _TxBuffer
  6783  001A04  25E5               	addwf	_TxData& (0+255),w,b
  6784  001A06  6EE1               	movwf	fsr1l,c
  6785  001A08  6AE2               	clrf	fsr1h,c
  6786  001A0A  0E01               	movlw	high _TxBuffer
  6787  001A0C  22E2               	addwfc	fsr1h,f,c
  6788  001A0E  CFDF FFE7          	movff	indf2,indf1
  6789                           
  6790                           ; BSR set to: 0
  6791  001A12  2BE5               	incf	_TxData& (0+255),f,b
  6792                           
  6793                           ; BSR set to: 0
  6794  001A14  2BC9               	incf	MiApp_EstablishConnection@i& (0+255),f,b
  6795                           
  6796                           ; BSR set to: 0
  6797  001A16  51C9               	movf	MiApp_EstablishConnection@i& (0+255),w,b
  6798  001A18  E0F0               	bz	l9184
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;miwi_p2p.c: 2311: }
  6802                           ;miwi_p2p.c: 2312: }
  6803                           ;miwi_p2p.c: 2341: SendPacket(1, (0), 1, 0);
  6804  001A1A  6B96               	clrf	SendPacket@DestinationAddress& (0+255),b
  6805  001A1C  6B97               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  6806  001A1E  0E01               	movlw	1
  6807  001A20  6F98               	movwf	SendPacket@isCommand& (0+255),b
  6808  001A22  6B99               	clrf	SendPacket@SecurityEnabled& (0+255),b
  6809  001A24  EC78  F011         	call	_SendPacket
  6810  001A28                     l9194:
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;miwi_p2p.c: 2344: }
  6814                           ;miwi_p2p.c: 2346: if( MiApp_MessageAvailable())
  6815  001A28  ECD0  F019         	call	_MiApp_MessageAvailable	;wreg free
  6816  001A2C  0900               	iorlw	0
  6817  001A2E  E002               	bz	l9198
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;miwi_p2p.c: 2347: {
  6821                           ;miwi_p2p.c: 2348: MiApp_DiscardMessage();
  6822  001A30  ECDA  F019         	call	_MiApp_DiscardMessage	;wreg free
  6823  001A34                     l9198:
  6824                           
  6825                           ; BSR set to: 0
  6826  001A34  B9DF               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  6827  001A36  D78A               	goto	l9146
  6828                           
  6829                           ; BSR set to: 0
  6830                           ;miwi_p2p.c: 2349: }
  6831                           ;miwi_p2p.c: 2351: }
  6832                           ;miwi_p2p.c: 2353: ConnMode = tmpConnectionMode;
  6833  001A38  C0BE  F0F5         	movff	MiApp_EstablishConnection@tmpConnectionMode,_ConnMode
  6834                           
  6835                           ; BSR set to: 0
  6836                           ;miwi_p2p.c: 2360: return LatestConnection;
  6837  001A3C  51DC               	movf	_LatestConnection& (0+255),w,b
  6838                           
  6839                           ; BSR set to: 0
  6840  001A3E  0012               	return		;funcret
  6841  001A40                     __end_of_MiApp_EstablishConnection:
  6842                           	opt stack 0
  6843                           tblptru	equ	0xFF8
  6844                           tblptrh	equ	0xFF7
  6845                           tblptrl	equ	0xFF6
  6846                           tablat	equ	0xFF5
  6847                           prodh	equ	0xFF4
  6848                           prodl	equ	0xFF3
  6849                           intcon	equ	0xFF2
  6850                           intcon2	equ	0xFF1
  6851                           intcon3	equ	0xFF0
  6852                           postinc0	equ	0xFEE
  6853                           wreg	equ	0xFE8
  6854                           indf1	equ	0xFE7
  6855                           postdec1	equ	0xFE5
  6856                           fsr1h	equ	0xFE2
  6857                           fsr1l	equ	0xFE1
  6858                           indf2	equ	0xFDF
  6859                           postinc2	equ	0xFDE
  6860                           postdec2	equ	0xFDD
  6861                           fsr2h	equ	0xFDA
  6862                           fsr2l	equ	0xFD9
  6863                           status	equ	0xFD8
  6864                           
  6865 ;; *************** function _MiApp_MessageAvailable *****************
  6866 ;; Defined at:
  6867 ;;		line 2392 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;		None
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;		None
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  1    wreg      unsigned char 
  6874 ;; Registers used:
  6875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : E/1
  6878 ;;		On exit  : F/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6885 ;;Total ram usage:        0 bytes
  6886 ;; Hardware stack levels used:    1
  6887 ;; Hardware stack levels required when called:   18
  6888 ;; This function calls:
  6889 ;;		_P2PTasks
  6890 ;; This function is called by:
  6891 ;;		_MiApp_UnicastStar
  6892 ;;		_MiApp_EstablishConnection
  6893 ;;		_run_star_demo
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text26
  6898  0033A0                     __ptext26:
  6899                           	opt stack 0
  6900  0033A0                     _MiApp_MessageAvailable:
  6901                           	opt stack 9
  6902                           
  6903                           ;miwi_p2p.c: 2394: P2PTasks();
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;incstack = 0
  6907  0033A0  EC4C  F006         	call	_P2PTasks	;wreg free
  6908                           
  6909                           ; BSR set to: 0
  6910                           ;miwi_p2p.c: 2396: return P2PStatus.bits.RxHasUserData;
  6911  0033A4  B7DF               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  6912  0033A6  0C01               	retlw	1
  6913                           
  6914                           ; BSR set to: 0
  6915  0033A8  0C00               	retlw	0	;funcret
  6916  0033AA                     __end_of_MiApp_MessageAvailable:
  6917                           	opt stack 0
  6918                           tblptru	equ	0xFF8
  6919                           tblptrh	equ	0xFF7
  6920                           tblptrl	equ	0xFF6
  6921                           tablat	equ	0xFF5
  6922                           prodh	equ	0xFF4
  6923                           prodl	equ	0xFF3
  6924                           intcon	equ	0xFF2
  6925                           intcon2	equ	0xFF1
  6926                           intcon3	equ	0xFF0
  6927                           postinc0	equ	0xFEE
  6928                           wreg	equ	0xFE8
  6929                           indf1	equ	0xFE7
  6930                           postdec1	equ	0xFE5
  6931                           fsr1h	equ	0xFE2
  6932                           fsr1l	equ	0xFE1
  6933                           indf2	equ	0xFDF
  6934                           postinc2	equ	0xFDE
  6935                           postdec2	equ	0xFDD
  6936                           fsr2h	equ	0xFDA
  6937                           fsr2l	equ	0xFD9
  6938                           status	equ	0xFD8
  6939                           
  6940 ;; *************** function _P2PTasks *****************
  6941 ;; Defined at:
  6942 ;;		line 344 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;		None
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  final_index     1   87[BANK0 ] unsigned char 
  6947 ;;  FW_Stat         1   82[BANK0 ] unsigned char 
  6948 ;;  tmpTick         4   83[BANK0 ] struct _MIWI_TICK
  6949 ;;  tick3           4    0        struct _MIWI_TICK
  6950 ;;  tick2           4    0        struct _MIWI_TICK
  6951 ;;  i               1   88[BANK0 ] unsigned char 
  6952 ;;  broadcast_st    1    0        unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;		None               void
  6955 ;; Registers used:
  6956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : F/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6963 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6964 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6965 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6966 ;;Total ram usage:       11 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:   17
  6969 ;; This function calls:
  6970 ;;		_AddConnection
  6971 ;;		_EEPROM_Write
  6972 ;;		_Find_Index
  6973 ;;		_Forward_Packet_PANCr_to_EDy
  6974 ;;		_MiMAC_DiscardPacket
  6975 ;;		_MiMAC_ReceivedPacket
  6976 ;;		_MiWi_TickGet
  6977 ;;		_SW_Ack_SrED
  6978 ;;		_SendPacket
  6979 ;;		_StartChannelHopping
  6980 ;;		_isSameAddress
  6981 ;;		_store_connection_tb
  6982 ;; This function is called by:
  6983 ;;		_MiApp_TransceiverPowerState
  6984 ;;		_MiApp_MessageAvailable
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           	psect	text27
  6989  000C98                     __ptext27:
  6990                           	opt stack 0
  6991  000C98                     _P2PTasks:
  6992                           	opt stack 9
  6993                           
  6994                           ;miwi_p2p.c: 346: uint8_t i;
  6995                           ;miwi_p2p.c: 347: MIWI_TICK tmpTick ,tick2 , tick3 ;
  6996                           ;miwi_p2p.c: 348: bool broadcast_status;
  6997                           ;miwi_p2p.c: 351: tick2 = MiWi_TickGet();
  6998                           
  6999                           ; BSR set to: 0
  7000                           ;incstack = 0
  7001  000C98  EC31  F016         	call	_MiWi_TickGet	;wreg free
  7002                           
  7003                           ;miwi_p2p.c: 352: tick3 = MiWi_TickGet();
  7004  000C9C  EC31  F016         	call	_MiWi_TickGet	;wreg free
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;miwi_p2p.c: 411: if( P2PStatus.bits.DataRequesting )
  7008  000CA0  A5DF               	btfss	_P2PStatus& (0+255),2,b	;volatile
  7009  000CA2  D025               	goto	l458
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;miwi_p2p.c: 412: {
  7013                           ;miwi_p2p.c: 413: tmpTick = MiWi_TickGet();
  7014  000CA4  EC31  F016         	call	_MiWi_TickGet	;wreg free
  7015  000CA8  C069  F0B3         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  7016  000CAC  C06A  F0B4         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  7017  000CB0  C06B  F0B5         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  7018  000CB4  C06C  F0B6         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;miwi_p2p.c: 414: if( (tmpTick.Val - DataRequestTimer.Val) > 0x00003FFF )
  7022  000CB8  0101               	movlb	1	; () banked
  7023  000CBA  517D               	movf	_DataRequestTimer& (0+255),w,b
  7024  000CBC  0100               	movlb	0	; () banked
  7025  000CBE  5DB3               	subwf	P2PTasks@tmpTick& (0+255),w,b
  7026  000CC0  6FAE               	movwf	??_P2PTasks& (0+255),b
  7027  000CC2  0101               	movlb	1	; () banked
  7028  000CC4  517E               	movf	(_DataRequestTimer+1)& (0+255),w,b
  7029  000CC6  0100               	movlb	0	; () banked
  7030  000CC8  59B4               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  7031  000CCA  6FAF               	movwf	(??_P2PTasks+1)& (0+255),b
  7032  000CCC  0101               	movlb	1	; () banked
  7033  000CCE  517F               	movf	(_DataRequestTimer+2)& (0+255),w,b
  7034  000CD0  0100               	movlb	0	; () banked
  7035  000CD2  59B5               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  7036  000CD4  6FB0               	movwf	(??_P2PTasks+2)& (0+255),b
  7037  000CD6  0101               	movlb	1	; () banked
  7038  000CD8  5180               	movf	(_DataRequestTimer+3)& (0+255),w,b
  7039  000CDA  0100               	movlb	0	; () banked
  7040  000CDC  59B6               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  7041  000CDE  6FB1               	movwf	(??_P2PTasks+3)& (0+255),b
  7042  000CE0  51B1               	movf	(??_P2PTasks+3)& (0+255),w,b
  7043  000CE2  11B0               	iorwf	(??_P2PTasks+2)& (0+255),w,b
  7044  000CE4  E103               	bnz	u8370
  7045  000CE6  0E40               	movlw	64
  7046  000CE8  5DAF               	subwf	(??_P2PTasks+1)& (0+255),w,b
  7047  000CEA  E301               	bnc	l458
  7048  000CEC                     u8370:
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;miwi_p2p.c: 415: {
  7052                           ;miwi_p2p.c: 419: P2PStatus.bits.DataRequesting = 0;
  7053  000CEC  95DF               	bcf	_P2PStatus& (0+255),2,b	;volatile
  7054  000CEE                     l458:
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;miwi_p2p.c: 424: }
  7058                           ;miwi_p2p.c: 425: }
  7059                           ;miwi_p2p.c: 429: if( P2PStatus.bits.SaveConnection )
  7060  000CEE  A3DF               	btfss	_P2PStatus& (0+255),1,b	;volatile
  7061  000CF0  D032               	goto	l8722
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;miwi_p2p.c: 430: {
  7065                           ;miwi_p2p.c: 431: tmpTick = MiWi_TickGet();
  7066  000CF2  EC31  F016         	call	_MiWi_TickGet	;wreg free
  7067  000CF6  C069  F0B3         	movff	?_MiWi_TickGet,P2PTasks@tmpTick
  7068  000CFA  C06A  F0B4         	movff	?_MiWi_TickGet+1,P2PTasks@tmpTick+1
  7069  000CFE  C06B  F0B5         	movff	?_MiWi_TickGet+2,P2PTasks@tmpTick+2
  7070  000D02  C06C  F0B6         	movff	?_MiWi_TickGet+3,P2PTasks@tmpTick+3
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;miwi_p2p.c: 433: if( (tmpTick.Val - nvmDelayTick.Val) > (((uint32_t)(16000000)/32)) )
  7074  000D06  0101               	movlb	1	; () banked
  7075  000D08  5185               	movf	_nvmDelayTick& (0+255),w,b
  7076  000D0A  0100               	movlb	0	; () banked
  7077  000D0C  5DB3               	subwf	P2PTasks@tmpTick& (0+255),w,b
  7078  000D0E  6FAE               	movwf	??_P2PTasks& (0+255),b
  7079  000D10  0101               	movlb	1	; () banked
  7080  000D12  5186               	movf	(_nvmDelayTick+1)& (0+255),w,b
  7081  000D14  0100               	movlb	0	; () banked
  7082  000D16  59B4               	subwfb	(P2PTasks@tmpTick+1)& (0+255),w,b
  7083  000D18  6FAF               	movwf	(??_P2PTasks+1)& (0+255),b
  7084  000D1A  0101               	movlb	1	; () banked
  7085  000D1C  5187               	movf	(_nvmDelayTick+2)& (0+255),w,b
  7086  000D1E  0100               	movlb	0	; () banked
  7087  000D20  59B5               	subwfb	(P2PTasks@tmpTick+2)& (0+255),w,b
  7088  000D22  6FB0               	movwf	(??_P2PTasks+2)& (0+255),b
  7089  000D24  0101               	movlb	1	; () banked
  7090  000D26  5188               	movf	(_nvmDelayTick+3)& (0+255),w,b
  7091  000D28  0100               	movlb	0	; () banked
  7092  000D2A  59B6               	subwfb	(P2PTasks@tmpTick+3)& (0+255),w,b
  7093  000D2C  6FB1               	movwf	(??_P2PTasks+3)& (0+255),b
  7094  000D2E  51B1               	movf	(??_P2PTasks+3)& (0+255),w,b
  7095  000D30  E107               	bnz	u8390
  7096  000D32  0E21               	movlw	33
  7097  000D34  5DAE               	subwf	??_P2PTasks& (0+255),w,b
  7098  000D36  0EA1               	movlw	161
  7099  000D38  59AF               	subwfb	(??_P2PTasks+1)& (0+255),w,b
  7100  000D3A  0E07               	movlw	7
  7101  000D3C  59B0               	subwfb	(??_P2PTasks+2)& (0+255),w,b
  7102  000D3E  E30B               	bnc	l8722
  7103  000D40                     u8390:
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;miwi_p2p.c: 434: {
  7107                           ;miwi_p2p.c: 435: P2PStatus.bits.SaveConnection = 0;
  7108  000D40  93DF               	bcf	_P2PStatus& (0+255),1,b	;volatile
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;miwi_p2p.c: 436: EEPROM_Write((uint8_t *)ConnectionTable,0x04, (uint16_t)10 * sizeof(CO
      +                          NNECTION_ENTRY));
  7112  000D42  0E00               	movlw	low _ConnectionTable
  7113  000D44  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  7114  000D46  0E02               	movlw	high _ConnectionTable
  7115  000D48  6F6B               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  7116  000D4A  0E04               	movlw	4
  7117  000D4C  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  7118  000D4E  0E8C               	movlw	140
  7119  000D50  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  7120  000D52  EC83  F013         	call	_EEPROM_Write	;wreg free
  7121  000D56                     l8722:
  7122                           
  7123                           ;miwi_p2p.c: 438: }
  7124                           ;miwi_p2p.c: 439: }
  7125                           ;miwi_p2p.c: 457: if( P2PStatus.bits.RxHasUserData == 0 && MiMAC_ReceivedPacket() )
  7126  000D56  0100               	movlb	0	; () banked
  7127  000D58  B7DF               	btfsc	_P2PStatus& (0+255),3,b	;volatile
  7128  000D5A  0012               	return	
  7129                           
  7130                           ; BSR set to: 0
  7131  000D5C  EC6B  F00A         	call	_MiMAC_ReceivedPacket	;wreg free
  7132  000D60  0900               	iorlw	0
  7133  000D62  B4D8               	btfsc	status,2,c
  7134  000D64  0012               	return	
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;miwi_p2p.c: 458: {
  7138                           ;miwi_p2p.c: 459: bool FW_Stat = 0;
  7139  000D66  6BB2               	clrf	P2PTasks@FW_Stat& (0+255),b
  7140                           
  7141                           ;miwi_p2p.c: 460: rxMessage.flags.Val = 0;
  7142  000D68  6BCC               	clrf	_rxMessage& (0+255),b
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;miwi_p2p.c: 461: rxMessage.flags.bits.broadcast = MACRxPacket.flags.bits.broadcast;
  7146  000D6A  A43C               	btfss	_MACRxPacket,2,c
  7147  000D6C  D003               	goto	u8420
  7148  000D6E  6BAE               	clrf	??_P2PTasks& (0+255),b
  7149  000D70  2BAE               	incf	??_P2PTasks& (0+255),f,b
  7150  000D72  D002               	goto	u8428
  7151  000D74                     u8420:
  7152  000D74  0100               	movlb	0	; () banked
  7153  000D76  6BAE               	clrf	??_P2PTasks& (0+255),b
  7154  000D78                     u8428:
  7155  000D78  51CC               	movf	_rxMessage& (0+255),w,b
  7156  000D7A  19AE               	xorwf	??_P2PTasks& (0+255),w,b
  7157  000D7C  0BFC               	andlw	-4
  7158  000D7E  19AE               	xorwf	??_P2PTasks& (0+255),w,b
  7159  000D80  6FCC               	movwf	_rxMessage& (0+255),b
  7160                           
  7161                           ; BSR set to: 0
  7162                           ;miwi_p2p.c: 462: rxMessage.flags.bits.secEn = MACRxPacket.flags.bits.secEn;
  7163  000D82  A63C               	btfss	_MACRxPacket,3,c
  7164  000D84  D002               	bra	u8435
  7165  000D86  87CC               	bsf	_rxMessage& (0+255),3,b
  7166  000D88  D002               	bra	u8437
  7167  000D8A                     u8435:
  7168  000D8A  0100               	movlb	0	; () banked
  7169  000D8C  97CC               	bcf	_rxMessage& (0+255),3,b
  7170  000D8E                     u8437:
  7171                           
  7172                           ;miwi_p2p.c: 463: rxMessage.flags.bits.command = (MACRxPacket.flags.bits.packetType == 0
      +                          x01) ? 1:0;
  7173  000D8E  503C               	movf	_MACRxPacket,w,c
  7174  000D90  0B03               	andlw	3
  7175  000D92  06E8               	decf	wreg,f,c
  7176  000D94  E103               	bnz	u8440
  7177  000D96  6BAE               	clrf	??_P2PTasks& (0+255),b
  7178  000D98  2BAE               	incf	??_P2PTasks& (0+255),f,b
  7179  000D9A  D002               	goto	u8458
  7180  000D9C                     u8440:
  7181  000D9C  0100               	movlb	0	; () banked
  7182  000D9E  6BAE               	clrf	??_P2PTasks& (0+255),b
  7183  000DA0                     u8458:
  7184  000DA0  3BAE               	swapf	??_P2PTasks& (0+255),f,b
  7185  000DA2  47AE               	rlncf	??_P2PTasks& (0+255),f,b
  7186  000DA4  51CC               	movf	_rxMessage& (0+255),w,b
  7187  000DA6  19AE               	xorwf	??_P2PTasks& (0+255),w,b
  7188  000DA8  0BDF               	andlw	-33
  7189  000DAA  19AE               	xorwf	??_P2PTasks& (0+255),w,b
  7190  000DAC  6FCC               	movwf	_rxMessage& (0+255),b
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;miwi_p2p.c: 464: rxMessage.flags.bits.srcPrsnt = MACRxPacket.flags.bits.sourcePrsnt;
  7194  000DAE  AE3C               	btfss	_MACRxPacket,7,c
  7195  000DB0  D002               	bra	u8465
  7196  000DB2  8DCC               	bsf	_rxMessage& (0+255),6,b
  7197  000DB4  D002               	bra	u8467
  7198  000DB6                     u8465:
  7199  000DB6  0100               	movlb	0	; () banked
  7200  000DB8  9DCC               	bcf	_rxMessage& (0+255),6,b
  7201  000DBA                     u8467:
  7202                           
  7203                           ; BSR set to: 0
  7204                           ;miwi_p2p.c: 465: if( MACRxPacket.flags.bits.sourcePrsnt )
  7205  000DBA  AE3C               	btfss	_MACRxPacket,7,c
  7206  000DBC  D004               	goto	l8738
  7207                           
  7208                           ; BSR set to: 0
  7209                           ;miwi_p2p.c: 466: {
  7210                           ;miwi_p2p.c: 467: rxMessage.SourceAddress = MACRxPacket.SourceAddress;
  7211  000DBE  C03D  F0CF         	movff	_MACRxPacket+1,_rxMessage+3
  7212  000DC2  C03E  F0D0         	movff	_MACRxPacket+2,_rxMessage+4
  7213  000DC6                     l8738:
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;miwi_p2p.c: 468: }
  7217                           ;miwi_p2p.c: 473: rxMessage.PayloadSize = MACRxPacket.PayloadLen;
  7218  000DC6  C041  F0D3         	movff	_MACRxPacket+5,_rxMessage+7
  7219                           
  7220                           ;miwi_p2p.c: 474: rxMessage.Payload = MACRxPacket.Payload;
  7221  000DCA  C03F  F0D1         	movff	_MACRxPacket+3,_rxMessage+5
  7222  000DCE  C040  F0D2         	movff	_MACRxPacket+4,_rxMessage+6
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;miwi_p2p.c: 483: rxMessage.PacketLQI = MACRxPacket.LQIValue;
  7226  000DD2  C043  F0D5         	movff	_MACRxPacket+7,_rxMessage+9
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;miwi_p2p.c: 484: rxMessage.PacketRSSI = MACRxPacket.RSSIValue;
  7230  000DD6  C042  F0D4         	movff	_MACRxPacket+6,_rxMessage+8
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;miwi_p2p.c: 487: if( rxMessage.flags.bits.command )
  7234  000DDA  ABCC               	btfss	_rxMessage& (0+255),5,b
  7235  000DDC  D195               	goto	l464
  7236  000DDE  D175               	goto	l8910
  7237  000DE0                     l8750:
  7238                           
  7239                           ;miwi_p2p.c: 498: {
  7240                           ;miwi_p2p.c: 505: MiMAC_DiscardPacket();
  7241  000DE0  EC2B  F019         	call	_MiMAC_DiscardPacket	;wreg free
  7242                           
  7243                           ;miwi_p2p.c: 506: break;
  7244  000DE4  D192               	goto	l509
  7245  000DE6                     l8756:
  7246                           
  7247                           ; BSR set to: 0
  7248                           ;miwi_p2p.c: 631: {
  7249                           ;miwi_p2p.c: 632: if(ConnMode > 0x02)
  7250  000DE6  0E02               	movlw	2
  7251  000DE8  65F5               	cpfsgt	_ConnMode& (0+255),b
  7252  000DEA  D001               	goto	l8760
  7253  000DEC  D7F9               	goto	l8750
  7254  000DEE                     l8760:
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;miwi_p2p.c: 636: }
  7258                           ;miwi_p2p.c: 637: if( currentChannel != rxMessage.Payload[1] )
  7259  000DEE  EE20 F001          	lfsr	2,1
  7260  000DF2  51D1               	movf	(_rxMessage+5)& (0+255),w,b
  7261  000DF4  26D9               	addwf	fsr2l,f,c
  7262  000DF6  51D2               	movf	(_rxMessage+6)& (0+255),w,b
  7263  000DF8  22DA               	addwfc	fsr2h,f,c
  7264  000DFA  51F1               	movf	_currentChannel& (0+255),w,b
  7265  000DFC  18DE               	xorwf	postinc2,w,c
  7266  000DFE  E1F0               	bnz	l8750
  7267                           
  7268                           ; BSR set to: 0
  7269                           ;miwi_p2p.c: 641: }
  7270                           ;miwi_p2p.c: 643: {TxData = 0;};
  7271  000E00  6BE5               	clrf	_TxData& (0+255),b
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;miwi_p2p.c: 644: TxBuffer[TxData++] = 0x97;
  7275  000E02  0E95               	movlw	low _TxBuffer
  7276  000E04  25E5               	addwf	_TxData& (0+255),w,b
  7277  000E06  6ED9               	movwf	fsr2l,c
  7278  000E08  6ADA               	clrf	fsr2h,c
  7279  000E0A  0E01               	movlw	high _TxBuffer
  7280  000E0C  22DA               	addwfc	fsr2h,f,c
  7281  000E0E  0E97               	movlw	151
  7282  000E10  6EDF               	movwf	indf2,c
  7283                           
  7284                           ; BSR set to: 0
  7285  000E12  2BE5               	incf	_TxData& (0+255),f,b
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;miwi_p2p.c: 645: TxBuffer[TxData++] = P2PCapacityInfo;
  7289  000E14  0E95               	movlw	low _TxBuffer
  7290  000E16  25E5               	addwf	_TxData& (0+255),w,b
  7291  000E18  6ED9               	movwf	fsr2l,c
  7292  000E1A  6ADA               	clrf	fsr2h,c
  7293  000E1C  0E01               	movlw	high _TxBuffer
  7294  000E1E  22DA               	addwfc	fsr2h,f,c
  7295  000E20  C0DE  FFDF         	movff	_P2PCapacityInfo,indf2
  7296  000E24  2BE5               	incf	_TxData& (0+255),f,b
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;miwi_p2p.c: 647: for(i = 0; i < 1; i++)
  7300  000E26  6BB8               	clrf	P2PTasks@i& (0+255),b
  7301  000E28                     l8776:
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;miwi_p2p.c: 648: {
  7305                           ;miwi_p2p.c: 649: TxBuffer[TxData++] = AdditionalNodeID[i];
  7306  000E28  51B8               	movf	P2PTasks@i& (0+255),w,b
  7307  000E2A  0FF3               	addlw	low _AdditionalNodeID
  7308  000E2C  6ED9               	movwf	fsr2l,c
  7309  000E2E  6ADA               	clrf	fsr2h,c
  7310  000E30  0E95               	movlw	low _TxBuffer
  7311  000E32  25E5               	addwf	_TxData& (0+255),w,b
  7312  000E34  6EE1               	movwf	fsr1l,c
  7313  000E36  6AE2               	clrf	fsr1h,c
  7314  000E38  0E01               	movlw	high _TxBuffer
  7315  000E3A  22E2               	addwfc	fsr1h,f,c
  7316  000E3C  CFDF FFE7          	movff	indf2,indf1
  7317                           
  7318                           ; BSR set to: 0
  7319  000E40  2BE5               	incf	_TxData& (0+255),f,b
  7320                           
  7321                           ; BSR set to: 0
  7322  000E42  2BB8               	incf	P2PTasks@i& (0+255),f,b
  7323                           
  7324                           ; BSR set to: 0
  7325  000E44  51B8               	movf	P2PTasks@i& (0+255),w,b
  7326  000E46  E0F0               	bz	l8776
  7327                           
  7328                           ; BSR set to: 0
  7329                           ;miwi_p2p.c: 650: }
  7330                           ;miwi_p2p.c: 652: MiMAC_DiscardPacket();
  7331  000E48  EC2B  F019         	call	_MiMAC_DiscardPacket	;wreg free
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;miwi_p2p.c: 665: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  7335  000E4C  C0CF  F096         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7336  000E50  C0D0  F097         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7337  000E54  0E01               	movlw	1
  7338  000E56  6F98               	movwf	SendPacket@isCommand& (0+255),b
  7339  000E58  0E00               	movlw	0
  7340  000E5A  B7CC               	btfsc	_rxMessage& (0+255),3,b
  7341  000E5C  0E01               	movlw	1
  7342  000E5E  6F99               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7343  000E60  0E00               	movlw	0
  7344  000E62  EC78  F011         	call	_SendPacket
  7345                           
  7346                           ;miwi_p2p.c: 668: }
  7347                           ;miwi_p2p.c: 669: break;
  7348  000E66  D151               	goto	l509
  7349  000E68                     l475:
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;miwi_p2p.c: 677: {
  7353                           ;miwi_p2p.c: 678: {TxData = 0;};
  7354  000E68  6BE5               	clrf	_TxData& (0+255),b
  7355                           
  7356                           ; BSR set to: 0
  7357                           ;miwi_p2p.c: 679: TxBuffer[TxData++] = 0x92;
  7358  000E6A  0E95               	movlw	low _TxBuffer
  7359  000E6C  25E5               	addwf	_TxData& (0+255),w,b
  7360  000E6E  6ED9               	movwf	fsr2l,c
  7361  000E70  6ADA               	clrf	fsr2h,c
  7362  000E72  0E01               	movlw	high _TxBuffer
  7363  000E74  22DA               	addwfc	fsr2h,f,c
  7364  000E76  0E92               	movlw	146
  7365  000E78  6EDF               	movwf	indf2,c
  7366                           
  7367                           ; BSR set to: 0
  7368  000E7A  2BE5               	incf	_TxData& (0+255),f,b
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;miwi_p2p.c: 681: for(i = 0; i < 10; i++)
  7372  000E7C  6BB8               	clrf	P2PTasks@i& (0+255),b
  7373  000E7E                     l8798:
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;miwi_p2p.c: 682: {
  7377                           ;miwi_p2p.c: 684: if( ConnectionTable[i].status.bits.isValid )
  7378  000E7E  51B8               	movf	P2PTasks@i& (0+255),w,b
  7379  000E80  0D0E               	mullw	14
  7380  000E82  0E0C               	movlw	low (_ConnectionTable+12)
  7381  000E84  24F3               	addwf	prodl,w,c
  7382  000E86  6ED9               	movwf	fsr2l,c
  7383  000E88  0E02               	movlw	high (_ConnectionTable+12)
  7384  000E8A  20F4               	addwfc	prodh,w,c
  7385  000E8C  6EDA               	movwf	fsr2h,c
  7386  000E8E  AEDF               	btfss	indf2,7,c
  7387  000E90  D035               	goto	l8810
  7388                           
  7389                           ; BSR set to: 2
  7390                           ;miwi_p2p.c: 685: {
  7391                           ;miwi_p2p.c: 687: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7392  000E92  C0CF  F069         	movff	_rxMessage+3,isSameAddress@Address1
  7393  000E96  C0D0  F06A         	movff	_rxMessage+4,isSameAddress@Address1+1
  7394  000E9A  0100               	movlb	0	; () banked
  7395  000E9C  51B8               	movf	P2PTasks@i& (0+255),w,b
  7396  000E9E  0D0E               	mullw	14
  7397  000EA0  0E04               	movlw	low (_ConnectionTable+4)
  7398  000EA2  24F3               	addwf	prodl,w,c
  7399  000EA4  6F6B               	movwf	isSameAddress@Address2& (0+255),b
  7400  000EA6  0E02               	movlw	high (_ConnectionTable+4)
  7401  000EA8  20F4               	addwfc	prodh,w,c
  7402  000EAA  6F6C               	movwf	(isSameAddress@Address2+1)& (0+255),b
  7403  000EAC  EC8E  F018         	call	_isSameAddress	;wreg free
  7404  000EB0  0900               	iorlw	0
  7405  000EB2  E024               	bz	l8810
  7406                           
  7407                           ; BSR set to: 0
  7408                           ;miwi_p2p.c: 688: {
  7409                           ;miwi_p2p.c: 691: ConnectionTable[i].status.Val = 0;
  7410  000EB4  51B8               	movf	P2PTasks@i& (0+255),w,b
  7411  000EB6  0D0E               	mullw	14
  7412  000EB8  0E0C               	movlw	low (_ConnectionTable+12)
  7413  000EBA  24F3               	addwf	prodl,w,c
  7414  000EBC  6ED9               	movwf	fsr2l,c
  7415  000EBE  0E02               	movlw	high (_ConnectionTable+12)
  7416  000EC0  20F4               	addwfc	prodh,w,c
  7417  000EC2  6EDA               	movwf	fsr2h,c
  7418  000EC4  6ADF               	clrf	indf2,c
  7419                           
  7420                           ; BSR set to: 0
  7421                           ;miwi_p2p.c: 693: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * siz
      +                          eof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7422  000EC6  51B8               	movf	P2PTasks@i& (0+255),w,b
  7423  000EC8  0D0E               	mullw	14
  7424  000ECA  0E00               	movlw	low _ConnectionTable
  7425  000ECC  24F3               	addwf	prodl,w,c
  7426  000ECE  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  7427  000ED0  0E02               	movlw	high _ConnectionTable
  7428  000ED2  20F4               	addwfc	prodh,w,c
  7429  000ED4  6F6B               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  7430  000ED6  51B8               	movf	P2PTasks@i& (0+255),w,b
  7431  000ED8  0D0E               	mullw	14
  7432  000EDA  50F3               	movf	prodl,w,c
  7433  000EDC  0F04               	addlw	4
  7434  000EDE  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  7435  000EE0  0E0E               	movlw	14
  7436  000EE2  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  7437  000EE4  EC83  F013         	call	_EEPROM_Write	;wreg free
  7438                           
  7439                           ;miwi_p2p.c: 695: TxBuffer[TxData++] = 0x00;
  7440  000EE8  0E95               	movlw	low _TxBuffer
  7441  000EEA  0100               	movlb	0	; () banked
  7442  000EEC  25E5               	addwf	_TxData& (0+255),w,b
  7443  000EEE  6ED9               	movwf	fsr2l,c
  7444  000EF0  6ADA               	clrf	fsr2h,c
  7445  000EF2  0E01               	movlw	high _TxBuffer
  7446  000EF4  22DA               	addwfc	fsr2h,f,c
  7447  000EF6  6ADF               	clrf	indf2,c
  7448                           
  7449                           ; BSR set to: 0
  7450  000EF8  2BE5               	incf	_TxData& (0+255),f,b
  7451                           
  7452                           ;miwi_p2p.c: 697: break;
  7453  000EFA  D005               	goto	l8814
  7454  000EFC                     l8810:
  7455  000EFC  0100               	movlb	0	; () banked
  7456  000EFE  2BB8               	incf	P2PTasks@i& (0+255),f,b
  7457                           
  7458                           ; BSR set to: 0
  7459  000F00  0E09               	movlw	9
  7460  000F02  65B8               	cpfsgt	P2PTasks@i& (0+255),b
  7461  000F04  D7BC               	goto	l8798
  7462  000F06                     l8814:
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;miwi_p2p.c: 698: }
  7466                           ;miwi_p2p.c: 699: }
  7467                           ;miwi_p2p.c: 700: }
  7468                           ;miwi_p2p.c: 702: MiMAC_DiscardPacket();
  7469  000F06  EC2B  F019         	call	_MiMAC_DiscardPacket	;wreg free
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;miwi_p2p.c: 704: if( i == 10 )
  7473  000F0A  0E0A               	movlw	10
  7474  000F0C  19B8               	xorwf	P2PTasks@i& (0+255),w,b
  7475  000F0E  E109               	bnz	l8822
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;miwi_p2p.c: 705: {
  7479                           ;miwi_p2p.c: 707: TxBuffer[TxData++] = 0xF0;
  7480  000F10  0E95               	movlw	low _TxBuffer
  7481  000F12  25E5               	addwf	_TxData& (0+255),w,b
  7482  000F14  6ED9               	movwf	fsr2l,c
  7483  000F16  6ADA               	clrf	fsr2h,c
  7484  000F18  0E01               	movlw	high _TxBuffer
  7485  000F1A  22DA               	addwfc	fsr2h,f,c
  7486  000F1C  0EF0               	movlw	240
  7487  000F1E  6EDF               	movwf	indf2,c
  7488                           
  7489                           ; BSR set to: 0
  7490  000F20  2BE5               	incf	_TxData& (0+255),f,b
  7491  000F22                     l8822:
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;miwi_p2p.c: 708: }
  7495                           ;miwi_p2p.c: 719: SendPacket(0, rxMessage.SourceAddress, 1, rxMessage.flags.bits.secEn);
  7496  000F22  C0CF  F096         	movff	_rxMessage+3,SendPacket@DestinationAddress
  7497  000F26  C0D0  F097         	movff	_rxMessage+4,SendPacket@DestinationAddress+1
  7498  000F2A  0E01               	movlw	1
  7499  000F2C  6F98               	movwf	SendPacket@isCommand& (0+255),b
  7500  000F2E  0E00               	movlw	0
  7501  000F30  B7CC               	btfsc	_rxMessage& (0+255),3,b
  7502  000F32  0E01               	movlw	1
  7503  000F34  6F99               	movwf	SendPacket@SecurityEnabled& (0+255),b
  7504  000F36  0E00               	movlw	0
  7505  000F38  EC78  F011         	call	_SendPacket
  7506                           
  7507                           ;miwi_p2p.c: 723: }
  7508                           ;miwi_p2p.c: 724: break;
  7509  000F3C  D0E6               	goto	l509
  7510  000F3E                     l8824:
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;miwi_p2p.c: 732: case 0x01:
  7514                           ;miwi_p2p.c: 746: AddConnection();
  7515  000F3E  ECE0  F00B         	call	_AddConnection	;wreg free
  7516                           
  7517                           ;miwi_p2p.c: 748: myConnectionIndex_in_PanCo = rxMessage.Payload[2];
  7518  000F42  0100               	movlb	0	; () banked
  7519  000F44  EE20 F002          	lfsr	2,2
  7520  000F48  51D1               	movf	(_rxMessage+5)& (0+255),w,b
  7521  000F4A  26D9               	addwf	fsr2l,f,c
  7522  000F4C  51D2               	movf	(_rxMessage+6)& (0+255),w,b
  7523  000F4E  22DA               	addwfc	fsr2h,f,c
  7524  000F50  50DF               	movf	indf2,w,c
  7525  000F52  6FF2               	movwf	_myConnectionIndex_in_PanCo& (0+255),b
  7526                           
  7527                           ; BSR set to: 0
  7528                           ;miwi_p2p.c: 749: EEPROM_Write( (uint8_t *)&myConnectionIndex_in_PanCo, 0xBB, 1);
  7529  000F54  0EF2               	movlw	low _myConnectionIndex_in_PanCo
  7530  000F56  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  7531  000F58  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  7532  000F5A  0EBB               	movlw	187
  7533  000F5C  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  7534  000F5E  0E01               	movlw	1
  7535  000F60  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  7536  000F62  EC83  F013         	call	_EEPROM_Write	;wreg free
  7537                           
  7538                           ;miwi_p2p.c: 753: P2PStatus.bits.SaveConnection = 1;
  7539  000F66  0100               	movlb	0	; () banked
  7540  000F68  83DF               	bsf	_P2PStatus& (0+255),1,b	;volatile
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;miwi_p2p.c: 754: nvmDelayTick = MiWi_TickGet();
  7544  000F6A  EC31  F016         	call	_MiWi_TickGet	;wreg free
  7545  000F6E  C069  F185         	movff	?_MiWi_TickGet,_nvmDelayTick
  7546  000F72  C06A  F186         	movff	?_MiWi_TickGet+1,_nvmDelayTick+1
  7547  000F76  C06B  F187         	movff	?_MiWi_TickGet+2,_nvmDelayTick+2
  7548  000F7A  C06C  F188         	movff	?_MiWi_TickGet+3,_nvmDelayTick+3
  7549                           
  7550                           ;miwi_p2p.c: 756: break;
  7551  000F7E  D730               	goto	l8750
  7552  000F80                     l8836:
  7553                           
  7554                           ; BSR set to: 0
  7555  000F80  EE20 F001          	lfsr	2,1
  7556  000F84  51D1               	movf	(_rxMessage+5)& (0+255),w,b
  7557  000F86  26D9               	addwf	fsr2l,f,c
  7558  000F88  51D2               	movf	(_rxMessage+6)& (0+255),w,b
  7559  000F8A  22DA               	addwfc	fsr2h,f,c
  7560  000F8C  50DF               	movf	indf2,w,c
  7561                           
  7562                           ; Switch size 1, requested type "speed"
  7563                           ; Number of cases is 2, Range of values is 0 to 1
  7564                           ; switch strategies available:
  7565                           ; Name         Instructions Cycles
  7566                           ; simple_byte            7     4 (average)
  7567                           ;	Chosen strategy is simple_byte
  7568  000F8E  E0D7               	bz	l8824
  7569  000F90  0A01               	xorlw	1	; case 1
  7570  000F92  E0D5               	bz	l8824
  7571  000F94  D725               	goto	l8750
  7572  000F96                     l487:
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;miwi_p2p.c: 766: {
  7576                           ;miwi_p2p.c: 767: if( P2PStatus.bits.Resync )
  7577  000F96  BBDF               	btfsc	_P2PStatus& (0+255),5,b	;volatile
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;miwi_p2p.c: 768: {
  7581                           ;miwi_p2p.c: 769: P2PStatus.bits.Resync = 0;
  7582  000F98  9BDF               	bcf	_P2PStatus& (0+255),5,b	;volatile
  7583  000F9A  D722               	goto	l8750
  7584  000F9C                     l8844:
  7585                           
  7586                           ; BSR set to: 0
  7587                           ;miwi_p2p.c: 817: {
  7588                           ;miwi_p2p.c: 818: if( rxMessage.Payload[1] == 0x00 )
  7589  000F9C  EE20 F001          	lfsr	2,1
  7590  000FA0  51D1               	movf	(_rxMessage+5)& (0+255),w,b
  7591  000FA2  26D9               	addwf	fsr2l,f,c
  7592  000FA4  51D2               	movf	(_rxMessage+6)& (0+255),w,b
  7593  000FA6  22DA               	addwfc	fsr2h,f,c
  7594  000FA8  50DF               	movf	indf2,w,c
  7595  000FAA  E001 D719          	bnz	l8750
  7596                           
  7597                           ; BSR set to: 0
  7598                           ;miwi_p2p.c: 819: {
  7599                           ;miwi_p2p.c: 820: for(i = 0; i < 10; i++)
  7600  000FAE  6BB8               	clrf	P2PTasks@i& (0+255),b
  7601  000FB0                     l8852:
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;miwi_p2p.c: 821: {
  7605                           ;miwi_p2p.c: 823: if( ConnectionTable[i].status.bits.isValid )
  7606  000FB0  51B8               	movf	P2PTasks@i& (0+255),w,b
  7607  000FB2  0D0E               	mullw	14
  7608  000FB4  0E0C               	movlw	low (_ConnectionTable+12)
  7609  000FB6  24F3               	addwf	prodl,w,c
  7610  000FB8  6ED9               	movwf	fsr2l,c
  7611  000FBA  0E02               	movlw	high (_ConnectionTable+12)
  7612  000FBC  20F4               	addwfc	prodh,w,c
  7613  000FBE  6EDA               	movwf	fsr2h,c
  7614  000FC0  AEDF               	btfss	indf2,7,c
  7615  000FC2  D02C               	goto	l8860
  7616                           
  7617                           ; BSR set to: 2
  7618                           ;miwi_p2p.c: 824: {
  7619                           ;miwi_p2p.c: 826: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address)
      +                           )
  7620  000FC4  C0CF  F069         	movff	_rxMessage+3,isSameAddress@Address1
  7621  000FC8  C0D0  F06A         	movff	_rxMessage+4,isSameAddress@Address1+1
  7622  000FCC  0100               	movlb	0	; () banked
  7623  000FCE  51B8               	movf	P2PTasks@i& (0+255),w,b
  7624  000FD0  0D0E               	mullw	14
  7625  000FD2  0E04               	movlw	low (_ConnectionTable+4)
  7626  000FD4  24F3               	addwf	prodl,w,c
  7627  000FD6  6F6B               	movwf	isSameAddress@Address2& (0+255),b
  7628  000FD8  0E02               	movlw	high (_ConnectionTable+4)
  7629  000FDA  20F4               	addwfc	prodh,w,c
  7630  000FDC  6F6C               	movwf	(isSameAddress@Address2+1)& (0+255),b
  7631  000FDE  EC8E  F018         	call	_isSameAddress	;wreg free
  7632  000FE2  0900               	iorlw	0
  7633  000FE4  E01B               	bz	l8860
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;miwi_p2p.c: 827: {
  7637                           ;miwi_p2p.c: 829: ConnectionTable[i].status.Val = 0;
  7638  000FE6  51B8               	movf	P2PTasks@i& (0+255),w,b
  7639  000FE8  0D0E               	mullw	14
  7640  000FEA  0E0C               	movlw	low (_ConnectionTable+12)
  7641  000FEC  24F3               	addwf	prodl,w,c
  7642  000FEE  6ED9               	movwf	fsr2l,c
  7643  000FF0  0E02               	movlw	high (_ConnectionTable+12)
  7644  000FF2  20F4               	addwfc	prodh,w,c
  7645  000FF4  6EDA               	movwf	fsr2h,c
  7646  000FF6  6ADF               	clrf	indf2,c
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;miwi_p2p.c: 831: EEPROM_Write((uint8_t *)&(ConnectionTable[i]), 0x04+((uint16_t)i * siz
      +                          eof(CONNECTION_ENTRY)), sizeof(CONNECTION_ENTRY));
  7650  000FF8  51B8               	movf	P2PTasks@i& (0+255),w,b
  7651  000FFA  0D0E               	mullw	14
  7652  000FFC  0E00               	movlw	low _ConnectionTable
  7653  000FFE  24F3               	addwf	prodl,w,c
  7654  001000  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  7655  001002  0E02               	movlw	high _ConnectionTable
  7656  001004  20F4               	addwfc	prodh,w,c
  7657  001006  6F6B               	movwf	(EEPROM_Write@dest+1)& (0+255),b
  7658  001008  51B8               	movf	P2PTasks@i& (0+255),w,b
  7659  00100A  0D0E               	mullw	14
  7660  00100C  50F3               	movf	prodl,w,c
  7661  00100E  0F04               	addlw	4
  7662  001010  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  7663  001012  0E0E               	movlw	14
  7664  001014  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  7665  001016  EC83  F013         	call	_EEPROM_Write	;wreg free
  7666                           
  7667                           ;miwi_p2p.c: 833: break;
  7668  00101A  D6E2               	goto	l8750
  7669  00101C                     l8860:
  7670  00101C  0100               	movlb	0	; () banked
  7671  00101E  2BB8               	incf	P2PTasks@i& (0+255),f,b
  7672                           
  7673                           ; BSR set to: 0
  7674  001020  0E09               	movlw	9
  7675  001022  65B8               	cpfsgt	P2PTasks@i& (0+255),b
  7676  001024  D7C5               	goto	l8852
  7677  001026  D6DC               	goto	l8750
  7678  001028                     l8866:
  7679                           
  7680                           ; BSR set to: 0
  7681                           ;miwi_p2p.c: 999: if( rxMessage.Payload[1] != currentChannel )
  7682  001028  EE20 F001          	lfsr	2,1
  7683  00102C  51D1               	movf	(_rxMessage+5)& (0+255),w,b
  7684  00102E  26D9               	addwf	fsr2l,f,c
  7685  001030  51D2               	movf	(_rxMessage+6)& (0+255),w,b
  7686  001032  22DA               	addwfc	fsr2h,f,c
  7687  001034  51F1               	movf	_currentChannel& (0+255),w,b
  7688  001036  18DE               	xorwf	postinc2,w,c
  7689  001038  E001 D6D2          	bnz	l8750
  7690                           
  7691                           ; BSR set to: 0
  7692                           ;miwi_p2p.c: 1003: }
  7693                           ;miwi_p2p.c: 1004: StartChannelHopping(rxMessage.Payload[2]);
  7694  00103C  EE20 F002          	lfsr	2,2
  7695  001040  51D1               	movf	(_rxMessage+5)& (0+255),w,b
  7696  001042  26D9               	addwf	fsr2l,f,c
  7697  001044  51D2               	movf	(_rxMessage+6)& (0+255),w,b
  7698  001046  22DA               	addwfc	fsr2h,f,c
  7699  001048  50DF               	movf	indf2,w,c
  7700  00104A  ECCE  F010         	call	_StartChannelHopping
  7701  00104E  D6C8               	goto	l8750
  7702  001050                     l8874:
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;miwi_p2p.c: 1016: {
  7706                           ;miwi_p2p.c: 1017: if (!role)
  7707  001050  51F6               	movf	_role& (0+255),w,b
  7708  001052  E001 D6C5          	bnz	l8750
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;miwi_p2p.c: 1018: {
  7712                           ;miwi_p2p.c: 1019: rec_ack = 1;
  7713  001056  0E01               	movlw	1
  7714  001058  6FEC               	movwf	_rec_ack& (0+255),b
  7715  00105A  D6C2               	goto	l8750
  7716  00105C                     l8882:
  7717                           
  7718                           ; BSR set to: 0
  7719                           ;miwi_p2p.c: 1029: {
  7720                           ;miwi_p2p.c: 1030: if (!role)
  7721  00105C  51F6               	movf	_role& (0+255),w,b
  7722  00105E  E001 D6BF          	bnz	l8750
  7723                           
  7724                           ; BSR set to: 0
  7725                           ;miwi_p2p.c: 1031: {
  7726                           ;miwi_p2p.c: 1033: end_nodes = rxMessage.Payload[1]-1;
  7727  001062  EE20 F001          	lfsr	2,1
  7728  001066  51D1               	movf	(_rxMessage+5)& (0+255),w,b
  7729  001068  26D9               	addwf	fsr2l,f,c
  7730  00106A  51D2               	movf	(_rxMessage+6)& (0+255),w,b
  7731  00106C  22DA               	addwfc	fsr2h,f,c
  7732  00106E  50DF               	movf	indf2,w,c
  7733  001070  6FAE               	movwf	??_P2PTasks& (0+255),b
  7734  001072  05AE               	decf	??_P2PTasks& (0+255),w,b
  7735  001074  6FE8               	movwf	_end_nodes& (0+255),b
  7736                           
  7737                           ; BSR set to: 0
  7738                           ;miwi_p2p.c: 1034: store_connection_tb(rxMessage.Payload);
  7739  001076  C0D1  F070         	movff	_rxMessage+5,store_connection_tb@payload
  7740  00107A  C0D2  F071         	movff	_rxMessage+6,store_connection_tb@payload+1
  7741  00107E  EC27  F00F         	call	_store_connection_tb	;wreg free
  7742  001082  D6AE               	goto	l8750
  7743  001084                     l8892:
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;miwi_p2p.c: 1043: {
  7747                           ;miwi_p2p.c: 1044: if (role)
  7748  001084  51F6               	movf	_role& (0+255),w,b
  7749  001086  E101 D6AB          	bz	l8750
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;miwi_p2p.c: 1045: {
  7753                           ;miwi_p2p.c: 1047: uint8_t final_index;
  7754                           ;miwi_p2p.c: 1048: final_index = Find_Index(rxMessage.Payload);
  7755  00108A  C0D1  F069         	movff	_rxMessage+5,Find_Index@DestAddr
  7756  00108E  C0D2  F06A         	movff	_rxMessage+6,Find_Index@DestAddr+1
  7757  001092  EC61  F012         	call	_Find_Index	;wreg free
  7758  001096  6FB7               	movwf	P2PTasks@final_index& (0+255),b
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;miwi_p2p.c: 1049: if (final_index != 0xFF)
  7762  001098  29B7               	incf	P2PTasks@final_index& (0+255),w,b
  7763  00109A  E00D               	bz	l8900
  7764                           
  7765                           ; BSR set to: 0
  7766                           ;miwi_p2p.c: 1050: {
  7767                           ;miwi_p2p.c: 1051: FW_Stat = Forward_Packet_PANCr_to_EDy (rxMessage.Payload , final_inde
      +                          x , rxMessage.SourceAddress);
  7768  00109C  C0D1  F0A6         	movff	_rxMessage+5,Forward_Packet_PANCr_to_EDy@fw_payload
  7769  0010A0  C0D2  F0A7         	movff	_rxMessage+6,Forward_Packet_PANCr_to_EDy@fw_payload+1
  7770  0010A4  C0B7  F0A8         	movff	P2PTasks@final_index,Forward_Packet_PANCr_to_EDy@index
  7771  0010A8  C0CF  F0A9         	movff	_rxMessage+3,Forward_Packet_PANCr_to_EDy@EDxAddress
  7772  0010AC  C0D0  F0AA         	movff	_rxMessage+4,Forward_Packet_PANCr_to_EDy@EDxAddress+1
  7773  0010B0  EC14  F012         	call	_Forward_Packet_PANCr_to_EDy	;wreg free
  7774  0010B4  6FB2               	movwf	P2PTasks@FW_Stat& (0+255),b
  7775  0010B6                     l8900:
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;miwi_p2p.c: 1052: }
  7779                           ;miwi_p2p.c: 1054: if (FW_Stat)
  7780  0010B6  51B2               	movf	P2PTasks@FW_Stat& (0+255),w,b
  7781  0010B8  E101 D692          	bz	l8750
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;miwi_p2p.c: 1055: {
  7785                           ;miwi_p2p.c: 1056: SW_Ack_SrED (rxMessage.SourceAddress);
  7786  0010BC  C0CF  F0A0         	movff	_rxMessage+3,SW_Ack_SrED@Dest_Addr
  7787  0010C0  C0D0  F0A1         	movff	_rxMessage+4,SW_Ack_SrED@Dest_Addr+1
  7788  0010C4  ECCE  F018         	call	_SW_Ack_SrED	;wreg free
  7789  0010C8  D68B               	goto	l8750
  7790  0010CA                     l8910:
  7791                           
  7792                           ; BSR set to: 0
  7793  0010CA  C0D1  FFD9         	movff	_rxMessage+5,fsr2l
  7794  0010CE  C0D2  FFDA         	movff	_rxMessage+6,fsr2h
  7795  0010D2  50DF               	movf	indf2,w,c
  7796                           
  7797                           ; Switch size 1, requested type "speed"
  7798                           ; Number of cases is 10, Range of values is 119 to 218
  7799                           ; switch strategies available:
  7800                           ; Name         Instructions Cycles
  7801                           ; simple_byte           31    16 (average)
  7802                           ;	Chosen strategy is simple_byte
  7803  0010D4  0A77               	xorlw	119	; case 119
  7804  0010D6  E0C2               	bz	l8882
  7805  0010D8  0AF6               	xorlw	246	; case 129
  7806  0010DA  E101 D681          	bz	l8750
  7807  0010DE  0A03               	xorlw	3	; case 130
  7808  0010E0  E101 D6C2          	bz	l475
  7809  0010E4  0A06               	xorlw	6	; case 132
  7810  0010E6  E0A0               	bz	l8866
  7811  0010E8  0A03               	xorlw	3	; case 135
  7812  0010EA  E101 D67C          	bz	l8756
  7813  0010EE  0A16               	xorlw	22	; case 145
  7814  0010F0  E101 D746          	bz	l8836
  7815  0010F4  0A03               	xorlw	3	; case 146
  7816  0010F6  E101 D751          	bz	l8844
  7817  0010FA  0A05               	xorlw	5	; case 151
  7818  0010FC  E101 D74B          	bz	l487
  7819  001100  0A5B               	xorlw	91	; case 204
  7820  001102  E0C0               	bz	l8892
  7821  001104  0A16               	xorlw	22	; case 218
  7822  001106  E0A4               	bz	l8874
  7823  001108                     l464:
  7824                           
  7825                           ; BSR set to: 0
  7826                           ;miwi_p2p.c: 1101: else
  7827                           ;miwi_p2p.c: 1102: {
  7828                           ;miwi_p2p.c: 1103: P2PStatus.bits.RxHasUserData = 1;
  7829  001108  87DF               	bsf	_P2PStatus& (0+255),3,b	;volatile
  7830  00110A                     l509:
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;miwi_p2p.c: 1104: }
  7834                           ;miwi_p2p.c: 1107: if( P2PStatus.bits.DataRequesting && P2PStatus.bits.RxHasUserData )
  7835  00110A  B5DF               	btfsc	_P2PStatus& (0+255),2,b	;volatile
  7836                           
  7837                           ; BSR set to: 0
  7838  00110C  A7DF               	btfss	_P2PStatus& (0+255),3,b	;volatile
  7839  00110E  D001               	goto	l8916
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;miwi_p2p.c: 1108: {
  7843                           ;miwi_p2p.c: 1109: P2PStatus.bits.DataRequesting = 0;
  7844  001110  95DF               	bcf	_P2PStatus& (0+255),2,b	;volatile
  7845  001112                     l8916:
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;miwi_p2p.c: 1110: }
  7849                           ;miwi_p2p.c: 1113: if( rxMessage.PayloadSize == 0 || P2PStatus.bits.SearchConnection || 
      +                          P2PStatus.bits.Resync )
  7850  001112  51D3               	movf	(_rxMessage+7)& (0+255),w,b
  7851  001114  E004               	bz	l513
  7852                           
  7853                           ; BSR set to: 0
  7854  001116  B9DF               	btfsc	_P2PStatus& (0+255),4,b	;volatile
  7855  001118  D002               	goto	l513
  7856                           
  7857                           ; BSR set to: 0
  7858  00111A  ABDF               	btfss	_P2PStatus& (0+255),5,b	;volatile
  7859  00111C  0012               	return	
  7860  00111E                     l513:
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;miwi_p2p.c: 1114: {
  7864                           ;miwi_p2p.c: 1115: P2PStatus.bits.RxHasUserData = 0;
  7865  00111E  97DF               	bcf	_P2PStatus& (0+255),3,b	;volatile
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;miwi_p2p.c: 1116: MiMAC_DiscardPacket();
  7869  001120  EF2B  F019         	goto	_MiMAC_DiscardPacket	;wreg free
  7870  001124                     __end_of_P2PTasks:
  7871                           	opt stack 0
  7872                           tblptru	equ	0xFF8
  7873                           tblptrh	equ	0xFF7
  7874                           tblptrl	equ	0xFF6
  7875                           tablat	equ	0xFF5
  7876                           prodh	equ	0xFF4
  7877                           prodl	equ	0xFF3
  7878                           intcon	equ	0xFF2
  7879                           intcon2	equ	0xFF1
  7880                           intcon3	equ	0xFF0
  7881                           postinc0	equ	0xFEE
  7882                           wreg	equ	0xFE8
  7883                           indf1	equ	0xFE7
  7884                           postdec1	equ	0xFE5
  7885                           fsr1h	equ	0xFE2
  7886                           fsr1l	equ	0xFE1
  7887                           indf2	equ	0xFDF
  7888                           postinc2	equ	0xFDE
  7889                           postdec2	equ	0xFDD
  7890                           fsr2h	equ	0xFDA
  7891                           fsr2l	equ	0xFD9
  7892                           status	equ	0xFD8
  7893                           
  7894 ;; *************** function _store_connection_tb *****************
  7895 ;; Defined at:
  7896 ;;		line 150 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  7897 ;; Parameters:    Size  Location     Type
  7898 ;;  payload         2   16[BANK0 ] PTR unsigned char 
  7899 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;  i               1   21[BANK0 ] unsigned char 
  7902 ;;  j               1   20[BANK0 ] unsigned char 
  7903 ;;  connections_    1    0        unsigned char 
  7904 ;;  k               1    0        unsigned char 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;		None               void
  7907 ;; Registers used:
  7908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7909 ;; Tracked objects:
  7910 ;;		On entry : F/0
  7911 ;;		On exit  : F/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7914 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7915 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7916 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7917 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7918 ;;Total ram usage:        6 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:    9
  7921 ;; This function calls:
  7922 ;;		_handle_lost_connection
  7923 ;; This function is called by:
  7924 ;;		_P2PTasks
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text28
  7929  001E4E                     __ptext28:
  7930                           	opt stack 0
  7931  001E4E                     _store_connection_tb:
  7932                           	opt stack 16
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;miwi_p2p.c: 154: for (i=4; i < 35; i++)
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;incstack = 0
  7939  001E4E  0E04               	movlw	4
  7940  001E50  6F75               	movwf	store_connection_tb@i& (0+255),b
  7941  001E52                     l8546:
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;miwi_p2p.c: 155: {
  7945                           ;miwi_p2p.c: 156: if (i % 4 == 0 && (i+3) < 35)
  7946  001E52  C075  F072         	movff	store_connection_tb@i,??_store_connection_tb
  7947  001E56  0E03               	movlw	3
  7948  001E58  1772               	andwf	??_store_connection_tb& (0+255),f,b
  7949  001E5A  E161               	bnz	l8560
  7950                           
  7951                           ; BSR set to: 0
  7952  001E5C  5175               	movf	store_connection_tb@i& (0+255),w,b
  7953  001E5E  6F72               	movwf	??_store_connection_tb& (0+255),b
  7954  001E60  6B73               	clrf	(??_store_connection_tb+1)& (0+255),b
  7955  001E62  0E03               	movlw	3
  7956  001E64  2772               	addwf	??_store_connection_tb& (0+255),f,b
  7957  001E66  0E00               	movlw	0
  7958  001E68  2373               	addwfc	(??_store_connection_tb+1)& (0+255),f,b
  7959  001E6A  BF73               	btfsc	(??_store_connection_tb+1)& (0+255),7,b
  7960  001E6C  D005               	goto	l8550
  7961  001E6E  5173               	movf	(??_store_connection_tb+1)& (0+255),w,b
  7962  001E70  E156               	bnz	l8560
  7963  001E72  0E23               	movlw	35
  7964  001E74  5D72               	subwf	??_store_connection_tb& (0+255),w,b
  7965  001E76  E253               	bc	l8560
  7966  001E78                     l8550:
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;miwi_p2p.c: 157: {
  7970                           ;miwi_p2p.c: 158: j = payload[i+3];
  7971  001E78  5175               	movf	store_connection_tb@i& (0+255),w,b
  7972  001E7A  2570               	addwf	store_connection_tb@payload& (0+255),w,b
  7973  001E7C  6F72               	movwf	??_store_connection_tb& (0+255),b
  7974  001E7E  0E00               	movlw	0
  7975  001E80  2171               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  7976  001E82  6F73               	movwf	(??_store_connection_tb+1)& (0+255),b
  7977  001E84  0E03               	movlw	3
  7978  001E86  2572               	addwf	??_store_connection_tb& (0+255),w,b
  7979  001E88  6ED9               	movwf	fsr2l,c
  7980  001E8A  0E00               	movlw	0
  7981  001E8C  2173               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  7982  001E8E  6EDA               	movwf	fsr2h,c
  7983  001E90  50DF               	movf	indf2,w,c
  7984  001E92  6F74               	movwf	store_connection_tb@j& (0+255),b
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;miwi_p2p.c: 159: END_DEVICES_Short_Address[j].connection_slot = j;
  7988  001E94  5174               	movf	store_connection_tb@j& (0+255),w,b
  7989  001E96  0D04               	mullw	4
  7990  001E98  0E3A               	movlw	low (_END_DEVICES_Short_Address+3)
  7991  001E9A  24F3               	addwf	prodl,w,c
  7992  001E9C  6ED9               	movwf	fsr2l,c
  7993  001E9E  0E01               	movlw	high (_END_DEVICES_Short_Address+3)
  7994  001EA0  20F4               	addwfc	prodh,w,c
  7995  001EA2  6EDA               	movwf	fsr2h,c
  7996  001EA4  C074  FFDF         	movff	store_connection_tb@j,indf2
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;miwi_p2p.c: 160: END_DEVICES_Short_Address[j].Address[0] = payload[i];
  8000  001EA8  5175               	movf	store_connection_tb@i& (0+255),w,b
  8001  001EAA  2570               	addwf	store_connection_tb@payload& (0+255),w,b
  8002  001EAC  6ED9               	movwf	fsr2l,c
  8003  001EAE  0E00               	movlw	0
  8004  001EB0  2171               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8005  001EB2  6EDA               	movwf	fsr2h,c
  8006  001EB4  5174               	movf	store_connection_tb@j& (0+255),w,b
  8007  001EB6  0D04               	mullw	4
  8008  001EB8  0E37               	movlw	low _END_DEVICES_Short_Address
  8009  001EBA  24F3               	addwf	prodl,w,c
  8010  001EBC  6EE1               	movwf	fsr1l,c
  8011  001EBE  0E01               	movlw	high _END_DEVICES_Short_Address
  8012  001EC0  20F4               	addwfc	prodh,w,c
  8013  001EC2  6EE2               	movwf	fsr1h,c
  8014  001EC4  CFDF FFE7          	movff	indf2,indf1
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;miwi_p2p.c: 161: END_DEVICES_Short_Address[j].Address[1] = payload[i+1];
  8018  001EC8  5175               	movf	store_connection_tb@i& (0+255),w,b
  8019  001ECA  2570               	addwf	store_connection_tb@payload& (0+255),w,b
  8020  001ECC  6F72               	movwf	??_store_connection_tb& (0+255),b
  8021  001ECE  0E00               	movlw	0
  8022  001ED0  2171               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8023  001ED2  6F73               	movwf	(??_store_connection_tb+1)& (0+255),b
  8024  001ED4  2972               	incf	??_store_connection_tb& (0+255),w,b
  8025  001ED6  6ED9               	movwf	fsr2l,c
  8026  001ED8  0E00               	movlw	0
  8027  001EDA  2173               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  8028  001EDC  6EDA               	movwf	fsr2h,c
  8029  001EDE  5174               	movf	store_connection_tb@j& (0+255),w,b
  8030  001EE0  0D04               	mullw	4
  8031  001EE2  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  8032  001EE4  24F3               	addwf	prodl,w,c
  8033  001EE6  6EE1               	movwf	fsr1l,c
  8034  001EE8  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  8035  001EEA  20F4               	addwfc	prodh,w,c
  8036  001EEC  6EE2               	movwf	fsr1h,c
  8037  001EEE  CFDF FFE7          	movff	indf2,indf1
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;miwi_p2p.c: 162: END_DEVICES_Short_Address[j].Address[2] = payload[i+2];
  8041  001EF2  5175               	movf	store_connection_tb@i& (0+255),w,b
  8042  001EF4  2570               	addwf	store_connection_tb@payload& (0+255),w,b
  8043  001EF6  6F72               	movwf	??_store_connection_tb& (0+255),b
  8044  001EF8  0E00               	movlw	0
  8045  001EFA  2171               	addwfc	(store_connection_tb@payload+1)& (0+255),w,b
  8046  001EFC  6F73               	movwf	(??_store_connection_tb+1)& (0+255),b
  8047  001EFE  0E02               	movlw	2
  8048  001F00  2572               	addwf	??_store_connection_tb& (0+255),w,b
  8049  001F02  6ED9               	movwf	fsr2l,c
  8050  001F04  0E00               	movlw	0
  8051  001F06  2173               	addwfc	(??_store_connection_tb+1)& (0+255),w,b
  8052  001F08  6EDA               	movwf	fsr2h,c
  8053  001F0A  5174               	movf	store_connection_tb@j& (0+255),w,b
  8054  001F0C  0D04               	mullw	4
  8055  001F0E  0E39               	movlw	low (_END_DEVICES_Short_Address+2)
  8056  001F10  24F3               	addwf	prodl,w,c
  8057  001F12  6EE1               	movwf	fsr1l,c
  8058  001F14  0E01               	movlw	high (_END_DEVICES_Short_Address+2)
  8059  001F16  20F4               	addwfc	prodh,w,c
  8060  001F18  6EE2               	movwf	fsr1h,c
  8061  001F1A  CFDF FFE7          	movff	indf2,indf1
  8062  001F1E                     l8560:
  8063                           
  8064                           ; BSR set to: 0
  8065  001F1E  2B75               	incf	store_connection_tb@i& (0+255),f,b
  8066                           
  8067                           ; BSR set to: 0
  8068  001F20  0E22               	movlw	34
  8069  001F22  6575               	cpfsgt	store_connection_tb@i& (0+255),b
  8070  001F24  D796               	goto	l8546
  8071  001F26  EF86  F014         	goto	_handle_lost_connection
  8072  001F2A                     __end_of_store_connection_tb:
  8073                           	opt stack 0
  8074                           tblptru	equ	0xFF8
  8075                           tblptrh	equ	0xFF7
  8076                           tblptrl	equ	0xFF6
  8077                           tablat	equ	0xFF5
  8078                           prodh	equ	0xFF4
  8079                           prodl	equ	0xFF3
  8080                           intcon	equ	0xFF2
  8081                           intcon2	equ	0xFF1
  8082                           intcon3	equ	0xFF0
  8083                           postinc0	equ	0xFEE
  8084                           wreg	equ	0xFE8
  8085                           indf1	equ	0xFE7
  8086                           postdec1	equ	0xFE5
  8087                           fsr1h	equ	0xFE2
  8088                           fsr1l	equ	0xFE1
  8089                           indf2	equ	0xFDF
  8090                           postinc2	equ	0xFDE
  8091                           postdec2	equ	0xFDD
  8092                           fsr2h	equ	0xFDA
  8093                           fsr2l	equ	0xFD9
  8094                           status	equ	0xFD8
  8095                           
  8096 ;; *************** function _handle_lost_connection *****************
  8097 ;; Defined at:
  8098 ;;		line 127 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;		None
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;  i               1   15[BANK0 ] unsigned char 
  8103 ;;  stat            1   14[BANK0 ] unsigned char 
  8104 ;; Return value:  Size  Location     Type
  8105 ;;		None               void
  8106 ;; Registers used:
  8107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8108 ;; Tracked objects:
  8109 ;;		On entry : F/0
  8110 ;;		On exit  : F/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8114 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8115 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8116 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8117 ;;Total ram usage:        7 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:    8
  8120 ;; This function calls:
  8121 ;;		Nothing
  8122 ;; This function is called by:
  8123 ;;		_store_connection_tb
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text29
  8128  00290C                     __ptext29:
  8129                           	opt stack 0
  8130  00290C                     _handle_lost_connection:
  8131                           	opt stack 16
  8132                           
  8133                           ; BSR set to: 0
  8134                           ;miwi_p2p.c: 129: uint8_t i ;
  8135                           ;miwi_p2p.c: 130: bool stat = 0;
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;incstack = 0
  8139  00290C  6B6E               	clrf	handle_lost_connection@stat& (0+255),b
  8140                           
  8141                           ; BSR set to: 0
  8142                           ;miwi_p2p.c: 131: if (!role)
  8143  00290E  51F6               	movf	_role& (0+255),w,b
  8144  002910  A4D8               	btfss	status,2,c
  8145  002912  0012               	return	
  8146                           
  8147                           ; BSR set to: 0
  8148                           ;miwi_p2p.c: 132: {
  8149                           ;miwi_p2p.c: 133: for (i=0;i<end_nodes+1;i++)
  8150  002914  6B6F               	clrf	handle_lost_connection@i& (0+255),b
  8151  002916  D01E               	goto	l8390
  8152  002918                     l8382:
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;miwi_p2p.c: 134: {
  8156                           ;miwi_p2p.c: 135: if (myLongAddress[0] == END_DEVICES_Short_Address[i].Address[0] && myL
      +                          ongAddress[1] == END_DEVICES_Short_Address[i].Address[1])
  8157  002918  516F               	movf	handle_lost_connection@i& (0+255),w,b
  8158  00291A  0D04               	mullw	4
  8159  00291C  0E37               	movlw	low _END_DEVICES_Short_Address
  8160  00291E  24F3               	addwf	prodl,w,c
  8161  002920  6ED9               	movwf	fsr2l,c
  8162  002922  0E01               	movlw	high _END_DEVICES_Short_Address
  8163  002924  20F4               	addwfc	prodh,w,c
  8164  002926  6EDA               	movwf	fsr2h,c
  8165  002928  0101               	movlb	1	; () banked
  8166  00292A  51D9               	movf	_myLongAddress& (0+255),w,b
  8167  00292C  18DE               	xorwf	postinc2,w,c
  8168  00292E  E110               	bnz	l8388
  8169                           
  8170                           ; BSR set to: 1
  8171  002930  0100               	movlb	0	; () banked
  8172  002932  516F               	movf	handle_lost_connection@i& (0+255),w,b
  8173  002934  0D04               	mullw	4
  8174  002936  0E38               	movlw	low (_END_DEVICES_Short_Address+1)
  8175  002938  24F3               	addwf	prodl,w,c
  8176  00293A  6ED9               	movwf	fsr2l,c
  8177  00293C  0E01               	movlw	high (_END_DEVICES_Short_Address+1)
  8178  00293E  20F4               	addwfc	prodh,w,c
  8179  002940  6EDA               	movwf	fsr2h,c
  8180  002942  50DE               	movf	postinc2,w,c
  8181  002944  0101               	movlb	1	; () banked
  8182  002946  19DA               	xorwf	(_myLongAddress+1)& (0+255),w,b
  8183  002948  E103               	bnz	l8388
  8184                           
  8185                           ; BSR set to: 1
  8186                           ;miwi_p2p.c: 136: {
  8187                           ;miwi_p2p.c: 137: stat = 1;
  8188  00294A  0E01               	movlw	1
  8189  00294C  0100               	movlb	0	; () banked
  8190  00294E  6F6E               	movwf	handle_lost_connection@stat& (0+255),b
  8191  002950                     l8388:
  8192  002950  0100               	movlb	0	; () banked
  8193  002952  2B6F               	incf	handle_lost_connection@i& (0+255),f,b
  8194  002954                     l8390:
  8195                           
  8196                           ; BSR set to: 0
  8197  002954  51E8               	movf	_end_nodes& (0+255),w,b
  8198  002956  6F69               	movwf	??_handle_lost_connection& (0+255),b
  8199  002958  6B6A               	clrf	(??_handle_lost_connection+1)& (0+255),b
  8200  00295A  2B69               	incf	??_handle_lost_connection& (0+255),f,b
  8201  00295C  0E00               	movlw	0
  8202  00295E  236A               	addwfc	(??_handle_lost_connection+1)& (0+255),f,b
  8203  002960  516F               	movf	handle_lost_connection@i& (0+255),w,b
  8204  002962  6F6B               	movwf	(??_handle_lost_connection+2)& (0+255),b
  8205  002964  6B6C               	clrf	(??_handle_lost_connection+3)& (0+255),b
  8206  002966  5169               	movf	??_handle_lost_connection& (0+255),w,b
  8207  002968  5D6B               	subwf	(??_handle_lost_connection+2)& (0+255),w,b
  8208  00296A  516C               	movf	(??_handle_lost_connection+3)& (0+255),w,b
  8209  00296C  0A80               	xorlw	128
  8210  00296E  6F6D               	movwf	(??_handle_lost_connection+4)& (0+255),b
  8211  002970  516A               	movf	(??_handle_lost_connection+1)& (0+255),w,b
  8212  002972  0A80               	xorlw	128
  8213  002974  596D               	subwfb	(??_handle_lost_connection+4)& (0+255),w,b
  8214  002976  E3D0               	bnc	l8382
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;miwi_p2p.c: 138: }
  8218                           ;miwi_p2p.c: 139: }
  8219                           ;miwi_p2p.c: 140: if (!stat)
  8220  002978  516E               	movf	handle_lost_connection@stat& (0+255),w,b
  8221  00297A  A4D8               	btfss	status,2,c
  8222  00297C  0012               	return	
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;miwi_p2p.c: 141: {
  8226                           ;miwi_p2p.c: 142: lost_connection = 1;
  8227  00297E  0E01               	movlw	1
  8228  002980  6FEB               	movwf	_lost_connection& (0+255),b
  8229                           
  8230                           ; BSR set to: 0
  8231  002982  0C01               	retlw	1	;funcret
  8232  002984                     __end_of_handle_lost_connection:
  8233                           	opt stack 0
  8234                           tblptru	equ	0xFF8
  8235                           tblptrh	equ	0xFF7
  8236                           tblptrl	equ	0xFF6
  8237                           tablat	equ	0xFF5
  8238                           prodh	equ	0xFF4
  8239                           prodl	equ	0xFF3
  8240                           intcon	equ	0xFF2
  8241                           intcon2	equ	0xFF1
  8242                           intcon3	equ	0xFF0
  8243                           postinc0	equ	0xFEE
  8244                           wreg	equ	0xFE8
  8245                           indf1	equ	0xFE7
  8246                           postdec1	equ	0xFE5
  8247                           fsr1h	equ	0xFE2
  8248                           fsr1l	equ	0xFE1
  8249                           indf2	equ	0xFDF
  8250                           postinc2	equ	0xFDE
  8251                           postdec2	equ	0xFDD
  8252                           fsr2h	equ	0xFDA
  8253                           fsr2l	equ	0xFD9
  8254                           status	equ	0xFD8
  8255                           
  8256 ;; *************** function _StartChannelHopping *****************
  8257 ;; Defined at:
  8258 ;;		line 2744 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;  OptimalChann    1    wreg     unsigned char 
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;  OptimalChann    1   76[BANK0 ] unsigned char 
  8263 ;;  t2              4   72[BANK0 ] struct _MIWI_TICK
  8264 ;;  t1              4   68[BANK0 ] struct _MIWI_TICK
  8265 ;;  i               1   77[BANK0 ] unsigned char 
  8266 ;; Return value:  Size  Location     Type
  8267 ;;		None               void
  8268 ;; Registers used:
  8269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : F/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8276 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8277 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8278 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8279 ;;Total ram usage:       14 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:   14
  8282 ;; This function calls:
  8283 ;;		_MiApp_SetChannel
  8284 ;;		_MiWi_TickGet
  8285 ;;		_SendPacket
  8286 ;; This function is called by:
  8287 ;;		_P2PTasks
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text30
  8292  00219C                     __ptext30:
  8293                           	opt stack 0
  8294  00219C                     _StartChannelHopping:
  8295                           	opt stack 11
  8296                           
  8297                           ; BSR set to: 0
  8298                           ;incstack = 0
  8299                           ;StartChannelHopping@OptimalChannel stored from wreg
  8300  00219C  6FAC               	movwf	StartChannelHopping@OptimalChannel& (0+255),b
  8301                           
  8302                           ;miwi_p2p.c: 2746: uint8_t i;
  8303                           ;miwi_p2p.c: 2747: MIWI_TICK t1, t2;
  8304                           ;miwi_p2p.c: 2749: for( i = 0; i < 0x03; i++)
  8305  00219E  0100               	movlb	0	; () banked
  8306  0021A0  6BAD               	clrf	StartChannelHopping@i& (0+255),b
  8307  0021A2                     l8670:
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;miwi_p2p.c: 2750: {
  8311                           ;miwi_p2p.c: 2751: t1 = MiWi_TickGet();
  8312  0021A2  EC31  F016         	call	_MiWi_TickGet	;wreg free
  8313  0021A6  C069  F0A4         	movff	?_MiWi_TickGet,StartChannelHopping@t1
  8314  0021AA  C06A  F0A5         	movff	?_MiWi_TickGet+1,StartChannelHopping@t1+1
  8315  0021AE  C06B  F0A6         	movff	?_MiWi_TickGet+2,StartChannelHopping@t1+2
  8316  0021B2  C06C  F0A7         	movff	?_MiWi_TickGet+3,StartChannelHopping@t1+3
  8317  0021B6                     l673:
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;miwi_p2p.c: 2753: {
  8321                           ;miwi_p2p.c: 2754: t2 = MiWi_TickGet();
  8322  0021B6  EC31  F016         	call	_MiWi_TickGet	;wreg free
  8323  0021BA  C069  F0A8         	movff	?_MiWi_TickGet,StartChannelHopping@t2
  8324  0021BE  C06A  F0A9         	movff	?_MiWi_TickGet+1,StartChannelHopping@t2+1
  8325  0021C2  C06B  F0AA         	movff	?_MiWi_TickGet+2,StartChannelHopping@t2+2
  8326  0021C6  C06C  F0AB         	movff	?_MiWi_TickGet+3,StartChannelHopping@t2+3
  8327                           
  8328                           ; BSR set to: 0
  8329                           ;miwi_p2p.c: 2755: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/1000*(30780))/(uint32_t
      +                          )2000 )
  8330  0021CA  51A4               	movf	StartChannelHopping@t1& (0+255),w,b
  8331  0021CC  5DA8               	subwf	StartChannelHopping@t2& (0+255),w,b
  8332  0021CE  6FA0               	movwf	??_StartChannelHopping& (0+255),b
  8333  0021D0  51A5               	movf	(StartChannelHopping@t1+1)& (0+255),w,b
  8334  0021D2  59A9               	subwfb	(StartChannelHopping@t2+1)& (0+255),w,b
  8335  0021D4  6FA1               	movwf	(??_StartChannelHopping+1)& (0+255),b
  8336  0021D6  51A6               	movf	(StartChannelHopping@t1+2)& (0+255),w,b
  8337  0021D8  59AA               	subwfb	(StartChannelHopping@t2+2)& (0+255),w,b
  8338  0021DA  6FA2               	movwf	(??_StartChannelHopping+2)& (0+255),b
  8339  0021DC  51A7               	movf	(StartChannelHopping@t1+3)& (0+255),w,b
  8340  0021DE  59AB               	subwfb	(StartChannelHopping@t2+3)& (0+255),w,b
  8341  0021E0  6FA3               	movwf	(??_StartChannelHopping+3)& (0+255),b
  8342  0021E2  51A3               	movf	(??_StartChannelHopping+3)& (0+255),w,b
  8343  0021E4  E107               	bnz	u8340
  8344  0021E6  0EE1               	movlw	225
  8345  0021E8  5DA0               	subwf	??_StartChannelHopping& (0+255),w,b
  8346  0021EA  0EC1               	movlw	193
  8347  0021EC  59A1               	subwfb	(??_StartChannelHopping+1)& (0+255),w,b
  8348  0021EE  0E03               	movlw	3
  8349  0021F0  59A2               	subwfb	(??_StartChannelHopping+2)& (0+255),w,b
  8350  0021F2  E3E1               	bnc	l673
  8351  0021F4                     u8340:
  8352                           
  8353                           ; BSR set to: 0
  8354                           ;miwi_p2p.c: 2756: {
  8355                           ;miwi_p2p.c: 2757: {TxData = 0;};
  8356  0021F4  6BE5               	clrf	_TxData& (0+255),b
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;miwi_p2p.c: 2758: TxBuffer[TxData++] = 0x84;
  8360  0021F6  0E95               	movlw	low _TxBuffer
  8361  0021F8  25E5               	addwf	_TxData& (0+255),w,b
  8362  0021FA  6ED9               	movwf	fsr2l,c
  8363  0021FC  6ADA               	clrf	fsr2h,c
  8364  0021FE  0E01               	movlw	high _TxBuffer
  8365  002200  22DA               	addwfc	fsr2h,f,c
  8366  002202  0E84               	movlw	132
  8367  002204  6EDF               	movwf	indf2,c
  8368                           
  8369                           ; BSR set to: 0
  8370  002206  2BE5               	incf	_TxData& (0+255),f,b
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;miwi_p2p.c: 2759: TxBuffer[TxData++] = currentChannel;
  8374  002208  0E95               	movlw	low _TxBuffer
  8375  00220A  25E5               	addwf	_TxData& (0+255),w,b
  8376  00220C  6ED9               	movwf	fsr2l,c
  8377  00220E  6ADA               	clrf	fsr2h,c
  8378  002210  0E01               	movlw	high _TxBuffer
  8379  002212  22DA               	addwfc	fsr2h,f,c
  8380  002214  C0F1  FFDF         	movff	_currentChannel,indf2
  8381  002218  2BE5               	incf	_TxData& (0+255),f,b
  8382                           
  8383                           ; BSR set to: 0
  8384                           ;miwi_p2p.c: 2760: TxBuffer[TxData++] = OptimalChannel;
  8385  00221A  0E95               	movlw	low _TxBuffer
  8386  00221C  25E5               	addwf	_TxData& (0+255),w,b
  8387  00221E  6ED9               	movwf	fsr2l,c
  8388  002220  6ADA               	clrf	fsr2h,c
  8389  002222  0E01               	movlw	high _TxBuffer
  8390  002224  22DA               	addwfc	fsr2h,f,c
  8391  002226  C0AC  FFDF         	movff	StartChannelHopping@OptimalChannel,indf2
  8392                           
  8393                           ; BSR set to: 0
  8394  00222A  2BE5               	incf	_TxData& (0+255),f,b
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;miwi_p2p.c: 2764: SendPacket(1, (0), 1, 0);
  8398  00222C  6B96               	clrf	SendPacket@DestinationAddress& (0+255),b
  8399  00222E  6B97               	clrf	(SendPacket@DestinationAddress+1)& (0+255),b
  8400  002230  0E01               	movlw	1
  8401  002232  6F98               	movwf	SendPacket@isCommand& (0+255),b
  8402  002234  6B99               	clrf	SendPacket@SecurityEnabled& (0+255),b
  8403  002236  EC78  F011         	call	_SendPacket
  8404                           
  8405                           ; BSR set to: 0
  8406                           
  8407                           ;miwi_p2p.c: 2766: break;
  8408  00223A  2BAD               	incf	StartChannelHopping@i& (0+255),f,b
  8409                           
  8410                           ; BSR set to: 0
  8411  00223C  0E02               	movlw	2
  8412  00223E  65AD               	cpfsgt	StartChannelHopping@i& (0+255),b
  8413  002240  D7B0               	goto	l8670
  8414                           
  8415                           ; BSR set to: 0
  8416                           ;miwi_p2p.c: 2767: }
  8417                           ;miwi_p2p.c: 2768: }
  8418                           ;miwi_p2p.c: 2769: }
  8419                           ;miwi_p2p.c: 2770: MiApp_SetChannel(OptimalChannel);
  8420  002242  51AC               	movf	StartChannelHopping@OptimalChannel& (0+255),w,b
  8421  002244  EFA4  F018         	goto	_MiApp_SetChannel
  8422  002248                     __end_of_StartChannelHopping:
  8423                           	opt stack 0
  8424                           tblptru	equ	0xFF8
  8425                           tblptrh	equ	0xFF7
  8426                           tblptrl	equ	0xFF6
  8427                           tablat	equ	0xFF5
  8428                           prodh	equ	0xFF4
  8429                           prodl	equ	0xFF3
  8430                           intcon	equ	0xFF2
  8431                           intcon2	equ	0xFF1
  8432                           intcon3	equ	0xFF0
  8433                           postinc0	equ	0xFEE
  8434                           wreg	equ	0xFE8
  8435                           indf1	equ	0xFE7
  8436                           postdec1	equ	0xFE5
  8437                           fsr1h	equ	0xFE2
  8438                           fsr1l	equ	0xFE1
  8439                           indf2	equ	0xFDF
  8440                           postinc2	equ	0xFDE
  8441                           postdec2	equ	0xFDD
  8442                           fsr2h	equ	0xFDA
  8443                           fsr2l	equ	0xFD9
  8444                           status	equ	0xFD8
  8445                           
  8446 ;; *************** function _MiApp_SetChannel *****************
  8447 ;; Defined at:
  8448 ;;		line 2378 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;  channel         1    wreg     unsigned char 
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;  channel         1   18[BANK0 ] unsigned char 
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1    wreg      unsigned char 
  8455 ;; Registers used:
  8456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8457 ;; Tracked objects:
  8458 ;;		On entry : F/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8465 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8466 ;;Total ram usage:        1 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; Hardware stack levels required when called:   12
  8469 ;; This function calls:
  8470 ;;		_EEPROM_Write
  8471 ;;		_MiMAC_SetChannel
  8472 ;; This function is called by:
  8473 ;;		_MiApp_ProtocolInit
  8474 ;;		_StartChannelHopping
  8475 ;;		_Initialize_Demo
  8476 ;; This function uses a non-reentrant model
  8477 ;;
  8478                           
  8479                           	psect	text31
  8480  003148                     __ptext31:
  8481                           	opt stack 0
  8482  003148                     _MiApp_SetChannel:
  8483                           	opt stack 12
  8484                           
  8485                           ;incstack = 0
  8486                           ;MiApp_SetChannel@channel stored from wreg
  8487  003148  6F72               	movwf	MiApp_SetChannel@channel& (0+255),b
  8488                           
  8489                           ;miwi_p2p.c: 2380: if( MiMAC_SetChannel(channel, 0) )
  8490  00314A  0100               	movlb	0	; () banked
  8491  00314C  6B6F               	clrf	MiMAC_SetChannel@offsetFreq& (0+255),b
  8492  00314E  5172               	movf	MiApp_SetChannel@channel& (0+255),w,b
  8493  003150  EC3D  F013         	call	_MiMAC_SetChannel
  8494  003154  0900               	iorlw	0
  8495  003156  E00C               	bz	l8438
  8496                           
  8497                           ; BSR set to: 0
  8498                           ;miwi_p2p.c: 2381: {
  8499                           ;miwi_p2p.c: 2382: currentChannel = channel;
  8500  003158  C072  F0F1         	movff	MiApp_SetChannel@channel,_currentChannel
  8501                           
  8502                           ; BSR set to: 0
  8503                           ;miwi_p2p.c: 2384: EEPROM_Write((uint8_t *)&currentChannel, 0x02, 1);
  8504  00315C  0EF1               	movlw	low _currentChannel
  8505  00315E  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
  8506  003160  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
  8507  003162  0E02               	movlw	2
  8508  003164  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
  8509  003166  0E01               	movlw	1
  8510  003168  6F6D               	movwf	EEPROM_Write@count& (0+255),b
  8511  00316A  EC83  F013         	call	_EEPROM_Write	;wreg free
  8512                           
  8513                           ;miwi_p2p.c: 2386: return 1;
  8514  00316E  0C01               	retlw	1
  8515  003170                     l8438:
  8516                           
  8517                           ; BSR set to: 0
  8518                           ;miwi_p2p.c: 2387: }
  8519                           ;miwi_p2p.c: 2388: return 0;
  8520  003170  0C00               	retlw	0	;funcret
  8521  003172                     __end_of_MiApp_SetChannel:
  8522                           	opt stack 0
  8523                           tblptru	equ	0xFF8
  8524                           tblptrh	equ	0xFF7
  8525                           tblptrl	equ	0xFF6
  8526                           tablat	equ	0xFF5
  8527                           prodh	equ	0xFF4
  8528                           prodl	equ	0xFF3
  8529                           intcon	equ	0xFF2
  8530                           intcon2	equ	0xFF1
  8531                           intcon3	equ	0xFF0
  8532                           postinc0	equ	0xFEE
  8533                           wreg	equ	0xFE8
  8534                           indf1	equ	0xFE7
  8535                           postdec1	equ	0xFE5
  8536                           fsr1h	equ	0xFE2
  8537                           fsr1l	equ	0xFE1
  8538                           indf2	equ	0xFDF
  8539                           postinc2	equ	0xFDE
  8540                           postdec2	equ	0xFDD
  8541                           fsr2h	equ	0xFDA
  8542                           fsr2l	equ	0xFD9
  8543                           status	equ	0xFD8
  8544                           
  8545 ;; *************** function _MiMAC_SetChannel *****************
  8546 ;; Defined at:
  8547 ;;		line 484 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;  channel         1    wreg     unsigned char 
  8550 ;;  offsetFreq      1   15[BANK0 ] unsigned char 
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;  channel         1   17[BANK0 ] unsigned char 
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      unsigned char 
  8555 ;; Registers used:
  8556 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8557 ;; Tracked objects:
  8558 ;;		On entry : F/0
  8559 ;;		On exit  : F/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8562 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8564 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8565 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8566 ;;Total ram usage:        3 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:   11
  8569 ;; This function calls:
  8570 ;;		_RegisterSet
  8571 ;;		_SetRFMode
  8572 ;; This function is called by:
  8573 ;;		_MiApp_SetChannel
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           	psect	text32
  8578  00267A                     __ptext32:
  8579                           	opt stack 0
  8580  00267A                     _MiMAC_SetChannel:
  8581                           	opt stack 12
  8582                           
  8583                           ;incstack = 0
  8584                           ;MiMAC_SetChannel@channel stored from wreg
  8585  00267A  6F71               	movwf	MiMAC_SetChannel@channel& (0+255),b
  8586                           
  8587                           ;drv_mrf_miwi_89xa.c: 486: if( channel >= 32 )
  8588  00267C  0E1F               	movlw	31
  8589  00267E  0100               	movlb	0	; () banked
  8590  002680  6571               	cpfsgt	MiMAC_SetChannel@channel& (0+255),b
  8591  002682  D001               	goto	l8264
  8592  002684  0C00               	retlw	0
  8593  002686                     l8264:
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;drv_mrf_miwi_89xa.c: 489: }
  8597                           ;drv_mrf_miwi_89xa.c: 492: RegisterSet(0x0C00 | 100);
  8598  002686  0E0C               	movlw	12
  8599  002688  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
  8600  00268A  0E64               	movlw	100
  8601  00268C  6F6A               	movwf	RegisterSet@setting& (0+255),b
  8602  00268E  EC36  F017         	call	_RegisterSet	;wreg free
  8603                           
  8604                           ;drv_mrf_miwi_89xa.c: 493: RegisterSet(0x0E00 | PVALUE[channel]);
  8605  002692  0E2F               	movlw	low _PVALUE
  8606  002694  0100               	movlb	0	; () banked
  8607  002696  2571               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  8608  002698  6EF6               	movwf	tblptrl,c
  8609  00269A  6AF7               	clrf	tblptrh,c
  8610  00269C  0EFD               	movlw	high _PVALUE
  8611  00269E  22F7               	addwfc	tblptrh,f,c
  8612  0026A0                     	if	0	;There are less than 3 active tblptr bytes
  8613  0026A0                     	endif
  8614  0026A0  0008               	tblrd		*
  8615  0026A2  CFF5 F070          	movff	tablat,??_MiMAC_SetChannel
  8616  0026A6  0E00               	movlw	0
  8617  0026A8  1170               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  8618  0026AA  6F6A               	movwf	RegisterSet@setting& (0+255),b
  8619  0026AC  0E0E               	movlw	14
  8620  0026AE  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
  8621  0026B0  EC36  F017         	call	_RegisterSet	;wreg free
  8622                           
  8623                           ;drv_mrf_miwi_89xa.c: 494: RegisterSet(0x1000 | SVALUE[channel]);
  8624  0026B4  0E4F               	movlw	low _SVALUE
  8625  0026B6  0100               	movlb	0	; () banked
  8626  0026B8  2571               	addwf	MiMAC_SetChannel@channel& (0+255),w,b
  8627  0026BA  6EF6               	movwf	tblptrl,c
  8628  0026BC  6AF7               	clrf	tblptrh,c
  8629  0026BE  0EFD               	movlw	high _SVALUE
  8630  0026C0  22F7               	addwfc	tblptrh,f,c
  8631  0026C2                     	if	0	;There are less than 3 active tblptr bytes
  8632  0026C2                     	endif
  8633  0026C2  0008               	tblrd		*
  8634  0026C4  CFF5 F070          	movff	tablat,??_MiMAC_SetChannel
  8635  0026C8  0E00               	movlw	0
  8636  0026CA  1170               	iorwf	??_MiMAC_SetChannel& (0+255),w,b
  8637  0026CC  6F6A               	movwf	RegisterSet@setting& (0+255),b
  8638  0026CE  0E10               	movlw	16
  8639  0026D0  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
  8640  0026D2  EC36  F017         	call	_RegisterSet	;wreg free
  8641                           
  8642                           ;drv_mrf_miwi_89xa.c: 495: SetRFMode(0x20);
  8643  0026D6  0E20               	movlw	32
  8644  0026D8  ECC2  F014         	call	_SetRFMode
  8645                           
  8646                           ; BSR set to: 0
  8647                           ;drv_mrf_miwi_89xa.c: 496: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
  8648  0026DC  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
  8649  0026DE  0E46               	movlw	70
  8650  0026E0  6F6A               	movwf	RegisterSet@setting& (0+255),b
  8651  0026E2  EC36  F017         	call	_RegisterSet	;wreg free
  8652                           
  8653                           ;drv_mrf_miwi_89xa.c: 497: SetRFMode(0x40);
  8654  0026E6  0E40               	movlw	64
  8655  0026E8  ECC2  F014         	call	_SetRFMode
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;drv_mrf_miwi_89xa.c: 498: RegisterSet(0x1C00 | ((0x0D) & 0xFD) | 0x02);
  8659  0026EC  0E1C               	movlw	28
  8660  0026EE  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
  8661  0026F0  0E0F               	movlw	15
  8662  0026F2  6F6A               	movwf	RegisterSet@setting& (0+255),b
  8663  0026F4  EC36  F017         	call	_RegisterSet	;wreg free
  8664                           
  8665                           ;drv_mrf_miwi_89xa.c: 499: SetRFMode(0x20);
  8666  0026F8  0E20               	movlw	32
  8667  0026FA  ECC2  F014         	call	_SetRFMode
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;drv_mrf_miwi_89xa.c: 500: SetRFMode(0x60);
  8671  0026FE  0E60               	movlw	96
  8672  002700  ECC2  F014         	call	_SetRFMode
  8673                           
  8674                           ; BSR set to: 0
  8675                           
  8676                           ; BSR set to: 0
  8677                           ;drv_mrf_miwi_89xa.c: 502: return 1;
  8678  002704  0C01               	retlw	1	;funcret
  8679  002706                     __end_of_MiMAC_SetChannel:
  8680                           	opt stack 0
  8681                           tblptru	equ	0xFF8
  8682                           tblptrh	equ	0xFF7
  8683                           tblptrl	equ	0xFF6
  8684                           tablat	equ	0xFF5
  8685                           prodh	equ	0xFF4
  8686                           prodl	equ	0xFF3
  8687                           intcon	equ	0xFF2
  8688                           intcon2	equ	0xFF1
  8689                           intcon3	equ	0xFF0
  8690                           postinc0	equ	0xFEE
  8691                           wreg	equ	0xFE8
  8692                           indf1	equ	0xFE7
  8693                           postdec1	equ	0xFE5
  8694                           fsr1h	equ	0xFE2
  8695                           fsr1l	equ	0xFE1
  8696                           indf2	equ	0xFDF
  8697                           postinc2	equ	0xFDE
  8698                           postdec2	equ	0xFDD
  8699                           fsr2h	equ	0xFDA
  8700                           fsr2l	equ	0xFD9
  8701                           status	equ	0xFD8
  8702                           
  8703 ;; *************** function _SW_Ack_SrED *****************
  8704 ;; Defined at:
  8705 ;;		line 2092 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;  Dest_Addr       2   64[BANK0 ] PTR unsigned char 
  8708 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
  8709 ;; Auto vars:     Size  Location     Type
  8710 ;;		None
  8711 ;; Return value:  Size  Location     Type
  8712 ;;                  1    wreg      unsigned char 
  8713 ;; Registers used:
  8714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8715 ;; Tracked objects:
  8716 ;;		On entry : F/0
  8717 ;;		On exit  : F/0
  8718 ;;		Unchanged: 0/0
  8719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8723 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8724 ;;Total ram usage:        2 bytes
  8725 ;; Hardware stack levels used:    1
  8726 ;; Hardware stack levels required when called:   14
  8727 ;; This function calls:
  8728 ;;		_SendPacket
  8729 ;; This function is called by:
  8730 ;;		_P2PTasks
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           	psect	text33
  8735  00319C                     __ptext33:
  8736                           	opt stack 0
  8737  00319C                     _SW_Ack_SrED:
  8738                           	opt stack 11
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;miwi_p2p.c: 2094: {TxData = 0;};
  8742                           
  8743                           ; BSR set to: 0
  8744                           ;incstack = 0
  8745  00319C  6BE5               	clrf	_TxData& (0+255),b
  8746                           
  8747                           ; BSR set to: 0
  8748                           ;miwi_p2p.c: 2095: TxBuffer[TxData++] = 0xDA;
  8749  00319E  0E95               	movlw	low _TxBuffer
  8750  0031A0  25E5               	addwf	_TxData& (0+255),w,b
  8751  0031A2  6ED9               	movwf	fsr2l,c
  8752  0031A4  6ADA               	clrf	fsr2h,c
  8753  0031A6  0E01               	movlw	high _TxBuffer
  8754  0031A8  22DA               	addwfc	fsr2h,f,c
  8755  0031AA  0EDA               	movlw	218
  8756  0031AC  6EDF               	movwf	indf2,c
  8757                           
  8758                           ; BSR set to: 0
  8759  0031AE  2BE5               	incf	_TxData& (0+255),f,b
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;miwi_p2p.c: 2097: return SendPacket(0, Dest_Addr, 1, 0);
  8763                           ;	Return value of _SW_Ack_SrED is never used
  8764  0031B0  C0A0  F096         	movff	SW_Ack_SrED@Dest_Addr,SendPacket@DestinationAddress
  8765  0031B4  C0A1  F097         	movff	SW_Ack_SrED@Dest_Addr+1,SendPacket@DestinationAddress+1
  8766  0031B8  0E01               	movlw	1
  8767  0031BA  6F98               	movwf	SendPacket@isCommand& (0+255),b
  8768  0031BC  0E00               	movlw	0
  8769  0031BE  6B99               	clrf	SendPacket@SecurityEnabled& (0+255),b
  8770  0031C0  EF78  F011         	goto	_SendPacket
  8771  0031C4                     __end_of_SW_Ack_SrED:
  8772                           	opt stack 0
  8773                           tblptru	equ	0xFF8
  8774                           tblptrh	equ	0xFF7
  8775                           tblptrl	equ	0xFF6
  8776                           tablat	equ	0xFF5
  8777                           prodh	equ	0xFF4
  8778                           prodl	equ	0xFF3
  8779                           intcon	equ	0xFF2
  8780                           intcon2	equ	0xFF1
  8781                           intcon3	equ	0xFF0
  8782                           postinc0	equ	0xFEE
  8783                           wreg	equ	0xFE8
  8784                           indf1	equ	0xFE7
  8785                           postdec1	equ	0xFE5
  8786                           fsr1h	equ	0xFE2
  8787                           fsr1l	equ	0xFE1
  8788                           indf2	equ	0xFDF
  8789                           postinc2	equ	0xFDE
  8790                           postdec2	equ	0xFDD
  8791                           fsr2h	equ	0xFDA
  8792                           fsr2l	equ	0xFD9
  8793                           status	equ	0xFD8
  8794                           
  8795 ;; *************** function _MiMAC_ReceivedPacket *****************
  8796 ;; Defined at:
  8797 ;;		line 851 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;  PayloadIndex    1   31[BANK0 ] unsigned char 
  8802 ;;  j               1    0        unsigned char 
  8803 ;;  currentTick     4   27[BANK0 ] struct _MIWI_TICK
  8804 ;;  i               1   32[BANK0 ] unsigned char 
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  1    wreg      unsigned char 
  8807 ;; Registers used:
  8808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8809 ;; Tracked objects:
  8810 ;;		On entry : F/0
  8811 ;;		On exit  : F/0
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8815 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8816 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8817 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8818 ;;Total ram usage:       14 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:    9
  8821 ;; This function calls:
  8822 ;;		_MiWi_TickGet
  8823 ;; This function is called by:
  8824 ;;		_P2PTasks
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text34
  8829  0014D6                     __ptext34:
  8830                           	opt stack 0
  8831  0014D6                     _MiMAC_ReceivedPacket:
  8832                           	opt stack 16
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;drv_mrf_miwi_89xa.c: 853: uint8_t i;
  8836                           ;drv_mrf_miwi_89xa.c: 854: MIWI_TICK currentTick;
  8837                           ;drv_mrf_miwi_89xa.c: 858: for(i = 0; i < 5; i++)
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;incstack = 0
  8841  0014D6  6B80               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
  8842  0014D8                     l8448:
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;drv_mrf_miwi_89xa.c: 859: {
  8846                           ;drv_mrf_miwi_89xa.c: 860: currentTick = MiWi_TickGet();
  8847  0014D8  EC31  F016         	call	_MiWi_TickGet	;wreg free
  8848  0014DC  C069  F07B         	movff	?_MiWi_TickGet,MiMAC_ReceivedPacket@currentTick
  8849  0014E0  C06A  F07C         	movff	?_MiWi_TickGet+1,MiMAC_ReceivedPacket@currentTick+1
  8850  0014E4  C06B  F07D         	movff	?_MiWi_TickGet+2,MiMAC_ReceivedPacket@currentTick+2
  8851  0014E8  C06C  F07E         	movff	?_MiWi_TickGet+3,MiMAC_ReceivedPacket@currentTick+3
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;drv_mrf_miwi_89xa.c: 861: if( AckInfo[i].Valid && (currentTick.Val > AckInfo[i].startTi
      +                          ck.Val) &&
  8855                           ;drv_mrf_miwi_89xa.c: 862: ((currentTick.Val - AckInfo[i].startTick.Val) > ((uint32_t)(1
      +                          6000000)/32)) )
  8856  0014EC  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  8857  0014EE  0D06               	mullw	6
  8858  0014F0  0E5F               	movlw	low _AckInfo
  8859  0014F2  24F3               	addwf	prodl,w,c
  8860  0014F4  6ED9               	movwf	fsr2l,c
  8861  0014F6  0E01               	movlw	high _AckInfo
  8862  0014F8  20F4               	addwfc	prodh,w,c
  8863  0014FA  6EDA               	movwf	fsr2h,c
  8864  0014FC  50DF               	movf	indf2,w,c
  8865  0014FE  E03F               	bz	l8458
  8866                           
  8867                           ; BSR set to: 0
  8868  001500  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  8869  001502  0D06               	mullw	6
  8870  001504  0E61               	movlw	low (_AckInfo+2)
  8871  001506  24F3               	addwf	prodl,w,c
  8872  001508  6ED9               	movwf	fsr2l,c
  8873  00150A  0E01               	movlw	high (_AckInfo+2)
  8874  00150C  20F4               	addwfc	prodh,w,c
  8875  00150E  6EDA               	movwf	fsr2h,c
  8876  001510  517B               	movf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
  8877  001512  5CDE               	subwf	postinc2,w,c
  8878  001514  517C               	movf	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
  8879  001516  58DE               	subwfb	postinc2,w,c
  8880  001518  517D               	movf	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
  8881  00151A  58DE               	subwfb	postinc2,w,c
  8882  00151C  517E               	movf	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
  8883  00151E  58DE               	subwfb	postinc2,w,c
  8884  001520  E22E               	bc	l8458
  8885                           
  8886                           ; BSR set to: 0
  8887  001522  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  8888  001524  0D06               	mullw	6
  8889  001526  0E61               	movlw	low (_AckInfo+2)
  8890  001528  24F3               	addwf	prodl,w,c
  8891  00152A  6ED9               	movwf	fsr2l,c
  8892  00152C  0E01               	movlw	high (_AckInfo+2)
  8893  00152E  20F4               	addwfc	prodh,w,c
  8894  001530  6EDA               	movwf	fsr2h,c
  8895  001532  CFDE F073          	movff	postinc2,??_MiMAC_ReceivedPacket
  8896  001536  CFDE F074          	movff	postinc2,??_MiMAC_ReceivedPacket+1
  8897  00153A  CFDE F075          	movff	postinc2,??_MiMAC_ReceivedPacket+2
  8898  00153E  CFDE F076          	movff	postinc2,??_MiMAC_ReceivedPacket+3
  8899  001542  5173               	movf	??_MiMAC_ReceivedPacket& (0+255),w,b
  8900  001544  5D7B               	subwf	MiMAC_ReceivedPacket@currentTick& (0+255),w,b
  8901  001546  6F77               	movwf	(??_MiMAC_ReceivedPacket+4)& (0+255),b
  8902  001548  5174               	movf	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  8903  00154A  597C               	subwfb	(MiMAC_ReceivedPacket@currentTick+1)& (0+255),w,b
  8904  00154C  6F78               	movwf	(??_MiMAC_ReceivedPacket+5)& (0+255),b
  8905  00154E  5175               	movf	(??_MiMAC_ReceivedPacket+2)& (0+255),w,b
  8906  001550  597D               	subwfb	(MiMAC_ReceivedPacket@currentTick+2)& (0+255),w,b
  8907  001552  6F79               	movwf	(??_MiMAC_ReceivedPacket+6)& (0+255),b
  8908  001554  5176               	movf	(??_MiMAC_ReceivedPacket+3)& (0+255),w,b
  8909  001556  597E               	subwfb	(MiMAC_ReceivedPacket@currentTick+3)& (0+255),w,b
  8910  001558  6F7A               	movwf	(??_MiMAC_ReceivedPacket+7)& (0+255),b
  8911  00155A  517A               	movf	(??_MiMAC_ReceivedPacket+7)& (0+255),w,b
  8912  00155C  E107               	bnz	u8070
  8913  00155E  0E21               	movlw	33
  8914  001560  5D77               	subwf	(??_MiMAC_ReceivedPacket+4)& (0+255),w,b
  8915  001562  0EA1               	movlw	161
  8916  001564  5978               	subwfb	(??_MiMAC_ReceivedPacket+5)& (0+255),w,b
  8917  001566  0E07               	movlw	7
  8918  001568  5979               	subwfb	(??_MiMAC_ReceivedPacket+6)& (0+255),w,b
  8919  00156A  E309               	bnc	l8458
  8920  00156C                     u8070:
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;drv_mrf_miwi_89xa.c: 863: {
  8924                           ;drv_mrf_miwi_89xa.c: 864: AckInfo[i].Valid = 0;
  8925  00156C  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  8926  00156E  0D06               	mullw	6
  8927  001570  0E5F               	movlw	low _AckInfo
  8928  001572  24F3               	addwf	prodl,w,c
  8929  001574  6ED9               	movwf	fsr2l,c
  8930  001576  0E01               	movlw	high _AckInfo
  8931  001578  20F4               	addwfc	prodh,w,c
  8932  00157A  6EDA               	movwf	fsr2h,c
  8933  00157C  6ADF               	clrf	indf2,c
  8934  00157E                     l8458:
  8935                           
  8936                           ; BSR set to: 0
  8937  00157E  2B80               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
  8938                           
  8939                           ; BSR set to: 0
  8940  001580  0E04               	movlw	4
  8941  001582  6580               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
  8942  001584  D7A9               	goto	l8448
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;drv_mrf_miwi_89xa.c: 865: }
  8946                           ;drv_mrf_miwi_89xa.c: 866: }
  8947                           ;drv_mrf_miwi_89xa.c: 869: if( ReceivedBankIndex != 0xFF )
  8948  001586  29E3               	incf	_ReceivedBankIndex& (0+255),w,b
  8949  001588  E001               	bz	l163
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;drv_mrf_miwi_89xa.c: 870: {
  8953                           ;drv_mrf_miwi_89xa.c: 871: return 0;
  8954  00158A  0C00               	retlw	0
  8955  00158C                     l163:
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;drv_mrf_miwi_89xa.c: 872: }
  8959                           ;drv_mrf_miwi_89xa.c: 874: for(i = 0; i < 2; i++)
  8960  00158C  6B80               	clrf	MiMAC_ReceivedPacket@i& (0+255),b
  8961  00158E                     l8472:
  8962                           
  8963                           ; BSR set to: 0
  8964                           ;drv_mrf_miwi_89xa.c: 875: {
  8965                           ;drv_mrf_miwi_89xa.c: 876: if( RxPacket[i].flags.bits.Valid )
  8966  00158E  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  8967  001590  0D39               	mullw	57
  8968  001592  0E8C               	movlw	low _RxPacket
  8969  001594  24F3               	addwf	prodl,w,c
  8970  001596  6ED9               	movwf	fsr2l,c
  8971  001598  0E02               	movlw	high _RxPacket
  8972  00159A  20F4               	addwfc	prodh,w,c
  8973  00159C  6EDA               	movwf	fsr2h,c
  8974  00159E  A0DF               	btfss	indf2,0,c
  8975  0015A0  D055               	goto	l8500
  8976                           
  8977                           ; BSR set to: 2
  8978                           ;drv_mrf_miwi_89xa.c: 877: {
  8979                           ;drv_mrf_miwi_89xa.c: 878: uint8_t PayloadIndex;
  8980                           ;drv_mrf_miwi_89xa.c: 879: uint8_t j;
  8981                           ;drv_mrf_miwi_89xa.c: 881: MACRxPacket.flags.Val = RxPacket[i].Payload[0];
  8982  0015A2  0100               	movlb	0	; () banked
  8983  0015A4  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  8984  0015A6  0D39               	mullw	57
  8985  0015A8  0E8D               	movlw	low (_RxPacket+1)
  8986  0015AA  24F3               	addwf	prodl,w,c
  8987  0015AC  6ED9               	movwf	fsr2l,c
  8988  0015AE  0E02               	movlw	high (_RxPacket+1)
  8989  0015B0  20F4               	addwfc	prodh,w,c
  8990  0015B2  6EDA               	movwf	fsr2h,c
  8991  0015B4  50DF               	movf	indf2,w,c
  8992  0015B6  6E3C               	movwf	_MACRxPacket,c
  8993                           
  8994                           ;drv_mrf_miwi_89xa.c: 882: MACRxPacket.PayloadLen = RxPacket[i].PayloadLen;
  8995  0015B8  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  8996  0015BA  0D39               	mullw	57
  8997  0015BC  0EC4               	movlw	low (_RxPacket+56)
  8998  0015BE  24F3               	addwf	prodl,w,c
  8999  0015C0  6ED9               	movwf	fsr2l,c
  9000  0015C2  0E02               	movlw	high (_RxPacket+56)
  9001  0015C4  20F4               	addwfc	prodh,w,c
  9002  0015C6  6EDA               	movwf	fsr2h,c
  9003  0015C8  50DF               	movf	indf2,w,c
  9004  0015CA  6E41               	movwf	_MACRxPacket+5,c
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;drv_mrf_miwi_89xa.c: 883: PayloadIndex = 2;
  9008  0015CC  0E02               	movlw	2
  9009  0015CE  6F7F               	movwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),b
  9010                           
  9011                           ; BSR set to: 0
  9012                           ;drv_mrf_miwi_89xa.c: 885: if( MACRxPacket.flags.bits.destPrsnt )
  9013  0015D0  AC3C               	btfss	_MACRxPacket,6,c
  9014  0015D2  D005               	goto	l8482
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;drv_mrf_miwi_89xa.c: 886: {
  9018                           ;drv_mrf_miwi_89xa.c: 887: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
  9019  0015D4  31D6               	rrcf	_MACInitParams& (0+255),w,b
  9020  0015D6  32E8               	rrcf	wreg,f,c
  9021  0015D8  32E8               	rrcf	wreg,f,c
  9022  0015DA  0B0F               	andlw	15
  9023  0015DC  277F               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
  9024  0015DE                     l8482:
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;drv_mrf_miwi_89xa.c: 888: }
  9028                           ;drv_mrf_miwi_89xa.c: 890: if( MACRxPacket.flags.bits.sourcePrsnt )
  9029  0015DE  AE3C               	btfss	_MACRxPacket,7,c
  9030  0015E0  D019               	goto	l169
  9031                           
  9032                           ; BSR set to: 0
  9033                           ;drv_mrf_miwi_89xa.c: 891: {
  9034                           ;drv_mrf_miwi_89xa.c: 892: MACRxPacket.SourceAddress = (uint8_t *)&(RxPacket[i].Payload[
      +                          PayloadIndex]);
  9035  0015E2  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9036  0015E4  0D39               	mullw	57
  9037  0015E6  0E8C               	movlw	low _RxPacket
  9038  0015E8  6F73               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
  9039  0015EA  0E02               	movlw	high _RxPacket
  9040  0015EC  6F74               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
  9041  0015EE  2B73               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9042  0015F0  0E00               	movlw	0
  9043  0015F2  2374               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9044  0015F4  50F3               	movf	prodl,w,c
  9045  0015F6  2773               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9046  0015F8  50F4               	movf	prodh,w,c
  9047  0015FA  2374               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9048  0015FC  517F               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9049  0015FE  2573               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9050  001600  6E3D               	movwf	_MACRxPacket+1,c
  9051  001602  0E00               	movlw	0
  9052  001604  2174               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9053  001606  6E3E               	movwf	_MACRxPacket+2,c
  9054                           
  9055                           ; BSR set to: 0
  9056                           ;drv_mrf_miwi_89xa.c: 893: PayloadIndex += MACInitParams.actionFlags.bits.PAddrLength;
  9057  001608  31D6               	rrcf	_MACInitParams& (0+255),w,b
  9058  00160A  32E8               	rrcf	wreg,f,c
  9059  00160C  32E8               	rrcf	wreg,f,c
  9060  00160E  0B0F               	andlw	15
  9061  001610  277F               	addwf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),f,b
  9062                           
  9063                           ;drv_mrf_miwi_89xa.c: 894: }
  9064  001612  D002               	goto	l8488
  9065  001614                     l169:
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;drv_mrf_miwi_89xa.c: 895: else
  9069                           ;drv_mrf_miwi_89xa.c: 896: {
  9070                           ;drv_mrf_miwi_89xa.c: 897: MACRxPacket.SourceAddress = (0);
  9071  001614  6A3D               	clrf	_MACRxPacket+1,c
  9072  001616  6A3E               	clrf	_MACRxPacket+2,c
  9073  001618                     l8488:
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;drv_mrf_miwi_89xa.c: 898: }
  9077                           ;drv_mrf_miwi_89xa.c: 998: MACRxPacket.PayloadLen -= PayloadIndex;
  9078  001618  517F               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9079  00161A  5E41               	subwf	_MACRxPacket+5,f,c
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;drv_mrf_miwi_89xa.c: 1002: MACRxPacket.Payload = (uint8_t *)&(RxPacket[i].Payload[Paylo
      +                          adIndex]);
  9083  00161C  5180               	movf	MiMAC_ReceivedPacket@i& (0+255),w,b
  9084  00161E  0D39               	mullw	57
  9085  001620  0E8C               	movlw	low _RxPacket
  9086  001622  6F73               	movwf	??_MiMAC_ReceivedPacket& (0+255),b
  9087  001624  0E02               	movlw	high _RxPacket
  9088  001626  6F74               	movwf	(??_MiMAC_ReceivedPacket+1)& (0+255),b
  9089  001628  2B73               	incf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9090  00162A  0E00               	movlw	0
  9091  00162C  2374               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9092  00162E  50F3               	movf	prodl,w,c
  9093  001630  2773               	addwf	??_MiMAC_ReceivedPacket& (0+255),f,b
  9094  001632  50F4               	movf	prodh,w,c
  9095  001634  2374               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),f,b
  9096  001636  517F               	movf	MiMAC_ReceivedPacket@PayloadIndex& (0+255),w,b
  9097  001638  2573               	addwf	??_MiMAC_ReceivedPacket& (0+255),w,b
  9098  00163A  6E3F               	movwf	_MACRxPacket+3,c
  9099  00163C  0E00               	movlw	0
  9100  00163E  2174               	addwfc	(??_MiMAC_ReceivedPacket+1)& (0+255),w,b
  9101  001640  6E40               	movwf	_MACRxPacket+4,c
  9102                           
  9103                           ; BSR set to: 0
  9104                           ;drv_mrf_miwi_89xa.c: 1004: MACRxPacket.RSSIValue = RSSILock;
  9105  001642  C0E2  F042         	movff	_RSSILock,_MACRxPacket+6
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;drv_mrf_miwi_89xa.c: 1007: ReceivedBankIndex = i;
  9109  001646  C080  F0E3         	movff	MiMAC_ReceivedPacket@i,_ReceivedBankIndex
  9110                           
  9111                           ; BSR set to: 0
  9112                           ;drv_mrf_miwi_89xa.c: 1008: return 1;
  9113  00164A  0C01               	retlw	1
  9114  00164C                     l8500:
  9115                           
  9116                           ; BSR set to: 2
  9117  00164C  0100               	movlb	0	; () banked
  9118  00164E  2B80               	incf	MiMAC_ReceivedPacket@i& (0+255),f,b
  9119                           
  9120                           ; BSR set to: 0
  9121  001650  0E01               	movlw	1
  9122  001652  6580               	cpfsgt	MiMAC_ReceivedPacket@i& (0+255),b
  9123  001654  D79C               	goto	l8472
  9124  001656  0C00               	retlw	0
  9125  001658                     __end_of_MiMAC_ReceivedPacket:
  9126                           	opt stack 0
  9127                           tblptru	equ	0xFF8
  9128                           tblptrh	equ	0xFF7
  9129                           tblptrl	equ	0xFF6
  9130                           tablat	equ	0xFF5
  9131                           prodh	equ	0xFF4
  9132                           prodl	equ	0xFF3
  9133                           intcon	equ	0xFF2
  9134                           intcon2	equ	0xFF1
  9135                           intcon3	equ	0xFF0
  9136                           postinc0	equ	0xFEE
  9137                           wreg	equ	0xFE8
  9138                           indf1	equ	0xFE7
  9139                           postdec1	equ	0xFE5
  9140                           fsr1h	equ	0xFE2
  9141                           fsr1l	equ	0xFE1
  9142                           indf2	equ	0xFDF
  9143                           postinc2	equ	0xFDE
  9144                           postdec2	equ	0xFDD
  9145                           fsr2h	equ	0xFDA
  9146                           fsr2l	equ	0xFD9
  9147                           status	equ	0xFD8
  9148                           
  9149 ;; *************** function _Forward_Packet_PANCr_to_EDy *****************
  9150 ;; Defined at:
  9151 ;;		line 178 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;  fw_payload      2   70[BANK0 ] PTR unsigned char 
  9154 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
  9155 ;;  index           1   72[BANK0 ] unsigned char 
  9156 ;;  EDxAddress      2   73[BANK0 ] PTR unsigned char 
  9157 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  i               1   76[BANK0 ] unsigned char 
  9160 ;;  status          1   75[BANK0 ] unsigned char 
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      unsigned char 
  9163 ;; Registers used:
  9164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9165 ;; Tracked objects:
  9166 ;;		On entry : F/0
  9167 ;;		On exit  : F/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9170 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9171 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9173 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9174 ;;Total ram usage:        7 bytes
  9175 ;; Hardware stack levels used:    1
  9176 ;; Hardware stack levels required when called:   16
  9177 ;; This function calls:
  9178 ;;		_DemoOutput_UnicastFail
  9179 ;;		_MiApp_UnicastConnection
  9180 ;; This function is called by:
  9181 ;;		_P2PTasks
  9182 ;; This function uses a non-reentrant model
  9183 ;;
  9184                           
  9185                           	psect	text35
  9186  002428                     __ptext35:
  9187                           	opt stack 0
  9188  002428                     _Forward_Packet_PANCr_to_EDy:
  9189                           	opt stack 9
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;miwi_p2p.c: 180: uint8_t i;
  9193                           ;miwi_p2p.c: 181: bool status;
  9194                           ;miwi_p2p.c: 182: {TxData = 0;};
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;incstack = 0
  9198  002428  6BE5               	clrf	_TxData& (0+255),b
  9199                           
  9200                           ; BSR set to: 0
  9201                           ;miwi_p2p.c: 183: TxBuffer[TxData++] = EDxAddress[0];
  9202  00242A  C0A9  FFD9         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress,fsr2l
  9203  00242E  C0AA  FFDA         	movff	Forward_Packet_PANCr_to_EDy@EDxAddress+1,fsr2h
  9204  002432  0E95               	movlw	low _TxBuffer
  9205  002434  25E5               	addwf	_TxData& (0+255),w,b
  9206  002436  6EE1               	movwf	fsr1l,c
  9207  002438  6AE2               	clrf	fsr1h,c
  9208  00243A  0E01               	movlw	high _TxBuffer
  9209  00243C  22E2               	addwfc	fsr1h,f,c
  9210  00243E  CFDF FFE7          	movff	indf2,indf1
  9211                           
  9212                           ; BSR set to: 0
  9213  002442  2BE5               	incf	_TxData& (0+255),f,b
  9214                           
  9215                           ; BSR set to: 0
  9216                           ;miwi_p2p.c: 184: TxBuffer[TxData++] = EDxAddress[1];
  9217  002444  EE20 F001          	lfsr	2,1
  9218  002448  51A9               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
  9219  00244A  26D9               	addwf	fsr2l,f,c
  9220  00244C  51AA               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
  9221  00244E  22DA               	addwfc	fsr2h,f,c
  9222  002450  0E95               	movlw	low _TxBuffer
  9223  002452  25E5               	addwf	_TxData& (0+255),w,b
  9224  002454  6EE1               	movwf	fsr1l,c
  9225  002456  6AE2               	clrf	fsr1h,c
  9226  002458  0E01               	movlw	high _TxBuffer
  9227  00245A  22E2               	addwfc	fsr1h,f,c
  9228  00245C  CFDF FFE7          	movff	indf2,indf1
  9229  002460  2BE5               	incf	_TxData& (0+255),f,b
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;miwi_p2p.c: 185: TxBuffer[TxData++] = EDxAddress[2];
  9233  002462  EE20 F002          	lfsr	2,2
  9234  002466  51A9               	movf	Forward_Packet_PANCr_to_EDy@EDxAddress& (0+255),w,b
  9235  002468  26D9               	addwf	fsr2l,f,c
  9236  00246A  51AA               	movf	(Forward_Packet_PANCr_to_EDy@EDxAddress+1)& (0+255),w,b
  9237  00246C  22DA               	addwfc	fsr2h,f,c
  9238  00246E  0E95               	movlw	low _TxBuffer
  9239  002470  25E5               	addwf	_TxData& (0+255),w,b
  9240  002472  6EE1               	movwf	fsr1l,c
  9241  002474  6AE2               	clrf	fsr1h,c
  9242  002476  0E01               	movlw	high _TxBuffer
  9243  002478  22E2               	addwfc	fsr1h,f,c
  9244  00247A  CFDF FFE7          	movff	indf2,indf1
  9245                           
  9246                           ; BSR set to: 0
  9247  00247E  2BE5               	incf	_TxData& (0+255),f,b
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;miwi_p2p.c: 186: for(i = 3; i < 35; i++)
  9251  002480  0E03               	movlw	3
  9252  002482  6FAC               	movwf	Forward_Packet_PANCr_to_EDy@i& (0+255),b
  9253  002484                     l8584:
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;miwi_p2p.c: 187: {
  9257                           ;miwi_p2p.c: 188: TxBuffer[TxData++] = fw_payload[i];
  9258  002484  51AC               	movf	Forward_Packet_PANCr_to_EDy@i& (0+255),w,b
  9259  002486  25A6               	addwf	Forward_Packet_PANCr_to_EDy@fw_payload& (0+255),w,b
  9260  002488  6ED9               	movwf	fsr2l,c
  9261  00248A  0E00               	movlw	0
  9262  00248C  21A7               	addwfc	(Forward_Packet_PANCr_to_EDy@fw_payload+1)& (0+255),w,b
  9263  00248E  6EDA               	movwf	fsr2h,c
  9264  002490  0E95               	movlw	low _TxBuffer
  9265  002492  25E5               	addwf	_TxData& (0+255),w,b
  9266  002494  6EE1               	movwf	fsr1l,c
  9267  002496  6AE2               	clrf	fsr1h,c
  9268  002498  0E01               	movlw	high _TxBuffer
  9269  00249A  22E2               	addwfc	fsr1h,f,c
  9270  00249C  CFDF FFE7          	movff	indf2,indf1
  9271                           
  9272                           ; BSR set to: 0
  9273  0024A0  2BE5               	incf	_TxData& (0+255),f,b
  9274                           
  9275                           ; BSR set to: 0
  9276  0024A2  2BAC               	incf	Forward_Packet_PANCr_to_EDy@i& (0+255),f,b
  9277                           
  9278                           ; BSR set to: 0
  9279  0024A4  0E22               	movlw	34
  9280  0024A6  65AC               	cpfsgt	Forward_Packet_PANCr_to_EDy@i& (0+255),b
  9281  0024A8  D7ED               	goto	l8584
  9282                           
  9283                           ; BSR set to: 0
  9284                           ;miwi_p2p.c: 189: }
  9285                           ;miwi_p2p.c: 193: status = MiApp_UnicastConnection (index,0) ;
  9286  0024AA  6BA4               	clrf	MiApp_UnicastConnection@SecEn& (0+255),b
  9287  0024AC  51A8               	movf	Forward_Packet_PANCr_to_EDy@index& (0+255),w,b
  9288  0024AE  EC0D  F018         	call	_MiApp_UnicastConnection
  9289  0024B2  0100               	movlb	0	; () banked
  9290  0024B4  6FAB               	movwf	Forward_Packet_PANCr_to_EDy@status& (0+255),b
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;miwi_p2p.c: 196: if(!status)
  9294  0024B6  51AB               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
  9295  0024B8  E102               	bnz	l8598
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;miwi_p2p.c: 197: {
  9299                           ;miwi_p2p.c: 198: DemoOutput_UnicastFail();
  9300  0024BA  EC94  F019         	call	_DemoOutput_UnicastFail	;wreg free
  9301  0024BE                     l8598:
  9302                           
  9303                           ; BSR set to: 0
  9304                           ;miwi_p2p.c: 199: }
  9305                           ;miwi_p2p.c: 200: return status;
  9306  0024BE  51AB               	movf	Forward_Packet_PANCr_to_EDy@status& (0+255),w,b
  9307                           
  9308                           ; BSR set to: 0
  9309  0024C0  0012               	return		;funcret
  9310  0024C2                     __end_of_Forward_Packet_PANCr_to_EDy:
  9311                           	opt stack 0
  9312                           tblptru	equ	0xFF8
  9313                           tblptrh	equ	0xFF7
  9314                           tblptrl	equ	0xFF6
  9315                           tablat	equ	0xFF5
  9316                           prodh	equ	0xFF4
  9317                           prodl	equ	0xFF3
  9318                           intcon	equ	0xFF2
  9319                           intcon2	equ	0xFF1
  9320                           intcon3	equ	0xFF0
  9321                           postinc0	equ	0xFEE
  9322                           wreg	equ	0xFE8
  9323                           indf1	equ	0xFE7
  9324                           postdec1	equ	0xFE5
  9325                           fsr1h	equ	0xFE2
  9326                           fsr1l	equ	0xFE1
  9327                           indf2	equ	0xFDF
  9328                           postinc2	equ	0xFDE
  9329                           postdec2	equ	0xFDD
  9330                           fsr2h	equ	0xFDA
  9331                           fsr2l	equ	0xFD9
  9332                           status	equ	0xFD8
  9333                           
  9334 ;; *************** function _MiApp_UnicastConnection *****************
  9335 ;; Defined at:
  9336 ;;		line 1764 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9337 ;; Parameters:    Size  Location     Type
  9338 ;;  ConnectionIn    1    wreg     unsigned char 
  9339 ;;  SecEn           1   68[BANK0 ] unsigned char 
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;  ConnectionIn    1   69[BANK0 ] unsigned char 
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  1    wreg      unsigned char 
  9344 ;; Registers used:
  9345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9346 ;; Tracked objects:
  9347 ;;		On entry : F/0
  9348 ;;		On exit  : D/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9351 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9352 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9354 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9355 ;;Total ram usage:        2 bytes
  9356 ;; Hardware stack levels used:    1
  9357 ;; Hardware stack levels required when called:   15
  9358 ;; This function calls:
  9359 ;;		_MiApp_UnicastAddress
  9360 ;; This function is called by:
  9361 ;;		_Forward_Packet_PANCr_to_EDy
  9362 ;;		_run_star_demo
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           	psect	text36
  9367  00301A                     __ptext36:
  9368                           	opt stack 0
  9369  00301A                     _MiApp_UnicastConnection:
  9370                           	opt stack 9
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;incstack = 0
  9374                           ;MiApp_UnicastConnection@ConnectionIndex stored from wreg
  9375  00301A  6FA5               	movwf	MiApp_UnicastConnection@ConnectionIndex& (0+255),b
  9376                           
  9377                           ;miwi_p2p.c: 1767: if( ConnectionTable[ConnectionIndex].status.bits.isValid )
  9378  00301C  0100               	movlb	0	; () banked
  9379  00301E  51A5               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  9380  003020  0D0E               	mullw	14
  9381  003022  0E0C               	movlw	low (_ConnectionTable+12)
  9382  003024  24F3               	addwf	prodl,w,c
  9383  003026  6ED9               	movwf	fsr2l,c
  9384  003028  0E02               	movlw	high (_ConnectionTable+12)
  9385  00302A  20F4               	addwfc	prodh,w,c
  9386  00302C  6EDA               	movwf	fsr2h,c
  9387  00302E  0102               	movlb	2	; () banked
  9388  003030  AEDF               	btfss	indf2,7,c
  9389  003032  0C00               	retlw	0
  9390                           
  9391                           ; BSR set to: 2
  9392                           ;miwi_p2p.c: 1768: {
  9393                           ;miwi_p2p.c: 1801: return MiApp_UnicastAddress(ConnectionTable[ConnectionIndex].Address,
      +                           1, SecEn);
  9394  003034  0100               	movlb	0	; () banked
  9395  003036  51A5               	movf	MiApp_UnicastConnection@ConnectionIndex& (0+255),w,b
  9396  003038  0D0E               	mullw	14
  9397  00303A  0E04               	movlw	low (_ConnectionTable+4)
  9398  00303C  24F3               	addwf	prodl,w,c
  9399  00303E  6FA0               	movwf	MiApp_UnicastAddress@DestinationAddress& (0+255),b
  9400  003040  0E02               	movlw	high (_ConnectionTable+4)
  9401  003042  20F4               	addwfc	prodh,w,c
  9402  003044  6FA1               	movwf	(MiApp_UnicastAddress@DestinationAddress+1)& (0+255),b
  9403  003046  0E01               	movlw	1
  9404  003048  6FA2               	movwf	MiApp_UnicastAddress@PermanentAddr& (0+255),b
  9405  00304A  C0A4  F0A3         	movff	MiApp_UnicastConnection@SecEn,MiApp_UnicastAddress@SecEn
  9406  00304E  EF81  F019         	goto	_MiApp_UnicastAddress	;wreg free
  9407  003052                     __end_of_MiApp_UnicastConnection:
  9408                           	opt stack 0
  9409                           tblptru	equ	0xFF8
  9410                           tblptrh	equ	0xFF7
  9411                           tblptrl	equ	0xFF6
  9412                           tablat	equ	0xFF5
  9413                           prodh	equ	0xFF4
  9414                           prodl	equ	0xFF3
  9415                           intcon	equ	0xFF2
  9416                           intcon2	equ	0xFF1
  9417                           intcon3	equ	0xFF0
  9418                           postinc0	equ	0xFEE
  9419                           wreg	equ	0xFE8
  9420                           indf1	equ	0xFE7
  9421                           postdec1	equ	0xFE5
  9422                           fsr1h	equ	0xFE2
  9423                           fsr1l	equ	0xFE1
  9424                           indf2	equ	0xFDF
  9425                           postinc2	equ	0xFDE
  9426                           postdec2	equ	0xFDD
  9427                           fsr2h	equ	0xFDA
  9428                           fsr2l	equ	0xFD9
  9429                           status	equ	0xFD8
  9430                           
  9431 ;; *************** function _MiApp_UnicastAddress *****************
  9432 ;; Defined at:
  9433 ;;		line 1843 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  DestinationA    2   64[BANK0 ] PTR unsigned char 
  9436 ;;		 -> ConnectionTable(140), 
  9437 ;;  PermanentAdd    1   66[BANK0 ] unsigned char 
  9438 ;;  SecEn           1   67[BANK0 ] unsigned char 
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;		None
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  1    wreg      unsigned char 
  9443 ;; Registers used:
  9444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9445 ;; Tracked objects:
  9446 ;;		On entry : F/0
  9447 ;;		On exit  : F/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9453 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9454 ;;Total ram usage:        4 bytes
  9455 ;; Hardware stack levels used:    1
  9456 ;; Hardware stack levels required when called:   14
  9457 ;; This function calls:
  9458 ;;		_SendPacket
  9459 ;; This function is called by:
  9460 ;;		_MiApp_UnicastConnection
  9461 ;; This function uses a non-reentrant model
  9462 ;;
  9463                           
  9464                           	psect	text37
  9465  003302                     __ptext37:
  9466                           	opt stack 0
  9467  003302                     _MiApp_UnicastAddress:
  9468                           	opt stack 9
  9469                           
  9470                           ; BSR set to: 0
  9471                           ;miwi_p2p.c: 1876: return SendPacket(0, DestinationAddress, 0, SecEn);
  9472                           
  9473                           ;incstack = 0
  9474  003302  C0A0  F096         	movff	MiApp_UnicastAddress@DestinationAddress,SendPacket@DestinationAddress
  9475  003306  C0A1  F097         	movff	MiApp_UnicastAddress@DestinationAddress+1,SendPacket@DestinationAddress+1
  9476  00330A  0E00               	movlw	0
  9477  00330C  6B98               	clrf	SendPacket@isCommand& (0+255),b
  9478  00330E  C0A3  F099         	movff	MiApp_UnicastAddress@SecEn,SendPacket@SecurityEnabled
  9479  003312  EF78  F011         	goto	_SendPacket
  9480  003316                     __end_of_MiApp_UnicastAddress:
  9481                           	opt stack 0
  9482                           tblptru	equ	0xFF8
  9483                           tblptrh	equ	0xFF7
  9484                           tblptrl	equ	0xFF6
  9485                           tablat	equ	0xFF5
  9486                           prodh	equ	0xFF4
  9487                           prodl	equ	0xFF3
  9488                           intcon	equ	0xFF2
  9489                           intcon2	equ	0xFF1
  9490                           intcon3	equ	0xFF0
  9491                           postinc0	equ	0xFEE
  9492                           wreg	equ	0xFE8
  9493                           indf1	equ	0xFE7
  9494                           postdec1	equ	0xFE5
  9495                           fsr1h	equ	0xFE2
  9496                           fsr1l	equ	0xFE1
  9497                           indf2	equ	0xFDF
  9498                           postinc2	equ	0xFDE
  9499                           postdec2	equ	0xFDD
  9500                           fsr2h	equ	0xFDA
  9501                           fsr2l	equ	0xFD9
  9502                           status	equ	0xFD8
  9503                           
  9504 ;; *************** function _SendPacket *****************
  9505 ;; Defined at:
  9506 ;;		line 1611 in file "../../../../../framework/miwi/src/miwi_p2p.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;  Broadcast       1    wreg     unsigned char 
  9509 ;;  DestinationA    2   54[BANK0 ] PTR unsigned char 
  9510 ;;		 -> ConnectionTable(140), NULL(0), RxPacket.Payload(55), RxPacket(114), 
  9511 ;;  isCommand       1   56[BANK0 ] unsigned char 
  9512 ;;  SecurityEnab    1   57[BANK0 ] unsigned char 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;  Broadcast       1   60[BANK0 ] unsigned char 
  9515 ;;  tParam          3   61[BANK0 ] struct .
  9516 ;;  status          1   59[BANK0 ] unsigned char 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  1    wreg      unsigned char 
  9519 ;; Registers used:
  9520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : F/0
  9523 ;;		On exit  : F/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9526 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9527 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9528 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9529 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9530 ;;Total ram usage:       10 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:   13
  9533 ;; This function calls:
  9534 ;;		_MiMAC_SendPacket
  9535 ;; This function is called by:
  9536 ;;		_P2PTasks
  9537 ;;		_CheckForData
  9538 ;;		_MiApp_UnicastAddress
  9539 ;;		_MiApp_UnicastStar
  9540 ;;		_SW_Ack_SrED
  9541 ;;		_MiApp_EstablishConnection
  9542 ;;		_StartChannelHopping
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545                           
  9546                           	psect	text38
  9547  0022F0                     __ptext38:
  9548                           	opt stack 0
  9549  0022F0                     _SendPacket:
  9550                           	opt stack 14
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;incstack = 0
  9554                           ;SendPacket@Broadcast stored from wreg
  9555  0022F0  6F9C               	movwf	SendPacket@Broadcast& (0+255),b
  9556                           
  9557                           ;miwi_p2p.c: 1617: MAC_TRANS_PARAM tParam;
  9558                           ;miwi_p2p.c: 1618: bool status;
  9559                           ;miwi_p2p.c: 1620: tParam.flags.Val = 0;
  9560  0022F2  0100               	movlb	0	; () banked
  9561  0022F4  6B9D               	clrf	SendPacket@tParam& (0+255),b
  9562                           
  9563                           ; BSR set to: 0
  9564                           ;miwi_p2p.c: 1621: tParam.flags.bits.packetType = (isCommand) ? 0x01 : 0x00;
  9565  0022F6  5198               	movf	SendPacket@isCommand& (0+255),w,b
  9566  0022F8  E003               	bz	u7150
  9567  0022FA  6B9A               	clrf	??_SendPacket& (0+255),b
  9568  0022FC  2B9A               	incf	??_SendPacket& (0+255),f,b
  9569  0022FE  D002               	goto	u7168
  9570  002300                     u7150:
  9571  002300  0100               	movlb	0	; () banked
  9572  002302  6B9A               	clrf	??_SendPacket& (0+255),b
  9573  002304                     u7168:
  9574  002304  519D               	movf	SendPacket@tParam& (0+255),w,b
  9575  002306  199A               	xorwf	??_SendPacket& (0+255),w,b
  9576  002308  0BFC               	andlw	-4
  9577  00230A  199A               	xorwf	??_SendPacket& (0+255),w,b
  9578  00230C  6F9D               	movwf	SendPacket@tParam& (0+255),b
  9579                           
  9580                           ;miwi_p2p.c: 1622: tParam.flags.bits.ackReq = (Broadcast) ? 0 : 1;
  9581  00230E  519C               	movf	SendPacket@Broadcast& (0+255),w,b
  9582  002310  E103               	bnz	u7170
  9583  002312  6B9A               	clrf	??_SendPacket& (0+255),b
  9584  002314  2B9A               	incf	??_SendPacket& (0+255),f,b
  9585  002316  D002               	goto	u7188
  9586  002318                     u7170:
  9587  002318  0100               	movlb	0	; () banked
  9588  00231A  6B9A               	clrf	??_SendPacket& (0+255),b
  9589  00231C                     u7188:
  9590  00231C  3B9A               	swapf	??_SendPacket& (0+255),f,b
  9591  00231E  479A               	rlncf	??_SendPacket& (0+255),f,b
  9592  002320  519D               	movf	SendPacket@tParam& (0+255),w,b
  9593  002322  199A               	xorwf	??_SendPacket& (0+255),w,b
  9594  002324  0BDF               	andlw	-33
  9595  002326  199A               	xorwf	??_SendPacket& (0+255),w,b
  9596  002328  6F9D               	movwf	SendPacket@tParam& (0+255),b
  9597                           
  9598                           ; BSR set to: 0
  9599                           ;miwi_p2p.c: 1623: tParam.flags.bits.broadcast = Broadcast;
  9600  00232A  B19C               	btfsc	SendPacket@Broadcast& (0+255),0,b
  9601  00232C  D002               	bra	u7195
  9602  00232E  959D               	bcf	SendPacket@tParam& (0+255),2,b
  9603  002330  D002               	bra	u7196
  9604  002332                     u7195:
  9605  002332  0100               	movlb	0	; () banked
  9606  002334  859D               	bsf	SendPacket@tParam& (0+255),2,b
  9607  002336                     u7196:
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;miwi_p2p.c: 1624: tParam.flags.bits.secEn = SecurityEnabled;
  9611  002336  B199               	btfsc	SendPacket@SecurityEnabled& (0+255),0,b
  9612  002338  D002               	bra	u7205
  9613  00233A  979D               	bcf	SendPacket@tParam& (0+255),3,b
  9614  00233C  D002               	bra	u7206
  9615  00233E                     u7205:
  9616  00233E  0100               	movlb	0	; () banked
  9617  002340  879D               	bsf	SendPacket@tParam& (0+255),3,b
  9618  002342                     u7206:
  9619                           
  9620                           ;miwi_p2p.c: 1633: tParam.flags.bits.destPrsnt = (Broadcast) ? 0:1;
  9621  002342  519C               	movf	SendPacket@Broadcast& (0+255),w,b
  9622  002344  E103               	bnz	u7210
  9623  002346  6B9A               	clrf	??_SendPacket& (0+255),b
  9624  002348  2B9A               	incf	??_SendPacket& (0+255),f,b
  9625  00234A  D002               	goto	u7228
  9626  00234C                     u7210:
  9627  00234C  0100               	movlb	0	; () banked
  9628  00234E  6B9A               	clrf	??_SendPacket& (0+255),b
  9629  002350                     u7228:
  9630  002350  3B9A               	swapf	??_SendPacket& (0+255),f,b
  9631  002352  479A               	rlncf	??_SendPacket& (0+255),f,b
  9632  002354  479A               	rlncf	??_SendPacket& (0+255),f,b
  9633  002356  519D               	movf	SendPacket@tParam& (0+255),w,b
  9634  002358  199A               	xorwf	??_SendPacket& (0+255),w,b
  9635  00235A  0BBF               	andlw	-65
  9636  00235C  199A               	xorwf	??_SendPacket& (0+255),w,b
  9637  00235E  6F9D               	movwf	SendPacket@tParam& (0+255),b
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;miwi_p2p.c: 1646: tParam.flags.bits.sourcePrsnt = 1;
  9641  002360  8F9D               	bsf	SendPacket@tParam& (0+255),7,b
  9642                           
  9643                           ;miwi_p2p.c: 1649: tParam.DestAddress = DestinationAddress;
  9644  002362  C096  F09E         	movff	SendPacket@DestinationAddress,SendPacket@tParam+1
  9645  002366  C097  F09F         	movff	SendPacket@DestinationAddress+1,SendPacket@tParam+2
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;miwi_p2p.c: 1655: status = MiMAC_SendPacket(tParam, TxBuffer, TxData);
  9649  00236A  C09D  F08D         	movff	SendPacket@tParam,MiMAC_SendPacket@transParam
  9650  00236E  C09E  F08E         	movff	SendPacket@tParam+1,MiMAC_SendPacket@transParam+1
  9651  002372  C09F  F08F         	movff	SendPacket@tParam+2,MiMAC_SendPacket@transParam+2
  9652  002376  0E95               	movlw	low _TxBuffer
  9653  002378  6F90               	movwf	MiMAC_SendPacket@MACPayload& (0+255),b
  9654  00237A  0E01               	movlw	high _TxBuffer
  9655  00237C  6F91               	movwf	(MiMAC_SendPacket@MACPayload+1)& (0+255),b
  9656  00237E  C0E5  F092         	movff	_TxData,MiMAC_SendPacket@MACPayloadLen
  9657  002382  EC42  F00E         	call	_MiMAC_SendPacket	;wreg free
  9658  002386  6F9B               	movwf	SendPacket@status& (0+255),b
  9659                           
  9660                           ; BSR set to: 0
  9661                           ;miwi_p2p.c: 1656: TxData = 0;
  9662  002388  6BE5               	clrf	_TxData& (0+255),b
  9663                           
  9664                           ; BSR set to: 0
  9665                           ;miwi_p2p.c: 1658: return status;
  9666  00238A  519B               	movf	SendPacket@status& (0+255),w,b
  9667                           
  9668                           ; BSR set to: 0
  9669  00238C  0012               	return		;funcret
  9670  00238E                     __end_of_SendPacket:
  9671                           	opt stack 0
  9672                           tblptru	equ	0xFF8
  9673                           tblptrh	equ	0xFF7
  9674                           tblptrl	equ	0xFF6
  9675                           tablat	equ	0xFF5
  9676                           prodh	equ	0xFF4
  9677                           prodl	equ	0xFF3
  9678                           intcon	equ	0xFF2
  9679                           intcon2	equ	0xFF1
  9680                           intcon3	equ	0xFF0
  9681                           postinc0	equ	0xFEE
  9682                           wreg	equ	0xFE8
  9683                           indf1	equ	0xFE7
  9684                           postdec1	equ	0xFE5
  9685                           fsr1h	equ	0xFE2
  9686                           fsr1l	equ	0xFE1
  9687                           indf2	equ	0xFDF
  9688                           postinc2	equ	0xFDE
  9689                           postdec2	equ	0xFDD
  9690                           fsr2h	equ	0xFDA
  9691                           fsr2l	equ	0xFD9
  9692                           status	equ	0xFD8
  9693                           
  9694 ;; *************** function _MiMAC_SendPacket *****************
  9695 ;; Defined at:
  9696 ;;		line 728 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  transParam      3   45[BANK0 ] struct .
  9699 ;;  MACPayload      2   48[BANK0 ] PTR unsigned char 
  9700 ;;		 -> TxBuffer(35), 
  9701 ;;  MACPayloadLe    1   50[BANK0 ] unsigned char 
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;  i               1   53[BANK0 ] unsigned char 
  9704 ;;  TxIndex         1   52[BANK0 ] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      unsigned char 
  9707 ;; Registers used:
  9708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9709 ;; Tracked objects:
  9710 ;;		On entry : F/0
  9711 ;;		On exit  : F/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9714 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9715 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9716 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9717 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9718 ;;Total ram usage:        9 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; Hardware stack levels required when called:   12
  9721 ;; This function calls:
  9722 ;;		_TxPacket
  9723 ;; This function is called by:
  9724 ;;		_SendPacket
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727                           
  9728                           	psect	text39
  9729  001C84                     __ptext39:
  9730                           	opt stack 0
  9731  001C84                     _MiMAC_SendPacket:
  9732                           	opt stack 14
  9733                           
  9734                           ; BSR set to: 0
  9735                           ;drv_mrf_miwi_89xa.c: 732: uint8_t i;
  9736                           ;drv_mrf_miwi_89xa.c: 733: uint8_t TxIndex;
  9737                           ;drv_mrf_miwi_89xa.c: 735: if( MACPayloadLen > 35 )
  9738                           
  9739                           ; BSR set to: 0
  9740                           ;incstack = 0
  9741  001C84  0E23               	movlw	35
  9742  001C86  6592               	cpfsgt	MiMAC_SendPacket@MACPayloadLen& (0+255),b
  9743  001C88  D001               	goto	l7740
  9744  001C8A  0C00               	retlw	0
  9745  001C8C                     l7740:
  9746                           
  9747                           ; BSR set to: 0
  9748                           ;drv_mrf_miwi_89xa.c: 738: }
  9749                           ;drv_mrf_miwi_89xa.c: 743: transParam.flags.bits.destPrsnt = (transParam.flags.bits.broa
      +                          dcast) ? 0:1;
  9750  001C8C  B58D               	btfsc	MiMAC_SendPacket@transParam& (0+255),2,b
  9751  001C8E  D003               	goto	u6980
  9752  001C90  6B93               	clrf	??_MiMAC_SendPacket& (0+255),b
  9753  001C92  2B93               	incf	??_MiMAC_SendPacket& (0+255),f,b
  9754  001C94  D002               	goto	u6998
  9755  001C96                     u6980:
  9756  001C96  0100               	movlb	0	; () banked
  9757  001C98  6B93               	clrf	??_MiMAC_SendPacket& (0+255),b
  9758  001C9A                     u6998:
  9759  001C9A  3B93               	swapf	??_MiMAC_SendPacket& (0+255),f,b
  9760  001C9C  4793               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
  9761  001C9E  4793               	rlncf	??_MiMAC_SendPacket& (0+255),f,b
  9762  001CA0  518D               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  9763  001CA2  1993               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
  9764  001CA4  0BBF               	andlw	-65
  9765  001CA6  1993               	xorwf	??_MiMAC_SendPacket& (0+255),w,b
  9766  001CA8  6F8D               	movwf	MiMAC_SendPacket@transParam& (0+255),b
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;drv_mrf_miwi_89xa.c: 747: transParam.flags.bits.sourcePrsnt = 1;
  9770  001CAA  8F8D               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
  9771                           
  9772                           ;drv_mrf_miwi_89xa.c: 750: if( transParam.flags.bits.packetType == 0x01 )
  9773  001CAC  518D               	movf	MiMAC_SendPacket@transParam& (0+255),w,b
  9774  001CAE  0B03               	andlw	3
  9775  001CB0  06E8               	decf	wreg,f,c
  9776  001CB2  E101               	bnz	l145
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;drv_mrf_miwi_89xa.c: 751: {
  9780                           ;drv_mrf_miwi_89xa.c: 752: transParam.flags.bits.sourcePrsnt = 1;
  9781  001CB4  8F8D               	bsf	MiMAC_SendPacket@transParam& (0+255),7,b
  9782  001CB6                     l145:
  9783                           
  9784                           ; BSR set to: 0
  9785                           ;drv_mrf_miwi_89xa.c: 753: }
  9786                           ;drv_mrf_miwi_89xa.c: 755: MACTxBuffer[0] = transParam.flags.Val;
  9787  001CB6  C08D  F100         	movff	MiMAC_SendPacket@transParam,_MACTxBuffer	;volatile
  9788                           
  9789                           ;drv_mrf_miwi_89xa.c: 756: MACTxBuffer[1] = MACSeq++;
  9790  001CBA  C0DD  F101         	movff	_MACSeq,_MACTxBuffer+1	;volatile
  9791                           
  9792                           ; BSR set to: 0
  9793  001CBE  2BDD               	incf	_MACSeq& (0+255),f,b
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;drv_mrf_miwi_89xa.c: 759: TxIndex = 2;
  9797  001CC0  0E02               	movlw	2
  9798  001CC2  6F94               	movwf	MiMAC_SendPacket@TxIndex& (0+255),b
  9799                           
  9800                           ; BSR set to: 0
  9801                           ;drv_mrf_miwi_89xa.c: 761: if( transParam.flags.bits.destPrsnt )
  9802  001CC4  AD8D               	btfss	MiMAC_SendPacket@transParam& (0+255),6,b
  9803  001CC6  D01A               	goto	l150
  9804                           
  9805                           ; BSR set to: 0
  9806                           ;drv_mrf_miwi_89xa.c: 762: {
  9807                           ;drv_mrf_miwi_89xa.c: 763: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
  9808  001CC8  6B95               	clrf	MiMAC_SendPacket@i& (0+255),b
  9809  001CCA  D010               	goto	l7760
  9810  001CCC                     l7754:
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;drv_mrf_miwi_89xa.c: 764: {
  9814                           ;drv_mrf_miwi_89xa.c: 765: MACTxBuffer[TxIndex++] = transParam.DestAddress[i];
  9815  001CCC  5195               	movf	MiMAC_SendPacket@i& (0+255),w,b
  9816  001CCE  258E               	addwf	(MiMAC_SendPacket@transParam+1)& (0+255),w,b
  9817  001CD0  6ED9               	movwf	fsr2l,c
  9818  001CD2  0E00               	movlw	0
  9819  001CD4  218F               	addwfc	(MiMAC_SendPacket@transParam+2)& (0+255),w,b
  9820  001CD6  6EDA               	movwf	fsr2h,c
  9821  001CD8  0E00               	movlw	low _MACTxBuffer
  9822  001CDA  2594               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  9823  001CDC  6EE1               	movwf	fsr1l,c
  9824  001CDE  6AE2               	clrf	fsr1h,c
  9825  001CE0  0E01               	movlw	high _MACTxBuffer
  9826  001CE2  22E2               	addwfc	fsr1h,f,c
  9827  001CE4  CFDF FFE7          	movff	indf2,indf1
  9828                           
  9829                           ; BSR set to: 0
  9830  001CE8  2B94               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
  9831                           
  9832                           ; BSR set to: 0
  9833  001CEA  2B95               	incf	MiMAC_SendPacket@i& (0+255),f,b
  9834  001CEC                     l7760:
  9835                           
  9836                           ; BSR set to: 0
  9837  001CEC  31D6               	rrcf	_MACInitParams& (0+255),w,b
  9838  001CEE  32E8               	rrcf	wreg,f,c
  9839  001CF0  32E8               	rrcf	wreg,f,c
  9840  001CF2  0B0F               	andlw	15
  9841  001CF4  6F93               	movwf	??_MiMAC_SendPacket& (0+255),b
  9842  001CF6  5193               	movf	??_MiMAC_SendPacket& (0+255),w,b
  9843  001CF8  5D95               	subwf	MiMAC_SendPacket@i& (0+255),w,b
  9844  001CFA  E3E8               	bnc	l7754
  9845  001CFC                     l150:
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;drv_mrf_miwi_89xa.c: 771: }
  9849                           ;drv_mrf_miwi_89xa.c: 773: if( transParam.flags.bits.sourcePrsnt )
  9850  001CFC  AF8D               	btfss	MiMAC_SendPacket@transParam& (0+255),7,b
  9851  001CFE  D01A               	goto	l151
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;drv_mrf_miwi_89xa.c: 774: {
  9855                           ;drv_mrf_miwi_89xa.c: 775: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i+
      +                          +)
  9856  001D00  6B95               	clrf	MiMAC_SendPacket@i& (0+255),b
  9857  001D02  D010               	goto	l7770
  9858  001D04                     l7764:
  9859                           
  9860                           ; BSR set to: 0
  9861                           ;drv_mrf_miwi_89xa.c: 776: {
  9862                           ;drv_mrf_miwi_89xa.c: 777: MACTxBuffer[TxIndex++] = MACInitParams.PAddress[i];
  9863  001D04  5195               	movf	MiMAC_SendPacket@i& (0+255),w,b
  9864  001D06  25D7               	addwf	(_MACInitParams+1)& (0+255),w,b
  9865  001D08  6ED9               	movwf	fsr2l,c
  9866  001D0A  0E00               	movlw	0
  9867  001D0C  21D8               	addwfc	(_MACInitParams+2)& (0+255),w,b
  9868  001D0E  6EDA               	movwf	fsr2h,c
  9869  001D10  0E00               	movlw	low _MACTxBuffer
  9870  001D12  2594               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  9871  001D14  6EE1               	movwf	fsr1l,c
  9872  001D16  6AE2               	clrf	fsr1h,c
  9873  001D18  0E01               	movlw	high _MACTxBuffer
  9874  001D1A  22E2               	addwfc	fsr1h,f,c
  9875  001D1C  CFDF FFE7          	movff	indf2,indf1
  9876                           
  9877                           ; BSR set to: 0
  9878  001D20  2B94               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
  9879                           
  9880                           ; BSR set to: 0
  9881  001D22  2B95               	incf	MiMAC_SendPacket@i& (0+255),f,b
  9882  001D24                     l7770:
  9883                           
  9884                           ; BSR set to: 0
  9885  001D24  31D6               	rrcf	_MACInitParams& (0+255),w,b
  9886  001D26  32E8               	rrcf	wreg,f,c
  9887  001D28  32E8               	rrcf	wreg,f,c
  9888  001D2A  0B0F               	andlw	15
  9889  001D2C  6F93               	movwf	??_MiMAC_SendPacket& (0+255),b
  9890  001D2E  5193               	movf	??_MiMAC_SendPacket& (0+255),w,b
  9891  001D30  5D95               	subwf	MiMAC_SendPacket@i& (0+255),w,b
  9892  001D32  E3E8               	bnc	l7764
  9893  001D34                     l151:
  9894                           
  9895                           ; BSR set to: 0
  9896                           ;drv_mrf_miwi_89xa.c: 778: }
  9897                           ;drv_mrf_miwi_89xa.c: 780: }
  9898                           ;drv_mrf_miwi_89xa.c: 841: for(i = 0; i < MACPayloadLen; i++)
  9899  001D34  6B95               	clrf	MiMAC_SendPacket@i& (0+255),b
  9900  001D36  D010               	goto	l7778
  9901  001D38                     l7772:
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;drv_mrf_miwi_89xa.c: 842: {
  9905                           ;drv_mrf_miwi_89xa.c: 843: MACTxBuffer[TxIndex++] = MACPayload[i];
  9906  001D38  5195               	movf	MiMAC_SendPacket@i& (0+255),w,b
  9907  001D3A  2590               	addwf	MiMAC_SendPacket@MACPayload& (0+255),w,b
  9908  001D3C  6ED9               	movwf	fsr2l,c
  9909  001D3E  0E00               	movlw	0
  9910  001D40  2191               	addwfc	(MiMAC_SendPacket@MACPayload+1)& (0+255),w,b
  9911  001D42  6EDA               	movwf	fsr2h,c
  9912  001D44  0E00               	movlw	low _MACTxBuffer
  9913  001D46  2594               	addwf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  9914  001D48  6EE1               	movwf	fsr1l,c
  9915  001D4A  6AE2               	clrf	fsr1h,c
  9916  001D4C  0E01               	movlw	high _MACTxBuffer
  9917  001D4E  22E2               	addwfc	fsr1h,f,c
  9918  001D50  CFDF FFE7          	movff	indf2,indf1
  9919                           
  9920                           ; BSR set to: 0
  9921  001D54  2B94               	incf	MiMAC_SendPacket@TxIndex& (0+255),f,b
  9922                           
  9923                           ; BSR set to: 0
  9924  001D56  2B95               	incf	MiMAC_SendPacket@i& (0+255),f,b
  9925  001D58                     l7778:
  9926                           
  9927                           ; BSR set to: 0
  9928  001D58  5192               	movf	MiMAC_SendPacket@MACPayloadLen& (0+255),w,b
  9929  001D5A  5D95               	subwf	MiMAC_SendPacket@i& (0+255),w,b
  9930  001D5C  E3ED               	bnc	l7772
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;drv_mrf_miwi_89xa.c: 844: }
  9934                           ;drv_mrf_miwi_89xa.c: 846: return TxPacket(TxIndex, MACInitParams.actionFlags.bits.CCAEn
      +                          able);
  9935  001D5E  0E00               	movlw	0
  9936  001D60  B3D6               	btfsc	_MACInitParams& (0+255),1,b
  9937  001D62  0E01               	movlw	1
  9938  001D64  6F79               	movwf	TxPacket@CCA& (0+255),b
  9939  001D66  5194               	movf	MiMAC_SendPacket@TxIndex& (0+255),w,b
  9940  001D68  EF20  F00D         	goto	_TxPacket
  9941  001D6C                     __end_of_MiMAC_SendPacket:
  9942                           	opt stack 0
  9943                           tblptru	equ	0xFF8
  9944                           tblptrh	equ	0xFF7
  9945                           tblptrl	equ	0xFF6
  9946                           tablat	equ	0xFF5
  9947                           prodh	equ	0xFF4
  9948                           prodl	equ	0xFF3
  9949                           intcon	equ	0xFF2
  9950                           intcon2	equ	0xFF1
  9951                           intcon3	equ	0xFF0
  9952                           postinc0	equ	0xFEE
  9953                           wreg	equ	0xFE8
  9954                           indf1	equ	0xFE7
  9955                           postdec1	equ	0xFE5
  9956                           fsr1h	equ	0xFE2
  9957                           fsr1l	equ	0xFE1
  9958                           indf2	equ	0xFDF
  9959                           postinc2	equ	0xFDE
  9960                           postdec2	equ	0xFDD
  9961                           fsr2h	equ	0xFDA
  9962                           fsr2l	equ	0xFD9
  9963                           status	equ	0xFD8
  9964                           
  9965 ;; *************** function _TxPacket *****************
  9966 ;; Defined at:
  9967 ;;		line 288 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;  TxPacketLen     1    wreg     unsigned char 
  9970 ;;  CCA             1   25[BANK0 ] unsigned char 
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;  TxPacketLen     1   43[BANK0 ] unsigned char 
  9973 ;;  allowedTxFai    1   40[BANK0 ] unsigned char 
  9974 ;;  t2              4   34[BANK0 ] struct _MIWI_TICK
  9975 ;;  t1              4   30[BANK0 ] struct _MIWI_TICK
  9976 ;;  i               1   44[BANK0 ] unsigned char 
  9977 ;;  status          1   42[BANK0 ] unsigned char 
  9978 ;;  rssival         1   41[BANK0 ] unsigned char 
  9979 ;;  reTry           1   39[BANK0 ] unsigned char 
  9980 ;;  CCARetries      1   38[BANK0 ] unsigned char 
  9981 ;; Return value:  Size  Location     Type
  9982 ;;                  1    wreg      unsigned char 
  9983 ;; Registers used:
  9984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9985 ;; Tracked objects:
  9986 ;;		On entry : F/0
  9987 ;;		On exit  : F/0
  9988 ;;		Unchanged: 0/0
  9989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9990 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9991 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9992 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9993 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9994 ;;Total ram usage:       20 bytes
  9995 ;; Hardware stack levels used:    1
  9996 ;; Hardware stack levels required when called:   11
  9997 ;; This function calls:
  9998 ;;		_DELAY_10us
  9999 ;;		_MiWi_TickGet
 10000 ;;		_RegisterRead
 10001 ;;		_RegisterSet
 10002 ;;		_SetRFMode
 10003 ;;		_WriteFIFO
 10004 ;; This function is called by:
 10005 ;;		_MiMAC_SendPacket
 10006 ;; This function uses a non-reentrant model
 10007 ;;
 10008                           
 10009                           	psect	text40
 10010  001A40                     __ptext40:
 10011                           	opt stack 0
 10012  001A40                     _TxPacket:
 10013                           	opt stack 14
 10014                           
 10015                           ; BSR set to: 0
 10016                           ;incstack = 0
 10017                           ;TxPacket@TxPacketLen stored from wreg
 10018  001A40  6F8B               	movwf	TxPacket@TxPacketLen& (0+255),b
 10019                           
 10020                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 10021                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 10022                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 10023                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 10024                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 10025                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 10026  001A42  0E03               	movlw	3
 10027  001A44  0100               	movlb	0	; () banked
 10028  001A46  6F87               	movwf	TxPacket@reTry& (0+255),b
 10029                           
 10030                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 10031  001A48  D087               	goto	l7708
 10032  001A4A                     l88:
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;drv_mrf_miwi_89xa.c: 305: {
 10036                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 10037                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 10038  001A4A  6B88               	clrf	TxPacket@allowedTxFailure& (0+255),b
 10039  001A4C                     l89:
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 10043  001A4C  6BE9               	clrf	_hasAck& (0+255),b	;volatile
 10044                           
 10045                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 10046  001A4E  6B86               	clrf	TxPacket@CCARetries& (0+255),b
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 10050  001A50  5179               	movf	TxPacket@CCA& (0+255),w,b
 10051  001A52  E018               	bz	l90
 10052  001A54                     l7646:
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 10056  001A54  0E28               	movlw	40
 10057  001A56  ECA6  F016         	call	_RegisterRead
 10058  001A5A  6F89               	movwf	TxPacket@rssival& (0+255),b
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 10062  001A5C  90D8               	bcf	status,0,c
 10063  001A5E  3389               	rrcf	TxPacket@rssival& (0+255),f,b
 10064                           
 10065                           ; BSR set to: 0
 10066                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 10067  001A60  0E41               	movlw	65
 10068  001A62  6589               	cpfsgt	TxPacket@rssival& (0+255),b
 10069  001A64  D00F               	goto	l90
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;drv_mrf_miwi_89xa.c: 326: {
 10073                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 10074  001A66  2B86               	incf	TxPacket@CCARetries& (0+255),f,b
 10075  001A68  0586               	decf	TxPacket@CCARetries& (0+255),w,b
 10076  001A6A  6F7A               	movwf	??_TxPacket& (0+255),b
 10077  001A6C  0E04               	movlw	4
 10078  001A6E  657A               	cpfsgt	??_TxPacket& (0+255),b
 10079  001A70  D001               	goto	l7658
 10080  001A72  0C00               	retlw	0
 10081  001A74                     l7658:
 10082                           
 10083                           ; BSR set to: 0
 10084                           ;drv_mrf_miwi_89xa.c: 331: }
 10085                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
 10086  001A74  0E01               	movlw	1
 10087  001A76  6F69               	movwf	DELAY_10us@tenMicroSecondCounter& (0+255),b
 10088  001A78  6B6A               	clrf	(DELAY_10us@tenMicroSecondCounter+1)& (0+255),b
 10089  001A7A  6B6B               	clrf	(DELAY_10us@tenMicroSecondCounter+2)& (0+255),b
 10090  001A7C  6B6C               	clrf	(DELAY_10us@tenMicroSecondCounter+3)& (0+255),b
 10091  001A7E  EC95  F00F         	call	_DELAY_10us	;wreg free
 10092                           
 10093                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
 10094  001A82  D7E8               	goto	l7646
 10095  001A84                     l90:
 10096                           
 10097                           ; BSR set to: 0
 10098                           ;drv_mrf_miwi_89xa.c: 334: }
 10099                           ;drv_mrf_miwi_89xa.c: 335: }
 10100                           ;drv_mrf_miwi_89xa.c: 340: INTCONbits.INT0IE = 0;
 10101  001A84  98F2               	bcf	intcon,4,c	;volatile
 10102                           
 10103                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT1IE = 0;
 10104  001A86  96F0               	bcf	intcon3,3,c	;volatile
 10105                           
 10106                           ; BSR set to: 0
 10107                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
 10108  001A88  0E20               	movlw	32
 10109  001A8A  ECC2  F014         	call	_SetRFMode
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
 10113  001A8E  0E1A               	movlw	26
 10114  001A90  6F6B               	movwf	(RegisterSet@setting+1)& (0+255),b
 10115  001A92  0EC9               	movlw	201
 10116  001A94  6F6A               	movwf	RegisterSet@setting& (0+255),b
 10117  001A96  EC36  F017         	call	_RegisterSet	;wreg free
 10118                           
 10119                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
 10120  001A9A  0100               	movlb	0	; () banked
 10121  001A9C  518B               	movf	TxPacket@TxPacketLen& (0+255),w,b
 10122  001A9E  ECD2  F017         	call	_WriteFIFO
 10123                           
 10124                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
 10125  001AA2  0100               	movlb	0	; () banked
 10126  001AA4  6B8C               	clrf	TxPacket@i& (0+255),b
 10127  001AA6  D00B               	goto	l7672
 10128  001AA8                     l7668:
 10129                           
 10130                           ; BSR set to: 0
 10131                           ;drv_mrf_miwi_89xa.c: 347: {
 10132                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
 10133  001AA8  0E00               	movlw	low _MACTxBuffer
 10134  001AAA  258C               	addwf	TxPacket@i& (0+255),w,b
 10135  001AAC  6ED9               	movwf	fsr2l,c
 10136  001AAE  6ADA               	clrf	fsr2h,c
 10137  001AB0  0E01               	movlw	high _MACTxBuffer
 10138  001AB2  22DA               	addwfc	fsr2h,f,c
 10139  001AB4  50DF               	movf	indf2,w,c
 10140  001AB6  ECD2  F017         	call	_WriteFIFO
 10141  001ABA  0100               	movlb	0	; () banked
 10142  001ABC  2B8C               	incf	TxPacket@i& (0+255),f,b
 10143  001ABE                     l7672:
 10144                           
 10145                           ; BSR set to: 0
 10146  001ABE  518B               	movf	TxPacket@TxPacketLen& (0+255),w,b
 10147  001AC0  5D8C               	subwf	TxPacket@i& (0+255),w,b
 10148  001AC2  E3F2               	bnc	l7668
 10149                           
 10150                           ; BSR set to: 0
 10151                           ;drv_mrf_miwi_89xa.c: 349: }
 10152                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
 10153  001AC4  0E80               	movlw	128
 10154  001AC6  ECC2  F014         	call	_SetRFMode
 10155                           
 10156                           ; BSR set to: 0
 10157                           ;drv_mrf_miwi_89xa.c: 352: INTCONbits.INT0IE = 1;
 10158  001ACA  88F2               	bsf	intcon,4,c	;volatile
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT1IE = 1;
 10162  001ACC  86F0               	bsf	intcon3,3,c	;volatile
 10163  001ACE                     l7680:
 10164                           
 10165                           ; BSR set to: 0
 10166  001ACE  51DB               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 10167  001AD0  E102               	bnz	l102
 10168                           
 10169                           ; BSR set to: 0
 10170  001AD2  A0F0               	btfss	intcon3,0,c	;volatile
 10171  001AD4  D7FC               	goto	l7680
 10172  001AD6                     l102:
 10173                           
 10174                           ; BSR set to: 0
 10175                           ;drv_mrf_miwi_89xa.c: 358: };
 10176                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
 10177  001AD6  6BDB               	clrf	_IRQ1_Received& (0+255),b	;volatile
 10178                           
 10179                           ; BSR set to: 0
 10180                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
 10181  001AD8  0E20               	movlw	32
 10182  001ADA  ECC2  F014         	call	_SetRFMode
 10183                           
 10184                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
 10185  001ADE  0E60               	movlw	96
 10186  001AE0  ECC2  F014         	call	_SetRFMode
 10187                           
 10188                           ; BSR set to: 0
 10189                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
 10190  001AE4  0101               	movlb	1	; () banked
 10191  001AE6  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 10192  001AE8  D00E               	goto	l7694
 10193                           
 10194                           ; BSR set to: 1
 10195                           ;drv_mrf_miwi_89xa.c: 368: {
 10196                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
 10197  001AEA  C101  F04F         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 10198                           
 10199                           ; BSR set to: 1
 10200                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
 10201  001AEE  EC31  F016         	call	_MiWi_TickGet	;wreg free
 10202  001AF2  C069  F07E         	movff	?_MiWi_TickGet,TxPacket@t1
 10203  001AF6  C06A  F07F         	movff	?_MiWi_TickGet+1,TxPacket@t1+1
 10204  001AFA  C06B  F080         	movff	?_MiWi_TickGet+2,TxPacket@t1+2
 10205  001AFE  C06C  F081         	movff	?_MiWi_TickGet+3,TxPacket@t1+3
 10206  001B02                     l7692:
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;drv_mrf_miwi_89xa.c: 372: {
 10210                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
 10211  001B02  51E9               	movf	_hasAck& (0+255),w,b	;volatile
 10212  001B04  E004               	bz	l7696
 10213  001B06                     l7694:
 10214                           
 10215                           ;drv_mrf_miwi_89xa.c: 374: {
 10216                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
 10217  001B06  0E01               	movlw	1
 10218  001B08  0100               	movlb	0	; () banked
 10219  001B0A  6F8A               	movwf	TxPacket@status& (0+255),b
 10220                           
 10221                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
 10222  001B0C  D02A               	goto	l7710
 10223  001B0E                     l7696:
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;drv_mrf_miwi_89xa.c: 377: }
 10227                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
 10228  001B0E  EC31  F016         	call	_MiWi_TickGet	;wreg free
 10229  001B12  C069  F082         	movff	?_MiWi_TickGet,TxPacket@t2
 10230  001B16  C06A  F083         	movff	?_MiWi_TickGet+1,TxPacket@t2+1
 10231  001B1A  C06B  F084         	movff	?_MiWi_TickGet+2,TxPacket@t2+2
 10232  001B1E  C06C  F085         	movff	?_MiWi_TickGet+3,TxPacket@t2+3
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 10236  001B22  517E               	movf	TxPacket@t1& (0+255),w,b
 10237  001B24  5D82               	subwf	TxPacket@t2& (0+255),w,b
 10238  001B26  6F7A               	movwf	??_TxPacket& (0+255),b
 10239  001B28  517F               	movf	(TxPacket@t1+1)& (0+255),w,b
 10240  001B2A  5983               	subwfb	(TxPacket@t2+1)& (0+255),w,b
 10241  001B2C  6F7B               	movwf	(??_TxPacket+1)& (0+255),b
 10242  001B2E  5180               	movf	(TxPacket@t1+2)& (0+255),w,b
 10243  001B30  5984               	subwfb	(TxPacket@t2+2)& (0+255),w,b
 10244  001B32  6F7C               	movwf	(??_TxPacket+2)& (0+255),b
 10245  001B34  5181               	movf	(TxPacket@t1+3)& (0+255),w,b
 10246  001B36  5985               	subwfb	(TxPacket@t2+3)& (0+255),w,b
 10247  001B38  6F7D               	movwf	(??_TxPacket+3)& (0+255),b
 10248  001B3A  517D               	movf	(??_TxPacket+3)& (0+255),w,b
 10249  001B3C  117C               	iorwf	(??_TxPacket+2)& (0+255),w,b
 10250  001B3E  E105               	bnz	u6900
 10251  001B40  0EA9               	movlw	169
 10252  001B42  5D7A               	subwf	??_TxPacket& (0+255),w,b
 10253  001B44  0E61               	movlw	97
 10254  001B46  597B               	subwfb	(??_TxPacket+1)& (0+255),w,b
 10255  001B48  E3DC               	bnc	l7692
 10256  001B4A                     u6900:
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;drv_mrf_miwi_89xa.c: 382: }
 10260                           ;drv_mrf_miwi_89xa.c: 383: }
 10261                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
 10262  001B4A  2B88               	incf	TxPacket@allowedTxFailure& (0+255),f,b
 10263  001B4C  0588               	decf	TxPacket@allowedTxFailure& (0+255),w,b
 10264  001B4E  6F7A               	movwf	??_TxPacket& (0+255),b
 10265  001B50  0E04               	movlw	4
 10266  001B52  617A               	cpfslt	??_TxPacket& (0+255),b
 10267  001B54  D001               	goto	l7708
 10268  001B56  D77A               	goto	l89
 10269  001B58                     l7708:
 10270                           
 10271                           ; BSR set to: 0
 10272  001B58  0787               	decf	TxPacket@reTry& (0+255),f,b
 10273  001B5A  2987               	incf	TxPacket@reTry& (0+255),w,b
 10274  001B5C  E001 D775          	bnz	l88
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;drv_mrf_miwi_89xa.c: 394: }
 10278                           ;drv_mrf_miwi_89xa.c: 395: }
 10279                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
 10280  001B60  6B8A               	clrf	TxPacket@status& (0+255),b
 10281  001B62                     l7710:
 10282                           
 10283                           ; BSR set to: 0
 10284                           ;drv_mrf_miwi_89xa.c: 399: return status;
 10285  001B62  518A               	movf	TxPacket@status& (0+255),w,b
 10286                           
 10287                           ; BSR set to: 0
 10288  001B64  0012               	return		;funcret
 10289  001B66                     __end_of_TxPacket:
 10290                           	opt stack 0
 10291                           tblptru	equ	0xFF8
 10292                           tblptrh	equ	0xFF7
 10293                           tblptrl	equ	0xFF6
 10294                           tablat	equ	0xFF5
 10295                           prodh	equ	0xFF4
 10296                           prodl	equ	0xFF3
 10297                           intcon	equ	0xFF2
 10298                           intcon2	equ	0xFF1
 10299                           intcon3	equ	0xFF0
 10300                           postinc0	equ	0xFEE
 10301                           wreg	equ	0xFE8
 10302                           indf1	equ	0xFE7
 10303                           postdec1	equ	0xFE5
 10304                           fsr1h	equ	0xFE2
 10305                           fsr1l	equ	0xFE1
 10306                           indf2	equ	0xFDF
 10307                           postinc2	equ	0xFDE
 10308                           postdec2	equ	0xFDD
 10309                           fsr2h	equ	0xFDA
 10310                           fsr2l	equ	0xFD9
 10311                           status	equ	0xFD8
 10312                           
 10313 ;; *************** function _WriteFIFO *****************
 10314 ;; Defined at:
 10315 ;;		line 244 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10316 ;; Parameters:    Size  Location     Type
 10317 ;;  Data            1    wreg     unsigned char 
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;  Data            1   10[BANK0 ] unsigned char 
 10320 ;;  IRQ0select      1   12[BANK0 ] unsigned char 
 10321 ;;  IRQ1select      1   11[BANK0 ] unsigned char 
 10322 ;; Return value:  Size  Location     Type
 10323 ;;		None               void
 10324 ;; Registers used:
 10325 ;;		wreg, status,2, cstack
 10326 ;; Tracked objects:
 10327 ;;		On entry : F/0
 10328 ;;		On exit  : 0/0
 10329 ;;		Unchanged: 0/0
 10330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10332 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10334 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10335 ;;Total ram usage:        3 bytes
 10336 ;; Hardware stack levels used:    1
 10337 ;; Hardware stack levels required when called:    9
 10338 ;; This function calls:
 10339 ;;		_SPI1_Exchange8bit
 10340 ;; This function is called by:
 10341 ;;		_TxPacket
 10342 ;; This function uses a non-reentrant model
 10343 ;;
 10344                           
 10345                           	psect	text41
 10346  002FA4                     __ptext41:
 10347                           	opt stack 0
 10348  002FA4                     _WriteFIFO:
 10349                           	opt stack 15
 10350                           
 10351                           ; BSR set to: 0
 10352                           ;incstack = 0
 10353                           ;WriteFIFO@Data stored from wreg
 10354  002FA4  6F6A               	movwf	WriteFIFO@Data& (0+255),b
 10355                           
 10356                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 10357  002FA6  0E00               	movlw	0
 10358  002FA8  B6F0               	btfsc	intcon3,3,c	;volatile
 10359  002FAA  0E01               	movlw	1
 10360  002FAC  0100               	movlb	0	; () banked
 10361  002FAE  6F6B               	movwf	WriteFIFO@IRQ1select& (0+255),b
 10362                           
 10363                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 10364  002FB0  0E00               	movlw	0
 10365  002FB2  B8F2               	btfsc	intcon,4,c	;volatile
 10366  002FB4  0E01               	movlw	1
 10367  002FB6  6F6C               	movwf	WriteFIFO@IRQ0select& (0+255),b
 10368                           
 10369                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 10370  002FB8  98F2               	bcf	intcon,4,c	;volatile
 10371                           
 10372                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 10373  002FBA  96F0               	bcf	intcon3,3,c	;volatile
 10374                           
 10375                           ;drv_mrf_miwi_89xa.c: 254: LATAbits.LATA5 = 0;
 10376  002FBC  9A89               	bcf	3977,5,c	;volatile
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;drv_mrf_miwi_89xa.c: 255: SPI1_Exchange8bit(Data);
 10380  002FBE  516A               	movf	WriteFIFO@Data& (0+255),w,b
 10381  002FC0  EC8B  F019         	call	_SPI1_Exchange8bit
 10382                           
 10383                           ;drv_mrf_miwi_89xa.c: 256: LATAbits.LATA5 = 1;
 10384  002FC4  8A89               	bsf	3977,5,c	;volatile
 10385                           
 10386                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 10387  002FC6  0100               	movlb	0	; () banked
 10388  002FC8  B16B               	btfsc	WriteFIFO@IRQ1select& (0+255),0,b
 10389  002FCA  D002               	bra	u6745
 10390  002FCC  96F0               	bcf	intcon3,3,c	;volatile
 10391  002FCE  D001               	bra	u6746
 10392  002FD0                     u6745:
 10393  002FD0  86F0               	bsf	intcon3,3,c	;volatile
 10394  002FD2                     u6746:
 10395                           
 10396                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 10397  002FD2  0100               	movlb	0	; () banked
 10398  002FD4  B16C               	btfsc	WriteFIFO@IRQ0select& (0+255),0,b
 10399  002FD6  D002               	bra	u6755
 10400  002FD8  98F2               	bcf	intcon,4,c	;volatile
 10401  002FDA  D001               	bra	u6756
 10402  002FDC                     u6755:
 10403  002FDC  88F2               	bsf	intcon,4,c	;volatile
 10404  002FDE                     u6756:
 10405  002FDE  0012               	return		;funcret
 10406  002FE0                     __end_of_WriteFIFO:
 10407                           	opt stack 0
 10408                           tblptru	equ	0xFF8
 10409                           tblptrh	equ	0xFF7
 10410                           tblptrl	equ	0xFF6
 10411                           tablat	equ	0xFF5
 10412                           prodh	equ	0xFF4
 10413                           prodl	equ	0xFF3
 10414                           intcon	equ	0xFF2
 10415                           intcon2	equ	0xFF1
 10416                           intcon3	equ	0xFF0
 10417                           postinc0	equ	0xFEE
 10418                           wreg	equ	0xFE8
 10419                           indf1	equ	0xFE7
 10420                           postdec1	equ	0xFE5
 10421                           fsr1h	equ	0xFE2
 10422                           fsr1l	equ	0xFE1
 10423                           indf2	equ	0xFDF
 10424                           postinc2	equ	0xFDE
 10425                           postdec2	equ	0xFDD
 10426                           fsr2h	equ	0xFDA
 10427                           fsr2l	equ	0xFD9
 10428                           status	equ	0xFD8
 10429                           
 10430 ;; *************** function _SetRFMode *****************
 10431 ;; Defined at:
 10432 ;;		line 667 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  mode            1    wreg     unsigned char 
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;  mode            1   14[BANK0 ] unsigned char 
 10437 ;; Return value:  Size  Location     Type
 10438 ;;		None               void
 10439 ;; Registers used:
 10440 ;;		wreg, status,2, status,0, cstack
 10441 ;; Tracked objects:
 10442 ;;		On entry : 0/0
 10443 ;;		On exit  : F/0
 10444 ;;		Unchanged: 0/0
 10445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10447 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10449 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10450 ;;Total ram usage:        1 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; Hardware stack levels required when called:   10
 10453 ;; This function calls:
 10454 ;;		_RegisterSet
 10455 ;; This function is called by:
 10456 ;;		_TxPacket
 10457 ;;		_MiMAC_SetChannel
 10458 ;;		_MiMAC_Init
 10459 ;;		_MiMAC_PowerState
 10460 ;; This function uses a non-reentrant model
 10461 ;;
 10462                           
 10463                           	psect	text42
 10464  002984                     __ptext42:
 10465                           	opt stack 0
 10466  002984                     _SetRFMode:
 10467                           	opt stack 14
 10468                           
 10469                           ;incstack = 0
 10470                           ;SetRFMode@mode stored from wreg
 10471  002984  0100               	movlb	0	; () banked
 10472  002986  6F6E               	movwf	SetRFMode@mode& (0+255),b
 10473                           
 10474                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
 10475  002988  D02C               	goto	l7618
 10476  00298A                     l7596:
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x80);
 10480  00298A  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
 10481  00298C  0E86               	movlw	134
 10482  00298E  6F6A               	movwf	RegisterSet@setting& (0+255),b
 10483  002990  EC36  F017         	call	_RegisterSet	;wreg free
 10484                           
 10485                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
 10486  002994  0E80               	movlw	128
 10487  002996  0100               	movlb	0	; () banked
 10488  002998  6FE1               	movwf	_RF_Mode& (0+255),b
 10489                           
 10490                           ;drv_mrf_miwi_89xa.c: 673: break;
 10491  00299A  0C80               	retlw	128
 10492  00299C                     l7600:
 10493                           
 10494                           ; BSR set to: 0
 10495                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x00 | 0x06) & 0x1F) | 0x60);
 10496  00299C  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
 10497  00299E  0E66               	movlw	102
 10498  0029A0  6F6A               	movwf	RegisterSet@setting& (0+255),b
 10499  0029A2  EC36  F017         	call	_RegisterSet	;wreg free
 10500                           
 10501                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
 10502  0029A6  0E60               	movlw	96
 10503  0029A8  0100               	movlb	0	; () banked
 10504  0029AA  6FE1               	movwf	_RF_Mode& (0+255),b
 10505                           
 10506                           ;drv_mrf_miwi_89xa.c: 677: break;
 10507  0029AC  0C60               	retlw	96
 10508  0029AE                     l7604:
 10509                           
 10510                           ; BSR set to: 0
 10511                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
 10512  0029AE  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
 10513  0029B0  0E46               	movlw	70
 10514  0029B2  6F6A               	movwf	RegisterSet@setting& (0+255),b
 10515  0029B4  EC36  F017         	call	_RegisterSet	;wreg free
 10516                           
 10517                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
 10518  0029B8  0E40               	movlw	64
 10519  0029BA  0100               	movlb	0	; () banked
 10520  0029BC  6FE1               	movwf	_RF_Mode& (0+255),b
 10521                           
 10522                           ;drv_mrf_miwi_89xa.c: 681: break;
 10523  0029BE  0C40               	retlw	64
 10524  0029C0                     l7608:
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x20);
 10528  0029C0  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
 10529  0029C2  0E26               	movlw	38
 10530  0029C4  6F6A               	movwf	RegisterSet@setting& (0+255),b
 10531  0029C6  EC36  F017         	call	_RegisterSet	;wreg free
 10532                           
 10533                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
 10534  0029CA  0E20               	movlw	32
 10535  0029CC  0100               	movlb	0	; () banked
 10536  0029CE  6FE1               	movwf	_RF_Mode& (0+255),b
 10537                           
 10538                           ;drv_mrf_miwi_89xa.c: 685: break;
 10539  0029D0  0C20               	retlw	32
 10540  0029D2                     l7612:
 10541                           
 10542                           ; BSR set to: 0
 10543                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x00);
 10544  0029D2  6B6B               	clrf	(RegisterSet@setting+1)& (0+255),b
 10545  0029D4  0E06               	movlw	6
 10546  0029D6  6F6A               	movwf	RegisterSet@setting& (0+255),b
 10547  0029D8  EC36  F017         	call	_RegisterSet	;wreg free
 10548                           
 10549                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
 10550  0029DC  0100               	movlb	0	; () banked
 10551  0029DE  6BE1               	clrf	_RF_Mode& (0+255),b
 10552                           
 10553                           ;drv_mrf_miwi_89xa.c: 689: break;
 10554  0029E0  0012               	return	
 10555  0029E2                     l7618:
 10556  0029E2  0100               	movlb	0	; () banked
 10557  0029E4  516E               	movf	SetRFMode@mode& (0+255),w,b
 10558                           
 10559                           ; Switch size 1, requested type "speed"
 10560                           ; Number of cases is 5, Range of values is 0 to 128
 10561                           ; switch strategies available:
 10562                           ; Name         Instructions Cycles
 10563                           ; simple_byte           16     9 (average)
 10564                           ;	Chosen strategy is simple_byte
 10565  0029E6  E0F5               	bz	l7612
 10566  0029E8  0A20               	xorlw	32	; case 32
 10567  0029EA  E0EA               	bz	l7608
 10568  0029EC  0A60               	xorlw	96	; case 64
 10569  0029EE  E0DF               	bz	l7604
 10570  0029F0  0A20               	xorlw	32	; case 96
 10571  0029F2  E0D4               	bz	l7600
 10572  0029F4  0AE0               	xorlw	224	; case 128
 10573  0029F6  E0C9               	bz	l7596
 10574                           
 10575                           ; BSR set to: 0
 10576  0029F8  0012               	return		;funcret
 10577  0029FA                     __end_of_SetRFMode:
 10578                           	opt stack 0
 10579                           tblptru	equ	0xFF8
 10580                           tblptrh	equ	0xFF7
 10581                           tblptrl	equ	0xFF6
 10582                           tablat	equ	0xFF5
 10583                           prodh	equ	0xFF4
 10584                           prodl	equ	0xFF3
 10585                           intcon	equ	0xFF2
 10586                           intcon2	equ	0xFF1
 10587                           intcon3	equ	0xFF0
 10588                           postinc0	equ	0xFEE
 10589                           wreg	equ	0xFE8
 10590                           indf1	equ	0xFE7
 10591                           postdec1	equ	0xFE5
 10592                           fsr1h	equ	0xFE2
 10593                           fsr1l	equ	0xFE1
 10594                           indf2	equ	0xFDF
 10595                           postinc2	equ	0xFDE
 10596                           postdec2	equ	0xFDD
 10597                           fsr2h	equ	0xFDA
 10598                           fsr2l	equ	0xFD9
 10599                           status	equ	0xFD8
 10600                           
 10601 ;; *************** function _RegisterSet *****************
 10602 ;; Defined at:
 10603 ;;		line 164 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;  setting         2   10[BANK0 ] unsigned int 
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;  IRQ0select      1   13[BANK0 ] unsigned char 
 10608 ;;  IRQ1select      1   12[BANK0 ] unsigned char 
 10609 ;; Return value:  Size  Location     Type
 10610 ;;		None               void
 10611 ;; Registers used:
 10612 ;;		wreg, status,2, cstack
 10613 ;; Tracked objects:
 10614 ;;		On entry : F/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10618 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10619 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10621 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10622 ;;Total ram usage:        4 bytes
 10623 ;; Hardware stack levels used:    1
 10624 ;; Hardware stack levels required when called:    9
 10625 ;; This function calls:
 10626 ;;		_SPI1_Exchange8bit
 10627 ;; This function is called by:
 10628 ;;		_TxPacket
 10629 ;;		_MiMAC_SetChannel
 10630 ;;		_MiMAC_Init
 10631 ;;		_SetRFMode
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           
 10635                           	psect	text43
 10636  002E6C                     __ptext43:
 10637                           	opt stack 0
 10638  002E6C                     _RegisterSet:
 10639                           	opt stack 14
 10640                           
 10641                           ; BSR set to: 0
 10642                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;incstack = 0
 10646  002E6C  0E00               	movlw	0
 10647  002E6E  B6F0               	btfsc	intcon3,3,c	;volatile
 10648  002E70  0E01               	movlw	1
 10649  002E72  6F6C               	movwf	RegisterSet@IRQ1select& (0+255),b
 10650                           
 10651                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 10652  002E74  0E00               	movlw	0
 10653  002E76  B8F2               	btfsc	intcon,4,c	;volatile
 10654  002E78  0E01               	movlw	1
 10655  002E7A  6F6D               	movwf	RegisterSet@IRQ0select& (0+255),b
 10656                           
 10657                           ; BSR set to: 0
 10658                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 10659  002E7C  98F2               	bcf	intcon,4,c	;volatile
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 10663  002E7E  96F0               	bcf	intcon3,3,c	;volatile
 10664                           
 10665                           ; BSR set to: 0
 10666                           ;drv_mrf_miwi_89xa.c: 173: LATDbits.LATD1 = 0;
 10667  002E80  928C               	bcf	3980,1,c	;volatile
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;drv_mrf_miwi_89xa.c: 174: SPI1_Exchange8bit((uint8_t)(setting >> 8));
 10671  002E82  516B               	movf	(RegisterSet@setting+1)& (0+255),w,b
 10672  002E84  EC8B  F019         	call	_SPI1_Exchange8bit
 10673                           
 10674                           ;drv_mrf_miwi_89xa.c: 175: SPI1_Exchange8bit((uint8_t)setting);
 10675  002E88  0100               	movlb	0	; () banked
 10676  002E8A  516A               	movf	RegisterSet@setting& (0+255),w,b
 10677  002E8C  EC8B  F019         	call	_SPI1_Exchange8bit
 10678                           
 10679                           ;drv_mrf_miwi_89xa.c: 176: LATDbits.LATD1 = 1;
 10680  002E90  828C               	bsf	3980,1,c	;volatile
 10681                           
 10682                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 10683  002E92  0100               	movlb	0	; () banked
 10684  002E94  B16C               	btfsc	RegisterSet@IRQ1select& (0+255),0,b
 10685  002E96  D002               	bra	u6705
 10686  002E98  96F0               	bcf	intcon3,3,c	;volatile
 10687  002E9A  D001               	bra	u6706
 10688  002E9C                     u6705:
 10689  002E9C  86F0               	bsf	intcon3,3,c	;volatile
 10690  002E9E                     u6706:
 10691                           
 10692                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 10693  002E9E  0100               	movlb	0	; () banked
 10694  002EA0  B16D               	btfsc	RegisterSet@IRQ0select& (0+255),0,b
 10695  002EA2  D002               	bra	u6715
 10696  002EA4  98F2               	bcf	intcon,4,c	;volatile
 10697  002EA6  D001               	bra	u6716
 10698  002EA8                     u6715:
 10699  002EA8  88F2               	bsf	intcon,4,c	;volatile
 10700  002EAA                     u6716:
 10701  002EAA  0012               	return		;funcret
 10702  002EAC                     __end_of_RegisterSet:
 10703                           	opt stack 0
 10704                           tblptru	equ	0xFF8
 10705                           tblptrh	equ	0xFF7
 10706                           tblptrl	equ	0xFF6
 10707                           tablat	equ	0xFF5
 10708                           prodh	equ	0xFF4
 10709                           prodl	equ	0xFF3
 10710                           intcon	equ	0xFF2
 10711                           intcon2	equ	0xFF1
 10712                           intcon3	equ	0xFF0
 10713                           postinc0	equ	0xFEE
 10714                           wreg	equ	0xFE8
 10715                           indf1	equ	0xFE7
 10716                           postdec1	equ	0xFE5
 10717                           fsr1h	equ	0xFE2
 10718                           fsr1l	equ	0xFE1
 10719                           indf2	equ	0xFDF
 10720                           postinc2	equ	0xFDE
 10721                           postdec2	equ	0xFDD
 10722                           fsr2h	equ	0xFDA
 10723                           fsr2l	equ	0xFD9
 10724                           status	equ	0xFD8
 10725                           
 10726 ;; *************** function _RegisterRead *****************
 10727 ;; Defined at:
 10728 ;;		line 200 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;  address         1    wreg     unsigned char 
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;  address         1   10[BANK0 ] unsigned char 
 10733 ;;  IRQ0select      1   13[BANK0 ] unsigned char 
 10734 ;;  IRQ1select      1   12[BANK0 ] unsigned char 
 10735 ;;  value           1   11[BANK0 ] unsigned char 
 10736 ;; Return value:  Size  Location     Type
 10737 ;;                  1    wreg      unsigned char 
 10738 ;; Registers used:
 10739 ;;		wreg, status,2, status,0, cstack
 10740 ;; Tracked objects:
 10741 ;;		On entry : 0/0
 10742 ;;		On exit  : F/0
 10743 ;;		Unchanged: 0/0
 10744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10746 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10748 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10749 ;;Total ram usage:        4 bytes
 10750 ;; Hardware stack levels used:    1
 10751 ;; Hardware stack levels required when called:    9
 10752 ;; This function calls:
 10753 ;;		_SPI1_Exchange8bit
 10754 ;; This function is called by:
 10755 ;;		_TxPacket
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text44
 10760  002D4C                     __ptext44:
 10761                           	opt stack 0
 10762  002D4C                     _RegisterRead:
 10763                           	opt stack 15
 10764                           
 10765                           ;incstack = 0
 10766                           ;RegisterRead@address stored from wreg
 10767  002D4C  0100               	movlb	0	; () banked
 10768  002D4E  6F6A               	movwf	RegisterRead@address& (0+255),b
 10769                           
 10770                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 10771                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 10772  002D50  0E00               	movlw	0
 10773  002D52  B6F0               	btfsc	intcon3,3,c	;volatile
 10774  002D54  0E01               	movlw	1
 10775  002D56  6F6C               	movwf	RegisterRead@IRQ1select& (0+255),b
 10776                           
 10777                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 10778  002D58  0E00               	movlw	0
 10779  002D5A  B8F2               	btfsc	intcon,4,c	;volatile
 10780  002D5C  0E01               	movlw	1
 10781  002D5E  6F6D               	movwf	RegisterRead@IRQ0select& (0+255),b
 10782                           
 10783                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 10784  002D60  98F2               	bcf	intcon,4,c	;volatile
 10785                           
 10786                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 10787  002D62  96F0               	bcf	intcon3,3,c	;volatile
 10788                           
 10789                           ;drv_mrf_miwi_89xa.c: 211: LATDbits.LATD1 = 0;
 10790  002D64  928C               	bcf	3980,1,c	;volatile
 10791                           
 10792                           ; BSR set to: 0
 10793                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 10794  002D66  8D6A               	bsf	RegisterRead@address& (0+255),6,b
 10795                           
 10796                           ; BSR set to: 0
 10797                           ;drv_mrf_miwi_89xa.c: 213: SPI1_Exchange8bit(address);
 10798  002D68  516A               	movf	RegisterRead@address& (0+255),w,b
 10799  002D6A  EC8B  F019         	call	_SPI1_Exchange8bit
 10800                           
 10801                           ;drv_mrf_miwi_89xa.c: 214: value = SPI1_Exchange8bit(0x00);
 10802  002D6E  0E00               	movlw	0
 10803  002D70  EC8B  F019         	call	_SPI1_Exchange8bit
 10804  002D74  0100               	movlb	0	; () banked
 10805  002D76  6F6B               	movwf	RegisterRead@value& (0+255),b
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;drv_mrf_miwi_89xa.c: 215: LATDbits.LATD1 = 1;
 10809  002D78  828C               	bsf	3980,1,c	;volatile
 10810                           
 10811                           ; BSR set to: 0
 10812                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 10813  002D7A  B16C               	btfsc	RegisterRead@IRQ1select& (0+255),0,b
 10814  002D7C  D002               	bra	u6725
 10815  002D7E  96F0               	bcf	intcon3,3,c	;volatile
 10816  002D80  D001               	bra	u6726
 10817  002D82                     u6725:
 10818  002D82  86F0               	bsf	intcon3,3,c	;volatile
 10819  002D84                     u6726:
 10820                           
 10821                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 10822  002D84  0100               	movlb	0	; () banked
 10823  002D86  B16D               	btfsc	RegisterRead@IRQ0select& (0+255),0,b
 10824  002D88  D002               	bra	u6735
 10825  002D8A  98F2               	bcf	intcon,4,c	;volatile
 10826  002D8C  D001               	bra	u6736
 10827  002D8E                     u6735:
 10828  002D8E  88F2               	bsf	intcon,4,c	;volatile
 10829  002D90                     u6736:
 10830                           
 10831                           ;drv_mrf_miwi_89xa.c: 222: return value;
 10832  002D90  0100               	movlb	0	; () banked
 10833  002D92  516B               	movf	RegisterRead@value& (0+255),w,b
 10834                           
 10835                           ; BSR set to: 0
 10836  002D94  0012               	return		;funcret
 10837  002D96                     __end_of_RegisterRead:
 10838                           	opt stack 0
 10839                           tblptru	equ	0xFF8
 10840                           tblptrh	equ	0xFF7
 10841                           tblptrl	equ	0xFF6
 10842                           tablat	equ	0xFF5
 10843                           prodh	equ	0xFF4
 10844                           prodl	equ	0xFF3
 10845                           intcon	equ	0xFF2
 10846                           intcon2	equ	0xFF1
 10847                           intcon3	equ	0xFF0
 10848                           postinc0	equ	0xFEE
 10849                           wreg	equ	0xFE8
 10850                           indf1	equ	0xFE7
 10851                           postdec1	equ	0xFE5
 10852                           fsr1h	equ	0xFE2
 10853                           fsr1l	equ	0xFE1
 10854                           indf2	equ	0xFDF
 10855                           postinc2	equ	0xFDE
 10856                           postdec2	equ	0xFDD
 10857                           fsr2h	equ	0xFDA
 10858                           fsr2l	equ	0xFD9
 10859                           status	equ	0xFD8
 10860                           
 10861 ;; *************** function _SPI1_Exchange8bit *****************
 10862 ;; Defined at:
 10863 ;;		line 51 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 10864 ;; Parameters:    Size  Location     Type
 10865 ;;  data            1    wreg     unsigned char 
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;  data            1    9[BANK0 ] unsigned char 
 10868 ;; Return value:  Size  Location     Type
 10869 ;;                  1    wreg      unsigned char 
 10870 ;; Registers used:
 10871 ;;		wreg, status,2
 10872 ;; Tracked objects:
 10873 ;;		On entry : 0/0
 10874 ;;		On exit  : 0/0
 10875 ;;		Unchanged: 0/0
 10876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10878 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10880 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10881 ;;Total ram usage:        1 bytes
 10882 ;; Hardware stack levels used:    1
 10883 ;; Hardware stack levels required when called:    8
 10884 ;; This function calls:
 10885 ;;		Nothing
 10886 ;; This function is called by:
 10887 ;;		_RegisterSet
 10888 ;;		_RegisterRead
 10889 ;;		_WriteFIFO
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           	psect	text45
 10894  003316                     __ptext45:
 10895                           	opt stack 0
 10896  003316                     _SPI1_Exchange8bit:
 10897                           	opt stack 15
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;incstack = 0
 10901                           ;SPI1_Exchange8bit@data stored from wreg
 10902  003316  0100               	movlb	0	; () banked
 10903  003318  6F69               	movwf	SPI1_Exchange8bit@data& (0+255),b
 10904                           
 10905                           ;spi.c: 53: SSP1CON1bits.WCOL = 0;
 10906  00331A  9EC6               	bcf	4038,7,c	;volatile
 10907                           
 10908                           ;spi.c: 55: SSP1BUF = data;
 10909  00331C  C069  FFC9         	movff	SPI1_Exchange8bit@data,4041	;volatile
 10910  003320                     l857:
 10911  003320  A0C7               	btfss	4039,0,c	;volatile
 10912  003322  D7FE               	goto	l857
 10913                           
 10914                           ;spi.c: 58: }
 10915                           ;spi.c: 60: return (SSP1BUF);
 10916  003324  50C9               	movf	4041,w,c	;volatile
 10917  003326  0012               	return		;funcret
 10918  003328                     __end_of_SPI1_Exchange8bit:
 10919                           	opt stack 0
 10920                           tblptru	equ	0xFF8
 10921                           tblptrh	equ	0xFF7
 10922                           tblptrl	equ	0xFF6
 10923                           tablat	equ	0xFF5
 10924                           prodh	equ	0xFF4
 10925                           prodl	equ	0xFF3
 10926                           intcon	equ	0xFF2
 10927                           intcon2	equ	0xFF1
 10928                           intcon3	equ	0xFF0
 10929                           postinc0	equ	0xFEE
 10930                           wreg	equ	0xFE8
 10931                           indf1	equ	0xFE7
 10932                           postdec1	equ	0xFE5
 10933                           fsr1h	equ	0xFE2
 10934                           fsr1l	equ	0xFE1
 10935                           indf2	equ	0xFDF
 10936                           postinc2	equ	0xFDE
 10937                           postdec2	equ	0xFDD
 10938                           fsr2h	equ	0xFDA
 10939                           fsr2l	equ	0xFD9
 10940                           status	equ	0xFD8
 10941                           
 10942 ;; *************** function _MiWi_TickGet *****************
 10943 ;; Defined at:
 10944 ;;		line 114 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;		None
 10947 ;; Auto vars:     Size  Location     Type
 10948 ;;  currentTime     4   15[BANK0 ] struct _MIWI_TICK
 10949 ;;  failureCount    1   14[BANK0 ] unsigned char 
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  4    9[BANK0 ] struct _MIWI_TICK
 10952 ;; Registers used:
 10953 ;;		wreg, status,2, status,0
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : F/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10960 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10961 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10962 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10963 ;;Total ram usage:       10 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    8
 10966 ;; This function calls:
 10967 ;;		Nothing
 10968 ;; This function is called by:
 10969 ;;		_TxPacket
 10970 ;;		_MiMAC_ReceivedPacket
 10971 ;;		_P2PTasks
 10972 ;;		_CheckForData
 10973 ;;		_MiApp_UnicastStar
 10974 ;;		_MiApp_EstablishConnection
 10975 ;;		_StartChannelHopping
 10976 ;;		_ButtonPressed
 10977 ;;		_run_star_demo
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           	psect	text46
 10982  002C62                     __ptext46:
 10983                           	opt stack 0
 10984  002C62                     _MiWi_TickGet:
 10985                           	opt stack 20
 10986                           
 10987                           ;symbol.c: 116: MIWI_TICK currentTime;
 10988                           ;symbol.c: 119: uint8_t failureCounter;
 10989                           ;symbol.c: 122: PIE1bits.TMR1IE = 0;
 10990                           
 10991                           ;incstack = 0
 10992  002C62  909D               	bcf	3997,0,c	;volatile
 10993                           
 10994                           ;symbol.c: 125: currentTime.byte.b2 = 0;
 10995  002C64  0100               	movlb	0	; () banked
 10996  002C66  6B71               	clrf	(MiWi_TickGet@currentTime+2)& (0+255),b
 10997                           
 10998                           ;symbol.c: 126: currentTime.byte.b3 = 0;
 10999  002C68  6B72               	clrf	(MiWi_TickGet@currentTime+3)& (0+255),b
 11000                           
 11001                           ;symbol.c: 129: failureCounter = 0;
 11002  002C6A  6B6E               	clrf	MiWi_TickGet@failureCounter& (0+255),b
 11003  002C6C                     l907:
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;symbol.c: 132: {
 11007                           ;symbol.c: 133: currentTime.byte.b0 = TMR1L;
 11008  002C6C  CFCE F06F          	movff	4046,MiWi_TickGet@currentTime	;volatile
 11009                           
 11010                           ;symbol.c: 134: currentTime.byte.b1 = TMR1H;
 11011  002C70  CFCF F070          	movff	4047,MiWi_TickGet@currentTime+1	;volatile
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;symbol.c: 135: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 11015  002C74  296F               	incf	MiWi_TickGet@currentTime& (0+255),w,b
 11016  002C76  E108               	bnz	l910
 11017  002C78  2970               	incf	(MiWi_TickGet@currentTime+1)& (0+255),w,b
 11018  002C7A  E106               	bnz	l910
 11019                           
 11020                           ; BSR set to: 0
 11021  002C7C  2B6E               	incf	MiWi_TickGet@failureCounter& (0+255),f,b
 11022  002C7E  056E               	decf	MiWi_TickGet@failureCounter& (0+255),w,b
 11023  002C80  6F6D               	movwf	??_MiWi_TickGet& (0+255),b
 11024  002C82  0E02               	movlw	2
 11025  002C84  656D               	cpfsgt	??_MiWi_TickGet& (0+255),b
 11026  002C86  D7F2               	goto	l907
 11027  002C88                     l910:
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;symbol.c: 139: if(PIR1bits.TMR1IF)
 11031  002C88  A09E               	btfss	3998,0,c	;volatile
 11032  002C8A  D004               	goto	l7632
 11033                           
 11034                           ; BSR set to: 0
 11035                           ;symbol.c: 140: {
 11036                           ;symbol.c: 143: {
 11037                           ;symbol.c: 145: currentTime.byte.b2++;
 11038  002C8C  2B71               	incf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;symbol.c: 146: if(timerExtension1 == 0xFF)
 11042  002C8E  2850               	incf	_timerExtension1,w,c	;volatile
 11043  002C90  E101               	bnz	l7632
 11044                           
 11045                           ; BSR set to: 0
 11046                           ;symbol.c: 147: {
 11047                           ;symbol.c: 148: currentTime.byte.b3++;
 11048  002C92  2B72               	incf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 11049  002C94                     l7632:
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;symbol.c: 149: }
 11053                           ;symbol.c: 150: }
 11054                           ;symbol.c: 151: }
 11055                           ;symbol.c: 154: currentTime.byte.b2 += timerExtension1;
 11056  002C94  5050               	movf	_timerExtension1,w,c	;volatile
 11057  002C96  2771               	addwf	(MiWi_TickGet@currentTime+2)& (0+255),f,b
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;symbol.c: 155: currentTime.byte.b3 += timerExtension2;
 11061  002C98  51ED               	movf	_timerExtension2& (0+255),w,b	;volatile
 11062  002C9A  2772               	addwf	(MiWi_TickGet@currentTime+3)& (0+255),f,b
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;symbol.c: 158: PIE1bits.TMR1IE = 1;
 11066  002C9C  809D               	bsf	3997,0,c	;volatile
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;symbol.c: 160: return currentTime;
 11070  002C9E  C06F  F069         	movff	MiWi_TickGet@currentTime,?_MiWi_TickGet
 11071  002CA2  C070  F06A         	movff	MiWi_TickGet@currentTime+1,?_MiWi_TickGet+1
 11072  002CA6  C071  F06B         	movff	MiWi_TickGet@currentTime+2,?_MiWi_TickGet+2
 11073  002CAA  C072  F06C         	movff	MiWi_TickGet@currentTime+3,?_MiWi_TickGet+3
 11074                           
 11075                           ; BSR set to: 0
 11076  002CAE  0012               	return		;funcret
 11077  002CB0                     __end_of_MiWi_TickGet:
 11078                           	opt stack 0
 11079                           tblptru	equ	0xFF8
 11080                           tblptrh	equ	0xFF7
 11081                           tblptrl	equ	0xFF6
 11082                           tablat	equ	0xFF5
 11083                           prodh	equ	0xFF4
 11084                           prodl	equ	0xFF3
 11085                           intcon	equ	0xFF2
 11086                           intcon2	equ	0xFF1
 11087                           intcon3	equ	0xFF0
 11088                           postinc0	equ	0xFEE
 11089                           wreg	equ	0xFE8
 11090                           indf1	equ	0xFE7
 11091                           postdec1	equ	0xFE5
 11092                           fsr1h	equ	0xFE2
 11093                           fsr1l	equ	0xFE1
 11094                           indf2	equ	0xFDF
 11095                           postinc2	equ	0xFDE
 11096                           postdec2	equ	0xFDD
 11097                           fsr2h	equ	0xFDA
 11098                           fsr2l	equ	0xFD9
 11099                           status	equ	0xFD8
 11100                           
 11101 ;; *************** function _DELAY_10us *****************
 11102 ;; Defined at:
 11103 ;;		line 47 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;  tenMicroSeco    4    9[BANK0 ] unsigned long 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;  cyclesRequir    4   21[BANK0 ] volatile long 
 11108 ;; Return value:  Size  Location     Type
 11109 ;;		None               void
 11110 ;; Registers used:
 11111 ;;		wreg, status,2, status,0, prodl, prodh
 11112 ;; Tracked objects:
 11113 ;;		On entry : F/0
 11114 ;;		On exit  : F/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11117 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11118 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11119 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11120 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11121 ;;Total ram usage:       16 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    8
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_TxPacket
 11128 ;; This function uses a non-reentrant model
 11129 ;;
 11130                           
 11131                           	psect	text47
 11132  001F2A                     __ptext47:
 11133                           	opt stack 0
 11134  001F2A                     _DELAY_10us:
 11135                           	opt stack 16
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;delay.c: 60: else
 11139                           ;delay.c: 61: {
 11140                           ;delay.c: 65: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/100000) * tenMicro
      +                          SecondCounter;
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;delay.c: 49: volatile int32_t cyclesRequiredForEntireDelay;
 11144                           ;delay.c: 52: if (((16000000)/4) <= 2500000)
 11145                           
 11146                           ; BSR set to: 0
 11147                           ;incstack = 0
 11148  001F2A  C069  F06D         	movff	DELAY_10us@tenMicroSecondCounter,??_DELAY_10us
 11149  001F2E  C06A  F06E         	movff	DELAY_10us@tenMicroSecondCounter+1,??_DELAY_10us+1
 11150  001F32  C06B  F06F         	movff	DELAY_10us@tenMicroSecondCounter+2,??_DELAY_10us+2
 11151  001F36  C06C  F070         	movff	DELAY_10us@tenMicroSecondCounter+3,??_DELAY_10us+3
 11152  001F3A  0E28               	movlw	40
 11153  001F3C  036D               	mulwf	??_DELAY_10us& (0+255),b
 11154  001F3E  CFF3 F071          	movff	prodl,??_DELAY_10us+4
 11155  001F42  CFF4 F072          	movff	prodh,??_DELAY_10us+5
 11156  001F46  6B73               	clrf	(??_DELAY_10us+6)& (0+255),b
 11157  001F48  6B74               	clrf	(??_DELAY_10us+7)& (0+255),b
 11158  001F4A  036E               	mulwf	(??_DELAY_10us+1)& (0+255),b
 11159  001F4C  50F3               	movf	prodl,w,c
 11160  001F4E  2772               	addwf	(??_DELAY_10us+5)& (0+255),f,b
 11161  001F50  50F4               	movf	prodh,w,c
 11162  001F52  2373               	addwfc	(??_DELAY_10us+6)& (0+255),f,b
 11163  001F54  0E00               	movlw	0
 11164  001F56  2374               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
 11165  001F58  036D               	mulwf	??_DELAY_10us& (0+255),b
 11166  001F5A  50F3               	movf	prodl,w,c
 11167  001F5C  2772               	addwf	(??_DELAY_10us+5)& (0+255),f,b
 11168  001F5E  50F4               	movf	prodh,w,c
 11169  001F60  2373               	addwfc	(??_DELAY_10us+6)& (0+255),f,b
 11170  001F62  0E00               	movlw	0
 11171  001F64  2374               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
 11172  001F66  0E28               	movlw	40
 11173  001F68  036F               	mulwf	(??_DELAY_10us+2)& (0+255),b
 11174  001F6A  50F3               	movf	prodl,w,c
 11175  001F6C  2773               	addwf	(??_DELAY_10us+6)& (0+255),f,b
 11176  001F6E  50F4               	movf	prodh,w,c
 11177  001F70  2374               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
 11178  001F72  0E00               	movlw	0
 11179  001F74  036E               	mulwf	(??_DELAY_10us+1)& (0+255),b
 11180  001F76  50F3               	movf	prodl,w,c
 11181  001F78  2773               	addwf	(??_DELAY_10us+6)& (0+255),f,b
 11182  001F7A  50F4               	movf	prodh,w,c
 11183  001F7C  2374               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
 11184  001F7E  0E00               	movlw	0
 11185  001F80  036D               	mulwf	??_DELAY_10us& (0+255),b
 11186  001F82  50F3               	movf	prodl,w,c
 11187  001F84  2773               	addwf	(??_DELAY_10us+6)& (0+255),f,b
 11188  001F86  50F4               	movf	prodh,w,c
 11189  001F88  2374               	addwfc	(??_DELAY_10us+7)& (0+255),f,b
 11190  001F8A  0E28               	movlw	40
 11191  001F8C  0370               	mulwf	(??_DELAY_10us+3)& (0+255),b
 11192  001F8E  50F3               	movf	prodl,w,c
 11193  001F90  2774               	addwf	(??_DELAY_10us+7)& (0+255),f,b
 11194  001F92  0E00               	movlw	0
 11195  001F94  036F               	mulwf	(??_DELAY_10us+2)& (0+255),b
 11196  001F96  50F3               	movf	prodl,w,c
 11197  001F98  2774               	addwf	(??_DELAY_10us+7)& (0+255),f,b
 11198  001F9A  0E00               	movlw	0
 11199  001F9C  036E               	mulwf	(??_DELAY_10us+1)& (0+255),b
 11200  001F9E  50F3               	movf	prodl,w,c
 11201  001FA0  2774               	addwf	(??_DELAY_10us+7)& (0+255),f,b
 11202  001FA2  0E00               	movlw	0
 11203  001FA4  036D               	mulwf	??_DELAY_10us& (0+255),b
 11204  001FA6  50F3               	movf	prodl,w,c
 11205  001FA8  2774               	addwf	(??_DELAY_10us+7)& (0+255),f,b
 11206  001FAA  C071  F075         	movff	??_DELAY_10us+4,DELAY_10us@cyclesRequiredForEntireDelay	;volatile
 11207  001FAE  C072  F076         	movff	??_DELAY_10us+5,DELAY_10us@cyclesRequiredForEntireDelay+1	;volatile
 11208  001FB2  C073  F077         	movff	??_DELAY_10us+6,DELAY_10us@cyclesRequiredForEntireDelay+2	;volatile
 11209  001FB6  C074  F078         	movff	??_DELAY_10us+7,DELAY_10us@cyclesRequiredForEntireDelay+3	;volatile
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;delay.c: 69: cyclesRequiredForEntireDelay -= (153 + 22);
 11213  001FBA  0E51               	movlw	81
 11214  001FBC  2775               	addwf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),f,b	;volatile
 11215  001FBE  0EFF               	movlw	255
 11216  001FC0  2376               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),f,b	;volatile
 11217  001FC2  2377               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),f,b	;volatile
 11218  001FC4  2378               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),f,b	;volatile
 11219                           
 11220                           ; BSR set to: 0
 11221                           ;delay.c: 71: if (cyclesRequiredForEntireDelay <= 45)
 11222  001FC6  BF78               	btfsc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),7,b	;volatile
 11223  001FC8  0CFF               	retlw	255
 11224  001FCA  5178               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),w,b	;volatile
 11225  001FCC  1177               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),w,b	;volatile
 11226  001FCE  1176               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),w,b	;volatile
 11227  001FD0  E10C               	bnz	l709
 11228  001FD2  0E2E               	movlw	46
 11229  001FD4  5D75               	subwf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),w,b	;volatile
 11230  001FD6  E209               	bc	l709
 11231  001FD8  0012               	return	
 11232  001FDA                     l710:
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;delay.c: 80: {
 11236                           ;delay.c: 81: __nop();
 11237  001FDA  F000               	nop	
 11238                           
 11239                           ;delay.c: 82: cyclesRequiredForEntireDelay -= 42;
 11240  001FDC  0ED6               	movlw	214
 11241  001FDE  0100               	movlb	0	; () banked
 11242  001FE0  2775               	addwf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),f,b	;volatile
 11243  001FE2  0EFF               	movlw	255
 11244  001FE4  2376               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),f,b	;volatile
 11245  001FE6  2377               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),f,b	;volatile
 11246  001FE8  2378               	addwfc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),f,b	;volatile
 11247  001FEA                     l709:
 11248                           
 11249                           ; BSR set to: 0
 11250  001FEA  BF78               	btfsc	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),7,b	;volatile
 11251  001FEC  0012               	return	
 11252  001FEE  5178               	movf	(DELAY_10us@cyclesRequiredForEntireDelay+3)& (0+255),w,b	;volatile
 11253  001FF0  1177               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+2)& (0+255),w,b	;volatile
 11254  001FF2  1176               	iorwf	(DELAY_10us@cyclesRequiredForEntireDelay+1)& (0+255),w,b	;volatile
 11255  001FF4  E1F2               	bnz	l710
 11256  001FF6  0575               	decf	DELAY_10us@cyclesRequiredForEntireDelay& (0+255),w,b	;volatile
 11257  001FF8  E2F0               	bc	l710
 11258                           
 11259                           ; BSR set to: 0
 11260  001FFA  0012               	return		;funcret
 11261  001FFC                     __end_of_DELAY_10us:
 11262                           	opt stack 0
 11263                           tblptru	equ	0xFF8
 11264                           tblptrh	equ	0xFF7
 11265                           tblptrl	equ	0xFF6
 11266                           tablat	equ	0xFF5
 11267                           prodh	equ	0xFF4
 11268                           prodl	equ	0xFF3
 11269                           intcon	equ	0xFF2
 11270                           intcon2	equ	0xFF1
 11271                           intcon3	equ	0xFF0
 11272                           postinc0	equ	0xFEE
 11273                           wreg	equ	0xFE8
 11274                           indf1	equ	0xFE7
 11275                           postdec1	equ	0xFE5
 11276                           fsr1h	equ	0xFE2
 11277                           fsr1l	equ	0xFE1
 11278                           indf2	equ	0xFDF
 11279                           postinc2	equ	0xFDE
 11280                           postdec2	equ	0xFDD
 11281                           fsr2h	equ	0xFDA
 11282                           fsr2l	equ	0xFD9
 11283                           status	equ	0xFD8
 11284                           
 11285 ;; *************** function _DemoOutput_UnicastFail *****************
 11286 ;; Defined at:
 11287 ;;		line 203 in file "../src/demo_ouput.c"
 11288 ;; Parameters:    Size  Location     Type
 11289 ;;		None
 11290 ;; Auto vars:     Size  Location     Type
 11291 ;;		None
 11292 ;; Return value:  Size  Location     Type
 11293 ;;		None               void
 11294 ;; Registers used:
 11295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11296 ;; Tracked objects:
 11297 ;;		On entry : F/0
 11298 ;;		On exit  : F/0
 11299 ;;		Unchanged: 0/0
 11300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11305 ;;Total ram usage:        0 bytes
 11306 ;; Hardware stack levels used:    1
 11307 ;; Hardware stack levels required when called:   12
 11308 ;; This function calls:
 11309 ;;		_LCDDisplay
 11310 ;; This function is called by:
 11311 ;;		_Forward_Packet_PANCr_to_EDy
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           	psect	text48
 11316  003328                     __ptext48:
 11317                           	opt stack 0
 11318  003328                     _DemoOutput_UnicastFail:
 11319                           	opt stack 12
 11320                           
 11321                           ; BSR set to: 0
 11322                           ;demo_ouput.c: 209: LCDDisplay((char *)" Unicast Failed", 0, 1);
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;incstack = 0
 11326  003328  0E7C               	movlw	low STR_24
 11327  00332A  6F98               	movwf	LCDDisplay@text& (0+255),b
 11328  00332C  0EFF               	movlw	high STR_24
 11329  00332E  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
 11330  003330  6B9A               	clrf	LCDDisplay@value& (0+255),b
 11331  003332  0E01               	movlw	1
 11332  003334  6F9B               	movwf	LCDDisplay@delay& (0+255),b
 11333  003336  EF94  F017         	goto	_LCDDisplay	;wreg free
 11334  00333A                     __end_of_DemoOutput_UnicastFail:
 11335                           	opt stack 0
 11336                           tblptru	equ	0xFF8
 11337                           tblptrh	equ	0xFF7
 11338                           tblptrl	equ	0xFF6
 11339                           tablat	equ	0xFF5
 11340                           prodh	equ	0xFF4
 11341                           prodl	equ	0xFF3
 11342                           intcon	equ	0xFF2
 11343                           intcon2	equ	0xFF1
 11344                           intcon3	equ	0xFF0
 11345                           postinc0	equ	0xFEE
 11346                           wreg	equ	0xFE8
 11347                           indf1	equ	0xFE7
 11348                           postdec1	equ	0xFE5
 11349                           fsr1h	equ	0xFE2
 11350                           fsr1l	equ	0xFE1
 11351                           indf2	equ	0xFDF
 11352                           postinc2	equ	0xFDE
 11353                           postdec2	equ	0xFDD
 11354                           fsr2h	equ	0xFDA
 11355                           fsr2l	equ	0xFD9
 11356                           status	equ	0xFD8
 11357                           
 11358 ;; *************** function _Find_Index *****************
 11359 ;; Defined at:
 11360 ;;		line 105 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11361 ;; Parameters:    Size  Location     Type
 11362 ;;  DestAddr        2    9[BANK0 ] PTR unsigned char 
 11363 ;;		 -> RxPacket.Payload(55), RxPacket(114), 
 11364 ;; Auto vars:     Size  Location     Type
 11365 ;;  i               1   13[BANK0 ] unsigned char 
 11366 ;; Return value:  Size  Location     Type
 11367 ;;                  1    wreg      unsigned char 
 11368 ;; Registers used:
 11369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11370 ;; Tracked objects:
 11371 ;;		On entry : F/0
 11372 ;;		On exit  : F/0
 11373 ;;		Unchanged: 0/0
 11374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11375 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11376 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11377 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11378 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11379 ;;Total ram usage:        5 bytes
 11380 ;; Hardware stack levels used:    1
 11381 ;; Hardware stack levels required when called:    8
 11382 ;; This function calls:
 11383 ;;		Nothing
 11384 ;; This function is called by:
 11385 ;;		_P2PTasks
 11386 ;; This function uses a non-reentrant model
 11387 ;;
 11388                           
 11389                           	psect	text49
 11390  0024C2                     __ptext49:
 11391                           	opt stack 0
 11392  0024C2                     _Find_Index:
 11393                           	opt stack 17
 11394                           
 11395                           ; BSR set to: 0
 11396                           ;miwi_p2p.c: 107: uint8_t i;
 11397                           ;miwi_p2p.c: 108: for (i=0;i<conn_size;i++)
 11398                           
 11399                           ; BSR set to: 0
 11400                           ;incstack = 0
 11401  0024C2  6B6D               	clrf	Find_Index@i& (0+255),b
 11402  0024C4  D042               	goto	l8532
 11403  0024C6                     l8516:
 11404                           
 11405                           ; BSR set to: 0
 11406                           ;miwi_p2p.c: 109: {
 11407                           ;miwi_p2p.c: 110: if (ConnectionTable[i].status.bits.isValid)
 11408  0024C6  516D               	movf	Find_Index@i& (0+255),w,b
 11409  0024C8  0D0E               	mullw	14
 11410  0024CA  0E0C               	movlw	low (_ConnectionTable+12)
 11411  0024CC  24F3               	addwf	prodl,w,c
 11412  0024CE  6ED9               	movwf	fsr2l,c
 11413  0024D0  0E02               	movlw	high (_ConnectionTable+12)
 11414  0024D2  20F4               	addwfc	prodh,w,c
 11415  0024D4  6EDA               	movwf	fsr2h,c
 11416  0024D6  AEDF               	btfss	indf2,7,c
 11417  0024D8  D036               	goto	l8530
 11418                           
 11419                           ; BSR set to: 2
 11420                           ;miwi_p2p.c: 111: {
 11421                           ;miwi_p2p.c: 112: if (DestAddr[1] == ConnectionTable[i].Address[0] && DestAddr[2] == Con
      +                          nectionTable[i].Address[1] && DestAddr[3] == ConnectionTable[i].Address[2] )
 11422  0024DA  0100               	movlb	0	; () banked
 11423  0024DC  516D               	movf	Find_Index@i& (0+255),w,b
 11424  0024DE  0D0E               	mullw	14
 11425  0024E0  0E04               	movlw	low (_ConnectionTable+4)
 11426  0024E2  24F3               	addwf	prodl,w,c
 11427  0024E4  6ED9               	movwf	fsr2l,c
 11428  0024E6  0E02               	movlw	high (_ConnectionTable+4)
 11429  0024E8  20F4               	addwfc	prodh,w,c
 11430  0024EA  6EDA               	movwf	fsr2h,c
 11431  0024EC  EE10 F001          	lfsr	1,1
 11432  0024F0  5169               	movf	Find_Index@DestAddr& (0+255),w,b
 11433  0024F2  26E1               	addwf	fsr1l,f,c
 11434  0024F4  516A               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 11435  0024F6  22E2               	addwfc	fsr1h,f,c
 11436  0024F8  50DE               	movf	postinc2,w,c
 11437  0024FA  18E6               	xorwf	postinc1,w,c
 11438  0024FC  E124               	bnz	l8530
 11439                           
 11440                           ; BSR set to: 0
 11441  0024FE  516D               	movf	Find_Index@i& (0+255),w,b
 11442  002500  0D0E               	mullw	14
 11443  002502  0E05               	movlw	low (_ConnectionTable+5)
 11444  002504  24F3               	addwf	prodl,w,c
 11445  002506  6ED9               	movwf	fsr2l,c
 11446  002508  0E02               	movlw	high (_ConnectionTable+5)
 11447  00250A  20F4               	addwfc	prodh,w,c
 11448  00250C  6EDA               	movwf	fsr2h,c
 11449  00250E  EE10 F002          	lfsr	1,2
 11450  002512  5169               	movf	Find_Index@DestAddr& (0+255),w,b
 11451  002514  26E1               	addwf	fsr1l,f,c
 11452  002516  516A               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 11453  002518  22E2               	addwfc	fsr1h,f,c
 11454  00251A  50DE               	movf	postinc2,w,c
 11455  00251C  18E6               	xorwf	postinc1,w,c
 11456  00251E  E113               	bnz	l8530
 11457                           
 11458                           ; BSR set to: 0
 11459  002520  516D               	movf	Find_Index@i& (0+255),w,b
 11460  002522  0D0E               	mullw	14
 11461  002524  0E06               	movlw	low (_ConnectionTable+6)
 11462  002526  24F3               	addwf	prodl,w,c
 11463  002528  6ED9               	movwf	fsr2l,c
 11464  00252A  0E02               	movlw	high (_ConnectionTable+6)
 11465  00252C  20F4               	addwfc	prodh,w,c
 11466  00252E  6EDA               	movwf	fsr2h,c
 11467  002530  EE10 F003          	lfsr	1,3
 11468  002534  5169               	movf	Find_Index@DestAddr& (0+255),w,b
 11469  002536  26E1               	addwf	fsr1l,f,c
 11470  002538  516A               	movf	(Find_Index@DestAddr+1)& (0+255),w,b
 11471  00253A  22E2               	addwfc	fsr1h,f,c
 11472  00253C  50DE               	movf	postinc2,w,c
 11473  00253E  18E6               	xorwf	postinc1,w,c
 11474  002540  E102               	bnz	l8530
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;miwi_p2p.c: 113: {
 11478                           ;miwi_p2p.c: 114: return i;
 11479  002542  516D               	movf	Find_Index@i& (0+255),w,b
 11480  002544  0012               	return	
 11481  002546                     l8530:
 11482  002546  0100               	movlb	0	; () banked
 11483  002548  2B6D               	incf	Find_Index@i& (0+255),f,b
 11484  00254A                     l8532:
 11485                           
 11486                           ; BSR set to: 0
 11487  00254A  51F0               	movf	_conn_size& (0+255),w,b
 11488  00254C  5D6D               	subwf	Find_Index@i& (0+255),w,b
 11489  00254E  E3BB               	bnc	l8516
 11490                           
 11491                           ; BSR set to: 0
 11492                           ;miwi_p2p.c: 116: }
 11493                           ;miwi_p2p.c: 118: }
 11494                           ;miwi_p2p.c: 119: }
 11495                           ;miwi_p2p.c: 120: if (i==conn_size)
 11496  002550  51F0               	movf	_conn_size& (0+255),w,b
 11497  002552  196D               	xorwf	Find_Index@i& (0+255),w,b
 11498  002554  B4D8               	btfsc	status,2,c
 11499                           
 11500                           ; BSR set to: 0
 11501                           ;miwi_p2p.c: 121: {
 11502                           ;miwi_p2p.c: 122: return 0xff;
 11503  002556  0EFF               	movlw	255
 11504                           
 11505                           ; BSR set to: 0
 11506  002558  0012               	return		;funcret
 11507  00255A                     __end_of_Find_Index:
 11508                           	opt stack 0
 11509                           tblptru	equ	0xFF8
 11510                           tblptrh	equ	0xFF7
 11511                           tblptrl	equ	0xFF6
 11512                           tablat	equ	0xFF5
 11513                           prodh	equ	0xFF4
 11514                           prodl	equ	0xFF3
 11515                           intcon	equ	0xFF2
 11516                           intcon2	equ	0xFF1
 11517                           intcon3	equ	0xFF0
 11518                           postinc0	equ	0xFEE
 11519                           wreg	equ	0xFE8
 11520                           indf1	equ	0xFE7
 11521                           postinc1	equ	0xFE6
 11522                           postdec1	equ	0xFE5
 11523                           fsr1h	equ	0xFE2
 11524                           fsr1l	equ	0xFE1
 11525                           indf2	equ	0xFDF
 11526                           postinc2	equ	0xFDE
 11527                           postdec2	equ	0xFDD
 11528                           fsr2h	equ	0xFDA
 11529                           fsr2l	equ	0xFD9
 11530                           status	equ	0xFD8
 11531                           
 11532 ;; *************** function _AddConnection *****************
 11533 ;; Defined at:
 11534 ;;		line 2525 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;		None
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;  i               1   23[BANK0 ] unsigned char 
 11539 ;;  connectionSl    1   22[BANK0 ] unsigned char 
 11540 ;;  status          1    0        unsigned char 
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      unsigned char 
 11543 ;; Registers used:
 11544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11545 ;; Tracked objects:
 11546 ;;		On entry : E/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11551 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11552 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11553 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11554 ;;Total ram usage:        7 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:   11
 11557 ;; This function calls:
 11558 ;;		_EEPROM_Write
 11559 ;;		_Total_Connections
 11560 ;;		_isSameAddress
 11561 ;; This function is called by:
 11562 ;;		_P2PTasks
 11563 ;; This function uses a non-reentrant model
 11564 ;;
 11565                           
 11566                           	psect	text50
 11567  0017C0                     __ptext50:
 11568                           	opt stack 0
 11569  0017C0                     _AddConnection:
 11570                           	opt stack 14
 11571                           
 11572                           ;miwi_p2p.c: 2531: uint8_t connectionSlot = 0xFF;
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;incstack = 0
 11576  0017C0  0100               	movlb	0	; () banked
 11577  0017C2  6976               	setf	AddConnection@connectionSlot& (0+255),b
 11578                           
 11579                           ;miwi_p2p.c: 2542: for(i = 0; i < 10; i++)
 11580  0017C4  6B77               	clrf	AddConnection@i& (0+255),b
 11581  0017C6                     l8608:
 11582                           
 11583                           ; BSR set to: 0
 11584                           ;miwi_p2p.c: 2543: {
 11585                           ;miwi_p2p.c: 2545: if( ConnectionTable[i].status.bits.isValid )
 11586  0017C6  5177               	movf	AddConnection@i& (0+255),w,b
 11587  0017C8  0D0E               	mullw	14
 11588  0017CA  0E0C               	movlw	low (_ConnectionTable+12)
 11589  0017CC  24F3               	addwf	prodl,w,c
 11590  0017CE  6ED9               	movwf	fsr2l,c
 11591  0017D0  0E02               	movlw	high (_ConnectionTable+12)
 11592  0017D2  20F4               	addwfc	prodh,w,c
 11593  0017D4  6EDA               	movwf	fsr2h,c
 11594  0017D6  AEDF               	btfss	indf2,7,c
 11595  0017D8  D014               	goto	l8616
 11596                           
 11597                           ; BSR set to: 2
 11598                           ;miwi_p2p.c: 2546: {
 11599                           ;miwi_p2p.c: 2548: if( isSameAddress(rxMessage.SourceAddress, ConnectionTable[i].Address
      +                          ) )
 11600  0017DA  C0CF  F069         	movff	_rxMessage+3,isSameAddress@Address1
 11601  0017DE  C0D0  F06A         	movff	_rxMessage+4,isSameAddress@Address1+1
 11602  0017E2  0100               	movlb	0	; () banked
 11603  0017E4  5177               	movf	AddConnection@i& (0+255),w,b
 11604  0017E6  0D0E               	mullw	14
 11605  0017E8  0E04               	movlw	low (_ConnectionTable+4)
 11606  0017EA  24F3               	addwf	prodl,w,c
 11607  0017EC  6F6B               	movwf	isSameAddress@Address2& (0+255),b
 11608  0017EE  0E02               	movlw	high (_ConnectionTable+4)
 11609  0017F0  20F4               	addwfc	prodh,w,c
 11610  0017F2  6F6C               	movwf	(isSameAddress@Address2+1)& (0+255),b
 11611  0017F4  EC8E  F018         	call	_isSameAddress	;wreg free
 11612  0017F8  0900               	iorlw	0
 11613  0017FA  E008               	bz	l8620
 11614                           
 11615                           ; BSR set to: 0
 11616                           ;miwi_p2p.c: 2549: {
 11617                           ;miwi_p2p.c: 2550: connectionSlot = i;
 11618  0017FC  C077  F076         	movff	AddConnection@i,AddConnection@connectionSlot
 11619                           
 11620                           ; BSR set to: 0
 11621                           ;miwi_p2p.c: 2552: break;
 11622  001800  D009               	goto	l8624
 11623  001802                     l8616:
 11624                           
 11625                           ; BSR set to: 2
 11626                           ;miwi_p2p.c: 2556: else if( connectionSlot == 0xFF )
 11627  001802  0100               	movlb	0	; () banked
 11628  001804  2976               	incf	AddConnection@connectionSlot& (0+255),w,b
 11629  001806  E102               	bnz	l8620
 11630                           
 11631                           ; BSR set to: 0
 11632                           ;miwi_p2p.c: 2557: {
 11633                           ;miwi_p2p.c: 2559: connectionSlot = i;
 11634  001808  C077  F076         	movff	AddConnection@i,AddConnection@connectionSlot
 11635  00180C                     l8620:
 11636                           
 11637                           ; BSR set to: 0
 11638  00180C  2B77               	incf	AddConnection@i& (0+255),f,b
 11639                           
 11640                           ; BSR set to: 0
 11641  00180E  0E09               	movlw	9
 11642  001810  6577               	cpfsgt	AddConnection@i& (0+255),b
 11643  001812  D7D9               	goto	l8608
 11644  001814                     l8624:
 11645                           
 11646                           ; BSR set to: 0
 11647                           ;miwi_p2p.c: 2561: }
 11648                           ;miwi_p2p.c: 2562: }
 11649                           ;miwi_p2p.c: 2564: if( connectionSlot == 0xFF )
 11650  001814  2976               	incf	AddConnection@connectionSlot& (0+255),w,b
 11651  001816  E101               	bnz	l8630
 11652  001818  0012               	return	
 11653  00181A                     l8630:
 11654                           
 11655                           ; BSR set to: 0
 11656                           ;miwi_p2p.c: 2568: else
 11657                           ;miwi_p2p.c: 2569: {
 11658                           ;miwi_p2p.c: 2570: if( ConnMode >= 0x01 )
 11659  00181A  51F5               	movf	_ConnMode& (0+255),w,b
 11660  00181C  E001               	bz	l664
 11661  00181E  0012               	return	
 11662  001820                     l664:
 11663                           
 11664                           ; BSR set to: 0
 11665                           ;miwi_p2p.c: 2578: for(i = 0; i < 8; i++)
 11666  001820  6B77               	clrf	AddConnection@i& (0+255),b
 11667  001822                     l8638:
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;miwi_p2p.c: 2579: {
 11671                           ;miwi_p2p.c: 2580: ConnectionTable[connectionSlot].Address[i] = rxMessage.SourceAddress[
      +                          i];
 11672  001822  5177               	movf	AddConnection@i& (0+255),w,b
 11673  001824  25CF               	addwf	(_rxMessage+3)& (0+255),w,b
 11674  001826  6ED9               	movwf	fsr2l,c
 11675  001828  0E00               	movlw	0
 11676  00182A  21D0               	addwfc	(_rxMessage+4)& (0+255),w,b
 11677  00182C  6EDA               	movwf	fsr2h,c
 11678  00182E  5176               	movf	AddConnection@connectionSlot& (0+255),w,b
 11679  001830  0D0E               	mullw	14
 11680  001832  0E00               	movlw	low _ConnectionTable
 11681  001834  6F71               	movwf	??_AddConnection& (0+255),b
 11682  001836  0E02               	movlw	high _ConnectionTable
 11683  001838  6F72               	movwf	(??_AddConnection+1)& (0+255),b
 11684  00183A  0E04               	movlw	4
 11685  00183C  2771               	addwf	??_AddConnection& (0+255),f,b
 11686  00183E  0E00               	movlw	0
 11687  001840  2372               	addwfc	(??_AddConnection+1)& (0+255),f,b
 11688  001842  50F3               	movf	prodl,w,c
 11689  001844  2771               	addwf	??_AddConnection& (0+255),f,b
 11690  001846  50F4               	movf	prodh,w,c
 11691  001848  2372               	addwfc	(??_AddConnection+1)& (0+255),f,b
 11692  00184A  5177               	movf	AddConnection@i& (0+255),w,b
 11693  00184C  2571               	addwf	??_AddConnection& (0+255),w,b
 11694  00184E  6EE1               	movwf	fsr1l,c
 11695  001850  0E00               	movlw	0
 11696  001852  2172               	addwfc	(??_AddConnection+1)& (0+255),w,b
 11697  001854  6EE2               	movwf	fsr1h,c
 11698  001856  CFDF FFE7          	movff	indf2,indf1
 11699                           
 11700                           ; BSR set to: 0
 11701  00185A  2B77               	incf	AddConnection@i& (0+255),f,b
 11702                           
 11703                           ; BSR set to: 0
 11704  00185C  0E07               	movlw	7
 11705  00185E  6577               	cpfsgt	AddConnection@i& (0+255),b
 11706  001860  D7E0               	goto	l8638
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;miwi_p2p.c: 2583: }
 11710                           ;miwi_p2p.c: 2588: ConnectionTable[connectionSlot].status.bits.isValid = 1;
 11711  001862  5176               	movf	AddConnection@connectionSlot& (0+255),w,b
 11712  001864  0D0E               	mullw	14
 11713  001866  0E0C               	movlw	low (_ConnectionTable+12)
 11714  001868  24F3               	addwf	prodl,w,c
 11715  00186A  6ED9               	movwf	fsr2l,c
 11716  00186C  0E02               	movlw	high (_ConnectionTable+12)
 11717  00186E  20F4               	addwfc	prodh,w,c
 11718  001870  6EDA               	movwf	fsr2h,c
 11719  001872  8EDF               	bsf	indf2,7,c
 11720                           
 11721                           ;miwi_p2p.c: 2589: ConnectionTable[connectionSlot].status.bits.RXOnWhenIdle = (rxMessage
      +                          .Payload[2] & 0x01);
 11722  001874  0100               	movlb	0	; () banked
 11723  001876  EE20 F002          	lfsr	2,2
 11724  00187A  51D1               	movf	(_rxMessage+5)& (0+255),w,b
 11725  00187C  26D9               	addwf	fsr2l,f,c
 11726  00187E  51D2               	movf	(_rxMessage+6)& (0+255),w,b
 11727  001880  22DA               	addwfc	fsr2h,f,c
 11728  001882  50DF               	movf	indf2,w,c
 11729  001884  6F71               	movwf	??_AddConnection& (0+255),b
 11730  001886  0E01               	movlw	1
 11731  001888  1771               	andwf	??_AddConnection& (0+255),f,b
 11732  00188A  5176               	movf	AddConnection@connectionSlot& (0+255),w,b
 11733  00188C  0D0E               	mullw	14
 11734  00188E  0E0C               	movlw	low (_ConnectionTable+12)
 11735  001890  24F3               	addwf	prodl,w,c
 11736  001892  6ED9               	movwf	fsr2l,c
 11737  001894  0E02               	movlw	high (_ConnectionTable+12)
 11738  001896  20F4               	addwfc	prodh,w,c
 11739  001898  6EDA               	movwf	fsr2h,c
 11740  00189A  50DF               	movf	223,w,c
 11741  00189C  1971               	xorwf	??_AddConnection& (0+255),w,b
 11742  00189E  0BFE               	andlw	-2
 11743  0018A0  1971               	xorwf	??_AddConnection& (0+255),w,b
 11744  0018A2  6EDF               	movwf	223,c
 11745                           
 11746                           ; BSR set to: 2
 11747                           ;miwi_p2p.c: 2593: for(i = 0; i < 1; i++)
 11748  0018A4  6B77               	clrf	AddConnection@i& (0+255),b
 11749  0018A6                     l8652:
 11750                           
 11751                           ; BSR set to: 0
 11752                           ;miwi_p2p.c: 2594: {
 11753                           ;miwi_p2p.c: 2595: ConnectionTable[connectionSlot].PeerInfo[i] = rxMessage.Payload[3+i];
 11754  0018A6  5177               	movf	AddConnection@i& (0+255),w,b
 11755  0018A8  25D1               	addwf	(_rxMessage+5)& (0+255),w,b
 11756  0018AA  6F71               	movwf	??_AddConnection& (0+255),b
 11757  0018AC  0E00               	movlw	0
 11758  0018AE  21D2               	addwfc	(_rxMessage+6)& (0+255),w,b
 11759  0018B0  6F72               	movwf	(??_AddConnection+1)& (0+255),b
 11760  0018B2  0E03               	movlw	3
 11761  0018B4  2571               	addwf	??_AddConnection& (0+255),w,b
 11762  0018B6  6ED9               	movwf	fsr2l,c
 11763  0018B8  0E00               	movlw	0
 11764  0018BA  2172               	addwfc	(??_AddConnection+1)& (0+255),w,b
 11765  0018BC  6EDA               	movwf	fsr2h,c
 11766  0018BE  5176               	movf	AddConnection@connectionSlot& (0+255),w,b
 11767  0018C0  0D0E               	mullw	14
 11768  0018C2  0E00               	movlw	low _ConnectionTable
 11769  0018C4  6F73               	movwf	(??_AddConnection+2)& (0+255),b
 11770  0018C6  0E02               	movlw	high _ConnectionTable
 11771  0018C8  6F74               	movwf	(??_AddConnection+3)& (0+255),b
 11772  0018CA  0E0D               	movlw	13
 11773  0018CC  2773               	addwf	(??_AddConnection+2)& (0+255),f,b
 11774  0018CE  0E00               	movlw	0
 11775  0018D0  2374               	addwfc	(??_AddConnection+3)& (0+255),f,b
 11776  0018D2  50F3               	movf	prodl,w,c
 11777  0018D4  2773               	addwf	(??_AddConnection+2)& (0+255),f,b
 11778  0018D6  50F4               	movf	prodh,w,c
 11779  0018D8  2374               	addwfc	(??_AddConnection+3)& (0+255),f,b
 11780  0018DA  5177               	movf	AddConnection@i& (0+255),w,b
 11781  0018DC  2573               	addwf	(??_AddConnection+2)& (0+255),w,b
 11782  0018DE  6EE1               	movwf	fsr1l,c
 11783  0018E0  0E00               	movlw	0
 11784  0018E2  2174               	addwfc	(??_AddConnection+3)& (0+255),w,b
 11785  0018E4  6EE2               	movwf	fsr1h,c
 11786  0018E6  CFDF FFE7          	movff	indf2,indf1
 11787                           
 11788                           ; BSR set to: 0
 11789  0018EA  2B77               	incf	AddConnection@i& (0+255),f,b
 11790                           
 11791                           ; BSR set to: 0
 11792  0018EC  5177               	movf	AddConnection@i& (0+255),w,b
 11793  0018EE  E0DB               	bz	l8652
 11794                           
 11795                           ; BSR set to: 0
 11796                           ;miwi_p2p.c: 2596: }
 11797                           ;miwi_p2p.c: 2603: LatestConnection = connectionSlot;
 11798  0018F0  C076  F0DC         	movff	AddConnection@connectionSlot,_LatestConnection
 11799                           
 11800                           ;miwi_p2p.c: 2605: P2PStatus.bits.SearchConnection = 0;
 11801  0018F4  99DF               	bcf	_P2PStatus& (0+255),4,b	;volatile
 11802                           
 11803                           ; BSR set to: 0
 11804                           ;miwi_p2p.c: 2606: }
 11805                           ;miwi_p2p.c: 2607: conn_size = Total_Connections();
 11806  0018F6  EC58  F016         	call	_Total_Connections	;wreg free
 11807  0018FA  6FF0               	movwf	_conn_size& (0+255),b
 11808                           
 11809                           ; BSR set to: 0
 11810                           ;miwi_p2p.c: 2608: EEPROM_Write((uint8_t *)&conn_size, 0xBA, 1);
 11811  0018FC  0EF0               	movlw	low _conn_size
 11812  0018FE  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
 11813  001900  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
 11814  001902  0EBA               	movlw	186
 11815  001904  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
 11816  001906  0E01               	movlw	1
 11817  001908  6F6D               	movwf	EEPROM_Write@count& (0+255),b
 11818  00190A  EF83  F013         	goto	_EEPROM_Write	;wreg free
 11819  00190E                     __end_of_AddConnection:
 11820                           	opt stack 0
 11821                           tblptru	equ	0xFF8
 11822                           tblptrh	equ	0xFF7
 11823                           tblptrl	equ	0xFF6
 11824                           tablat	equ	0xFF5
 11825                           prodh	equ	0xFF4
 11826                           prodl	equ	0xFF3
 11827                           intcon	equ	0xFF2
 11828                           intcon2	equ	0xFF1
 11829                           intcon3	equ	0xFF0
 11830                           postinc0	equ	0xFEE
 11831                           wreg	equ	0xFE8
 11832                           indf1	equ	0xFE7
 11833                           postinc1	equ	0xFE6
 11834                           postdec1	equ	0xFE5
 11835                           fsr1h	equ	0xFE2
 11836                           fsr1l	equ	0xFE1
 11837                           indf2	equ	0xFDF
 11838                           postinc2	equ	0xFDE
 11839                           postdec2	equ	0xFDD
 11840                           fsr2h	equ	0xFDA
 11841                           fsr2l	equ	0xFD9
 11842                           status	equ	0xFD8
 11843                           
 11844 ;; *************** function _isSameAddress *****************
 11845 ;; Defined at:
 11846 ;;		line 2126 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;  Address1        2    9[BANK0 ] PTR unsigned char 
 11849 ;;		 -> NULL(0), RxPacket.Payload(55), RxPacket(114), 
 11850 ;;  Address2        2   11[BANK0 ] PTR unsigned char 
 11851 ;;		 -> ConnectionTable(140), 
 11852 ;; Auto vars:     Size  Location     Type
 11853 ;;  i               1   15[BANK0 ] unsigned char 
 11854 ;; Return value:  Size  Location     Type
 11855 ;;                  1    wreg      unsigned char 
 11856 ;; Registers used:
 11857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11858 ;; Tracked objects:
 11859 ;;		On entry : F/0
 11860 ;;		On exit  : F/0
 11861 ;;		Unchanged: 0/0
 11862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11863 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11864 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11865 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11866 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11867 ;;Total ram usage:        7 bytes
 11868 ;; Hardware stack levels used:    1
 11869 ;; Hardware stack levels required when called:    8
 11870 ;; This function calls:
 11871 ;;		Nothing
 11872 ;; This function is called by:
 11873 ;;		_P2PTasks
 11874 ;;		_AddConnection
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           	psect	text51
 11879  00311C                     __ptext51:
 11880                           	opt stack 0
 11881  00311C                     _isSameAddress:
 11882                           	opt stack 17
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;miwi_p2p.c: 2128: uint8_t i;
 11886                           ;miwi_p2p.c: 2130: for(i = 0; i < 8; i++)
 11887                           
 11888                           ;incstack = 0
 11889  00311C  6B6F               	clrf	isSameAddress@i& (0+255),b
 11890  00311E                     l8414:
 11891                           
 11892                           ; BSR set to: 0
 11893                           ;miwi_p2p.c: 2131: {
 11894                           ;miwi_p2p.c: 2132: if( Address1[i] != Address2[i] )
 11895  00311E  516F               	movf	isSameAddress@i& (0+255),w,b
 11896  003120  256B               	addwf	isSameAddress@Address2& (0+255),w,b
 11897  003122  6ED9               	movwf	fsr2l,c
 11898  003124  0E00               	movlw	0
 11899  003126  216C               	addwfc	(isSameAddress@Address2+1)& (0+255),w,b
 11900  003128  6EDA               	movwf	fsr2h,c
 11901  00312A  516F               	movf	isSameAddress@i& (0+255),w,b
 11902  00312C  2569               	addwf	isSameAddress@Address1& (0+255),w,b
 11903  00312E  6EE1               	movwf	fsr1l,c
 11904  003130  0E00               	movlw	0
 11905  003132  216A               	addwfc	(isSameAddress@Address1+1)& (0+255),w,b
 11906  003134  6EE2               	movwf	fsr1h,c
 11907  003136  50DE               	movf	postinc2,w,c
 11908  003138  18E6               	xorwf	postinc1,w,c
 11909  00313A  E001               	bz	l8420
 11910                           
 11911                           ; BSR set to: 0
 11912                           ;miwi_p2p.c: 2133: {
 11913                           ;miwi_p2p.c: 2134: return 0;
 11914  00313C  0C00               	retlw	0
 11915  00313E                     l8420:
 11916                           
 11917                           ; BSR set to: 0
 11918  00313E  2B6F               	incf	isSameAddress@i& (0+255),f,b
 11919                           
 11920                           ; BSR set to: 0
 11921  003140  0E07               	movlw	7
 11922  003142  656F               	cpfsgt	isSameAddress@i& (0+255),b
 11923  003144  D7EC               	goto	l8414
 11924  003146  0C01               	retlw	1
 11925  003148                     __end_of_isSameAddress:
 11926                           	opt stack 0
 11927                           tblptru	equ	0xFF8
 11928                           tblptrh	equ	0xFF7
 11929                           tblptrl	equ	0xFF6
 11930                           tablat	equ	0xFF5
 11931                           prodh	equ	0xFF4
 11932                           prodl	equ	0xFF3
 11933                           intcon	equ	0xFF2
 11934                           intcon2	equ	0xFF1
 11935                           intcon3	equ	0xFF0
 11936                           postinc0	equ	0xFEE
 11937                           wreg	equ	0xFE8
 11938                           indf1	equ	0xFE7
 11939                           postinc1	equ	0xFE6
 11940                           postdec1	equ	0xFE5
 11941                           fsr1h	equ	0xFE2
 11942                           fsr1l	equ	0xFE1
 11943                           indf2	equ	0xFDF
 11944                           postinc2	equ	0xFDE
 11945                           postdec2	equ	0xFDD
 11946                           fsr2h	equ	0xFDA
 11947                           fsr2l	equ	0xFD9
 11948                           status	equ	0xFD8
 11949                           
 11950 ;; *************** function _Total_Connections *****************
 11951 ;; Defined at:
 11952 ;;		line 62 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 11953 ;; Parameters:    Size  Location     Type
 11954 ;;		None
 11955 ;; Auto vars:     Size  Location     Type
 11956 ;;  i               1   10[BANK0 ] unsigned char 
 11957 ;;  count           1    9[BANK0 ] unsigned char 
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  1    wreg      unsigned char 
 11960 ;; Registers used:
 11961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11962 ;; Tracked objects:
 11963 ;;		On entry : F/0
 11964 ;;		On exit  : F/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11968 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11970 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11971 ;;Total ram usage:        2 bytes
 11972 ;; Hardware stack levels used:    1
 11973 ;; Hardware stack levels required when called:    8
 11974 ;; This function calls:
 11975 ;;		Nothing
 11976 ;; This function is called by:
 11977 ;;		_AddConnection
 11978 ;; This function uses a non-reentrant model
 11979 ;;
 11980                           
 11981                           	psect	text52
 11982  002CB0                     __ptext52:
 11983                           	opt stack 0
 11984  002CB0                     _Total_Connections:
 11985                           	opt stack 16
 11986                           
 11987                           ; BSR set to: 0
 11988                           ;miwi_p2p.c: 64: uint8_t count=0 , i;
 11989                           
 11990                           ; BSR set to: 0
 11991                           ;incstack = 0
 11992  002CB0  6B69               	clrf	Total_Connections@count& (0+255),b
 11993                           
 11994                           ;miwi_p2p.c: 65: for (i=0;i<10;i++)
 11995  002CB2  6B6A               	clrf	Total_Connections@i& (0+255),b
 11996  002CB4                     l8362:
 11997                           
 11998                           ; BSR set to: 0
 11999                           ;miwi_p2p.c: 66: {
 12000                           ;miwi_p2p.c: 68: if (ConnectionTable[i].Address[0] != 0x00 || ConnectionTable[i].Address
      +                          [1] != 0x00 || ConnectionTable[i].Address[2] != 0x00)
 12001  002CB4  516A               	movf	Total_Connections@i& (0+255),w,b
 12002  002CB6  0D0E               	mullw	14
 12003  002CB8  0E04               	movlw	low (_ConnectionTable+4)
 12004  002CBA  24F3               	addwf	prodl,w,c
 12005  002CBC  6ED9               	movwf	fsr2l,c
 12006  002CBE  0E02               	movlw	high (_ConnectionTable+4)
 12007  002CC0  20F4               	addwfc	prodh,w,c
 12008  002CC2  6EDA               	movwf	fsr2h,c
 12009  002CC4  50DF               	movf	indf2,w,c
 12010  002CC6  E114               	bnz	l8368
 12011                           
 12012                           ; BSR set to: 0
 12013  002CC8  516A               	movf	Total_Connections@i& (0+255),w,b
 12014  002CCA  0D0E               	mullw	14
 12015  002CCC  0E05               	movlw	low (_ConnectionTable+5)
 12016  002CCE  24F3               	addwf	prodl,w,c
 12017  002CD0  6ED9               	movwf	fsr2l,c
 12018  002CD2  0E02               	movlw	high (_ConnectionTable+5)
 12019  002CD4  20F4               	addwfc	prodh,w,c
 12020  002CD6  6EDA               	movwf	fsr2h,c
 12021  002CD8  50DF               	movf	indf2,w,c
 12022  002CDA  E10A               	bnz	l8368
 12023                           
 12024                           ; BSR set to: 0
 12025  002CDC  516A               	movf	Total_Connections@i& (0+255),w,b
 12026  002CDE  0D0E               	mullw	14
 12027  002CE0  0E06               	movlw	low (_ConnectionTable+6)
 12028  002CE2  24F3               	addwf	prodl,w,c
 12029  002CE4  6ED9               	movwf	fsr2l,c
 12030  002CE6  0E02               	movlw	high (_ConnectionTable+6)
 12031  002CE8  20F4               	addwfc	prodh,w,c
 12032  002CEA  6EDA               	movwf	fsr2h,c
 12033  002CEC  50DF               	movf	indf2,w,c
 12034  002CEE  E001               	bz	l383
 12035  002CF0                     l8368:
 12036                           
 12037                           ; BSR set to: 0
 12038                           ;miwi_p2p.c: 69: {
 12039                           ;miwi_p2p.c: 70: count++;
 12040  002CF0  2B69               	incf	Total_Connections@count& (0+255),f,b
 12041  002CF2                     l383:
 12042                           
 12043                           ; BSR set to: 0
 12044  002CF2  2B6A               	incf	Total_Connections@i& (0+255),f,b
 12045                           
 12046                           ; BSR set to: 0
 12047  002CF4  0E09               	movlw	9
 12048  002CF6  656A               	cpfsgt	Total_Connections@i& (0+255),b
 12049  002CF8  D7DD               	goto	l8362
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;miwi_p2p.c: 71: }
 12053                           ;miwi_p2p.c: 78: }
 12054                           ;miwi_p2p.c: 79: return count;
 12055  002CFA  5169               	movf	Total_Connections@count& (0+255),w,b
 12056                           
 12057                           ; BSR set to: 0
 12058  002CFC  0012               	return		;funcret
 12059  002CFE                     __end_of_Total_Connections:
 12060                           	opt stack 0
 12061                           tblptru	equ	0xFF8
 12062                           tblptrh	equ	0xFF7
 12063                           tblptrl	equ	0xFF6
 12064                           tablat	equ	0xFF5
 12065                           prodh	equ	0xFF4
 12066                           prodl	equ	0xFF3
 12067                           intcon	equ	0xFF2
 12068                           intcon2	equ	0xFF1
 12069                           intcon3	equ	0xFF0
 12070                           postinc0	equ	0xFEE
 12071                           wreg	equ	0xFE8
 12072                           indf1	equ	0xFE7
 12073                           postinc1	equ	0xFE6
 12074                           postdec1	equ	0xFE5
 12075                           fsr1h	equ	0xFE2
 12076                           fsr1l	equ	0xFE1
 12077                           indf2	equ	0xFDF
 12078                           postinc2	equ	0xFDE
 12079                           postdec2	equ	0xFDD
 12080                           fsr2h	equ	0xFDA
 12081                           fsr2l	equ	0xFD9
 12082                           status	equ	0xFD8
 12083                           
 12084 ;; *************** function _MiApp_DiscardMessage *****************
 12085 ;; Defined at:
 12086 ;;		line 2370 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12087 ;; Parameters:    Size  Location     Type
 12088 ;;		None
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;		None
 12091 ;; Return value:  Size  Location     Type
 12092 ;;		None               void
 12093 ;; Registers used:
 12094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12095 ;; Tracked objects:
 12096 ;;		On entry : F/0
 12097 ;;		On exit  : F/0
 12098 ;;		Unchanged: 0/0
 12099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12104 ;;Total ram usage:        0 bytes
 12105 ;; Hardware stack levels used:    1
 12106 ;; Hardware stack levels required when called:    9
 12107 ;; This function calls:
 12108 ;;		_MiMAC_DiscardPacket
 12109 ;; This function is called by:
 12110 ;;		_MiApp_EstablishConnection
 12111 ;;		_run_star_demo
 12112 ;; This function uses a non-reentrant model
 12113 ;;
 12114                           
 12115                           	psect	text53
 12116  0033B4                     __ptext53:
 12117                           	opt stack 0
 12118  0033B4                     _MiApp_DiscardMessage:
 12119                           	opt stack 18
 12120                           
 12121                           ; BSR set to: 0
 12122                           ;miwi_p2p.c: 2372: P2PStatus.bits.RxHasUserData = 0;
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;incstack = 0
 12126  0033B4  97DF               	bcf	_P2PStatus& (0+255),3,b	;volatile
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;miwi_p2p.c: 2373: MiMAC_DiscardPacket();
 12130  0033B6  EF2B  F019         	goto	_MiMAC_DiscardPacket	;wreg free
 12131  0033BA                     __end_of_MiApp_DiscardMessage:
 12132                           	opt stack 0
 12133                           tblptru	equ	0xFF8
 12134                           tblptrh	equ	0xFF7
 12135                           tblptrl	equ	0xFF6
 12136                           tablat	equ	0xFF5
 12137                           prodh	equ	0xFF4
 12138                           prodl	equ	0xFF3
 12139                           intcon	equ	0xFF2
 12140                           intcon2	equ	0xFF1
 12141                           intcon3	equ	0xFF0
 12142                           postinc0	equ	0xFEE
 12143                           wreg	equ	0xFE8
 12144                           indf1	equ	0xFE7
 12145                           postinc1	equ	0xFE6
 12146                           postdec1	equ	0xFE5
 12147                           fsr1h	equ	0xFE2
 12148                           fsr1l	equ	0xFE1
 12149                           indf2	equ	0xFDF
 12150                           postinc2	equ	0xFDE
 12151                           postdec2	equ	0xFDD
 12152                           fsr2h	equ	0xFDA
 12153                           fsr2l	equ	0xFD9
 12154                           status	equ	0xFD8
 12155                           
 12156 ;; *************** function _MiMAC_DiscardPacket *****************
 12157 ;; Defined at:
 12158 ;;		line 1050 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 12159 ;; Parameters:    Size  Location     Type
 12160 ;;		None
 12161 ;; Auto vars:     Size  Location     Type
 12162 ;;		None
 12163 ;; Return value:  Size  Location     Type
 12164 ;;		None               void
 12165 ;; Registers used:
 12166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12167 ;; Tracked objects:
 12168 ;;		On entry : 0/0
 12169 ;;		On exit  : F/0
 12170 ;;		Unchanged: 0/0
 12171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12176 ;;Total ram usage:        0 bytes
 12177 ;; Hardware stack levels used:    1
 12178 ;; Hardware stack levels required when called:    8
 12179 ;; This function calls:
 12180 ;;		Nothing
 12181 ;; This function is called by:
 12182 ;;		_P2PTasks
 12183 ;;		_MiApp_DiscardMessage
 12184 ;; This function uses a non-reentrant model
 12185 ;;
 12186                           
 12187                           	psect	text54
 12188  003256                     __ptext54:
 12189                           	opt stack 0
 12190  003256                     _MiMAC_DiscardPacket:
 12191                           	opt stack 17
 12192                           
 12193                           ;drv_mrf_miwi_89xa.c: 1052: if( ReceivedBankIndex < 2 )
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;incstack = 0
 12197  003256  0E02               	movlw	2
 12198  003258  0100               	movlb	0	; () banked
 12199  00325A  61E3               	cpfslt	_ReceivedBankIndex& (0+255),b
 12200  00325C  0C02               	retlw	2
 12201                           
 12202                           ; BSR set to: 0
 12203                           ;drv_mrf_miwi_89xa.c: 1053: {
 12204                           ;drv_mrf_miwi_89xa.c: 1054: RxPacket[ReceivedBankIndex].flags.Val = 0;
 12205  00325E  51E3               	movf	_ReceivedBankIndex& (0+255),w,b
 12206  003260  0D39               	mullw	57
 12207  003262  0E8C               	movlw	low _RxPacket
 12208  003264  24F3               	addwf	prodl,w,c
 12209  003266  6ED9               	movwf	fsr2l,c
 12210  003268  0E02               	movlw	high _RxPacket
 12211  00326A  20F4               	addwfc	prodh,w,c
 12212  00326C  6EDA               	movwf	fsr2h,c
 12213  00326E  0E00               	movlw	0
 12214  003270  6ADF               	clrf	indf2,c
 12215                           
 12216                           ; BSR set to: 0
 12217                           ;drv_mrf_miwi_89xa.c: 1055: ReceivedBankIndex = 0xFF;
 12218  003272  69E3               	setf	_ReceivedBankIndex& (0+255),b
 12219                           
 12220                           ; BSR set to: 0
 12221  003274  0012               	return		;funcret
 12222  003276                     __end_of_MiMAC_DiscardPacket:
 12223                           	opt stack 0
 12224                           tblptru	equ	0xFF8
 12225                           tblptrh	equ	0xFF7
 12226                           tblptrl	equ	0xFF6
 12227                           tablat	equ	0xFF5
 12228                           prodh	equ	0xFF4
 12229                           prodl	equ	0xFF3
 12230                           intcon	equ	0xFF2
 12231                           intcon2	equ	0xFF1
 12232                           intcon3	equ	0xFF0
 12233                           postinc0	equ	0xFEE
 12234                           wreg	equ	0xFE8
 12235                           indf1	equ	0xFE7
 12236                           postinc1	equ	0xFE6
 12237                           postdec1	equ	0xFE5
 12238                           fsr1h	equ	0xFE2
 12239                           fsr1l	equ	0xFE1
 12240                           indf2	equ	0xFDF
 12241                           postinc2	equ	0xFDE
 12242                           postdec2	equ	0xFDD
 12243                           fsr2h	equ	0xFDA
 12244                           fsr2l	equ	0xFD9
 12245                           status	equ	0xFD8
 12246                           
 12247 ;; *************** function _MiApp_ConnectionMode *****************
 12248 ;; Defined at:
 12249 ;;		line 2962 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12250 ;; Parameters:    Size  Location     Type
 12251 ;;  Mode            1    wreg     unsigned char 
 12252 ;; Auto vars:     Size  Location     Type
 12253 ;;  Mode            1   18[BANK0 ] unsigned char 
 12254 ;; Return value:  Size  Location     Type
 12255 ;;		None               void
 12256 ;; Registers used:
 12257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12258 ;; Tracked objects:
 12259 ;;		On entry : 0/0
 12260 ;;		On exit  : 0/0
 12261 ;;		Unchanged: 0/0
 12262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12265 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12267 ;;Total ram usage:        2 bytes
 12268 ;; Hardware stack levels used:    1
 12269 ;; Hardware stack levels required when called:   11
 12270 ;; This function calls:
 12271 ;;		_EEPROM_Write
 12272 ;; This function is called by:
 12273 ;;		_Initialize_Demo
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           	psect	text55
 12278  003088                     __ptext55:
 12279                           	opt stack 0
 12280  003088                     _MiApp_ConnectionMode:
 12281                           	opt stack 18
 12282                           
 12283                           ; BSR set to: 0
 12284                           ;incstack = 0
 12285                           ;MiApp_ConnectionMode@Mode stored from wreg
 12286  003088  0100               	movlb	0	; () banked
 12287  00308A  6F72               	movwf	MiApp_ConnectionMode@Mode& (0+255),b
 12288                           
 12289                           ;miwi_p2p.c: 2964: if( Mode > 3 )
 12290  00308C  0E03               	movlw	3
 12291  00308E  6572               	cpfsgt	MiApp_ConnectionMode@Mode& (0+255),b
 12292  003090  D001               	goto	l693
 12293  003092  0C03               	retlw	3
 12294  003094                     l693:
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;miwi_p2p.c: 2967: }
 12298                           ;miwi_p2p.c: 2968: ConnMode = Mode;
 12299  003094  C072  F0F5         	movff	MiApp_ConnectionMode@Mode,_ConnMode
 12300                           
 12301                           ; BSR set to: 0
 12302                           ;miwi_p2p.c: 2969: P2PCapacityInfo = (P2PCapacityInfo & 0x0F) | (ConnMode << 4);
 12303  003098  C0F5  F071         	movff	_ConnMode,??_MiApp_ConnectionMode
 12304  00309C  3B71               	swapf	??_MiApp_ConnectionMode& (0+255),f,b
 12305  00309E  0EF0               	movlw	240
 12306  0030A0  1771               	andwf	??_MiApp_ConnectionMode& (0+255),f,b
 12307  0030A2  51DE               	movf	_P2PCapacityInfo& (0+255),w,b
 12308  0030A4  0B0F               	andlw	15
 12309  0030A6  1171               	iorwf	??_MiApp_ConnectionMode& (0+255),w,b
 12310  0030A8  6FDE               	movwf	_P2PCapacityInfo& (0+255),b
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;miwi_p2p.c: 2972: EEPROM_Write((uint8_t *)&ConnMode, 0x03, 1);
 12314  0030AA  0EF5               	movlw	low _ConnMode
 12315  0030AC  6F6A               	movwf	EEPROM_Write@dest& (0+255),b
 12316  0030AE  6B6B               	clrf	(EEPROM_Write@dest+1)& (0+255),b
 12317  0030B0  0E03               	movlw	3
 12318  0030B2  6F6C               	movwf	EEPROM_Write@addr& (0+255),b
 12319  0030B4  0E01               	movlw	1
 12320  0030B6  6F6D               	movwf	EEPROM_Write@count& (0+255),b
 12321  0030B8  EF83  F013         	goto	_EEPROM_Write	;wreg free
 12322  0030BC                     __end_of_MiApp_ConnectionMode:
 12323                           	opt stack 0
 12324                           tblptru	equ	0xFF8
 12325                           tblptrh	equ	0xFF7
 12326                           tblptrl	equ	0xFF6
 12327                           tablat	equ	0xFF5
 12328                           prodh	equ	0xFF4
 12329                           prodl	equ	0xFF3
 12330                           intcon	equ	0xFF2
 12331                           intcon2	equ	0xFF1
 12332                           intcon3	equ	0xFF0
 12333                           postinc0	equ	0xFEE
 12334                           wreg	equ	0xFE8
 12335                           indf1	equ	0xFE7
 12336                           postinc1	equ	0xFE6
 12337                           postdec1	equ	0xFE5
 12338                           fsr1h	equ	0xFE2
 12339                           fsr1l	equ	0xFE1
 12340                           indf2	equ	0xFDF
 12341                           postinc2	equ	0xFDE
 12342                           postdec2	equ	0xFDD
 12343                           fsr2h	equ	0xFDA
 12344                           fsr2l	equ	0xFD9
 12345                           status	equ	0xFD8
 12346                           
 12347 ;; *************** function _EEPROM_Write *****************
 12348 ;; Defined at:
 12349 ;;		line 118 in file "../src/system_config/miwikit_pic18f46j50_89xa/eeprom.c"
 12350 ;; Parameters:    Size  Location     Type
 12351 ;;  dest            2   10[BANK0 ] PTR unsigned char 
 12352 ;;		 -> myConnectionIndex_in_PanCo(1), currentChannel(1), ConnMode(1), role(1), 
 12353 ;;		 -> conn_size(1), ConnectionTable(140), 
 12354 ;;  addr            1   12[BANK0 ] unsigned char 
 12355 ;;  count           1   13[BANK0 ] unsigned char 
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;  PageCounter     1   16[BANK0 ] unsigned char 
 12358 ;;  oldRFIE         1   15[BANK0 ] unsigned char 
 12359 ;; Return value:  Size  Location     Type
 12360 ;;		None               void
 12361 ;; Registers used:
 12362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12363 ;; Tracked objects:
 12364 ;;		On entry : F/0
 12365 ;;		On exit  : 0/0
 12366 ;;		Unchanged: 0/0
 12367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12368 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12369 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12371 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12372 ;;Total ram usage:        7 bytes
 12373 ;; Hardware stack levels used:    1
 12374 ;; Hardware stack levels required when called:   10
 12375 ;; This function calls:
 12376 ;;		_MacroNop
 12377 ;;		_SPIGet2
 12378 ;;		_SPIPut2
 12379 ;; This function is called by:
 12380 ;;		_P2PTasks
 12381 ;;		_MiApp_ProtocolInit
 12382 ;;		_MiApp_TransceiverPowerState
 12383 ;;		_MiApp_SetChannel
 12384 ;;		_AddConnection
 12385 ;;		_MiApp_ConnectionMode
 12386 ;;		_Initialize_Demo
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text56
 12391  002706                     __ptext56:
 12392                           	opt stack 0
 12393  002706                     _EEPROM_Write:
 12394                           	opt stack 13
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;eeprom.c: 126: uint8_t oldRFIE = INTCON3bits.INT1IE;
 12398                           
 12399                           ; BSR set to: 0
 12400                           
 12401                           ;incstack = 0
 12402  002706  0E00               	movlw	0
 12403  002708  B6F0               	btfsc	intcon3,3,c	;volatile
 12404  00270A  0E01               	movlw	1
 12405  00270C  6F6F               	movwf	EEPROM_Write@oldRFIE& (0+255),b
 12406                           
 12407                           ; BSR set to: 0
 12408                           ;eeprom.c: 127: INTCON3bits.INT1IE = 0;
 12409  00270E  96F0               	bcf	intcon3,3,c	;volatile
 12410  002710                     l8290:
 12411                           
 12412                           ; BSR set to: 0
 12413                           ;eeprom.c: 133: {
 12414                           ;eeprom.c: 134: LATDbits.LATD5 = 0;
 12415  002710  9A8C               	bcf	3980,5,c	;volatile
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;eeprom.c: 135: SPIPut2(0x05);
 12419  002712  0E05               	movlw	5
 12420  002714  EC75  F019         	call	_SPIPut2
 12421                           
 12422                           ;eeprom.c: 136: PageCounter = SPIGet2();
 12423  002718  ECD5  F019         	call	_SPIGet2	;wreg free
 12424  00271C  0100               	movlb	0	; () banked
 12425  00271E  6F70               	movwf	EEPROM_Write@PageCounter& (0+255),b
 12426                           
 12427                           ; BSR set to: 0
 12428                           ;eeprom.c: 137: LATDbits.LATD5 = 1;
 12429  002720  8A8C               	bsf	3980,5,c	;volatile
 12430                           
 12431                           ; BSR set to: 0
 12432                           ;eeprom.c: 138: MacroNop();
 12433  002722  ECE7  F019         	call	_MacroNop	;wreg free
 12434                           
 12435                           ;eeprom.c: 139: } while(PageCounter & 0x01 );
 12436  002726  0100               	movlb	0	; () banked
 12437  002728  B170               	btfsc	EEPROM_Write@PageCounter& (0+255),0,b
 12438  00272A  D7F2               	goto	l8290
 12439                           
 12440                           ; BSR set to: 0
 12441                           ;eeprom.c: 141: LATDbits.LATD5 = 0;
 12442  00272C  9A8C               	bcf	3980,5,c	;volatile
 12443                           
 12444                           ; BSR set to: 0
 12445                           ;eeprom.c: 142: SPIPut2(0x06);
 12446  00272E  0E06               	movlw	6
 12447  002730  EC75  F019         	call	_SPIPut2
 12448                           
 12449                           ;eeprom.c: 143: LATDbits.LATD5 = 1;
 12450  002734  8A8C               	bsf	3980,5,c	;volatile
 12451                           
 12452                           ;eeprom.c: 144: MacroNop();
 12453  002736  ECE7  F019         	call	_MacroNop	;wreg free
 12454                           
 12455                           ;eeprom.c: 145: LATDbits.LATD5 = 0;
 12456  00273A  9A8C               	bcf	3980,5,c	;volatile
 12457                           
 12458                           ;eeprom.c: 147: SPIPut2(0x02);
 12459  00273C  0E02               	movlw	2
 12460  00273E  EC75  F019         	call	_SPIPut2
 12461                           
 12462                           ;eeprom.c: 148: SPIPut2(addr);
 12463  002742  0100               	movlb	0	; () banked
 12464  002744  516C               	movf	EEPROM_Write@addr& (0+255),w,b
 12465  002746  EC75  F019         	call	_SPIPut2
 12466                           
 12467                           ;eeprom.c: 150: PageCounter = 0;
 12468  00274A  0100               	movlb	0	; () banked
 12469  00274C  6B70               	clrf	EEPROM_Write@PageCounter& (0+255),b
 12470                           
 12471                           ;eeprom.c: 151: while( count > 0 )
 12472  00274E  D016               	goto	l8330
 12473  002750                     l8316:
 12474                           
 12475                           ; BSR set to: 0
 12476                           ;eeprom.c: 152: {
 12477                           ;eeprom.c: 153: SPIPut2(*dest++);
 12478  002750  C06A  FFD9         	movff	EEPROM_Write@dest,fsr2l
 12479  002754  C06B  FFDA         	movff	EEPROM_Write@dest+1,fsr2h
 12480  002758  50DF               	movf	indf2,w,c
 12481  00275A  EC75  F019         	call	_SPIPut2
 12482  00275E  0100               	movlb	0	; () banked
 12483  002760  4B6A               	infsnz	EEPROM_Write@dest& (0+255),f,b
 12484  002762  2B6B               	incf	(EEPROM_Write@dest+1)& (0+255),f,b
 12485                           
 12486                           ; BSR set to: 0
 12487                           ;eeprom.c: 154: count--;
 12488  002764  076D               	decf	EEPROM_Write@count& (0+255),f,b
 12489                           
 12490                           ; BSR set to: 0
 12491                           ;eeprom.c: 155: PageCounter++;
 12492  002766  2B70               	incf	EEPROM_Write@PageCounter& (0+255),f,b
 12493                           
 12494                           ; BSR set to: 0
 12495                           ;eeprom.c: 156: if( ((addr + PageCounter) & (16-1)) == 0 )
 12496  002768  516C               	movf	EEPROM_Write@addr& (0+255),w,b
 12497  00276A  2570               	addwf	EEPROM_Write@PageCounter& (0+255),w,b
 12498  00276C  6F6E               	movwf	??_EEPROM_Write& (0+255),b
 12499  00276E  0E0F               	movlw	15
 12500  002770  176E               	andwf	??_EEPROM_Write& (0+255),f,b
 12501  002772  E104               	bnz	l8330
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;eeprom.c: 157: {
 12505                           ;eeprom.c: 158: LATDbits.LATD5 = 1;
 12506  002774  8A8C               	bsf	3980,5,c	;volatile
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;eeprom.c: 159: addr += PageCounter;
 12510  002776  5170               	movf	EEPROM_Write@PageCounter& (0+255),w,b
 12511  002778  276C               	addwf	EEPROM_Write@addr& (0+255),f,b
 12512                           
 12513                           ;eeprom.c: 160: goto EEPROM_NEXT_PAGE;
 12514  00277A  D7CA               	goto	l8290
 12515  00277C                     l8330:
 12516                           
 12517                           ; BSR set to: 0
 12518  00277C  516D               	movf	EEPROM_Write@count& (0+255),w,b
 12519  00277E  E1E8               	bnz	l8316
 12520                           
 12521                           ; BSR set to: 0
 12522                           ;eeprom.c: 161: }
 12523                           ;eeprom.c: 162: }
 12524                           ;eeprom.c: 163: LATDbits.LATD5 = 1;
 12525  002780  8A8C               	bsf	3980,5,c	;volatile
 12526                           
 12527                           ;eeprom.c: 168: INTCON3bits.INT1IE = oldRFIE;
 12528  002782  B16F               	btfsc	EEPROM_Write@oldRFIE& (0+255),0,b
 12529  002784  D002               	bra	u7895
 12530  002786  96F0               	bcf	intcon3,3,c	;volatile
 12531  002788  D001               	bra	u7896
 12532  00278A                     u7895:
 12533  00278A  86F0               	bsf	intcon3,3,c	;volatile
 12534  00278C                     u7896:
 12535  00278C  0012               	return		;funcret
 12536  00278E                     __end_of_EEPROM_Write:
 12537                           	opt stack 0
 12538                           tblptru	equ	0xFF8
 12539                           tblptrh	equ	0xFF7
 12540                           tblptrl	equ	0xFF6
 12541                           tablat	equ	0xFF5
 12542                           prodh	equ	0xFF4
 12543                           prodl	equ	0xFF3
 12544                           intcon	equ	0xFF2
 12545                           intcon2	equ	0xFF1
 12546                           intcon3	equ	0xFF0
 12547                           postinc0	equ	0xFEE
 12548                           wreg	equ	0xFE8
 12549                           indf1	equ	0xFE7
 12550                           postinc1	equ	0xFE6
 12551                           postdec1	equ	0xFE5
 12552                           fsr1h	equ	0xFE2
 12553                           fsr1l	equ	0xFE1
 12554                           indf2	equ	0xFDF
 12555                           postinc2	equ	0xFDE
 12556                           postdec2	equ	0xFDD
 12557                           fsr2h	equ	0xFDA
 12558                           fsr2l	equ	0xFD9
 12559                           status	equ	0xFD8
 12560                           
 12561 ;; *************** function _SPIGet2 *****************
 12562 ;; Defined at:
 12563 ;;		line 129 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;		None
 12566 ;; Auto vars:     Size  Location     Type
 12567 ;;		None
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  1    wreg      unsigned char 
 12570 ;; Registers used:
 12571 ;;		wreg, status,2, cstack
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/0
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12581 ;;Total ram usage:        0 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:    9
 12584 ;; This function calls:
 12585 ;;		_SPIPut2
 12586 ;; This function is called by:
 12587 ;;		_EEPROM_Read
 12588 ;;		_EEPROM_Write
 12589 ;; This function uses a non-reentrant model
 12590 ;;
 12591                           
 12592                           	psect	text57
 12593  0033AA                     __ptext57:
 12594                           	opt stack 0
 12595  0033AA                     _SPIGet2:
 12596                           	opt stack 13
 12597                           
 12598                           ;spi.c: 132: SPIPut2(0x00);
 12599                           
 12600                           ;incstack = 0
 12601  0033AA  0E00               	movlw	0
 12602  0033AC  EC75  F019         	call	_SPIPut2
 12603                           
 12604                           ;spi.c: 133: return SSP2BUF;
 12605  0033B0  5075               	movf	3957,w,c	;volatile
 12606  0033B2  0012               	return		;funcret
 12607  0033B4                     __end_of_SPIGet2:
 12608                           	opt stack 0
 12609                           tblptru	equ	0xFF8
 12610                           tblptrh	equ	0xFF7
 12611                           tblptrl	equ	0xFF6
 12612                           tablat	equ	0xFF5
 12613                           prodh	equ	0xFF4
 12614                           prodl	equ	0xFF3
 12615                           intcon	equ	0xFF2
 12616                           intcon2	equ	0xFF1
 12617                           intcon3	equ	0xFF0
 12618                           postinc0	equ	0xFEE
 12619                           wreg	equ	0xFE8
 12620                           indf1	equ	0xFE7
 12621                           postinc1	equ	0xFE6
 12622                           postdec1	equ	0xFE5
 12623                           fsr1h	equ	0xFE2
 12624                           fsr1l	equ	0xFE1
 12625                           indf2	equ	0xFDF
 12626                           postinc2	equ	0xFDE
 12627                           postdec2	equ	0xFDD
 12628                           fsr2h	equ	0xFDA
 12629                           fsr2l	equ	0xFD9
 12630                           status	equ	0xFD8
 12631                           
 12632 ;; *************** function _MacroNop *****************
 12633 ;; Defined at:
 12634 ;;		line 322 in file "../../../../../framework/miwi/src/miwi_p2p.c"
 12635 ;; Parameters:    Size  Location     Type
 12636 ;;		None
 12637 ;; Auto vars:     Size  Location     Type
 12638 ;;		None
 12639 ;; Return value:  Size  Location     Type
 12640 ;;		None               void
 12641 ;; Registers used:
 12642 ;;		None
 12643 ;; Tracked objects:
 12644 ;;		On entry : 0/0
 12645 ;;		On exit  : 0/0
 12646 ;;		Unchanged: 0/0
 12647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12652 ;;Total ram usage:        0 bytes
 12653 ;; Hardware stack levels used:    1
 12654 ;; Hardware stack levels required when called:    8
 12655 ;; This function calls:
 12656 ;;		Nothing
 12657 ;; This function is called by:
 12658 ;;		_EEPROM_Write
 12659 ;; This function uses a non-reentrant model
 12660 ;;
 12661                           
 12662                           	psect	text58
 12663  0033CE                     __ptext58:
 12664                           	opt stack 0
 12665  0033CE                     _MacroNop:
 12666                           	opt stack 14
 12667                           
 12668                           ;miwi_p2p.c: 324: __nop();
 12669                           
 12670                           ;incstack = 0
 12671  0033CE  F000               	nop	
 12672  0033D0  0012               	return		;funcret
 12673  0033D2                     __end_of_MacroNop:
 12674                           	opt stack 0
 12675                           tblptru	equ	0xFF8
 12676                           tblptrh	equ	0xFF7
 12677                           tblptrl	equ	0xFF6
 12678                           tablat	equ	0xFF5
 12679                           prodh	equ	0xFF4
 12680                           prodl	equ	0xFF3
 12681                           intcon	equ	0xFF2
 12682                           intcon2	equ	0xFF1
 12683                           intcon3	equ	0xFF0
 12684                           postinc0	equ	0xFEE
 12685                           wreg	equ	0xFE8
 12686                           indf1	equ	0xFE7
 12687                           postinc1	equ	0xFE6
 12688                           postdec1	equ	0xFE5
 12689                           fsr1h	equ	0xFE2
 12690                           fsr1l	equ	0xFE1
 12691                           indf2	equ	0xFDF
 12692                           postinc2	equ	0xFDE
 12693                           postdec2	equ	0xFDD
 12694                           fsr2h	equ	0xFDA
 12695                           fsr2l	equ	0xFD9
 12696                           status	equ	0xFD8
 12697                           
 12698 ;; *************** function _DemoOutput_Instruction *****************
 12699 ;; Defined at:
 12700 ;;		line 136 in file "../src/demo_ouput.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;		None
 12703 ;; Auto vars:     Size  Location     Type
 12704 ;;		None
 12705 ;; Return value:  Size  Location     Type
 12706 ;;		None               void
 12707 ;; Registers used:
 12708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12709 ;; Tracked objects:
 12710 ;;		On entry : 0/0
 12711 ;;		On exit  : F/0
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12718 ;;Total ram usage:        0 bytes
 12719 ;; Hardware stack levels used:    1
 12720 ;; Hardware stack levels required when called:   12
 12721 ;; This function calls:
 12722 ;;		_LCDDisplay
 12723 ;; This function is called by:
 12724 ;;		_Initialize_Demo
 12725 ;; This function uses a non-reentrant model
 12726 ;;
 12727                           
 12728                           	psect	text59
 12729  00333A                     __ptext59:
 12730                           	opt stack 0
 12731  00333A                     _DemoOutput_Instruction:
 12732                           	opt stack 17
 12733                           
 12734                           ;demo_ouput.c: 141: LCDDisplay((char *)"SW1: Broadcast  SW2: Unicast", 0, 0);
 12735                           
 12736                           ;incstack = 0
 12737  00333A  0E5D               	movlw	low STR_18
 12738  00333C  0100               	movlb	0	; () banked
 12739  00333E  6F98               	movwf	LCDDisplay@text& (0+255),b
 12740  003340  0EFE               	movlw	high STR_18
 12741  003342  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
 12742  003344  6B9A               	clrf	LCDDisplay@value& (0+255),b
 12743  003346  6B9B               	clrf	LCDDisplay@delay& (0+255),b
 12744  003348  EF94  F017         	goto	_LCDDisplay	;wreg free
 12745  00334C                     __end_of_DemoOutput_Instruction:
 12746                           	opt stack 0
 12747                           tblptru	equ	0xFF8
 12748                           tblptrh	equ	0xFF7
 12749                           tblptrl	equ	0xFF6
 12750                           tablat	equ	0xFF5
 12751                           prodh	equ	0xFF4
 12752                           prodl	equ	0xFF3
 12753                           intcon	equ	0xFF2
 12754                           intcon2	equ	0xFF1
 12755                           intcon3	equ	0xFF0
 12756                           postinc0	equ	0xFEE
 12757                           wreg	equ	0xFE8
 12758                           indf1	equ	0xFE7
 12759                           postinc1	equ	0xFE6
 12760                           postdec1	equ	0xFE5
 12761                           fsr1h	equ	0xFE2
 12762                           fsr1l	equ	0xFE1
 12763                           indf2	equ	0xFDF
 12764                           postinc2	equ	0xFDE
 12765                           postdec2	equ	0xFDD
 12766                           fsr2h	equ	0xFDA
 12767                           fsr2l	equ	0xFD9
 12768                           status	equ	0xFD8
 12769                           
 12770 ;; *************** function _DemoOutput_ChannelError *****************
 12771 ;; Defined at:
 12772 ;;		line 193 in file "../src/demo_ouput.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;  channel         1    wreg     unsigned char 
 12775 ;; Auto vars:     Size  Location     Type
 12776 ;;  channel         1    0[COMRAM] unsigned char 
 12777 ;; Return value:  Size  Location     Type
 12778 ;;		None               void
 12779 ;; Registers used:
 12780 ;;		wreg
 12781 ;; Tracked objects:
 12782 ;;		On entry : 0/0
 12783 ;;		On exit  : 0/0
 12784 ;;		Unchanged: 0/0
 12785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12790 ;;Total ram usage:        0 bytes
 12791 ;; Hardware stack levels used:    1
 12792 ;; Hardware stack levels required when called:    8
 12793 ;; This function calls:
 12794 ;;		Nothing
 12795 ;; This function is called by:
 12796 ;;		_Initialize_Demo
 12797 ;; This function uses a non-reentrant model
 12798 ;;
 12799                           
 12800                           	psect	text60
 12801  0033D2                     __ptext60:
 12802                           	opt stack 0
 12803  0033D2                     _DemoOutput_ChannelError:
 12804                           	opt stack 21
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;incstack = 0
 12808  0033D2  0012               	return		;funcret
 12809  0033D4                     __end_of_DemoOutput_ChannelError:
 12810                           	opt stack 0
 12811                           tblptru	equ	0xFF8
 12812                           tblptrh	equ	0xFF7
 12813                           tblptrl	equ	0xFF6
 12814                           tablat	equ	0xFF5
 12815                           prodh	equ	0xFF4
 12816                           prodl	equ	0xFF3
 12817                           intcon	equ	0xFF2
 12818                           intcon2	equ	0xFF1
 12819                           intcon3	equ	0xFF0
 12820                           postinc0	equ	0xFEE
 12821                           wreg	equ	0xFE8
 12822                           indf1	equ	0xFE7
 12823                           postinc1	equ	0xFE6
 12824                           postdec1	equ	0xFE5
 12825                           fsr1h	equ	0xFE2
 12826                           fsr1l	equ	0xFE1
 12827                           indf2	equ	0xFDF
 12828                           postinc2	equ	0xFDE
 12829                           postdec2	equ	0xFDD
 12830                           fsr2h	equ	0xFDA
 12831                           fsr2l	equ	0xFD9
 12832                           status	equ	0xFD8
 12833                           
 12834 ;; *************** function _DemoOutput_Channel *****************
 12835 ;; Defined at:
 12836 ;;		line 111 in file "../src/demo_ouput.c"
 12837 ;; Parameters:    Size  Location     Type
 12838 ;;  channel         1    wreg     unsigned char 
 12839 ;;  Step            1   61[BANK0 ] unsigned char 
 12840 ;; Auto vars:     Size  Location     Type
 12841 ;;  channel         1   62[BANK0 ] unsigned char 
 12842 ;; Return value:  Size  Location     Type
 12843 ;;		None               void
 12844 ;; Registers used:
 12845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12846 ;; Tracked objects:
 12847 ;;		On entry : F/0
 12848 ;;		On exit  : F/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12851 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12852 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12854 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12855 ;;Total ram usage:        2 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:   12
 12858 ;; This function calls:
 12859 ;;		_DELAY_ms
 12860 ;;		_LCDDisplay
 12861 ;; This function is called by:
 12862 ;;		_Initialize_Demo
 12863 ;; This function uses a non-reentrant model
 12864 ;;
 12865                           
 12866                           	psect	text61
 12867  002EEA                     __ptext61:
 12868                           	opt stack 0
 12869  002EEA                     _DemoOutput_Channel:
 12870                           	opt stack 17
 12871                           
 12872                           ;incstack = 0
 12873                           ;DemoOutput_Channel@channel stored from wreg
 12874  002EEA  6F9E               	movwf	DemoOutput_Channel@channel& (0+255),b
 12875                           
 12876                           ;demo_ouput.c: 113: if( Step == 0 )
 12877  002EEC  0100               	movlb	0	; () banked
 12878  002EEE  519D               	movf	DemoOutput_Channel@Step& (0+255),w,b
 12879  002EF0  E10B               	bnz	l9394
 12880                           
 12881                           ; BSR set to: 0
 12882                           ;demo_ouput.c: 114: {
 12883                           ;demo_ouput.c: 115: LCDDisplay((char *)"Connecting Peer  on Channel %d ", channel, 1);
 12884  002EF2  0EE0               	movlw	low STR_16
 12885  002EF4  6F98               	movwf	LCDDisplay@text& (0+255),b
 12886  002EF6  0EFD               	movlw	high STR_16
 12887  002EF8  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
 12888  002EFA  C09E  F09A         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 12889  002EFE  0E01               	movlw	1
 12890  002F00  6F9B               	movwf	LCDDisplay@delay& (0+255),b
 12891  002F02  EC94  F017         	call	_LCDDisplay	;wreg free
 12892                           
 12893                           ;demo_ouput.c: 122: }
 12894  002F06  D00A               	goto	l9396
 12895  002F08                     l9394:
 12896                           
 12897                           ; BSR set to: 0
 12898                           ;demo_ouput.c: 123: else
 12899                           ;demo_ouput.c: 124: {
 12900                           ;demo_ouput.c: 125: LCDDisplay((char *)" Connected Peer  on Channel %d", channel, 1);
 12901  002F08  0E20               	movlw	low STR_17
 12902  002F0A  6F98               	movwf	LCDDisplay@text& (0+255),b
 12903  002F0C  0EFE               	movlw	high STR_17
 12904  002F0E  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
 12905  002F10  C09E  F09A         	movff	DemoOutput_Channel@channel,LCDDisplay@value
 12906  002F14  0E01               	movlw	1
 12907  002F16  6F9B               	movwf	LCDDisplay@delay& (0+255),b
 12908  002F18  EC94  F017         	call	_LCDDisplay	;wreg free
 12909  002F1C                     l9396:
 12910                           
 12911                           ; BSR set to: 0
 12912                           ;demo_ouput.c: 132: }
 12913                           ;demo_ouput.c: 133: DELAY_ms(1000);
 12914  002F1C  0E03               	movlw	3
 12915  002F1E  6F6A               	movwf	(DELAY_ms@ms+1)& (0+255),b
 12916  002F20  0EE8               	movlw	232
 12917  002F22  6F69               	movwf	DELAY_ms@ms& (0+255),b
 12918  002F24  EFFE  F00F         	goto	_DELAY_ms	;wreg free
 12919  002F28                     __end_of_DemoOutput_Channel:
 12920                           	opt stack 0
 12921                           tblptru	equ	0xFF8
 12922                           tblptrh	equ	0xFF7
 12923                           tblptrl	equ	0xFF6
 12924                           tablat	equ	0xFF5
 12925                           prodh	equ	0xFF4
 12926                           prodl	equ	0xFF3
 12927                           intcon	equ	0xFF2
 12928                           intcon2	equ	0xFF1
 12929                           intcon3	equ	0xFF0
 12930                           postinc0	equ	0xFEE
 12931                           wreg	equ	0xFE8
 12932                           indf1	equ	0xFE7
 12933                           postinc1	equ	0xFE6
 12934                           postdec1	equ	0xFE5
 12935                           fsr1h	equ	0xFE2
 12936                           fsr1l	equ	0xFE1
 12937                           indf2	equ	0xFDF
 12938                           postinc2	equ	0xFDE
 12939                           postdec2	equ	0xFDD
 12940                           fsr2h	equ	0xFDA
 12941                           fsr2l	equ	0xFD9
 12942                           status	equ	0xFD8
 12943                           
 12944 ;; *************** function _DemoOutput_Greeting *****************
 12945 ;; Defined at:
 12946 ;;		line 63 in file "../src/demo_ouput.c"
 12947 ;; Parameters:    Size  Location     Type
 12948 ;;		None
 12949 ;; Auto vars:     Size  Location     Type
 12950 ;;		None
 12951 ;; Return value:  Size  Location     Type
 12952 ;;		None               void
 12953 ;; Registers used:
 12954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12955 ;; Tracked objects:
 12956 ;;		On entry : F/0
 12957 ;;		On exit  : F/0
 12958 ;;		Unchanged: 0/0
 12959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12964 ;;Total ram usage:        0 bytes
 12965 ;; Hardware stack levels used:    1
 12966 ;; Hardware stack levels required when called:   12
 12967 ;; This function calls:
 12968 ;;		_DELAY_ms
 12969 ;;		_LCDDisplay
 12970 ;; This function is called by:
 12971 ;;		_main
 12972 ;; This function uses a non-reentrant model
 12973 ;;
 12974                           
 12975                           	psect	text62
 12976  003294                     __ptext62:
 12977                           	opt stack 0
 12978  003294                     _DemoOutput_Greeting:
 12979                           	opt stack 18
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;demo_ouput.c: 77: LCDDisplay((char *)"Simple STAR     MRF89XA Node1", 0, 1);
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;incstack = 0
 12986  003294  0E3F               	movlw	low STR_15
 12987  003296  6F98               	movwf	LCDDisplay@text& (0+255),b
 12988  003298  0EFE               	movlw	high STR_15
 12989  00329A  6F99               	movwf	(LCDDisplay@text+1)& (0+255),b
 12990  00329C  6B9A               	clrf	LCDDisplay@value& (0+255),b
 12991  00329E  0E01               	movlw	1
 12992  0032A0  6F9B               	movwf	LCDDisplay@delay& (0+255),b
 12993  0032A2  EC94  F017         	call	_LCDDisplay	;wreg free
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;demo_ouput.c: 108: DELAY_ms(1500);
 12997  0032A6  0E05               	movlw	5
 12998  0032A8  6F6A               	movwf	(DELAY_ms@ms+1)& (0+255),b
 12999  0032AA  0EDC               	movlw	220
 13000  0032AC  6F69               	movwf	DELAY_ms@ms& (0+255),b
 13001  0032AE  EFFE  F00F         	goto	_DELAY_ms	;wreg free
 13002  0032B2                     __end_of_DemoOutput_Greeting:
 13003                           	opt stack 0
 13004                           tblptru	equ	0xFF8
 13005                           tblptrh	equ	0xFF7
 13006                           tblptrl	equ	0xFF6
 13007                           tablat	equ	0xFF5
 13008                           prodh	equ	0xFF4
 13009                           prodl	equ	0xFF3
 13010                           intcon	equ	0xFF2
 13011                           intcon2	equ	0xFF1
 13012                           intcon3	equ	0xFF0
 13013                           postinc0	equ	0xFEE
 13014                           wreg	equ	0xFE8
 13015                           indf1	equ	0xFE7
 13016                           postinc1	equ	0xFE6
 13017                           postdec1	equ	0xFE5
 13018                           fsr1h	equ	0xFE2
 13019                           fsr1l	equ	0xFE1
 13020                           indf2	equ	0xFDF
 13021                           postinc2	equ	0xFDE
 13022                           postdec2	equ	0xFDD
 13023                           fsr2h	equ	0xFDA
 13024                           fsr2l	equ	0xFD9
 13025                           status	equ	0xFD8
 13026                           
 13027 ;; *************** function _LCDDisplay *****************
 13028 ;; Defined at:
 13029 ;;		line 187 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 13030 ;; Parameters:    Size  Location     Type
 13031 ;;  text            2   56[BANK0 ] PTR unsigned char 
 13032 ;;		 -> STR_37(12), STR_36(20), STR_31(11), STR_30(11), 
 13033 ;;		 -> STR_29(28), STR_26(32), STR_25(33), STR_24(16), 
 13034 ;;		 -> STR_18(29), STR_17(31), STR_16(32), STR_15(30), 
 13035 ;;  value           1   58[BANK0 ] unsigned char 
 13036 ;;  delay           1   59[BANK0 ] unsigned char 
 13037 ;; Auto vars:     Size  Location     Type
 13038 ;;  i               1   60[BANK0 ] unsigned char 
 13039 ;; Return value:  Size  Location     Type
 13040 ;;		None               void
 13041 ;; Registers used:
 13042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13043 ;; Tracked objects:
 13044 ;;		On entry : F/0
 13045 ;;		On exit  : F/0
 13046 ;;		Unchanged: 0/0
 13047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13048 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13051 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13052 ;;Total ram usage:        5 bytes
 13053 ;; Hardware stack levels used:    1
 13054 ;; Hardware stack levels required when called:   11
 13055 ;; This function calls:
 13056 ;;		_DELAY_ms
 13057 ;;		_LCD_Erase
 13058 ;;		_LCD_Update
 13059 ;;		_sprintf
 13060 ;; This function is called by:
 13061 ;;		_DemoOutput_Greeting
 13062 ;;		_DemoOutput_Channel
 13063 ;;		_DemoOutput_Instruction
 13064 ;;		_DemoOutput_UnicastFail
 13065 ;;		_STAR_DEMO_OPTIONS_MESSAGE
 13066 ;;		_freezer_feature
 13067 ;;		_run_star_demo
 13068 ;; This function uses a non-reentrant model
 13069 ;;
 13070                           
 13071                           	psect	text63
 13072  002F28                     __ptext63:
 13073                           	opt stack 0
 13074  002F28                     _LCDDisplay:
 13075                           	opt stack 18
 13076                           
 13077                           ; BSR set to: 0
 13078                           ;lcd.c: 189: LCD_Erase();
 13079                           
 13080                           ; BSR set to: 0
 13081                           ;incstack = 0
 13082  002F28  ECE2  F018         	call	_LCD_Erase	;wreg free
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;lcd.c: 190: sprintf((char *)LCDText, (char*)text, value);
 13086  002F2C  0EB8               	movlw	low _LCDText
 13087  002F2E  6F75               	movwf	sprintf@sp& (0+255),b
 13088  002F30  0E01               	movlw	high _LCDText
 13089  002F32  6F76               	movwf	(sprintf@sp+1)& (0+255),b
 13090  002F34  C098  F077         	movff	LCDDisplay@text,sprintf@f
 13091  002F38  C099  F078         	movff	LCDDisplay@text+1,sprintf@f+1
 13092  002F3C  C09A  F079         	movff	LCDDisplay@value,?_sprintf+4
 13093  002F40  6B7A               	clrf	(?_sprintf+5)& (0+255),b
 13094  002F42  EC2C  F000         	call	_sprintf	;wreg free
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;lcd.c: 191: LCD_Update();
 13098  002F46  EC07  F014         	call	_LCD_Update	;wreg free
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;lcd.c: 194: if( delay )
 13102  002F4A  519B               	movf	LCDDisplay@delay& (0+255),w,b
 13103  002F4C  B4D8               	btfsc	status,2,c
 13104  002F4E  0012               	return	
 13105                           
 13106                           ; BSR set to: 0
 13107                           ;lcd.c: 195: {
 13108                           ;lcd.c: 196: uint8_t i;
 13109                           ;lcd.c: 197: for(i = 0; i < 8; i++)
 13110  002F50  6B9C               	clrf	LCDDisplay@i& (0+255),b
 13111  002F52                     l8350:
 13112                           
 13113                           ; BSR set to: 0
 13114                           ;lcd.c: 198: {
 13115                           ;lcd.c: 199: DELAY_ms(250);
 13116  002F52  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
 13117  002F54  0EFA               	movlw	250
 13118  002F56  6F69               	movwf	DELAY_ms@ms& (0+255),b
 13119  002F58  ECFE  F00F         	call	_DELAY_ms	;wreg free
 13120                           
 13121                           ; BSR set to: 0
 13122  002F5C  2B9C               	incf	LCDDisplay@i& (0+255),f,b
 13123                           
 13124                           ; BSR set to: 0
 13125  002F5E  0E07               	movlw	7
 13126  002F60  659C               	cpfsgt	LCDDisplay@i& (0+255),b
 13127  002F62  D7F7               	goto	l8350
 13128  002F64  0C07               	retlw	7
 13129  002F66                     __end_of_LCDDisplay:
 13130                           	opt stack 0
 13131                           tblptru	equ	0xFF8
 13132                           tblptrh	equ	0xFF7
 13133                           tblptrl	equ	0xFF6
 13134                           tablat	equ	0xFF5
 13135                           prodh	equ	0xFF4
 13136                           prodl	equ	0xFF3
 13137                           intcon	equ	0xFF2
 13138                           intcon2	equ	0xFF1
 13139                           intcon3	equ	0xFF0
 13140                           postinc0	equ	0xFEE
 13141                           wreg	equ	0xFE8
 13142                           indf1	equ	0xFE7
 13143                           postinc1	equ	0xFE6
 13144                           postdec1	equ	0xFE5
 13145                           fsr1h	equ	0xFE2
 13146                           fsr1l	equ	0xFE1
 13147                           indf2	equ	0xFDF
 13148                           postinc2	equ	0xFDE
 13149                           postdec2	equ	0xFDD
 13150                           fsr2h	equ	0xFDA
 13151                           fsr2l	equ	0xFD9
 13152                           status	equ	0xFD8
 13153                           
 13154 ;; *************** function _sprintf *****************
 13155 ;; Defined at:
 13156 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 13157 ;; Parameters:    Size  Location     Type
 13158 ;;  sp              2   21[BANK0 ] PTR unsigned char 
 13159 ;;		 -> LCDText(33), 
 13160 ;;  f               2   23[BANK0 ] PTR const unsigned char 
 13161 ;;		 -> STR_37(12), STR_36(20), STR_35(17), STR_34(22), 
 13162 ;;		 -> STR_33(22), STR_32(25), STR_31(11), STR_30(11), 
 13163 ;;		 -> STR_29(28), STR_28(22), STR_27(17), STR_26(32), 
 13164 ;;		 -> STR_25(33), STR_24(16), STR_18(29), STR_17(31), 
 13165 ;;		 -> STR_16(32), STR_15(30), STR_14(14), STR_13(16), 
 13166 ;; Auto vars:     Size  Location     Type
 13167 ;;  idx             1   37[BANK0 ] unsigned char 
 13168 ;;  tmpval          4    0        struct .
 13169 ;;  flag            2   54[BANK0 ] unsigned short 
 13170 ;;  width           2   51[BANK0 ] int 
 13171 ;;  val             2   48[BANK0 ] unsigned int 
 13172 ;;  len             2   45[BANK0 ] unsigned int 
 13173 ;;  c               1   53[BANK0 ] char 
 13174 ;;  prec            1   50[BANK0 ] char 
 13175 ;;  ap              1   47[BANK0 ] PTR void [1]
 13176 ;;		 -> ?_sprintf(2), 
 13177 ;;  cp              1   44[BANK0 ] PTR const unsigned char 
 13178 ;;		 -> sprintf@c(1), 
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  2   21[BANK0 ] int 
 13181 ;; Registers used:
 13182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13183 ;; Tracked objects:
 13184 ;;		On entry : F/0
 13185 ;;		On exit  : F/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13188 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13189 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13190 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13191 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13192 ;;Total ram usage:       35 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; Hardware stack levels required when called:    9
 13195 ;; This function calls:
 13196 ;;		___lwdiv
 13197 ;;		___lwmod
 13198 ;;		___wmul
 13199 ;;		_isdigit
 13200 ;; This function is called by:
 13201 ;;		_LCDTRXCount
 13202 ;;		_LCDDisplay
 13203 ;;		_run_star_demo
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           	psect	text64
 13208  000058                     __ptext64:
 13209                           	opt stack 0
 13210  000058                     _sprintf:
 13211                           	opt stack 19
 13212                           
 13213                           ; BSR set to: 0
 13214                           ;doprnt.c: 494: va_list ap;
 13215                           ;doprnt.c: 499: signed char c;
 13216                           ;doprnt.c: 501: int width;
 13217                           ;doprnt.c: 506: signed char prec;
 13218                           ;doprnt.c: 508: unsigned short flag;
 13219                           ;doprnt.c: 523: union {
 13220                           ;doprnt.c: 524: unsigned long vd;
 13221                           ;doprnt.c: 525: double integ;
 13222                           ;doprnt.c: 526: } tmpval;
 13223                           ;doprnt.c: 528: unsigned int val;
 13224                           ;doprnt.c: 529: unsigned len;
 13225                           ;doprnt.c: 530: const char * cp;
 13226                           ;doprnt.c: 533: *ap = __va_start();
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;incstack = 0
 13230  000058  0E79               	movlw	low (?_sprintf+4)
 13231  00005A  6F8F               	movwf	sprintf@ap& (0+255),b
 13232                           
 13233                           ;doprnt.c: 536: while(c = *f++) {
 13234  00005C  D378               	goto	l8216
 13235  00005E                     l7894:
 13236                           
 13237                           ; BSR set to: 0
 13238                           ;doprnt.c: 538: if(c != '%')
 13239  00005E  0E25               	movlw	37
 13240  000060  1995               	xorwf	sprintf@c& (0+255),w,b
 13241  000062  E009               	bz	l1373
 13242                           
 13243                           ; BSR set to: 0
 13244                           ;doprnt.c: 540: {
 13245                           ;doprnt.c: 541: ((*sp++ = (c)));
 13246  000064  C075  FFD9         	movff	sprintf@sp,fsr2l
 13247  000068  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 13248  00006C  C095  FFDF         	movff	sprintf@c,indf2
 13249                           
 13250                           ; BSR set to: 0
 13251  000070  4B75               	infsnz	sprintf@sp& (0+255),f,b
 13252  000072  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 13253                           
 13254                           ;doprnt.c: 542: continue;
 13255  000074  D36C               	goto	l8216
 13256  000076                     l1373:
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;doprnt.c: 543: }
 13260                           ;doprnt.c: 546: width = 0;
 13261  000076  6B93               	clrf	sprintf@width& (0+255),b
 13262  000078  6B94               	clrf	(sprintf@width+1)& (0+255),b
 13263                           
 13264                           ;doprnt.c: 548: flag = 0;
 13265  00007A  6B96               	clrf	sprintf@flag& (0+255),b
 13266  00007C  6B97               	clrf	(sprintf@flag+1)& (0+255),b
 13267  00007E  D009               	goto	l7910
 13268  000080                     l7900:
 13269                           
 13270                           ; BSR set to: 0
 13271                           ;doprnt.c: 554: flag |= 0x08;
 13272  000080  8796               	bsf	sprintf@flag& (0+255),3,b
 13273  000082  D005               	goto	L1
 13274  000084                     l7902:
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;doprnt.c: 561: flag |= 0x01;
 13278  000084  8196               	bsf	sprintf@flag& (0+255),0,b
 13279  000086  D003               	goto	L1
 13280  000088                     l7904:
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;doprnt.c: 574: flag |= 0x800;
 13284  000088  8797               	bsf	(sprintf@flag+1)& (0+255),3,b
 13285  00008A  D001               	goto	L1
 13286  00008C                     l7906:
 13287                           
 13288                           ; BSR set to: 0
 13289                           ;doprnt.c: 580: flag |= 0x04;
 13290  00008C  8596               	bsf	sprintf@flag& (0+255),2,b
 13291  00008E                     L1:
 13292                           
 13293                           ;doprnt.c: 581: f++;
 13294  00008E  4B77               	infsnz	sprintf@f& (0+255),f,b
 13295  000090  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 13296  000092                     l7910:
 13297                           
 13298                           ; BSR set to: 0
 13299  000092  C077  FFF6         	movff	sprintf@f,tblptrl
 13300  000096  C078  FFF7         	movff	sprintf@f+1,tblptrh
 13301  00009A                     	if	0	;tblptru may be non-zero
 13302  00009A                     	endif
 13303  00009A                     	if	0	;tblptru may be non-zero
 13304  00009A                     	endif
 13305  00009A  0008               	tblrd		*
 13306  00009C  50F5               	movf	tablat,w,c
 13307                           
 13308                           ; Switch size 1, requested type "speed"
 13309                           ; Number of cases is 4, Range of values is 32 to 48
 13310                           ; switch strategies available:
 13311                           ; Name         Instructions Cycles
 13312                           ; simple_byte           13     7 (average)
 13313                           ;	Chosen strategy is simple_byte
 13314  00009E  0A20               	xorlw	32	; case 32
 13315  0000A0  E0F1               	bz	l7902
 13316  0000A2  0A03               	xorlw	3	; case 35
 13317  0000A4  E0F1               	bz	l7904
 13318  0000A6  0A0E               	xorlw	14	; case 45
 13319  0000A8  E0EB               	bz	l7900
 13320  0000AA  0A1D               	xorlw	29	; case 48
 13321  0000AC  E0EF               	bz	l7906
 13322                           
 13323                           ; BSR set to: 0
 13324                           ;doprnt.c: 593: if(flag & 0x08)
 13325  0000AE  B796               	btfsc	sprintf@flag& (0+255),3,b
 13326                           
 13327                           ; BSR set to: 0
 13328                           ;doprnt.c: 594: flag &= ~0x04;
 13329  0000B0  9596               	bcf	sprintf@flag& (0+255),2,b
 13330                           
 13331                           ; BSR set to: 0
 13332                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 13333  0000B2  C077  FFF6         	movff	sprintf@f,tblptrl
 13334  0000B6  C078  FFF7         	movff	sprintf@f+1,tblptrh
 13335  0000BA                     	if	0	;tblptru may be non-zero
 13336  0000BA                     	endif
 13337  0000BA                     	if	0	;tblptru may be non-zero
 13338  0000BA                     	endif
 13339  0000BA  0008               	tblrd		*
 13340  0000BC  50F5               	movf	tablat,w,c
 13341  0000BE  EC59  F019         	call	_isdigit
 13342  0000C2  E32E               	bnc	l7926
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;doprnt.c: 598: width = 0;
 13346  0000C4  6B93               	clrf	sprintf@width& (0+255),b
 13347  0000C6  6B94               	clrf	(sprintf@width+1)& (0+255),b
 13348  0000C8                     l7918:
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;doprnt.c: 600: width *= 10;
 13352  0000C8  C093  F069         	movff	sprintf@width,___wmul@multiplier
 13353  0000CC  C094  F06A         	movff	sprintf@width+1,___wmul@multiplier+1
 13354  0000D0  6B6C               	clrf	(___wmul@multiplicand+1)& (0+255),b
 13355  0000D2  0E0A               	movlw	10
 13356  0000D4  6F6B               	movwf	___wmul@multiplicand& (0+255),b
 13357  0000D6  ECF6  F018         	call	___wmul	;wreg free
 13358  0000DA  C069  F093         	movff	?___wmul,sprintf@width
 13359  0000DE  C06A  F094         	movff	?___wmul+1,sprintf@width+1
 13360                           
 13361                           ; BSR set to: 0
 13362                           ;doprnt.c: 601: width += *f++ - '0';
 13363  0000E2  0ED0               	movlw	208
 13364  0000E4  6F81               	movwf	??_sprintf& (0+255),b
 13365  0000E6  6982               	setf	(??_sprintf+1)& (0+255),b
 13366  0000E8  C077  FFF6         	movff	sprintf@f,tblptrl
 13367  0000EC  C078  FFF7         	movff	sprintf@f+1,tblptrh
 13368  0000F0                     	if	0	;tblptru may be non-zero
 13369  0000F0                     	endif
 13370  0000F0                     	if	0	;tblptru may be non-zero
 13371  0000F0                     	endif
 13372  0000F0  0008               	tblrd		*
 13373  0000F2  50F5               	movf	tablat,w,c
 13374  0000F4  6F83               	movwf	(??_sprintf+2)& (0+255),b
 13375  0000F6  6B84               	clrf	(??_sprintf+3)& (0+255),b
 13376  0000F8  5181               	movf	??_sprintf& (0+255),w,b
 13377  0000FA  2783               	addwf	(??_sprintf+2)& (0+255),f,b
 13378  0000FC  5182               	movf	(??_sprintf+1)& (0+255),w,b
 13379  0000FE  2384               	addwfc	(??_sprintf+3)& (0+255),f,b
 13380  000100  5183               	movf	(??_sprintf+2)& (0+255),w,b
 13381  000102  2793               	addwf	sprintf@width& (0+255),f,b
 13382  000104  5184               	movf	(??_sprintf+3)& (0+255),w,b
 13383  000106  2394               	addwfc	(sprintf@width+1)& (0+255),f,b
 13384                           
 13385                           ; BSR set to: 0
 13386  000108  4B77               	infsnz	sprintf@f& (0+255),f,b
 13387  00010A  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 13388                           
 13389                           ; BSR set to: 0
 13390                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 13391  00010C  C077  FFF6         	movff	sprintf@f,tblptrl
 13392  000110  C078  FFF7         	movff	sprintf@f+1,tblptrh
 13393  000114                     	if	0	;tblptru may be non-zero
 13394  000114                     	endif
 13395  000114                     	if	0	;tblptru may be non-zero
 13396  000114                     	endif
 13397  000114  0008               	tblrd		*
 13398  000116  50F5               	movf	tablat,w,c
 13399  000118  EC59  F019         	call	_isdigit
 13400  00011C  E314               	bnc	l7934
 13401  00011E  D7D4               	goto	l7918
 13402  000120                     l7926:
 13403                           
 13404                           ; BSR set to: 0
 13405  000120  C077  FFF6         	movff	sprintf@f,tblptrl
 13406  000124  C078  FFF7         	movff	sprintf@f+1,tblptrh
 13407  000128                     	if	0	;tblptru may be non-zero
 13408  000128                     	endif
 13409  000128                     	if	0	;tblptru may be non-zero
 13410  000128                     	endif
 13411  000128  0008               	tblrd		*
 13412  00012A  50F5               	movf	tablat,w,c
 13413  00012C  0A2A               	xorlw	42
 13414  00012E  E10B               	bnz	l7934
 13415                           
 13416                           ; BSR set to: 0
 13417                           ;doprnt.c: 605: width = (*(int *)__va_arg((*(int **)ap), (int)0));
 13418  000130  518F               	movf	sprintf@ap& (0+255),w,b
 13419  000132  6ED9               	movwf	fsr2l,c
 13420  000134  6ADA               	clrf	fsr2h,c
 13421  000136  CFDE F093          	movff	postinc2,sprintf@width
 13422  00013A  CFDD F094          	movff	postdec2,sprintf@width+1
 13423                           
 13424                           ; BSR set to: 0
 13425  00013E  0E02               	movlw	2
 13426  000140  278F               	addwf	sprintf@ap& (0+255),f,b
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;doprnt.c: 606: f++;
 13430  000142  4B77               	infsnz	sprintf@f& (0+255),f,b
 13431  000144  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 13432  000146                     l7934:
 13433                           
 13434                           ; BSR set to: 0
 13435                           ;doprnt.c: 608: }
 13436                           ;doprnt.c: 611: if(*f == '.') {
 13437  000146  C077  FFF6         	movff	sprintf@f,tblptrl
 13438  00014A  C078  FFF7         	movff	sprintf@f+1,tblptrh
 13439  00014E                     	if	0	;tblptru may be non-zero
 13440  00014E                     	endif
 13441  00014E                     	if	0	;tblptru may be non-zero
 13442  00014E                     	endif
 13443  00014E  0008               	tblrd		*
 13444  000150  50F5               	movf	tablat,w,c
 13445  000152  0A2E               	xorlw	46
 13446  000154  E130               	bnz	l1389
 13447                           
 13448                           ; BSR set to: 0
 13449                           ;doprnt.c: 612: flag |= 0x4000;
 13450  000156  8D97               	bsf	(sprintf@flag+1)& (0+255),6,b
 13451                           
 13452                           ;doprnt.c: 613: f++;
 13453  000158  4B77               	infsnz	sprintf@f& (0+255),f,b
 13454  00015A  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;doprnt.c: 615: if(*f == '*') {
 13458  00015C  C077  FFF6         	movff	sprintf@f,tblptrl
 13459  000160  C078  FFF7         	movff	sprintf@f+1,tblptrh
 13460  000164                     	if	0	;tblptru may be non-zero
 13461  000164                     	endif
 13462  000164                     	if	0	;tblptru may be non-zero
 13463  000164                     	endif
 13464  000164  0008               	tblrd		*
 13465  000166  50F5               	movf	tablat,w,c
 13466  000168  0A2A               	xorlw	42
 13467  00016A  E10A               	bnz	l1390
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;doprnt.c: 616: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
 13471  00016C  518F               	movf	sprintf@ap& (0+255),w,b
 13472  00016E  6ED9               	movwf	fsr2l,c
 13473  000170  6ADA               	clrf	fsr2h,c
 13474  000172  50DF               	movf	indf2,w,c
 13475  000174  6F92               	movwf	sprintf@prec& (0+255),b
 13476                           
 13477                           ; BSR set to: 0
 13478  000176  0E02               	movlw	2
 13479  000178  278F               	addwf	sprintf@ap& (0+255),f,b
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;doprnt.c: 617: f++;
 13483  00017A  4B77               	infsnz	sprintf@f& (0+255),f,b
 13484  00017C  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 13485                           
 13486                           ;doprnt.c: 618: } else
 13487  00017E  D08A               	goto	l8002
 13488  000180                     l1390:
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;doprnt.c: 620: {
 13492                           ;doprnt.c: 621: prec = 0;
 13493  000180  6B92               	clrf	sprintf@prec& (0+255),b
 13494                           
 13495                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 13496  000182  D00F               	goto	l7950
 13497  000184                     l7946:
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 13501  000184  C077  FFF6         	movff	sprintf@f,tblptrl
 13502  000188  C078  FFF7         	movff	sprintf@f+1,tblptrh
 13503  00018C                     	if	0	;tblptru may be non-zero
 13504  00018C                     	endif
 13505  00018C                     	if	0	;tblptru may be non-zero
 13506  00018C                     	endif
 13507  00018C  0008               	tblrd		*
 13508  00018E  CFF5 F081          	movff	tablat,??_sprintf
 13509  000192  5192               	movf	sprintf@prec& (0+255),w,b
 13510  000194  0D0A               	mullw	10
 13511  000196  50F3               	movf	prodl,w,c
 13512  000198  2581               	addwf	??_sprintf& (0+255),w,b
 13513  00019A  0FD0               	addlw	208
 13514  00019C  6F92               	movwf	sprintf@prec& (0+255),b
 13515                           
 13516                           ; BSR set to: 0
 13517  00019E  4B77               	infsnz	sprintf@f& (0+255),f,b
 13518  0001A0  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 13519  0001A2                     l7950:
 13520                           
 13521                           ; BSR set to: 0
 13522  0001A2  C077  FFF6         	movff	sprintf@f,tblptrl
 13523  0001A6  C078  FFF7         	movff	sprintf@f+1,tblptrh
 13524  0001AA                     	if	0	;tblptru may be non-zero
 13525  0001AA                     	endif
 13526  0001AA                     	if	0	;tblptru may be non-zero
 13527  0001AA                     	endif
 13528  0001AA  0008               	tblrd		*
 13529  0001AC  50F5               	movf	tablat,w,c
 13530  0001AE  EC59  F019         	call	_isdigit
 13531  0001B2  E370               	bnc	l8002
 13532  0001B4  D7E7               	goto	l7946
 13533  0001B6                     l1389:
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;doprnt.c: 626: prec = 0;
 13537  0001B6  6B92               	clrf	sprintf@prec& (0+255),b
 13538  0001B8  D06D               	goto	l8002
 13539  0001BA                     l7952:
 13540                           
 13541                           ; BSR set to: 0
 13542                           ;doprnt.c: 691: flag |= 0x40;
 13543  0001BA  8D96               	bsf	sprintf@flag& (0+255),6,b
 13544                           
 13545                           ;doprnt.c: 693: break;
 13546  0001BC  D088               	goto	l8004
 13547  0001BE                     l7954:
 13548                           
 13549                           ; BSR set to: 0
 13550                           ;doprnt.c: 714: flag |= 0x20;
 13551  0001BE  8B96               	bsf	sprintf@flag& (0+255),5,b
 13552  0001C0                     l1404:
 13553                           
 13554                           ; BSR set to: 0
 13555                           ;doprnt.c: 721: flag |= 0x80;
 13556  0001C0  8F96               	bsf	sprintf@flag& (0+255),7,b
 13557                           
 13558                           ;doprnt.c: 723: break;
 13559  0001C2  D085               	goto	l8004
 13560  0001C4                     l7956:
 13561                           
 13562                           ; BSR set to: 0
 13563                           ;doprnt.c: 753: if(prec && prec < len)
 13564  0001C4  5192               	movf	sprintf@prec& (0+255),w,b
 13565  0001C6  E00F               	bz	l7962
 13566                           
 13567                           ; BSR set to: 0
 13568  0001C8  C092  F081         	movff	sprintf@prec,??_sprintf
 13569  0001CC  6B82               	clrf	(??_sprintf+1)& (0+255),b
 13570  0001CE  BF81               	btfsc	??_sprintf& (0+255),7,b
 13571  0001D0  0782               	decf	(??_sprintf+1)& (0+255),f,b
 13572  0001D2  518D               	movf	sprintf@len& (0+255),w,b
 13573  0001D4  5D81               	subwf	??_sprintf& (0+255),w,b
 13574  0001D6  518E               	movf	(sprintf@len+1)& (0+255),w,b
 13575  0001D8  5982               	subwfb	(??_sprintf+1)& (0+255),w,b
 13576  0001DA  E205               	bc	l7962
 13577                           
 13578                           ; BSR set to: 0
 13579                           ;doprnt.c: 754: len = prec;
 13580  0001DC  5192               	movf	sprintf@prec& (0+255),w,b
 13581  0001DE  6F8D               	movwf	sprintf@len& (0+255),b
 13582  0001E0  6B8E               	clrf	(sprintf@len+1)& (0+255),b
 13583  0001E2  BF8D               	btfsc	sprintf@len& (0+255),7,b
 13584  0001E4  078E               	decf	(sprintf@len+1)& (0+255),f,b
 13585  0001E6                     l7962:
 13586                           
 13587                           ; BSR set to: 0
 13588                           ;doprnt.c: 757: if(width > len)
 13589  0001E6  5193               	movf	sprintf@width& (0+255),w,b
 13590  0001E8  5D8D               	subwf	sprintf@len& (0+255),w,b
 13591  0001EA  5194               	movf	(sprintf@width+1)& (0+255),w,b
 13592  0001EC  598E               	subwfb	(sprintf@len+1)& (0+255),w,b
 13593  0001EE  E205               	bc	l1407
 13594                           
 13595                           ; BSR set to: 0
 13596                           ;doprnt.c: 758: width -= len;
 13597  0001F0  518D               	movf	sprintf@len& (0+255),w,b
 13598  0001F2  5F93               	subwf	sprintf@width& (0+255),f,b
 13599  0001F4  518E               	movf	(sprintf@len+1)& (0+255),w,b
 13600  0001F6  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
 13601  0001F8  D002               	goto	l1408
 13602  0001FA                     l1407:
 13603                           
 13604                           ; BSR set to: 0
 13605                           ;doprnt.c: 759: else
 13606                           ;doprnt.c: 760: width = 0;
 13607  0001FA  6B93               	clrf	sprintf@width& (0+255),b
 13608  0001FC  6B94               	clrf	(sprintf@width+1)& (0+255),b
 13609  0001FE                     l1408:
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;doprnt.c: 762: if(!(flag & 0x08))
 13613  0001FE  B796               	btfsc	sprintf@flag& (0+255),3,b
 13614  000200  D01D               	goto	l7980
 13615  000202  D008               	goto	l7972
 13616  000204                     l7968:
 13617                           
 13618                           ; BSR set to: 0
 13619                           ;doprnt.c: 765: ((*sp++ = (' ')));
 13620  000204  C075  FFD9         	movff	sprintf@sp,fsr2l
 13621  000208  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 13622  00020C  0E20               	movlw	32
 13623  00020E  6EDF               	movwf	indf2,c
 13624                           
 13625                           ; BSR set to: 0
 13626  000210  4B75               	infsnz	sprintf@sp& (0+255),f,b
 13627  000212  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 13628  000214                     l7972:
 13629                           
 13630                           ; BSR set to: 0
 13631  000214  0793               	decf	sprintf@width& (0+255),f,b
 13632  000216  A0D8               	btfss	status,0,c
 13633  000218  0794               	decf	(sprintf@width+1)& (0+255),f,b
 13634  00021A  2993               	incf	sprintf@width& (0+255),w,b
 13635  00021C  E1F3               	bnz	l7968
 13636  00021E  2994               	incf	(sprintf@width+1)& (0+255),w,b
 13637  000220  E00D               	bz	l7980
 13638  000222  D7F0               	goto	l7968
 13639  000224                     l7974:
 13640                           
 13641                           ; BSR set to: 0
 13642                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 13643  000224  518C               	movf	sprintf@cp& (0+255),w,b
 13644  000226  6ED9               	movwf	fsr2l,c
 13645  000228  6ADA               	clrf	fsr2h,c
 13646  00022A  C075  FFE1         	movff	sprintf@sp,fsr1l
 13647  00022E  C076  FFE2         	movff	sprintf@sp+1,fsr1h
 13648  000232  CFDF FFE7          	movff	indf2,indf1
 13649                           
 13650                           ; BSR set to: 0
 13651  000236  2B8C               	incf	sprintf@cp& (0+255),f,b
 13652                           
 13653                           ; BSR set to: 0
 13654  000238  4B75               	infsnz	sprintf@sp& (0+255),f,b
 13655  00023A  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 13656  00023C                     l7980:
 13657                           
 13658                           ; BSR set to: 0
 13659  00023C  078D               	decf	sprintf@len& (0+255),f,b
 13660  00023E  A0D8               	btfss	status,0,c
 13661  000240  078E               	decf	(sprintf@len+1)& (0+255),f,b
 13662  000242  298D               	incf	sprintf@len& (0+255),w,b
 13663  000244  E1EF               	bnz	l7974
 13664  000246  298E               	incf	(sprintf@len+1)& (0+255),w,b
 13665  000248  E1ED               	bnz	l7974
 13666                           
 13667                           ; BSR set to: 0
 13668                           ;doprnt.c: 770: if(flag & 0x08)
 13669  00024A  A796               	btfss	sprintf@flag& (0+255),3,b
 13670  00024C  D280               	goto	l8216
 13671  00024E  D008               	goto	l7988
 13672  000250                     l7984:
 13673                           
 13674                           ; BSR set to: 0
 13675                           ;doprnt.c: 772: ((*sp++ = (' ')));
 13676  000250  C075  FFD9         	movff	sprintf@sp,fsr2l
 13677  000254  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 13678  000258  0E20               	movlw	32
 13679  00025A  6EDF               	movwf	indf2,c
 13680                           
 13681                           ; BSR set to: 0
 13682  00025C  4B75               	infsnz	sprintf@sp& (0+255),f,b
 13683  00025E  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 13684  000260                     l7988:
 13685                           
 13686                           ; BSR set to: 0
 13687  000260  0793               	decf	sprintf@width& (0+255),f,b
 13688  000262  A0D8               	btfss	status,0,c
 13689  000264  0794               	decf	(sprintf@width+1)& (0+255),f,b
 13690  000266  2993               	incf	sprintf@width& (0+255),w,b
 13691  000268  E1F3               	bnz	l7984
 13692  00026A  2994               	incf	(sprintf@width+1)& (0+255),w,b
 13693  00026C  E101 D26F          	bz	l8216
 13694  000270  D7EF               	goto	l7984
 13695  000272                     l7990:
 13696                           
 13697                           ; BSR set to: 0
 13698                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
 13699  000272  518F               	movf	sprintf@ap& (0+255),w,b
 13700  000274  6ED9               	movwf	fsr2l,c
 13701  000276  6ADA               	clrf	fsr2h,c
 13702  000278  50DF               	movf	indf2,w,c
 13703  00027A  6F95               	movwf	sprintf@c& (0+255),b
 13704                           
 13705                           ; BSR set to: 0
 13706  00027C  0E02               	movlw	2
 13707  00027E  278F               	addwf	sprintf@ap& (0+255),f,b
 13708  000280                     l7994:
 13709                           
 13710                           ; BSR set to: 0
 13711                           ;doprnt.c: 805: cp = (char *)&c;
 13712  000280  0E95               	movlw	low sprintf@c
 13713  000282  6F8C               	movwf	sprintf@cp& (0+255),b
 13714                           
 13715                           ; BSR set to: 0
 13716                           ;doprnt.c: 806: len = 1;
 13717  000284  0E00               	movlw	0
 13718  000286  6F8E               	movwf	(sprintf@len+1)& (0+255),b
 13719  000288  0E01               	movlw	1
 13720  00028A  6F8D               	movwf	sprintf@len& (0+255),b
 13721                           
 13722                           ;doprnt.c: 807: goto dostring;
 13723  00028C  D79B               	goto	l7956
 13724  00028E                     l7998:
 13725                           
 13726                           ; BSR set to: 0
 13727                           ;doprnt.c: 818: flag |= 0xC0;
 13728  00028E  0EC0               	movlw	192
 13729  000290  1396               	iorwf	sprintf@flag& (0+255),f,b
 13730                           
 13731                           ;doprnt.c: 819: break;
 13732  000292  D01D               	goto	l8004
 13733  000294                     l8002:
 13734                           
 13735                           ; BSR set to: 0
 13736  000294  C077  FFF6         	movff	sprintf@f,tblptrl
 13737  000298  C078  FFF7         	movff	sprintf@f+1,tblptrh
 13738  00029C  4B77               	infsnz	sprintf@f& (0+255),f,b
 13739  00029E  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 13740  0002A0                     	if	0	;tblptru may be non-zero
 13741  0002A0                     	endif
 13742  0002A0                     	if	0	;tblptru may be non-zero
 13743  0002A0                     	endif
 13744  0002A0  0008               	tblrd		*
 13745  0002A2  CFF5 F095          	movff	tablat,sprintf@c
 13746  0002A6  5195               	movf	sprintf@c& (0+255),w,b
 13747                           
 13748                           ; Switch size 1, requested type "speed"
 13749                           ; Number of cases is 8, Range of values is 0 to 120
 13750                           ; switch strategies available:
 13751                           ; Name         Instructions Cycles
 13752                           ; simple_byte           25    13 (average)
 13753                           ;	Chosen strategy is simple_byte
 13754  0002A8  E101 D25D          	bz	l8218
 13755  0002AC  0A58               	xorlw	88	; case 88
 13756  0002AE  E087               	bz	l7954
 13757  0002B0  0A3B               	xorlw	59	; case 99
 13758  0002B2  E0DF               	bz	l7990
 13759  0002B4  0A07               	xorlw	7	; case 100
 13760  0002B6  E00B               	bz	l8004
 13761  0002B8  0A0D               	xorlw	13	; case 105
 13762  0002BA  E009               	bz	l8004
 13763  0002BC  0A06               	xorlw	6	; case 111
 13764  0002BE  E101 D77C          	bz	l7952
 13765  0002C2  0A1A               	xorlw	26	; case 117
 13766  0002C4  E0E4               	bz	l7998
 13767  0002C6  0A0D               	xorlw	13	; case 120
 13768  0002C8  E101 D77A          	bz	l1404
 13769  0002CC  D7D9               	goto	l7994
 13770  0002CE                     l8004:
 13771                           
 13772                           ; BSR set to: 0
 13773                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 13774  0002CE  C096  F081         	movff	sprintf@flag,??_sprintf
 13775  0002D2  0EC0               	movlw	192
 13776  0002D4  1781               	andwf	??_sprintf& (0+255),f,b
 13777  0002D6  E112               	bnz	l8016
 13778                           
 13779                           ; BSR set to: 0
 13780                           ;doprnt.c: 1253: {
 13781                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 13782  0002D8  518F               	movf	sprintf@ap& (0+255),w,b
 13783  0002DA  6ED9               	movwf	fsr2l,c
 13784  0002DC  6ADA               	clrf	fsr2h,c
 13785  0002DE  CFDE F090          	movff	postinc2,sprintf@val
 13786  0002E2  CFDD F091          	movff	postdec2,sprintf@val+1
 13787                           
 13788                           ; BSR set to: 0
 13789  0002E6  0E02               	movlw	2
 13790  0002E8  278F               	addwf	sprintf@ap& (0+255),f,b
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;doprnt.c: 1261: if((int)val < 0) {
 13794  0002EA  AF91               	btfss	(sprintf@val+1)& (0+255),7,b
 13795  0002EC  D010               	goto	l8020
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;doprnt.c: 1262: flag |= 0x03;
 13799  0002EE  0E03               	movlw	3
 13800  0002F0  1396               	iorwf	sprintf@flag& (0+255),f,b
 13801                           
 13802                           ; BSR set to: 0
 13803                           ;doprnt.c: 1263: val = -val;
 13804  0002F2  6D90               	negf	sprintf@val& (0+255),b
 13805  0002F4  1F91               	comf	(sprintf@val+1)& (0+255),f,b
 13806  0002F6  B0D8               	btfsc	status,0,c
 13807  0002F8  2B91               	incf	(sprintf@val+1)& (0+255),f,b
 13808  0002FA  D009               	goto	l8020
 13809  0002FC                     l8016:
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;doprnt.c: 1268: else
 13813                           ;doprnt.c: 1273: {
 13814                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 13815  0002FC  518F               	movf	sprintf@ap& (0+255),w,b
 13816  0002FE  6ED9               	movwf	fsr2l,c
 13817  000300  6ADA               	clrf	fsr2h,c
 13818  000302  CFDE F090          	movff	postinc2,sprintf@val
 13819  000306  CFDD F091          	movff	postdec2,sprintf@val+1
 13820                           
 13821                           ; BSR set to: 0
 13822  00030A  0E02               	movlw	2
 13823  00030C  278F               	addwf	sprintf@ap& (0+255),f,b
 13824  00030E                     l8020:
 13825                           
 13826                           ; BSR set to: 0
 13827                           ;doprnt.c: 1287: }
 13828                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 13829  00030E  5192               	movf	sprintf@prec& (0+255),w,b
 13830  000310  E147               	bnz	l8070
 13831                           
 13832                           ; BSR set to: 0
 13833  000312  5190               	movf	sprintf@val& (0+255),w,b
 13834  000314  1191               	iorwf	(sprintf@val+1)& (0+255),w,b
 13835  000316  E144               	bnz	l8070
 13836                           
 13837                           ; BSR set to: 0
 13838                           ;doprnt.c: 1291: prec++;
 13839  000318  2B92               	incf	sprintf@prec& (0+255),f,b
 13840  00031A  D042               	goto	l8070
 13841  00031C                     l8026:
 13842                           
 13843                           ; BSR set to: 0
 13844                           ;doprnt.c: 1302: case 0xC0:
 13845                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13846  00031C  0E01               	movlw	1
 13847  00031E  6F95               	movwf	sprintf@c& (0+255),b
 13848  000320                     l8028:
 13849                           
 13850                           ; BSR set to: 0
 13851  000320  0E05               	movlw	5
 13852  000322  1995               	xorwf	sprintf@c& (0+255),w,b
 13853  000324  E046               	bz	l8072
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;doprnt.c: 1306: if(val < dpowers[c])
 13857  000326  5195               	movf	sprintf@c& (0+255),w,b
 13858  000328  0D02               	mullw	2
 13859  00032A  0E7B               	movlw	low _dpowers
 13860  00032C  24F3               	addwf	prodl,w,c
 13861  00032E  6EF6               	movwf	tblptrl,c
 13862  000330  0EFD               	movlw	high _dpowers
 13863  000332  20F4               	addwfc	prodh,w,c
 13864  000334  6EF7               	movwf	tblptrh,c
 13865  000336                     	if	0	;There are less than 3 active tblptr bytes
 13866  000336                     	endif
 13867  000336  0009               	tblrd		*+
 13868  000338  50F5               	movf	tablat,w,c
 13869  00033A  5D90               	subwf	sprintf@val& (0+255),w,b
 13870  00033C  0009               	tblrd		*+
 13871  00033E  50F5               	movf	tablat,w,c
 13872  000340  5991               	subwfb	(sprintf@val+1)& (0+255),w,b
 13873  000342  E337               	bnc	l8072
 13874                           
 13875                           ; BSR set to: 0
 13876  000344  2B95               	incf	sprintf@c& (0+255),f,b
 13877  000346  D7EC               	goto	l8028
 13878  000348                     l8040:
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 13882  000348  0E01               	movlw	1
 13883  00034A  6F95               	movwf	sprintf@c& (0+255),b
 13884  00034C                     l8042:
 13885                           
 13886                           ; BSR set to: 0
 13887  00034C  0E04               	movlw	4
 13888  00034E  1995               	xorwf	sprintf@c& (0+255),w,b
 13889  000350  E030               	bz	l8072
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;doprnt.c: 1317: if(val < hexpowers[c])
 13893  000352  5195               	movf	sprintf@c& (0+255),w,b
 13894  000354  0D02               	mullw	2
 13895  000356  0E85               	movlw	low _hexpowers
 13896  000358  24F3               	addwf	prodl,w,c
 13897  00035A  6EF6               	movwf	tblptrl,c
 13898  00035C  0EFD               	movlw	high _hexpowers
 13899  00035E  20F4               	addwfc	prodh,w,c
 13900  000360  6EF7               	movwf	tblptrh,c
 13901  000362                     	if	0	;There are less than 3 active tblptr bytes
 13902  000362                     	endif
 13903  000362  0009               	tblrd		*+
 13904  000364  50F5               	movf	tablat,w,c
 13905  000366  5D90               	subwf	sprintf@val& (0+255),w,b
 13906  000368  0009               	tblrd		*+
 13907  00036A  50F5               	movf	tablat,w,c
 13908  00036C  5991               	subwfb	(sprintf@val+1)& (0+255),w,b
 13909  00036E  E321               	bnc	l8072
 13910                           
 13911                           ; BSR set to: 0
 13912  000370  2B95               	incf	sprintf@c& (0+255),f,b
 13913  000372  D7EC               	goto	l8042
 13914  000374                     l8054:
 13915                           
 13916                           ; BSR set to: 0
 13917                           ;doprnt.c: 1328: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
 13918  000374  0E01               	movlw	1
 13919  000376  6F95               	movwf	sprintf@c& (0+255),b
 13920  000378                     l8056:
 13921                           
 13922                           ; BSR set to: 0
 13923  000378  0E06               	movlw	6
 13924  00037A  1995               	xorwf	sprintf@c& (0+255),w,b
 13925  00037C  E01A               	bz	l8072
 13926                           
 13927                           ; BSR set to: 0
 13928                           ;doprnt.c: 1329: if(val < octpowers[c])
 13929  00037E  5195               	movf	sprintf@c& (0+255),w,b
 13930  000380  0D02               	mullw	2
 13931  000382  0E6F               	movlw	low _octpowers
 13932  000384  24F3               	addwf	prodl,w,c
 13933  000386  6EF6               	movwf	tblptrl,c
 13934  000388  0EFD               	movlw	high _octpowers
 13935  00038A  20F4               	addwfc	prodh,w,c
 13936  00038C  6EF7               	movwf	tblptrh,c
 13937  00038E                     	if	0	;There are less than 3 active tblptr bytes
 13938  00038E                     	endif
 13939  00038E  0009               	tblrd		*+
 13940  000390  50F5               	movf	tablat,w,c
 13941  000392  5D90               	subwf	sprintf@val& (0+255),w,b
 13942  000394  0009               	tblrd		*+
 13943  000396  50F5               	movf	tablat,w,c
 13944  000398  5991               	subwfb	(sprintf@val+1)& (0+255),w,b
 13945  00039A  E30B               	bnc	l8072
 13946                           
 13947                           ; BSR set to: 0
 13948  00039C  2B95               	incf	sprintf@c& (0+255),f,b
 13949  00039E  D7EC               	goto	l8056
 13950  0003A0                     l8070:
 13951                           
 13952                           ; BSR set to: 0
 13953  0003A0  5196               	movf	sprintf@flag& (0+255),w,b
 13954  0003A2  0BC0               	andlw	192
 13955                           
 13956                           ; Switch size 1, requested type "speed"
 13957                           ; Number of cases is 4, Range of values is 0 to 192
 13958                           ; switch strategies available:
 13959                           ; Name         Instructions Cycles
 13960                           ; simple_byte           13     7 (average)
 13961                           ;	Chosen strategy is simple_byte
 13962  0003A4  E0BB               	bz	l8026
 13963  0003A6  0A40               	xorlw	64	; case 64
 13964  0003A8  E0E5               	bz	l8054
 13965  0003AA  0AC0               	xorlw	192	; case 128
 13966  0003AC  E0CD               	bz	l8040
 13967  0003AE  0A40               	xorlw	64	; case 192
 13968  0003B0  E0B5               	bz	l8026
 13969  0003B2                     l8072:
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;doprnt.c: 1339: if(c < prec)
 13973  0003B2  5195               	movf	sprintf@c& (0+255),w,b
 13974  0003B4  0A80               	xorlw	128
 13975  0003B6  6F81               	movwf	??_sprintf& (0+255),b
 13976  0003B8  5192               	movf	sprintf@prec& (0+255),w,b
 13977  0003BA  0A80               	xorlw	128
 13978  0003BC  5D81               	subwf	??_sprintf& (0+255),w,b
 13979  0003BE  E203               	bc	l8076
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;doprnt.c: 1340: c = prec;
 13983  0003C0  C092  F095         	movff	sprintf@prec,sprintf@c
 13984  0003C4  D009               	goto	l8080
 13985  0003C6                     l8076:
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;doprnt.c: 1341: else if(prec < c)
 13989  0003C6  5192               	movf	sprintf@prec& (0+255),w,b
 13990  0003C8  0A80               	xorlw	128
 13991  0003CA  6F81               	movwf	??_sprintf& (0+255),b
 13992  0003CC  5195               	movf	sprintf@c& (0+255),w,b
 13993  0003CE  0A80               	xorlw	128
 13994  0003D0  5D81               	subwf	??_sprintf& (0+255),w,b
 13995  0003D2  E202               	bc	l8080
 13996                           
 13997                           ; BSR set to: 0
 13998                           ;doprnt.c: 1342: prec = c;
 13999  0003D4  C095  F092         	movff	sprintf@c,sprintf@prec
 14000  0003D8                     l8080:
 14001                           
 14002                           ; BSR set to: 0
 14003                           ;doprnt.c: 1345: if(width && flag & 0x03)
 14004  0003D8  5193               	movf	sprintf@width& (0+255),w,b
 14005  0003DA  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 14006  0003DC  E008               	bz	l8086
 14007                           
 14008                           ; BSR set to: 0
 14009  0003DE  C096  F081         	movff	sprintf@flag,??_sprintf
 14010  0003E2  0E03               	movlw	3
 14011  0003E4  1781               	andwf	??_sprintf& (0+255),f,b
 14012  0003E6  E003               	bz	l8086
 14013                           
 14014                           ; BSR set to: 0
 14015                           ;doprnt.c: 1346: width--;
 14016  0003E8  0793               	decf	sprintf@width& (0+255),f,b
 14017  0003EA  A0D8               	btfss	status,0,c
 14018  0003EC  0794               	decf	(sprintf@width+1)& (0+255),f,b
 14019  0003EE                     l8086:
 14020                           
 14021                           ; BSR set to: 0
 14022                           ;doprnt.c: 1348: if(flag & 0x4000) {
 14023  0003EE  AD97               	btfss	(sprintf@flag+1)& (0+255),6,b
 14024  0003F0  D013               	goto	l8092
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;doprnt.c: 1349: if(width > prec)
 14028  0003F2  0E80               	movlw	128
 14029  0003F4  BF92               	btfsc	sprintf@prec& (0+255),7,b
 14030  0003F6  0E7F               	movlw	127
 14031  0003F8  6F81               	movwf	??_sprintf& (0+255),b
 14032  0003FA  5193               	movf	sprintf@width& (0+255),w,b
 14033  0003FC  5D92               	subwf	sprintf@prec& (0+255),w,b
 14034  0003FE  5194               	movf	(sprintf@width+1)& (0+255),w,b
 14035  000400  0A80               	xorlw	128
 14036  000402  5981               	subwfb	??_sprintf& (0+255),w,b
 14037  000404  E207               	bc	l1447
 14038                           
 14039                           ; BSR set to: 0
 14040                           ;doprnt.c: 1350: width -= prec;
 14041  000406  5192               	movf	sprintf@prec& (0+255),w,b
 14042  000408  5F93               	subwf	sprintf@width& (0+255),f,b
 14043  00040A  0E00               	movlw	0
 14044  00040C  BF92               	btfsc	sprintf@prec& (0+255),7,b
 14045  00040E  0EFF               	movlw	255
 14046  000410  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
 14047  000412  D002               	goto	l8092
 14048  000414                     l1447:
 14049                           
 14050                           ; BSR set to: 0
 14051                           ;doprnt.c: 1351: else
 14052                           ;doprnt.c: 1352: width = 0;
 14053  000414  6B93               	clrf	sprintf@width& (0+255),b
 14054  000416  6B94               	clrf	(sprintf@width+1)& (0+255),b
 14055  000418                     l8092:
 14056                           
 14057                           ; BSR set to: 0
 14058                           ;doprnt.c: 1353: }
 14059                           ;doprnt.c: 1357: if((flag & (
 14060                           ;doprnt.c: 1359: 0x04|
 14061                           ;doprnt.c: 1361: (0xC0)|0x800)) == (0x40|0x800)) {
 14062  000418  0EC4               	movlw	196
 14063  00041A  6F81               	movwf	??_sprintf& (0+255),b
 14064  00041C  0E08               	movlw	8
 14065  00041E  6F82               	movwf	(??_sprintf+1)& (0+255),b
 14066  000420  C096  F083         	movff	sprintf@flag,??_sprintf+2
 14067  000424  C097  F084         	movff	sprintf@flag+1,??_sprintf+3
 14068  000428  5181               	movf	??_sprintf& (0+255),w,b
 14069  00042A  1783               	andwf	(??_sprintf+2)& (0+255),f,b
 14070  00042C  5182               	movf	(??_sprintf+1)& (0+255),w,b
 14071  00042E  1784               	andwf	(??_sprintf+3)& (0+255),f,b
 14072  000430  0E40               	movlw	64
 14073  000432  1983               	xorwf	(??_sprintf+2)& (0+255),w,b
 14074  000434  E10A               	bnz	l8098
 14075  000436  0E08               	movlw	8
 14076  000438  1984               	xorwf	(??_sprintf+3)& (0+255),w,b
 14077  00043A  E107               	bnz	l8098
 14078                           
 14079                           ; BSR set to: 0
 14080                           ;doprnt.c: 1362: if(width)
 14081  00043C  5193               	movf	sprintf@width& (0+255),w,b
 14082  00043E  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 14083  000440  E024               	bz	l8104
 14084                           
 14085                           ; BSR set to: 0
 14086                           ;doprnt.c: 1363: width--;
 14087  000442  0793               	decf	sprintf@width& (0+255),f,b
 14088  000444  A0D8               	btfss	status,0,c
 14089  000446  0794               	decf	(sprintf@width+1)& (0+255),f,b
 14090  000448  D020               	goto	l8104
 14091  00044A                     l8098:
 14092                           
 14093                           ; BSR set to: 0
 14094                           ;doprnt.c: 1368: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 14095  00044A  0EC0               	movlw	192
 14096  00044C  6F81               	movwf	??_sprintf& (0+255),b
 14097  00044E  0E08               	movlw	8
 14098  000450  6F82               	movwf	(??_sprintf+1)& (0+255),b
 14099  000452  C096  F083         	movff	sprintf@flag,??_sprintf+2
 14100  000456  C097  F084         	movff	sprintf@flag+1,??_sprintf+3
 14101  00045A  5181               	movf	??_sprintf& (0+255),w,b
 14102  00045C  1783               	andwf	(??_sprintf+2)& (0+255),f,b
 14103  00045E  5182               	movf	(??_sprintf+1)& (0+255),w,b
 14104  000460  1784               	andwf	(??_sprintf+3)& (0+255),f,b
 14105  000462  0E80               	movlw	128
 14106  000464  1983               	xorwf	(??_sprintf+2)& (0+255),w,b
 14107  000466  E111               	bnz	l8104
 14108  000468  0E08               	movlw	8
 14109  00046A  1984               	xorwf	(??_sprintf+3)& (0+255),w,b
 14110  00046C  E10E               	bnz	l8104
 14111                           
 14112                           ; BSR set to: 0
 14113                           ;doprnt.c: 1372: if(width > 2)
 14114  00046E  BF94               	btfsc	(sprintf@width+1)& (0+255),7,b
 14115  000470  D00A               	goto	l1453
 14116  000472  5194               	movf	(sprintf@width+1)& (0+255),w,b
 14117  000474  E103               	bnz	u7580
 14118  000476  0E03               	movlw	3
 14119  000478  5D93               	subwf	sprintf@width& (0+255),w,b
 14120  00047A  E305               	bnc	l1453
 14121  00047C                     u7580:
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;doprnt.c: 1373: width -= 2;
 14125  00047C  0EFE               	movlw	254
 14126  00047E  2793               	addwf	sprintf@width& (0+255),f,b
 14127  000480  0EFF               	movlw	255
 14128  000482  2394               	addwfc	(sprintf@width+1)& (0+255),f,b
 14129  000484  D002               	goto	l8104
 14130  000486                     l1453:
 14131                           
 14132                           ; BSR set to: 0
 14133                           ;doprnt.c: 1374: else
 14134                           ;doprnt.c: 1375: width = 0;
 14135  000486  6B93               	clrf	sprintf@width& (0+255),b
 14136  000488  6B94               	clrf	(sprintf@width+1)& (0+255),b
 14137  00048A                     l8104:
 14138                           
 14139                           ; BSR set to: 0
 14140                           ;doprnt.c: 1376: }
 14141                           ;doprnt.c: 1381: if(width > c)
 14142  00048A  0E80               	movlw	128
 14143  00048C  BF95               	btfsc	sprintf@c& (0+255),7,b
 14144  00048E  0E7F               	movlw	127
 14145  000490  6F81               	movwf	??_sprintf& (0+255),b
 14146  000492  5193               	movf	sprintf@width& (0+255),w,b
 14147  000494  5D95               	subwf	sprintf@c& (0+255),w,b
 14148  000496  5194               	movf	(sprintf@width+1)& (0+255),w,b
 14149  000498  0A80               	xorlw	128
 14150  00049A  5981               	subwfb	??_sprintf& (0+255),w,b
 14151  00049C  E207               	bc	l1455
 14152                           
 14153                           ; BSR set to: 0
 14154                           ;doprnt.c: 1382: width -= c;
 14155  00049E  5195               	movf	sprintf@c& (0+255),w,b
 14156  0004A0  5F93               	subwf	sprintf@width& (0+255),f,b
 14157  0004A2  0E00               	movlw	0
 14158  0004A4  BF95               	btfsc	sprintf@c& (0+255),7,b
 14159  0004A6  0EFF               	movlw	255
 14160  0004A8  5B94               	subwfb	(sprintf@width+1)& (0+255),f,b
 14161  0004AA  D002               	goto	l1456
 14162  0004AC                     l1455:
 14163                           
 14164                           ; BSR set to: 0
 14165                           ;doprnt.c: 1383: else
 14166                           ;doprnt.c: 1384: width = 0;
 14167  0004AC  6B93               	clrf	sprintf@width& (0+255),b
 14168  0004AE  6B94               	clrf	(sprintf@width+1)& (0+255),b
 14169  0004B0                     l1456:
 14170                           
 14171                           ; BSR set to: 0
 14172                           ;doprnt.c: 1387: if(flag & 0x04) {
 14173  0004B0  A596               	btfss	sprintf@flag& (0+255),2,b
 14174  0004B2  D04F               	goto	l8142
 14175                           
 14176                           ; BSR set to: 0
 14177                           ;doprnt.c: 1392: if(flag & 0x03)
 14178  0004B4  C096  F081         	movff	sprintf@flag,??_sprintf
 14179  0004B8  0E03               	movlw	3
 14180  0004BA  1781               	andwf	??_sprintf& (0+255),f,b
 14181  0004BC  E009               	bz	l1458
 14182                           
 14183                           ; BSR set to: 0
 14184                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 14185  0004BE  C075  FFD9         	movff	sprintf@sp,fsr2l
 14186  0004C2  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14187  0004C6  0E2D               	movlw	45
 14188  0004C8  6EDF               	movwf	indf2,c
 14189  0004CA                     l8112:
 14190                           
 14191                           ; BSR set to: 0
 14192  0004CA  4B75               	infsnz	sprintf@sp& (0+255),f,b
 14193  0004CC  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 14194  0004CE  D031               	goto	l8134
 14195  0004D0                     l1458:
 14196                           
 14197                           ; BSR set to: 0
 14198                           ;doprnt.c: 1396: else
 14199                           ;doprnt.c: 1399: if(flag & 0x01)
 14200  0004D0  A196               	btfss	sprintf@flag& (0+255),0,b
 14201  0004D2  D006               	goto	l8118
 14202                           
 14203                           ; BSR set to: 0
 14204                           ;doprnt.c: 1400: ((*sp++ = (' ')));
 14205  0004D4  C075  FFD9         	movff	sprintf@sp,fsr2l
 14206  0004D8  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14207  0004DC  0E20               	movlw	32
 14208  0004DE  D7F4               	goto	L2
 14209  0004E0                     l8118:
 14210                           
 14211                           ; BSR set to: 0
 14212                           ;doprnt.c: 1403: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 14213  0004E0  0EC0               	movlw	192
 14214  0004E2  6F81               	movwf	??_sprintf& (0+255),b
 14215  0004E4  0E08               	movlw	8
 14216  0004E6  6F82               	movwf	(??_sprintf+1)& (0+255),b
 14217  0004E8  C096  F083         	movff	sprintf@flag,??_sprintf+2
 14218  0004EC  C097  F084         	movff	sprintf@flag+1,??_sprintf+3
 14219  0004F0  5181               	movf	??_sprintf& (0+255),w,b
 14220  0004F2  1783               	andwf	(??_sprintf+2)& (0+255),f,b
 14221  0004F4  5182               	movf	(??_sprintf+1)& (0+255),w,b
 14222  0004F6  1784               	andwf	(??_sprintf+3)& (0+255),f,b
 14223  0004F8  0E80               	movlw	128
 14224  0004FA  1983               	xorwf	(??_sprintf+2)& (0+255),w,b
 14225  0004FC  E11A               	bnz	l8134
 14226  0004FE  0E08               	movlw	8
 14227  000500  1984               	xorwf	(??_sprintf+3)& (0+255),w,b
 14228  000502  E117               	bnz	l8134
 14229                           
 14230                           ; BSR set to: 0
 14231                           ;doprnt.c: 1404: ((*sp++ = ('0')));
 14232  000504  C075  FFD9         	movff	sprintf@sp,fsr2l
 14233  000508  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14234  00050C  0E30               	movlw	48
 14235  00050E  6EDF               	movwf	indf2,c
 14236                           
 14237                           ; BSR set to: 0
 14238  000510  4B75               	infsnz	sprintf@sp& (0+255),f,b
 14239  000512  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 14240                           
 14241                           ; BSR set to: 0
 14242                           ;doprnt.c: 1406: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 14243  000514  BB96               	btfsc	sprintf@flag& (0+255),5,b
 14244  000516  D003               	goto	l8128
 14245                           
 14246                           ; BSR set to: 0
 14247  000518  6B87               	clrf	(_sprintf$3808+1)& (0+255),b
 14248  00051A  0E78               	movlw	120
 14249  00051C  D002               	goto	L3
 14250  00051E                     l8128:
 14251                           
 14252                           ; BSR set to: 0
 14253  00051E  6B87               	clrf	(_sprintf$3808+1)& (0+255),b
 14254  000520  0E58               	movlw	88
 14255  000522                     L3:
 14256  000522  6F86               	movwf	_sprintf$3808& (0+255),b
 14257                           
 14258                           ; BSR set to: 0
 14259  000524  C075  FFD9         	movff	sprintf@sp,fsr2l
 14260  000528  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14261  00052C  C086  FFDF         	movff	_sprintf$3808,indf2
 14262  000530  D7CC               	goto	l8112
 14263  000532                     l8134:
 14264                           
 14265                           ; BSR set to: 0
 14266                           ;doprnt.c: 1412: }
 14267                           ;doprnt.c: 1415: if(width)
 14268  000532  5193               	movf	sprintf@width& (0+255),w,b
 14269  000534  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 14270  000536  E101 D0F2          	bz	l8206
 14271                           
 14272                           ; BSR set to: 0
 14273                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 14274  00053A  C075  FFD9         	movff	sprintf@sp,fsr2l
 14275  00053E  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14276  000542  0E30               	movlw	48
 14277  000544  6EDF               	movwf	indf2,c
 14278                           
 14279                           ; BSR set to: 0
 14280  000546  4B75               	infsnz	sprintf@sp& (0+255),f,b
 14281  000548  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 14282                           
 14283                           ; BSR set to: 0
 14284                           ;doprnt.c: 1418: while(--width);
 14285  00054A  0793               	decf	sprintf@width& (0+255),f,b
 14286  00054C  A0D8               	btfss	status,0,c
 14287  00054E  0794               	decf	(sprintf@width+1)& (0+255),f,b
 14288  000550  D7F0               	goto	l8134
 14289  000552                     l8142:
 14290                           
 14291                           ; BSR set to: 0
 14292                           ;doprnt.c: 1422: {
 14293                           ;doprnt.c: 1424: if(width
 14294                           ;doprnt.c: 1426: && !(flag & 0x08)
 14295                           ;doprnt.c: 1428: )
 14296  000552  5193               	movf	sprintf@width& (0+255),w,b
 14297  000554  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 14298  000556  E010               	bz	l8152
 14299                           
 14300                           ; BSR set to: 0
 14301  000558  B796               	btfsc	sprintf@flag& (0+255),3,b
 14302  00055A  D00E               	goto	l8152
 14303  00055C                     l8146:
 14304                           
 14305                           ; BSR set to: 0
 14306                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 14307  00055C  C075  FFD9         	movff	sprintf@sp,fsr2l
 14308  000560  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14309  000564  0E20               	movlw	32
 14310  000566  6EDF               	movwf	indf2,c
 14311                           
 14312                           ; BSR set to: 0
 14313  000568  4B75               	infsnz	sprintf@sp& (0+255),f,b
 14314  00056A  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 14315                           
 14316                           ; BSR set to: 0
 14317                           ;doprnt.c: 1431: while(--width);
 14318  00056C  0793               	decf	sprintf@width& (0+255),f,b
 14319  00056E  A0D8               	btfss	status,0,c
 14320  000570  0794               	decf	(sprintf@width+1)& (0+255),f,b
 14321  000572  5193               	movf	sprintf@width& (0+255),w,b
 14322  000574  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 14323  000576  E1F2               	bnz	l8146
 14324  000578                     l8152:
 14325                           
 14326                           ; BSR set to: 0
 14327                           ;doprnt.c: 1438: if(flag & 0x03)
 14328  000578  C096  F081         	movff	sprintf@flag,??_sprintf
 14329  00057C  0E03               	movlw	3
 14330  00057E  1781               	andwf	??_sprintf& (0+255),f,b
 14331  000580  E009               	bz	l1474
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 14335  000582  C075  FFD9         	movff	sprintf@sp,fsr2l
 14336  000586  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14337  00058A  0E2D               	movlw	45
 14338  00058C  6EDF               	movwf	indf2,c
 14339                           
 14340                           ; BSR set to: 0
 14341  00058E  4B75               	infsnz	sprintf@sp& (0+255),f,b
 14342  000590  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 14343  000592  D008               	goto	l8162
 14344  000594                     l1474:
 14345                           
 14346                           ; BSR set to: 0
 14347                           ;doprnt.c: 1443: else if(flag & 0x01)
 14348  000594  A196               	btfss	sprintf@flag& (0+255),0,b
 14349  000596  D006               	goto	l8162
 14350                           
 14351                           ; BSR set to: 0
 14352                           ;doprnt.c: 1444: ((*sp++ = (' ')));
 14353  000598  C075  FFD9         	movff	sprintf@sp,fsr2l
 14354  00059C  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14355  0005A0  0E20               	movlw	32
 14356  0005A2  D7F4               	goto	L4
 14357  0005A4                     l8162:
 14358                           
 14359                           ; BSR set to: 0
 14360                           ;doprnt.c: 1448: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
 14361  0005A4  0EC0               	movlw	192
 14362  0005A6  6F81               	movwf	??_sprintf& (0+255),b
 14363  0005A8  0E08               	movlw	8
 14364  0005AA  6F82               	movwf	(??_sprintf+1)& (0+255),b
 14365  0005AC  C096  F083         	movff	sprintf@flag,??_sprintf+2
 14366  0005B0  C097  F084         	movff	sprintf@flag+1,??_sprintf+3
 14367  0005B4  5181               	movf	??_sprintf& (0+255),w,b
 14368  0005B6  1783               	andwf	(??_sprintf+2)& (0+255),f,b
 14369  0005B8  5182               	movf	(??_sprintf+1)& (0+255),w,b
 14370  0005BA  1784               	andwf	(??_sprintf+3)& (0+255),f,b
 14371  0005BC  0E40               	movlw	64
 14372  0005BE  1983               	xorwf	(??_sprintf+2)& (0+255),w,b
 14373  0005C0  E10C               	bnz	l8168
 14374  0005C2  0E08               	movlw	8
 14375  0005C4  1984               	xorwf	(??_sprintf+3)& (0+255),w,b
 14376  0005C6  E109               	bnz	l8168
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;doprnt.c: 1449: ((*sp++ = ('0')));
 14380  0005C8  C075  FFD9         	movff	sprintf@sp,fsr2l
 14381  0005CC  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14382  0005D0  0E30               	movlw	48
 14383  0005D2  6EDF               	movwf	indf2,c
 14384  0005D4                     l8166:
 14385                           
 14386                           ; BSR set to: 0
 14387  0005D4  4B75               	infsnz	sprintf@sp& (0+255),f,b
 14388  0005D6  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 14389  0005D8  D0A2               	goto	l8206
 14390  0005DA                     l8168:
 14391                           
 14392                           ; BSR set to: 0
 14393                           ;doprnt.c: 1450: else
 14394                           ;doprnt.c: 1454: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
 14395  0005DA  0EC0               	movlw	192
 14396  0005DC  6F81               	movwf	??_sprintf& (0+255),b
 14397  0005DE  0E08               	movlw	8
 14398  0005E0  6F82               	movwf	(??_sprintf+1)& (0+255),b
 14399  0005E2  C096  F083         	movff	sprintf@flag,??_sprintf+2
 14400  0005E6  C097  F084         	movff	sprintf@flag+1,??_sprintf+3
 14401  0005EA  5181               	movf	??_sprintf& (0+255),w,b
 14402  0005EC  1783               	andwf	(??_sprintf+2)& (0+255),f,b
 14403  0005EE  5182               	movf	(??_sprintf+1)& (0+255),w,b
 14404  0005F0  1784               	andwf	(??_sprintf+3)& (0+255),f,b
 14405  0005F2  0E80               	movlw	128
 14406  0005F4  1983               	xorwf	(??_sprintf+2)& (0+255),w,b
 14407  0005F6  E11B               	bnz	l1470
 14408  0005F8  0E08               	movlw	8
 14409  0005FA  1984               	xorwf	(??_sprintf+3)& (0+255),w,b
 14410  0005FC  E001 D08F          	bnz	l8206
 14411                           
 14412                           ; BSR set to: 0
 14413                           ;doprnt.c: 1458: ((*sp++ = ('0')));
 14414  000600  C075  FFD9         	movff	sprintf@sp,fsr2l
 14415  000604  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14416  000608  0E30               	movlw	48
 14417  00060A  6EDF               	movwf	indf2,c
 14418                           
 14419                           ; BSR set to: 0
 14420  00060C  4B75               	infsnz	sprintf@sp& (0+255),f,b
 14421  00060E  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 14422                           
 14423                           ; BSR set to: 0
 14424                           ;doprnt.c: 1460: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
 14425  000610  BB96               	btfsc	sprintf@flag& (0+255),5,b
 14426  000612  D003               	goto	l8178
 14427                           
 14428                           ; BSR set to: 0
 14429  000614  6B89               	clrf	(_sprintf$3809+1)& (0+255),b
 14430  000616  0E78               	movlw	120
 14431  000618  D002               	goto	L5
 14432  00061A                     l8178:
 14433                           
 14434                           ; BSR set to: 0
 14435  00061A  6B89               	clrf	(_sprintf$3809+1)& (0+255),b
 14436  00061C  0E58               	movlw	88
 14437  00061E                     L5:
 14438  00061E  6F88               	movwf	_sprintf$3809& (0+255),b
 14439                           
 14440                           ; BSR set to: 0
 14441  000620  C075  FFD9         	movff	sprintf@sp,fsr2l
 14442  000624  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14443  000628  C088  FFDF         	movff	_sprintf$3809,indf2
 14444  00062C  D7D3               	goto	l8166
 14445  00062E                     l1470:
 14446                           
 14447                           ; BSR set to: 0
 14448                           ;doprnt.c: 1466: }
 14449                           ;doprnt.c: 1469: }
 14450                           ;doprnt.c: 1474: while(prec--) {
 14451  00062E  D077               	goto	l8206
 14452  000630                     l8184:
 14453                           
 14454                           ; BSR set to: 0
 14455                           ;doprnt.c: 1486: case 0xC0:
 14456                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 14457  000630  5192               	movf	sprintf@prec& (0+255),w,b
 14458  000632  0D02               	mullw	2
 14459  000634  0E7B               	movlw	low _dpowers
 14460  000636  24F3               	addwf	prodl,w,c
 14461  000638  6EF6               	movwf	tblptrl,c
 14462  00063A  0EFD               	movlw	high _dpowers
 14463  00063C  20F4               	addwfc	prodh,w,c
 14464  00063E  6EF7               	movwf	tblptrh,c
 14465  000640                     	if	0	;There are less than 3 active tblptr bytes
 14466  000640                     	endif
 14467  000640  0009               	tblrd		*+
 14468  000642  CFF5 F06B          	movff	tablat,___lwdiv@divisor
 14469  000646  000A               	tblrd		*-
 14470  000648  CFF5 F06C          	movff	tablat,___lwdiv@divisor+1
 14471  00064C  C090  F069         	movff	sprintf@val,___lwdiv@dividend
 14472  000650  C091  F06A         	movff	sprintf@val+1,___lwdiv@dividend+1
 14473  000654  ECCB  F016         	call	___lwdiv	;wreg free
 14474  000658  C069  F070         	movff	?___lwdiv,___lwmod@dividend
 14475  00065C  C06A  F071         	movff	?___lwdiv+1,___lwmod@dividend+1
 14476  000660  6B73               	clrf	(___lwmod@divisor+1)& (0+255),b
 14477  000662  0E0A               	movlw	10
 14478  000664  6F72               	movwf	___lwmod@divisor& (0+255),b
 14479  000666  ECB3  F017         	call	___lwmod	;wreg free
 14480  00066A  5170               	movf	?___lwmod& (0+255),w,b
 14481  00066C  D045               	goto	L6
 14482  00066E                     l8186:
 14483                           
 14484                           ; BSR set to: 0
 14485                           ;doprnt.c: 1499: {
 14486                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 14487  00066E  C090  F069         	movff	sprintf@val,___lwdiv@dividend
 14488  000672  C091  F06A         	movff	sprintf@val+1,___lwdiv@dividend+1
 14489  000676  5192               	movf	sprintf@prec& (0+255),w,b
 14490  000678  0D02               	mullw	2
 14491  00067A  0E85               	movlw	low _hexpowers
 14492  00067C  24F3               	addwf	prodl,w,c
 14493  00067E  6EF6               	movwf	tblptrl,c
 14494  000680  0EFD               	movlw	high _hexpowers
 14495  000682  20F4               	addwfc	prodh,w,c
 14496  000684  6EF7               	movwf	tblptrh,c
 14497  000686                     	if	0	;There are less than 3 active tblptr bytes
 14498  000686                     	endif
 14499  000686  0009               	tblrd		*+
 14500  000688  CFF5 F06B          	movff	tablat,___lwdiv@divisor
 14501  00068C  000A               	tblrd		*-
 14502  00068E  CFF5 F06C          	movff	tablat,___lwdiv@divisor+1
 14503  000692  ECCB  F016         	call	___lwdiv	;wreg free
 14504  000696  5169               	movf	?___lwdiv& (0+255),w,b
 14505  000698  0B0F               	andlw	15
 14506  00069A  6F85               	movwf	sprintf@idx& (0+255),b
 14507                           
 14508                           ; BSR set to: 0
 14509                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
 14510  00069C  BB96               	btfsc	sprintf@flag& (0+255),5,b
 14511  00069E  D004               	goto	l8192
 14512                           
 14513                           ; BSR set to: 0
 14514  0006A0  0E49               	movlw	low STR_39
 14515  0006A2  6F8A               	movwf	_sprintf$3815& (0+255),b
 14516  0006A4  0EFF               	movlw	high STR_39
 14517  0006A6  D003               	goto	L7
 14518  0006A8                     l8192:
 14519                           
 14520                           ; BSR set to: 0
 14521  0006A8  0E38               	movlw	low STR_38
 14522  0006AA  6F8A               	movwf	_sprintf$3815& (0+255),b
 14523  0006AC  0EFF               	movlw	high STR_38
 14524  0006AE                     L7:
 14525  0006AE  6F8B               	movwf	(_sprintf$3815+1)& (0+255),b
 14526                           
 14527                           ; BSR set to: 0
 14528  0006B0  5185               	movf	sprintf@idx& (0+255),w,b
 14529  0006B2  258A               	addwf	_sprintf$3815& (0+255),w,b
 14530  0006B4  6F81               	movwf	??_sprintf& (0+255),b
 14531  0006B6  0E00               	movlw	0
 14532  0006B8  218B               	addwfc	(_sprintf$3815+1)& (0+255),w,b
 14533  0006BA  6F82               	movwf	(??_sprintf+1)& (0+255),b
 14534  0006BC  C081  FFF6         	movff	??_sprintf,tblptrl
 14535  0006C0  C082  FFF7         	movff	??_sprintf+1,tblptrh
 14536  0006C4                     	if	0	;tblptru may be non-zero
 14537  0006C4                     	endif
 14538  0006C4                     	if	0	;tblptru may be non-zero
 14539  0006C4                     	endif
 14540  0006C4  0008               	tblrd		*
 14541  0006C6  CFF5 F095          	movff	tablat,sprintf@c
 14542                           
 14543                           ;doprnt.c: 1508: }
 14544                           ;doprnt.c: 1510: break;
 14545  0006CA  D022               	goto	l8202
 14546  0006CC                     l8196:
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;doprnt.c: 1518: c = ((val / octpowers[prec]) & 07) + '0';
 14550  0006CC  C090  F069         	movff	sprintf@val,___lwdiv@dividend
 14551  0006D0  C091  F06A         	movff	sprintf@val+1,___lwdiv@dividend+1
 14552  0006D4  5192               	movf	sprintf@prec& (0+255),w,b
 14553  0006D6  0D02               	mullw	2
 14554  0006D8  0E6F               	movlw	low _octpowers
 14555  0006DA  24F3               	addwf	prodl,w,c
 14556  0006DC  6EF6               	movwf	tblptrl,c
 14557  0006DE  0EFD               	movlw	high _octpowers
 14558  0006E0  20F4               	addwfc	prodh,w,c
 14559  0006E2  6EF7               	movwf	tblptrh,c
 14560  0006E4                     	if	0	;There are less than 3 active tblptr bytes
 14561  0006E4                     	endif
 14562  0006E4  0009               	tblrd		*+
 14563  0006E6  CFF5 F06B          	movff	tablat,___lwdiv@divisor
 14564  0006EA  000A               	tblrd		*-
 14565  0006EC  CFF5 F06C          	movff	tablat,___lwdiv@divisor+1
 14566  0006F0  ECCB  F016         	call	___lwdiv	;wreg free
 14567  0006F4  5169               	movf	?___lwdiv& (0+255),w,b
 14568  0006F6  0B07               	andlw	7
 14569  0006F8                     L6:
 14570  0006F8  0F30               	addlw	48
 14571  0006FA  6F95               	movwf	sprintf@c& (0+255),b
 14572                           
 14573                           ;doprnt.c: 1520: break;
 14574  0006FC  D009               	goto	l8202
 14575  0006FE                     l8200:
 14576                           
 14577                           ; BSR set to: 0
 14578  0006FE  5196               	movf	sprintf@flag& (0+255),w,b
 14579  000700  0BC0               	andlw	192
 14580                           
 14581                           ; Switch size 1, requested type "speed"
 14582                           ; Number of cases is 4, Range of values is 0 to 192
 14583                           ; switch strategies available:
 14584                           ; Name         Instructions Cycles
 14585                           ; simple_byte           13     7 (average)
 14586                           ;	Chosen strategy is simple_byte
 14587  000702  E096               	bz	l8184
 14588  000704  0A40               	xorlw	64	; case 64
 14589  000706  E0E2               	bz	l8196
 14590  000708  0AC0               	xorlw	192	; case 128
 14591  00070A  E0B1               	bz	l8186
 14592  00070C  0A40               	xorlw	64	; case 192
 14593  00070E  E090               	bz	l8184
 14594  000710                     l8202:
 14595                           
 14596                           ; BSR set to: 0
 14597                           ;doprnt.c: 1524: ((*sp++ = (c)));
 14598  000710  C075  FFD9         	movff	sprintf@sp,fsr2l
 14599  000714  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14600  000718  C095  FFDF         	movff	sprintf@c,indf2
 14601  00071C  D75B               	goto	l8166
 14602  00071E                     l8206:
 14603                           
 14604                           ; BSR set to: 0
 14605  00071E  0792               	decf	sprintf@prec& (0+255),f,b
 14606  000720  2992               	incf	sprintf@prec& (0+255),w,b
 14607  000722  E1ED               	bnz	l8200
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;doprnt.c: 1525: }
 14611                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 14612  000724  B796               	btfsc	sprintf@flag& (0+255),3,b
 14613                           
 14614                           ; BSR set to: 0
 14615  000726  BF94               	btfsc	(sprintf@width+1)& (0+255),7,b
 14616  000728  D012               	goto	l8216
 14617  00072A  5194               	movf	(sprintf@width+1)& (0+255),w,b
 14618  00072C  E102               	bnz	u7780
 14619  00072E  0593               	decf	sprintf@width& (0+255),w,b
 14620  000730  E30E               	bnc	l8216
 14621  000732                     u7780:
 14622  000732                     l8210:
 14623                           
 14624                           ; BSR set to: 0
 14625                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 14626  000732  C075  FFD9         	movff	sprintf@sp,fsr2l
 14627  000736  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14628  00073A  0E20               	movlw	32
 14629  00073C  6EDF               	movwf	indf2,c
 14630                           
 14631                           ; BSR set to: 0
 14632  00073E  4B75               	infsnz	sprintf@sp& (0+255),f,b
 14633  000740  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 14634                           
 14635                           ; BSR set to: 0
 14636                           ;doprnt.c: 1531: while(--width);
 14637  000742  0793               	decf	sprintf@width& (0+255),f,b
 14638  000744  A0D8               	btfss	status,0,c
 14639  000746  0794               	decf	(sprintf@width+1)& (0+255),f,b
 14640  000748  5193               	movf	sprintf@width& (0+255),w,b
 14641  00074A  1194               	iorwf	(sprintf@width+1)& (0+255),w,b
 14642  00074C  E1F2               	bnz	l8210
 14643  00074E                     l8216:
 14644                           
 14645                           ; BSR set to: 0
 14646  00074E  C077  FFF6         	movff	sprintf@f,tblptrl
 14647  000752  C078  FFF7         	movff	sprintf@f+1,tblptrh
 14648  000756  4B77               	infsnz	sprintf@f& (0+255),f,b
 14649  000758  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 14650  00075A                     	if	0	;tblptru may be non-zero
 14651  00075A                     	endif
 14652  00075A                     	if	0	;tblptru may be non-zero
 14653  00075A                     	endif
 14654  00075A  0008               	tblrd		*
 14655  00075C  CFF5 F095          	movff	tablat,sprintf@c
 14656  000760  5195               	movf	sprintf@c& (0+255),w,b
 14657  000762  E001 D47C          	bnz	l7894
 14658  000766                     l8218:
 14659                           
 14660                           ; BSR set to: 0
 14661                           ;doprnt.c: 1538: *sp = 0;
 14662  000766  C075  FFD9         	movff	sprintf@sp,fsr2l
 14663  00076A  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 14664  00076E  6ADF               	clrf	indf2,c
 14665                           
 14666                           ; BSR set to: 0
 14667  000770  0C00               	retlw	0	;funcret
 14668  000772                     __end_of_sprintf:
 14669                           	opt stack 0
 14670                           tblptru	equ	0xFF8
 14671                           tblptrh	equ	0xFF7
 14672                           tblptrl	equ	0xFF6
 14673                           tablat	equ	0xFF5
 14674                           prodh	equ	0xFF4
 14675                           prodl	equ	0xFF3
 14676                           intcon	equ	0xFF2
 14677                           intcon2	equ	0xFF1
 14678                           intcon3	equ	0xFF0
 14679                           postinc0	equ	0xFEE
 14680                           wreg	equ	0xFE8
 14681                           indf1	equ	0xFE7
 14682                           postinc1	equ	0xFE6
 14683                           postdec1	equ	0xFE5
 14684                           fsr1h	equ	0xFE2
 14685                           fsr1l	equ	0xFE1
 14686                           indf2	equ	0xFDF
 14687                           postinc2	equ	0xFDE
 14688                           postdec2	equ	0xFDD
 14689                           fsr2h	equ	0xFDA
 14690                           fsr2l	equ	0xFD9
 14691                           status	equ	0xFD8
 14692                           
 14693 ;; *************** function _isdigit *****************
 14694 ;; Defined at:
 14695 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 14696 ;; Parameters:    Size  Location     Type
 14697 ;;  c               1    wreg     unsigned char 
 14698 ;; Auto vars:     Size  Location     Type
 14699 ;;  c               1   11[BANK0 ] unsigned char 
 14700 ;; Return value:  Size  Location     Type
 14701 ;;		None               void
 14702 ;; Registers used:
 14703 ;;		wreg, status,2, status,0
 14704 ;; Tracked objects:
 14705 ;;		On entry : F/0
 14706 ;;		On exit  : F/0
 14707 ;;		Unchanged: 0/0
 14708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14710 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14711 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14712 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14713 ;;Total ram usage:        3 bytes
 14714 ;; Hardware stack levels used:    1
 14715 ;; Hardware stack levels required when called:    8
 14716 ;; This function calls:
 14717 ;;		Nothing
 14718 ;; This function is called by:
 14719 ;;		_sprintf
 14720 ;; This function uses a non-reentrant model
 14721 ;;
 14722                           
 14723                           	psect	text65
 14724  0032B2                     __ptext65:
 14725                           	opt stack 0
 14726  0032B2                     _isdigit:
 14727                           	opt stack 19
 14728                           
 14729                           ; BSR set to: 0
 14730                           ;incstack = 0
 14731                           ;isdigit@c stored from wreg
 14732  0032B2  6F6B               	movwf	isdigit@c& (0+255),b
 14733  0032B4  0100               	movlb	0	; () banked
 14734  0032B6  6B6A               	clrf	_isdigit$4039& (0+255),b
 14735                           
 14736                           ; BSR set to: 0
 14737  0032B8  0E3A               	movlw	58
 14738  0032BA  616B               	cpfslt	isdigit@c& (0+255),b
 14739  0032BC  D005               	goto	l7812
 14740                           
 14741                           ; BSR set to: 0
 14742  0032BE  0E2F               	movlw	47
 14743  0032C0  656B               	cpfsgt	isdigit@c& (0+255),b
 14744  0032C2  D002               	goto	l7812
 14745                           
 14746                           ; BSR set to: 0
 14747  0032C4  0E01               	movlw	1
 14748  0032C6  6F6A               	movwf	_isdigit$4039& (0+255),b
 14749  0032C8                     l7812:
 14750                           
 14751                           ; BSR set to: 0
 14752  0032C8  C06A  F069         	movff	_isdigit$4039,??_isdigit
 14753  0032CC  3169               	rrcf	??_isdigit& (0+255),w,b
 14754                           
 14755                           ; BSR set to: 0
 14756  0032CE  0012               	return		;funcret
 14757  0032D0                     __end_of_isdigit:
 14758                           	opt stack 0
 14759                           tblptru	equ	0xFF8
 14760                           tblptrh	equ	0xFF7
 14761                           tblptrl	equ	0xFF6
 14762                           tablat	equ	0xFF5
 14763                           prodh	equ	0xFF4
 14764                           prodl	equ	0xFF3
 14765                           intcon	equ	0xFF2
 14766                           intcon2	equ	0xFF1
 14767                           intcon3	equ	0xFF0
 14768                           postinc0	equ	0xFEE
 14769                           wreg	equ	0xFE8
 14770                           indf1	equ	0xFE7
 14771                           postinc1	equ	0xFE6
 14772                           postdec1	equ	0xFE5
 14773                           fsr1h	equ	0xFE2
 14774                           fsr1l	equ	0xFE1
 14775                           indf2	equ	0xFDF
 14776                           postinc2	equ	0xFDE
 14777                           postdec2	equ	0xFDD
 14778                           fsr2h	equ	0xFDA
 14779                           fsr2l	equ	0xFD9
 14780                           status	equ	0xFD8
 14781                           
 14782 ;; *************** function ___wmul *****************
 14783 ;; Defined at:
 14784 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  multiplier      2    9[BANK0 ] unsigned int 
 14787 ;;  multiplicand    2   11[BANK0 ] unsigned int 
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;  product         2   13[BANK0 ] unsigned int 
 14790 ;; Return value:  Size  Location     Type
 14791 ;;                  2    9[BANK0 ] unsigned int 
 14792 ;; Registers used:
 14793 ;;		wreg, status,2, status,0, prodl, prodh
 14794 ;; Tracked objects:
 14795 ;;		On entry : F/0
 14796 ;;		On exit  : F/0
 14797 ;;		Unchanged: 0/0
 14798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14800 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14802 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14803 ;;Total ram usage:        6 bytes
 14804 ;; Hardware stack levels used:    1
 14805 ;; Hardware stack levels required when called:    8
 14806 ;; This function calls:
 14807 ;;		Nothing
 14808 ;; This function is called by:
 14809 ;;		_sprintf
 14810 ;; This function uses a non-reentrant model
 14811 ;;
 14812                           
 14813                           	psect	text66
 14814  0031EC                     __ptext66:
 14815                           	opt stack 0
 14816  0031EC                     ___wmul:
 14817                           	opt stack 19
 14818                           
 14819                           ; BSR set to: 0
 14820                           
 14821                           ; BSR set to: 0
 14822                           ;incstack = 0
 14823  0031EC  5169               	movf	___wmul@multiplier& (0+255),w,b
 14824  0031EE  036B               	mulwf	___wmul@multiplicand& (0+255),b
 14825  0031F0  CFF3 F06D          	movff	prodl,___wmul@product
 14826  0031F4  CFF4 F06E          	movff	prodh,___wmul@product+1
 14827  0031F8  5169               	movf	___wmul@multiplier& (0+255),w,b
 14828  0031FA  036C               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 14829  0031FC  50F3               	movf	prodl,w,c
 14830  0031FE  276E               	addwf	(___wmul@product+1)& (0+255),f,b
 14831  003200  516A               	movf	(___wmul@multiplier+1)& (0+255),w,b
 14832  003202  036B               	mulwf	___wmul@multiplicand& (0+255),b
 14833  003204  50F3               	movf	prodl,w,c
 14834  003206  276E               	addwf	(___wmul@product+1)& (0+255),f,b
 14835                           
 14836                           ; BSR set to: 0
 14837  003208  C06D  F069         	movff	___wmul@product,?___wmul
 14838  00320C  C06E  F06A         	movff	___wmul@product+1,?___wmul+1
 14839                           
 14840                           ; BSR set to: 0
 14841  003210  0012               	return		;funcret
 14842  003212                     __end_of___wmul:
 14843                           	opt stack 0
 14844                           tblptru	equ	0xFF8
 14845                           tblptrh	equ	0xFF7
 14846                           tblptrl	equ	0xFF6
 14847                           tablat	equ	0xFF5
 14848                           prodh	equ	0xFF4
 14849                           prodl	equ	0xFF3
 14850                           intcon	equ	0xFF2
 14851                           intcon2	equ	0xFF1
 14852                           intcon3	equ	0xFF0
 14853                           postinc0	equ	0xFEE
 14854                           wreg	equ	0xFE8
 14855                           indf1	equ	0xFE7
 14856                           postinc1	equ	0xFE6
 14857                           postdec1	equ	0xFE5
 14858                           fsr1h	equ	0xFE2
 14859                           fsr1l	equ	0xFE1
 14860                           indf2	equ	0xFDF
 14861                           postinc2	equ	0xFDE
 14862                           postdec2	equ	0xFDD
 14863                           fsr2h	equ	0xFDA
 14864                           fsr2l	equ	0xFD9
 14865                           status	equ	0xFD8
 14866                           
 14867 ;; *************** function ___lwmod *****************
 14868 ;; Defined at:
 14869 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;  dividend        2   16[BANK0 ] unsigned int 
 14872 ;;  divisor         2   18[BANK0 ] unsigned int 
 14873 ;; Auto vars:     Size  Location     Type
 14874 ;;  counter         1   20[BANK0 ] unsigned char 
 14875 ;; Return value:  Size  Location     Type
 14876 ;;                  2   16[BANK0 ] unsigned int 
 14877 ;; Registers used:
 14878 ;;		wreg, status,2, status,0
 14879 ;; Tracked objects:
 14880 ;;		On entry : F/0
 14881 ;;		On exit  : F/0
 14882 ;;		Unchanged: 0/0
 14883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14884 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14885 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14887 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14888 ;;Total ram usage:        5 bytes
 14889 ;; Hardware stack levels used:    1
 14890 ;; Hardware stack levels required when called:    8
 14891 ;; This function calls:
 14892 ;;		Nothing
 14893 ;; This function is called by:
 14894 ;;		_sprintf
 14895 ;; This function uses a non-reentrant model
 14896 ;;
 14897                           
 14898                           	psect	text67
 14899  002F66                     __ptext67:
 14900                           	opt stack 0
 14901  002F66                     ___lwmod:
 14902                           	opt stack 19
 14903                           
 14904                           ; BSR set to: 0
 14905                           
 14906                           ; BSR set to: 0
 14907                           ;incstack = 0
 14908  002F66  5172               	movf	___lwmod@divisor& (0+255),w,b
 14909  002F68  1173               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 14910  002F6A  E017               	bz	l1913
 14911                           
 14912                           ; BSR set to: 0
 14913  002F6C  0E01               	movlw	1
 14914  002F6E  6F74               	movwf	___lwmod@counter& (0+255),b
 14915  002F70  D004               	goto	l7850
 14916  002F72                     l7848:
 14917                           
 14918                           ; BSR set to: 0
 14919  002F72  90D8               	bcf	status,0,c
 14920  002F74  3772               	rlcf	___lwmod@divisor& (0+255),f,b
 14921  002F76  3773               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 14922  002F78  2B74               	incf	___lwmod@counter& (0+255),f,b
 14923  002F7A                     l7850:
 14924                           
 14925                           ; BSR set to: 0
 14926  002F7A  AF73               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 14927  002F7C  D7FA               	goto	l7848
 14928  002F7E                     l7852:
 14929                           
 14930                           ; BSR set to: 0
 14931  002F7E  5172               	movf	___lwmod@divisor& (0+255),w,b
 14932  002F80  5D70               	subwf	___lwmod@dividend& (0+255),w,b
 14933  002F82  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14934  002F84  5971               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 14935  002F86  E304               	bnc	l7856
 14936                           
 14937                           ; BSR set to: 0
 14938  002F88  5172               	movf	___lwmod@divisor& (0+255),w,b
 14939  002F8A  5F70               	subwf	___lwmod@dividend& (0+255),f,b
 14940  002F8C  5173               	movf	(___lwmod@divisor+1)& (0+255),w,b
 14941  002F8E  5B71               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 14942  002F90                     l7856:
 14943                           
 14944                           ; BSR set to: 0
 14945  002F90  90D8               	bcf	status,0,c
 14946  002F92  3373               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 14947  002F94  3372               	rrcf	___lwmod@divisor& (0+255),f,b
 14948                           
 14949                           ; BSR set to: 0
 14950  002F96  2F74               	decfsz	___lwmod@counter& (0+255),f,b
 14951  002F98  D7F2               	goto	l7852
 14952  002F9A                     l1913:
 14953                           
 14954                           ; BSR set to: 0
 14955  002F9A  C070  F070         	movff	___lwmod@dividend,?___lwmod
 14956  002F9E  C071  F071         	movff	___lwmod@dividend+1,?___lwmod+1
 14957                           
 14958                           ; BSR set to: 0
 14959  002FA2  0012               	return		;funcret
 14960  002FA4                     __end_of___lwmod:
 14961                           	opt stack 0
 14962                           tblptru	equ	0xFF8
 14963                           tblptrh	equ	0xFF7
 14964                           tblptrl	equ	0xFF6
 14965                           tablat	equ	0xFF5
 14966                           prodh	equ	0xFF4
 14967                           prodl	equ	0xFF3
 14968                           intcon	equ	0xFF2
 14969                           intcon2	equ	0xFF1
 14970                           intcon3	equ	0xFF0
 14971                           postinc0	equ	0xFEE
 14972                           wreg	equ	0xFE8
 14973                           indf1	equ	0xFE7
 14974                           postinc1	equ	0xFE6
 14975                           postdec1	equ	0xFE5
 14976                           fsr1h	equ	0xFE2
 14977                           fsr1l	equ	0xFE1
 14978                           indf2	equ	0xFDF
 14979                           postinc2	equ	0xFDE
 14980                           postdec2	equ	0xFDD
 14981                           fsr2h	equ	0xFDA
 14982                           fsr2l	equ	0xFD9
 14983                           status	equ	0xFD8
 14984                           
 14985 ;; *************** function ___lwdiv *****************
 14986 ;; Defined at:
 14987 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 14988 ;; Parameters:    Size  Location     Type
 14989 ;;  dividend        2    9[BANK0 ] unsigned int 
 14990 ;;  divisor         2   11[BANK0 ] unsigned int 
 14991 ;; Auto vars:     Size  Location     Type
 14992 ;;  quotient        2   14[BANK0 ] unsigned int 
 14993 ;;  counter         1   13[BANK0 ] unsigned char 
 14994 ;; Return value:  Size  Location     Type
 14995 ;;                  2    9[BANK0 ] unsigned int 
 14996 ;; Registers used:
 14997 ;;		wreg, status,2, status,0
 14998 ;; Tracked objects:
 14999 ;;		On entry : F/0
 15000 ;;		On exit  : F/0
 15001 ;;		Unchanged: 0/0
 15002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15003 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15004 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15006 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15007 ;;Total ram usage:        7 bytes
 15008 ;; Hardware stack levels used:    1
 15009 ;; Hardware stack levels required when called:    8
 15010 ;; This function calls:
 15011 ;;		Nothing
 15012 ;; This function is called by:
 15013 ;;		_sprintf
 15014 ;; This function uses a non-reentrant model
 15015 ;;
 15016                           
 15017                           	psect	text68
 15018  002D96                     __ptext68:
 15019                           	opt stack 0
 15020  002D96                     ___lwdiv:
 15021                           	opt stack 19
 15022                           
 15023                           ; BSR set to: 0
 15024                           
 15025                           ; BSR set to: 0
 15026                           ;incstack = 0
 15027  002D96  6B6E               	clrf	___lwdiv@quotient& (0+255),b
 15028  002D98  6B6F               	clrf	(___lwdiv@quotient+1)& (0+255),b
 15029                           
 15030                           ; BSR set to: 0
 15031  002D9A  516B               	movf	___lwdiv@divisor& (0+255),w,b
 15032  002D9C  116C               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15033  002D9E  E01B               	bz	l1903
 15034                           
 15035                           ; BSR set to: 0
 15036  002DA0  0E01               	movlw	1
 15037  002DA2  6F6D               	movwf	___lwdiv@counter& (0+255),b
 15038  002DA4  D004               	goto	l7830
 15039  002DA6                     l7828:
 15040                           
 15041                           ; BSR set to: 0
 15042  002DA6  90D8               	bcf	status,0,c
 15043  002DA8  376B               	rlcf	___lwdiv@divisor& (0+255),f,b
 15044  002DAA  376C               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15045  002DAC  2B6D               	incf	___lwdiv@counter& (0+255),f,b
 15046  002DAE                     l7830:
 15047                           
 15048                           ; BSR set to: 0
 15049  002DAE  AF6C               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15050  002DB0  D7FA               	goto	l7828
 15051  002DB2                     l7832:
 15052                           
 15053                           ; BSR set to: 0
 15054  002DB2  90D8               	bcf	status,0,c
 15055  002DB4  376E               	rlcf	___lwdiv@quotient& (0+255),f,b
 15056  002DB6  376F               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15057                           
 15058                           ; BSR set to: 0
 15059  002DB8  516B               	movf	___lwdiv@divisor& (0+255),w,b
 15060  002DBA  5D69               	subwf	___lwdiv@dividend& (0+255),w,b
 15061  002DBC  516C               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15062  002DBE  596A               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15063  002DC0  E305               	bnc	l7840
 15064                           
 15065                           ; BSR set to: 0
 15066  002DC2  516B               	movf	___lwdiv@divisor& (0+255),w,b
 15067  002DC4  5F69               	subwf	___lwdiv@dividend& (0+255),f,b
 15068  002DC6  516C               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15069  002DC8  5B6A               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15070                           
 15071                           ; BSR set to: 0
 15072  002DCA  816E               	bsf	___lwdiv@quotient& (0+255),0,b
 15073  002DCC                     l7840:
 15074                           
 15075                           ; BSR set to: 0
 15076  002DCC  90D8               	bcf	status,0,c
 15077  002DCE  336C               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15078  002DD0  336B               	rrcf	___lwdiv@divisor& (0+255),f,b
 15079                           
 15080                           ; BSR set to: 0
 15081  002DD2  2F6D               	decfsz	___lwdiv@counter& (0+255),f,b
 15082  002DD4  D7EE               	goto	l7832
 15083  002DD6                     l1903:
 15084                           
 15085                           ; BSR set to: 0
 15086  002DD6  C06E  F069         	movff	___lwdiv@quotient,?___lwdiv
 15087  002DDA  C06F  F06A         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15088                           
 15089                           ; BSR set to: 0
 15090  002DDE  0012               	return		;funcret
 15091  002DE0                     __end_of___lwdiv:
 15092                           	opt stack 0
 15093                           tblptru	equ	0xFF8
 15094                           tblptrh	equ	0xFF7
 15095                           tblptrl	equ	0xFF6
 15096                           tablat	equ	0xFF5
 15097                           prodh	equ	0xFF4
 15098                           prodl	equ	0xFF3
 15099                           intcon	equ	0xFF2
 15100                           intcon2	equ	0xFF1
 15101                           intcon3	equ	0xFF0
 15102                           postinc0	equ	0xFEE
 15103                           wreg	equ	0xFE8
 15104                           indf1	equ	0xFE7
 15105                           postinc1	equ	0xFE6
 15106                           postdec1	equ	0xFE5
 15107                           fsr1h	equ	0xFE2
 15108                           fsr1l	equ	0xFE1
 15109                           indf2	equ	0xFDF
 15110                           postinc2	equ	0xFDE
 15111                           postdec2	equ	0xFDD
 15112                           fsr2h	equ	0xFDA
 15113                           fsr2l	equ	0xFD9
 15114                           status	equ	0xFD8
 15115                           
 15116 ;; *************** function _LCD_Update *****************
 15117 ;; Defined at:
 15118 ;;		line 132 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 15119 ;; Parameters:    Size  Location     Type
 15120 ;;		None
 15121 ;; Auto vars:     Size  Location     Type
 15122 ;;  i               1   11[BANK0 ] unsigned char 
 15123 ;; Return value:  Size  Location     Type
 15124 ;;		None               void
 15125 ;; Registers used:
 15126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15127 ;; Tracked objects:
 15128 ;;		On entry : F/0
 15129 ;;		On exit  : F/0
 15130 ;;		Unchanged: 0/0
 15131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15135 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15136 ;;Total ram usage:        1 bytes
 15137 ;; Hardware stack levels used:    1
 15138 ;; Hardware stack levels required when called:   10
 15139 ;; This function calls:
 15140 ;;		_LCD_WriteCmd
 15141 ;;		_LCD_WriteData
 15142 ;; This function is called by:
 15143 ;;		_LCDTRXCount
 15144 ;;		_LCDDisplay
 15145 ;;		_run_star_demo
 15146 ;; This function uses a non-reentrant model
 15147 ;;
 15148                           
 15149                           	psect	text69
 15150  00280E                     __ptext69:
 15151                           	opt stack 0
 15152  00280E                     _LCD_Update:
 15153                           	opt stack 18
 15154                           
 15155                           ; BSR set to: 0
 15156                           ;lcd.c: 134: uint8_t i;
 15157                           ;lcd.c: 136: LCD_WriteCmd(0x80 | 0x00);
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;incstack = 0
 15161  00280E  0E80               	movlw	128
 15162  002810  ECAF  F019         	call	_LCD_WriteCmd
 15163                           
 15164                           ;lcd.c: 138: for(i = 0; i < 16; i++)
 15165  002814  0100               	movlb	0	; () banked
 15166  002816  6B6B               	clrf	LCD_Update@i& (0+255),b
 15167  002818                     l8230:
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;lcd.c: 139: {
 15171                           ;lcd.c: 140: if( LCDText[i] == 0 )
 15172  002818  0EB8               	movlw	low _LCDText
 15173  00281A  256B               	addwf	LCD_Update@i& (0+255),w,b
 15174  00281C  6ED9               	movwf	fsr2l,c
 15175  00281E  6ADA               	clrf	fsr2h,c
 15176  002820  0E01               	movlw	high _LCDText
 15177  002822  22DA               	addwfc	fsr2h,f,c
 15178  002824  50DF               	movf	indf2,w,c
 15179  002826  E104               	bnz	l8234
 15180                           
 15181                           ; BSR set to: 0
 15182                           ;lcd.c: 141: {
 15183                           ;lcd.c: 142: LCD_WriteData(' ');
 15184  002828  0E20               	movlw	32
 15185  00282A  ECA6  F019         	call	_LCD_WriteData
 15186                           
 15187                           ;lcd.c: 143: }
 15188  00282E  D009               	goto	l8236
 15189  002830                     l8234:
 15190                           
 15191                           ; BSR set to: 0
 15192                           ;lcd.c: 144: else
 15193                           ;lcd.c: 145: {
 15194                           ;lcd.c: 146: LCD_WriteData(LCDText[i]);
 15195  002830  0EB8               	movlw	low _LCDText
 15196  002832  256B               	addwf	LCD_Update@i& (0+255),w,b
 15197  002834  6ED9               	movwf	fsr2l,c
 15198  002836  6ADA               	clrf	fsr2h,c
 15199  002838  0E01               	movlw	high _LCDText
 15200  00283A  22DA               	addwfc	fsr2h,f,c
 15201  00283C  50DF               	movf	indf2,w,c
 15202  00283E  ECA6  F019         	call	_LCD_WriteData
 15203  002842                     l8236:
 15204  002842  0100               	movlb	0	; () banked
 15205  002844  2B6B               	incf	LCD_Update@i& (0+255),f,b
 15206                           
 15207                           ; BSR set to: 0
 15208  002846  0E0F               	movlw	15
 15209  002848  656B               	cpfsgt	LCD_Update@i& (0+255),b
 15210  00284A  D7E6               	goto	l8230
 15211                           
 15212                           ; BSR set to: 0
 15213                           ;lcd.c: 147: }
 15214                           ;lcd.c: 148: }
 15215                           ;lcd.c: 150: LCD_WriteCmd(0x80 | 0x40);
 15216  00284C  0EC0               	movlw	192
 15217  00284E  ECAF  F019         	call	_LCD_WriteCmd
 15218                           
 15219                           ;lcd.c: 152: for(i = 16; i < 32; i++)
 15220  002852  0E10               	movlw	16
 15221  002854  0100               	movlb	0	; () banked
 15222  002856  6F6B               	movwf	LCD_Update@i& (0+255),b
 15223  002858                     l8248:
 15224                           
 15225                           ; BSR set to: 0
 15226                           ;lcd.c: 153: {
 15227                           ;lcd.c: 154: if( LCDText[i] == 0 )
 15228  002858  0EB8               	movlw	low _LCDText
 15229  00285A  256B               	addwf	LCD_Update@i& (0+255),w,b
 15230  00285C  6ED9               	movwf	fsr2l,c
 15231  00285E  6ADA               	clrf	fsr2h,c
 15232  002860  0E01               	movlw	high _LCDText
 15233  002862  22DA               	addwfc	fsr2h,f,c
 15234  002864  50DF               	movf	indf2,w,c
 15235  002866  E104               	bnz	l8252
 15236                           
 15237                           ; BSR set to: 0
 15238                           ;lcd.c: 155: {
 15239                           ;lcd.c: 156: LCD_WriteData(' ');
 15240  002868  0E20               	movlw	32
 15241  00286A  ECA6  F019         	call	_LCD_WriteData
 15242                           
 15243                           ;lcd.c: 157: }
 15244  00286E  D009               	goto	l8254
 15245  002870                     l8252:
 15246                           
 15247                           ; BSR set to: 0
 15248                           ;lcd.c: 158: else
 15249                           ;lcd.c: 159: {
 15250                           ;lcd.c: 160: LCD_WriteData(LCDText[i]);
 15251  002870  0EB8               	movlw	low _LCDText
 15252  002872  256B               	addwf	LCD_Update@i& (0+255),w,b
 15253  002874  6ED9               	movwf	fsr2l,c
 15254  002876  6ADA               	clrf	fsr2h,c
 15255  002878  0E01               	movlw	high _LCDText
 15256  00287A  22DA               	addwfc	fsr2h,f,c
 15257  00287C  50DF               	movf	indf2,w,c
 15258  00287E  ECA6  F019         	call	_LCD_WriteData
 15259  002882                     l8254:
 15260  002882  0100               	movlb	0	; () banked
 15261  002884  2B6B               	incf	LCD_Update@i& (0+255),f,b
 15262                           
 15263                           ; BSR set to: 0
 15264  002886  0E1F               	movlw	31
 15265  002888  656B               	cpfsgt	LCD_Update@i& (0+255),b
 15266  00288A  D7E6               	goto	l8248
 15267  00288C  0C1F               	retlw	31
 15268  00288E                     __end_of_LCD_Update:
 15269                           	opt stack 0
 15270                           tblptru	equ	0xFF8
 15271                           tblptrh	equ	0xFF7
 15272                           tblptrl	equ	0xFF6
 15273                           tablat	equ	0xFF5
 15274                           prodh	equ	0xFF4
 15275                           prodl	equ	0xFF3
 15276                           intcon	equ	0xFF2
 15277                           intcon2	equ	0xFF1
 15278                           intcon3	equ	0xFF0
 15279                           postinc0	equ	0xFEE
 15280                           wreg	equ	0xFE8
 15281                           indf1	equ	0xFE7
 15282                           postinc1	equ	0xFE6
 15283                           postdec1	equ	0xFE5
 15284                           fsr1h	equ	0xFE2
 15285                           fsr1l	equ	0xFE1
 15286                           indf2	equ	0xFDF
 15287                           postinc2	equ	0xFDE
 15288                           postdec2	equ	0xFDD
 15289                           fsr2h	equ	0xFDA
 15290                           fsr2l	equ	0xFD9
 15291                           status	equ	0xFD8
 15292                           
 15293 ;; *************** function _LCD_WriteData *****************
 15294 ;; Defined at:
 15295 ;;		line 43 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 15296 ;; Parameters:    Size  Location     Type
 15297 ;;  data            1    wreg     unsigned char 
 15298 ;; Auto vars:     Size  Location     Type
 15299 ;;  data            1   10[BANK0 ] unsigned char 
 15300 ;; Return value:  Size  Location     Type
 15301 ;;		None               void
 15302 ;; Registers used:
 15303 ;;		wreg, status,2, cstack
 15304 ;; Tracked objects:
 15305 ;;		On entry : F/0
 15306 ;;		On exit  : 0/0
 15307 ;;		Unchanged: 0/0
 15308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15312 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15313 ;;Total ram usage:        1 bytes
 15314 ;; Hardware stack levels used:    1
 15315 ;; Hardware stack levels required when called:    9
 15316 ;; This function calls:
 15317 ;;		_SPIPut2
 15318 ;; This function is called by:
 15319 ;;		_LCD_Update
 15320 ;; This function uses a non-reentrant model
 15321 ;;
 15322                           
 15323                           	psect	text70
 15324  00334C                     __ptext70:
 15325                           	opt stack 0
 15326  00334C                     _LCD_WriteData:
 15327                           	opt stack 18
 15328                           
 15329                           ; BSR set to: 0
 15330                           ;incstack = 0
 15331                           ;LCD_WriteData@data stored from wreg
 15332  00334C  6F6A               	movwf	LCD_WriteData@data& (0+255),b
 15333                           
 15334                           ;lcd.c: 45: LATDbits.LATD7 = 0;
 15335  00334E  9E8C               	bcf	3980,7,c	;volatile
 15336                           
 15337                           ;lcd.c: 46: LATDbits.LATD3 = 1;
 15338  003350  868C               	bsf	3980,3,c	;volatile
 15339                           
 15340                           ;lcd.c: 48: SPIPut2(data);
 15341  003352  0100               	movlb	0	; () banked
 15342  003354  516A               	movf	LCD_WriteData@data& (0+255),w,b
 15343  003356  EC75  F019         	call	_SPIPut2
 15344                           
 15345                           ;lcd.c: 50: LATDbits.LATD7 = 1;
 15346  00335A  8E8C               	bsf	3980,7,c	;volatile
 15347  00335C  0012               	return		;funcret
 15348  00335E                     __end_of_LCD_WriteData:
 15349                           	opt stack 0
 15350                           tblptru	equ	0xFF8
 15351                           tblptrh	equ	0xFF7
 15352                           tblptrl	equ	0xFF6
 15353                           tablat	equ	0xFF5
 15354                           prodh	equ	0xFF4
 15355                           prodl	equ	0xFF3
 15356                           intcon	equ	0xFF2
 15357                           intcon2	equ	0xFF1
 15358                           intcon3	equ	0xFF0
 15359                           postinc0	equ	0xFEE
 15360                           wreg	equ	0xFE8
 15361                           indf1	equ	0xFE7
 15362                           postinc1	equ	0xFE6
 15363                           postdec1	equ	0xFE5
 15364                           fsr1h	equ	0xFE2
 15365                           fsr1l	equ	0xFE1
 15366                           indf2	equ	0xFDF
 15367                           postinc2	equ	0xFDE
 15368                           postdec2	equ	0xFDD
 15369                           fsr2h	equ	0xFDA
 15370                           fsr2l	equ	0xFD9
 15371                           status	equ	0xFD8
 15372                           
 15373 ;; *************** function _LCD_Erase *****************
 15374 ;; Defined at:
 15375 ;;		line 101 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 15376 ;; Parameters:    Size  Location     Type
 15377 ;;		None
 15378 ;; Auto vars:     Size  Location     Type
 15379 ;;		None
 15380 ;; Return value:  Size  Location     Type
 15381 ;;		None               void
 15382 ;; Registers used:
 15383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15384 ;; Tracked objects:
 15385 ;;		On entry : 0/1
 15386 ;;		On exit  : F/0
 15387 ;;		Unchanged: 0/0
 15388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15393 ;;Total ram usage:        0 bytes
 15394 ;; Hardware stack levels used:    1
 15395 ;; Hardware stack levels required when called:   10
 15396 ;; This function calls:
 15397 ;;		_DELAY_ms
 15398 ;;		_LCD_WriteCmd
 15399 ;;		_memset
 15400 ;; This function is called by:
 15401 ;;		_LCDTRXCount
 15402 ;;		_LCDDisplay
 15403 ;;		_run_star_demo
 15404 ;; This function uses a non-reentrant model
 15405 ;;
 15406                           
 15407                           	psect	text71
 15408  0031C4                     __ptext71:
 15409                           	opt stack 0
 15410  0031C4                     _LCD_Erase:
 15411                           	opt stack 18
 15412                           
 15413                           ;lcd.c: 104: LCD_WriteCmd(0x01);;
 15414                           
 15415                           ;incstack = 0
 15416  0031C4  0E01               	movlw	1
 15417  0031C6  ECAF  F019         	call	_LCD_WriteCmd
 15418                           
 15419                           ;lcd.c: 105: DELAY_ms(2);
 15420  0031CA  0100               	movlb	0	; () banked
 15421  0031CC  6B6A               	clrf	(DELAY_ms@ms+1)& (0+255),b
 15422  0031CE  0E02               	movlw	2
 15423  0031D0  6F69               	movwf	DELAY_ms@ms& (0+255),b
 15424  0031D2  ECFE  F00F         	call	_DELAY_ms	;wreg free
 15425                           
 15426                           ; BSR set to: 0
 15427                           ;lcd.c: 108: memset(LCDText, ' ', 32);
 15428  0031D6  0EB8               	movlw	low _LCDText
 15429  0031D8  6F69               	movwf	memset@p1& (0+255),b
 15430  0031DA  0E01               	movlw	high _LCDText
 15431  0031DC  6F6A               	movwf	(memset@p1+1)& (0+255),b
 15432  0031DE  6B6C               	clrf	(memset@c+1)& (0+255),b
 15433  0031E0  0E20               	movlw	32
 15434  0031E2  6F6B               	movwf	memset@c& (0+255),b
 15435  0031E4  6B6E               	clrf	(memset@n+1)& (0+255),b
 15436  0031E6  6F6D               	movwf	memset@n& (0+255),b
 15437  0031E8  EFB9  F018         	goto	_memset	;wreg free
 15438  0031EC                     __end_of_LCD_Erase:
 15439                           	opt stack 0
 15440                           tblptru	equ	0xFF8
 15441                           tblptrh	equ	0xFF7
 15442                           tblptrl	equ	0xFF6
 15443                           tablat	equ	0xFF5
 15444                           prodh	equ	0xFF4
 15445                           prodl	equ	0xFF3
 15446                           intcon	equ	0xFF2
 15447                           intcon2	equ	0xFF1
 15448                           intcon3	equ	0xFF0
 15449                           postinc0	equ	0xFEE
 15450                           wreg	equ	0xFE8
 15451                           indf1	equ	0xFE7
 15452                           postinc1	equ	0xFE6
 15453                           postdec1	equ	0xFE5
 15454                           fsr1h	equ	0xFE2
 15455                           fsr1l	equ	0xFE1
 15456                           indf2	equ	0xFDF
 15457                           postinc2	equ	0xFDE
 15458                           postdec2	equ	0xFDD
 15459                           fsr2h	equ	0xFDA
 15460                           fsr2l	equ	0xFD9
 15461                           status	equ	0xFD8
 15462                           
 15463 ;; *************** function _memset *****************
 15464 ;; Defined at:
 15465 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 15466 ;; Parameters:    Size  Location     Type
 15467 ;;  p1              2    9[BANK0 ] PTR void 
 15468 ;;		 -> LCDText(33), 
 15469 ;;  c               2   11[BANK0 ] int 
 15470 ;;  n               2   13[BANK0 ] unsigned int 
 15471 ;; Auto vars:     Size  Location     Type
 15472 ;;  p               2   15[BANK0 ] PTR unsigned char 
 15473 ;;		 -> LCDText(33), 
 15474 ;; Return value:  Size  Location     Type
 15475 ;;                  2    9[BANK0 ] PTR void 
 15476 ;; Registers used:
 15477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15478 ;; Tracked objects:
 15479 ;;		On entry : F/0
 15480 ;;		On exit  : F/0
 15481 ;;		Unchanged: 0/0
 15482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15483 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15486 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15487 ;;Total ram usage:        8 bytes
 15488 ;; Hardware stack levels used:    1
 15489 ;; Hardware stack levels required when called:    8
 15490 ;; This function calls:
 15491 ;;		Nothing
 15492 ;; This function is called by:
 15493 ;;		_LCD_Erase
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           	psect	text72
 15498  003172                     __ptext72:
 15499                           	opt stack 0
 15500  003172                     _memset:
 15501                           	opt stack 19
 15502                           
 15503                           ; BSR set to: 0
 15504                           
 15505                           ; BSR set to: 0
 15506                           ;incstack = 0
 15507  003172  C069  F06F         	movff	memset@p1,memset@p
 15508  003176  C06A  F070         	movff	memset@p1+1,memset@p+1
 15509  00317A  D008               	goto	l7802
 15510  00317C                     l7798:
 15511                           
 15512                           ; BSR set to: 0
 15513  00317C  C06F  FFD9         	movff	memset@p,fsr2l
 15514  003180  C070  FFDA         	movff	memset@p+1,fsr2h
 15515  003184  C06B  FFDF         	movff	memset@c,indf2
 15516                           
 15517                           ; BSR set to: 0
 15518  003188  4B6F               	infsnz	memset@p& (0+255),f,b
 15519  00318A  2B70               	incf	(memset@p+1)& (0+255),f,b
 15520  00318C                     l7802:
 15521                           
 15522                           ; BSR set to: 0
 15523  00318C  076D               	decf	memset@n& (0+255),f,b
 15524  00318E  A0D8               	btfss	status,0,c
 15525  003190  076E               	decf	(memset@n+1)& (0+255),f,b
 15526  003192  296D               	incf	memset@n& (0+255),w,b
 15527  003194  E1F3               	bnz	l7798
 15528  003196  296E               	incf	(memset@n+1)& (0+255),w,b
 15529  003198  E1F1               	bnz	l7798
 15530                           
 15531                           ; BSR set to: 0
 15532  00319A  0012               	return		;funcret
 15533  00319C                     __end_of_memset:
 15534                           	opt stack 0
 15535                           tblptru	equ	0xFF8
 15536                           tblptrh	equ	0xFF7
 15537                           tblptrl	equ	0xFF6
 15538                           tablat	equ	0xFF5
 15539                           prodh	equ	0xFF4
 15540                           prodl	equ	0xFF3
 15541                           intcon	equ	0xFF2
 15542                           intcon2	equ	0xFF1
 15543                           intcon3	equ	0xFF0
 15544                           postinc0	equ	0xFEE
 15545                           wreg	equ	0xFE8
 15546                           indf1	equ	0xFE7
 15547                           postinc1	equ	0xFE6
 15548                           postdec1	equ	0xFE5
 15549                           fsr1h	equ	0xFE2
 15550                           fsr1l	equ	0xFE1
 15551                           indf2	equ	0xFDF
 15552                           postinc2	equ	0xFDE
 15553                           postdec2	equ	0xFDD
 15554                           fsr2h	equ	0xFDA
 15555                           fsr2l	equ	0xFD9
 15556                           status	equ	0xFD8
 15557                           
 15558 ;; *************** function _LCD_WriteCmd *****************
 15559 ;; Defined at:
 15560 ;;		line 32 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 15561 ;; Parameters:    Size  Location     Type
 15562 ;;  data            1    wreg     unsigned char 
 15563 ;; Auto vars:     Size  Location     Type
 15564 ;;  data            1   10[BANK0 ] unsigned char 
 15565 ;; Return value:  Size  Location     Type
 15566 ;;		None               void
 15567 ;; Registers used:
 15568 ;;		wreg, status,2, cstack
 15569 ;; Tracked objects:
 15570 ;;		On entry : 0/0
 15571 ;;		On exit  : 0/0
 15572 ;;		Unchanged: 0/0
 15573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15575 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15577 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15578 ;;Total ram usage:        1 bytes
 15579 ;; Hardware stack levels used:    1
 15580 ;; Hardware stack levels required when called:    9
 15581 ;; This function calls:
 15582 ;;		_SPIPut2
 15583 ;; This function is called by:
 15584 ;;		_LCD_Initialize
 15585 ;;		_LCD_Erase
 15586 ;;		_LCD_Update
 15587 ;; This function uses a non-reentrant model
 15588 ;;
 15589                           
 15590                           	psect	text73
 15591  00335E                     __ptext73:
 15592                           	opt stack 0
 15593  00335E                     _LCD_WriteCmd:
 15594                           	opt stack 18
 15595                           
 15596                           ; BSR set to: 0
 15597                           ;incstack = 0
 15598                           ;LCD_WriteCmd@data stored from wreg
 15599  00335E  0100               	movlb	0	; () banked
 15600  003360  6F6A               	movwf	LCD_WriteCmd@data& (0+255),b
 15601                           
 15602                           ;lcd.c: 34: LATDbits.LATD7 = 0;
 15603  003362  9E8C               	bcf	3980,7,c	;volatile
 15604                           
 15605                           ;lcd.c: 35: LATDbits.LATD3 = 0;
 15606  003364  968C               	bcf	3980,3,c	;volatile
 15607                           
 15608                           ;lcd.c: 37: SPIPut2(data);
 15609  003366  516A               	movf	LCD_WriteCmd@data& (0+255),w,b
 15610  003368  EC75  F019         	call	_SPIPut2
 15611                           
 15612                           ;lcd.c: 39: LATDbits.LATD7 = 1;
 15613  00336C  8E8C               	bsf	3980,7,c	;volatile
 15614  00336E  0012               	return		;funcret
 15615  003370                     __end_of_LCD_WriteCmd:
 15616                           	opt stack 0
 15617                           tblptru	equ	0xFF8
 15618                           tblptrh	equ	0xFF7
 15619                           tblptrl	equ	0xFF6
 15620                           tablat	equ	0xFF5
 15621                           prodh	equ	0xFF4
 15622                           prodl	equ	0xFF3
 15623                           intcon	equ	0xFF2
 15624                           intcon2	equ	0xFF1
 15625                           intcon3	equ	0xFF0
 15626                           postinc0	equ	0xFEE
 15627                           wreg	equ	0xFE8
 15628                           indf1	equ	0xFE7
 15629                           postinc1	equ	0xFE6
 15630                           postdec1	equ	0xFE5
 15631                           fsr1h	equ	0xFE2
 15632                           fsr1l	equ	0xFE1
 15633                           indf2	equ	0xFDF
 15634                           postinc2	equ	0xFDE
 15635                           postdec2	equ	0xFDD
 15636                           fsr2h	equ	0xFDA
 15637                           fsr2l	equ	0xFD9
 15638                           status	equ	0xFD8
 15639                           
 15640 ;; *************** function _SPIPut2 *****************
 15641 ;; Defined at:
 15642 ;;		line 80 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 15643 ;; Parameters:    Size  Location     Type
 15644 ;;  v               1    wreg     unsigned char 
 15645 ;; Auto vars:     Size  Location     Type
 15646 ;;  v               1    9[BANK0 ] unsigned char 
 15647 ;;  i               1    0        unsigned char 
 15648 ;; Return value:  Size  Location     Type
 15649 ;;		None               void
 15650 ;; Registers used:
 15651 ;;		wreg
 15652 ;; Tracked objects:
 15653 ;;		On entry : 0/0
 15654 ;;		On exit  : 0/0
 15655 ;;		Unchanged: 0/0
 15656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15660 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15661 ;;Total ram usage:        1 bytes
 15662 ;; Hardware stack levels used:    1
 15663 ;; Hardware stack levels required when called:    8
 15664 ;; This function calls:
 15665 ;;		Nothing
 15666 ;; This function is called by:
 15667 ;;		_EEPROM_Read
 15668 ;;		_EEPROM_Write
 15669 ;;		_LCD_WriteCmd
 15670 ;;		_LCD_WriteData
 15671 ;;		_SPIGet2
 15672 ;; This function uses a non-reentrant model
 15673 ;;
 15674                           
 15675                           	psect	text74
 15676  0032EA                     __ptext74:
 15677                           	opt stack 0
 15678  0032EA                     _SPIPut2:
 15679                           	opt stack 18
 15680                           
 15681                           ;incstack = 0
 15682                           ;SPIPut2@v stored from wreg
 15683  0032EA  0100               	movlb	0	; () banked
 15684  0032EC  6F69               	movwf	SPIPut2@v& (0+255),b
 15685                           
 15686                           ;spi.c: 82: uint8_t i;
 15687                           ;spi.c: 88: PIR3bits.SSP2IF = 0;
 15688  0032EE  9EA4               	bcf	4004,7,c	;volatile
 15689  0032F0                     l863:
 15690                           
 15691                           ;spi.c: 90: {
 15692                           ;spi.c: 92: SSP2CON1bits.WCOL = 0;
 15693  0032F0  9E72               	bcf	3954,7,c	;volatile
 15694                           
 15695                           ;spi.c: 95: SSP2BUF = v;
 15696  0032F2  C069  FF75         	movff	SPIPut2@v,3957	;volatile
 15697                           
 15698                           ;spi.c: 98: } while( SSP2CON1bits.WCOL );
 15699  0032F6  BE72               	btfsc	3954,7,c	;volatile
 15700  0032F8  D7FB               	goto	l863
 15701  0032FA                     l865:
 15702  0032FA  AEA4               	btfss	4004,7,c	;volatile
 15703  0032FC  D7FE               	goto	l865
 15704                           
 15705                           ;spi.c: 106: PIR3bits.SSP2IF = 0;
 15706  0032FE  9EA4               	bcf	4004,7,c	;volatile
 15707  003300  0012               	return		;funcret
 15708  003302                     __end_of_SPIPut2:
 15709                           	opt stack 0
 15710                           tblptru	equ	0xFF8
 15711                           tblptrh	equ	0xFF7
 15712                           tblptrl	equ	0xFF6
 15713                           tablat	equ	0xFF5
 15714                           prodh	equ	0xFF4
 15715                           prodl	equ	0xFF3
 15716                           intcon	equ	0xFF2
 15717                           intcon2	equ	0xFF1
 15718                           intcon3	equ	0xFF0
 15719                           postinc0	equ	0xFEE
 15720                           wreg	equ	0xFE8
 15721                           indf1	equ	0xFE7
 15722                           postinc1	equ	0xFE6
 15723                           postdec1	equ	0xFE5
 15724                           fsr1h	equ	0xFE2
 15725                           fsr1l	equ	0xFE1
 15726                           indf2	equ	0xFDF
 15727                           postinc2	equ	0xFDE
 15728                           postdec2	equ	0xFDD
 15729                           fsr2h	equ	0xFDA
 15730                           fsr2l	equ	0xFD9
 15731                           status	equ	0xFD8
 15732                           
 15733 ;; *************** function _DELAY_ms *****************
 15734 ;; Defined at:
 15735 ;;		line 108 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 15736 ;; Parameters:    Size  Location     Type
 15737 ;;  ms              2    9[BANK0 ] unsigned int 
 15738 ;; Auto vars:     Size  Location     Type
 15739 ;;  cyclesRequir    4   19[BANK0 ] long 
 15740 ;; Return value:  Size  Location     Type
 15741 ;;		None               void
 15742 ;; Registers used:
 15743 ;;		wreg, status,2, status,0, prodl, prodh
 15744 ;; Tracked objects:
 15745 ;;		On entry : F/0
 15746 ;;		On exit  : F/0
 15747 ;;		Unchanged: 0/0
 15748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15749 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15750 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15751 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15752 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15753 ;;Total ram usage:       14 bytes
 15754 ;; Hardware stack levels used:    1
 15755 ;; Hardware stack levels required when called:    8
 15756 ;; This function calls:
 15757 ;;		Nothing
 15758 ;; This function is called by:
 15759 ;;		_MiMAC_Init
 15760 ;;		_MiMAC_PowerState
 15761 ;;		_LCD_Initialize
 15762 ;;		_LCD_Erase
 15763 ;;		_LCDDisplay
 15764 ;;		_DemoOutput_Greeting
 15765 ;;		_DemoOutput_Channel
 15766 ;;		_run_star_demo
 15767 ;; This function uses a non-reentrant model
 15768 ;;
 15769                           
 15770                           	psect	text75
 15771  001FFC                     __ptext75:
 15772                           	opt stack 0
 15773  001FFC                     _DELAY_ms:
 15774                           	opt stack 19
 15775                           
 15776                           ; BSR set to: 0
 15777                           ;delay.c: 115: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/1000) * ms;
 15778                           
 15779                           ; BSR set to: 0
 15780                           
 15781                           ;incstack = 0
 15782  001FFC  5169               	movf	DELAY_ms@ms& (0+255),w,b
 15783  001FFE  6F6B               	movwf	??_DELAY_ms& (0+255),b
 15784  002000  516A               	movf	(DELAY_ms@ms+1)& (0+255),w,b
 15785  002002  6F6C               	movwf	(??_DELAY_ms+1)& (0+255),b
 15786  002004  6B6D               	clrf	(??_DELAY_ms+2)& (0+255),b
 15787  002006  6B6E               	clrf	(??_DELAY_ms+3)& (0+255),b
 15788  002008  0EA0               	movlw	160
 15789  00200A  036B               	mulwf	??_DELAY_ms& (0+255),b
 15790  00200C  CFF3 F06F          	movff	prodl,??_DELAY_ms+4
 15791  002010  CFF4 F070          	movff	prodh,??_DELAY_ms+5
 15792  002014  6B71               	clrf	(??_DELAY_ms+6)& (0+255),b
 15793  002016  6B72               	clrf	(??_DELAY_ms+7)& (0+255),b
 15794  002018  036C               	mulwf	(??_DELAY_ms+1)& (0+255),b
 15795  00201A  50F3               	movf	prodl,w,c
 15796  00201C  2770               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 15797  00201E  50F4               	movf	prodh,w,c
 15798  002020  2371               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 15799  002022  0E00               	movlw	0
 15800  002024  2372               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 15801  002026  0E0F               	movlw	15
 15802  002028  036B               	mulwf	??_DELAY_ms& (0+255),b
 15803  00202A  50F3               	movf	prodl,w,c
 15804  00202C  2770               	addwf	(??_DELAY_ms+5)& (0+255),f,b
 15805  00202E  50F4               	movf	prodh,w,c
 15806  002030  2371               	addwfc	(??_DELAY_ms+6)& (0+255),f,b
 15807  002032  0E00               	movlw	0
 15808  002034  2372               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 15809  002036  0EA0               	movlw	160
 15810  002038  036D               	mulwf	(??_DELAY_ms+2)& (0+255),b
 15811  00203A  50F3               	movf	prodl,w,c
 15812  00203C  2771               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 15813  00203E  50F4               	movf	prodh,w,c
 15814  002040  2372               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 15815  002042  0E0F               	movlw	15
 15816  002044  036C               	mulwf	(??_DELAY_ms+1)& (0+255),b
 15817  002046  50F3               	movf	prodl,w,c
 15818  002048  2771               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 15819  00204A  50F4               	movf	prodh,w,c
 15820  00204C  2372               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 15821  00204E  0E00               	movlw	0
 15822  002050  036B               	mulwf	??_DELAY_ms& (0+255),b
 15823  002052  50F3               	movf	prodl,w,c
 15824  002054  2771               	addwf	(??_DELAY_ms+6)& (0+255),f,b
 15825  002056  50F4               	movf	prodh,w,c
 15826  002058  2372               	addwfc	(??_DELAY_ms+7)& (0+255),f,b
 15827  00205A  0EA0               	movlw	160
 15828  00205C  036E               	mulwf	(??_DELAY_ms+3)& (0+255),b
 15829  00205E  50F3               	movf	prodl,w,c
 15830  002060  2772               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 15831  002062  0E0F               	movlw	15
 15832  002064  036D               	mulwf	(??_DELAY_ms+2)& (0+255),b
 15833  002066  50F3               	movf	prodl,w,c
 15834  002068  2772               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 15835  00206A  0E00               	movlw	0
 15836  00206C  036C               	mulwf	(??_DELAY_ms+1)& (0+255),b
 15837  00206E  50F3               	movf	prodl,w,c
 15838  002070  2772               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 15839  002072  0E00               	movlw	0
 15840  002074  036B               	mulwf	??_DELAY_ms& (0+255),b
 15841  002076  50F3               	movf	prodl,w,c
 15842  002078  2772               	addwf	(??_DELAY_ms+7)& (0+255),f,b
 15843  00207A  C06F  F073         	movff	??_DELAY_ms+4,DELAY_ms@cyclesRequiredForEntireDelay
 15844  00207E  C070  F074         	movff	??_DELAY_ms+5,DELAY_ms@cyclesRequiredForEntireDelay+1
 15845  002082  C071  F075         	movff	??_DELAY_ms+6,DELAY_ms@cyclesRequiredForEntireDelay+2
 15846  002086  C072  F076         	movff	??_DELAY_ms+7,DELAY_ms@cyclesRequiredForEntireDelay+3
 15847                           
 15848                           ; BSR set to: 0
 15849                           ;delay.c: 119: cyclesRequiredForEntireDelay -= (148 + 22);
 15850  00208A  0E56               	movlw	86
 15851  00208C  2773               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 15852  00208E  0EFF               	movlw	255
 15853  002090  2374               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 15854  002092  2375               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 15855  002094  2376               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 15856                           
 15857                           ; BSR set to: 0
 15858                           ;delay.c: 121: if (cyclesRequiredForEntireDelay <= (170+25))
 15859  002096  BF76               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 15860  002098  0CFF               	retlw	255
 15861  00209A  5176               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 15862  00209C  1175               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 15863  00209E  1174               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 15864  0020A0  E10C               	bnz	l718
 15865  0020A2  0EC4               	movlw	196
 15866  0020A4  5D73               	subwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 15867  0020A6  E209               	bc	l718
 15868  0020A8  0012               	return	
 15869  0020AA                     l719:
 15870                           
 15871                           ; BSR set to: 0
 15872                           ;delay.c: 128: {
 15873                           ;delay.c: 129: __nop();
 15874  0020AA  F000               	nop	
 15875                           
 15876                           ;delay.c: 130: cyclesRequiredForEntireDelay -= 39;
 15877  0020AC  0ED9               	movlw	217
 15878  0020AE  0100               	movlb	0	; () banked
 15879  0020B0  2773               	addwf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),f,b
 15880  0020B2  0EFF               	movlw	255
 15881  0020B4  2374               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),f,b
 15882  0020B6  2375               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),f,b
 15883  0020B8  2376               	addwfc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),f,b
 15884  0020BA                     l718:
 15885                           
 15886                           ; BSR set to: 0
 15887  0020BA  BF76               	btfsc	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),7,b
 15888  0020BC  0012               	return	
 15889  0020BE  5176               	movf	(DELAY_ms@cyclesRequiredForEntireDelay+3)& (0+255),w,b
 15890  0020C0  1175               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+2)& (0+255),w,b
 15891  0020C2  1174               	iorwf	(DELAY_ms@cyclesRequiredForEntireDelay+1)& (0+255),w,b
 15892  0020C4  E1F2               	bnz	l719
 15893  0020C6  0573               	decf	DELAY_ms@cyclesRequiredForEntireDelay& (0+255),w,b
 15894  0020C8  E2F0               	bc	l719
 15895                           
 15896                           ; BSR set to: 0
 15897  0020CA  0012               	return		;funcret
 15898  0020CC                     __end_of_DELAY_ms:
 15899                           	opt stack 0
 15900                           tblptru	equ	0xFF8
 15901                           tblptrh	equ	0xFF7
 15902                           tblptrl	equ	0xFF6
 15903                           tablat	equ	0xFF5
 15904                           prodh	equ	0xFF4
 15905                           prodl	equ	0xFF3
 15906                           intcon	equ	0xFF2
 15907                           intcon2	equ	0xFF1
 15908                           intcon3	equ	0xFF0
 15909                           postinc0	equ	0xFEE
 15910                           wreg	equ	0xFE8
 15911                           indf1	equ	0xFE7
 15912                           postinc1	equ	0xFE6
 15913                           postdec1	equ	0xFE5
 15914                           fsr1h	equ	0xFE2
 15915                           fsr1l	equ	0xFE1
 15916                           indf2	equ	0xFDF
 15917                           postinc2	equ	0xFDE
 15918                           postdec2	equ	0xFDD
 15919                           fsr2h	equ	0xFDA
 15920                           fsr2l	equ	0xFD9
 15921                           status	equ	0xFD8
 15922                           
 15923 ;; *************** function _low_isr *****************
 15924 ;; Defined at:
 15925 ;;		line 1210 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 15926 ;; Parameters:    Size  Location     Type
 15927 ;;		None
 15928 ;; Auto vars:     Size  Location     Type
 15929 ;;		None
 15930 ;; Return value:  Size  Location     Type
 15931 ;;		None               void
 15932 ;; Registers used:
 15933 ;;		wreg, status,2, status,0, cstack
 15934 ;; Tracked objects:
 15935 ;;		On entry : 0/0
 15936 ;;		On exit  : F/0
 15937 ;;		Unchanged: 0/0
 15938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15941 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15942 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15943 ;;Total ram usage:        4 bytes
 15944 ;; Hardware stack levels used:    1
 15945 ;; Hardware stack levels required when called:    7
 15946 ;; This function calls:
 15947 ;;		i1_RegisterRead
 15948 ;; This function is called by:
 15949 ;;		Interrupt level 1
 15950 ;; This function uses a non-reentrant model
 15951 ;;
 15952                           
 15953                           	psect	intcodelo
 15954  000018                     __pintcodelo:
 15955                           	opt stack 0
 15956  000018                     _low_isr:
 15957                           	opt stack 9
 15958                           
 15959                           ; BSR set to: 0
 15960                           ;incstack = 0
 15961  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 15962  00001A  CFD8 F066          	movff	status,??_low_isr+1
 15963  00001E  CFE8 F067          	movff	wreg,??_low_isr+2
 15964  000022  CFE0 F068          	movff	bsr,??_low_isr+3
 15965                           
 15966                           ;drv_mrf_miwi_89xa.c: 1224: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 15967  000026  B2F2               	btfsc	intcon,1,c	;volatile
 15968  000028  A8F2               	btfss	intcon,4,c	;volatile
 15969  00002A  D001               	goto	i1l7292
 15970                           
 15971                           ;drv_mrf_miwi_89xa.c: 1225: INTCONbits.INT0IF = 0;
 15972  00002C  92F2               	bcf	intcon,1,c	;volatile
 15973  00002E                     i1l7292:
 15974                           
 15975                           ;drv_mrf_miwi_89xa.c: 1228: if(RF_Mode == 0x60)
 15976  00002E  0E60               	movlw	96
 15977  000030  0100               	movlb	0	; () banked
 15978  000032  19E1               	xorwf	_RF_Mode& (0+255),w,b
 15979  000034  E107               	bnz	i1l189
 15980                           
 15981                           ; BSR set to: 0
 15982                           ;drv_mrf_miwi_89xa.c: 1229: {
 15983                           ;drv_mrf_miwi_89xa.c: 1230: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 15984  000036  0E28               	movlw	40
 15985  000038  ECF0  F016         	call	i1_RegisterRead
 15986  00003C  6F65               	movwf	??_low_isr& (0+255),b
 15987  00003E  90D8               	bcf	status,0,c
 15988  000040  3165               	rrcf	??_low_isr& (0+255),w,b
 15989  000042  6E4E               	movwf	_RSSIVal,c
 15990  000044                     i1l189:
 15991                           
 15992                           ; BSR set to: 0
 15993  000044  C068  FFE0         	movff	??_low_isr+3,bsr
 15994  000048  C067  FFE8         	movff	??_low_isr+2,wreg
 15995  00004C  C066  FFD8         	movff	??_low_isr+1,status
 15996  000050  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15997  000052  0010               	retfie	
 15998  000054                     __end_of_low_isr:
 15999                           	opt stack 0
 16000                           tblptru	equ	0xFF8
 16001                           tblptrh	equ	0xFF7
 16002                           tblptrl	equ	0xFF6
 16003                           tablat	equ	0xFF5
 16004                           prodh	equ	0xFF4
 16005                           prodl	equ	0xFF3
 16006                           intcon	equ	0xFF2
 16007                           intcon2	equ	0xFF1
 16008                           intcon3	equ	0xFF0
 16009                           postinc0	equ	0xFEE
 16010                           wreg	equ	0xFE8
 16011                           indf1	equ	0xFE7
 16012                           postinc1	equ	0xFE6
 16013                           postdec1	equ	0xFE5
 16014                           fsr1h	equ	0xFE2
 16015                           fsr1l	equ	0xFE1
 16016                           bsr	equ	0xFE0
 16017                           indf2	equ	0xFDF
 16018                           postinc2	equ	0xFDE
 16019                           postdec2	equ	0xFDD
 16020                           fsr2h	equ	0xFDA
 16021                           fsr2l	equ	0xFD9
 16022                           status	equ	0xFD8
 16023                           
 16024 ;; *************** function i1_RegisterRead *****************
 16025 ;; Defined at:
 16026 ;;		line 200 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 16027 ;; Parameters:    Size  Location     Type
 16028 ;;  address         1    wreg     unsigned char 
 16029 ;; Auto vars:     Size  Location     Type
 16030 ;;  address         1    1[BANK0 ] unsigned char 
 16031 ;;  RegisterRead    1    4[BANK0 ] unsigned char 
 16032 ;;  RegisterRead    1    3[BANK0 ] unsigned char 
 16033 ;;  RegisterRead    1    2[BANK0 ] unsigned char 
 16034 ;; Return value:  Size  Location     Type
 16035 ;;                  1    wreg      unsigned char 
 16036 ;; Registers used:
 16037 ;;		wreg, status,2, status,0, cstack
 16038 ;; Tracked objects:
 16039 ;;		On entry : F/0
 16040 ;;		On exit  : F/0
 16041 ;;		Unchanged: 0/0
 16042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16044 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16046 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16047 ;;Total ram usage:        4 bytes
 16048 ;; Hardware stack levels used:    1
 16049 ;; Hardware stack levels required when called:    6
 16050 ;; This function calls:
 16051 ;;		i1_SPI1_Exchange8bit
 16052 ;; This function is called by:
 16053 ;;		_low_isr
 16054 ;; This function uses a non-reentrant model
 16055 ;;
 16056                           
 16057                           	psect	text77
 16058  002DE0                     __ptext77:
 16059                           	opt stack 0
 16060  002DE0                     i1_RegisterRead:
 16061                           	opt stack 9
 16062                           
 16063                           ; BSR set to: 0
 16064                           ;incstack = 0
 16065                           ;i1RegisterRead@address stored from wreg
 16066  002DE0  6F61               	movwf	i1RegisterRead@address& (0+255),b
 16067                           
 16068                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 16069                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 16070  002DE2  0E00               	movlw	0
 16071  002DE4  B6F0               	btfsc	intcon3,3,c	;volatile
 16072  002DE6  0E01               	movlw	1
 16073  002DE8  0100               	movlb	0	; () banked
 16074  002DEA  6F63               	movwf	i1RegisterRead@IRQ1select& (0+255),b
 16075                           
 16076                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 16077  002DEC  0E00               	movlw	0
 16078  002DEE  B8F2               	btfsc	intcon,4,c	;volatile
 16079  002DF0  0E01               	movlw	1
 16080  002DF2  6F64               	movwf	i1RegisterRead@IRQ0select& (0+255),b
 16081                           
 16082                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 16083  002DF4  98F2               	bcf	intcon,4,c	;volatile
 16084                           
 16085                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 16086  002DF6  96F0               	bcf	intcon3,3,c	;volatile
 16087                           
 16088                           ;drv_mrf_miwi_89xa.c: 211: LATDbits.LATD1 = 0;
 16089  002DF8  928C               	bcf	3980,1,c	;volatile
 16090                           
 16091                           ; BSR set to: 0
 16092                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 16093  002DFA  8D61               	bsf	i1RegisterRead@address& (0+255),6,b
 16094                           
 16095                           ; BSR set to: 0
 16096                           ;drv_mrf_miwi_89xa.c: 213: SPI1_Exchange8bit(address);
 16097  002DFC  5161               	movf	i1RegisterRead@address& (0+255),w,b
 16098  002DFE  ECB8  F019         	call	i1_SPI1_Exchange8bit
 16099                           
 16100                           ;drv_mrf_miwi_89xa.c: 214: value = SPI1_Exchange8bit(0x00);
 16101  002E02  0E00               	movlw	0
 16102  002E04  ECB8  F019         	call	i1_SPI1_Exchange8bit
 16103  002E08  0100               	movlb	0	; () banked
 16104  002E0A  6F62               	movwf	i1RegisterRead@value& (0+255),b
 16105                           
 16106                           ; BSR set to: 0
 16107                           ;drv_mrf_miwi_89xa.c: 215: LATDbits.LATD1 = 1;
 16108  002E0C  828C               	bsf	3980,1,c	;volatile
 16109                           
 16110                           ; BSR set to: 0
 16111                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 16112  002E0E  B163               	btfsc	i1RegisterRead@IRQ1select& (0+255),0,b
 16113  002E10  D002               	bra	i1u615_25
 16114  002E12  96F0               	bcf	intcon3,3,c	;volatile
 16115  002E14  D001               	bra	i1u615_26
 16116  002E16                     i1u615_25:
 16117  002E16  86F0               	bsf	intcon3,3,c	;volatile
 16118  002E18                     i1u615_26:
 16119                           
 16120                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 16121  002E18  0100               	movlb	0	; () banked
 16122  002E1A  B164               	btfsc	i1RegisterRead@IRQ0select& (0+255),0,b
 16123  002E1C  D002               	bra	i1u616_25
 16124  002E1E  98F2               	bcf	intcon,4,c	;volatile
 16125  002E20  D001               	bra	i1u616_26
 16126  002E22                     i1u616_25:
 16127  002E22  88F2               	bsf	intcon,4,c	;volatile
 16128  002E24                     i1u616_26:
 16129                           
 16130                           ;drv_mrf_miwi_89xa.c: 222: return value;
 16131  002E24  0100               	movlb	0	; () banked
 16132  002E26  5162               	movf	i1RegisterRead@value& (0+255),w,b
 16133                           
 16134                           ; BSR set to: 0
 16135  002E28  0012               	return		;funcret
 16136  002E2A                     __end_ofi1_RegisterRead:
 16137                           	opt stack 0
 16138                           tblptru	equ	0xFF8
 16139                           tblptrh	equ	0xFF7
 16140                           tblptrl	equ	0xFF6
 16141                           tablat	equ	0xFF5
 16142                           prodh	equ	0xFF4
 16143                           prodl	equ	0xFF3
 16144                           intcon	equ	0xFF2
 16145                           intcon2	equ	0xFF1
 16146                           intcon3	equ	0xFF0
 16147                           postinc0	equ	0xFEE
 16148                           wreg	equ	0xFE8
 16149                           indf1	equ	0xFE7
 16150                           postinc1	equ	0xFE6
 16151                           postdec1	equ	0xFE5
 16152                           fsr1h	equ	0xFE2
 16153                           fsr1l	equ	0xFE1
 16154                           bsr	equ	0xFE0
 16155                           indf2	equ	0xFDF
 16156                           postinc2	equ	0xFDE
 16157                           postdec2	equ	0xFDD
 16158                           fsr2h	equ	0xFDA
 16159                           fsr2l	equ	0xFD9
 16160                           status	equ	0xFD8
 16161                           
 16162 ;; *************** function i1_SPI1_Exchange8bit *****************
 16163 ;; Defined at:
 16164 ;;		line 51 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 16165 ;; Parameters:    Size  Location     Type
 16166 ;;  data            1    wreg     unsigned char 
 16167 ;; Auto vars:     Size  Location     Type
 16168 ;;  data            1    0[BANK0 ] unsigned char 
 16169 ;; Return value:  Size  Location     Type
 16170 ;;                  1    wreg      unsigned char 
 16171 ;; Registers used:
 16172 ;;		wreg, status,2
 16173 ;; Tracked objects:
 16174 ;;		On entry : 0/0
 16175 ;;		On exit  : 0/0
 16176 ;;		Unchanged: 0/0
 16177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16181 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16182 ;;Total ram usage:        1 bytes
 16183 ;; Hardware stack levels used:    1
 16184 ;; Hardware stack levels required when called:    5
 16185 ;; This function calls:
 16186 ;;		Nothing
 16187 ;; This function is called by:
 16188 ;;		i1_RegisterRead
 16189 ;; This function uses a non-reentrant model
 16190 ;;
 16191                           
 16192                           	psect	text78
 16193  003370                     __ptext78:
 16194                           	opt stack 0
 16195  003370                     i1_SPI1_Exchange8bit:
 16196                           	opt stack 9
 16197                           
 16198                           ; BSR set to: 0
 16199                           ;incstack = 0
 16200                           ;i1SPI1_Exchange8bit@data stored from wreg
 16201  003370  0100               	movlb	0	; () banked
 16202  003372  6F60               	movwf	i1SPI1_Exchange8bit@data& (0+255),b
 16203                           
 16204                           ;spi.c: 53: SSP1CON1bits.WCOL = 0;
 16205  003374  9EC6               	bcf	4038,7,c	;volatile
 16206                           
 16207                           ;spi.c: 55: SSP1BUF = data;
 16208  003376  C060  FFC9         	movff	i1SPI1_Exchange8bit@data,4041	;volatile
 16209  00337A                     i1l857:
 16210  00337A  A0C7               	btfss	4039,0,c	;volatile
 16211  00337C  D7FE               	goto	i1l857
 16212                           
 16213                           ;spi.c: 58: }
 16214                           ;spi.c: 60: return (SSP1BUF);
 16215  00337E  50C9               	movf	4041,w,c	;volatile
 16216  003380  0012               	return		;funcret
 16217  003382                     __end_ofi1_SPI1_Exchange8bit:
 16218                           	opt stack 0
 16219                           tblptru	equ	0xFF8
 16220                           tblptrh	equ	0xFF7
 16221                           tblptrl	equ	0xFF6
 16222                           tablat	equ	0xFF5
 16223                           prodh	equ	0xFF4
 16224                           prodl	equ	0xFF3
 16225                           intcon	equ	0xFF2
 16226                           intcon2	equ	0xFF1
 16227                           intcon3	equ	0xFF0
 16228                           postinc0	equ	0xFEE
 16229                           wreg	equ	0xFE8
 16230                           indf1	equ	0xFE7
 16231                           postinc1	equ	0xFE6
 16232                           postdec1	equ	0xFE5
 16233                           fsr1h	equ	0xFE2
 16234                           fsr1l	equ	0xFE1
 16235                           bsr	equ	0xFE0
 16236                           indf2	equ	0xFDF
 16237                           postinc2	equ	0xFDE
 16238                           postdec2	equ	0xFDD
 16239                           fsr2h	equ	0xFDA
 16240                           fsr2l	equ	0xFD9
 16241                           status	equ	0xFD8
 16242                           
 16243 ;; *************** function _high_isr *****************
 16244 ;; Defined at:
 16245 ;;		line 1240 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 16246 ;; Parameters:    Size  Location     Type
 16247 ;;		None
 16248 ;; Auto vars:     Size  Location     Type
 16249 ;;  ackInfoIndex    1   55[COMRAM] unsigned char 
 16250 ;;  i               1   58[COMRAM] unsigned char 
 16251 ;;  fifo_stat       1   48[COMRAM] unsigned char 
 16252 ;;  ackPacket       4   49[COMRAM] unsigned char [4]
 16253 ;;  counter         2   46[COMRAM] unsigned int 
 16254 ;;  BankIndex       1   57[COMRAM] unsigned char 
 16255 ;;  PacketLen       1   56[COMRAM] unsigned char 
 16256 ;;  RxPacketPtr     1   54[COMRAM] unsigned char 
 16257 ;;  bAck            1   53[COMRAM] unsigned char 
 16258 ;; Return value:  Size  Location     Type
 16259 ;;		None               void
 16260 ;; Registers used:
 16261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16262 ;; Tracked objects:
 16263 ;;		On entry : 0/0
 16264 ;;		On exit  : 0/0
 16265 ;;		Unchanged: 0/0
 16266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16268 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16269 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16270 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16271 ;;Total ram usage:       23 bytes
 16272 ;; Hardware stack levels used:    1
 16273 ;; Hardware stack levels required when called:    4
 16274 ;; This function calls:
 16275 ;;		_UserInterruptHandler
 16276 ;;		i2_MiWi_TickGet
 16277 ;;		i2_RegisterRead
 16278 ;;		i2_SPI1_Exchange8bit
 16279 ;;		i2_TxPacket
 16280 ;; This function is called by:
 16281 ;;		Interrupt level 2
 16282 ;; This function uses a non-reentrant model
 16283 ;;
 16284                           
 16285                           	psect	intcode
 16286  000008                     __pintcode:
 16287                           	opt stack 0
 16288  000008                     _high_isr:
 16289                           	opt stack 9
 16290                           
 16291                           ;incstack = 0
 16292  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16293  00000A  CFE1 F029          	movff	fsr1l,??_high_isr+4
 16294  00000E  CFE2 F02A          	movff	fsr1h,??_high_isr+5
 16295  000012  EF92  F008         	goto	int_func
 16296                           tblptru	equ	0xFF8
 16297                           tblptrh	equ	0xFF7
 16298                           tblptrl	equ	0xFF6
 16299                           tablat	equ	0xFF5
 16300                           prodh	equ	0xFF4
 16301                           prodl	equ	0xFF3
 16302                           intcon	equ	0xFF2
 16303                           intcon2	equ	0xFF1
 16304                           intcon3	equ	0xFF0
 16305                           postinc0	equ	0xFEE
 16306                           wreg	equ	0xFE8
 16307                           indf1	equ	0xFE7
 16308                           postinc1	equ	0xFE6
 16309                           postdec1	equ	0xFE5
 16310                           fsr1h	equ	0xFE2
 16311                           fsr1l	equ	0xFE1
 16312                           bsr	equ	0xFE0
 16313                           indf2	equ	0xFDF
 16314                           postinc2	equ	0xFDE
 16315                           postdec2	equ	0xFDD
 16316                           fsr2h	equ	0xFDA
 16317                           fsr2l	equ	0xFD9
 16318                           status	equ	0xFD8
 16319                           
 16320                           	psect	intcode_body
 16321  001124                     __pintcode_body:
 16322                           	opt stack 9
 16323  001124                     int_func:
 16324                           	opt stack 9
 16325  001124  CFD9 F02B          	movff	fsr2l,??_high_isr+6
 16326  001128  CFDA F02C          	movff	fsr2h,??_high_isr+7
 16327  00112C  CFF3 F02D          	movff	prodl,??_high_isr+8
 16328  001130  CFF4 F02E          	movff	prodh,??_high_isr+9
 16329                           
 16330                           ;drv_mrf_miwi_89xa.c: 1255: if( INTCON3bits.INT1IF && INTCON3bits.INT1IE )
 16331  001134  B0F0               	btfsc	intcon3,0,c	;volatile
 16332  001136  A6F0               	btfss	intcon3,3,c	;volatile
 16333  001138  D1A6               	goto	i2l7472
 16334                           
 16335                           ;drv_mrf_miwi_89xa.c: 1256: {
 16336                           ;drv_mrf_miwi_89xa.c: 1257: if(RF_Mode == 0x60)
 16337  00113A  0E60               	movlw	96
 16338  00113C  0100               	movlb	0	; () banked
 16339  00113E  19E1               	xorwf	_RF_Mode& (0+255),w,b
 16340  001140  E001 D19D          	bnz	i2l7466
 16341                           
 16342                           ; BSR set to: 0
 16343                           ;drv_mrf_miwi_89xa.c: 1258: {
 16344                           ;drv_mrf_miwi_89xa.c: 1259: uint8_t RxPacketPtr;
 16345                           ;drv_mrf_miwi_89xa.c: 1260: uint8_t PacketLen;
 16346                           ;drv_mrf_miwi_89xa.c: 1261: uint8_t BankIndex;
 16347                           ;drv_mrf_miwi_89xa.c: 1262: uint16_t counter;
 16348                           ;drv_mrf_miwi_89xa.c: 1263: bool bAck;
 16349                           ;drv_mrf_miwi_89xa.c: 1264: uint8_t ackPacket[4];
 16350                           ;drv_mrf_miwi_89xa.c: 1270: RSSILock = RSSIVal;
 16351  001144  C04E  F0E2         	movff	_RSSIVal,_RSSILock
 16352                           
 16353                           ;drv_mrf_miwi_89xa.c: 1272: LATAbits.LATA5 = 0;
 16354  001148  9A89               	bcf	3977,5,c	;volatile
 16355                           
 16356                           ; BSR set to: 0
 16357                           ;drv_mrf_miwi_89xa.c: 1274: PacketLen = SPI1_Exchange8bit(0x00);
 16358  00114A  0E00               	movlw	0
 16359  00114C  ECC1  F019         	call	i2_SPI1_Exchange8bit
 16360  001150  6E39               	movwf	high_isr@PacketLen,c
 16361                           
 16362                           ;drv_mrf_miwi_89xa.c: 1275: LATAbits.LATA5 = 1;
 16363  001152  8A89               	bsf	3977,5,c	;volatile
 16364                           
 16365                           ;drv_mrf_miwi_89xa.c: 1278: for(BankIndex = 0; BankIndex < 2; BankIndex++)
 16366  001154  6A3A               	clrf	high_isr@BankIndex,c
 16367  001156                     i2l7316:
 16368                           
 16369                           ;drv_mrf_miwi_89xa.c: 1279: {
 16370                           ;drv_mrf_miwi_89xa.c: 1280: if( RxPacket[BankIndex].flags.bits.Valid == 0 )
 16371  001156  503A               	movf	high_isr@BankIndex,w,c
 16372  001158  0D39               	mullw	57
 16373  00115A  0E8C               	movlw	low _RxPacket
 16374  00115C  24F3               	addwf	prodl,w,c
 16375  00115E  6ED9               	movwf	fsr2l,c
 16376  001160  0E02               	movlw	high _RxPacket
 16377  001162  20F4               	addwfc	prodh,w,c
 16378  001164  6EDA               	movwf	fsr2h,c
 16379  001166  0102               	movlb	2	; () banked
 16380  001168  A0DF               	btfss	indf2,0,c
 16381  00116A  D004               	goto	i2l7324
 16382                           
 16383                           ; BSR set to: 2
 16384  00116C  2A3A               	incf	high_isr@BankIndex,f,c
 16385                           
 16386                           ; BSR set to: 2
 16387  00116E  0E01               	movlw	1
 16388  001170  643A               	cpfsgt	high_isr@BankIndex,c
 16389  001172  D7F1               	goto	i2l7316
 16390  001174                     i2l7324:
 16391                           
 16392                           ; BSR set to: 2
 16393                           ;drv_mrf_miwi_89xa.c: 1283: }
 16394                           ;drv_mrf_miwi_89xa.c: 1284: }
 16395                           ;drv_mrf_miwi_89xa.c: 1287: if( PacketLen == 2 )
 16396  001174  0E02               	movlw	2
 16397  001176  1839               	xorwf	high_isr@PacketLen,w,c
 16398  001178  E103               	bnz	i2l197
 16399                           
 16400                           ; BSR set to: 2
 16401                           ;drv_mrf_miwi_89xa.c: 1288: {
 16402                           ;drv_mrf_miwi_89xa.c: 1289: bAck = 1;
 16403  00117A  0E01               	movlw	1
 16404  00117C  6E36               	movwf	high_isr@bAck,c
 16405                           
 16406                           ;drv_mrf_miwi_89xa.c: 1290: }
 16407  00117E  D001               	goto	i2l7328
 16408  001180                     i2l197:
 16409                           
 16410                           ; BSR set to: 2
 16411                           ;drv_mrf_miwi_89xa.c: 1291: else
 16412                           ;drv_mrf_miwi_89xa.c: 1292: {
 16413                           ;drv_mrf_miwi_89xa.c: 1293: bAck = 0;
 16414  001180  6A36               	clrf	high_isr@bAck,c
 16415  001182                     i2l7328:
 16416                           
 16417                           ; BSR set to: 2
 16418                           ;drv_mrf_miwi_89xa.c: 1294: }
 16419                           ;drv_mrf_miwi_89xa.c: 1297: if( PacketLen >= (35+0+8+8+4) || PacketLen == 0 || (BankInde
      +                          x >= 2 && (bAck==0)) )
 16420  001182  0E37               	movlw	55
 16421  001184  6039               	cpfslt	high_isr@PacketLen,c
 16422  001186  D007               	goto	i2l7336
 16423                           
 16424                           ; BSR set to: 2
 16425  001188  5039               	movf	high_isr@PacketLen,w,c
 16426  00118A  E005               	bz	i2l7336
 16427                           
 16428                           ; BSR set to: 2
 16429  00118C  0E01               	movlw	1
 16430  00118E  643A               	cpfsgt	high_isr@BankIndex,c
 16431  001190  D012               	goto	i2l199
 16432                           
 16433                           ; BSR set to: 2
 16434  001192  5036               	movf	high_isr@bAck,w,c
 16435  001194  E110               	bnz	i2l199
 16436  001196                     i2l7336:
 16437                           
 16438                           ;drv_mrf_miwi_89xa.c: 1300: {
 16439                           ;drv_mrf_miwi_89xa.c: 1301: uint8_t fifo_stat = RegisterRead(0x1A00>>8);
 16440  001196  0E1A               	movlw	26
 16441  001198  EC15  F017         	call	i2_RegisterRead
 16442  00119C  D008               	goto	L8
 16443  00119E                     i2l204:
 16444                           
 16445                           ;drv_mrf_miwi_89xa.c: 1303: {
 16446                           ;drv_mrf_miwi_89xa.c: 1304: LATAbits.LATA5 = 0;
 16447  00119E  9A89               	bcf	3977,5,c	;volatile
 16448                           
 16449                           ;drv_mrf_miwi_89xa.c: 1306: SPI1_Exchange8bit(0x00);
 16450  0011A0  0E00               	movlw	0
 16451  0011A2  ECC1  F019         	call	i2_SPI1_Exchange8bit
 16452                           
 16453                           ;drv_mrf_miwi_89xa.c: 1307: LATAbits.LATA5 = 1;
 16454  0011A6  8A89               	bsf	3977,5,c	;volatile
 16455                           
 16456                           ;drv_mrf_miwi_89xa.c: 1308: fifo_stat = RegisterRead(0x1A00>>8);
 16457  0011A8  0E1A               	movlw	26
 16458  0011AA  EC15  F017         	call	i2_RegisterRead
 16459  0011AE                     L8:
 16460  0011AE  6E31               	movwf	high_isr@fifo_stat,c
 16461  0011B0  B231               	btfsc	high_isr@fifo_stat,1,c
 16462  0011B2  D7F5               	goto	i2l204
 16463  0011B4  D166               	goto	i2l7468
 16464  0011B6                     i2l199:
 16465                           
 16466                           ; BSR set to: 2
 16467                           ;drv_mrf_miwi_89xa.c: 1312: }
 16468                           ;drv_mrf_miwi_89xa.c: 1314: RxPacketPtr = 0;
 16469  0011B6  6A37               	clrf	high_isr@RxPacketPtr,c
 16470                           
 16471                           ;drv_mrf_miwi_89xa.c: 1315: counter = PacketLen;
 16472  0011B8  C039  F02F         	movff	high_isr@PacketLen,high_isr@counter
 16473  0011BC  6A30               	clrf	high_isr@counter+1,c
 16474                           
 16475                           ;drv_mrf_miwi_89xa.c: 1317: while(counter >= 1)
 16476  0011BE  D15B               	goto	i2l7464
 16477  0011C0                     i2l7346:
 16478                           
 16479                           ;drv_mrf_miwi_89xa.c: 1320: if(1)
 16480  0011C0  062F               	decf	high_isr@counter,f,c
 16481  0011C2  A0D8               	btfss	status,0,c
 16482  0011C4  0630               	decf	high_isr@counter+1,f,c
 16483                           
 16484                           ;drv_mrf_miwi_89xa.c: 1321: {
 16485                           ;drv_mrf_miwi_89xa.c: 1323: if( bAck )
 16486  0011C6  5036               	movf	high_isr@bAck,w,c
 16487  0011C8  E009               	bz	i2l210
 16488                           
 16489                           ;drv_mrf_miwi_89xa.c: 1324: {
 16490                           ;drv_mrf_miwi_89xa.c: 1325: LATAbits.LATA5 = 0;
 16491  0011CA  9A89               	bcf	3977,5,c	;volatile
 16492                           
 16493                           ;drv_mrf_miwi_89xa.c: 1327: ackPacket[RxPacketPtr++] = SPI1_Exchange8bit(0x00);
 16494  0011CC  5037               	movf	high_isr@RxPacketPtr,w,c
 16495  0011CE  0F32               	addlw	low high_isr@ackPacket
 16496  0011D0  6ED9               	movwf	fsr2l,c
 16497  0011D2  6ADA               	clrf	fsr2h,c
 16498  0011D4  0E00               	movlw	0
 16499  0011D6  ECC1  F019         	call	i2_SPI1_Exchange8bit
 16500  0011DA  D017               	goto	L10
 16501  0011DC                     i2l210:
 16502                           
 16503                           ;drv_mrf_miwi_89xa.c: 1331: else
 16504                           ;drv_mrf_miwi_89xa.c: 1332: {
 16505                           ;drv_mrf_miwi_89xa.c: 1333: LATAbits.LATA5 = 0;
 16506  0011DC  9A89               	bcf	3977,5,c	;volatile
 16507                           
 16508                           ;drv_mrf_miwi_89xa.c: 1335: RxPacket[BankIndex].Payload[RxPacketPtr++] = SPI1_Exchange8b
      +                          it(0x00);
 16509  0011DE  503A               	movf	high_isr@BankIndex,w,c
 16510  0011E0  0D39               	mullw	57
 16511  0011E2  0E8C               	movlw	low _RxPacket
 16512  0011E4  6E25               	movwf	??_high_isr& (0+255),c
 16513  0011E6  0E02               	movlw	high _RxPacket
 16514  0011E8  6E26               	movwf	(??_high_isr+1)& (0+255),c
 16515  0011EA  2A25               	incf	??_high_isr,f,c
 16516  0011EC  0E00               	movlw	0
 16517  0011EE  2226               	addwfc	??_high_isr+1,f,c
 16518  0011F0  50F3               	movf	prodl,w,c
 16519  0011F2  2625               	addwf	??_high_isr,f,c
 16520  0011F4  50F4               	movf	prodh,w,c
 16521  0011F6  2226               	addwfc	??_high_isr+1,f,c
 16522  0011F8  5037               	movf	high_isr@RxPacketPtr,w,c
 16523  0011FA  2425               	addwf	??_high_isr,w,c
 16524  0011FC  6ED9               	movwf	fsr2l,c
 16525  0011FE  0E00               	movlw	0
 16526  001200  2026               	addwfc	??_high_isr+1,w,c
 16527  001202  6EDA               	movwf	fsr2h,c
 16528  001204  0E00               	movlw	0
 16529  001206  ECC1  F019         	call	i2_SPI1_Exchange8bit
 16530  00120A                     L10:
 16531  00120A  6EDF               	movwf	indf2,c
 16532  00120C  2A37               	incf	high_isr@RxPacketPtr,f,c
 16533                           
 16534                           ;drv_mrf_miwi_89xa.c: 1336: LATAbits.LATA5 = 1;
 16535  00120E  8A89               	bsf	3977,5,c	;volatile
 16536                           
 16537                           ;drv_mrf_miwi_89xa.c: 1337: }
 16538                           ;drv_mrf_miwi_89xa.c: 1340: if( RxPacketPtr >= PacketLen )
 16539  001210  5039               	movf	high_isr@PacketLen,w,c
 16540  001212  5C37               	subwf	high_isr@RxPacketPtr,w,c
 16541  001214  E201 D12F          	bnc	i2l7464
 16542                           
 16543                           ;drv_mrf_miwi_89xa.c: 1341: {
 16544                           ;drv_mrf_miwi_89xa.c: 1342: uint8_t i;
 16545                           ;drv_mrf_miwi_89xa.c: 1344: if( bAck )
 16546  001218  5036               	movf	high_isr@bAck,w,c
 16547  00121A  E024               	bz	i2l213
 16548                           
 16549                           ;drv_mrf_miwi_89xa.c: 1345: {
 16550                           ;drv_mrf_miwi_89xa.c: 1347: if( ( ackPacket[0] & 0x03 ) == 0x02 )
 16551  00121C  5032               	movf	high_isr@ackPacket,w,c
 16552  00121E  0B03               	andlw	3
 16553  001220  0A02               	xorlw	2
 16554  001222  E108               	bnz	i2l7378
 16555                           
 16556                           ;drv_mrf_miwi_89xa.c: 1348: {
 16557                           ;drv_mrf_miwi_89xa.c: 1349: if( ackPacket[1] == TxMACSeq )
 16558  001224  504F               	movf	_TxMACSeq,w,c
 16559  001226  1833               	xorwf	high_isr@ackPacket+1,w,c
 16560  001228  E001 D12B          	bnz	i2l7468
 16561                           
 16562                           ;drv_mrf_miwi_89xa.c: 1350: {
 16563                           ;drv_mrf_miwi_89xa.c: 1351: hasAck = 1;
 16564  00122C  0E01               	movlw	1
 16565  00122E  0100               	movlb	0	; () banked
 16566  001230  6FE9               	movwf	_hasAck& (0+255),b	;volatile
 16567                           
 16568                           ;drv_mrf_miwi_89xa.c: 1354: goto RETURN_HERE;
 16569  001232  D127               	goto	i2l7468
 16570  001234                     i2l7378:
 16571                           
 16572                           ;drv_mrf_miwi_89xa.c: 1356: else
 16573                           ;drv_mrf_miwi_89xa.c: 1358: if( BankIndex >= 2 )
 16574  001234  0E01               	movlw	1
 16575  001236  643A               	cpfsgt	high_isr@BankIndex,c
 16576  001238  D001               	goto	i2l7382
 16577  00123A  D7AD               	goto	i2l7336
 16578  00123C                     i2l7382:
 16579                           
 16580                           ;drv_mrf_miwi_89xa.c: 1362: }
 16581                           ;drv_mrf_miwi_89xa.c: 1363: RxPacket[BankIndex].Payload[0] = ackPacket[0];
 16582  00123C  503A               	movf	high_isr@BankIndex,w,c
 16583  00123E  0D39               	mullw	57
 16584  001240  0E8D               	movlw	low (_RxPacket+1)
 16585  001242  24F3               	addwf	prodl,w,c
 16586  001244  6ED9               	movwf	fsr2l,c
 16587  001246  0E02               	movlw	high (_RxPacket+1)
 16588  001248  20F4               	addwfc	prodh,w,c
 16589  00124A  6EDA               	movwf	fsr2h,c
 16590  00124C  C032  FFDF         	movff	high_isr@ackPacket,indf2
 16591                           
 16592                           ;drv_mrf_miwi_89xa.c: 1364: RxPacket[BankIndex].Payload[1] = ackPacket[1];
 16593  001250  503A               	movf	high_isr@BankIndex,w,c
 16594  001252  0D39               	mullw	57
 16595  001254  0E8E               	movlw	low (_RxPacket+2)
 16596  001256  24F3               	addwf	prodl,w,c
 16597  001258  6ED9               	movwf	fsr2l,c
 16598  00125A  0E02               	movlw	high (_RxPacket+2)
 16599  00125C  20F4               	addwfc	prodh,w,c
 16600  00125E  6EDA               	movwf	fsr2h,c
 16601  001260  C033  FFDF         	movff	high_isr@ackPacket+1,indf2
 16602  001264                     i2l213:
 16603                           
 16604                           ;drv_mrf_miwi_89xa.c: 1366: }
 16605                           ;drv_mrf_miwi_89xa.c: 1368: RxPacket[BankIndex].PayloadLen = PacketLen;
 16606  001264  503A               	movf	high_isr@BankIndex,w,c
 16607  001266  0D39               	mullw	57
 16608  001268  0EC4               	movlw	low (_RxPacket+56)
 16609  00126A  24F3               	addwf	prodl,w,c
 16610  00126C  6ED9               	movwf	fsr2l,c
 16611  00126E  0E02               	movlw	high (_RxPacket+56)
 16612  001270  20F4               	addwfc	prodh,w,c
 16613  001272  6EDA               	movwf	fsr2h,c
 16614  001274  C039  FFDF         	movff	high_isr@PacketLen,indf2
 16615                           
 16616                           ;drv_mrf_miwi_89xa.c: 1385: {
 16617                           ;drv_mrf_miwi_89xa.c: 1386: uint8_t ackInfoIndex = 0xFF;
 16618  001278  6838               	setf	high_isr@ackInfoIndex,c
 16619                           
 16620                           ;drv_mrf_miwi_89xa.c: 1388: if( RxPacket[BankIndex].Payload[0] & 0x40 )
 16621  00127A  503A               	movf	high_isr@BankIndex,w,c
 16622  00127C  0D39               	mullw	57
 16623  00127E  0E8D               	movlw	low (_RxPacket+1)
 16624  001280  24F3               	addwf	prodl,w,c
 16625  001282  6ED9               	movwf	fsr2l,c
 16626  001284  0E02               	movlw	high (_RxPacket+1)
 16627  001286  20F4               	addwfc	prodh,w,c
 16628  001288  6EDA               	movwf	fsr2h,c
 16629  00128A  ACDF               	btfss	indf2,6,c
 16630  00128C  D033               	goto	i2l7398
 16631                           
 16632                           ; BSR set to: 2
 16633                           ;drv_mrf_miwi_89xa.c: 1389: {
 16634                           ;drv_mrf_miwi_89xa.c: 1390: for(i = 0; i < MACInitParams.actionFlags.bits.PAddrLength; i
      +                          ++)
 16635  00128E  6A3B               	clrf	high_isr@i,c
 16636  001290  D028               	goto	i2l7396
 16637  001292                     i2l7388:
 16638                           
 16639                           ; BSR set to: 0
 16640                           ;drv_mrf_miwi_89xa.c: 1391: {
 16641                           ;drv_mrf_miwi_89xa.c: 1392: if( RxPacket[BankIndex].Payload[2+i] != MACInitParams.PAddre
      +                          ss[i] )
 16642  001292  503B               	movf	high_isr@i,w,c
 16643  001294  25D7               	addwf	(_MACInitParams+1)& (0+255),w,b
 16644  001296  6ED9               	movwf	fsr2l,c
 16645  001298  0E00               	movlw	0
 16646  00129A  21D8               	addwfc	(_MACInitParams+2)& (0+255),w,b
 16647  00129C  6EDA               	movwf	fsr2h,c
 16648  00129E  503A               	movf	high_isr@BankIndex,w,c
 16649  0012A0  0D39               	mullw	57
 16650  0012A2  0E8C               	movlw	low _RxPacket
 16651  0012A4  6E26               	movwf	(??_high_isr+1)& (0+255),c
 16652  0012A6  0E02               	movlw	high _RxPacket
 16653  0012A8  6E27               	movwf	(??_high_isr+2)& (0+255),c
 16654  0012AA  0E03               	movlw	3
 16655  0012AC  2626               	addwf	??_high_isr+1,f,c
 16656  0012AE  0E00               	movlw	0
 16657  0012B0  2227               	addwfc	??_high_isr+2,f,c
 16658  0012B2  50F3               	movf	prodl,w,c
 16659  0012B4  2626               	addwf	??_high_isr+1,f,c
 16660  0012B6  50F4               	movf	prodh,w,c
 16661  0012B8  2227               	addwfc	??_high_isr+2,f,c
 16662  0012BA  503B               	movf	high_isr@i,w,c
 16663  0012BC  2426               	addwf	??_high_isr+1,w,c
 16664  0012BE  6EE1               	movwf	fsr1l,c
 16665  0012C0  0E00               	movlw	0
 16666  0012C2  2027               	addwfc	??_high_isr+2,w,c
 16667  0012C4  6EE2               	movwf	fsr1h,c
 16668  0012C6  50DE               	movf	postinc2,w,c
 16669  0012C8  18E6               	xorwf	postinc1,w,c
 16670  0012CA  E00A               	bz	i2l7394
 16671                           
 16672                           ; BSR set to: 0
 16673                           ;drv_mrf_miwi_89xa.c: 1395: RxPacket[BankIndex].PayloadLen = 0;
 16674                           
 16675                           ; BSR set to: 0
 16676  0012CC  503A               	movf	high_isr@BankIndex,w,c
 16677  0012CE  0D39               	mullw	57
 16678  0012D0  0EC4               	movlw	low (_RxPacket+56)
 16679  0012D2  24F3               	addwf	prodl,w,c
 16680  0012D4  6ED9               	movwf	fsr2l,c
 16681  0012D6  0E02               	movlw	high (_RxPacket+56)
 16682  0012D8  20F4               	addwfc	prodh,w,c
 16683  0012DA  6EDA               	movwf	fsr2h,c
 16684  0012DC  6ADF               	clrf	indf2,c
 16685                           
 16686                           ;drv_mrf_miwi_89xa.c: 1396: goto IGNORE_HERE;
 16687  0012DE  D75B               	goto	i2l7336
 16688  0012E0                     i2l7394:
 16689                           
 16690                           ; BSR set to: 0
 16691  0012E0  2A3B               	incf	high_isr@i,f,c
 16692  0012E2                     i2l7396:
 16693  0012E2  0100               	movlb	0	; () banked
 16694  0012E4  31D6               	rrcf	_MACInitParams& (0+255),w,b
 16695  0012E6  32E8               	rrcf	wreg,f,c
 16696  0012E8  32E8               	rrcf	wreg,f,c
 16697  0012EA  0B0F               	andlw	15
 16698  0012EC  6E25               	movwf	??_high_isr& (0+255),c
 16699  0012EE  5025               	movf	??_high_isr,w,c
 16700  0012F0  5C3B               	subwf	high_isr@i,w,c
 16701  0012F2  E3CF               	bnc	i2l7388
 16702  0012F4                     i2l7398:
 16703                           
 16704                           ;drv_mrf_miwi_89xa.c: 1397: }
 16705                           ;drv_mrf_miwi_89xa.c: 1398: }
 16706                           ;drv_mrf_miwi_89xa.c: 1399: }
 16707                           ;drv_mrf_miwi_89xa.c: 1402: if( (RxPacket[BankIndex].Payload[0] & 0x20) )
 16708  0012F4  503A               	movf	high_isr@BankIndex,w,c
 16709  0012F6  0D39               	mullw	57
 16710  0012F8  0E8D               	movlw	low (_RxPacket+1)
 16711  0012FA  24F3               	addwf	prodl,w,c
 16712  0012FC  6ED9               	movwf	fsr2l,c
 16713  0012FE  0E02               	movlw	high (_RxPacket+1)
 16714  001300  20F4               	addwfc	prodh,w,c
 16715  001302  6EDA               	movwf	fsr2h,c
 16716  001304  0102               	movlb	2	; () banked
 16717  001306  AADF               	btfss	indf2,5,c
 16718  001308  D034               	goto	i2l223
 16719                           
 16720                           ; BSR set to: 2
 16721                           ;drv_mrf_miwi_89xa.c: 1403: {
 16722                           ;drv_mrf_miwi_89xa.c: 1405: for(i = 0; i < 2; i++)
 16723  00130A  6A3B               	clrf	high_isr@i,c
 16724  00130C                     i2l7406:
 16725                           
 16726                           ;drv_mrf_miwi_89xa.c: 1406: {
 16727                           ;drv_mrf_miwi_89xa.c: 1407: ackPacket[i] = MACTxBuffer[i];
 16728  00130C  0E00               	movlw	low _MACTxBuffer
 16729  00130E  243B               	addwf	high_isr@i,w,c
 16730  001310  6ED9               	movwf	fsr2l,c
 16731  001312  6ADA               	clrf	fsr2h,c
 16732  001314  0E01               	movlw	high _MACTxBuffer
 16733  001316  22DA               	addwfc	fsr2h,f,c
 16734  001318  503B               	movf	high_isr@i,w,c
 16735  00131A  0F32               	addlw	low high_isr@ackPacket
 16736  00131C  6EE1               	movwf	fsr1l,c
 16737  00131E  6AE2               	clrf	fsr1h,c
 16738  001320  CFDF FFE7          	movff	indf2,indf1
 16739  001324  2A3B               	incf	high_isr@i,f,c
 16740  001326  0E01               	movlw	1
 16741  001328  643B               	cpfsgt	high_isr@i,c
 16742  00132A  D7F0               	goto	i2l7406
 16743                           
 16744                           ;drv_mrf_miwi_89xa.c: 1408: }
 16745                           ;drv_mrf_miwi_89xa.c: 1409: MACTxBuffer[0] = 0x02 | 0x04;
 16746  00132C  0E06               	movlw	6
 16747  00132E  0101               	movlb	1	; () banked
 16748  001330  6F00               	movwf	_MACTxBuffer& (0+255),b	;volatile
 16749                           
 16750                           ; BSR set to: 1
 16751                           ;drv_mrf_miwi_89xa.c: 1410: MACTxBuffer[1] = RxPacket[BankIndex].Payload[1];
 16752  001332  503A               	movf	high_isr@BankIndex,w,c
 16753  001334  0D39               	mullw	57
 16754  001336  0E8E               	movlw	low (_RxPacket+2)
 16755  001338  24F3               	addwf	prodl,w,c
 16756  00133A  6ED9               	movwf	fsr2l,c
 16757  00133C  0E02               	movlw	high (_RxPacket+2)
 16758  00133E  20F4               	addwfc	prodh,w,c
 16759  001340  6EDA               	movwf	fsr2h,c
 16760  001342  50DF               	movf	indf2,w,c
 16761  001344  6F01               	movwf	(_MACTxBuffer+1)& (0+255),b	;volatile
 16762                           
 16763                           ; BSR set to: 1
 16764                           ;drv_mrf_miwi_89xa.c: 1411: INTCON3bits.INT1IF = 0;
 16765  001346  90F0               	bcf	intcon3,0,c	;volatile
 16766                           
 16767                           ; BSR set to: 1
 16768                           ;drv_mrf_miwi_89xa.c: 1412: TxPacket(2, 0);
 16769  001348  6A11               	clrf	i2TxPacket@CCA,c
 16770  00134A  0E02               	movlw	2
 16771  00134C  ECB3  F00D         	call	i2_TxPacket
 16772                           
 16773                           ;drv_mrf_miwi_89xa.c: 1415: for(i = 0; i < 2; i++)
 16774  001350  6A3B               	clrf	high_isr@i,c
 16775  001352                     i2l7426:
 16776                           
 16777                           ;drv_mrf_miwi_89xa.c: 1416: {
 16778                           ;drv_mrf_miwi_89xa.c: 1417: MACTxBuffer[i] = ackPacket[i];
 16779  001352  503B               	movf	high_isr@i,w,c
 16780  001354  0F32               	addlw	low high_isr@ackPacket
 16781  001356  6ED9               	movwf	fsr2l,c
 16782  001358  6ADA               	clrf	fsr2h,c
 16783  00135A  0E00               	movlw	low _MACTxBuffer
 16784  00135C  243B               	addwf	high_isr@i,w,c
 16785  00135E  6EE1               	movwf	fsr1l,c
 16786  001360  6AE2               	clrf	fsr1h,c
 16787  001362  0E01               	movlw	high _MACTxBuffer
 16788  001364  22E2               	addwfc	fsr1h,f,c
 16789  001366  CFDF FFE7          	movff	indf2,indf1
 16790  00136A  2A3B               	incf	high_isr@i,f,c
 16791  00136C  0E01               	movlw	1
 16792  00136E  643B               	cpfsgt	high_isr@i,c
 16793  001370  D7F0               	goto	i2l7426
 16794  001372                     i2l223:
 16795                           
 16796                           ;drv_mrf_miwi_89xa.c: 1418: }
 16797                           ;drv_mrf_miwi_89xa.c: 1419: }
 16798                           ;drv_mrf_miwi_89xa.c: 1423: for(i = 0; i < 5; i++)
 16799  001372  6A3B               	clrf	high_isr@i,c
 16800  001374                     i2l7436:
 16801                           
 16802                           ;drv_mrf_miwi_89xa.c: 1424: {
 16803                           ;drv_mrf_miwi_89xa.c: 1425: if( AckInfo[i].Valid && (AckInfo[i].Seq == RxPacket[BankInde
      +                          x].Payload[1]) )
 16804  001374  503B               	movf	high_isr@i,w,c
 16805  001376  0D06               	mullw	6
 16806  001378  0E5F               	movlw	low _AckInfo
 16807  00137A  24F3               	addwf	prodl,w,c
 16808  00137C  6ED9               	movwf	fsr2l,c
 16809  00137E  0E01               	movlw	high _AckInfo
 16810  001380  20F4               	addwfc	prodh,w,c
 16811  001382  6EDA               	movwf	fsr2h,c
 16812  001384  50DF               	movf	indf2,w,c
 16813  001386  E026               	bz	i2l7442
 16814  001388  503A               	movf	high_isr@BankIndex,w,c
 16815  00138A  0D39               	mullw	57
 16816  00138C  0E8E               	movlw	low (_RxPacket+2)
 16817  00138E  24F3               	addwf	prodl,w,c
 16818  001390  6ED9               	movwf	fsr2l,c
 16819  001392  0E02               	movlw	high (_RxPacket+2)
 16820  001394  20F4               	addwfc	prodh,w,c
 16821  001396  6EDA               	movwf	fsr2h,c
 16822  001398  503B               	movf	high_isr@i,w,c
 16823  00139A  0D06               	mullw	6
 16824  00139C  0E60               	movlw	low (_AckInfo+1)
 16825  00139E  24F3               	addwf	prodl,w,c
 16826  0013A0  6EE1               	movwf	fsr1l,c
 16827  0013A2  0E01               	movlw	high (_AckInfo+1)
 16828  0013A4  20F4               	addwfc	prodh,w,c
 16829  0013A6  6EE2               	movwf	fsr1h,c
 16830  0013A8  50DE               	movf	postinc2,w,c
 16831  0013AA  18E6               	xorwf	postinc1,w,c
 16832  0013AC  E113               	bnz	i2l7442
 16833                           
 16834                           ;drv_mrf_miwi_89xa.c: 1426: {
 16835                           ;drv_mrf_miwi_89xa.c: 1427: AckInfo[i].startTick = MiWi_TickGet();
 16836  0013AE  EC7F  F016         	call	i2_MiWi_TickGet	;wreg free
 16837  0013B2  503B               	movf	high_isr@i,w,c
 16838  0013B4  0D06               	mullw	6
 16839  0013B6  0E61               	movlw	low (_AckInfo+2)
 16840  0013B8  24F3               	addwf	prodl,w,c
 16841  0013BA  6ED9               	movwf	fsr2l,c
 16842  0013BC  0E01               	movlw	high (_AckInfo+2)
 16843  0013BE  20F4               	addwfc	prodh,w,c
 16844  0013C0  6EDA               	movwf	fsr2h,c
 16845  0013C2  C001  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 16846  0013C6  C002  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 16847  0013CA  C003  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 16848  0013CE  C004  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 16849                           
 16850                           ;drv_mrf_miwi_89xa.c: 1428: break;
 16851  0013D2  D012               	goto	i2l7452
 16852  0013D4                     i2l7442:
 16853                           
 16854                           ;drv_mrf_miwi_89xa.c: 1429: }
 16855                           ;drv_mrf_miwi_89xa.c: 1430: if( (ackInfoIndex == 0xFF) && (AckInfo[i].Valid == 0) )
 16856  0013D4  2838               	incf	high_isr@ackInfoIndex,w,c
 16857  0013D6  E10C               	bnz	i2l7448
 16858  0013D8  503B               	movf	high_isr@i,w,c
 16859  0013DA  0D06               	mullw	6
 16860  0013DC  0E5F               	movlw	low _AckInfo
 16861  0013DE  24F3               	addwf	prodl,w,c
 16862  0013E0  6ED9               	movwf	fsr2l,c
 16863  0013E2  0E01               	movlw	high _AckInfo
 16864  0013E4  20F4               	addwfc	prodh,w,c
 16865  0013E6  6EDA               	movwf	fsr2h,c
 16866  0013E8  50DF               	movf	indf2,w,c
 16867  0013EA  E102               	bnz	i2l7448
 16868                           
 16869                           ;drv_mrf_miwi_89xa.c: 1431: {
 16870                           ;drv_mrf_miwi_89xa.c: 1432: ackInfoIndex = i;
 16871  0013EC  C03B  F038         	movff	high_isr@i,high_isr@ackInfoIndex
 16872  0013F0                     i2l7448:
 16873  0013F0  2A3B               	incf	high_isr@i,f,c
 16874  0013F2  0E04               	movlw	4
 16875  0013F4  643B               	cpfsgt	high_isr@i,c
 16876  0013F6  D7BE               	goto	i2l7436
 16877  0013F8                     i2l7452:
 16878                           
 16879                           ;drv_mrf_miwi_89xa.c: 1433: }
 16880                           ;drv_mrf_miwi_89xa.c: 1434: }
 16881                           ;drv_mrf_miwi_89xa.c: 1436: if( i >= 5 )
 16882  0013F8  0E04               	movlw	4
 16883  0013FA  643B               	cpfsgt	high_isr@i,c
 16884  0013FC  D042               	goto	i2l7468
 16885                           
 16886                           ;drv_mrf_miwi_89xa.c: 1437: {
 16887                           ;drv_mrf_miwi_89xa.c: 1438: if( ackInfoIndex < 5 )
 16888  0013FE  0E05               	movlw	5
 16889  001400  6038               	cpfslt	high_isr@ackInfoIndex,c
 16890  001402  D02E               	goto	i2l7462
 16891                           
 16892                           ;drv_mrf_miwi_89xa.c: 1439: {
 16893                           ;drv_mrf_miwi_89xa.c: 1440: AckInfo[ackInfoIndex].Valid = 1;
 16894  001404  5038               	movf	high_isr@ackInfoIndex,w,c
 16895  001406  0D06               	mullw	6
 16896  001408  0E5F               	movlw	low _AckInfo
 16897  00140A  24F3               	addwf	prodl,w,c
 16898  00140C  6ED9               	movwf	fsr2l,c
 16899  00140E  0E01               	movlw	high _AckInfo
 16900  001410  20F4               	addwfc	prodh,w,c
 16901  001412  6EDA               	movwf	fsr2h,c
 16902  001414  0E01               	movlw	1
 16903  001416  6EDF               	movwf	indf2,c
 16904                           
 16905                           ;drv_mrf_miwi_89xa.c: 1441: AckInfo[ackInfoIndex].Seq = RxPacket[BankIndex].Payload[1];
 16906  001418  503A               	movf	high_isr@BankIndex,w,c
 16907  00141A  0D39               	mullw	57
 16908  00141C  0E8E               	movlw	low (_RxPacket+2)
 16909  00141E  24F3               	addwf	prodl,w,c
 16910  001420  6ED9               	movwf	fsr2l,c
 16911  001422  0E02               	movlw	high (_RxPacket+2)
 16912  001424  20F4               	addwfc	prodh,w,c
 16913  001426  6EDA               	movwf	fsr2h,c
 16914  001428  5038               	movf	high_isr@ackInfoIndex,w,c
 16915  00142A  0D06               	mullw	6
 16916  00142C  0E60               	movlw	low (_AckInfo+1)
 16917  00142E  24F3               	addwf	prodl,w,c
 16918  001430  6EE1               	movwf	fsr1l,c
 16919  001432  0E01               	movlw	high (_AckInfo+1)
 16920  001434  20F4               	addwfc	prodh,w,c
 16921  001436  6EE2               	movwf	fsr1h,c
 16922  001438  CFDF FFE7          	movff	indf2,indf1
 16923                           
 16924                           ;drv_mrf_miwi_89xa.c: 1442: AckInfo[ackInfoIndex].startTick = MiWi_TickGet();
 16925  00143C  EC7F  F016         	call	i2_MiWi_TickGet	;wreg free
 16926  001440  5038               	movf	high_isr@ackInfoIndex,w,c
 16927  001442  0D06               	mullw	6
 16928  001444  0E61               	movlw	low (_AckInfo+2)
 16929  001446  24F3               	addwf	prodl,w,c
 16930  001448  6ED9               	movwf	fsr2l,c
 16931  00144A  0E01               	movlw	high (_AckInfo+2)
 16932  00144C  20F4               	addwfc	prodh,w,c
 16933  00144E  6EDA               	movwf	fsr2h,c
 16934  001450  C001  FFDE         	movff	?i2_MiWi_TickGet,postinc2
 16935  001454  C002  FFDE         	movff	?i2_MiWi_TickGet+1,postinc2
 16936  001458  C003  FFDE         	movff	?i2_MiWi_TickGet+2,postinc2
 16937  00145C  C004  FFDE         	movff	?i2_MiWi_TickGet+3,postinc2
 16938  001460                     i2l7462:
 16939                           
 16940                           ;drv_mrf_miwi_89xa.c: 1443: }
 16941                           ;drv_mrf_miwi_89xa.c: 1446: RxPacket[BankIndex].flags.bits.Valid = 1;
 16942  001460  503A               	movf	high_isr@BankIndex,w,c
 16943  001462  0D39               	mullw	57
 16944  001464  0E8C               	movlw	low _RxPacket
 16945  001466  24F3               	addwf	prodl,w,c
 16946  001468  6ED9               	movwf	fsr2l,c
 16947  00146A  0E02               	movlw	high _RxPacket
 16948  00146C  20F4               	addwfc	prodh,w,c
 16949  00146E  6EDA               	movwf	fsr2h,c
 16950  001470  0102               	movlb	2	; () banked
 16951  001472  80DF               	bsf	indf2,0,c
 16952  001474  D006               	goto	i2l7468
 16953  001476                     i2l7464:
 16954  001476  502F               	movf	high_isr@counter,w,c
 16955  001478  1030               	iorwf	high_isr@counter+1,w,c
 16956  00147A  E003               	bz	i2l7468
 16957  00147C  D6A1               	goto	i2l7346
 16958  00147E                     i2l7466:
 16959                           
 16960                           ; BSR set to: 0
 16961                           ;drv_mrf_miwi_89xa.c: 1461: else
 16962                           ;drv_mrf_miwi_89xa.c: 1462: {
 16963                           ;drv_mrf_miwi_89xa.c: 1464: IRQ1_Received = 1;
 16964  00147E  0E01               	movlw	1
 16965  001480  6FDB               	movwf	_IRQ1_Received& (0+255),b	;volatile
 16966  001482                     i2l7468:
 16967                           
 16968                           ;drv_mrf_miwi_89xa.c: 1468: INTCON3bits.INT1IF = 0;
 16969  001482  90F0               	bcf	intcon3,0,c	;volatile
 16970                           
 16971                           ;drv_mrf_miwi_89xa.c: 1470: __nop();
 16972  001484  F000               	nop	
 16973  001486                     i2l7472:
 16974                           
 16975                           ;drv_mrf_miwi_89xa.c: 1471: }
 16976                           ;drv_mrf_miwi_89xa.c: 1475: {
 16977                           ;drv_mrf_miwi_89xa.c: 1476: if(INTCONbits.INT0IF && INTCONbits.INT0IE)
 16978  001486  B2F2               	btfsc	intcon,1,c	;volatile
 16979  001488  A8F2               	btfss	intcon,4,c	;volatile
 16980  00148A  D00C               	goto	i2l7482
 16981                           
 16982                           ;drv_mrf_miwi_89xa.c: 1477: {
 16983                           ;drv_mrf_miwi_89xa.c: 1478: INTCONbits.INT0IF = 0;
 16984  00148C  92F2               	bcf	intcon,1,c	;volatile
 16985                           
 16986                           ;drv_mrf_miwi_89xa.c: 1481: if(RF_Mode == 0x60)
 16987  00148E  0E60               	movlw	96
 16988  001490  0100               	movlb	0	; () banked
 16989  001492  19E1               	xorwf	_RF_Mode& (0+255),w,b
 16990  001494  E107               	bnz	i2l7482
 16991                           
 16992                           ; BSR set to: 0
 16993                           ;drv_mrf_miwi_89xa.c: 1482: {
 16994                           ;drv_mrf_miwi_89xa.c: 1483: RSSIVal = (RegisterRead(0x2800>>8))>>1;
 16995  001496  0E28               	movlw	40
 16996  001498  EC15  F017         	call	i2_RegisterRead
 16997  00149C  6E25               	movwf	??_high_isr& (0+255),c
 16998  00149E  90D8               	bcf	status,0,c
 16999  0014A0  3025               	rrcf	??_high_isr,w,c
 17000  0014A2  6E4E               	movwf	_RSSIVal,c
 17001  0014A4                     i2l7482:
 17002                           
 17003                           ;drv_mrf_miwi_89xa.c: 1484: }
 17004                           ;drv_mrf_miwi_89xa.c: 1486: }
 17005                           ;drv_mrf_miwi_89xa.c: 1487: }
 17006                           ;drv_mrf_miwi_89xa.c: 1491: if(PIR1bits.TMR1IF)
 17007  0014A4  B09E               	btfsc	3998,0,c	;volatile
 17008                           
 17009                           ;drv_mrf_miwi_89xa.c: 1492: {
 17010                           ;drv_mrf_miwi_89xa.c: 1493: if(PIE1bits.TMR1IE)
 17011  0014A6  A09D               	btfss	3997,0,c	;volatile
 17012  0014A8  D006               	goto	i2l7494
 17013                           
 17014                           ;drv_mrf_miwi_89xa.c: 1494: {
 17015                           ;drv_mrf_miwi_89xa.c: 1496: PIR1bits.TMR1IF = 0;
 17016  0014AA  909E               	bcf	3998,0,c	;volatile
 17017                           
 17018                           ;drv_mrf_miwi_89xa.c: 1497: timerExtension1++;
 17019  0014AC  2A50               	incf	_timerExtension1,f,c	;volatile
 17020                           
 17021                           ;drv_mrf_miwi_89xa.c: 1498: if(timerExtension1 == 0)
 17022  0014AE  5050               	movf	_timerExtension1,w,c	;volatile
 17023  0014B0  E102               	bnz	i2l7494
 17024                           
 17025                           ;drv_mrf_miwi_89xa.c: 1499: {
 17026                           ;drv_mrf_miwi_89xa.c: 1500: timerExtension2++;
 17027  0014B2  0100               	movlb	0	; () banked
 17028  0014B4  2BED               	incf	_timerExtension2& (0+255),f,b	;volatile
 17029  0014B6                     i2l7494:
 17030                           
 17031                           ;drv_mrf_miwi_89xa.c: 1501: }
 17032                           ;drv_mrf_miwi_89xa.c: 1502: }
 17033                           ;drv_mrf_miwi_89xa.c: 1503: }
 17034                           ;drv_mrf_miwi_89xa.c: 1505: UserInterruptHandler();
 17035  0014B6  ECEA  F019         	call	_UserInterruptHandler	;wreg free
 17036  0014BA  C02E  FFF4         	movff	??_high_isr+9,prodh
 17037  0014BE  C02D  FFF3         	movff	??_high_isr+8,prodl
 17038  0014C2  C02C  FFDA         	movff	??_high_isr+7,fsr2h
 17039  0014C6  C02B  FFD9         	movff	??_high_isr+6,fsr2l
 17040  0014CA  C02A  FFE2         	movff	??_high_isr+5,fsr1h
 17041  0014CE  C029  FFE1         	movff	??_high_isr+4,fsr1l
 17042  0014D2  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17043  0014D4  0011               	retfie		f
 17044  0014D6                     __end_of_high_isr:
 17045                           	opt stack 0
 17046                           tblptru	equ	0xFF8
 17047                           tblptrh	equ	0xFF7
 17048                           tblptrl	equ	0xFF6
 17049                           tablat	equ	0xFF5
 17050                           prodh	equ	0xFF4
 17051                           prodl	equ	0xFF3
 17052                           intcon	equ	0xFF2
 17053                           intcon2	equ	0xFF1
 17054                           intcon3	equ	0xFF0
 17055                           postinc0	equ	0xFEE
 17056                           wreg	equ	0xFE8
 17057                           indf1	equ	0xFE7
 17058                           postinc1	equ	0xFE6
 17059                           postdec1	equ	0xFE5
 17060                           fsr1h	equ	0xFE2
 17061                           fsr1l	equ	0xFE1
 17062                           bsr	equ	0xFE0
 17063                           indf2	equ	0xFDF
 17064                           postinc2	equ	0xFDE
 17065                           postdec2	equ	0xFDD
 17066                           fsr2h	equ	0xFDA
 17067                           fsr2l	equ	0xFD9
 17068                           status	equ	0xFD8
 17069                           
 17070 ;; *************** function i2_TxPacket *****************
 17071 ;; Defined at:
 17072 ;;		line 288 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;  TxPacketLen     1    wreg     unsigned char 
 17075 ;;  CCA             1   16[COMRAM] unsigned char 
 17076 ;; Auto vars:     Size  Location     Type
 17077 ;;  TxPacketLen     1   21[COMRAM] unsigned char 
 17078 ;;  TxPacket        4   27[COMRAM] struct _MIWI_TICK
 17079 ;;  TxPacket        4   23[COMRAM] struct _MIWI_TICK
 17080 ;;  TxPacket        1   35[COMRAM] unsigned char 
 17081 ;;  TxPacket        1   34[COMRAM] unsigned char 
 17082 ;;  TxPacket        1   33[COMRAM] unsigned char 
 17083 ;;  TxPacket        1   32[COMRAM] unsigned char 
 17084 ;;  TxPacket        1   31[COMRAM] unsigned char 
 17085 ;;  TxPacket        1   22[COMRAM] unsigned char 
 17086 ;; Return value:  Size  Location     Type
 17087 ;;                  1    wreg      unsigned char 
 17088 ;; Registers used:
 17089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17090 ;; Tracked objects:
 17091 ;;		On entry : F/1
 17092 ;;		On exit  : 0/0
 17093 ;;		Unchanged: 0/0
 17094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17095 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17096 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17097 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17098 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17099 ;;Total ram usage:       20 bytes
 17100 ;; Hardware stack levels used:    1
 17101 ;; Hardware stack levels required when called:    3
 17102 ;; This function calls:
 17103 ;;		i2_DELAY_10us
 17104 ;;		i2_MiWi_TickGet
 17105 ;;		i2_RegisterRead
 17106 ;;		i2_RegisterSet
 17107 ;;		i2_SetRFMode
 17108 ;;		i2_WriteFIFO
 17109 ;; This function is called by:
 17110 ;;		_high_isr
 17111 ;; This function uses a non-reentrant model
 17112 ;;
 17113                           
 17114                           	psect	text80
 17115  001B66                     __ptext80:
 17116                           	opt stack 0
 17117  001B66                     i2_TxPacket:
 17118                           	opt stack 9
 17119                           
 17120                           ;incstack = 0
 17121                           ;i2TxPacket@TxPacketLen stored from wreg
 17122  001B66  6E16               	movwf	i2TxPacket@TxPacketLen,c
 17123                           
 17124                           ;drv_mrf_miwi_89xa.c: 290: bool status;
 17125                           ;drv_mrf_miwi_89xa.c: 291: uint8_t i;
 17126                           ;drv_mrf_miwi_89xa.c: 292: MIWI_TICK t1, t2;
 17127                           ;drv_mrf_miwi_89xa.c: 294: uint8_t CCARetries;
 17128                           ;drv_mrf_miwi_89xa.c: 295: uint8_t rssival;
 17129                           ;drv_mrf_miwi_89xa.c: 299: uint8_t reTry = 3;
 17130  001B68  0E03               	movlw	3
 17131  001B6A  6E21               	movwf	i2TxPacket@reTry,c
 17132                           
 17133                           ;drv_mrf_miwi_89xa.c: 303: while( reTry-- )
 17134  001B6C  D085               	goto	i2l7284
 17135  001B6E                     i2l88:
 17136                           
 17137                           ;drv_mrf_miwi_89xa.c: 305: {
 17138                           ;drv_mrf_miwi_89xa.c: 306: uint8_t allowedTxFailure;
 17139                           ;drv_mrf_miwi_89xa.c: 307: allowedTxFailure = 0;
 17140  001B6E  6A22               	clrf	i2TxPacket@allowedTxFailure,c
 17141  001B70                     i2l89:
 17142                           
 17143                           ;drv_mrf_miwi_89xa.c: 312: hasAck = 0;
 17144  001B70  0100               	movlb	0	; () banked
 17145  001B72  6BE9               	clrf	_hasAck& (0+255),b	;volatile
 17146                           
 17147                           ;drv_mrf_miwi_89xa.c: 316: CCARetries = 0;
 17148  001B74  6A20               	clrf	i2TxPacket@CCARetries,c
 17149                           
 17150                           ; BSR set to: 0
 17151                           ;drv_mrf_miwi_89xa.c: 318: if( CCA )
 17152  001B76  5011               	movf	i2TxPacket@CCA,w,c
 17153  001B78  E018               	bz	i2l90
 17154  001B7A                     i2l7224:
 17155                           
 17156                           ;drv_mrf_miwi_89xa.c: 322: rssival = RegisterRead(0x2800>>8);
 17157  001B7A  0E28               	movlw	40
 17158  001B7C  EC15  F017         	call	i2_RegisterRead
 17159  001B80  6E23               	movwf	i2TxPacket@rssival,c
 17160                           
 17161                           ;drv_mrf_miwi_89xa.c: 323: rssival = (rssival>>1);
 17162  001B82  90D8               	bcf	status,0,c
 17163  001B84  3223               	rrcf	i2TxPacket@rssival,f,c
 17164                           
 17165                           ;drv_mrf_miwi_89xa.c: 325: if( rssival > 65 )
 17166  001B86  0E41               	movlw	65
 17167  001B88  6423               	cpfsgt	i2TxPacket@rssival,c
 17168  001B8A  D00F               	goto	i2l90
 17169                           
 17170                           ;drv_mrf_miwi_89xa.c: 326: {
 17171                           ;drv_mrf_miwi_89xa.c: 327: if(CCARetries++ > 4 )
 17172  001B8C  2A20               	incf	i2TxPacket@CCARetries,f,c
 17173  001B8E  0420               	decf	i2TxPacket@CCARetries,w,c
 17174  001B90  6E12               	movwf	??i2_TxPacket& (0+255),c
 17175  001B92  0E04               	movlw	4
 17176  001B94  6412               	cpfsgt	??i2_TxPacket,c
 17177  001B96  D001               	goto	i2l7234
 17178  001B98  0C04               	retlw	4
 17179  001B9A                     i2l7234:
 17180                           
 17181                           ;drv_mrf_miwi_89xa.c: 331: }
 17182                           ;drv_mrf_miwi_89xa.c: 332: DELAY_10us(1);
 17183  001B9A  0E01               	movlw	1
 17184  001B9C  6E01               	movwf	i2DELAY_10us@tenMicroSecondCounter,c
 17185  001B9E  6A02               	clrf	i2DELAY_10us@tenMicroSecondCounter+1,c
 17186  001BA0  6A03               	clrf	i2DELAY_10us@tenMicroSecondCounter+2,c
 17187  001BA2  6A04               	clrf	i2DELAY_10us@tenMicroSecondCounter+3,c
 17188  001BA4  EC66  F010         	call	i2_DELAY_10us	;wreg free
 17189                           
 17190                           ;drv_mrf_miwi_89xa.c: 333: goto Start_CCA;
 17191  001BA8  D7E8               	goto	i2l7224
 17192  001BAA                     i2l90:
 17193                           
 17194                           ;drv_mrf_miwi_89xa.c: 334: }
 17195                           ;drv_mrf_miwi_89xa.c: 335: }
 17196                           ;drv_mrf_miwi_89xa.c: 340: INTCONbits.INT0IE = 0;
 17197  001BAA  98F2               	bcf	intcon,4,c	;volatile
 17198                           
 17199                           ;drv_mrf_miwi_89xa.c: 342: INTCON3bits.INT1IE = 0;
 17200  001BAC  96F0               	bcf	intcon3,3,c	;volatile
 17201                           
 17202                           ;drv_mrf_miwi_89xa.c: 343: SetRFMode(0x20);
 17203  001BAE  0E20               	movlw	32
 17204  001BB0  EC36  F015         	call	i2_SetRFMode
 17205                           
 17206                           ;drv_mrf_miwi_89xa.c: 344: RegisterSet(0x1A00 | (0xC8) | 0x01);
 17207  001BB4  0E1A               	movlw	26
 17208  001BB6  6E03               	movwf	i2RegisterSet@setting+1,c
 17209  001BB8  0EC9               	movlw	201
 17210  001BBA  6E02               	movwf	i2RegisterSet@setting,c
 17211  001BBC  ECF0  F017         	call	i2_RegisterSet	;wreg free
 17212                           
 17213                           ;drv_mrf_miwi_89xa.c: 345: WriteFIFO(TxPacketLen);
 17214  001BC0  5016               	movf	i2TxPacket@TxPacketLen,w,c
 17215  001BC2  EC29  F018         	call	i2_WriteFIFO
 17216                           
 17217                           ;drv_mrf_miwi_89xa.c: 346: for(i=0; i< TxPacketLen; i++)
 17218  001BC6  6A24               	clrf	i2TxPacket@i,c
 17219  001BC8  D00A               	goto	i2l7248
 17220  001BCA                     i2l7244:
 17221                           
 17222                           ;drv_mrf_miwi_89xa.c: 347: {
 17223                           ;drv_mrf_miwi_89xa.c: 348: WriteFIFO(MACTxBuffer[i]);
 17224  001BCA  0E00               	movlw	low _MACTxBuffer
 17225  001BCC  2424               	addwf	i2TxPacket@i,w,c
 17226  001BCE  6ED9               	movwf	fsr2l,c
 17227  001BD0  6ADA               	clrf	fsr2h,c
 17228  001BD2  0E01               	movlw	high _MACTxBuffer
 17229  001BD4  22DA               	addwfc	fsr2h,f,c
 17230  001BD6  50DF               	movf	indf2,w,c
 17231  001BD8  EC29  F018         	call	i2_WriteFIFO
 17232  001BDC  2A24               	incf	i2TxPacket@i,f,c
 17233  001BDE                     i2l7248:
 17234  001BDE  5016               	movf	i2TxPacket@TxPacketLen,w,c
 17235  001BE0  5C24               	subwf	i2TxPacket@i,w,c
 17236  001BE2  E3F3               	bnc	i2l7244
 17237                           
 17238                           ;drv_mrf_miwi_89xa.c: 349: }
 17239                           ;drv_mrf_miwi_89xa.c: 350: SetRFMode(0x80);
 17240  001BE4  0E80               	movlw	128
 17241  001BE6  EC36  F015         	call	i2_SetRFMode
 17242                           
 17243                           ;drv_mrf_miwi_89xa.c: 352: INTCONbits.INT0IE = 1;
 17244  001BEA  88F2               	bsf	intcon,4,c	;volatile
 17245                           
 17246                           ;drv_mrf_miwi_89xa.c: 354: INTCON3bits.INT1IE = 1;
 17247  001BEC  86F0               	bsf	intcon3,3,c	;volatile
 17248  001BEE                     i2l7256:
 17249  001BEE  0100               	movlb	0	; () banked
 17250  001BF0  51DB               	movf	_IRQ1_Received& (0+255),w,b	;volatile
 17251  001BF2  E102               	bnz	i2l102
 17252                           
 17253                           ; BSR set to: 0
 17254  001BF4  A0F0               	btfss	intcon3,0,c	;volatile
 17255  001BF6  D7FB               	goto	i2l7256
 17256  001BF8                     i2l102:
 17257                           
 17258                           ; BSR set to: 0
 17259                           ;drv_mrf_miwi_89xa.c: 358: };
 17260                           ;drv_mrf_miwi_89xa.c: 362: IRQ1_Received = 0;
 17261  001BF8  6BDB               	clrf	_IRQ1_Received& (0+255),b	;volatile
 17262                           
 17263                           ; BSR set to: 0
 17264                           ;drv_mrf_miwi_89xa.c: 363: SetRFMode(0x20);
 17265  001BFA  0E20               	movlw	32
 17266  001BFC  EC36  F015         	call	i2_SetRFMode
 17267                           
 17268                           ;drv_mrf_miwi_89xa.c: 364: SetRFMode(0x60);
 17269  001C00  0E60               	movlw	96
 17270  001C02  EC36  F015         	call	i2_SetRFMode
 17271                           
 17272                           ;drv_mrf_miwi_89xa.c: 367: if( (MACTxBuffer[0] & 0x20) > 0 )
 17273  001C06  0101               	movlb	1	; () banked
 17274  001C08  AB00               	btfss	_MACTxBuffer& (0+255),5,b	;volatile
 17275  001C0A  D00E               	goto	i2l7270
 17276                           
 17277                           ; BSR set to: 1
 17278                           ;drv_mrf_miwi_89xa.c: 368: {
 17279                           ;drv_mrf_miwi_89xa.c: 369: TxMACSeq = MACTxBuffer[1];
 17280  001C0C  C101  F04F         	movff	_MACTxBuffer+1,_TxMACSeq	;volatile
 17281                           
 17282                           ; BSR set to: 1
 17283                           ;drv_mrf_miwi_89xa.c: 370: t1 = MiWi_TickGet();
 17284  001C10  EC7F  F016         	call	i2_MiWi_TickGet	;wreg free
 17285  001C14  C001  F018         	movff	?i2_MiWi_TickGet,i2TxPacket@t1
 17286  001C18  C002  F019         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t1+1
 17287  001C1C  C003  F01A         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t1+2
 17288  001C20  C004  F01B         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t1+3
 17289  001C24                     i2l7268:
 17290                           
 17291                           ; BSR set to: 0
 17292                           ;drv_mrf_miwi_89xa.c: 372: {
 17293                           ;drv_mrf_miwi_89xa.c: 373: if( hasAck )
 17294  001C24  51E9               	movf	_hasAck& (0+255),w,b	;volatile
 17295  001C26  E003               	bz	i2l7272
 17296  001C28                     i2l7270:
 17297                           
 17298                           ;drv_mrf_miwi_89xa.c: 374: {
 17299                           ;drv_mrf_miwi_89xa.c: 375: status = 1;
 17300  001C28  0E01               	movlw	1
 17301  001C2A  6E17               	movwf	i2TxPacket@status,c
 17302                           
 17303                           ;drv_mrf_miwi_89xa.c: 376: goto TX_END_HERE;
 17304  001C2C  0C01               	retlw	1
 17305  001C2E                     i2l7272:
 17306                           
 17307                           ; BSR set to: 0
 17308                           ;drv_mrf_miwi_89xa.c: 377: }
 17309                           ;drv_mrf_miwi_89xa.c: 378: t2 = MiWi_TickGet();
 17310  001C2E  EC7F  F016         	call	i2_MiWi_TickGet	;wreg free
 17311  001C32  C001  F01C         	movff	?i2_MiWi_TickGet,i2TxPacket@t2
 17312  001C36  C002  F01D         	movff	?i2_MiWi_TickGet+1,i2TxPacket@t2+1
 17313  001C3A  C003  F01E         	movff	?i2_MiWi_TickGet+2,i2TxPacket@t2+2
 17314  001C3E  C004  F01F         	movff	?i2_MiWi_TickGet+3,i2TxPacket@t2+3
 17315                           
 17316                           ; BSR set to: 0
 17317                           ;drv_mrf_miwi_89xa.c: 379: if( (t2.Val - t1.Val) > ((uint32_t)(16000000)/32)/20 )
 17318  001C42  5018               	movf	i2TxPacket@t1,w,c
 17319  001C44  5C1C               	subwf	i2TxPacket@t2,w,c
 17320  001C46  6E12               	movwf	??i2_TxPacket& (0+255),c
 17321  001C48  5019               	movf	i2TxPacket@t1+1,w,c
 17322  001C4A  581D               	subwfb	i2TxPacket@t2+1,w,c
 17323  001C4C  6E13               	movwf	(??i2_TxPacket+1)& (0+255),c
 17324  001C4E  501A               	movf	i2TxPacket@t1+2,w,c
 17325  001C50  581E               	subwfb	i2TxPacket@t2+2,w,c
 17326  001C52  6E14               	movwf	(??i2_TxPacket+2)& (0+255),c
 17327  001C54  501B               	movf	i2TxPacket@t1+3,w,c
 17328  001C56  581F               	subwfb	i2TxPacket@t2+3,w,c
 17329  001C58  6E15               	movwf	(??i2_TxPacket+3)& (0+255),c
 17330  001C5A  5015               	movf	??i2_TxPacket+3,w,c
 17331  001C5C  1014               	iorwf	??i2_TxPacket+2,w,c
 17332  001C5E  E105               	bnz	i2u625_40
 17333  001C60  0EA9               	movlw	169
 17334  001C62  5C12               	subwf	??i2_TxPacket,w,c
 17335  001C64  0E61               	movlw	97
 17336  001C66  5813               	subwfb	??i2_TxPacket+1,w,c
 17337  001C68  E3DD               	bnc	i2l7268
 17338  001C6A                     i2u625_40:
 17339                           
 17340                           ; BSR set to: 0
 17341                           ;drv_mrf_miwi_89xa.c: 382: }
 17342                           ;drv_mrf_miwi_89xa.c: 383: }
 17343                           ;drv_mrf_miwi_89xa.c: 385: if(allowedTxFailure++ <= 3)
 17344  001C6A  2A22               	incf	i2TxPacket@allowedTxFailure,f,c
 17345  001C6C  0422               	decf	i2TxPacket@allowedTxFailure,w,c
 17346  001C6E  6E12               	movwf	??i2_TxPacket& (0+255),c
 17347  001C70  0E04               	movlw	4
 17348  001C72  6012               	cpfslt	??i2_TxPacket,c
 17349  001C74  D001               	goto	i2l7284
 17350  001C76  D77C               	goto	i2l89
 17351  001C78                     i2l7284:
 17352  001C78  0621               	decf	i2TxPacket@reTry,f,c
 17353  001C7A  2821               	incf	i2TxPacket@reTry,w,c
 17354  001C7C  E001 D777          	bnz	i2l88
 17355                           
 17356                           ;drv_mrf_miwi_89xa.c: 394: }
 17357                           ;drv_mrf_miwi_89xa.c: 395: }
 17358                           ;drv_mrf_miwi_89xa.c: 397: status = 0;
 17359  001C80  6A17               	clrf	i2TxPacket@status,c
 17360  001C82  0012               	return		;funcret
 17361  001C84                     __end_ofi2_TxPacket:
 17362                           	opt stack 0
 17363                           tblptru	equ	0xFF8
 17364                           tblptrh	equ	0xFF7
 17365                           tblptrl	equ	0xFF6
 17366                           tablat	equ	0xFF5
 17367                           prodh	equ	0xFF4
 17368                           prodl	equ	0xFF3
 17369                           intcon	equ	0xFF2
 17370                           intcon2	equ	0xFF1
 17371                           intcon3	equ	0xFF0
 17372                           postinc0	equ	0xFEE
 17373                           wreg	equ	0xFE8
 17374                           indf1	equ	0xFE7
 17375                           postinc1	equ	0xFE6
 17376                           postdec1	equ	0xFE5
 17377                           fsr1h	equ	0xFE2
 17378                           fsr1l	equ	0xFE1
 17379                           bsr	equ	0xFE0
 17380                           indf2	equ	0xFDF
 17381                           postinc2	equ	0xFDE
 17382                           postdec2	equ	0xFDD
 17383                           fsr2h	equ	0xFDA
 17384                           fsr2l	equ	0xFD9
 17385                           status	equ	0xFD8
 17386                           
 17387 ;; *************** function i2_WriteFIFO *****************
 17388 ;; Defined at:
 17389 ;;		line 244 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17390 ;; Parameters:    Size  Location     Type
 17391 ;;  Data            1    wreg     unsigned char 
 17392 ;; Auto vars:     Size  Location     Type
 17393 ;;  Data            1    1[COMRAM] unsigned char 
 17394 ;;  WriteFIFO       1    3[COMRAM] unsigned char 
 17395 ;;  WriteFIFO       1    2[COMRAM] unsigned char 
 17396 ;; Return value:  Size  Location     Type
 17397 ;;		None               void
 17398 ;; Registers used:
 17399 ;;		wreg, status,2, cstack
 17400 ;; Tracked objects:
 17401 ;;		On entry : 0/0
 17402 ;;		On exit  : 0/0
 17403 ;;		Unchanged: 0/0
 17404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17406 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17408 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17409 ;;Total ram usage:        3 bytes
 17410 ;; Hardware stack levels used:    1
 17411 ;; Hardware stack levels required when called:    1
 17412 ;; This function calls:
 17413 ;;		i2_SPI1_Exchange8bit
 17414 ;; This function is called by:
 17415 ;;		i2_TxPacket
 17416 ;; This function uses a non-reentrant model
 17417 ;;
 17418                           
 17419                           	psect	text81
 17420  003052                     __ptext81:
 17421                           	opt stack 0
 17422  003052                     i2_WriteFIFO:
 17423                           	opt stack 10
 17424                           
 17425                           ;incstack = 0
 17426                           ;i2WriteFIFO@Data stored from wreg
 17427  003052  6E02               	movwf	i2WriteFIFO@Data,c
 17428                           
 17429                           ;drv_mrf_miwi_89xa.c: 246: uint8_t IRQ1select = INTCON3bits.INT1IE;
 17430  003054  0E00               	movlw	0
 17431  003056  B6F0               	btfsc	intcon3,3,c	;volatile
 17432  003058  0E01               	movlw	1
 17433  00305A  6E03               	movwf	i2WriteFIFO@IRQ1select,c
 17434                           
 17435                           ;drv_mrf_miwi_89xa.c: 248: bool IRQ0select = INTCONbits.INT0IE;
 17436  00305C  0E00               	movlw	0
 17437  00305E  B8F2               	btfsc	intcon,4,c	;volatile
 17438  003060  0E01               	movlw	1
 17439  003062  6E04               	movwf	i2WriteFIFO@IRQ0select,c
 17440                           
 17441                           ;drv_mrf_miwi_89xa.c: 250: INTCONbits.INT0IE = 0;
 17442  003064  98F2               	bcf	intcon,4,c	;volatile
 17443                           
 17444                           ;drv_mrf_miwi_89xa.c: 253: INTCON3bits.INT1IE = 0;
 17445  003066  96F0               	bcf	intcon3,3,c	;volatile
 17446                           
 17447                           ;drv_mrf_miwi_89xa.c: 254: LATAbits.LATA5 = 0;
 17448  003068  9A89               	bcf	3977,5,c	;volatile
 17449                           
 17450                           ;drv_mrf_miwi_89xa.c: 255: SPI1_Exchange8bit(Data);
 17451  00306A  5002               	movf	i2WriteFIFO@Data,w,c
 17452  00306C  ECC1  F019         	call	i2_SPI1_Exchange8bit
 17453                           
 17454                           ;drv_mrf_miwi_89xa.c: 256: LATAbits.LATA5 = 1;
 17455  003070  8A89               	bsf	3977,5,c	;volatile
 17456                           
 17457                           ;drv_mrf_miwi_89xa.c: 257: INTCON3bits.INT1IE = IRQ1select;
 17458  003072  B003               	btfsc	i2WriteFIFO@IRQ1select,0,c
 17459  003074  D002               	bra	i2u601_45
 17460  003076  96F0               	bcf	intcon3,3,c	;volatile
 17461  003078  D001               	bra	i2u601_46
 17462  00307A                     i2u601_45:
 17463  00307A  86F0               	bsf	intcon3,3,c	;volatile
 17464  00307C                     i2u601_46:
 17465                           
 17466                           ;drv_mrf_miwi_89xa.c: 260: INTCONbits.INT0IE = IRQ0select;
 17467  00307C  B004               	btfsc	i2WriteFIFO@IRQ0select,0,c
 17468  00307E  D002               	bra	i2u602_45
 17469  003080  98F2               	bcf	intcon,4,c	;volatile
 17470  003082  D001               	bra	i2u602_46
 17471  003084                     i2u602_45:
 17472  003084  88F2               	bsf	intcon,4,c	;volatile
 17473  003086                     i2u602_46:
 17474  003086  0012               	return		;funcret
 17475  003088                     __end_ofi2_WriteFIFO:
 17476                           	opt stack 0
 17477                           tblptru	equ	0xFF8
 17478                           tblptrh	equ	0xFF7
 17479                           tblptrl	equ	0xFF6
 17480                           tablat	equ	0xFF5
 17481                           prodh	equ	0xFF4
 17482                           prodl	equ	0xFF3
 17483                           intcon	equ	0xFF2
 17484                           intcon2	equ	0xFF1
 17485                           intcon3	equ	0xFF0
 17486                           postinc0	equ	0xFEE
 17487                           wreg	equ	0xFE8
 17488                           indf1	equ	0xFE7
 17489                           postinc1	equ	0xFE6
 17490                           postdec1	equ	0xFE5
 17491                           fsr1h	equ	0xFE2
 17492                           fsr1l	equ	0xFE1
 17493                           bsr	equ	0xFE0
 17494                           indf2	equ	0xFDF
 17495                           postinc2	equ	0xFDE
 17496                           postdec2	equ	0xFDD
 17497                           fsr2h	equ	0xFDA
 17498                           fsr2l	equ	0xFD9
 17499                           status	equ	0xFD8
 17500                           
 17501 ;; *************** function i2_SetRFMode *****************
 17502 ;; Defined at:
 17503 ;;		line 667 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17504 ;; Parameters:    Size  Location     Type
 17505 ;;  mode            1    wreg     unsigned char 
 17506 ;; Auto vars:     Size  Location     Type
 17507 ;;  mode            1    5[COMRAM] unsigned char 
 17508 ;; Return value:  Size  Location     Type
 17509 ;;		None               void
 17510 ;; Registers used:
 17511 ;;		wreg, status,2, status,0, cstack
 17512 ;; Tracked objects:
 17513 ;;		On entry : 0/0
 17514 ;;		On exit  : 0/0
 17515 ;;		Unchanged: 0/0
 17516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17521 ;;Total ram usage:        1 bytes
 17522 ;; Hardware stack levels used:    1
 17523 ;; Hardware stack levels required when called:    2
 17524 ;; This function calls:
 17525 ;;		i2_RegisterSet
 17526 ;; This function is called by:
 17527 ;;		i2_TxPacket
 17528 ;; This function uses a non-reentrant model
 17529 ;;
 17530                           
 17531                           	psect	text82
 17532  002A6C                     __ptext82:
 17533                           	opt stack 0
 17534  002A6C                     i2_SetRFMode:
 17535                           	opt stack 9
 17536                           
 17537                           ;incstack = 0
 17538                           ;i2SetRFMode@mode stored from wreg
 17539  002A6C  6E06               	movwf	i2SetRFMode@mode,c
 17540                           
 17541                           ;drv_mrf_miwi_89xa.c: 669: switch (mode) {
 17542  002A6E  D02C               	goto	i2l6978
 17543  002A70                     i2l6956:
 17544                           
 17545                           ;drv_mrf_miwi_89xa.c: 671: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x80);
 17546  002A70  6A03               	clrf	i2RegisterSet@setting+1,c
 17547  002A72  0E86               	movlw	134
 17548  002A74  6E02               	movwf	i2RegisterSet@setting,c
 17549  002A76  ECF0  F017         	call	i2_RegisterSet	;wreg free
 17550                           
 17551                           ;drv_mrf_miwi_89xa.c: 672: RF_Mode = 0x80;
 17552  002A7A  0E80               	movlw	128
 17553  002A7C  0100               	movlb	0	; () banked
 17554  002A7E  6FE1               	movwf	_RF_Mode& (0+255),b
 17555                           
 17556                           ;drv_mrf_miwi_89xa.c: 673: break;
 17557  002A80  0C80               	retlw	128
 17558  002A82                     i2l6960:
 17559                           
 17560                           ;drv_mrf_miwi_89xa.c: 675: RegisterSet(0x0000|((0x20 | 0x00 | 0x06) & 0x1F) | 0x60);
 17561  002A82  6A03               	clrf	i2RegisterSet@setting+1,c
 17562  002A84  0E66               	movlw	102
 17563  002A86  6E02               	movwf	i2RegisterSet@setting,c
 17564  002A88  ECF0  F017         	call	i2_RegisterSet	;wreg free
 17565                           
 17566                           ;drv_mrf_miwi_89xa.c: 676: RF_Mode = 0x60;
 17567  002A8C  0E60               	movlw	96
 17568  002A8E  0100               	movlb	0	; () banked
 17569  002A90  6FE1               	movwf	_RF_Mode& (0+255),b
 17570                           
 17571                           ;drv_mrf_miwi_89xa.c: 677: break;
 17572  002A92  0C60               	retlw	96
 17573  002A94                     i2l6964:
 17574                           
 17575                           ;drv_mrf_miwi_89xa.c: 679: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x40);
 17576  002A94  6A03               	clrf	i2RegisterSet@setting+1,c
 17577  002A96  0E46               	movlw	70
 17578  002A98  6E02               	movwf	i2RegisterSet@setting,c
 17579  002A9A  ECF0  F017         	call	i2_RegisterSet	;wreg free
 17580                           
 17581                           ;drv_mrf_miwi_89xa.c: 680: RF_Mode = 0x40;
 17582  002A9E  0E40               	movlw	64
 17583  002AA0  0100               	movlb	0	; () banked
 17584  002AA2  6FE1               	movwf	_RF_Mode& (0+255),b
 17585                           
 17586                           ;drv_mrf_miwi_89xa.c: 681: break;
 17587  002AA4  0C40               	retlw	64
 17588  002AA6                     i2l6968:
 17589                           
 17590                           ;drv_mrf_miwi_89xa.c: 683: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x20);
 17591  002AA6  6A03               	clrf	i2RegisterSet@setting+1,c
 17592  002AA8  0E26               	movlw	38
 17593  002AAA  6E02               	movwf	i2RegisterSet@setting,c
 17594  002AAC  ECF0  F017         	call	i2_RegisterSet	;wreg free
 17595                           
 17596                           ;drv_mrf_miwi_89xa.c: 684: RF_Mode = 0x20;
 17597  002AB0  0E20               	movlw	32
 17598  002AB2  0100               	movlb	0	; () banked
 17599  002AB4  6FE1               	movwf	_RF_Mode& (0+255),b
 17600                           
 17601                           ;drv_mrf_miwi_89xa.c: 685: break;
 17602  002AB6  0C20               	retlw	32
 17603  002AB8                     i2l6972:
 17604                           
 17605                           ;drv_mrf_miwi_89xa.c: 687: RegisterSet(0x0000 | ((0x20 | 0x00 | 0x06) & 0x1F) | 0x00);
 17606  002AB8  6A03               	clrf	i2RegisterSet@setting+1,c
 17607  002ABA  0E06               	movlw	6
 17608  002ABC  6E02               	movwf	i2RegisterSet@setting,c
 17609  002ABE  ECF0  F017         	call	i2_RegisterSet	;wreg free
 17610                           
 17611                           ;drv_mrf_miwi_89xa.c: 688: RF_Mode = 0x00;
 17612  002AC2  0100               	movlb	0	; () banked
 17613  002AC4  6BE1               	clrf	_RF_Mode& (0+255),b
 17614                           
 17615                           ;drv_mrf_miwi_89xa.c: 689: break;
 17616  002AC6  0012               	return	
 17617  002AC8                     i2l6978:
 17618  002AC8  5006               	movf	i2SetRFMode@mode,w,c
 17619                           
 17620                           ; Switch size 1, requested type "speed"
 17621                           ; Number of cases is 5, Range of values is 0 to 128
 17622                           ; switch strategies available:
 17623                           ; Name         Instructions Cycles
 17624                           ; simple_byte           16     9 (average)
 17625                           ;	Chosen strategy is simple_byte
 17626  002ACA  E0F6               	bz	i2l6972
 17627  002ACC  0A20               	xorlw	32	; case 32
 17628  002ACE  E0EB               	bz	i2l6968
 17629  002AD0  0A60               	xorlw	96	; case 64
 17630  002AD2  E0E0               	bz	i2l6964
 17631  002AD4  0A20               	xorlw	32	; case 96
 17632  002AD6  E0D5               	bz	i2l6960
 17633  002AD8  0AE0               	xorlw	224	; case 128
 17634  002ADA  E0CA               	bz	i2l6956
 17635  002ADC  0012               	return		;funcret
 17636  002ADE                     __end_ofi2_SetRFMode:
 17637                           	opt stack 0
 17638                           tblptru	equ	0xFF8
 17639                           tblptrh	equ	0xFF7
 17640                           tblptrl	equ	0xFF6
 17641                           tablat	equ	0xFF5
 17642                           prodh	equ	0xFF4
 17643                           prodl	equ	0xFF3
 17644                           intcon	equ	0xFF2
 17645                           intcon2	equ	0xFF1
 17646                           intcon3	equ	0xFF0
 17647                           postinc0	equ	0xFEE
 17648                           wreg	equ	0xFE8
 17649                           indf1	equ	0xFE7
 17650                           postinc1	equ	0xFE6
 17651                           postdec1	equ	0xFE5
 17652                           fsr1h	equ	0xFE2
 17653                           fsr1l	equ	0xFE1
 17654                           bsr	equ	0xFE0
 17655                           indf2	equ	0xFDF
 17656                           postinc2	equ	0xFDE
 17657                           postdec2	equ	0xFDD
 17658                           fsr2h	equ	0xFDA
 17659                           fsr2l	equ	0xFD9
 17660                           status	equ	0xFD8
 17661                           
 17662 ;; *************** function i2_RegisterSet *****************
 17663 ;; Defined at:
 17664 ;;		line 164 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17665 ;; Parameters:    Size  Location     Type
 17666 ;;  setting         2    1[COMRAM] unsigned int 
 17667 ;; Auto vars:     Size  Location     Type
 17668 ;;  RegisterSet     1    4[COMRAM] unsigned char 
 17669 ;;  RegisterSet     1    3[COMRAM] unsigned char 
 17670 ;; Return value:  Size  Location     Type
 17671 ;;		None               void
 17672 ;; Registers used:
 17673 ;;		wreg, status,2, cstack
 17674 ;; Tracked objects:
 17675 ;;		On entry : 0/0
 17676 ;;		On exit  : 0/0
 17677 ;;		Unchanged: 0/0
 17678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17683 ;;Total ram usage:        4 bytes
 17684 ;; Hardware stack levels used:    1
 17685 ;; Hardware stack levels required when called:    1
 17686 ;; This function calls:
 17687 ;;		i2_SPI1_Exchange8bit
 17688 ;; This function is called by:
 17689 ;;		i2_TxPacket
 17690 ;;		i2_SetRFMode
 17691 ;; This function uses a non-reentrant model
 17692 ;;
 17693                           
 17694                           	psect	text83
 17695  002FE0                     __ptext83:
 17696                           	opt stack 0
 17697  002FE0                     i2_RegisterSet:
 17698                           	opt stack 9
 17699                           
 17700                           ;drv_mrf_miwi_89xa.c: 166: uint8_t IRQ1select = INTCON3bits.INT1IE;
 17701                           
 17702                           ;incstack = 0
 17703  002FE0  0E00               	movlw	0
 17704  002FE2  B6F0               	btfsc	intcon3,3,c	;volatile
 17705  002FE4  0E01               	movlw	1
 17706  002FE6  6E04               	movwf	i2RegisterSet@IRQ1select,c
 17707                           
 17708                           ;drv_mrf_miwi_89xa.c: 168: bool IRQ0select = INTCONbits.INT0IE;
 17709  002FE8  0E00               	movlw	0
 17710  002FEA  B8F2               	btfsc	intcon,4,c	;volatile
 17711  002FEC  0E01               	movlw	1
 17712  002FEE  6E05               	movwf	i2RegisterSet@IRQ0select,c
 17713                           
 17714                           ;drv_mrf_miwi_89xa.c: 169: INTCONbits.INT0IE = 0;
 17715  002FF0  98F2               	bcf	intcon,4,c	;volatile
 17716                           
 17717                           ;drv_mrf_miwi_89xa.c: 172: INTCON3bits.INT1IE = 0;
 17718  002FF2  96F0               	bcf	intcon3,3,c	;volatile
 17719                           
 17720                           ;drv_mrf_miwi_89xa.c: 173: LATDbits.LATD1 = 0;
 17721  002FF4  928C               	bcf	3980,1,c	;volatile
 17722                           
 17723                           ;drv_mrf_miwi_89xa.c: 174: SPI1_Exchange8bit((uint8_t)(setting >> 8));
 17724  002FF6  5003               	movf	i2RegisterSet@setting+1,w,c
 17725  002FF8  ECC1  F019         	call	i2_SPI1_Exchange8bit
 17726                           
 17727                           ;drv_mrf_miwi_89xa.c: 175: SPI1_Exchange8bit((uint8_t)setting);
 17728  002FFC  5002               	movf	i2RegisterSet@setting,w,c
 17729  002FFE  ECC1  F019         	call	i2_SPI1_Exchange8bit
 17730                           
 17731                           ;drv_mrf_miwi_89xa.c: 176: LATDbits.LATD1 = 1;
 17732  003002  828C               	bsf	3980,1,c	;volatile
 17733                           
 17734                           ;drv_mrf_miwi_89xa.c: 177: INTCON3bits.INT1IE = IRQ1select;
 17735  003004  B004               	btfsc	i2RegisterSet@IRQ1select,0,c
 17736  003006  D002               	bra	i2u568_45
 17737  003008  96F0               	bcf	intcon3,3,c	;volatile
 17738  00300A  D001               	bra	i2u568_46
 17739  00300C                     i2u568_45:
 17740  00300C  86F0               	bsf	intcon3,3,c	;volatile
 17741  00300E                     i2u568_46:
 17742                           
 17743                           ;drv_mrf_miwi_89xa.c: 180: INTCONbits.INT0IE = IRQ0select;
 17744  00300E  B005               	btfsc	i2RegisterSet@IRQ0select,0,c
 17745  003010  D002               	bra	i2u569_45
 17746  003012  98F2               	bcf	intcon,4,c	;volatile
 17747  003014  D001               	bra	i2u569_46
 17748  003016                     i2u569_45:
 17749  003016  88F2               	bsf	intcon,4,c	;volatile
 17750  003018                     i2u569_46:
 17751  003018  0012               	return		;funcret
 17752  00301A                     __end_ofi2_RegisterSet:
 17753                           	opt stack 0
 17754                           tblptru	equ	0xFF8
 17755                           tblptrh	equ	0xFF7
 17756                           tblptrl	equ	0xFF6
 17757                           tablat	equ	0xFF5
 17758                           prodh	equ	0xFF4
 17759                           prodl	equ	0xFF3
 17760                           intcon	equ	0xFF2
 17761                           intcon2	equ	0xFF1
 17762                           intcon3	equ	0xFF0
 17763                           postinc0	equ	0xFEE
 17764                           wreg	equ	0xFE8
 17765                           indf1	equ	0xFE7
 17766                           postinc1	equ	0xFE6
 17767                           postdec1	equ	0xFE5
 17768                           fsr1h	equ	0xFE2
 17769                           fsr1l	equ	0xFE1
 17770                           bsr	equ	0xFE0
 17771                           indf2	equ	0xFDF
 17772                           postinc2	equ	0xFDE
 17773                           postdec2	equ	0xFDD
 17774                           fsr2h	equ	0xFDA
 17775                           fsr2l	equ	0xFD9
 17776                           status	equ	0xFD8
 17777                           
 17778 ;; *************** function i2_RegisterRead *****************
 17779 ;; Defined at:
 17780 ;;		line 200 in file "../../../../../framework/driver/mrf_miwi/src/drv_mrf_miwi_89xa.c"
 17781 ;; Parameters:    Size  Location     Type
 17782 ;;  address         1    wreg     unsigned char 
 17783 ;; Auto vars:     Size  Location     Type
 17784 ;;  address         1    1[COMRAM] unsigned char 
 17785 ;;  RegisterRead    1    4[COMRAM] unsigned char 
 17786 ;;  RegisterRead    1    3[COMRAM] unsigned char 
 17787 ;;  RegisterRead    1    2[COMRAM] unsigned char 
 17788 ;; Return value:  Size  Location     Type
 17789 ;;                  1    wreg      unsigned char 
 17790 ;; Registers used:
 17791 ;;		wreg, status,2, status,0, cstack
 17792 ;; Tracked objects:
 17793 ;;		On entry : 0/2
 17794 ;;		On exit  : 0/0
 17795 ;;		Unchanged: 0/0
 17796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17798 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17800 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17801 ;;Total ram usage:        4 bytes
 17802 ;; Hardware stack levels used:    1
 17803 ;; Hardware stack levels required when called:    1
 17804 ;; This function calls:
 17805 ;;		i2_SPI1_Exchange8bit
 17806 ;; This function is called by:
 17807 ;;		_high_isr
 17808 ;;		i2_TxPacket
 17809 ;; This function uses a non-reentrant model
 17810 ;;
 17811                           
 17812                           	psect	text84
 17813  002E2A                     __ptext84:
 17814                           	opt stack 0
 17815  002E2A                     i2_RegisterRead:
 17816                           	opt stack 10
 17817                           
 17818                           ;incstack = 0
 17819                           ;i2RegisterRead@address stored from wreg
 17820  002E2A  6E02               	movwf	i2RegisterRead@address,c
 17821                           
 17822                           ;drv_mrf_miwi_89xa.c: 202: uint8_t value;
 17823                           ;drv_mrf_miwi_89xa.c: 203: uint8_t IRQ1select = INTCON3bits.INT1IE;
 17824  002E2C  0E00               	movlw	0
 17825  002E2E  B6F0               	btfsc	intcon3,3,c	;volatile
 17826  002E30  0E01               	movlw	1
 17827  002E32  6E04               	movwf	i2RegisterRead@IRQ1select,c
 17828                           
 17829                           ;drv_mrf_miwi_89xa.c: 205: bool IRQ0select = INTCONbits.INT0IE;
 17830  002E34  0E00               	movlw	0
 17831  002E36  B8F2               	btfsc	intcon,4,c	;volatile
 17832  002E38  0E01               	movlw	1
 17833  002E3A  6E05               	movwf	i2RegisterRead@IRQ0select,c
 17834                           
 17835                           ;drv_mrf_miwi_89xa.c: 207: INTCONbits.INT0IE = 0;
 17836  002E3C  98F2               	bcf	intcon,4,c	;volatile
 17837                           
 17838                           ;drv_mrf_miwi_89xa.c: 210: INTCON3bits.INT1IE = 0;
 17839  002E3E  96F0               	bcf	intcon3,3,c	;volatile
 17840                           
 17841                           ;drv_mrf_miwi_89xa.c: 211: LATDbits.LATD1 = 0;
 17842  002E40  928C               	bcf	3980,1,c	;volatile
 17843                           
 17844                           ;drv_mrf_miwi_89xa.c: 212: address = (address|0x40);
 17845  002E42  8C02               	bsf	i2RegisterRead@address,6,c
 17846                           
 17847                           ;drv_mrf_miwi_89xa.c: 213: SPI1_Exchange8bit(address);
 17848  002E44  5002               	movf	i2RegisterRead@address,w,c
 17849  002E46  ECC1  F019         	call	i2_SPI1_Exchange8bit
 17850                           
 17851                           ;drv_mrf_miwi_89xa.c: 214: value = SPI1_Exchange8bit(0x00);
 17852  002E4A  0E00               	movlw	0
 17853  002E4C  ECC1  F019         	call	i2_SPI1_Exchange8bit
 17854  002E50  6E03               	movwf	i2RegisterRead@value,c
 17855                           
 17856                           ;drv_mrf_miwi_89xa.c: 215: LATDbits.LATD1 = 1;
 17857  002E52  828C               	bsf	3980,1,c	;volatile
 17858                           
 17859                           ;drv_mrf_miwi_89xa.c: 216: INTCON3bits.INT1IE = IRQ1select;
 17860  002E54  B004               	btfsc	i2RegisterRead@IRQ1select,0,c
 17861  002E56  D002               	bra	i2u599_45
 17862  002E58  96F0               	bcf	intcon3,3,c	;volatile
 17863  002E5A  D001               	bra	i2u599_46
 17864  002E5C                     i2u599_45:
 17865  002E5C  86F0               	bsf	intcon3,3,c	;volatile
 17866  002E5E                     i2u599_46:
 17867                           
 17868                           ;drv_mrf_miwi_89xa.c: 219: INTCONbits.INT0IE = IRQ0select;
 17869  002E5E  B005               	btfsc	i2RegisterRead@IRQ0select,0,c
 17870  002E60  D002               	bra	i2u600_45
 17871  002E62  98F2               	bcf	intcon,4,c	;volatile
 17872  002E64  D001               	bra	i2u600_46
 17873  002E66                     i2u600_45:
 17874  002E66  88F2               	bsf	intcon,4,c	;volatile
 17875  002E68                     i2u600_46:
 17876                           
 17877                           ;drv_mrf_miwi_89xa.c: 222: return value;
 17878  002E68  5003               	movf	i2RegisterRead@value,w,c
 17879  002E6A  0012               	return		;funcret
 17880  002E6C                     __end_ofi2_RegisterRead:
 17881                           	opt stack 0
 17882                           tblptru	equ	0xFF8
 17883                           tblptrh	equ	0xFF7
 17884                           tblptrl	equ	0xFF6
 17885                           tablat	equ	0xFF5
 17886                           prodh	equ	0xFF4
 17887                           prodl	equ	0xFF3
 17888                           intcon	equ	0xFF2
 17889                           intcon2	equ	0xFF1
 17890                           intcon3	equ	0xFF0
 17891                           postinc0	equ	0xFEE
 17892                           wreg	equ	0xFE8
 17893                           indf1	equ	0xFE7
 17894                           postinc1	equ	0xFE6
 17895                           postdec1	equ	0xFE5
 17896                           fsr1h	equ	0xFE2
 17897                           fsr1l	equ	0xFE1
 17898                           bsr	equ	0xFE0
 17899                           indf2	equ	0xFDF
 17900                           postinc2	equ	0xFDE
 17901                           postdec2	equ	0xFDD
 17902                           fsr2h	equ	0xFDA
 17903                           fsr2l	equ	0xFD9
 17904                           status	equ	0xFD8
 17905                           
 17906 ;; *************** function i2_SPI1_Exchange8bit *****************
 17907 ;; Defined at:
 17908 ;;		line 51 in file "../src/system_config/miwikit_pic18f46j50_89xa/spi.c"
 17909 ;; Parameters:    Size  Location     Type
 17910 ;;  data            1    wreg     unsigned char 
 17911 ;; Auto vars:     Size  Location     Type
 17912 ;;  data            1    0[COMRAM] unsigned char 
 17913 ;; Return value:  Size  Location     Type
 17914 ;;                  1    wreg      unsigned char 
 17915 ;; Registers used:
 17916 ;;		wreg, status,2
 17917 ;; Tracked objects:
 17918 ;;		On entry : 0/0
 17919 ;;		On exit  : 0/0
 17920 ;;		Unchanged: 0/0
 17921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17925 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17926 ;;Total ram usage:        1 bytes
 17927 ;; Hardware stack levels used:    1
 17928 ;; This function calls:
 17929 ;;		Nothing
 17930 ;; This function is called by:
 17931 ;;		_high_isr
 17932 ;;		i2_RegisterSet
 17933 ;;		i2_RegisterRead
 17934 ;;		i2_WriteFIFO
 17935 ;; This function uses a non-reentrant model
 17936 ;;
 17937                           
 17938                           	psect	text85
 17939  003382                     __ptext85:
 17940                           	opt stack 0
 17941  003382                     i2_SPI1_Exchange8bit:
 17942                           	opt stack 10
 17943                           
 17944                           ;incstack = 0
 17945                           ;i2SPI1_Exchange8bit@data stored from wreg
 17946  003382  6E01               	movwf	i2SPI1_Exchange8bit@data,c
 17947                           
 17948                           ;spi.c: 53: SSP1CON1bits.WCOL = 0;
 17949  003384  9EC6               	bcf	4038,7,c	;volatile
 17950                           
 17951                           ;spi.c: 55: SSP1BUF = data;
 17952  003386  C001  FFC9         	movff	i2SPI1_Exchange8bit@data,4041	;volatile
 17953  00338A                     i2l857:
 17954  00338A  A0C7               	btfss	4039,0,c	;volatile
 17955  00338C  D7FE               	goto	i2l857
 17956                           
 17957                           ;spi.c: 58: }
 17958                           ;spi.c: 60: return (SSP1BUF);
 17959  00338E  50C9               	movf	4041,w,c	;volatile
 17960  003390  0012               	return		;funcret
 17961  003392                     __end_ofi2_SPI1_Exchange8bit:
 17962                           	opt stack 0
 17963                           tblptru	equ	0xFF8
 17964                           tblptrh	equ	0xFF7
 17965                           tblptrl	equ	0xFF6
 17966                           tablat	equ	0xFF5
 17967                           prodh	equ	0xFF4
 17968                           prodl	equ	0xFF3
 17969                           intcon	equ	0xFF2
 17970                           intcon2	equ	0xFF1
 17971                           intcon3	equ	0xFF0
 17972                           postinc0	equ	0xFEE
 17973                           wreg	equ	0xFE8
 17974                           indf1	equ	0xFE7
 17975                           postinc1	equ	0xFE6
 17976                           postdec1	equ	0xFE5
 17977                           fsr1h	equ	0xFE2
 17978                           fsr1l	equ	0xFE1
 17979                           bsr	equ	0xFE0
 17980                           indf2	equ	0xFDF
 17981                           postinc2	equ	0xFDE
 17982                           postdec2	equ	0xFDD
 17983                           fsr2h	equ	0xFDA
 17984                           fsr2l	equ	0xFD9
 17985                           status	equ	0xFD8
 17986                           
 17987 ;; *************** function i2_MiWi_TickGet *****************
 17988 ;; Defined at:
 17989 ;;		line 114 in file "../src/system_config/miwikit_pic18f46j50_89xa/symbol.c"
 17990 ;; Parameters:    Size  Location     Type
 17991 ;;		None
 17992 ;; Auto vars:     Size  Location     Type
 17993 ;;  MiWi_TickGet    4    6[COMRAM] struct _MIWI_TICK
 17994 ;;  MiWi_TickGet    1    5[COMRAM] unsigned char 
 17995 ;; Return value:  Size  Location     Type
 17996 ;;                  4    0[COMRAM] struct _MIWI_TICK
 17997 ;; Registers used:
 17998 ;;		wreg, status,2, status,0
 17999 ;; Tracked objects:
 18000 ;;		On entry : 0/2
 18001 ;;		On exit  : F/0
 18002 ;;		Unchanged: 0/0
 18003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18005 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18007 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18008 ;;Total ram usage:       10 bytes
 18009 ;; Hardware stack levels used:    1
 18010 ;; This function calls:
 18011 ;;		Nothing
 18012 ;; This function is called by:
 18013 ;;		_high_isr
 18014 ;;		i2_TxPacket
 18015 ;; This function uses a non-reentrant model
 18016 ;;
 18017                           
 18018                           	psect	text86
 18019  002CFE                     __ptext86:
 18020                           	opt stack 0
 18021  002CFE                     i2_MiWi_TickGet:
 18022                           	opt stack 11
 18023                           
 18024                           ;symbol.c: 116: MIWI_TICK currentTime;
 18025                           ;symbol.c: 119: uint8_t failureCounter;
 18026                           ;symbol.c: 122: PIE1bits.TMR1IE = 0;
 18027                           
 18028                           ;incstack = 0
 18029  002CFE  909D               	bcf	3997,0,c	;volatile
 18030                           
 18031                           ;symbol.c: 125: currentTime.byte.b2 = 0;
 18032  002D00  6A09               	clrf	i2MiWi_TickGet@currentTime+2,c
 18033                           
 18034                           ;symbol.c: 126: currentTime.byte.b3 = 0;
 18035  002D02  6A0A               	clrf	i2MiWi_TickGet@currentTime+3,c
 18036                           
 18037                           ;symbol.c: 129: failureCounter = 0;
 18038  002D04  6A06               	clrf	i2MiWi_TickGet@failureCounter,c
 18039  002D06                     i2l907:
 18040                           
 18041                           ;symbol.c: 132: {
 18042                           ;symbol.c: 133: currentTime.byte.b0 = TMR1L;
 18043  002D06  CFCE F007          	movff	4046,i2MiWi_TickGet@currentTime	;volatile
 18044                           
 18045                           ;symbol.c: 134: currentTime.byte.b1 = TMR1H;
 18046  002D0A  CFCF F008          	movff	4047,i2MiWi_TickGet@currentTime+1	;volatile
 18047                           
 18048                           ;symbol.c: 135: } while( currentTime.word.w0 == 0xFFFF && failureCounter++ < 3 );
 18049  002D0E  2807               	incf	i2MiWi_TickGet@currentTime,w,c
 18050  002D10  E108               	bnz	i2l910
 18051  002D12  2808               	incf	i2MiWi_TickGet@currentTime+1,w,c
 18052  002D14  E106               	bnz	i2l910
 18053  002D16  2A06               	incf	i2MiWi_TickGet@failureCounter,f,c
 18054  002D18  0406               	decf	i2MiWi_TickGet@failureCounter,w,c
 18055  002D1A  6E05               	movwf	??i2_MiWi_TickGet& (0+255),c
 18056  002D1C  0E02               	movlw	2
 18057  002D1E  6405               	cpfsgt	??i2_MiWi_TickGet,c
 18058  002D20  D7F2               	goto	i2l907
 18059  002D22                     i2l910:
 18060                           
 18061                           ;symbol.c: 139: if(PIR1bits.TMR1IF)
 18062  002D22  A09E               	btfss	3998,0,c	;volatile
 18063  002D24  D004               	goto	i2l7010
 18064                           
 18065                           ;symbol.c: 140: {
 18066                           ;symbol.c: 143: {
 18067                           ;symbol.c: 145: currentTime.byte.b2++;
 18068  002D26  2A09               	incf	i2MiWi_TickGet@currentTime+2,f,c
 18069                           
 18070                           ;symbol.c: 146: if(timerExtension1 == 0xFF)
 18071  002D28  2850               	incf	_timerExtension1,w,c	;volatile
 18072  002D2A  E101               	bnz	i2l7010
 18073                           
 18074                           ;symbol.c: 147: {
 18075                           ;symbol.c: 148: currentTime.byte.b3++;
 18076  002D2C  2A0A               	incf	i2MiWi_TickGet@currentTime+3,f,c
 18077  002D2E                     i2l7010:
 18078                           
 18079                           ;symbol.c: 149: }
 18080                           ;symbol.c: 150: }
 18081                           ;symbol.c: 151: }
 18082                           ;symbol.c: 154: currentTime.byte.b2 += timerExtension1;
 18083  002D2E  5050               	movf	_timerExtension1,w,c	;volatile
 18084  002D30  2609               	addwf	i2MiWi_TickGet@currentTime+2,f,c
 18085                           
 18086                           ;symbol.c: 155: currentTime.byte.b3 += timerExtension2;
 18087  002D32  0100               	movlb	0	; () banked
 18088  002D34  51ED               	movf	_timerExtension2& (0+255),w,b	;volatile
 18089  002D36  260A               	addwf	i2MiWi_TickGet@currentTime+3,f,c
 18090                           
 18091                           ; BSR set to: 0
 18092                           ;symbol.c: 158: PIE1bits.TMR1IE = 1;
 18093  002D38  809D               	bsf	3997,0,c	;volatile
 18094                           
 18095                           ; BSR set to: 0
 18096                           ;symbol.c: 160: return currentTime;
 18097  002D3A  C007  F001         	movff	i2MiWi_TickGet@currentTime,?i2_MiWi_TickGet
 18098  002D3E  C008  F002         	movff	i2MiWi_TickGet@currentTime+1,?i2_MiWi_TickGet+1
 18099  002D42  C009  F003         	movff	i2MiWi_TickGet@currentTime+2,?i2_MiWi_TickGet+2
 18100  002D46  C00A  F004         	movff	i2MiWi_TickGet@currentTime+3,?i2_MiWi_TickGet+3
 18101                           
 18102                           ; BSR set to: 0
 18103  002D4A  0012               	return		;funcret
 18104  002D4C                     __end_ofi2_MiWi_TickGet:
 18105                           	opt stack 0
 18106                           tblptru	equ	0xFF8
 18107                           tblptrh	equ	0xFF7
 18108                           tblptrl	equ	0xFF6
 18109                           tablat	equ	0xFF5
 18110                           prodh	equ	0xFF4
 18111                           prodl	equ	0xFF3
 18112                           intcon	equ	0xFF2
 18113                           intcon2	equ	0xFF1
 18114                           intcon3	equ	0xFF0
 18115                           postinc0	equ	0xFEE
 18116                           wreg	equ	0xFE8
 18117                           indf1	equ	0xFE7
 18118                           postinc1	equ	0xFE6
 18119                           postdec1	equ	0xFE5
 18120                           fsr1h	equ	0xFE2
 18121                           fsr1l	equ	0xFE1
 18122                           bsr	equ	0xFE0
 18123                           indf2	equ	0xFDF
 18124                           postinc2	equ	0xFDE
 18125                           postdec2	equ	0xFDD
 18126                           fsr2h	equ	0xFDA
 18127                           fsr2l	equ	0xFD9
 18128                           status	equ	0xFD8
 18129                           
 18130 ;; *************** function i2_DELAY_10us *****************
 18131 ;; Defined at:
 18132 ;;		line 47 in file "../src/system_config/miwikit_pic18f46j50_89xa/delay.c"
 18133 ;; Parameters:    Size  Location     Type
 18134 ;;  tenMicroSeco    4    0[COMRAM] unsigned long 
 18135 ;; Auto vars:     Size  Location     Type
 18136 ;;  DELAY_10us      4   12[COMRAM] volatile long 
 18137 ;; Return value:  Size  Location     Type
 18138 ;;		None               void
 18139 ;; Registers used:
 18140 ;;		wreg, status,2, status,0, prodl, prodh
 18141 ;; Tracked objects:
 18142 ;;		On entry : 0/0
 18143 ;;		On exit  : 0/0
 18144 ;;		Unchanged: 0/0
 18145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18146 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18147 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18148 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18149 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18150 ;;Total ram usage:       16 bytes
 18151 ;; Hardware stack levels used:    1
 18152 ;; This function calls:
 18153 ;;		Nothing
 18154 ;; This function is called by:
 18155 ;;		i2_TxPacket
 18156 ;; This function uses a non-reentrant model
 18157 ;;
 18158                           
 18159                           	psect	text87
 18160  0020CC                     __ptext87:
 18161                           	opt stack 0
 18162  0020CC                     i2_DELAY_10us:
 18163                           	opt stack 11
 18164                           
 18165                           ;delay.c: 60: else
 18166                           ;delay.c: 61: {
 18167                           ;delay.c: 65: cyclesRequiredForEntireDelay = (int32_t)(((16000000)/4)/100000) * tenMicro
      +                          SecondCounter;
 18168                           
 18169                           ;delay.c: 49: volatile int32_t cyclesRequiredForEntireDelay;
 18170                           ;delay.c: 52: if (((16000000)/4) <= 2500000)
 18171                           
 18172                           ; BSR set to: 0
 18173                           ;incstack = 0
 18174  0020CC  C001  F005         	movff	i2DELAY_10us@tenMicroSecondCounter,??i2_DELAY_10us
 18175  0020D0  C002  F006         	movff	i2DELAY_10us@tenMicroSecondCounter+1,??i2_DELAY_10us+1
 18176  0020D4  C003  F007         	movff	i2DELAY_10us@tenMicroSecondCounter+2,??i2_DELAY_10us+2
 18177  0020D8  C004  F008         	movff	i2DELAY_10us@tenMicroSecondCounter+3,??i2_DELAY_10us+3
 18178  0020DC  0E28               	movlw	40
 18179  0020DE  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 18180  0020E0  CFF3 F009          	movff	prodl,??i2_DELAY_10us+4
 18181  0020E4  CFF4 F00A          	movff	prodh,??i2_DELAY_10us+5
 18182  0020E8  6A0B               	clrf	(??i2_DELAY_10us+6)& (0+255),c
 18183  0020EA  6A0C               	clrf	(??i2_DELAY_10us+7)& (0+255),c
 18184  0020EC  0206               	mulwf	(??i2_DELAY_10us+1)& (0+255),c
 18185  0020EE  50F3               	movf	prodl,w,c
 18186  0020F0  260A               	addwf	(??i2_DELAY_10us+5)& (0+255),f,c
 18187  0020F2  50F4               	movf	prodh,w,c
 18188  0020F4  220B               	addwfc	(??i2_DELAY_10us+6)& (0+255),f,c
 18189  0020F6  0E00               	movlw	0
 18190  0020F8  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 18191  0020FA  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 18192  0020FC  50F3               	movf	prodl,w,c
 18193  0020FE  260A               	addwf	(??i2_DELAY_10us+5)& (0+255),f,c
 18194  002100  50F4               	movf	prodh,w,c
 18195  002102  220B               	addwfc	(??i2_DELAY_10us+6)& (0+255),f,c
 18196  002104  0E00               	movlw	0
 18197  002106  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 18198  002108  0E28               	movlw	40
 18199  00210A  0207               	mulwf	(??i2_DELAY_10us+2)& (0+255),c
 18200  00210C  50F3               	movf	prodl,w,c
 18201  00210E  260B               	addwf	(??i2_DELAY_10us+6)& (0+255),f,c
 18202  002110  50F4               	movf	prodh,w,c
 18203  002112  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 18204  002114  0E00               	movlw	0
 18205  002116  0206               	mulwf	(??i2_DELAY_10us+1)& (0+255),c
 18206  002118  50F3               	movf	prodl,w,c
 18207  00211A  260B               	addwf	(??i2_DELAY_10us+6)& (0+255),f,c
 18208  00211C  50F4               	movf	prodh,w,c
 18209  00211E  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 18210  002120  0E00               	movlw	0
 18211  002122  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 18212  002124  50F3               	movf	prodl,w,c
 18213  002126  260B               	addwf	(??i2_DELAY_10us+6)& (0+255),f,c
 18214  002128  50F4               	movf	prodh,w,c
 18215  00212A  220C               	addwfc	(??i2_DELAY_10us+7)& (0+255),f,c
 18216  00212C  0E28               	movlw	40
 18217  00212E  0208               	mulwf	(??i2_DELAY_10us+3)& (0+255),c
 18218  002130  50F3               	movf	prodl,w,c
 18219  002132  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 18220  002134  0E00               	movlw	0
 18221  002136  0207               	mulwf	(??i2_DELAY_10us+2)& (0+255),c
 18222  002138  50F3               	movf	prodl,w,c
 18223  00213A  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 18224  00213C  0E00               	movlw	0
 18225  00213E  0206               	mulwf	(??i2_DELAY_10us+1)& (0+255),c
 18226  002140  50F3               	movf	prodl,w,c
 18227  002142  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 18228  002144  0E00               	movlw	0
 18229  002146  0205               	mulwf	??i2_DELAY_10us& (0+255),c
 18230  002148  50F3               	movf	prodl,w,c
 18231  00214A  260C               	addwf	(??i2_DELAY_10us+7)& (0+255),f,c
 18232  00214C  C009  F00D         	movff	??i2_DELAY_10us+4,i2DELAY_10us@cyclesRequiredForEntireDelay	;volatile
 18233  002150  C00A  F00E         	movff	??i2_DELAY_10us+5,i2DELAY_10us@cyclesRequiredForEntireDelay+1	;volatile
 18234  002154  C00B  F00F         	movff	??i2_DELAY_10us+6,i2DELAY_10us@cyclesRequiredForEntireDelay+2	;volatile
 18235  002158  C00C  F010         	movff	??i2_DELAY_10us+7,i2DELAY_10us@cyclesRequiredForEntireDelay+3	;volatile
 18236                           
 18237                           ;delay.c: 69: cyclesRequiredForEntireDelay -= (153 + 22);
 18238  00215C  0E51               	movlw	81
 18239  00215E  260D               	addwf	i2DELAY_10us@cyclesRequiredForEntireDelay,f,c	;volatile
 18240  002160  0EFF               	movlw	255
 18241  002162  220E               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+1,f,c	;volatile
 18242  002164  220F               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+2,f,c	;volatile
 18243  002166  2210               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,f,c	;volatile
 18244                           
 18245                           ;delay.c: 71: if (cyclesRequiredForEntireDelay <= 45)
 18246  002168  BE10               	btfsc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,7,c	;volatile
 18247  00216A  0CFF               	retlw	255
 18248  00216C  5010               	movf	i2DELAY_10us@cyclesRequiredForEntireDelay+3,w,c	;volatile
 18249  00216E  100F               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+2,w,c	;volatile
 18250  002170  100E               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+1,w,c	;volatile
 18251  002172  E10B               	bnz	i2l709
 18252  002174  0E2E               	movlw	46
 18253  002176  5C0D               	subwf	i2DELAY_10us@cyclesRequiredForEntireDelay,w,c	;volatile
 18254  002178  E208               	bc	i2l709
 18255  00217A  0012               	return	
 18256  00217C                     i2l710:
 18257                           
 18258                           ;delay.c: 80: {
 18259                           ;delay.c: 81: __nop();
 18260  00217C  F000               	nop	
 18261                           
 18262                           ;delay.c: 82: cyclesRequiredForEntireDelay -= 42;
 18263  00217E  0ED6               	movlw	214
 18264  002180  260D               	addwf	i2DELAY_10us@cyclesRequiredForEntireDelay,f,c	;volatile
 18265  002182  0EFF               	movlw	255
 18266  002184  220E               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+1,f,c	;volatile
 18267  002186  220F               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+2,f,c	;volatile
 18268  002188  2210               	addwfc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,f,c	;volatile
 18269  00218A                     i2l709:
 18270  00218A  BE10               	btfsc	i2DELAY_10us@cyclesRequiredForEntireDelay+3,7,c	;volatile
 18271  00218C  0012               	return	
 18272  00218E  5010               	movf	i2DELAY_10us@cyclesRequiredForEntireDelay+3,w,c	;volatile
 18273  002190  100F               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+2,w,c	;volatile
 18274  002192  100E               	iorwf	i2DELAY_10us@cyclesRequiredForEntireDelay+1,w,c	;volatile
 18275  002194  E1F3               	bnz	i2l710
 18276  002196  040D               	decf	i2DELAY_10us@cyclesRequiredForEntireDelay,w,c	;volatile
 18277  002198  E2F1               	bc	i2l710
 18278  00219A  0012               	return		;funcret
 18279  00219C                     __end_ofi2_DELAY_10us:
 18280                           	opt stack 0
 18281                           tblptru	equ	0xFF8
 18282                           tblptrh	equ	0xFF7
 18283                           tblptrl	equ	0xFF6
 18284                           tablat	equ	0xFF5
 18285                           prodh	equ	0xFF4
 18286                           prodl	equ	0xFF3
 18287                           intcon	equ	0xFF2
 18288                           intcon2	equ	0xFF1
 18289                           intcon3	equ	0xFF0
 18290                           postinc0	equ	0xFEE
 18291                           wreg	equ	0xFE8
 18292                           indf1	equ	0xFE7
 18293                           postinc1	equ	0xFE6
 18294                           postdec1	equ	0xFE5
 18295                           fsr1h	equ	0xFE2
 18296                           fsr1l	equ	0xFE1
 18297                           bsr	equ	0xFE0
 18298                           indf2	equ	0xFDF
 18299                           postinc2	equ	0xFDE
 18300                           postdec2	equ	0xFDD
 18301                           fsr2h	equ	0xFDA
 18302                           fsr2l	equ	0xFD9
 18303                           status	equ	0xFD8
 18304                           
 18305 ;; *************** function _UserInterruptHandler *****************
 18306 ;; Defined at:
 18307 ;;		line 205 in file "../src/system_config/miwikit_pic18f46j50_89xa/lcd.c"
 18308 ;; Parameters:    Size  Location     Type
 18309 ;;		None
 18310 ;; Auto vars:     Size  Location     Type
 18311 ;;		None
 18312 ;; Return value:  Size  Location     Type
 18313 ;;		None               void
 18314 ;; Registers used:
 18315 ;;		None
 18316 ;; Tracked objects:
 18317 ;;		On entry : 0/0
 18318 ;;		On exit  : 0/0
 18319 ;;		Unchanged: 0/0
 18320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18325 ;;Total ram usage:        0 bytes
 18326 ;; Hardware stack levels used:    1
 18327 ;; This function calls:
 18328 ;;		Nothing
 18329 ;; This function is called by:
 18330 ;;		_high_isr
 18331 ;; This function uses a non-reentrant model
 18332 ;;
 18333                           
 18334                           	psect	text88
 18335  0033D4                     __ptext88:
 18336                           	opt stack 0
 18337  0033D4                     _UserInterruptHandler:
 18338                           	opt stack 12
 18339                           
 18340                           ;incstack = 0
 18341  0033D4  0012               	return		;funcret
 18342  0033D6                     __end_of_UserInterruptHandler:
 18343                           	opt stack 0
 18344                           tblptru	equ	0xFF8
 18345                           tblptrh	equ	0xFF7
 18346                           tblptrl	equ	0xFF6
 18347                           tablat	equ	0xFF5
 18348                           prodh	equ	0xFF4
 18349                           prodl	equ	0xFF3
 18350                           intcon	equ	0xFF2
 18351                           intcon2	equ	0xFF1
 18352                           intcon3	equ	0xFF0
 18353                           postinc0	equ	0xFEE
 18354                           wreg	equ	0xFE8
 18355                           indf1	equ	0xFE7
 18356                           postinc1	equ	0xFE6
 18357                           postdec1	equ	0xFE5
 18358                           fsr1h	equ	0xFE2
 18359                           fsr1l	equ	0xFE1
 18360                           bsr	equ	0xFE0
 18361                           indf2	equ	0xFDF
 18362                           postinc2	equ	0xFDE
 18363                           postdec2	equ	0xFDD
 18364                           fsr2h	equ	0xFDA
 18365                           fsr2l	equ	0xFD9
 18366                           status	equ	0xFD8
 18367                           tblptru	equ	0xFF8
 18368                           tblptrh	equ	0xFF7
 18369                           tblptrl	equ	0xFF6
 18370                           tablat	equ	0xFF5
 18371                           prodh	equ	0xFF4
 18372                           prodl	equ	0xFF3
 18373                           intcon	equ	0xFF2
 18374                           intcon2	equ	0xFF1
 18375                           intcon3	equ	0xFF0
 18376                           postinc0	equ	0xFEE
 18377                           wreg	equ	0xFE8
 18378                           indf1	equ	0xFE7
 18379                           postinc1	equ	0xFE6
 18380                           postdec1	equ	0xFE5
 18381                           fsr1h	equ	0xFE2
 18382                           fsr1l	equ	0xFE1
 18383                           bsr	equ	0xFE0
 18384                           indf2	equ	0xFDF
 18385                           postinc2	equ	0xFDE
 18386                           postdec2	equ	0xFDD
 18387                           fsr2h	equ	0xFDA
 18388                           fsr2l	equ	0xFD9
 18389                           status	equ	0xFD8
 18390                           
 18391                           	psect	rparam
 18392  0000                     tblptru	equ	0xFF8
 18393                           tblptrh	equ	0xFF7
 18394                           tblptrl	equ	0xFF6
 18395                           tablat	equ	0xFF5
 18396                           prodh	equ	0xFF4
 18397                           prodl	equ	0xFF3
 18398                           intcon	equ	0xFF2
 18399                           intcon2	equ	0xFF1
 18400                           intcon3	equ	0xFF0
 18401                           postinc0	equ	0xFEE
 18402                           wreg	equ	0xFE8
 18403                           indf1	equ	0xFE7
 18404                           postinc1	equ	0xFE6
 18405                           postdec1	equ	0xFE5
 18406                           fsr1h	equ	0xFE2
 18407                           fsr1l	equ	0xFE1
 18408                           bsr	equ	0xFE0
 18409                           indf2	equ	0xFDF
 18410                           postinc2	equ	0xFDE
 18411                           postdec2	equ	0xFDD
 18412                           fsr2h	equ	0xFDA
 18413                           fsr2l	equ	0xFD9
 18414                           status	equ	0xFD8
 18415                           
 18416                           	psect	temp
 18417  00005F                     btemp:
 18418                           	opt stack 0
 18419  00005F                     	ds	1
 18420  0000                     int$flags	set	btemp
 18421                           tblptru	equ	0xFF8
 18422                           tblptrh	equ	0xFF7
 18423                           tblptrl	equ	0xFF6
 18424                           tablat	equ	0xFF5
 18425                           prodh	equ	0xFF4
 18426                           prodl	equ	0xFF3
 18427                           intcon	equ	0xFF2
 18428                           intcon2	equ	0xFF1
 18429                           intcon3	equ	0xFF0
 18430                           postinc0	equ	0xFEE
 18431                           wreg	equ	0xFE8
 18432                           indf1	equ	0xFE7
 18433                           postinc1	equ	0xFE6
 18434                           postdec1	equ	0xFE5
 18435                           fsr1h	equ	0xFE2
 18436                           fsr1l	equ	0xFE1
 18437                           bsr	equ	0xFE0
 18438                           indf2	equ	0xFDF
 18439                           postinc2	equ	0xFDE
 18440                           postdec2	equ	0xFDD
 18441                           fsr2h	equ	0xFDA
 18442                           fsr2l	equ	0xFD9
 18443                           status	equ	0xFD8


Data Sizes:
    Strings     617
    Constant    284
    Data        4
    BSS         553
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      94
    BANK0           160    108     151
    BANK1           256     12     237
    BANK2           256      0     254
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    memset@p	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf$3815	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_39(CODE[17]), STR_38(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_37(CODE[12]), STR_36(CODE[20]), STR_35(CODE[17]), STR_34(CODE[22]), 
		 -> STR_33(CODE[22]), STR_32(CODE[25]), STR_31(CODE[11]), STR_30(CODE[11]), 
		 -> STR_29(CODE[28]), STR_28(CODE[22]), STR_27(CODE[17]), STR_26(CODE[32]), 
		 -> STR_25(CODE[33]), STR_24(CODE[16]), STR_18(CODE[29]), STR_17(CODE[31]), 
		 -> STR_16(CODE[32]), STR_15(CODE[30]), STR_14(CODE[14]), STR_13(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDDisplay@text	PTR unsigned char  size(2) Largest target is 33
		 -> STR_37(CODE[12]), STR_36(CODE[20]), STR_31(CODE[11]), STR_30(CODE[11]), 
		 -> STR_29(CODE[28]), STR_26(CODE[32]), STR_25(CODE[33]), STR_24(CODE[16]), 
		 -> STR_18(CODE[29]), STR_17(CODE[31]), STR_16(CODE[32]), STR_15(CODE[30]), 

    sp__memset	PTR void  size(2) Largest target is 33
		 -> LCDText(BANK1[33]), 

    EEPROM_Write@dest	PTR unsigned char  size(2) Largest target is 140
		 -> myConnectionIndex_in_PanCo(BANK0[1]), currentChannel(BANK0[1]), ConnMode(BANK0[1]), role(BANK0[1]), 
		 -> conn_size(BANK0[1]), ConnectionTable(BANK2[140]), 

    Read_MAC_Address@myAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    EEPROM_Read@dest	PTR unsigned char  size(2) Largest target is 140
		 -> myConnectionIndex_in_PanCo(BANK0[1]), currentChannel(BANK0[1]), ConnMode(BANK0[1]), myLongAddress(BANK1[8]), 
		 -> role(BANK0[1]), conn_size(BANK0[1]), ConnectionTable(BANK2[140]), 

    isSameAddress@Address2	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), 

    isSameAddress@Address1	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    SW_Ack_SrED@Dest_Addr	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    MiApp_UnicastAddress@DestinationAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), 

    SendPacket@DestinationAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    tParam.DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S981$Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket(BANK2[114]), 

    rxMessage.Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    S981$SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket(BANK2[114]), 

    rxMessage.SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    Forward_Packet_PANCr_to_EDy@fw_payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    Forward_Packet_PANCr_to_EDy@EDxAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    store_connection_tb@payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    Find_Index@DestAddr	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    NVMalloc@location	PTR unsigned int  size(1) Largest target is 2
		 -> nvmmyIndex(COMRAM[2]), nvmRole(COMRAM[2]), nvmEdc(COMRAM[2]), nvmOutFrameCounter(COMRAM[2]), 
		 -> nvmConnectionTable(COMRAM[2]), nvmConnMode(COMRAM[2]), nvmCurrentChannel(COMRAM[2]), nvmMyPANID(BANK0[2]), 

    MiMAC_SendPacket@MACPayload	PTR unsigned char  size(2) Largest target is 35
		 -> TxBuffer(BANK1[35]), 

    S366$DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), NULL(NULL[0]), RxPacket(BANK2[114]), 

    transParam.DestAddress	PTR unsigned char  size(2) Largest target is 140
		 -> ConnectionTable(BANK2[140]), NULL(NULL[0]), RxPacket(BANK2[114]), 

    initValue.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S51$PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    MACInitParams.PAddress	PTR unsigned char  size(2) Largest target is 8
		 -> myLongAddress(BANK1[8]), 

    S380$Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket(BANK2[114]), 

    MACRxPacket.Payload	PTR unsigned char  size(2) Largest target is 114
		 -> RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 

    S380$SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket(BANK2[114]), 

    MACRxPacket.SourceAddress	PTR unsigned char  size(2) Largest target is 114
		 -> NULL(NULL[0]), RxPacket.Payload(BANK2[55]), RxPacket(BANK2[114]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    _high_isr->i2_TxPacket
    i2_TxPacket->i2_DELAY_10us
    i2_WriteFIFO->i2_SPI1_Exchange8bit
    i2_SetRFMode->i2_RegisterSet
    i2_RegisterSet->i2_SPI1_Exchange8bit
    i2_RegisterRead->i2_SPI1_Exchange8bit

Critical Paths under _main in BANK0

    _main->_Initialize_Demo
    _freezer_feature->_LCDDisplay
    _LCD_Initialize->_DELAY_ms
    _run_star_demo->_MiApp_EstablishConnection
    _STAR_DEMO_OPTIONS_MESSAGE->_LCDDisplay
    _MiApp_TransceiverPowerState->_P2PTasks
    _MiMAC_PowerState->_DELAY_ms
    _CheckForData->_SendPacket
    _DemoOutput_UpdateTxRx->_LCDTRXCount
    _LCDTRXCount->_sprintf
    _ButtonPressed->_MiWi_TickGet
    _Initialize_Demo->_MiApp_EstablishConnection
    _Read_MAC_Address->_EEPROM_Read
    _MiApp_ProtocolInit->_MiMAC_Init
    _NVMInit->_NVMalloc
    _MiMAC_Init->_DELAY_ms
    _EEPROM_Read->_SPIPut2
    _MiApp_MessageAvailable->_P2PTasks
    _P2PTasks->_StartChannelHopping
    _store_connection_tb->_handle_lost_connection
    _StartChannelHopping->_SendPacket
    _MiApp_SetChannel->_MiMAC_SetChannel
    _MiMAC_SetChannel->_SetRFMode
    _SW_Ack_SrED->_SendPacket
    _MiMAC_ReceivedPacket->_MiWi_TickGet
    _Forward_Packet_PANCr_to_EDy->_MiApp_UnicastConnection
    _MiApp_UnicastConnection->_MiApp_UnicastAddress
    _MiApp_UnicastAddress->_SendPacket
    _SendPacket->_MiMAC_SendPacket
    _MiMAC_SendPacket->_TxPacket
    _TxPacket->_DELAY_10us
    _WriteFIFO->_SPI1_Exchange8bit
    _SetRFMode->_RegisterSet
    _RegisterSet->_SPI1_Exchange8bit
    _RegisterRead->_SPI1_Exchange8bit
    _DemoOutput_UnicastFail->_LCDDisplay
    _AddConnection->_EEPROM_Write
    _MiApp_ConnectionMode->_EEPROM_Write
    _EEPROM_Write->_SPIPut2
    _SPIGet2->_SPIPut2
    _DemoOutput_Instruction->_LCDDisplay
    _DemoOutput_Channel->_LCDDisplay
    _DemoOutput_Greeting->_LCDDisplay
    _LCDDisplay->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_Update->_LCD_WriteCmd
    _LCD_Update->_LCD_WriteData
    _LCD_WriteData->_SPIPut2
    _LCD_Erase->_DELAY_ms
    _LCD_WriteCmd->_SPIPut2

Critical Paths under _low_isr in BANK0

    _low_isr->i1_RegisterRead
    i1_RegisterRead->i1_SPI1_Exchange8bit

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _Run_Demo->_run_star_demo

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_isr in BANK13

    None.

Critical Paths under _high_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_isr in BANK14

    None.

Critical Paths under _high_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  644098
                                            107 BANK0      1     1      0
                _DemoOutput_Greeting
                    _Initialize_Demo
                           _Run_Demo
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                    _freezer_feature
 ---------------------------------------------------------------------------------
 (1) _freezer_feature                                      1     1      0   17406
                                             61 BANK0      1     1      0
                      _ButtonPressed
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2539
                     _LCD_Initialize
 ---------------------------------------------------------------------------------
 (2) _LCD_Initialize                                       0     0      0    2539
                           _DELAY_ms
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _Run_Demo                                             0     0      0  437984
                      _run_star_demo
 ---------------------------------------------------------------------------------
 (2) _run_star_demo                                       13    13      0  437984
                                              0 BANK1     12    12      0
                      _ButtonPressed
                       _CheckForData
                           _DELAY_ms
              _DemoOutput_UpdateTxRx
                         _LCDDisplay
                   _LCD_BacklightOFF
                    _LCD_BacklightON
                          _LCD_Erase
                         _LCD_Update
               _MiApp_DiscardMessage
          _MiApp_EstablishConnection
             _MiApp_MessageAvailable
        _MiApp_TransceiverPowerState
            _MiApp_UnicastConnection
                  _MiApp_UnicastStar
                       _MiWi_TickGet
          _STAR_DEMO_OPTIONS_MESSAGE
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _STAR_DEMO_OPTIONS_MESSAGE                            1     1      0   16904
                                             61 BANK0      1     1      0
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (3) _MiApp_UnicastStar                                   14    14      0   89887
                                             89 BANK0     13    13      0
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _MiApp_TransceiverPowerState                          1     1      0   98054
                                             89 BANK0      1     1      0
                       _CheckForData
                       _EEPROM_Write
                   _MiMAC_PowerState
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (4) _MiMAC_PowerState                                     2     2      0    4345
                                             23 BANK0      2     2      0
                           _DELAY_ms
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (4) _CheckForData                                         2     2      0   10498
                                             64 BANK0      2     2      0
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (3) _LCD_BacklightON                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCD_BacklightOFF                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DemoOutput_UpdateTxRx                                2     1      1   10823
                                             58 BANK0      2     1      1
                        _LCDTRXCount
 ---------------------------------------------------------------------------------
 (4) _LCDTRXCount                                          2     1      1   10657
                                             56 BANK0      2     1      1
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _ButtonPressed                                        8     8      0     468
                                             19 BANK0      8     8      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (1) _Initialize_Demo                                      1     1      0  166782
                                            106 BANK0      1     1      0
                 _DemoOutput_Channel
            _DemoOutput_ChannelError
             _DemoOutput_Instruction
                       _EEPROM_Write
               _MiApp_ConnectionMode
          _MiApp_EstablishConnection
                 _MiApp_ProtocolInit
                   _MiApp_SetChannel
                   _Read_MAC_Address
 ---------------------------------------------------------------------------------
 (2) _Read_MAC_Address                                     5     3      2    3008
                                             14 BANK0      5     3      2
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (2) _MiApp_ProtocolInit                                   5     5      0   21837
                                             27 BANK0      5     5      0
                        _EEPROM_Read
                       _EEPROM_Write
                   _MiApp_SetChannel
                         _MiMAC_Init
                            _NVMInit
 ---------------------------------------------------------------------------------
 (3) _NVMInit                                              1     1      0    1505
                                             14 BANK0      1     1      0
                           _NVMalloc
 ---------------------------------------------------------------------------------
 (4) _NVMalloc                                             5     2      3    1490
                                              9 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _MiMAC_Init                                           4     1      3    6255
                                             23 BANK0      4     1      3
                           _DELAY_ms
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          4     0      4    2420
                                             10 BANK0      4     0      4
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _MiApp_EstablishConnection                           18    17      1   90336
                                             89 BANK0     17    16      1
               _MiApp_DiscardMessage
             _MiApp_MessageAvailable
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _MiApp_MessageAvailable                               0     0      0   79420
                           _P2PTasks
 ---------------------------------------------------------------------------------
 (5) _P2PTasks                                            20    20      0   79420
                                             78 BANK0     11    11      0
                      _AddConnection
                       _EEPROM_Write
                         _Find_Index
        _Forward_Packet_PANCr_to_EDy
                _MiMAC_DiscardPacket
               _MiMAC_ReceivedPacket
                       _MiWi_TickGet
                        _SW_Ack_SrED
                         _SendPacket
                _StartChannelHopping
                      _isSameAddress
                _store_connection_tb
 ---------------------------------------------------------------------------------
 (6) _store_connection_tb                                  8     6      2     715
                                             16 BANK0      6     4      2
             _handle_lost_connection
 ---------------------------------------------------------------------------------
 (7) _handle_lost_connection                               7     7      0     136
                                              9 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (6) _StartChannelHopping                                 14    14      0   18030
                                             64 BANK0     14    14      0
                   _MiApp_SetChannel
                       _MiWi_TickGet
                         _SendPacket
 ---------------------------------------------------------------------------------
 (7) _MiApp_SetChannel                                     1     1      0    7464
                                             18 BANK0      1     1      0
                       _EEPROM_Write
                   _MiMAC_SetChannel
 ---------------------------------------------------------------------------------
 (8) _MiMAC_SetChannel                                     3     2      1    3642
                                             15 BANK0      3     2      1
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (6) _SW_Ack_SrED                                          2     0      2   10103
                                             64 BANK0      2     0      2
                         _SendPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_ReceivedPacket                                15    15      0    1013
                                             19 BANK0     14    14      0
                       _MiWi_TickGet
 ---------------------------------------------------------------------------------
 (6) _Forward_Packet_PANCr_to_EDy                          7     2      5   28025
                                             70 BANK0      7     2      5
             _DemoOutput_UnicastFail
            _MiApp_UnicastConnection
 ---------------------------------------------------------------------------------
 (7) _MiApp_UnicastConnection                              2     1      1   10582
                                             68 BANK0      2     1      1
               _MiApp_UnicastAddress
 ---------------------------------------------------------------------------------
 (8) _MiApp_UnicastAddress                                 4     0      4   10281
                                             64 BANK0      4     0      4
                         _SendPacket
 ---------------------------------------------------------------------------------
 (4) _SendPacket                                          10     6      4    9968
                                             54 BANK0     10     6      4
                   _MiMAC_SendPacket
 ---------------------------------------------------------------------------------
 (5) _MiMAC_SendPacket                                     9     3      6    5903
                                             45 BANK0      9     3      6
                           _TxPacket
 ---------------------------------------------------------------------------------
 (6) _TxPacket                                            20    19      1    4929
                                             25 BANK0     20    19      1
                         _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
 ---------------------------------------------------------------------------------
 (7) _WriteFIFO                                            3     3      0     130
                                             10 BANK0      3     3      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SetRFMode                                            1     1      0    1738
                                             14 BANK0      1     1      0
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (8) _RegisterSet                                          4     2      2    1707
                                             10 BANK0      4     2      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _RegisterRead                                         4     4      0     167
                                             10 BANK0      4     4      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (8) _SPI1_Exchange8bit                                    1     1      0      31
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MiWi_TickGet                                        10     6      4     400
                                              9 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (7) _DELAY_10us                                          16    12      4     206
                                              9 BANK0     16    12      4
 ---------------------------------------------------------------------------------
 (7) _DemoOutput_UnicastFail                               0     0      0   16873
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (6) _Find_Index                                           5     3      2     359
                                              9 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _AddConnection                                        7     7      0    5485
                                             17 BANK0      7     7      0
                       _EEPROM_Write
                  _Total_Connections
                      _isSameAddress
 ---------------------------------------------------------------------------------
 (6) _isSameAddress                                        7     3      4     816
                                              9 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (7) _Total_Connections                                    2     2      0     198
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _MiApp_DiscardMessage                                 0     0      0       0
                _MiMAC_DiscardPacket
 ---------------------------------------------------------------------------------
 (6) _MiMAC_DiscardPacket                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MiApp_ConnectionMode                                 2     2      0    3822
                                             17 BANK0      2     2      0
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (8) _EEPROM_Write                                         7     3      4    3760
                                             10 BANK0      7     3      4
                           _MacroNop
                            _SPIGet2
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (9) _SPIGet2                                              0     0      0      31
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (9) _MacroNop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Instruction                               0     0      0   16873
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_ChannelError                              1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _DemoOutput_Channel                                   2     1      1   19651
                                             61 BANK0      2     1      1
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (1) _DemoOutput_Greeting                                  0     0      0   19350
                           _DELAY_ms
                         _LCDDisplay
 ---------------------------------------------------------------------------------
 (2) _LCDDisplay                                           5     1      4   16873
                                             56 BANK0      5     1      4
                           _DELAY_ms
                          _LCD_Erase
                         _LCD_Update
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             39    27     12    7180
                                             21 BANK0     35    23     12
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              9 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     440
                                              9 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     440
                                             16 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     865
                                              9 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_Update                                           1     1      0     384
                                             11 BANK0      1     1      0
                       _LCD_WriteCmd
                      _LCD_WriteData
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteData                                        1     1      0      62
                                             10 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (3) _LCD_Erase                                            0     0      0    2927
                           _DELAY_ms
                       _LCD_WriteCmd
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     388
                                              9 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) _LCD_WriteCmd                                         1     1      0      62
                                             10 BANK0      1     1      0
                            _SPIPut2
 ---------------------------------------------------------------------------------
 (5) _SPIPut2                                              2     2      0      31
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _DELAY_ms                                            14    12      2    2477
                                              9 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _low_isr                                             4     4      0     114
                                              5 BANK0      4     4      0
                     i1_RegisterRead
 ---------------------------------------------------------------------------------
 (16) i1_RegisterRead                                      4     4      0     114
                                              1 BANK0      4     4      0
                i1_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (17) i1_SPI1_Exchange8bit                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _high_isr                                           23    23      0    3119
                                             36 COMRAM    23    23      0
               _UserInterruptHandler
                     i2_MiWi_TickGet
                     i2_RegisterRead
                i2_SPI1_Exchange8bit
                         i2_TxPacket
 ---------------------------------------------------------------------------------
 (19) i2_TxPacket                                         20    19      1    1365
                                             16 COMRAM    20    19      1
                       i2_DELAY_10us
                     i2_MiWi_TickGet
                     i2_RegisterRead
                      i2_RegisterSet
                        i2_SetRFMode
                        i2_WriteFIFO
 ---------------------------------------------------------------------------------
 (20) i2_WriteFIFO                                         3     3      0      90
                                              1 COMRAM     3     3      0
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (20) i2_SetRFMode                                         1     1      0     290
                                              5 COMRAM     1     1      0
                      i2_RegisterSet
 ---------------------------------------------------------------------------------
 (21) i2_RegisterSet                                       4     2      2     268
                                              1 COMRAM     4     2      2
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (20) i2_RegisterRead                                      4     4      0     114
                                              1 COMRAM     4     4      0
                i2_SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (21) i2_SPI1_Exchange8bit                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (20) i2_MiWi_TickGet                                     10     6      4     222
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (20) i2_DELAY_10us                                       16    12      4      95
                                              0 COMRAM    16    12      4
 ---------------------------------------------------------------------------------
 (19) _UserInterruptHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DemoOutput_Greeting
     _DELAY_ms
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _Initialize_Demo
     _DemoOutput_Channel
       _DELAY_ms
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _DemoOutput_ChannelError
     _DemoOutput_Instruction
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
     _EEPROM_Write
       _MacroNop
       _SPIGet2
         _SPIPut2
       _SPIPut2
     _MiApp_ConnectionMode
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
     _MiApp_EstablishConnection
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Total_Connections
             _isSameAddress
           _EEPROM_Write
             _MacroNop
             _SPIGet2
               _SPIPut2
             _SPIPut2
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                   _DELAY_ms
                   _LCD_WriteCmd
                     _SPIPut2
                   _memset
                 _LCD_Update
                   _LCD_WriteCmd
                     _SPIPut2
                   _LCD_WriteData
                     _SPIPut2
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPI1_Exchange8bit
                       _RegisterSet
                         _SPI1_Exchange8bit
                       _SetRFMode
                         _RegisterSet
                           _SPI1_Exchange8bit
                       _WriteFIFO
                         _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
           _MiWi_TickGet
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
           _StartChannelHopping
             _MiApp_SetChannel
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _MiMAC_SetChannel
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
             _MiWi_TickGet
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiWi_TickGet
       _SendPacket
         _MiMAC_SendPacket
           _TxPacket
             _DELAY_10us
             _MiWi_TickGet
             _RegisterRead
               _SPI1_Exchange8bit
             _RegisterSet
               _SPI1_Exchange8bit
             _SetRFMode
               _RegisterSet
                 _SPI1_Exchange8bit
             _WriteFIFO
               _SPI1_Exchange8bit
     _MiApp_ProtocolInit
       _EEPROM_Read
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _MiApp_SetChannel
         _EEPROM_Write
           _MacroNop
           _SPIGet2
             _SPIPut2
           _SPIPut2
         _MiMAC_SetChannel
           _RegisterSet
             _SPI1_Exchange8bit
           _SetRFMode
             _RegisterSet
               _SPI1_Exchange8bit
       _MiMAC_Init
         _DELAY_ms
         _RegisterSet
           _SPI1_Exchange8bit
         _SetRFMode
           _RegisterSet
             _SPI1_Exchange8bit
       _NVMInit
         _NVMalloc
     _MiApp_SetChannel
       _EEPROM_Write
         _MacroNop
         _SPIGet2
           _SPIPut2
         _SPIPut2
       _MiMAC_SetChannel
         _RegisterSet
           _SPI1_Exchange8bit
         _SetRFMode
           _RegisterSet
             _SPI1_Exchange8bit
     _Read_MAC_Address
       _EEPROM_Read
         _SPIGet2
           _SPIPut2
         _SPIPut2
   _Run_Demo
     _run_star_demo
       _ButtonPressed
         _MiWi_TickGet
       _CheckForData
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPI1_Exchange8bit
               _RegisterSet
                 _SPI1_Exchange8bit
               _SetRFMode
                 _RegisterSet
                   _SPI1_Exchange8bit
               _WriteFIFO
                 _SPI1_Exchange8bit
       _DELAY_ms
       _DemoOutput_UpdateTxRx
         _LCDTRXCount
           _LCD_Erase
             _DELAY_ms
             _LCD_WriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCD_WriteCmd
               _SPIPut2
             _LCD_WriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _LCDDisplay
         _DELAY_ms
         _LCD_Erase
           _DELAY_ms
           _LCD_WriteCmd
             _SPIPut2
           _memset
         _LCD_Update
           _LCD_WriteCmd
             _SPIPut2
           _LCD_WriteData
             _SPIPut2
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _LCD_BacklightOFF
       _LCD_BacklightON
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _MiApp_DiscardMessage
         _MiMAC_DiscardPacket
       _MiApp_EstablishConnection
         _MiApp_DiscardMessage
           _MiMAC_DiscardPacket
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _Total_Connections
               _isSameAddress
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                     _DELAY_ms
                     _LCD_WriteCmd
                       _SPIPut2
                     _memset
                   _LCD_Update
                     _LCD_WriteCmd
                       _SPIPut2
                     _LCD_WriteData
                       _SPIPut2
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                         _MiWi_TickGet
                         _RegisterRead
                           _SPI1_Exchange8bit
                         _RegisterSet
                           _SPI1_Exchange8bit
                         _SetRFMode
                           _RegisterSet
                             _SPI1_Exchange8bit
                         _WriteFIFO
                           _SPI1_Exchange8bit
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
             _StartChannelHopping
               _MiApp_SetChannel
                 _EEPROM_Write
                   _MacroNop
                   _SPIGet2
                     _SPIPut2
                   _SPIPut2
                 _MiMAC_SetChannel
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
               _MiWi_TickGet
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _isSameAddress
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPI1_Exchange8bit
               _RegisterSet
                 _SPI1_Exchange8bit
               _SetRFMode
                 _RegisterSet
                   _SPI1_Exchange8bit
               _WriteFIFO
                 _SPI1_Exchange8bit
       _MiApp_MessageAvailable
         _P2PTasks
           _AddConnection
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Total_Connections
             _isSameAddress
           _EEPROM_Write
             _MacroNop
             _SPIGet2
               _SPIPut2
             _SPIPut2
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                   _DELAY_ms
                   _LCD_WriteCmd
                     _SPIPut2
                   _memset
                 _LCD_Update
                   _LCD_WriteCmd
                     _SPIPut2
                   _LCD_WriteData
                     _SPIPut2
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPI1_Exchange8bit
                       _RegisterSet
                         _SPI1_Exchange8bit
                       _SetRFMode
                         _RegisterSet
                           _SPI1_Exchange8bit
                       _WriteFIFO
                         _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
           _MiWi_TickGet
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
           _StartChannelHopping
             _MiApp_SetChannel
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _MiMAC_SetChannel
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
             _MiWi_TickGet
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiApp_TransceiverPowerState
         _CheckForData
           _MiWi_TickGet
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
         _EEPROM_Write
           _MacroNop
           _SPIGet2
             _SPIPut2
           _SPIPut2
         _MiMAC_PowerState
           _DELAY_ms
           _SetRFMode
             _RegisterSet
               _SPI1_Exchange8bit
         _P2PTasks
           _AddConnection
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Total_Connections
             _isSameAddress
           _EEPROM_Write
             _MacroNop
             _SPIGet2
               _SPIPut2
             _SPIPut2
           _Find_Index
           _Forward_Packet_PANCr_to_EDy
             _DemoOutput_UnicastFail
               _LCDDisplay
                 _DELAY_ms
                 _LCD_Erase
                   _DELAY_ms
                   _LCD_WriteCmd
                     _SPIPut2
                   _memset
                 _LCD_Update
                   _LCD_WriteCmd
                     _SPIPut2
                   _LCD_WriteData
                     _SPIPut2
                 _sprintf
                   ___lwdiv
                   ___lwmod
                     ___lwdiv (ARG)
                   ___wmul
                   _isdigit
             _MiApp_UnicastConnection
               _MiApp_UnicastAddress
                 _SendPacket
                   _MiMAC_SendPacket
                     _TxPacket
                       _DELAY_10us
                       _MiWi_TickGet
                       _RegisterRead
                         _SPI1_Exchange8bit
                       _RegisterSet
                         _SPI1_Exchange8bit
                       _SetRFMode
                         _RegisterSet
                           _SPI1_Exchange8bit
                       _WriteFIFO
                         _SPI1_Exchange8bit
           _MiMAC_DiscardPacket
           _MiMAC_ReceivedPacket
             _MiWi_TickGet
           _MiWi_TickGet
           _SW_Ack_SrED
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
           _StartChannelHopping
             _MiApp_SetChannel
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _MiMAC_SetChannel
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
             _MiWi_TickGet
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
           _isSameAddress
           _store_connection_tb
             _handle_lost_connection
       _MiApp_UnicastConnection
         _MiApp_UnicastAddress
           _SendPacket
             _MiMAC_SendPacket
               _TxPacket
                 _DELAY_10us
                 _MiWi_TickGet
                 _RegisterRead
                   _SPI1_Exchange8bit
                 _RegisterSet
                   _SPI1_Exchange8bit
                 _SetRFMode
                   _RegisterSet
                     _SPI1_Exchange8bit
                 _WriteFIFO
                   _SPI1_Exchange8bit
       _MiApp_UnicastStar
         _MiApp_MessageAvailable
           _P2PTasks
             _AddConnection
               _EEPROM_Write
                 _MacroNop
                 _SPIGet2
                   _SPIPut2
                 _SPIPut2
               _Total_Connections
               _isSameAddress
             _EEPROM_Write
               _MacroNop
               _SPIGet2
                 _SPIPut2
               _SPIPut2
             _Find_Index
             _Forward_Packet_PANCr_to_EDy
               _DemoOutput_UnicastFail
                 _LCDDisplay
                   _DELAY_ms
                   _LCD_Erase
                     _DELAY_ms
                     _LCD_WriteCmd
                       _SPIPut2
                     _memset
                   _LCD_Update
                     _LCD_WriteCmd
                       _SPIPut2
                     _LCD_WriteData
                       _SPIPut2
                   _sprintf
                     ___lwdiv
                     ___lwmod
                       ___lwdiv (ARG)
                     ___wmul
                     _isdigit
               _MiApp_UnicastConnection
                 _MiApp_UnicastAddress
                   _SendPacket
                     _MiMAC_SendPacket
                       _TxPacket
                         _DELAY_10us
                         _MiWi_TickGet
                         _RegisterRead
                           _SPI1_Exchange8bit
                         _RegisterSet
                           _SPI1_Exchange8bit
                         _SetRFMode
                           _RegisterSet
                             _SPI1_Exchange8bit
                         _WriteFIFO
                           _SPI1_Exchange8bit
             _MiMAC_DiscardPacket
             _MiMAC_ReceivedPacket
               _MiWi_TickGet
             _MiWi_TickGet
             _SW_Ack_SrED
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _SendPacket
               _MiMAC_SendPacket
                 _TxPacket
                   _DELAY_10us
                   _MiWi_TickGet
                   _RegisterRead
                     _SPI1_Exchange8bit
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
                   _WriteFIFO
                     _SPI1_Exchange8bit
             _StartChannelHopping
               _MiApp_SetChannel
                 _EEPROM_Write
                   _MacroNop
                   _SPIGet2
                     _SPIPut2
                   _SPIPut2
                 _MiMAC_SetChannel
                   _RegisterSet
                     _SPI1_Exchange8bit
                   _SetRFMode
                     _RegisterSet
                       _SPI1_Exchange8bit
               _MiWi_TickGet
               _SendPacket
                 _MiMAC_SendPacket
                   _TxPacket
                     _DELAY_10us
                     _MiWi_TickGet
                     _RegisterRead
                       _SPI1_Exchange8bit
                     _RegisterSet
                       _SPI1_Exchange8bit
                     _SetRFMode
                       _RegisterSet
                         _SPI1_Exchange8bit
                     _WriteFIFO
                       _SPI1_Exchange8bit
             _isSameAddress
             _store_connection_tb
               _handle_lost_connection
         _MiWi_TickGet
         _SendPacket
           _MiMAC_SendPacket
             _TxPacket
               _DELAY_10us
               _MiWi_TickGet
               _RegisterRead
                 _SPI1_Exchange8bit
               _RegisterSet
                 _SPI1_Exchange8bit
               _SetRFMode
                 _RegisterSet
                   _SPI1_Exchange8bit
               _WriteFIFO
                 _SPI1_Exchange8bit
       _MiWi_TickGet
       _STAR_DEMO_OPTIONS_MESSAGE
         _LCDDisplay
           _DELAY_ms
           _LCD_Erase
             _DELAY_ms
             _LCD_WriteCmd
               _SPIPut2
             _memset
           _LCD_Update
             _LCD_WriteCmd
               _SPIPut2
             _LCD_WriteData
               _SPIPut2
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
   _SYSTEM_Initialize
     _LCD_Initialize
       _DELAY_ms
       _LCD_WriteCmd
         _SPIPut2
   _TMR1_Initialize
     _TMR1_StartTimer
   _freezer_feature
     _ButtonPressed
       _MiWi_TickGet
     _LCDDisplay
       _DELAY_ms
       _LCD_Erase
         _DELAY_ms
         _LCD_WriteCmd
           _SPIPut2
         _memset
       _LCD_Update
         _LCD_WriteCmd
           _SPIPut2
         _LCD_WriteData
           _SPIPut2
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit

 _low_isr (ROOT)
   i1_RegisterRead
     i1_SPI1_Exchange8bit

 _high_isr (ROOT)
   _UserInterruptHandler
   i2_MiWi_TickGet
   i2_RegisterRead
     i2_SPI1_Exchange8bit
   i2_SPI1_Exchange8bit
   i2_TxPacket
     i2_DELAY_10us
     i2_MiWi_TickGet
     i2_RegisterRead
       i2_SPI1_Exchange8bit
     i2_RegisterSet
       i2_SPI1_Exchange8bit
     i2_SetRFMode
       i2_RegisterSet
         i2_SPI1_Exchange8bit
     i2_WriteFIFO
       i2_SPI1_Exchange8bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EBF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      FE      10       99.2%
BITBANK1           100      0       0       7        0.0%
BANK1              100      C      ED       8       92.6%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6C      97       5       94.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3B      5E       1      100.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2E0       6        0.0%
DATA                 0      0     2E0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Feb 14 03:46:02 2016

                          _SPI1_Exchange8bit 3316                                   i2_TxPacket 1B66  
                     _PUSH_BUTTON_press_time 0181                                            _i 00EA  
                             _LCD_Initialize 1D6C                          EEPROM_Write@oldRFIE 006F  
                        P2PTasks@final_index 00B7                    __end_of_MiApp_UnicastStar 290C  
                       ?_MiMAC_DiscardPacket 0001                               ?_isSameAddress 0069  
                         ?_SPI1_Exchange8bit 0001                                           l90 1A84  
                                         l88 1A4A                                           l89 1A4C  
                                         _t1 0189                                           _t2 0044  
                                         _t3 0048                                  ?_LCD_Update 0001  
                                         bsr 000FE0                          ___wmul@multiplicand 006B  
                        MiApp_ProtocolInit@i 007F                                   _MiMAC_Init 238E  
                            _P2PCapacityInfo 00DE                                          l102 1AD6  
                                        l150 1CFC                                          l151 1D34  
                                        l145 1CB6                                          l163 158C  
                                        l169 1614                                          l513 111E  
                                        l509 110A                                          l517 16B6  
                                        l710 1FDA                                          l614 19AE  
                                        l383 2CF2                                          l464 1108  
                                        l536 2B26                                          l545 2BA2  
                                        l529 2AE2                                          l458 0CEE  
                                        l475 0E68                                          l709 1FEA  
                             ?i2_RegisterSet 0002                                          l718 20BA  
                                        l910 2C88                                          l719 20AA  
                                        l487 0F96                                          l664 1820  
                                        l673 21B6                                          l907 2C6C  
                                        l693 3094                                          l863 32F0  
                                        l865 32FA                                          l857 3320  
                            _timer1ReloadVal 004C                          ??_SPI1_Exchange8bit 0069  
                                        _tt1 018D                                          _tt2 0191  
                            ??_AddConnection 0071                                  LCDDisplay@i 009C  
                                        prod 000FF3                                          wreg 000FE8  
                        __size_of_DELAY_10us 00D2                                  i2_WriteFIFO 3052  
                              NVMInit@result 006E            __end_of_MiApp_EstablishConnection 1A40  
                          _Total_Connections 2CB0                                         l1115 257E  
                                       l1222 2A14                                         l1404 01C0  
                                       l1333 09C4                                         l1407 01FA  
                                       l1408 01FE                                         l1337 0ABC  
                                       l1329 08B4                                         l1453 0486  
                                       l1373 0076                                         l1470 062E  
                                       l1390 0180                                         l1455 04AC  
                                       l1447 0414                                         l1456 04B0  
                                       l1474 0594                                         l1458 04D0  
                                       l1389 01B6                                         l1903 2DD6  
                                       l1913 2F9A                                         l8002 0294  
                                       l8020 030E                                         l8004 02CE  
                                       l6270 3104                                         l8200 06FE  
                                       l8112 04CA                                         l8104 048A  
                                       l8040 0348                                         l8016 02FC  
                                       l8210 0732                                         l8202 0710  
                                       l8042 034C                                         l8026 031C  
                                       l8028 0320                                         l9100 2B3C  
                                       l8230 2818                                         l8206 071E  
                                       l8118 04E0                                         l8134 0532  
                                       l8142 0552                                         l8054 0374  
                                       l8070 03A0                                         l8152 0578  
                                       l8128 051E                                         l8080 03D8  
                                       l8056 0378                                         l8072 03B2  
                                       l8216 074E                                         l7600 299C  
                                       l9024 23B0                                         l9120 2908  
                            ?i2_RegisterRead 0001                                         l8234 2830  
                                       l8162 05A4                                         l8146 055C  
                                       l8218 0766                                         l8330 277C  
                                       l9034 23CC                                         l8252 2870  
                                       l8236 2842                                         l8092 0418  
                                       l8076 03C6                                         l8316 2750  
                                       l8420 313E                                         l7612 29D2  
                                       l7604 29AE                                         l8500 164C  
                                       l9108 28C0                                         l8254 2882  
                                       l8166 05D4                                         l8086 03EE  
                                       l8350 2F52                                         l8414 311E  
                                       l7710 1B62                                         l9070 30E4  
                                       l9118 2904                                         l9214 3246  
                                       l8248 2858                                         l8192 06A8  
                                       l8184 0630                                         l8168 05DA  
                                       l7632 2C94                                         l7608 29C0  
                                       l8264 2686                                         l9064 30CE  
                                       l7802 318C                                         l8186 066E  
                                       l8178 061A                                         l8098 044A  
                                       l8290 2710                                         l8362 2CB4  
                                       l8530 2546                                         l7618 29E2  
                                       l9146 194C                                         l9138 1922  
                                       l9082 2B0C                                         l7812 32C8  
                                       l8196 06CC                                         l7900 0080  
                                       l8620 180C                                         l8516 24C6  
                                       l8532 254A                                         l7708 1B58  
                                       l7740 1C8C                                         l9324 2790  
                                       l9404 0796                                         l7830 2DAE  
                                       l7902 0084                                         l7910 0092  
                                       l8630 181A                                         l7646 1A54  
                                       l8438 3170                                         l8382 2918  
                                       l8390 2954                                         l8550 1E78  
                                       l9262 1666                                         l9238 25A2  
                                       l9246 25EC                                         l9094 2B32  
                                       l9086 2B1A                                         l9078 2AFE  
                                       l9430 0878                                         l9422 0820  
       __size_of_Forward_Packet_PANCr_to_EDy 009A                                         l7840 2DCC  
                                       l7832 2DB2                                         l7904 0088  
                                       l8368 2CF0                                         l8624 1814  
                                       l8616 1802                                         l8608 17C6  
                                       l7680 1ACE                                         l7672 1ABE  
                                       l7760 1CEC                                         l8472 158E  
                                       l8448 14D8                                         l8560 1F1E  
                                       l9184 19FA                                         l9272 16BA  
                                       l9096 2B36                                         l9504 0B46  
                                       l9440 08A0                                         l7850 2F7A  
                                       l7906 008C                                         l7658 1A74  
                                       l7770 1D24                                         l7754 1CCC  
                                       l8482 15DE                                         l8458 157E  
                                       l8546 1E52                                         l8810 0EFC  
                                       l8722 0D56                                         l9194 1A28  
                                       l9338 27DE                                         l9530 0BE8  
                                       l7828 2DA6                                         l7852 2F7E  
                                       l8652 18A6                                         l7596 298A  
                                       l7692 1B02                                         l7668 1AA8  
                                       l7772 1D38                                         l7764 1D04  
                                       l8388 2950                                         l8900 10B6  
                                       l9284 16E0                                         l9532 0BEA  
                                       l9516 0B8E                                         l9508 0B4E  
                                       l9524 0BB0                                         l9460 0A5E  
                                       l9540 0C04                                         l7950 01A2  
                                       l7934 0146                                         l7918 00C8  
                                       l7926 0120                                         l8638 1822  
                                       l7694 1B06                                         l8670 21A2  
                                       l8822 0F22                                         l8814 0F06  
                                       l8750 0DE0                                         l8910 10CA  
                                       l9198 1A34                                         l9286 173E  
                                       l9470 0A82                                         l9534 0BEE  
                                       l9454 0948                                         l7856 2F90  
                                       l7848 2F72                                         l7952 01BA  
                                       l7696 1B0E                                         l8584 2484  
                                       l8488 1618                                         l8824 0F3E  
                                       l8760 0DEE                                         l9288 177A  
                                       l9712 2A2A                                         l9448 08BC  
                                       l9536 0BF6                                         l7962 01E6  
                                       l7954 01BE                                         l7946 0184  
                                       l9394 2F08                                         l7778 1D58  
                                       l8738 0DC6                                         l9482 0AAE  
                                       l9474 0A8A                                         l7972 0214  
                                       l7980 023C                                         l7956 01C4  
                                       l9396 2F1C                                         l8916 1112  
                                       l8860 101C                                         l8852 0FB0  
                                       l8844 0F9C                                         l8836 0F80  
                                       l8756 0DE6                                         l9724 2A54  
                                       l8932 2C1C                                         l9556 0C7C  
                                       l9484 0AB6                                         l9564 0C8E  
                                       l7798 317C                                         l7990 0272  
                                       l7974 0224                                         l7894 005E  
                                       l8598 24BE                                         l8926 2C10  
                                       l7984 0250                                         l7968 0204  
                                       l8776 0E28                                         l9744 328E  
                                       l7994 0280                                         l8882 105C  
                                       l8874 1050                                         l8866 1028  
                                       l8946 2C38                                         l9690 322E  
                                       l7988 0260                                         l8892 1084  
                                       l7998 028E                                         l8798 0E7E  
                                       l8958 2C54                                         l9678 3222  
                                       STR_1 FF25                                         STR_2 FFC4  
                                       STR_4 FFAA                                         STR_8 FD8D  
                     __size_of_ButtonPressed 0094                                         u7210 234C  
                                       u7205 233E                                         u7206 2342  
                                       u7150 2300                                         u7170 2318  
                  DemoOutput_Channel@channel 009E                                         u7228 2350  
                                       u9100 07D8                                         u8070 156C  
                                       u9110 0860                                         u7168 2304  
                                       u6705 2E9C                                         i2l90 1BAA  
                                       u6706 2E9E                                         u6715 2EA8  
                                       u7195 2332                                         u6716 2EAA  
                                       u6900 1B4A                                         u7196 2336  
                                       u7188 231C                                         u8340 21F4  
                                       u8420 0D74                                         u6725 2D82  
                                       u6726 2D84                                         u6735 2D8E  
                                       u9055 1796                                         i2l88 1B6E  
                                       u6736 2D90                                         u8440 0D9C  
                                       u9056 179A                                         i2l89 1B70  
                                       u6745 2FD0                                         u6746 2FD2  
                                       u8370 0CEC                                         u6755 2FDC  
                                       u8435 0D8A                                         u7580 047C  
                                       u6756 2FDE                                         u8428 0D78  
                                       u8437 0D8E                                         u8390 0D40  
                                       u8465 0DB6                                         u8458 0DA0  
                                       u8467 0DBA                                         u7780 0732  
                                       u6980 1C96                                         u8840 2900  
                                       u6998 1C9A                                         u7895 278A  
                                       u7896 278C                                         u8880 198A  
                                       u8990 25EA                                         _TMR1 000FCE  
                                       _MiWi FC71                      i1SPI1_Exchange8bit@data 0060  
                         ?_Total_Connections 0001                       MiApp_UnicastStar@SecEn 00C5  
                 MiMAC_SetChannel@offsetFreq 006F                                         _main 3276  
                            __end_of_SPIGet2 33B4                              __end_of_NVMInit 267A  
                                       _role 00F6                                         fsr1h 000FE2  
                                       fsr2h 000FDA                                         indf1 000FE7  
                                       fsr1l 000FE1                                         indf2 000FDF  
                                       fsr2l 000FD9                                         btemp 005F  
                            __end_of_SPIPut2 3302                           __size_of_LCD_Erase 0028  
                                       prodh 000FF4                                         prodl 000FF3  
                                       start 0054                       __size_of_run_star_demo 0526  
                  __end_of_SPI1_Exchange8bit 3328                             __end_of_DELAY_ms 20CC  
                              ?_LCD_WriteCmd 0001                                 _sprintf$3815 008A  
                               _sprintf$3808 0086                                 _sprintf$3809 0088  
                        ??_Total_Connections 0069                       __end_of_LCD_Initialize 1E4E  
                              _LCD_WriteData 334C                               _InitConfigRegs FCEF  
                               high_isr@bAck 0036                                 ___param_bank 000010  
                      ??_MiMAC_DiscardPacket 0069                         __end_of_EEPROM_Write 278E  
                           __end_of_P2PTasks 1124                 __end_of_MiApp_DiscardMessage 33BA  
                              __CFG_PLLDIV$2 000000                                   _Find_Index 24C2  
                 MiMAC_PowerState@PowerState 0077                                        ?_main 0001  
                __end_of_StartChannelHopping 2248                                        STR_20 FE96  
              MiApp_EstablishConnection@Mode 00B9                                        STR_13 FF8C  
                                      STR_21 FEB2                                        STR_22 FFEF  
                                      STR_30 FFDB                                        STR_14 FF9C  
                                      STR_31 FFD0                                        STR_15 FE3F  
                                      STR_24 FF7C                                        STR_32 FECC  
                                      STR_16 FDE0                                        STR_33 FEE5  
                                      STR_17 FE20                                        STR_25 FDBF  
                                      STR_34 FEE5                                        STR_18 FE5D  
                                      STR_26 FE00                                        STR_19 FFE6  
                                      STR_27 FF6B                                        STR_35 FF5A  
                                      STR_36 FF11                                        STR_28 FEFB  
                                      STR_37 FFB8                                        STR_29 FE7A  
                                      STR_38 FF38                                        STR_39 FF49  
                            _TMR1_StartTimer 33BE                                        _T1CON 000FCD  
                                LCD_Update@i 006B                      ?_DemoOutput_Instruction 0001  
                            __end_of___lwdiv 2DE0                                        i2l102 1BF8  
                            __end_of___lwmod 2FA4                                        i2l210 11DC  
                                      i2l204 119E                                        i2l213 1264  
                                      i1l189 0044                                        i2l223 1372  
                                      i2l197 1180                                        i2l710 217C  
                                      i2l199 11B6                                        i1l857 337A  
                                      i2l709 218A                                        i2l910 2D22  
                                      i2l907 2D06                                        i2l857 338A  
                                      _TMR1H 000FCF                                        _TMR0L 000FD6  
                                      _TMR1L 000FCE                             SendPacket@tParam 009D  
                      __size_of_CheckForData 0060                       ?_DemoOutput_UpdateTxRx 009A  
                          high_isr@BankIndex 003A                    __end_of_Total_Connections 2CFE  
                                      _RxNum 00E4                       run_star_demo@select_ed 01EC  
                                      _TxNum 00E6                          __size_of_LCDDisplay 003E  
              __size_of_MiApp_ConnectionMode 0034                                        _awake 00E7  
                            __end_of_dpowers FD85                             SendPacket@status 009B  
                 store_connection_tb@payload 0070                __size_of_MiApp_UnicastAddress 0014  
                                _SW_Ack_SrED 319C                              __end_of_isdigit 32D0  
                    __end_of_TMR1_Initialize 32EA                              __end_of_low_isr 0054  
                           __end_of_NVMalloc 311C                                        tablat 000FF5  
                             ButtonPressed@t 0077                  __end_ofi2_SPI1_Exchange8bit 3392  
                        __size_of_LCD_Update 0080                                        status 000FD8  
                            __end_of_sprintf 0772          __end_of_MiApp_TransceiverPowerState 2B4C  
                _MiApp_TransceiverPowerState 2ADE                       run_star_demo@update_ed 01E9  
                           EEPROM_Write@addr 006C                       __end_of_InitConfigRegs FD2F  
                           EEPROM_Write@dest 006A                               ??_LCD_WriteCmd 006A  
                              ?i2_DELAY_10us 0001                               ?_LCD_WriteData 0001  
                  __size_of_MiMAC_SetChannel 008C                         __size_of_EEPROM_Read 0032  
          StartChannelHopping@OptimalChannel 00AC                    __size_of_Read_MAC_Address 0080  
                __end_of_DemoOutput_Greeting 32B2                              ?_LCD_Initialize 0001  
                               __end_of_MiWi FCEF                              __initialization 2BAC  
               __size_ofi1_SPI1_Exchange8bit 0012                              ??_isSameAddress 006D  
                                ?i2_TxPacket 0011                    __size_of_MiMAC_SendPacket 00E8  
       STAR_DEMO_OPTIONS_MESSAGE@NetworkRole 009D                             __end_of_MacroNop 33D2  
                               __end_of_main 3294                      handle_lost_connection@i 006F  
                 __size_of_MiApp_UnicastStar 007E                               TxPacket@status 008A  
                              _ButtonPressed 255A                                 _CheckForData 2B4C  
                            ??i2_RegisterSet 0004       MiApp_UnicastConnection@ConnectionIndex 00A5  
             __end_of_DemoOutput_Instruction 334C                     i1RegisterRead@IRQ0select 0064  
                   i1RegisterRead@IRQ1select 0063                                ??_RegisterSet 006C  
                          high_isr@PacketLen 0039                                       ??_main 00CB  
                                ?_MiMAC_Init 0077                      _DemoOutput_ChannelError 33D2  
                              __activetblptr 000002                            __end_of_LCD_Erase 31EC  
                              _run_star_demo 0772                         __end_of_MiWi_TickGet 2CB0  
                              _IRQ1_Received 00DB                             ??i1_RegisterRead 0061  
                    MiApp_SetChannel@channel 0072                         store_connection_tb@i 0075  
                       store_connection_tb@j 0074                             __end_of_TxPacket 1B66  
               __size_of_store_connection_tb 00DC                             __end_of_Run_Demo 33C6  
          MiApp_ProtocolInit@bNetworkFreezer 007B                         _MiMAC_ReceivedPacket 14D6  
                            i2SetRFMode@mode 0006                                   _SendPacket 22F0  
                                  ??_SPIGet2 006A                                    ??_NVMInit 006E  
                                     _EECON2 000FA7                                       _ANCON0 000F48  
                                     _ANCON1 000F49                                    ??_SPIPut2 0069  
                   ?_MiApp_UnicastConnection 00A4                                       _T1GCON 000F9A  
                                     _MACSeq 00DD                               __CFG_WDTEN$OFF 000000  
                                     i1l7292 002E                                       i2l7010 2D2E  
                                     i2l7224 1B7A                                       i2l7234 1B9A  
                                     i2l7244 1BCA                                       i2l7324 1174  
                                     i2l7316 1156                                       i2l7270 1C28  
                                     i2l7406 130C                                       i2l7272 1C2E  
                                     i2l7256 1BEE                                       i2l7248 1BDE  
                                     i2l7336 1196                                       i2l7328 1182  
                                     i2l7442 13D4                                       i2l7426 1352  
                                     i2l7346 11C0                                       i2l7268 1C24  
                                     i2l7284 1C78                                       i2l7452 13F8  
                                     i2l7436 1374                                       i2l7462 1460  
                                     i2l7382 123C                                       i2l7448 13F0  
                                     i2l7464 1476                                       i2l7472 1486  
                                     i2l7482 14A4                                       i2l7394 12E0  
                                     i2l7378 1234                                       i2l7466 147E  
                                     i2l7388 1292                                       i2l7396 12E2  
                                     i2l7468 1482                                       i2l7494 14B6  
                                     i2l7398 12F4                                       i2l6960 2A82  
                                     i2l6972 2AB8                                       i2l6964 2A94  
                                     i2l6956 2A70                                       i2l6968 2AA6  
                                     i2l6978 2AC8                                       _OSCCON 000FD3  
                                     _PVALUE FD2F                                       _RPOR21 000EDB  
                                     _RPINR1 000EE7                                       _RPOR19 000ED9  
                                     _SVALUE FD4F                      i2RegisterSet@IRQ0select 0005  
                  __size_of_MiMAC_PowerState 0058                      i2RegisterSet@IRQ1select 0004  
                      SPI1_Exchange8bit@data 0069                         __size_of_LCDTRXCount 003E  
                             ??i2_DELAY_10us 0005                __size_of_UserInterruptHandler 0002  
                               ??_DELAY_10us 006D                      ?_DemoOutput_UnicastFail 0001  
                 __size_of_SPI1_Exchange8bit 0012                                   TxPacket@t1 007E  
                                 TxPacket@t2 0082                           __size_of_SetRFMode 0076  
                             __CFG_XINST$OFF 000000                                       _TxData 00E5  
                           LCD_WriteCmd@data 006A                             __end_of_high_isr 14D6  
                    __end_of_TMR1_StartTimer 33C2                                       ___wmul 31EC  
                             ?_ButtonPressed 0001                                       _hasAck 00E9  
                   __size_of_freezer_feature 0024                    __size_of_MiApp_SetChannel 002A  
                                  ??___lwdiv 006D                                    ??___lwmod 0074  
                                     _memset 3172                                  ?_Find_Index 0069  
                                     clear_0 2BB2                                       clear_1 2BBE  
                                     clear_2 2BCA                                       clear_3 2BD6  
                                     _nvmEdc 0057                                 NVMalloc@size 0069  
                             ?_run_star_demo 0001                            high_isr@ackPacket 0032  
                                  ??_isdigit 0069                               LCDDisplay@text 0098  
                               __mediumconst FC70                        ?_MiMAC_ReceivedPacket 0001  
                __size_of_DemoOutput_Channel 003E                                    ??_low_isr 0065  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                 __size_of_Total_Connections 004E                                       tblptru 000FF8  
                ??_MiApp_EstablishConnection 00BA                                    ?_DELAY_ms 0069  
                         __end_of_DELAY_10us 1FFC                          __end_of_RegisterSet 2EAC  
                              ?_RegisterRead 0001                          __size_ofi2_TxPacket 011E  
                                  ??_sprintf 0081                            _ReceivedBankIndex 00E3  
                               ?i2_SetRFMode 0001                             ?_TMR1_Initialize 0001  
                          _SYSTEM_Initialize 2248                                    ?_P2PTasks 0001  
                       _MiApp_DiscardMessage 33B4                          _PUSH_BUTTON_pressed 00E0  
                                 __accesstop 0060                           __size_of_WriteFIFO 003C  
                    __end_of__initialization 2BFC                            EEPROM_Write@count 006D  
             __end_of_DemoOutput_UnicastFail 333A                              ??_LCD_WriteData 006A  
                                  P2PTasks@i 00B8              MiMAC_ReceivedPacket@currentTick 007B  
                         ?_SYSTEM_Initialize 0001                          __size_of_MiMAC_Init 009A  
                              ___rparam_used 000001                               _chk_sel_status 00F4  
                       StartChannelHopping@i 00AD                             _LatestConnection 00DC  
                      __size_of_EEPROM_Write 0088                                 ??_LCDDisplay 009C  
                 _myConnectionIndex_in_PanCo 00F2                            high_isr@fifo_stat 0031  
                             __pcstackCOMRAM 0001        Forward_Packet_PANCr_to_EDy@fw_payload 00A6  
                               __pidataBANK0 33BA                          ??_SYSTEM_Initialize 0077  
                      i2RegisterRead@address 0002                     __size_of_Initialize_Demo 0072  
                  ??_DemoOutput_ChannelError 0069                                 ??_LCD_Update 006B  
                    run_star_demo@switch_val 01EB                 ?_Forward_Packet_PANCr_to_EDy 00A6  
                                  ?_NVMalloc 0069                              TxPacket@rssival 0089  
                  __size_of_LCD_BacklightOFF 0004                     CheckForData@firstuint8_t 00A1  
                            _ConnectionTable 0200                             ??i2_RegisterRead 0002  
            __end_of_MiApp_UnicastConnection 3052                         __end_of_LCD_WriteCmd 3370  
                          __end_of_SetRFMode 29FA                                 ?i2_WriteFIFO 0001  
                                 ??_DELAY_ms 006B                    _END_DEVICES_Short_Address 0137  
                             ??_RegisterRead 006A                                  ?_SendPacket 0096  
                         __end_of_LCDDisplay 2F66                    __end_of_SYSTEM_Initialize 22F0  
            MiApp_TransceiverPowerState@Mode 00B9                                 sprintf@width 0093  
                      isSameAddress@Address1 0069                        isSameAddress@Address2 006B  
                                  ?_MacroNop 0001                                 _EEPROM_Write 2706  
                                 __pbssBANK0 00CC                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                        ?_MiApp_DiscardMessage 0001  
                                 ??_P2PTasks 00AE                  __size_of_MiApp_ProtocolInit 0168  
                        __size_of_Find_Index 0098                           RegisterSet@setting 006A  
                         __end_of_LCD_Update 288E                    SendPacket@SecurityEnabled 0099  
                             isSameAddress@i 006F                          i2RegisterRead@value 0003  
                            P2PTasks@FW_Stat 00B2                             _MiMAC_SetChannel 267A  
                      CheckForData@tmpTxData 00A0                    _MiApp_EstablishConnection 190E  
                           _Read_MAC_Address 278E                              ??_ButtonPressed 0073  
                                  ?_TxPacket 0079                             _MiMAC_SendPacket 1C84  
                                  ?_Run_Demo 0001                                      ?___wmul 0069  
                           ?_TMR1_StartTimer 0001                        __size_of_MiWi_TickGet 004E  
                                    ?_memset 0069                              ??_run_star_demo 01E1  
                   __size_of_LCD_BacklightON 0004             run_star_demo@sw_layer_ack_status 01E8  
                                 ??_NVMalloc 006C                            __end_of_WriteFIFO 2FE0  
                    ??_DemoOutput_UpdateTxRx 009B                                  _RegisterSet 2E6C  
                          ??_freezer_feature 009D                ??_Forward_Packet_PANCr_to_EDy 00AB  
                     ??_MiMAC_ReceivedPacket 0073                           __CFG_OSC$INTOSCPLL 000000  
                                    _LCDText 01B8                         __end_ofi2_DELAY_10us 219C  
                      i2WriteFIFO@IRQ0select 0004                        i2WriteFIFO@IRQ1select 0003  
                        i1_SPI1_Exchange8bit 3370                              __CFG_WDTPS$2048 000000  
                      __end_of_AddConnection 190E                                      _RPINR21 000EFB  
                                    _SSP1BUF 000FC9                                      _SSP2BUF 000F75  
                                    _SPIGet2 33AA                                 ?_SW_Ack_SrED 00A0  
                                    _NVMInit 25EE                                      _RF_Mode 00E1  
                                    _AckInfo 015F                                      _SPIPut2 32EA  
                                  ?_high_isr 0001                                      _RSSIVal 004E  
                                 ??_MacroNop 0069           __size_of_STAR_DEMO_OPTIONS_MESSAGE 0020  
                    i2SPI1_Exchange8bit@data 0001                             ??_LCD_Initialize 0077  
                 ?_STAR_DEMO_OPTIONS_MESSAGE 0001                  AddConnection@connectionSlot 0076  
                            _timerExtension1 0050                              _timerExtension2 00ED  
                                TxPacket@CCA 0079                     MiApp_ConnectionMode@Mode 0072  
                           _MiMAC_PowerState 2C0A                             _AdditionalNodeID 00F3  
                __end_of_MiMAC_DiscardPacket 3276                              P2PTasks@tmpTick 00B3  
                                 DELAY_ms@ms 0069                                 _MiWi_TickGet 2C62  
                                    __Hparam 0000                          _store_connection_tb 1E4E  
                                    __Lparam 0000                         ?i1_SPI1_Exchange8bit 0001  
               __end_of_MiApp_ConnectionMode 30BC                                 ??i2_TxPacket 0012  
                                 ??_TxPacket 007A                 __end_of_MiApp_UnicastAddress 3316  
                                 ??_Run_Demo 00CA                            LCD_WriteData@data 006A  
                    __size_ofi2_MiWi_TickGet 004E                              __size_of___wmul 0026  
                           _MiApp_SetChannel 3148                          __size_of_SendPacket 009E  
                                    ___lwdiv 2D96                                      ___lwmod 2F66  
                   ??_handle_lost_connection 0069                                      __pcinit 2BAC  
                            __size_of_memset 002A               DemoOutput_ChannelError@channel 0001  
                                    __ramtop 0F00         __size_of_MiApp_TransceiverPowerState 006E  
                                    __ptext0 3276                                      __ptext1 3212  
                               ??_MiMAC_Init 007A                                      __ptext2 32D0  
                                    __ptext3 33BE                                      __ptext4 2248  
                                    __ptext5 1D6C                                      __ptext6 33C2  
                                    __ptext7 0772                                      __ptext8 3236  
                                    __ptext9 288E                            __end_of_hexpowers FD8D  
                                  _T1CONbits 000FCD                                      _dpowers FD7B  
              Initialize_Demo@freezer_enable 00CA                     ??_MiApp_MessageAvailable 00B9  
                                    _rec_ack 00EC                                      _isdigit 32B2  
                          ??_Initialize_Demo 00CA                                _myLongAddress 01D9  
                       ?_store_connection_tb 0070                       DemoOutput_Channel@Step 009D  
                                    _low_isr 0018                       RegisterRead@IRQ0select 006D  
                                    _nvmRole 005B                       RegisterRead@IRQ1select 006C  
                                  _P2PStatus 00DF                                    _LCD_Erase 31C4  
               __size_of_StartChannelHopping 00AC                   __size_of_SYSTEM_Initialize 00A8  
                                    _sprintf 0058                       ??_MiApp_DiscardMessage 0069  
                                 ??_high_isr 0025                               __pintcode_body 1124  
                         __end_ofi2_TxPacket 1C84                         end_of_initialization 2BFC  
                          __end_of_octpowers FD7B                                ??_EEPROM_Read 006E  
                                    memset@c 006B                                      memset@n 006D  
                                    memset@p 006F                MiMAC_SendPacket@MACPayloadLen 0092  
                              __Lmediumconst FC70                                      int_func 1124  
                       __size_ofi2_SetRFMode 0072                              LCDDisplay@delay 009B  
          i2DELAY_10us@tenMicroSecondCounter 0001              DELAY_10us@tenMicroSecondCounter 0069  
                                 _nvmMyPANID 00EE            __end_of_STAR_DEMO_OPTIONS_MESSAGE 3256  
                            LCDDisplay@value 009A                           __end_of_MiMAC_Init 2428  
                      ??i1_SPI1_Exchange8bit 0060                 __size_ofi2_SPI1_Exchange8bit 0010  
               MiApp_UnicastConnection@SecEn 00A4             __size_of_MiApp_UnicastConnection 0038  
                    MiMAC_SetChannel@channel 0071                                      postdec1 000FE5  
                                    postdec2 000FDD                         __end_of_RegisterRead 2D96  
                                    postinc0 000FEE                                      postinc1 000FE6  
                                    postinc2 000FDE                        __end_of_isSameAddress 3148  
       DELAY_ms@cyclesRequiredForEntireDelay 0073                          RegisterRead@address 006A  
                              WriteFIFO@Data 006A                                 ??_Find_Index 006B  
                 run_star_demo@PressedButton 01EA                        __size_of_LCD_WriteCmd 0012  
               __size_of_DemoOutput_Greeting 001E                                    _PORTBbits 000F81  
                           NVMalloc@location 006B                        __end_ofi2_RegisterSet 301A  
               __end_of_UserInterruptHandler 33D6                             _LCD_BacklightOFF 33CA  
                      ??_store_connection_tb 0072                                   _nvmmyIndex 005D  
                                  _TRISAbits 000F92                                    _TRISBbits 000F93  
                                  _TRISCbits 000F94                                    _TRISDbits 000F95  
                                  _TRISEbits 000F96                            ??_LCD_BacklightON 0069  
                                 ?_LCD_Erase 0001                      MiMAC_SendPacket@TxIndex 0094  
                       __size_ofi2_WriteFIFO 0036                            __size_of_DELAY_ms 00D0  
                              ??_LCDTRXCount 0099                        StartChannelHopping@t1 00A4  
                      StartChannelHopping@t2 00A8                   MiMAC_SendPacket@transParam 008D  
                  MiApp_UnicastAddress@SecEn 00A3                           __end_of_Find_Index 255A  
                             __end_of_PVALUE FD4F                            __size_of_P2PTasks 048C  
                             __end_of_SVALUE FD6F                                 _LCD_WriteCmd 335E  
                        __end_of_EEPROM_Read 30EE                freezer_feature@PressedButton1 009D  
                             __end_of___wmul 3212              __size_of_handle_lost_connection 0078  
                      __size_ofi2_DELAY_10us 00D0           __size_of_MiApp_EstablishConnection 0132  
                             __end_of_memset 319C                   __end_of_DemoOutput_Channel 2F28  
                  Read_MAC_Address@myAddress 006E              __size_of_MiApp_MessageAvailable 000A  
           MiMAC_ReceivedPacket@PayloadIndex 007F                     __end_of_MiMAC_SetChannel 2706  
                          __size_of_NVMalloc 002E                          start_initialization 2BAC  
                   __end_of_Read_MAC_Address 280E                          WriteFIFO@IRQ0select 006C  
                              TxPacket@reTry 0087                          WriteFIFO@IRQ1select 006B  
                   __end_of_MiMAC_SendPacket 1D6C                                 ??_SendPacket 009A  
                       _MiApp_ConnectionMode 3088                           TxPacket@CCARetries 0086  
                 i2TxPacket@allowedTxFailure 0022                              high_isr@counter 002F  
                       _MiApp_UnicastAddress 3302                                    _SetRFMode 2984  
                       __size_of_SW_Ack_SrED 0028                      EEPROM_Write@PageCounter 0070  
                    __size_ofi1_RegisterRead 004A            Forward_Packet_PANCr_to_EDy@status 00AB  
                          __size_of_MacroNop 0004                               _currentChannel 00F1  
                      __end_of_LCD_WriteData 335E                                 i2_DELAY_10us 20CC  
                                  TxPacket@i 008C                          __end_of_LCDTRXCount 2EEA  
MiApp_EstablishConnection@connectionInterval 00C4                     __size_of_TMR1_Initialize 001A  
                   ??_DemoOutput_Instruction 009D                              _freezer_feature 3212  
                             i2_MiWi_TickGet 2CFE                                     ??___wmul 006D  
          MiApp_UnicastAddress@PermanentAddr 00A2                                  __pdataBANK0 00F3  
                          __size_of_TxPacket 0126                           __end_of_SendPacket 238E  
                                   ??_memset 006F                            __size_of_Run_Demo 0004  
                               ?_RegisterSet 006A                     __end_of_MiMAC_PowerState 2C62  
                          RegisterRead@value 006B               __size_of_DemoOutput_UpdateTxRx 000E  
                    MiWi_TickGet@currentTime 006F                __end_of_DemoOutput_UpdateTxRx 33A0  
                                __pbssCOMRAM 003C                                    _WriteFIFO 2FA4  
                              __pcstackBANK0 0060                                __pcstackBANK1 01E1  
                      ?_MiApp_ConnectionMode 0001                          SendPacket@Broadcast 009C  
                                ??_LCD_Erase 0077       MiApp_UnicastAddress@DestinationAddress 00A0  
                      ?_MiApp_UnicastAddress 00A0                                 _isdigit$4039 006A  
                                   ?_SPIGet2 0001                                     ?_NVMInit 0001  
                 __end_of_MiApp_ProtocolInit 17C0                                     ?_SPIPut2 0001  
                 MiApp_EstablishConnection@i 00C9                     __end_of_MiApp_SetChannel 3172  
                                 ?_SetRFMode 0001                            Read_MAC_Address@i 0072  
                     _handle_lost_connection 290C                                  MiMAC_Init@i 007A  
                          __size_of_high_isr 14CE                                  sprintf@flag 0096  
                ??_STAR_DEMO_OPTIONS_MESSAGE 009D                                  _EEPROM_Read 30BC  
                                sprintf@prec 0092                        __size_of_RegisterRead 004A  
                     _MiApp_MessageAvailable 33A0                 ?_MiApp_TransceiverPowerState 0001  
                       _UserInterruptHandler 33D4                       __end_ofi2_MiWi_TickGet 2D4C  
                          MiMAC_SendPacket@i 0095                             ___lwdiv@dividend 0069  
                    _MiApp_UnicastConnection 301A                     ?_DemoOutput_ChannelError 0001  
                                  __pintcode 0008                                __pmediumconst FC70  
                            _Initialize_Demo 29FA                          _StartChannelHopping 219C  
                      __end_of_ButtonPressed 25EE                                     ?___lwdiv 0069  
                                   ?___lwmod 0070                                    _end_nodes 00E8  
                              ?_CheckForData 0001                                  __pintcodelo 0018  
                           _DataRequestTimer 017D                                    _conn_size 00F0  
                      __end_of_run_star_demo 0C98                 Forward_Packet_PANCr_to_EDy@i 00AC  
                   __size_of_TMR1_StartTimer 0004                                     ?_isdigit 0001  
                                   SPIPut2@v 0069                                   ?_WriteFIFO 0001  
                                   ?_low_isr 0001                __size_of_MiMAC_ReceivedPacket 0182  
                        i2_SPI1_Exchange8bit 3382                                     _DELAY_ms 1FFC  
                                  _hexpowers FD85                         ?_StartChannelHopping 0001  
                   ??_DemoOutput_UnicastFail 009D                             ___lwdiv@quotient 006E  
                                   ?_sprintf 0075                                 _RegisterRead 2D4C  
                                _LCDTRXCount 2EAC                                     _P2PTasks 0C98  
                        _DemoOutput_Greeting 3294                      __end_of_freezer_feature 3236  
                             ___wmul@product 006D                      __size_ofi2_RegisterRead 0042  
                                   _LATAbits 000F89                         i2RegisterSet@setting 0002  
                                   _LATCbits 000F8B                                     _LATDbits 000F8C  
                                   _LATEbits 000F8D                     __end_of_LCD_BacklightOFF 33CE  
                      ?_UserInterruptHandler 0001                                    _octpowers FD6F  
                                   _PIE1bits 000F9D                   DemoOutput_UpdateTxRx@RxNum 009A  
                 DemoOutput_UpdateTxRx@TxNum 009B                              ?i2_MiWi_TickGet 0001  
                                   i1u615_25 2E16                                     i1u615_26 2E18  
                                   i1u616_25 2E22                                     i1u616_26 2E24  
                                   i2u600_45 2E66                                     i2u600_46 2E68  
                                   _PIR1bits 000F9E                                     i2u601_45 307A  
                                   i2u601_46 307C                                     i2u602_45 3084  
                                   i2u602_46 3086                                     _PIR3bits 000FA4  
                                   i2u625_40 1C6A                ??_MiApp_TransceiverPowerState 00B9  
                       ?i2_SPI1_Exchange8bit 0001                                    _rxMessage 00CC  
                                   i2u568_45 300C                                     i2u568_46 300E  
                                   i2u569_45 3016                                     i2u569_46 3018  
                         _nvmConnectionTable 0053                                     i2u599_45 2E5C  
                                   i2u599_46 2E5E                          high_isr@RxPacketPtr 0037  
            __size_of_DemoOutput_Instruction 0012                                     _SSP1CON1 000FC6  
                                   _SSP2CON1 000F72                       __size_of_AddConnection 014E  
                             ??_CheckForData 00A0                                     _SSP1STAT 000FC7  
                                   _SSP2STAT 000F73                 __size_of_MiMAC_DiscardPacket 0020  
                            _LCD_BacklightON 33C6     MiApp_EstablishConnection@ActiveScanIndex 0001  
        __end_of_Forward_Packet_PANCr_to_EDy 24C2                  _Forward_Packet_PANCr_to_EDy 2428  
                                _MACRxPacket 003C                         ?_DemoOutput_Greeting 0001  
                                   _RSSILock 00E2                    _STAR_DEMO_OPTIONS_MESSAGE 3236  
                                _MACTxBuffer 0100                            ??_TMR1_Initialize 0069  
                              SetRFMode@mode 006E                                     _NVMalloc 30EE  
                          ___wmul@multiplier 0069                                    high_isr@i 003B  
                      i2TxPacket@TxPacketLen 0016                       ??_MiApp_ConnectionMode 0071  
                         main@freezer_enable 00CB                       ??_MiApp_UnicastAddress 00A4  
                        SendPacket@isCommand 0098                         high_isr@ackInfoIndex 0038  
                      ??_StartChannelHopping 00A0                               _nextEEPosition 00D9  
   i2DELAY_10us@cyclesRequiredForEntireDelay 000D       DELAY_10us@cyclesRequiredForEntireDelay 0075  
                                   _ConnMode 00F5                                  _INTCON2bits 000FF1  
                                _INTCON3bits 000FF0               MiApp_EstablishConnection@retry 00BF  
      Forward_Packet_PANCr_to_EDy@EDxAddress 00A9                                    copy_data0 2BF0  
                              ??i2_SetRFMode 0006                                  ??_SetRFMode 006E  
                                   _MacroNop 33CE                             __size_of_SPIGet2 000A  
                           __size_of_NVMInit 008C                             __size_of_SPIPut2 0018  
                             i1_RegisterRead 2DE0                  __end_ofi1_SPI1_Exchange8bit 3382  
              __size_of_MiApp_DiscardMessage 0006                                     _TxMACSeq 004F  
            __end_of_DemoOutput_ChannelError 33D4                    ??_MiApp_UnicastConnection 00A5  
                    __end_of_Initialize_Demo 2A6C                                   _DELAY_10us 1F2A  
                                   __Hrparam 0000                        ??i2_SPI1_Exchange8bit 0001  
                                   _RxPacket 028C                                     _TxBuffer 0195  
                               _nvmDelayTick 0185                                     __Lrparam 0000  
                                   _TxPacket 1A40                                     _Run_Demo 33C2  
                         Total_Connections@i 006A                      __size_of_LCD_Initialize 00E2  
                      MiMAC_ReceivedPacket@i 0080                  __end_of_store_connection_tb 1F2A  
                      ??_DemoOutput_Greeting 009D                             __size_of___lwdiv 004A  
                           __size_of___lwmod 003E                     i2RegisterRead@IRQ0select 0005  
                   i2RegisterRead@IRQ1select 0004                                   sprintf@idx 0085  
                                 sprintf@len 008D                                   sprintf@val 0090  
                       __size_of_RegisterSet 0040                              _lost_connection 00EB  
                              ??i2_WriteFIFO 0002                                  ??_WriteFIFO 006A  
                           __size_of_isdigit 001E                            ?_MiMAC_SetChannel 006F  
                            ___lwdiv@divisor 006B                       _DemoOutput_Instruction 333A  
                          ?_Read_MAC_Address 006E                              ___lwdiv@counter 006D  
                           __size_of_low_isr 003C                                     __ptext10 2ADE  
                                   __ptext11 2C0A                                     __ptext20 1658  
                                   __ptext12 2B4C                                     __ptext21 25EE  
                                   __ptext13 33C6                                     __ptext30 219C  
                                   __ptext22 30EE                                     __ptext14 33CA  
                                   __ptext31 3148                                     __ptext23 238E  
                                   __ptext15 3392                                     __ptext40 1A40  
                                   __ptext32 267A                                     __ptext24 30BC  
                                   __ptext16 2EAC                                     __ptext41 2FA4  
                                   __ptext33 319C                                     __ptext25 190E  
                                   __ptext17 255A                                     __ptext50 17C0  
                                   __ptext42 2984                                     __ptext34 14D6  
                                   __ptext26 33A0                                     __ptext18 29FA  
                                   __ptext51 311C                                     __ptext43 2E6C  
                                   __ptext35 2428                                     __ptext27 0C98  
                                   __ptext19 278E                                     __ptext60 33D2  
                                   __ptext52 2CB0                                     __ptext44 2D4C  
                                   __ptext36 301A                                     __ptext28 1E4E  
                                   __ptext61 2EEA                                     __ptext53 33B4  
                                   __ptext45 3316                                     __ptext37 3302  
                                   __ptext29 290C                                     __ptext70 334C  
                                   __ptext62 3294                                     __ptext54 3256  
                                   __ptext46 2C62                                     __ptext38 22F0  
                                   __ptext71 31C4                                     __ptext63 2F28  
                                   __ptext55 3088                                     __ptext47 1F2A  
                                   __ptext39 1C84                                     __ptext80 1B66  
                                   __ptext72 3172                                     __ptext64 0058  
                                   __ptext56 2706                                     __ptext48 3328  
                                   __ptext81 3052                                     __ptext73 335E  
                                   __ptext65 32B2                                     __ptext57 33AA  
                                   __ptext49 24C2                                     __ptext82 2A6C  
                                   __ptext74 32EA                                     __ptext66 31EC  
                                   __ptext58 33CE                                     __ptext83 2FE0  
                                   __ptext75 1FFC                                     __ptext67 2F66  
                                   __ptext59 333A                                     __ptext84 2E2A  
                                   __ptext68 2D96                                     __ptext85 3382  
                                   __ptext77 2DE0                                     __ptext69 280E  
                                   __ptext86 2CFE                                     __ptext78 3370  
                                   __ptext87 20CC                                     __ptext88 33D4  
                               _SSP1CON1bits 000FC6                                _AddConnection 17C0  
                   TxPacket@allowedTxFailure 0088                           ??_MiMAC_SetChannel 0070  
                          ?_MiMAC_SendPacket 008D              __size_of_DemoOutput_UnicastFail 0012  
                     __end_ofi1_RegisterRead 2E2A                                     _high_isr 0008  
                         ??_Read_MAC_Address 0070                                 _SSP2CON1bits 000F72  
                              ?_EEPROM_Write 006A                            ??_TMR1_StartTimer 0069  
                           __size_of_sprintf 071A                       __size_of_isSameAddress 002C  
                         ??_MiMAC_SendPacket 0093                           _DemoOutput_Channel 2EEA  
                     ??_UserInterruptHandler 0001                                __size_of_main 001E  
                           ?_freezer_feature 0001                       __size_ofi2_RegisterSet 003A  
                        __end_ofi2_SetRFMode 2ADE                      __end_of_LCD_BacklightON 33CA  
                        ?_DemoOutput_Channel 009D                                   _LCDDisplay 2F28  
                                   int$flags 005F                           LCDTRXCount@rxCount 0098  
                MiApp_EstablishConnection@t1 00C0                  MiApp_EstablishConnection@t2 00C5  
               i2MiWi_TickGet@failureCounter 0006                           LCDTRXCount@txCount 0099  
                          MiMAC_PowerState@i 0078                                 _SSP1STATbits 000FC7  
                                 _LCD_Update 280E                          MiApp_UnicastStar@t1 00BD  
                        MiApp_UnicastStar@t2 00C1                   MiMAC_SendPacket@MACPayload 0090  
                      __CFG_CPUDIV$OSC3_PLL3 000000                                  Find_Index@i 006D  
                          ?_MiMAC_PowerState 0001                                  _OSCTUNEbits 000F9B  
                                 _INTCONbits 000FF2                               AddConnection@i 0077  
                       ??_DemoOutput_Channel 009E                   handle_lost_connection@stat 006E  
                            i2WriteFIFO@Data 0002                      ?_handle_lost_connection 0001  
                         ??_MiMAC_PowerState 0077                               ?_AddConnection 0001  
                ButtonPressed@tickDifference 0073                                     isdigit@c 006B  
                                   memset@p1 0069                                ??_SW_Ack_SrED 00A2  
                             ??_EEPROM_Write 006E                              ?i1_RegisterRead 0001  
                                _nvmConnMode 0051                         SW_Ack_SrED@Dest_Addr 00A0  
                     Total_Connections@count 0069                  MiApp_ProtocolInit@initValue 007C  
                       __end_of_CheckForData 2BAC                                     intlevel1 0000  
                                   intlevel2 0000                            ?_MiApp_SetChannel 0001  
                                  sprintf@ap 008F                                    sprintf@cp 008C  
                                  sprintf@sp 0075                      ?_MiApp_MessageAvailable 0001  
                        __end_ofi2_WriteFIFO 3088                               i2_RegisterRead 2E2A  
                           ___lwmod@dividend 0070                                 ?_EEPROM_Read 006A  
                         ??_MiApp_SetChannel 0072                             ?_Initialize_Demo 0001  
                              ?_MiWi_TickGet 0069                                  ?_DELAY_10us 0069  
                         _MiApp_ProtocolInit 1658                 SendPacket@DestinationAddress 0096  
                     _DemoOutput_UnicastFail 3328                                _MACInitParams 00D6  
                        MiMAC_Init@initValue 0077                        i1RegisterRead@address 0061  
                              _isSameAddress 311C                          ?_MiApp_ProtocolInit 0001  
                 MiWi_TickGet@failureCounter 006E                            _MiApp_UnicastStar 288E  
                                   sprintf@c 0095                                     sprintf@f 0077  
                         ?_MiApp_UnicastStar 0001                                i2_RegisterSet 2FE0  
                                 _PPSCONbits 000EFF             __size_of_DemoOutput_ChannelError 0002  
             __end_of_handle_lost_connection 2984                              ___lwmod@divisor 0072  
 MiApp_EstablishConnection@tmpConnectionMode 00BE                              ___lwmod@counter 0074  
                          i2TxPacket@rssival 0023                          TxPacket@TxPacketLen 008B  
                 ?_MiApp_EstablishConnection 00B9                       __size_of_LCD_WriteData 0012  
                      _DemoOutput_UpdateTxRx 3392                         i2TxPacket@CCARetries 0020  
                                 _WDTCONbits 000FC0                          ??_MiApp_UnicastStar 00B9  
             __end_of_MiApp_MessageAvailable 33AA                       __end_ofi2_RegisterRead 2E6C  
                        _MiMAC_DiscardPacket 3256                                  i2_SetRFMode 2A6C  
                         _nvmOutFrameCounter 0059                            _nvmCurrentChannel 0055  
                       ??_MiApp_ProtocolInit 007B                             i2TxPacket@status 0017  
                               ?_LCDTRXCount 0098                             ??i2_MiWi_TickGet 0005  
                           EEPROM_Read@count 006D                              i2TxPacket@reTry 0021  
                             ??_MiWi_TickGet 006D                          __end_of_SW_Ack_SrED 31C4  
                        i1RegisterRead@value 0062                              EEPROM_Read@addr 006C  
                              i2TxPacket@CCA 0011                    i2MiWi_TickGet@currentTime 0007  
                            EEPROM_Read@dest 006A                            ?_LCD_BacklightOFF 0001  
           Forward_Packet_PANCr_to_EDy@index 00A8                              _TMR1_Initialize 32D0  
                      RegisterSet@IRQ0select 006D                        RegisterSet@IRQ1select 006C  
               __end_of_MiMAC_ReceivedPacket 1658                           Find_Index@DestAddr 0069  
                           ?_LCD_BacklightON 0001                                 i2TxPacket@t1 0018  
                               i2TxPacket@t2 001C                                  ?_LCDDisplay 0098  
                                i2TxPacket@i 0024                           ??_LCD_BacklightOFF 0069  
