/*************************************************************************
 *
 *
 *    (c) Copyright Olimex 2011
 *
 *    File name   : PIR.c
 *    Description : API for the PIR sensor
 *
 *    History :
 *    1. Date        : 05 July 2011
 *       Author      : Aleksandar Mitev
 *       Description : Create
 *
 **************************************************************************/
#ifdef PIR_H
#define PIR_EXTERN
#else
#define PIR_EXTERN extern
#endif

#ifndef _PIR_H
#define _PIR_H

/******************************************************************************
* Description: PIR_Initialize(..) - initializes pins and comapartors that the PIR should use
* Input: 	none
* Output: 	none
* Return:	0 if sucessfully initialized, -1 if error occured 
*******************************************************************************/
char PIR_Initialize(void);

/******************************************************************************
* Description: PIR_PowerEnable(..) - enables power to the PIR sensor
* Input: 	enable - TRUE to power the PIR, FALSE to remove power
* Output: 	none
* Return:	none 
*******************************************************************************/
void PIR_PowerEnable(BOOL enable);

/******************************************************************************
* Description: PIR_InterruptEnable(..) - enables interrupt generated by the comparators
* Input: 	enable - TRUE to enable interrupt, FALSE to disable
* Output: 	none
* Return:	none
*******************************************************************************/
void PIR_InterruptEnable(BOOL enable);

/******************************************************************************
* Description: PIR_InterruptClear(..) - clear interrupts from comparators
* Input: 	none
* Output: 	none
* Return:	none
*******************************************************************************/
void PIR_InterruptClear(void);

/******************************************************************************
* Description: PIR_GetState(..) - get the current state of the PIR sensor
* Input: 	none
* Output: 	none
* Return:	1 if active, 0 if not
*******************************************************************************/
char PIR_GetState(void);

/******************************************************************************
* Description: PIR_GetTrigger(..) - get a flag that indicates if the comparators have triggered
* Input: 	none
* Output: 	none
* Return:	1 if trigger has been activated, 0 if not
*******************************************************************************/
char PIR_GetTrigger(void);

/******************************************************************************
* Description: PIR_ClearTrigger(..) - clears the flag that indicates if the comparators have triggered
* Input: 	none
* Output: 	none
* Return:	none
*******************************************************************************/
void PIR_ClearTrigger(void);

/******************************************************************************
* Description: PIR_Isr(..) - p[lace in the main interrupt service routine
* Input: 	none
* Output: 	none
* Return:	none
*******************************************************************************/
void PIR_Isr(void);

#endif // _PIR_H

PIR_EXTERN  BOOL btn1Lock, btn2Lock, pirLock;
PIR_EXTERN  WORD pirInterval;
PIR_EXTERN  BYTE SendPirFlag;
